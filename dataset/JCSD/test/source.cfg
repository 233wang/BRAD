{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax activation activation data flavor r0", "r2 human presentable name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = javax activation command map r0", "$ r3 = r4 create data content handler r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r9 = javax activation data handler r0", "$ r1 = r9 data source", "if $ r1 == null goto label1", "r10 = javax activation data handler r0", "$ r5 = specialinvoke r10 get command map", "r11 = javax activation data handler r0", "$ r6 = specialinvoke r11 get base type", "r12 = javax activation data handler r0", "$ r7 = r12 data source", "$ r8 = $ r5 get all command $ r6 $ r7", "return $ r8", "if $ r1 == null goto label1", "label r13 = javax activation data handler r0", "$ r2 = specialinvoke r13 get command map", "r14 = javax activation data handler r0", "$ r3 = specialinvoke r14 get base type", "$ r4 = $ r2 get all command $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = javax activation file data source r0", "$ r1 = r3 _file", "$ r2 = $ r1 get name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javax activation mime type r0", "$ r1 = r2 parameter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org json j s o n array r0", "$ r1 = r2 value", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "label r6 = new org json j s o n stringer", "specialinvoke r6 < init >", "r7 = org json j s o n array r0", "r7 write to r6", "$ r2 = r6 to string", "label return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label01", "$ r13 = org json j s o n object null", "return $ r13", "if r0 ! = null goto label01", "label $ z0 = r0 instanceof org json j s o n array", "if $ z0 ! = 0 goto label02", "$ z1 = r0 instanceof org json j s o n object", "if $ z1 == 0 goto label03", "label return r0", "if $ z1 == 0 goto label03", "label $ r2 = org json j s o n object null", "$ z2 = r0 equal $ r2", "if $ z2 == 0 goto label04", "return r0", "if $ z2 == 0 goto label04", "label $ z3 = r0 instanceof java util collection", "if $ z3 == 0 goto label06", "$ r11 = new org json j s o n array", "$ r12 = java util collection r0", "specialinvoke $ r11 < init > $ r12", "label return $ r11", "if $ z3 == 0 goto label06", "label $ r3 = r0 get class", "$ z4 = $ r3 be array", "if $ z4 == 0 goto label08", "$ r10 = new org json j s o n array", "specialinvoke $ r10 < init > r0", "label return $ r10", "if $ z4 == 0 goto label08", "label $ z5 = r0 instanceof java util map", "if $ z5 == 0 goto label10", "$ r8 = new org json j s o n object", "$ r9 = java util map r0", "specialinvoke $ r8 < init > $ r9", "label return $ r8", "if $ z5 == 0 goto label10", "label $ z6 = r0 instanceof java lang boolean", "if $ z6 ! = 0 goto label11", "$ z7 = r0 instanceof java lang byte", "if $ z7 ! = 0 goto label11", "$ z8 = r0 instanceof java lang character", "if $ z8 ! = 0 goto label11", "$ z9 = r0 instanceof java lang double", "if $ z9 ! = 0 goto label11", "$ z10 = r0 instanceof java lang float", "if $ z10 ! = 0 goto label11", "$ z11 = r0 instanceof java lang integer", "if $ z11 ! = 0 goto label11", "$ z12 = r0 instanceof java lang long", "if $ z12 ! = 0 goto label11", "$ z13 = r0 instanceof java lang short", "if $ z13 ! = 0 goto label11", "$ z14 = r0 instanceof java lang string", "if $ z14 == 0 goto label12", "label return r0", "if $ z14 == 0 goto label12", "label $ r4 = r0 get class", "$ r5 = $ r4 get package", "$ r6 = $ r5 get name", "$ z15 = $ r6 start with \\ `` java \\ ``", "if $ z15 == 0 goto label14", "$ r7 = r0 to string", "label return $ r7", "if $ z15 == 0 goto label14", "label goto label16", "label return null"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], []]}
{"nodes": ["r0 = @ this", "$ z0 = org apache tool ant util loader utils be context loader available", "if $ z0 == 0 goto label1", "r2 = org apache tool ant ant class loader r0", "$ z1 = r2 be context loader save", "if $ z1 == 0 goto label1", "r3 = org apache tool ant ant class loader r0", "$ r1 = r3 save context loader", "org apache tool ant util loader utils set context class loader $ r1", "r4 = org apache tool ant ant class loader r0", "r4 save context loader = null", "r5 = org apache tool ant ant class loader r0", "r5 be context loader save = 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant util java env utils get jre package", "r2 = r1 element", "label $ z0 = r2 have more element", "if $ z0 == 0 goto label2", "$ r4 = r2 next element", "r3 = java lang string $ r4", "r5 = org apache tool ant ant class loader r0", "r5 add system package root r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant ant type definition r0", "r2 adapt to class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant ant type definition r0", "r2 class loader = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant ant type definition r0", "$ r2 = specialinvoke r3 icreate r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant build event r0", "r2 exception = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant build exception r0", "$ r1 = r2 cause", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant component helper r0", "$ r1 = r2 next", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant component helper r0", "r4 project = r1", "r3 = new org apache tool ant component helper $ ant type table", "specialinvoke r3 < init > r1", "r5 = org apache tool ant component helper r0", "r5 ant type table = r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["$ r0 = new java util vector", "specialinvoke $ r0 < init >", "org apache tool ant directory scanner default exclude = $ r0", "i1 = 0", "label $ r1 = org apache tool ant directory scanner defaultexcludes", "$ i0 = lengthof $ r1", "if i1 > = $ i0 goto label2", "$ r4 = org apache tool ant directory scanner default exclude", "$ r2 = org apache tool ant directory scanner defaultexcludes", "$ r3 = $ r2 [ i1 ]", "$ r4 add $ r3", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant directory scanner r0", "r1 be case sensitive = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant type resource file resource", "r5 = org apache tool ant directory scanner r0", "$ r3 = r5 basedir", "specialinvoke r4 < init > $ r3 r1", "r6 = org apache tool ant type resource r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant exit status exception r0", "$ i0 = r1 status", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant filter class constant", "specialinvoke r4 < init > r1", "r5 = java io reader r4", "return r5"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant filter concat filter r0", "$ r1 = r2 prepend", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r1 = org apache tool ant filter replace token r0", "r1 end token = c0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant filter tabs to space r0", "r1 tab length = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant filter tail filter", "specialinvoke r4 < init > r1", "r5 = org apache tool ant filter tail filter r0", "$ l0 = specialinvoke r5 get line", "r4 set line $ l0", "r6 = org apache tool ant filter tail filter r0", "$ l1 = specialinvoke r6 get skip", "r4 set skip $ l1", "r4 set initialized 1", "r7 = java io reader r4", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant filter util chain reader helper r0", "$ r1 = r2 project", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant helper ant x m l context r0", "r2 current project name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant helper ant x m l context r0", "r1 ignore project tag = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r14 = new org apache tool ant target", "specialinvoke r14 < init >", "r14 set project r1", "r15 = new org apache tool ant helper ant x m l context", "specialinvoke r15 < init > r1", "r15 add target r14", "r15 set implicit target r14", "$ r8 = r15 get project", "r16 = new org apache tool ant helper project helper2 $ root handler", "$ r10 = org apache tool ant helper project helper2 element handler", "specialinvoke r16 < init > r15 $ r10", "r18 = org apache tool ant helper project helper2 r0", "r18 parse $ r8 r2 r16", "r5 = r14 get task", "$ i0 = lengthof r5", "if $ i0 == 1 goto label1", "r17 = new org apache tool ant build exception", "specialinvoke r17 < init > \\ `` no task defined\\ ``", "r19 = java lang throwable r17", "throw r19", "if $ i0 == 1 goto label1", "label $ r11 = r5 [ 0 ]", "$ r12 = org apache tool ant unknown element $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "org apache tool ant helper project helper2 project handler = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant input input request r0", "r2 input = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache tool ant introspection helper get helper null r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = new org apache tool ant main", "specialinvoke $ r4 < init >", "$ r4 start ant r0 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant project r0", "$ r1 = r2 global filter set", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r6 = org apache tool ant project r0", "$ r4 = r6 global filter set", "r5 = new org apache tool ant type filter set $ filter", "specialinvoke r5 < init > r1 r2", "$ r4 add filter r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant project r0", "$ r2 = r5 base dir", "if $ r2 ! = null goto label4", "label r6 = org apache tool ant project r0", "r6 set basedir \\ `` \\ ``", "label goto label4", "label r8 = org apache tool ant project r0", "$ r4 = r8 base dir", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant project r0", "$ z0 = r1 keep go mode", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache tool ant project r0", "$ r3 = org apache tool ant component helper get component helper r4", "$ r3 add task definition r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant project r0", "$ r2 = org apache tool ant component helper get component helper r4", "$ r3 = $ r2 create task r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new org apache tool ant build event", "specialinvoke r8 < init > r1", "r9 = org apache tool ant project r0", "$ r6 = r9 listener", "r3 = $ r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r7 = r3 next", "r4 = org apache tool ant build listener $ r7", "r4 target start r8", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r3 = org apache tool ant project r0", "r3 fire message log r1 r2 null i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant type resource file resource", "r5 = org apache tool ant project r0", "$ r3 = r5 get base dir", "specialinvoke r4 < init > $ r3 r1", "r6 = org apache tool ant type resource r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r5 = r1 get class", "r4 = org apache tool ant introspection helper get helper r0 $ r5", "r4 store element r0 r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 last index of 58", "if i0 ! = -1 goto label1", "return r0", "if i0 ! = -1 goto label1", "label $ i1 = i0 + 1", "$ r1 = r0 substring $ i1", "return $ r1"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r6 = org apache tool ant property helper r0", "r3 = r6 get property hook r1 r2 0", "if r3 == null goto label2", "return r3", "if r3 == null goto label2", "label r7 = org apache tool ant property helper r0", "$ r4 = r7 property", "$ r5 = $ r4 get r2", "return $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant runtime configurable r0", "$ r1 = r5 child", "if $ r1 ! = null goto label1", "r4 = new org apache tool ant util collection utils $ empty enumeration", "$ r3 = r4", "specialinvoke r4 < init >", "goto label2", "label r7 = java util enumeration $ r3", "return r7", "if $ r1 ! = null goto label1", "label r6 = org apache tool ant runtime configurable r0", "$ r2 = r6 child", "$ r3 = java util collection enumeration $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant target r0", "$ r1 = r2 location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r27 = org apache tool ant target r0", "$ z0 = specialinvoke r27 test if condition", "if $ z0 == 0 goto label5", "r28 = org apache tool ant target r0", "$ z2 = specialinvoke r28 test unless condition", "if $ z2 == 0 goto label5", "i1 = 0", "label r29 = org apache tool ant target r0", "$ r20 = r29 child", "$ i0 = $ r20 size", "if i1 > = $ i0 goto label4", "r30 = org apache tool ant target r0", "$ r21 = r30 child", "r1 = $ r21 get i1", "$ z3 = r1 instanceof org apache tool ant task", "if $ z3 == 0 goto label2", "r23 = org apache tool ant task r1", "r23 perform", "goto label3", "label i1 = i1 + 1", "goto label1", "if $ z3 == 0 goto label2", "label r24 = org apache tool ant runtime configurable r1", "r31 = org apache tool ant target r0", "$ r22 = r31 project", "r24 maybe configure $ r22", "if i1 > = $ i0 goto label4", "label goto label7", "label return", "if $ z2 == 0 goto label5", "label r32 = org apache tool ant target r0", "$ z1 = specialinvoke r32 test if condition", "if $ z1 ! = 0 goto label6", "r33 = org apache tool ant target r0", "$ r12 = r33 project", "r25 = new java lang string buffer", "specialinvoke r25 < init >", "$ r13 = r25 append \\ `` skipped because property \\'\\ ``", "r34 = org apache tool ant target r0", "$ r15 = r34 project", "r35 = org apache tool ant target r0", "$ r14 = r35 if condition", "$ r16 = $ r15 replace property $ r14", "$ r17 = $ r13 append $ r16", "$ r18 = $ r17 append \\ `` \\ ' not set \\ ``", "$ r19 = $ r18 to string", "r36 = org apache tool ant target r0", "$ r12 log r36 $ r19 3", "goto label7", "if $ z1 ! = 0 goto label6", "label r37 = org apache tool ant target r0", "$ r3 = r37 project", "r26 = new java lang string buffer", "specialinvoke r26 < init >", "$ r4 = r26 append \\ `` skipped because property \\'\\ ``", "r38 = org apache tool ant target r0", "$ r6 = r38 project", "r39 = org apache tool ant target r0", "$ r5 = r39 unless condition", "$ r7 = $ r6 replace property $ r5", "$ r8 = $ r4 append $ r7", "$ r9 = $ r8 append \\ `` \\ ' set \\ ``", "$ r10 = $ r9 to string", "r40 = org apache tool ant target r0", "$ r3 log r40 $ r10 3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant task r0", "r2 handle error output r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant task adapter r0", "r2 proxy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs abstract cvs task r0", "r2 command = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs abstract cvs task r0", "r1 noexec = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs abstract jar signer task r0", "r2 max memory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs ant r0", "r2 output = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs ant r0", "$ r2 = r3 reference", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs apt r0", "r2 log \\ `` ignore compiler attribute for the apt task a it be fixed\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get compiler", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs apt r0", "r2 preprocess dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs available r0", "r1 search parent = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs basename r0", "r2 file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant taskdefs checksum r0", "r1 read buffer size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = org apache tool ant taskdefs chmod r0", "$ z0 = r8 have perm", "if $ z0 ! = 0 goto label1", "r7 = new org apache tool ant build exception", "r9 = org apache tool ant taskdefs chmod r0", "$ r6 = r9 get location", "specialinvoke r7 < init > \\ `` require attribute perm not set in chmod\\", "r10 = java lang throwable r7", "throw r10", "if $ z0 ! = 0 goto label1", "label r11 = org apache tool ant taskdefs chmod r0", "$ z1 = r11 default set define", "if $ z1 == 0 goto label2", "r12 = org apache tool ant taskdefs chmod r0", "$ r1 = r12 default set", "r13 = org apache tool ant taskdefs chmod r0", "$ r2 = r13 get project", "$ r3 = $ r1 get dir $ r2", "if $ r3 == null goto label2", "r14 = org apache tool ant taskdefs chmod r0", "$ r4 = r14 default set", "r15 = org apache tool ant taskdefs chmod r0", "r15 add fileset $ r4", "label specialinvoke r0 check configuration", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "$ z0 = org apache tool ant taskdefs condition o be family \\ `` unix\\ ``", "if $ z0 == 0 goto label1", "$ z1 = specialinvoke r0 be valid os", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs classloader r0", "r2 parent name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant taskdefs condition condition base r0", "$ r1 = r3 condition", "$ r2 = $ r1 element", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs condition condition base r0", "$ r2 = r3 condition", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs condition contains r0", "r2 sub string = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs condition file match r0", "r1 textfile = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant taskdefs condition http r0", "r1 error begin at = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs condition be sign r0", "r2 file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache tool ant taskdefs condition o be os null null null r0", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs copy r0", "r1 enable multiple mapping = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs copy r0", "r2 output encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache tool ant taskdefs copy r0", "$ r3 = specialinvoke r5 get mapper", "r6 = org apache tool ant taskdefs copy r0", "$ r4 = r6 build map r1 r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs cvslib change log task r0", "r2 d file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs cvslib change log task r0", "$ r2 = r3 cv user", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs cvslib cvs user r0", "r2 user i d = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs cvslib cvs user r0", "$ r1 = r2 display name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs def base r0", "$ r2 = specialinvoke r3 get delegate", "$ r2 set classpathref r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs delete r0", "r2 use match task = 1", "specialinvoke r0 add selector r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs delete r0", "r2 use match task = 1", "specialinvoke r0 add or r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs delete r0", "r2 use match task = 1", "specialinvoke r0 add none r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs delete r0", "r2 use match task = 1", "specialinvoke r0 add depend r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs depend set r0", "$ r2 = r3 create source", "r4 = org apache tool ant type resource collection r1", "$ r2 add r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs dirname r0", "r2 file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs email email task r0", "r2 password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tool ant taskdefs email email task r0", "$ r3 = r5 reply to list", "r4 = new org apache tool ant taskdefs email email address", "specialinvoke r4 < init > r1", "$ r3 add r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java util string tokenizer", "specialinvoke r7 < init > r1 \\", "label $ z0 = r7 have more token", "if $ z0 == 0 goto label2", "r9 = org apache tool ant taskdefs email email task r0", "$ r5 = r9 to list", "r8 = new org apache tool ant taskdefs email email address", "$ r6 = r7 next token", "specialinvoke r8 < init > $ r6", "$ r5 add element r8", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs email email task r0", "$ r2 = r3 bcc list", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs email header r0", "r2 value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs email message r0", "$ r2 = r4 buffer", "$ r2 append r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs exec r0", "r2 out = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant taskdefs execute r0", "$ r1 = r3 env", "if $ r1 == null goto label1", "r4 = org apache tool ant taskdefs execute r0", "$ z0 = r4 new environment", "if $ z0 == 0 goto label2", "label r5 = org apache tool ant taskdefs execute r0", "$ r2 = r5 env", "goto label3", "label return $ r2", "if $ z0 == 0 goto label2", "label r6 = org apache tool ant taskdefs execute r0", "$ r2 = specialinvoke r6 patch environment"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs execute r0", "r2 env = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs execute java r0", "$ r2 = r4 thread", "if $ r2 == null goto label1", "r5 = org apache tool ant taskdefs execute java r0", "r5 time out = 1", "r6 = org apache tool ant taskdefs execute java r0", "$ r3 = r6 thread", "$ r3 interrupt", "label r0 notify all", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant taskdefs execute on r0", "r1 max parallel = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs execute on r0", "r1 force = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tool ant taskdefs execute on r0", "$ r1 = r9 mapper element", "if $ r1 == null goto label1", "r7 = new org apache tool ant build exception", "r10 = org apache tool ant taskdefs execute on r0", "$ r6 = r10 get location", "specialinvoke r7 < init > \\ `` can not define more than one mapper\\", "r11 = java lang throwable r7", "throw r11", "if $ r1 == null goto label1", "label r8 = new org apache tool ant type mapper", "r12 = org apache tool ant taskdefs execute on r0", "$ r3 = r12 get project", "specialinvoke r8 < init > $ r3", "r13 = org apache tool ant taskdefs execute on r0", "r13 mapper element = r8", "r14 = org apache tool ant taskdefs execute on r0", "$ r4 = r14 mapper element", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 setup redirector", "r2 = org apache tool ant taskdefs execute on r0", "$ r1 = r2 redirector", "$ r1 set append property 1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = newarray java lang string [ 1 ]", "$ r3 [ 0 ] = r1", "$ r4 = newarray java io file [ 1 ]", "$ r4 [ 0 ] = r2", "r6 = org apache tool ant taskdefs execute on r0", "$ r5 = r6 get commandline $ r3 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs expand r0", "r2 d = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs get r0", "r2 d = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r16 = null", "label r18 = new java util zip g z i p output stream", "r17 = new java io file output stream", "r21 = org apache tool ant taskdefs g zip r0", "$ r6 = r21 zip file", "specialinvoke r17 < init > $ r6", "specialinvoke r18 < init > r17", "r16 = r18", "r22 = org apache tool ant taskdefs g zip r0", "$ r7 = r22 get src resource", "r23 = org apache tool ant taskdefs g zip r0", "r23 zip resource $ r7 r18", "label org apache tool ant util file utils close r18", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 exist", "if $ z0 ! = 0 goto label1", "r10 = new org apache tool ant build exception", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "$ r4 = r9 append \\ `` manifest file \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 append \\ `` do not exist \\ ``", "$ r7 = $ r6 to string", "r11 = org apache tool ant taskdefs jar r0", "$ r8 = r11 get location", "specialinvoke r10 < init > $ r7 $ r8", "r12 = java lang throwable r10", "throw r12", "if $ z0 ! = 0 goto label1", "label r13 = org apache tool ant taskdefs jar r0", "r13 manifest file = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs javac r0", "$ r2 = r4 compile classpath", "if $ r2 ! = null goto label1", "r5 = org apache tool ant taskdefs javac r0", "r5 compile classpath = r1", "goto label2", "label return", "if $ r2 ! = null goto label1", "label r6 = org apache tool ant taskdefs javac r0", "$ r3 = r6 compile classpath", "$ r3 append r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r7 = org apache tool ant taskdefs javac r0", "$ r1 = r7 compile classpath", "if $ r1 ! = null goto label1", "r6 = new org apache tool ant type path", "r8 = org apache tool ant taskdefs javac r0", "$ r5 = r8 get project", "specialinvoke r6 < init > $ r5", "r9 = org apache tool ant taskdefs javac r0", "r9 compile classpath = r6", "label r10 = org apache tool ant taskdefs javac r0", "$ r2 = r10 compile classpath", "$ r3 = $ r2 create path", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs javac r0", "$ r2 = r3 create classpath", "$ r2 set refid r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javac r0", "r1 list file = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs javac r0", "$ z0 = r1 list file", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs javac r0", "$ z0 = r1 deprecation", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs javac r0", "$ r1 = r2 memory maximum size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs javac r0", "$ z0 = r1 optimize", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs javadoc r0", "$ r2 = r4 source path", "if $ r2 ! = null goto label1", "r5 = org apache tool ant taskdefs javadoc r0", "r5 source path = r1", "goto label2", "label return", "if $ r2 ! = null goto label1", "label r6 = org apache tool ant taskdefs javadoc r0", "$ r3 = r6 source path", "$ r3 append r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javadoc r0", "specialinvoke r1 add arg if z0 \\ `` -private\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant taskdefs javadoc r0", "$ r1 = r5 doclet", "if $ r1 ! = null goto label1", "r4 = new org apache tool ant taskdefs javadoc $ doclet info", "r6 = org apache tool ant taskdefs javadoc r0", "specialinvoke r4 < init > r6", "r7 = org apache tool ant taskdefs javadoc r0", "r7 doclet = r4", "label r8 = org apache tool ant taskdefs javadoc r0", "$ r2 = r8 doclet", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javadoc r0", "r1 author = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javadoc r0", "specialinvoke r1 add arg if z0 \\ `` -nodeprecated\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javadoc r0", "specialinvoke r1 add arg if z0 \\ `` -nodeprecatedlist\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs javadoc r0", "specialinvoke r1 add arg if z0 \\ `` -notree\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs j d b c task r0", "$ r2 = r3 create classpath", "$ r2 set refid r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs j d b c task r0", "r1 autocommit = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs j d b c task r0", "$ r1 = r2 user id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs j d b c task r0", "r2 user id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label2", "$ i0 = r1 length", "if $ i0 < = 0 goto label2", "r13 = new java util string tokenizer", "r15 = org apache tool ant taskdefs key subst r0", "$ r8 = r15 sep", "specialinvoke r13 < init > r1 $ r8 0", "label $ z0 = r13 have more token", "if $ z0 == 0 goto label2", "$ r9 = r13 next token", "r3 = $ r9 trim", "r14 = new java util string tokenizer", "specialinvoke r14 < init > r3 \\ `` =\\", "r5 = r14 next token", "r6 = r14 next token", "r16 = org apache tool ant taskdefs key subst r0", "$ r11 = r16 replacement", "$ r11 put r5 r6", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs load property r0", "specialinvoke r4 assert src be java resource", "r5 = org apache tool ant taskdefs load property r0", "$ r2 = r5 src", "$ r3 = org apache tool ant type resource java resource $ r2", "$ r3 set name r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs load resource r0", "r1 quiet = z0", "if z0 == 0 goto label1", "r2 = org apache tool ant taskdefs load resource r0", "r2 fail on error = 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs load resource r0", "$ r2 = r3 filter chain", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "if $ r2 ! = null goto label1", "r19 = new org apache tool ant build exception", "specialinvoke r19 < init > \\ `` the element nest element need a \\\\\\ `` name\\\\\\ `` attribute\\ ``", "r23 = java lang throwable r19", "throw r23", "if $ r2 ! = null goto label1", "label r24 = org apache tool ant taskdefs macro def r0", "$ r3 = r24 element", "$ r4 = r1 get name", "$ r5 = $ r3 get $ r4", "if $ r5 == null goto label2", "r21 = new org apache tool ant build exception", "r20 = new java lang string buffer", "specialinvoke r20 < init >", "$ r13 = r20 append \\ `` the element \\ ``", "$ r14 = r1 get name", "$ r15 = $ r13 append $ r14", "$ r16 = $ r15 append \\ `` have already be specified\\ ``", "$ r17 = $ r16 to string", "specialinvoke r21 < init > $ r17", "r25 = java lang throwable r21", "throw r25", "if $ r5 == null goto label2", "label r26 = org apache tool ant taskdefs macro def r0", "$ z0 = r26 have implicit element", "if $ z0 ! = 0 goto label3", "$ z1 = r1 be implicit", "if $ z1 == 0 goto label4", "r27 = org apache tool ant taskdefs macro def r0", "$ r10 = r27 element", "$ i0 = $ r10 size", "if $ i0 == 0 goto label4", "label r22 = new org apache tool ant build exception", "specialinvoke r22 < init > \\ `` only one element allow when use implicit elements\\ ``", "r28 = java lang throwable r22", "throw r28", "if $ i0 == 0 goto label4", "label $ z2 = r1 be implicit", "r29 = org apache tool ant taskdefs macro def r0", "r29 have implicit element = $ z2", "r30 = org apache tool ant taskdefs macro def r0", "$ r7 = r30 element", "$ r8 = r1 get name", "$ r7 put $ r8 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache tool ant build exception", "specialinvoke r3 < init > \\ `` not implement any more\\ ``", "r4 = java lang throwable r3", "throw r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs manifest r0", "$ r1 = r2 main section", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant taskdefs manifest class path r0", "r1 max parent level = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs manifest task r0", "r2 mode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = org apache tool ant taskdefs match task r0", "r14 log \\ `` the item attribute be deprecate please use the include attribute \\", "if r1 == null goto label1", "$ z0 = r1 equal \\ `` * \\ ``", "if $ z0 ! = 0 goto label1", "$ z1 = r1 equal \\ `` \\ ``", "if $ z1 == 0 goto label2", "label r15 = org apache tool ant taskdefs match task r0", "$ r11 = r15 create include", "$ r11 set name \\ `` * * \\ ``", "goto label5", "label return", "if $ z1 == 0 goto label2", "label r12 = new java util string tokenizer", "specialinvoke r12 < init > r1 \\", "label $ z2 = r12 have more token", "if $ z2 == 0 goto label5", "$ r5 = r12 next token", "r3 = $ r5 trim", "$ i0 = r3 length", "if $ i0 < = 0 goto label4", "r16 = org apache tool ant taskdefs match task r0", "$ r6 = r16 create include", "r13 = new java lang string buffer", "specialinvoke r13 < init >", "$ r8 = r13 append r3", "$ r9 = $ r8 append \\ `` * * \\ ``", "$ r10 = $ r9 to string", "$ r6 set name $ r10", "label goto label3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs match task r0", "$ r2 = r3 fileset", "$ r2 add different r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs move r0", "r2 delete dir r1 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 1 goto label1", "if i0 < = 10 goto label2", "label r3 = new org apache tool ant build exception", "specialinvoke r3 < init > \\ `` the thread priority be out of the range 1-10\\ ``", "r5 = java lang throwable r3", "throw r5", "if i0 < = 10 goto label2", "label r4 = new java lang integer", "specialinvoke r4 < init > i0", "r6 = org apache tool ant taskdefs nice r0", "r6 new priority = r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be directory", "if $ z0 == 0 goto label1", "r6 = new org apache tool ant build exception", "specialinvoke r6 < init > \\ `` the source can\\'t be a directory\\ ``", "r8 = java lang throwable r6", "throw r8", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof org apache tool ant type resource file resource", "if $ z1 == 0 goto label2", "$ r3 = org apache tool ant type resource file resource r1", "$ r4 = $ r3 get file", "r9 = org apache tool ant taskdefs pack r0", "r9 source = $ r4", "goto label3", "label r12 = org apache tool ant taskdefs pack r0", "r12 src = r1", "return", "if $ z1 == 0 goto label2", "label r10 = org apache tool ant taskdefs pack r0", "$ z2 = r10 support non file resource", "if $ z2 ! = 0 goto label3", "r7 = new org apache tool ant build exception", "specialinvoke r7 < init > \\ `` only file system resource be support \\ ``", "r11 = java lang throwable r7", "throw r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r25 = org apache tool ant taskdefs pack r0", "specialinvoke r25 validate", "r26 = org apache tool ant taskdefs pack r0", "r1 = r26 get src resource", "$ z0 = r1 be exist", "if $ z0 ! = 0 goto label1", "r22 = new java lang string buffer", "specialinvoke r22 < init >", "$ r17 = r22 append \\ `` nothing to do \\ ``", "$ r18 = r1 to string", "$ r19 = $ r17 append $ r18", "$ r20 = $ r19 append \\ `` doesn\\'t exist \\ ``", "$ r21 = $ r20 to string", "r27 = org apache tool ant taskdefs pack r0", "r27 log $ r21", "goto label3", "label return", "if $ z0 ! = 0 goto label1", "label r28 = org apache tool ant taskdefs pack r0", "$ r2 = r28 zip file", "$ l0 = $ r2 last modified", "$ l1 = r1 get last modified", "$ b2 = $ l0 cmp $ l1", "if $ b2 > = 0 goto label2", "r23 = new java lang string buffer", "specialinvoke r23 < init >", "$ r11 = r23 append \\ `` building \\ ``", "r29 = org apache tool ant taskdefs pack r0", "$ r12 = r29 zip file", "$ r13 = $ r12 get absolute path", "$ r14 = $ r11 append $ r13", "$ r15 = $ r14 to string", "r30 = org apache tool ant taskdefs pack r0", "r30 log $ r15", "r31 = org apache tool ant taskdefs pack r0", "r31 pack", "if $ b2 > = 0 goto label2", "label r24 = new java lang string buffer", "specialinvoke r24 < init >", "$ r4 = r24 append \\ `` nothing to do \\ ``", "r32 = org apache tool ant taskdefs pack r0", "$ r5 = r32 zip file", "$ r6 = $ r5 get absolute path", "$ r7 = $ r4 append $ r6", "$ r8 = $ r7 append \\ `` be up to date \\ ``", "$ r9 = $ r8 to string", "r33 = org apache tool ant taskdefs pack r0", "r33 log $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r3 = org apache tool ant taskdefs patch r0", "$ r1 = r3 cmd", "$ r2 = $ r1 create argument", "$ r2 set value \\ `` -l\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r3 = org apache tool ant taskdefs patch r0", "$ r1 = r3 cmd", "$ r2 = $ r1 create argument", "$ r2 set value \\ `` -r\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs path convert r0", "$ r1 = r2 refid", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs property r0", "r2 value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs pump stream handler r0", "$ r1 = r2 err", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache tool ant taskdefs pump stream handler r0", "$ r3 = r4 create pump r1 r2", "r5 = org apache tool ant taskdefs pump stream handler r0", "r5 error thread = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r2 = org apache tool ant taskdefs recorder entry r0", "specialinvoke r2 flush", "$ z0 = r1 boolean value", "r3 = org apache tool ant taskdefs recorder entry r0", "r3 record = $ z0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get project", "r4 = org apache tool ant taskdefs recorder entry r0", "$ r3 = r4 project", "if $ r2 ! = $ r3 goto label1", "r5 = org apache tool ant taskdefs recorder entry r0", "r5 cleanup", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs replace r0", "r2 property file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs resource count r0", "r2 property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r3 = newarray java lang string [ 1 ]", "$ r3 [ 0 ] = \\ `` - xnew\\ ``", "r2 = specialinvoke r0 setup rmic command $ r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs rmic r0", "r2 source base = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs rmic r0", "$ r1 = r2 stub version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs rmic r0", "$ r1 = r2 compile list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs rmic r0", "r1 include ant runtime = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache tool ant taskdefs rmic $ implementation specific argument", "r5 = org apache tool ant taskdefs rmic r0", "specialinvoke r4 < init > r5", "r6 = org apache tool ant taskdefs rmic r0", "$ r3 = r6 facade", "r7 = org apache tool ant util facade implementation specific argument r4", "$ r3 add implementation argument r7", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant taskdefs sequential r0", "$ r3 = r5 nest task", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r2 = org apache tool ant task $ r4", "r2 perform", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs sign jar r0", "r2 d dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs sub ant r0", "$ r2 = r4 ant", "if $ r2 == null goto label1", "r5 = org apache tool ant taskdefs sub ant r0", "$ r3 = r5 ant", "$ r3 handle output r1", "goto label2", "label return", "if $ r2 == null goto label1", "label specialinvoke r0 handle output r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs sub ant r0", "r2 genericantfile = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs sub ant r0", "r1 fail on error = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs sub ant r0", "$ r2 = specialinvoke r3 get buildpath", "$ r2 append r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache tool ant taskdefs sync r0", "$ r1 = r2 my copy", "$ r1 set include empty dirs z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z2 = 1", "r10 = org apache tool ant taskdefs tar r0", "$ z0 = r10 archive be up to date r2 r1", "if $ z0 ! = 0 goto label1", "z2 = 0", "label i0 = 0", "label $ i1 = lengthof r2", "if i0 > = $ i1 goto label4", "r11 = org apache tool ant taskdefs tar r0", "$ r5 = r11 tar file", "r8 = new java io file", "$ r4 = r2 [ i0 ]", "specialinvoke r8 < init > r1 $ r4", "$ z1 = $ r5 equal r8", "if $ z1 == 0 goto label3", "r9 = new org apache tool ant build exception", "r12 = org apache tool ant taskdefs tar r0", "$ r7 = r12 get location", "specialinvoke r9 < init > \\ `` a tar file can not include itself\\", "r13 = java lang throwable r9", "throw r13", "if $ z1 == 0 goto label3", "label i0 = i0 + 1", "goto label2", "if i0 > = $ i1 goto label4", "label return z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ parameter0", "$ r5 = r0 get project", "r1 = r0 get directory scanner $ r5", "r2 = r1 get include directory", "r3 = r1 get include file", "$ i1 = lengthof r2", "$ i0 = lengthof r3", "$ i2 = $ i1 + $ i0", "r4 = newarray java lang string [ $ i2 ]", "$ i3 = lengthof r2", "java lang system arraycopy r2 0 r4 0 $ i3", "$ i5 = lengthof r2", "$ i4 = lengthof r3", "java lang system arraycopy r3 0 r4 $ i5 $ i4", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs temp file r0", "r2 property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be exist", "if $ z0 ! = 0 goto label1", "r7 = new org apache tool ant build exception", "specialinvoke r7 < init > \\ `` the archive doesn\\'t exist\\ ``", "r10 = java lang throwable r7", "throw r10", "if $ z0 ! = 0 goto label1", "label $ z1 = r1 be directory", "if $ z1 == 0 goto label2", "r8 = new org apache tool ant build exception", "specialinvoke r8 < init > \\ `` the archive can\\'t be a directory\\ ``", "r11 = java lang throwable r8", "throw r11", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof org apache tool ant type resource file resource", "if $ z2 == 0 goto label3", "$ r3 = org apache tool ant type resource file resource r1", "$ r4 = $ r3 get file", "r12 = org apache tool ant taskdefs unpack r0", "r12 source = $ r4", "goto label4", "label r15 = org apache tool ant taskdefs unpack r0", "r15 src resource = r1", "return", "if $ z2 == 0 goto label3", "label r13 = org apache tool ant taskdefs unpack r0", "$ z3 = r13 support non file resource", "if $ z3 ! = 0 goto label4", "r9 = new org apache tool ant build exception", "specialinvoke r9 < init > \\ `` only file system resource be support \\ ``", "r14 = java lang throwable r9", "throw r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs up to date r0", "r2 source file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r17 = org apache tool ant taskdefs up to date r0", "$ r1 = r17 property", "if $ r1 ! = null goto label1", "r15 = new org apache tool ant build exception", "r18 = org apache tool ant taskdefs up to date r0", "$ r14 = r18 get location", "specialinvoke r15 < init > \\ `` property attribute be require \\", "r19 = java lang throwable r15", "throw r19", "if $ r1 ! = null goto label1", "label r20 = org apache tool ant taskdefs up to date r0", "z0 = r20 eval", "if z0 == 0 goto label3", "r21 = org apache tool ant taskdefs up to date r0", "$ r2 = r21 get project", "r22 = org apache tool ant taskdefs up to date r0", "$ r3 = r22 property", "r23 = org apache tool ant taskdefs up to date r0", "$ r4 = specialinvoke r23 get value", "$ r2 set new property $ r3 $ r4", "r24 = org apache tool ant taskdefs up to date r0", "$ r5 = r24 mapper element", "if $ r5 ! = null goto label2", "r16 = new java lang string buffer", "specialinvoke r16 < init >", "$ r7 = r16 append \\ `` file \\\\\\ `` \\ ``", "r25 = org apache tool ant taskdefs up to date r0", "$ r8 = r25 target file", "$ r9 = $ r8 get absolute path", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 append \\ `` \\\\\\ `` be up-to-date \\ ``", "$ r12 = $ r11 to string", "r26 = org apache tool ant taskdefs up to date r0", "r26 log $ r12 3", "goto label3", "label return", "if $ r5 ! = null goto label2", "label r27 = org apache tool ant taskdefs up to date r0", "r27 log \\ `` all target file be up-to-date \\"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = new org apache tool ant util source file scanner", "specialinvoke r9 < init > r0", "r10 = org apache tool ant taskdefs up to date r0", "r4 = specialinvoke r10 get mapper", "r8 = r1", "r11 = org apache tool ant taskdefs up to date r0", "$ r6 = r11 mapper element", "if $ r6 ! = null goto label1", "r8 = null", "label $ r7 = r9 restrict r2 r1 r8 r4", "$ i0 = lengthof $ r7", "if $ i0 ! = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 ! = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs verify jar r0", "r1 certificate = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "r10 = org apache tool ant taskdefs wait for r0", "$ r2 = r10 get task name", "$ r3 = r9 append $ r2", "$ r4 = $ r3 append \\ `` timeout\\ ``", "$ r5 = $ r4 to string", "r11 = org apache tool ant taskdefs wait for r0", "r11 log $ r5 3", "r12 = org apache tool ant taskdefs wait for r0", "$ r6 = r12 timeout property", "if $ r6 == null goto label1", "r13 = org apache tool ant taskdefs wait for r0", "$ r7 = r13 get project", "r14 = org apache tool ant taskdefs wait for r0", "$ r8 = r14 timeout property", "$ r7 set new property $ r8 \\ `` true\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs xml property r0", "$ r2 = r3 xml catalog", "$ r2 add configure x m l catalog r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs x s l t process r0", "r2 base dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs x s l t process r0", "r2 in file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 init", "r3 = org apache tool ant taskdefs x s l t process r0", "$ r1 = r3 xml catalog", "r4 = org apache tool ant taskdefs x s l t process r0", "$ r2 = r4 get project", "$ r1 set project $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs zip r0", "r1 do filesonly = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get value", "r3 = org apache tool ant taskdefs zip r0", "r3 duplicate = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs zip r0", "$ i0 = r1 level", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs zip r0", "$ z0 = r1 double file pas", "if $ z0 == 0 goto label1", "r2 = org apache tool ant taskdefs zip r0", "r2 skip write = 1", "r3 = org apache tool ant taskdefs zip r0", "r3 execute main", "r4 = org apache tool ant taskdefs zip r0", "r4 skip write = 0", "r5 = org apache tool ant taskdefs zip r0", "r5 execute main", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r6 = org apache tool ant taskdefs zip r0", "r6 execute main"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r10 = org apache tool ant taskdefs zip r0", "$ r3 = r10 add dirs", "$ r3 clear", "r11 = org apache tool ant taskdefs zip r0", "$ r4 = r11 add file", "$ r4 remove all element", "r12 = org apache tool ant taskdefs zip r0", "$ r5 = r12 entry", "$ r5 clear", "r13 = org apache tool ant taskdefs zip r0", "r13 add new file = 0", "r14 = org apache tool ant taskdefs zip r0", "$ z0 = r14 save do update", "r15 = org apache tool ant taskdefs zip r0", "r15 do update = $ z0", "r16 = org apache tool ant taskdefs zip r0", "$ r6 = r16 filesets from groupfilesets", "r1 = $ r6 element", "label $ z1 = r1 have more element", "if $ z1 == 0 goto label2", "$ r8 = r1 next element", "r2 = org apache tool ant type zip file set $ r8", "r17 = org apache tool ant taskdefs zip r0", "$ r9 = r17 resource", "$ r9 remove element r2", "goto label1", "if $ z1 == 0 goto label2", "label r18 = org apache tool ant taskdefs zip r0", "$ r7 = r18 filesets from groupfilesets", "$ r7 remove all element", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant type abstract file set r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type abstract file set r0", "$ r3 = r5 no child allow", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type abstract file set r0", "r7 directory scanner = null", "r8 = org apache tool ant type abstract file set r0", "$ r1 = r8 default pattern", "$ r2 = $ r1 create include file", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type abstract file set r0", "r3 = org apache tool ant type selector file selector r1", "r2 append selector r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tool ant type ant filter reader r0", "$ z0 = r5 be reference", "if $ z0 == 0 goto label1", "r6 = org apache tool ant type ant filter reader r0", "$ r4 = r6 too many attribute", "r7 = java lang throwable $ r4", "throw r7", "if $ z0 == 0 goto label1", "label r8 = org apache tool ant type ant filter reader r0", "$ r2 = r8 classpath", "if $ r2 ! = null goto label2", "r9 = org apache tool ant type ant filter reader r0", "r9 classpath = r1", "goto label3", "label return", "if $ r2 ! = null goto label2", "label r10 = org apache tool ant type ant filter reader r0", "$ r3 = r10 classpath", "$ r3 append r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant type archive file set r0", "$ r1 = r5 src", "$ z0 = $ r1 instanceof org apache tool ant type resource file resource", "if $ z0 == 0 goto label1", "r6 = org apache tool ant type archive file set r0", "$ r2 = r6 src", "$ r3 = org apache tool ant type resource file resource $ r2", "$ r4 = $ r3 get file", "return $ r4", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant type archive file set r0", "$ r1 = r5 src", "$ z0 = $ r1 instanceof org apache tool ant type resource file resource", "if $ z0 == 0 goto label1", "r6 = org apache tool ant type archive file set r0", "$ r2 = r6 src", "$ r3 = org apache tool ant type resource file resource $ r2", "$ r4 = $ r3 get file", "return $ r4", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type archive file set r0", "$ r1 = r2 prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r12 = org apache tool ant type archive file set r0", "$ z0 = r12 be reference", "if $ z0 == 0 goto label1", "r13 = org apache tool ant type archive file set r0", "$ r7 = r13 get project", "r14 = org apache tool ant type archive file set r0", "$ r8 = r14 get ref $ r7", "$ r9 = org apache tool ant type resource collection $ r8", "$ r10 = org apache tool ant type resource collection $ r9", "$ r11 = $ r10 iterator", "return $ r11", "if $ z0 == 0 goto label1", "label r15 = org apache tool ant type archive file set r0", "$ r2 = r15 src", "if $ r2 ! = null goto label2", "$ r6 = specialinvoke r0 iterator", "return $ r6", "if $ r2 ! = null goto label2", "label r16 = org apache tool ant type archive file set r0", "$ r3 = r16 get project", "r17 = org apache tool ant type archive file set r0", "$ r4 = r17 get directory scanner $ r3", "r1 = org apache tool ant type archive scanner $ r4", "$ r5 = r1 get resource file", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tool ant type archive scanner r0", "$ r1 = r9 src", "if $ r1 ! = null goto label1", "r8 = new org apache tool ant type resource file resource iterator", "r10 = org apache tool ant type archive scanner r0", "$ r6 = r10 get basedir", "r11 = org apache tool ant type archive scanner r0", "$ r7 = r11 get include file", "specialinvoke r8 < init > $ r6 $ r7", "r12 = java util iterator r8", "return r12", "if $ r1 ! = null goto label1", "label r13 = org apache tool ant type archive scanner r0", "specialinvoke r13 scanme", "r14 = org apache tool ant type archive scanner r0", "$ r2 = r14 match file entry", "$ r3 = $ r2 value", "$ r4 = $ r3 iterator", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type commandline java r0", "$ r1 = r2 assertion", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant type commandline java r0", "$ z0 = r3 execute jar", "if $ z0 ! = 0 goto label1", "r4 = org apache tool ant type commandline java r0", "$ r1 = r4 java command", "$ r2 = $ r1 get executable", "return $ r2", "if $ z0 ! = 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type commandline java r0", "$ r1 = r2 get actual v m command", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type commandline java r0", "$ r1 = r2 bootclasspath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type data type r0", "$ r1 = r2 ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tool ant type dir set r0", "$ z0 = r6 be reference", "if $ z0 == 0 goto label1", "r7 = org apache tool ant type dir set r0", "$ r2 = r7 get project", "r8 = org apache tool ant type dir set r0", "$ r3 = r8 get ref $ r2", "$ r4 = org apache tool ant type dir set $ r3", "$ r5 = $ r4 clone", "return $ r5", "if $ z0 == 0 goto label1", "label $ r1 = specialinvoke r0 clone", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type file list r0", "$ r2 = r4 get check ref r1", "$ r3 = org apache tool ant type file list $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant type filter chain r0", "$ r2 = r3 filter reader", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant type filter chain r0", "$ r2 = r3 filter reader", "$ r2 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache tool ant type filter set class $ org $ apache $ tool $ ant $ type $ filter set", "if $ r1 ! = null goto label1", "$ r5 = org apache tool ant type filter set class $ \\ `` org apache tool ant type filter set\\ ``", "org apache tool ant type filter set class $ org $ apache $ tool $ ant $ type $ filter set = $ r5", "goto label2", "label r6 = org apache tool ant type filter set r0", "$ r2 = r6 get check ref $ r5 \\ `` filterset\\ ``", "$ r3 = org apache tool ant type filter set $ r2", "return $ r3", "if $ r1 ! = null goto label1", "label $ r5 = org apache tool ant type filter set class $ org $ apache $ tool $ ant $ type $ filter set"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r14 = org apache tool ant type filter set r0", "$ r3 = r14 filter hash", "if $ r3 ! = null goto label2", "r13 = new java util hashtable", "r15 = org apache tool ant type filter set r0", "$ r6 = r15 get filter", "$ i0 = $ r6 size", "specialinvoke r13 < init > $ i0", "r16 = org apache tool ant type filter set r0", "r16 filter hash = r13", "r17 = org apache tool ant type filter set r0", "$ r7 = r17 get filter", "r1 = $ r7 element", "label $ z0 = r1 have more element", "if $ z0 == 0 goto label2", "$ r8 = r1 next element", "r2 = org apache tool ant type filter set $ filter $ r8", "r18 = org apache tool ant type filter set r0", "$ r9 = r18 filter hash", "$ r10 = r2 get token", "$ r11 = r2 get value", "$ r9 put $ r10 $ r11", "goto label1", "if $ z0 == 0 goto label2", "label r19 = org apache tool ant type filter set r0", "$ r4 = r19 filter hash", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type filter set r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type filter set r0", "$ r3 = r5 too many attribute", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type filter set r0", "$ r2 = r7 filter file", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type filter set r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type filter set r0", "$ r3 = r5 no child allow", "r6 = java lang throwable $ r3", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type filter set r0", "$ r2 = r7 filter", "$ r2 add element r1", "r8 = org apache tool ant type filter set r0", "r8 filter hash = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type mapper r0", "r2 add r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant type path r0", "$ z0 = r5 be reference", "if $ z0 == 0 goto label1", "r6 = org apache tool ant type path r0", "$ r3 = r6 no child allow", "r7 = java lang throwable $ r3", "throw r7", "if $ z0 == 0 goto label1", "label r4 = new org apache tool ant type path $ path element", "r8 = org apache tool ant type path r0", "specialinvoke r4 < init > r8", "r9 = org apache tool ant type path r0", "r10 = org apache tool ant type resource collection r4", "r9 add r10", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type path r0", "$ r1 = r2 concat system classpath \\ `` last\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache tool ant type pattern set r0", "$ z0 = r6 be reference", "if $ z0 == 0 goto label1", "r7 = org apache tool ant type pattern set r0", "$ r4 = specialinvoke r7 get ref r1", "$ r5 = $ r4 get include pattern r1", "return $ r5", "if $ z0 == 0 goto label1", "label r8 = org apache tool ant type pattern set r0", "specialinvoke r8 read file r1", "r9 = org apache tool ant type pattern set r0", "$ r2 = r9 include list", "r10 = org apache tool ant type pattern set r0", "$ r3 = specialinvoke r10 make array $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "$ r1 = java lang system get security manager", "r4 = org apache tool ant type permission r0", "r4 orig sm = $ r1", "r5 = org apache tool ant type permission r0", "specialinvoke r5 init", "r3 = new org apache tool ant type permission $ my s m", "r6 = org apache tool ant type permission r0", "specialinvoke r3 < init > r6 null", "r7 = java lang security manager r3", "java lang system set security manager r7", "r8 = org apache tool ant type permission r0", "r8 active = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant type property set $ property ref", "specialinvoke r4 < init >", "r4 set name r1", "r5 = org apache tool ant type property set r0", "r5 add propertyref r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache tool ant type property set $ property ref", "specialinvoke r4 < init >", "r4 set regex r1", "r5 = org apache tool ant type property set r0", "r5 add propertyref r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache tool ant type redirector element r0", "$ z0 = r8 be reference", "if $ z0 == 0 goto label1", "r9 = org apache tool ant type redirector element r0", "$ r5 = r9 no child allow", "r10 = java lang throwable $ r5", "throw r10", "if $ z0 == 0 goto label1", "label r11 = org apache tool ant type redirector element r0", "$ r2 = r11 error mapper", "if $ r2 == null goto label3", "r12 = org apache tool ant type redirector element r0", "$ z1 = r12 use error", "if $ z1 == 0 goto label2", "r6 = new org apache tool ant build exception", "specialinvoke r6 < init > \\ `` attribute \\\\\\ `` error\\\\\\ `` can not coexist with a nested < errormapper > \\ ``", "r13 = java lang throwable r6", "throw r13", "if $ z1 == 0 goto label2", "label r7 = new org apache tool ant build exception", "specialinvoke r7 < init > \\ `` can not have > 1 < errormapper > \\ ``", "r14 = java lang throwable r7", "throw r14", "if $ r2 == null goto label3", "label r15 = org apache tool ant type redirector element r0", "r15 error mapper = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r12 = org apache tool ant type reference r0", "$ r1 = r12 project", "if $ r1 ! = null goto label1", "r11 = new org apache tool ant build exception", "r10 = new java lang string buffer", "specialinvoke r10 < init >", "$ r6 = r10 append \\ `` no project set on reference to \\ ``", "r13 = org apache tool ant type reference r0", "$ r7 = r13 refid", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "r14 = java lang throwable r11", "throw r14", "if $ r1 ! = null goto label1", "label r15 = org apache tool ant type reference r0", "$ r2 = r15 project", "r16 = org apache tool ant type reference r0", "$ r3 = r16 get reference object $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type resource r0", "r2 check attribute allow", "r3 = org apache tool ant type resource r0", "r3 name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant type resource r0", "$ z0 = r5 be reference", "if $ z0 == 0 goto label1", "r6 = org apache tool ant type resource r0", "$ r3 = r6 get check ref", "$ r4 = org apache tool ant type resource $ r3", "$ l2 = $ r4 get last modified", "return $ l2", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type resource r0", "$ z1 = r7 be exist", "if $ z1 == 0 goto label2", "r8 = org apache tool ant type resource r0", "$ r1 = r8 lastmodified", "if $ r1 ! = null goto label3", "label return 0l", "if $ r1 ! = null goto label3", "label r9 = org apache tool ant type resource r0", "$ r2 = r9 lastmodified", "l0 = $ r2 long value", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label4", "$ l3 = 0l", "goto label5", "label return $ l3", "if $ b1 > = 0 goto label4", "label $ l3 = l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label r10 = org apache tool ant type resource archive resource r0", "$ z0 = r10 be reference", "if $ z0 == 0 goto label2", "r11 = org apache tool ant type resource archive resource r0", "$ r9 = r11 get check ref", "$ z4 = $ r9 equal r1", "return $ z4", "if $ z0 == 0 goto label2", "label $ r3 = r1 get class", "$ r4 = r0 get class", "$ z1 = $ r3 equal $ r4", "if $ z1 ! = 0 goto label3", "return 0", "if $ z1 ! = 0 goto label3", "label r2 = org apache tool ant type resource archive resource r1", "r12 = org apache tool ant type resource archive resource r0", "$ r5 = r12 get archive", "$ r6 = r2 get archive", "$ z2 = $ r5 equal $ r6", "if $ z2 == 0 goto label4", "r13 = org apache tool ant type resource archive resource r0", "$ r7 = r13 get name", "$ r8 = r2 get name", "$ z3 = $ r7 equal $ r8", "if $ z3 == 0 goto label4", "$ z5 = 1", "goto label5", "label return $ z5", "if $ z3 == 0 goto label4", "label $ z5 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant type resource comparators content r0", "r1 binary = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ l0 = r1 get last modified", "$ l1 = r2 get last modified", "$ l2 = $ l0 - $ l1", "$ i3 = int $ l2", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant type resource comparators delegate resource comparator r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type resource comparators delegate resource comparator r0", "$ r3 = r5 get check ref", "$ i0 = $ r3 hash code", "return $ i0", "if $ z0 == 0 goto label1", "label r6 = org apache tool ant type resource comparators delegate resource comparator r0", "$ r1 = r6 v", "if $ r1 ! = null goto label2", "$ i1 = 0", "goto label3", "label return $ i1", "if $ r1 ! = null goto label2", "label r7 = org apache tool ant type resource comparators delegate resource comparator r0", "$ r2 = r7 v", "$ i1 = $ r2 hash code"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache tool ant build exception", "specialinvoke r3 < init > \\ `` you can\\'t change the name of a compressed resource\\ ``", "r4 = java lang throwable r3", "throw r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant type resource fail fast r0", "$ r1 = r3 wrap", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org apache tool ant type resource fail fast r0", "org apache tool ant type resource fail fast fail fast r4", "r5 = org apache tool ant type resource fail fast r0", "$ r2 = r5 wrap", "$ z0 = $ r2 have next", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type resource file resource r0", "r2 check attribute allow", "r3 = org apache tool ant type resource file resource r0", "r3 file = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant type resource file resource r0", "$ z0 = r4 be reference", "if $ z0 == 0 goto label1", "r5 = org apache tool ant type resource file resource r0", "$ r1 = r5 get check ref", "$ r2 = org apache tool ant type resource file resource $ r1", "$ r3 = $ r2 get file", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label r6 = org apache tool ant type resource file resource r0", "$ r3 = r6 file"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tool ant type resource file resource r0", "$ z0 = r9 be reference", "if $ z0 == 0 goto label1", "r10 = org apache tool ant type resource file resource r0", "$ r5 = r10 get check ref", "$ r6 = org apache tool ant type resource $ r5", "$ r7 = $ r6 get name", "return $ r7", "if $ z0 == 0 goto label1", "label r11 = org apache tool ant type resource file resource r0", "r1 = r11 get base dir", "if r1 ! = null goto label2", "r12 = org apache tool ant type resource file resource r0", "$ r4 = r12 get not null file", "$ r8 = $ r4 get name", "goto label3", "label return $ r8", "if r1 ! = null goto label2", "label $ r2 = org apache tool ant type resource file resource file_utils", "r13 = org apache tool ant type resource file resource r0", "$ r3 = r13 get not null file", "$ r8 = $ r2 remove lead path r1 $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type resource file resource iterator r0", "$ i1 = r2 po", "r3 = org apache tool ant type resource file resource iterator r0", "$ r1 = r3 file", "$ i0 = lengthof $ r1", "if $ i1 > = $ i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 > = $ i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org apache tool ant type resource file r0", "$ z0 = r12 be reference", "if $ z0 == 0 goto label1", "r13 = org apache tool ant type resource file r0", "$ r9 = r13 get ref", "$ r10 = $ r9 merge pattern r1", "return $ r10", "if $ z0 == 0 goto label1", "label r11 = new org apache tool ant type pattern set", "specialinvoke r11 < init >", "r14 = org apache tool ant type resource file r0", "$ r5 = r14 default pattern", "r11 append $ r5 r1", "r15 = org apache tool ant type resource file r0", "$ r6 = r15 additional pattern", "i0 = $ r6 size", "i1 = 0", "label if i1 > = i0 goto label3", "r16 = org apache tool ant type resource file r0", "$ r7 = r16 additional pattern", "r3 = $ r7 element at i1", "$ r8 = org apache tool ant type pattern set r3", "r11 append $ r8 r1", "i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label3", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java util zip g z i p input stream", "specialinvoke $ r2 < init > r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant type resource restrict r0", "$ z0 = r5 be reference", "if $ z0 == 0 goto label1", "r6 = org apache tool ant type resource restrict r0", "$ r3 = r6 get check ref", "$ r4 = $ r3 to string", "return $ r4", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type resource restrict r0", "r7 die on circular reference", "r8 = org apache tool ant type resource restrict r0", "$ r1 = r8 w", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant type resource selector date r0", "$ r1 = r3 millis", "if $ r1 ! = null goto label1", "$ l0 = -1l", "goto label2", "label return $ l0", "if $ r1 ! = null goto label1", "label r4 = org apache tool ant type resource selector date r0", "$ r2 = r4 millis", "$ l0 = $ r2 long value"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tool ant type resource selector date r0", "r1 granularity = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type resource selector date r0", "r2 when = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type resource selector instance of r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant type resource string resource r0", "$ r1 = r2 get name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r38 = org apache tool ant type selector extend selector r0", "$ r1 = r38 classname", "if $ r1 == null goto label8", "r39 = org apache tool ant type selector extend selector r0", "$ r2 = r39 classname", "$ i0 = $ r2 length", "if $ i0 < = 0 goto label8", "label r40 = org apache tool ant type selector extend selector r0", "$ r3 = r40 classpath", "if $ r3 ! = null goto label2", "r41 = org apache tool ant type selector extend selector r0", "$ r10 = r41 classname", "r32 = java lang class for name $ r10", "goto label3", "label $ r7 = r32 new instance", "$ r8 = org apache tool ant type selector file selector $ r7", "r46 = org apache tool ant type selector extend selector r0", "r46 dynselector = $ r8", "r47 = org apache tool ant type selector extend selector r0", "r34 = r47 get project", "if r34 == null goto label4", "r48 = org apache tool ant type selector extend selector r0", "$ r9 = r48 dynselector", "r34 set project reference $ r9", "label goto label9", "label return", "if $ r3 ! = null goto label2", "label r42 = org apache tool ant type selector extend selector r0", "$ r4 = r42 get project", "r43 = org apache tool ant type selector extend selector r0", "$ r5 = r43 classpath", "r33 = $ r4 create class loader $ r5", "r44 = org apache tool ant type selector extend selector r0", "$ r6 = r44 classname", "r45 = java lang class loader r33", "r32 = java lang class for name $ r6 1 r45", "if $ i0 < = 0 goto label8", "label r55 = org apache tool ant type selector extend selector r0", "r55 set error \\ `` there be no classname specified\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r8 = org apache tool ant type selector extend selector r0", "$ z0 = r8 be reference", "if $ z0 == 0 goto label1", "r9 = org apache tool ant type selector extend selector r0", "$ r6 = r9 no child allow", "r10 = java lang throwable $ r6", "throw r10", "if $ z0 == 0 goto label1", "label r11 = org apache tool ant type selector extend selector r0", "$ r1 = r11 classpath", "if $ r1 ! = null goto label2", "r7 = new org apache tool ant type path", "r12 = org apache tool ant type selector extend selector r0", "$ r5 = r12 get project", "specialinvoke r7 < init > $ r5", "r13 = org apache tool ant type selector extend selector r0", "r13 classpath = r7", "label r14 = org apache tool ant type selector extend selector r0", "$ r2 = r14 classpath", "$ r3 = $ r2 create path", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new org apache tool ant type parameter", "specialinvoke r7 < init >", "r7 set name r1", "$ r5 = java lang string value of r2", "r7 set value $ r5", "r8 = org apache tool ant type selector modifiedselector modified selector r0", "$ r6 = r8 config parameter", "$ r6 add r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org apache tool ant type selector none selector r0", "r7 validate", "r8 = org apache tool ant type selector none selector r0", "r4 = r8 selector element", "label $ z1 = r4 have more element", "if $ z1 == 0 goto label2", "$ r5 = r4 next element", "$ r6 = org apache tool ant type selector file selector $ r5", "z0 = $ r6 be select r1 r2 r3", "if z0 == 0 goto label1", "return 0", "if $ z1 == 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type selector select selector r0", "r2 unless property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant type tar file set r0", "specialinvoke r1 check tar file set attribute allow", "r2 = org apache tool ant type tar file set r0", "r2 user id set = 1", "r3 = org apache tool ant type tar file set r0", "r3 uid = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type tar file set r0", "specialinvoke r2 check tar file set attribute allow", "r3 = org apache tool ant type tar file set r0", "r3 group name set = 1", "r4 = org apache tool ant type tar file set r0", "r4 group name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant type tar file set r0", "specialinvoke r1 check tar file set attribute allow", "r2 = org apache tool ant type tar file set r0", "r2 group id set = 1", "r3 = org apache tool ant type tar file set r0", "r3 gid = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org apache tool ant type tar file set r0", "r18 die on circular reference r1", "r19 = org apache tool ant type tar file set r0", "$ r3 = r19 get refid", "r2 = $ r3 get reference object r1", "$ z0 = r2 instanceof org apache tool ant type tar file set", "if $ z0 == 0 goto label1", "$ r12 = org apache tool ant type abstract file set r2", "return $ r12", "if $ z0 == 0 goto label1", "label $ z1 = r2 instanceof org apache tool ant type file set", "if $ z1 == 0 goto label2", "r15 = new org apache tool ant type tar file set", "$ r11 = org apache tool ant type file set r2", "specialinvoke r15 < init > $ r11", "r20 = org apache tool ant type tar file set r0", "r21 = org apache tool ant type archive file set r15", "r20 configure file set r21", "r22 = org apache tool ant type abstract file set r15", "return r22", "if $ z1 == 0 goto label2", "label r16 = new java lang string buffer", "specialinvoke r16 < init >", "r23 = org apache tool ant type tar file set r0", "$ r5 = r23 get refid", "$ r6 = $ r5 get ref id", "$ r7 = r16 append $ r6", "$ r8 = $ r7 append \\ `` doesn\\'t denote a tarfileset or a fileset\\ ``", "r14 = $ r8 to string", "r17 = new org apache tool ant build exception", "specialinvoke r17 < init > r14", "r24 = java lang throwable r17", "throw r24"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["l0 = @ parameter0", "l1 = @ parameter1", "$ r0 = org apache tool ant type time comparison file_utils", "$ l2 = $ r0 get file timestamp granularity", "$ i3 = org apache tool ant type time comparison compare l0 l1 $ l2", "return $ i3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type zip file set r0", "specialinvoke r2 check zip file set attribute allow", "r3 = org apache tool ant type zip file set r0", "r3 encode = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org apache tool ant type zip file set r0", "r18 die on circular reference r1", "r19 = org apache tool ant type zip file set r0", "$ r3 = r19 get refid", "r2 = $ r3 get reference object r1", "$ z0 = r2 instanceof org apache tool ant type zip file set", "if $ z0 == 0 goto label1", "$ r12 = org apache tool ant type abstract file set r2", "return $ r12", "if $ z0 == 0 goto label1", "label $ z1 = r2 instanceof org apache tool ant type file set", "if $ z1 == 0 goto label2", "r15 = new org apache tool ant type zip file set", "$ r11 = org apache tool ant type file set r2", "specialinvoke r15 < init > $ r11", "r20 = org apache tool ant type zip file set r0", "r21 = org apache tool ant type archive file set r15", "r20 configure file set r21", "r22 = org apache tool ant type abstract file set r15", "return r22", "if $ z1 == 0 goto label2", "label r16 = new java lang string buffer", "specialinvoke r16 < init >", "r23 = org apache tool ant type zip file set r0", "$ r5 = r23 get refid", "$ r6 = $ r5 get ref id", "$ r7 = r16 append $ r6", "$ r8 = $ r7 append \\ `` doesn\\'t denote a zipfileset or a fileset\\ ``", "r14 = $ r8 to string", "r17 = new org apache tool ant build exception", "specialinvoke r17 < init > r14", "r24 = java lang throwable r17", "throw r24"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r6 = org apache tool ant type zip file set r0", "$ z0 = r6 be reference", "if $ z0 == 0 goto label1", "r7 = org apache tool ant type zip file set r0", "$ r2 = r7 get project", "r8 = org apache tool ant type zip file set r0", "$ r3 = r8 get ref $ r2", "$ r4 = org apache tool ant type zip file set $ r3", "$ r5 = $ r4 clone", "return $ r5", "if $ z0 == 0 goto label1", "label $ r1 = specialinvoke r0 clone", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant util concat resource input stream r0", "r1 ignore error = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant util container mapper r0", "r2 add r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "i2 = 0", "label r9 = org apache tool ant util dewey decimal r0", "$ r3 = r9 component", "$ i0 = lengthof $ r3", "if i2 > = $ i0 goto label3", "if i2 == 0 goto label2", "r8 append 46", "label r10 = org apache tool ant util dewey decimal r0", "$ r5 = r10 component", "$ i1 = $ r5 [ i2 ]", "r8 append $ i1", "i2 = i2 + 1", "goto label1", "if i2 > = $ i0 goto label3", "label $ r4 = r8 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant util facade facade task helper r0", "$ r1 = r4 user choice", "if $ r1 == null goto label1", "r5 = org apache tool ant util facade facade task helper r0", "$ r3 = r5 user choice", "goto label3", "label return $ r3", "if $ r1 == null goto label1", "label r6 = org apache tool ant util facade facade task helper r0", "$ r2 = r6 magic value", "if $ r2 == null goto label2", "r7 = org apache tool ant util facade facade task helper r0", "$ r3 = r7 magic value", "if $ r2 == null goto label2", "label r8 = org apache tool ant util facade facade task helper r0", "$ r3 = r8 default value"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant util facade implementation specific argument r0", "r2 impl = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org apache tool ant util file utils r0", "$ r4 = r5 create temp file r1 r2 r3 0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 get absolute path", "r7 = org apache tool ant util file utils r0", "$ r4 = r7 normalize $ r3", "$ r5 = r2 get absolute path", "r8 = org apache tool ant util file utils r0", "$ r6 = r8 normalize $ r5", "$ z0 = $ r4 equal $ r6", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 exist", "if $ z0 == 0 goto label1", "$ z4 = r2 delete", "if $ z4 ! = 0 goto label1", "r25 = new java io i o exception", "r24 = new java lang string buffer", "specialinvoke r24 < init >", "$ r19 = r24 append \\ `` fail to delete \\ ``", "$ r20 = $ r19 append r2", "$ r21 = $ r20 append \\ `` while try to rename \\ ``", "$ r22 = $ r21 append r1", "$ r23 = $ r22 to string", "specialinvoke r25 < init > $ r23", "throw r25", "if $ z4 ! = 0 goto label1", "label r3 = r2 get parent file", "if r3 == null goto label2", "$ z2 = r3 exist", "if $ z2 ! = 0 goto label2", "$ z3 = r3 mkdirs", "if $ z3 ! = 0 goto label2", "r27 = new java io i o exception", "r26 = new java lang string buffer", "specialinvoke r26 < init >", "$ r12 = r26 append \\ `` fail to create directory \\ ``", "$ r13 = $ r12 append r3", "$ r14 = $ r13 append \\ `` while try to rename \\ ``", "$ r15 = $ r14 append r1", "$ r16 = $ r15 to string", "specialinvoke r27 < init > $ r16", "throw r27", "if $ z3 ! = 0 goto label2", "label $ z5 = r1 rename to r2", "if $ z5 ! = 0 goto label3", "r30 = org apache tool ant util file utils r0", "r30 copy file r1 r2", "$ z1 = r1 delete", "if $ z1 ! = 0 goto label3", "r29 = new java io i o exception", "r28 = new java lang string buffer", "specialinvoke r28 < init >", "$ r6 = r28 append \\ `` fail to delete \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 append \\ `` while try to rename it \\ ``", "$ r9 = $ r8 to string", "specialinvoke r29 < init > $ r9", "throw r29", "if $ z1 ! = 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], []]}
{"nodes": ["r0 = java lang thread current thread", "$ r1 = r0 get context class loader", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["return 1"], "adj": [[]]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org apache tool ant util reflect wrapper r0", "$ r4 = r6 obj", "$ r5 = org apache tool ant util reflect util invoke $ r4 r1 r2 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string buffer", "specialinvoke r7 < init >", "r8 = org apache tool ant util script runner base r0", "$ r3 = r8 script", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "r9 = org apache tool ant util script runner base r0", "r9 script = $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r8 = org apache tool ant util script runner helper r0", "r1 = specialinvoke r8 get runner", "r9 = org apache tool ant util script runner helper r0", "$ r2 = r9 src file", "if $ r2 == null goto label1", "r10 = org apache tool ant util script runner helper r0", "$ r7 = r10 src file", "r1 set src $ r7", "label r11 = org apache tool ant util script runner helper r0", "$ r3 = r11 text", "if $ r3 == null goto label2", "r12 = org apache tool ant util script runner helper r0", "$ r6 = r12 text", "r1 add text $ r6", "label r13 = org apache tool ant util script runner helper r0", "$ z0 = r13 set bean", "if $ z0 == 0 goto label3", "r14 = org apache tool ant util script runner helper r0", "$ r5 = r14 project component", "r1 bind to component $ r5", "goto label4", "label return r1", "if $ z0 == 0 goto label3", "label r15 = org apache tool ant util script runner helper r0", "$ r4 = r15 project component", "r1 bind to component minimum $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant util watchdog r0", "r4 stop = 0", "r3 = new java lang thread", "specialinvoke r3 < init > r0 \\ `` watchdog\\ ``", "r3 set daemon 1", "r3 start", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool tar tar buffer r0", "r1 debug = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool tar tar entry r0", "$ i0 = r1 user id", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new java lang string buffer", "specialinvoke r3 < init > r1", "r4 = org apache tool tar tar entry r0", "r4 group name = r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool tar tar entry r0", "$ b0 = r3 link flag", "if $ b0 ! = 76 goto label1", "r4 = org apache tool tar tar entry r0", "$ r1 = r4 name", "$ r2 = $ r1 to string", "$ z0 = $ r2 equal \\ `` @ long link\\ ``", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r18 = org apache tool tar tar output stream r0", "$ i0 = r18 assem len", "if $ i0 < = 0 goto label3", "r19 = org apache tool tar tar output stream r0", "i11 = r19 assem len", "label r20 = org apache tool tar tar output stream r0", "$ r12 = r20 assem buf", "$ i6 = lengthof $ r12", "if i11 > = $ i6 goto label2", "r21 = org apache tool tar tar output stream r0", "$ r15 = r21 assem buf", "$ r15 [ i11 ] = 0", "i11 = i11 + 1", "goto label1", "if i11 > = $ i6 goto label2", "label r22 = org apache tool tar tar output stream r0", "$ r14 = r22 buffer", "r23 = org apache tool tar tar output stream r0", "$ r13 = r23 assem buf", "$ r14 write record $ r13", "r24 = org apache tool tar tar output stream r0", "$ l9 = r24 curr bytes", "r25 = org apache tool tar tar output stream r0", "$ i7 = r25 assem len", "$ l8 = long $ i7", "$ l10 = $ l9 + $ l8", "r26 = org apache tool tar tar output stream r0", "r26 curr bytes = $ l10", "r27 = org apache tool tar tar output stream r0", "r27 assem len = 0", "label r28 = org apache tool tar tar output stream r0", "$ l2 = r28 curr bytes", "r29 = org apache tool tar tar output stream r0", "$ l1 = r29 curr size", "$ b3 = $ l2 cmp $ l1", "if $ b3 > = 0 goto label4", "r17 = new java io i o exception", "r16 = new java lang string buffer", "specialinvoke r16 < init >", "$ r3 = r16 append \\ `` entry \\'\\ ``", "r30 = org apache tool tar tar output stream r0", "$ r4 = r30 curr name", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` \\ ' close at \\'\\ ``", "r31 = org apache tool tar tar output stream r0", "$ l4 = r31 curr bytes", "$ r7 = $ r6 append $ l4", "$ r8 = $ r7 append \\ `` \\ ' before the \\'\\ ``", "r32 = org apache tool tar tar output stream r0", "$ l5 = r32 curr size", "$ r9 = $ r8 append $ l5", "$ r10 = $ r9 append \\ `` \\ ' byte specify in the header be written\\ ``", "$ r11 = $ r10 to string", "specialinvoke r17 < init > $ r11", "throw r17", "if $ b3 > = 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "l11 = 0l", "z0 = 1", "i2 = i0 + i1", "i12 = i0", "label if i12 > = i2 goto label7", "$ b3 = r0 [ i12 ]", "if $ b3 ! = 0 goto label2", "goto label7", "label return l11", "if $ b3 ! = 0 goto label2", "label $ b4 = r0 [ i12 ]", "if $ b4 == 32 goto label3", "$ b10 = r0 [ i12 ]", "if $ b10 ! = 48 goto label5", "label if z0 == 0 goto label4", "goto label6", "label i12 = i12 + 1", "goto label1", "label if z0 == 0 goto label4", "label $ b5 = r0 [ i12 ]", "if $ b5 ! = 32 goto label5", "label z0 = 0", "$ l9 = l11 < < 3", "$ b6 = r0 [ i12 ]", "$ i7 = $ b6 - 48", "$ l8 = long $ i7", "l11 = $ l9 + $ l8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool zip asi extra field r0", "r1 uid = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool zip asi extra field r0", "$ i0 = r1 mode", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache tool zip jar marker no_bytes", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool zip unrecognized extra field r0", "$ r1 = r2 local data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool zip zip entry r0", "$ l0 = r1 external attribute", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool zip zip entry r0", "r1 = r3 get extra", "if r1 == null goto label1", "$ r2 = r1", "goto label2", "label return $ r2", "if r1 == null goto label1", "label $ r2 = newarray byte [ 0 ]"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool zip zip long r0", "$ l0 = r2 value", "$ r1 = org apache tool zip zip long get bytes $ l0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool zip zip output stream r0", "r1 method = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool zip zip short r0", "$ i0 = r1 value", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant ant type definition r0", "$ z0 = r1 restrict", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org apache tool ant input secure input handler r0", "r2 = r12 get prompt r1", "label r9 = org apache tool ant util reflect util invoke static class \\ `` ljava lang system \\", "label $ r4 = java lang object [ ] null", "$ r5 = org apache tool ant util reflect util invoke r9 \\ `` read password\\", "$ r6 = char [ ] $ r5", "r3 = char [ ] $ r6", "r11 = new java lang string", "specialinvoke r11 < init > r3", "r1 set input r11", "java util array fill r3 32", "$ z0 = r1 be input valid", "if $ z0 == 0 goto label2", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["$ r0 = org apache tool ant main short ant version", "if $ r0 ! = null goto label1", "org apache tool ant main get ant version", "label $ r1 = org apache tool ant main short ant version", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache tool ant project helper prefix separator", "$ r1 set r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "$ r0 = org apache tool ant project helper in include mode", "$ r1 = java lang boolean value of z0", "$ r0 set $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache tool ant property helper null or empty r1", "if $ z0 ! = 0 goto label1", "r2 = org apache tool ant property helper r0", "$ z1 = specialinvoke r2 eval a boolean or property name r1", "if $ z1 ! = 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 ! = 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs augment reference r0", "specialinvoke r1 restore wrapper id", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache tool ant taskdefs condition be last modified r0", "$ r2 = r5 resource", "if $ r2 == null goto label1", "r4 = new org apache tool ant build exception", "specialinvoke r4 < init > \\ `` only one resource can be tested\\ ``", "r6 = java lang throwable r4", "throw r6", "if $ r2 == null goto label1", "label r7 = org apache tool ant taskdefs condition be last modified r0", "r7 resource = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = @ parameter0", "$ r1 = \\ `` native-encoding\\ ``", "$ z0 = $ r1 equal r2", "if $ z0 == 0 goto label1", "r2 = null", "label r3 = org apache tool ant taskdefs expand r0", "r3 encode = r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs expand r0", "r1 internal set scan for unicode extra field z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = \\ `` include\\ ``", "r3 = org apache tool ant taskdefs import task r0", "$ r2 = r3 get task type", "$ z0 = $ r1 equal $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs jar r0", "r1 flatten class path = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "r0 add reference \\ `` ant vm launcher\\", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tool ant taskdefs length r0", "$ r1 = r3 trim", "if $ r1 == null goto label1", "r4 = org apache tool ant taskdefs length r0", "$ r2 = r4 trim", "$ z0 = $ r2 boolean value", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r7 = org apache tool ant taskdefs local r0", "$ r1 = r7 name", "if $ r1 ! = null goto label1", "r6 = new org apache tool ant build exception", "specialinvoke r6 < init > \\ `` miss attribute name\\ ``", "r8 = java lang throwable r6", "throw r8", "if $ r1 ! = null goto label1", "label r9 = org apache tool ant taskdefs local r0", "$ r2 = r9 get project", "$ r3 = org apache tool ant property local property get $ r2", "r10 = org apache tool ant taskdefs local r0", "$ r4 = r10 name", "$ r3 add local $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs mkdir r0", "$ r1 = r2 dir", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = org apache tool ant taskdefs optional cab file_utils", "r2 = $ r4 create temp file \\ `` ant\\", "r15 = null", "label $ r5 = new java io buffer writer", "$ r6 = new java io file writer", "specialinvoke $ r6 < init > r2", "specialinvoke $ r5 < init > $ r6", "r15 = $ r5", "i0 = r1 size", "i1 = 0", "label if i1 > = i0 goto label3", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = $ r7 append 34", "$ r9 = r1 element at i1", "$ r10 = $ r9 to string", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 append 34", "$ r13 = $ r12 to string", "$ r5 write $ r13", "$ r5 new line", "i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label3", "label org apache tool ant util file utils close $ r5", "goto label6", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional ccm c c m create task r0", "$ r1 = r2 platform", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional clearcase c c checkin r0", "$ r1 = r2 m cfile", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional clearcase c c checkin r0", "$ z0 = r1 m ptime", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional clearcase c c checkout r0", "r1 m ndata = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional clearcase c c lock r0", "$ z0 = r1 m obsolete", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional clearcase c c lock r0", "$ r1 = r2 m comment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional clearcase c c mkattr r0", "r2 m type name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional clearcase c c mkelem r0", "r1 m checkin = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional clearcase c c mkelem r0", "r2 m eltype = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional clearcase c c mklabel r0", "r2 m v o b = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional clearcase c c mklabel r0", "$ r1 = r2 m v o b", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tool ant taskdefs optional clearcase c c mklbtype r0", "$ z0 = r1 m global", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional clearcase c c rmtype r0", "$ r1 = r2 m type kind", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional clearcase clear case r0", "$ r1 = r2 mview path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 read unsigned short", "r2 = org apache tool ant taskdefs optional depend constantpool class c p info r0", "r2 index = $ i0", "r3 = org apache tool ant taskdefs optional depend constantpool class c p info r0", "r3 class name = \\ `` unresolved\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new java lang double", "$ d0 = r1 read double", "specialinvoke r3 < init > $ d0", "r4 = org apache tool ant taskdefs optional depend constantpool double c p info r0", "r4 set value r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0", "$ i0 = r9 class index", "$ r4 = r1 get entry $ i0", "r2 = org apache tool ant taskdefs optional depend constantpool class c p info $ r4", "r2 resolve r1", "$ r5 = r2 get class name", "r10 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0", "r10 field class name = $ r5", "r11 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0", "$ i1 = r11 name and type index", "$ r6 = r1 get entry $ i1", "r3 = org apache tool ant taskdefs optional depend constantpool name and type c p info $ r6", "r3 resolve r1", "$ r7 = r3 get name", "r12 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0", "r12 field name = $ r7", "$ r8 = r3 get type", "r13 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0", "r13 field type = $ r8", "specialinvoke r0 resolve r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0", "$ r1 = r2 field name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional depend constantpool interface method ref c p info r0", "$ r1 = r2 interface method class name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional depend constantpool method ref c p info r0", "$ r1 = r2 method class name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional echo property r0", "r1 failonerror = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 == 0 goto label1", "r6 = org apache tool ant taskdefs optional echo property r0", "r6 regex = r1", "r5 = new org apache tool ant type property set", "specialinvoke r5 < init >", "r7 = org apache tool ant taskdefs optional echo property r0", "$ r4 = r7 get project", "r5 set project $ r4", "r5 append regex r1", "r8 = org apache tool ant taskdefs optional echo property r0", "r8 add propertyset r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional ejb borland deployment tool r0", "r1 verify = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional ejb borland deployment tool r0", "r2 borland d t d = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional ejb jonas deployment tool r0", "r1 nogenic = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional ejb weblogic deployment tool r0", "r2 wl classpath = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional ejb weblogic deployment tool r0", "r2 ejbc class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = new org apache tool ant taskdefs optional ejb websphere deployment tool $ 1", "r13 = org apache tool ant taskdefs optional ejb websphere deployment tool r0", "$ r6 = r13 get task", "r14 = org apache tool ant taskdefs optional ejb websphere deployment tool r0", "specialinvoke r12 < init > r14 $ r6 r1", "r15 = org apache tool ant taskdefs optional ejb websphere deployment tool r0", "$ r7 = r15 get config", "$ r8 = $ r7 dtd location", "r3 = $ r8 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r9 = r3 next", "r4 = org apache tool ant taskdefs optional ejb ejb jar $ d t d location $ r9", "$ r10 = r4 get public id", "$ r11 = r4 get location", "r16 = org apache tool ant taskdefs optional ejb descriptor handler r12", "r16 register d t d $ r10 $ r11", "goto label1", "if $ z0 == 0 goto label2", "label r17 = org apache tool ant taskdefs optional ejb descriptor handler r12", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache tool ant taskdefs optional extension extension optional_extension_list", "$ r2 = org apache tool ant taskdefs optional extension extension get list r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional extension extension adapter r0", "specialinvoke r2 verify not a reference", "r3 = org apache tool ant taskdefs optional extension extension adapter r0", "r3 extension name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs optional extension extension adapter r0", "specialinvoke r4 verify not a reference", "r3 = new org apache tool ant util dewey decimal", "specialinvoke r3 < init > r1", "r5 = org apache tool ant taskdefs optional extension extension adapter r0", "r5 implementation version = r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional extension jar lib resolve task r0", "r2 property name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r2 = r7 append \\ `` location [ \\ ``", "r8 = org apache tool ant taskdefs optional extension resolvers location resolver r0", "$ r3 = r8 location", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` ] \\ ``", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional i18n translate r0", "r2 start token = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r18 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0", "$ r1 = r18 task", "$ r2 = $ r1 get action", "if $ r2 ! = null goto label1", "r14 = new org apache tool ant build exception", "specialinvoke r14 < init > \\ `` the \\\\\\ `` action\\\\\\ `` attribute must be set\\ ``", "r19 = java lang throwable r14", "throw r19", "if $ r2 ! = null goto label1", "label r20 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0", "$ z0 = r20 be action valid", "if $ z0 ! = 0 goto label2", "r16 = new org apache tool ant build exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r7 = r15 append \\ `` invalid action \\\\\\ `` \\ ``", "r21 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0", "$ r8 = r21 task", "$ r9 = $ r8 get action", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 append \\ `` \\\\\\ `` passed\\ ``", "$ r12 = $ r11 to string", "specialinvoke r16 < init > $ r12", "r22 = java lang throwable r16", "throw r22", "if $ z0 ! = 0 goto label2", "label r23 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0", "$ r3 = r23 classpath", "if $ r3 ! = null goto label3", "r17 = new org apache tool ant build exception", "specialinvoke r17 < init > \\ `` the classpath attribute must be set\\ ``", "r24 = java lang throwable r17", "throw r24", "if $ r3 ! = null goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [], [35], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0", "$ r1 = r2 password", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z1 = 0", "r6 = org apache tool ant taskdefs optional j2ee jonas hot deployment tool r0", "$ r2 = r6 get task", "r1 = $ r2 get action", "i1 = 0", "label $ r3 = org apache tool ant taskdefs optional j2ee jonas hot deployment tool valid_actions", "$ i0 = lengthof $ r3", "if i1 > = $ i0 goto label3", "$ r4 = org apache tool ant taskdefs optional j2ee jonas hot deployment tool valid_actions", "$ r5 = $ r4 [ i1 ]", "$ z0 = r1 equal $ r5", "if $ z0 == 0 goto label2", "z1 = 1", "goto label3", "label return z1", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional j2ee server deploy r0", "r2 source = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0", "$ r2 = r4 get task", "r1 = $ r2 get action", "r3 = null", "$ z0 = r1 equal \\ `` deploy\\ ``", "if $ z0 ! = 0 goto label1", "$ z1 = r1 equal \\ `` update\\ ``", "if $ z1 == 0 goto label2", "label r5 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0", "r3 = r5 build deploy args", "goto label5", "label return r3", "if $ z1 == 0 goto label2", "label $ z2 = r1 equal \\ `` delete\\ ``", "if $ z2 ! = 0 goto label3", "$ z3 = r1 equal \\ `` undeploy\\ ``", "if $ z3 == 0 goto label4", "label r6 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0", "r3 = r6 build undeploy args", "if $ z3 == 0 goto label4", "label $ z4 = r1 equal \\ `` list\\ ``", "if $ z4 == 0 goto label5", "r7 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0", "r3 = r7 build list args"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = org apache tool ant taskdefs optional javacc j j doc r0", "$ r1 = r5 optional attrs", "if z0 == 0 goto label1", "$ r4 = java lang boolean true", "goto label2", "label $ r1 put \\ `` text\\", "r6 = org apache tool ant taskdefs optional javacc j j doc r0", "r6 plain text = z0", "return", "if z0 == 0 goto label1", "label $ r4 = java lang boolean false"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = org apache tool ant taskdefs optional javacc j j doc r0", "$ r1 = r5 optional attrs", "if z0 == 0 goto label1", "$ r4 = java lang boolean true", "goto label2", "label $ r1 put \\ `` one_table\\", "return", "if z0 == 0 goto label1", "label $ r4 = java lang boolean false"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant taskdefs optional javacc j j tree r0", "$ r2 = r4 optional attrs", "$ r2 put \\ `` node_prefix\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional javah r0", "r2 cl = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional jsp jsp c r0", "$ r1 = r2 uriroot", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tool ant taskdefs optional net set proxy r0", "r1 sock proxy port = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional pvc pvc r0", "$ r1 = r2 filename format", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional pvc pvc r0", "r2 filename format = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional pvc pvc r0", "r2 line start = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional pvc pvc r0", "$ r1 = r2 pvc project", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional pvc pvc r0", "r2 revision = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache tool ant taskdefs optional replace reg exp r0", "$ r2 = r8 regex", "if $ r2 == null goto label1", "r6 = new org apache tool ant build exception", "specialinvoke r6 < init > \\ `` only one regular expression be allowed\\ ``", "r9 = java lang throwable r6", "throw r9", "if $ r2 == null goto label1", "label r7 = new org apache tool ant type regular expression", "specialinvoke r7 < init >", "r10 = org apache tool ant taskdefs optional replace reg exp r0", "r10 regex = r7", "r11 = org apache tool ant taskdefs optional replace reg exp r0", "$ r4 = r11 regex", "$ r4 set pattern r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional rpm r0", "r2 output = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r4 = r18 append \\ `` add schema \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "r21 = org apache tool ant taskdefs optional schema validate r0", "r21 log $ r6 4", "r1 validate namespace", "r22 = org apache tool ant taskdefs optional schema validate r0", "$ r7 = r22 schema location", "$ r8 = r1 get namespace", "$ r9 = $ r7 get $ r8", "r2 = org apache tool ant taskdefs optional schema validate $ schema location $ r9", "if r2 == null goto label1", "$ z0 = r2 equal r1", "if $ z0 ! = 0 goto label1", "r20 = new org apache tool ant build exception", "r19 = new java lang string builder", "specialinvoke r19 < init >", "$ r15 = r19 append \\ `` duplicate declaration of schema \\ ``", "$ r16 = $ r15 append r1", "$ r17 = $ r16 to string", "specialinvoke r20 < init > $ r17", "r23 = java lang throwable r20", "throw r23", "if $ z0 ! = 0 goto label1", "label r24 = org apache tool ant taskdefs optional schema validate r0", "$ r10 = r24 schema location", "$ r11 = r1 get namespace", "$ r10 put $ r11 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = javax xml parser s a x parser factory new instance", "r1 set validate 1", "r1 set namespace aware 1", "label r6 = r1 new s a x parser", "r7 = r6 get x m l reader", "label goto label5", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache tool ant taskdefs optional script script def r0", "r3 execute script r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs optional script script def r0", "$ r2 = r3 helper", "$ r2 set manager r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r17 = org apache tool ant taskdefs optional script script def base r0", "r3 = specialinvoke r17 get script", "$ z0 = r3 be attribute supported r1", "if $ z0 ! = 0 goto label1", "r16 = new org apache tool ant build exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r8 = r15 append \\ `` < \\ ``", "r18 = org apache tool ant taskdefs optional script script def base r0", "$ r9 = r18 get task type", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 append \\ `` > do not support the \\\\\\ `` \\ ``", "$ r12 = $ r11 append r1", "$ r13 = $ r12 append \\ `` \\\\\\ `` attribute\\ ``", "$ r14 = $ r13 to string", "specialinvoke r16 < init > $ r14", "r19 = java lang throwable r16", "throw r19", "if $ z0 ! = 0 goto label1", "label r20 = org apache tool ant taskdefs optional script script def base r0", "$ r4 = r20 attribute", "$ r4 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache tool ant build exception", "specialinvoke r3 < init > r1", "r4 = java lang throwable r3", "throw r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional so so r0", "$ r1 = r2 v server path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional so so r0", "$ r1 = r2 sos home", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal label r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal version r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs optional test funtest r0", "$ r2 = r3 setup", "r4 = org apache tool ant taskdefs optional test funtest r0", "specialinvoke r4 log override \\ `` setup\\", "r5 = org apache tool ant taskdefs optional test funtest r0", "r5 setup = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional test funtest r0", "$ r1 = r2 teardown exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org apache tool ant build exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "r11 = org apache tool ant taskdefs optional unix abstract access task r0", "$ r4 = r11 get task type", "$ r5 = r9 append $ r4", "$ r6 = $ r5 append \\ `` doesn\\'t support the command attribute\\ ``", "$ r7 = $ r6 to string", "r12 = org apache tool ant taskdefs optional unix abstract access task r0", "$ r8 = r12 get location", "specialinvoke r10 < init > $ r7 $ r8", "r13 = java lang throwable r10", "throw r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs optional unix symlink r0", "r1 overwrite = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs optional v msvss r0", "r2 from label = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = org apache tool ant taskdefs optional v msvss r0", "$ r1 = r8 version", "if $ r1 == null goto label1", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` -v\\ ``", "r9 = org apache tool ant taskdefs optional v msvss r0", "$ r4 = r9 version", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "goto label2", "label return $ r6", "if $ r1 == null goto label1", "label $ r6 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional v msvssadd r0", "$ r1 = r2 local path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "specialinvoke r0 set internal recursive z0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal version r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal date r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set internal comment r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs optional x m l validate task r0", "$ r2 = r3 create classpath", "$ r2 set refid r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant taskdefs optional x m l validate task r0", "$ r1 = r2 xml reader", "$ z0 = $ r1 instanceof org xml sax helper parser adapter", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs patch r0", "r1 fail on error = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs property helper task r0", "$ r2 = specialinvoke r3 get add delegate list", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs replace r0", "r1 fail on no replacement = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs rmic r0", "r2 d dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant taskdefs sign jar r0", "r2 sig alg = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache tool ant taskdefs s q l exec r0", "$ r1 = r3 row count property", "$ r2 = java lang integer to string i0", "r4 = org apache tool ant taskdefs s q l exec r0", "specialinvoke r4 set property $ r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache tool ant taskdefs truncate r0", "$ r2 = specialinvoke r3 get path", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs x s l t process r0", "r1 fail on error = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant taskdefs x s l t process r0", "r1 fail on no resource = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache tool ant taskdefs zip current_zip_extra", "$ r2 = $ r1 get", "$ r3 = org apache tool zip zip extra field [ ] $ r2", "$ r4 = org apache tool zip zip extra field [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type abstract file set r0", "r2 append selector r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool ant type optional script condition r0", "r1 value = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache tool ant type resource r0", "$ z0 = r5 be reference", "if $ z0 == 0 goto label1", "r6 = org apache tool ant type resource r0", "$ r3 = r6 get check ref", "$ r4 = org apache tool ant type resource $ r3", "$ l2 = $ r4 get last modified", "return $ l2", "if $ z0 == 0 goto label1", "label r7 = org apache tool ant type resource r0", "$ z1 = r7 be exist", "if $ z1 == 0 goto label2", "r8 = org apache tool ant type resource r0", "$ r1 = r8 lastmodified", "if $ r1 ! = null goto label3", "label return 0l", "if $ r1 ! = null goto label3", "label r9 = org apache tool ant type resource r0", "$ r2 = r9 lastmodified", "l0 = $ r2 long value", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label4", "$ l3 = 0l", "goto label5", "label return $ l3", "if $ b1 > = 0 goto label4", "label $ l3 = l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache tool ant type resource archive r0", "$ r3 = r4 get project", "r1 set project $ r3", "r1 set src resource r2", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tool ant type resource selector name r0", "r2 regex = r1", "r3 = org apache tool ant type resource selector name r0", "r3 reg = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tool ant type resource string resource r0", "r4 check child allow", "r5 = org apache tool ant type resource string resource r0", "$ r2 = r5 get project", "$ r3 = $ r2 replace property r1", "r6 = org apache tool ant type resource string resource r0", "r6 set value $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java io file separator", "$ r2 = org apache tool ant type selector selector utils tokenize path r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache tool ant type selector tokenized pattern", "r5 = org apache tool ant type selector tokenized path r0", "$ r3 = r5 path", "r6 = org apache tool ant type selector tokenized path r0", "$ r2 = r6 tokenized path", "specialinvoke r4 < init > $ r3 $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org apache tool ant util file utils r0", "$ r4 = r5 create temp file r1 r2 r3 0 0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache tool ant util script runner base r0", "$ r3 = r8 script", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "r9 = org apache tool ant util script runner base r0", "r9 script = $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache tool ant util vector set r0", "specialinvoke r2 do add i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool ant util worker ant r0", "r1 = r2 get build exception", "if r1 == null goto label1", "r3 = java lang throwable r1", "throw r3", "if r1 == null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tool tar tar entry r0", "$ b0 = r2 link flag", "if $ b0 ! = 75 goto label1", "r3 = org apache tool tar tar entry r0", "$ r1 = r3 name", "$ z0 = $ r1 equal \\ `` @ long link\\ ``", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = i0 + 7", "$ b2 = r0 [ $ i1 ]", "$ l3 = long $ b2", "$ l4 = $ l3 < < 56", "l41 = $ l4 & 9151314442816847872l", "$ i5 = i0 + 6", "$ b6 = r0 [ $ i5 ]", "$ l7 = long $ b6", "$ l8 = $ l7 < < 48", "$ l9 = $ l8 & 71776119061217280l", "l42 = l41 + $ l9", "$ i10 = i0 + 5", "$ b11 = r0 [ $ i10 ]", "$ l12 = long $ b11", "$ l13 = $ l12 < < 40", "$ l14 = $ l13 & 280375465082880l", "l43 = l42 + $ l14", "$ i15 = i0 + 4", "$ b16 = r0 [ $ i15 ]", "$ l17 = long $ b16", "$ l18 = $ l17 < < 32", "$ l19 = $ l18 & 1095216660480l", "l44 = l43 + $ l19", "$ i20 = i0 + 3", "$ b21 = r0 [ $ i20 ]", "$ l22 = long $ b21", "$ l23 = $ l22 < < 24", "$ l24 = $ l23 & 4278190080l", "l45 = l44 + $ l24", "$ i25 = i0 + 2", "$ b26 = r0 [ $ i25 ]", "$ l27 = long $ b26", "$ l28 = $ l27 < < 16", "$ l29 = $ l28 & 16711680l", "l46 = l45 + $ l29", "$ i30 = i0 + 1", "$ b31 = r0 [ $ i30 ]", "$ l32 = long $ b31", "$ l33 = $ l32 < < 8", "$ l34 = $ l33 & 65280l", "l47 = l46 + $ l34", "$ b35 = r0 [ i0 ]", "$ l36 = long $ b35", "$ l37 = $ l36 & 255l", "l48 = l47 + $ l37", "r1 = java math big integer value of l48", "$ i38 = i0 + 7", "$ b39 = r0 [ $ i38 ]", "$ b40 = $ b39 & -128", "if $ b40 ! = -128 goto label1", "$ r2 = r1 set bit 63", "goto label2", "label return $ r2", "if $ b40 ! = -128 goto label1", "label $ r2 = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [], [55], [56], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tool zip zip output stream r0", "r1 fallback to u t f8 = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return -1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = org antlr v4 runtime atn parse info r0", "$ r2 = r4 atn simulator", "r1 = $ r2 get decision info", "l2 = 0l", "i3 = 0", "label $ i0 = lengthof r1", "if i3 > = $ i0 goto label2", "$ r3 = r1 [ i3 ]", "$ l1 = $ r3 s l l_ total look", "l2 = l2 + $ l1", "i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label2", "label return l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org antlr v4 runtime buffer token stream r0", "r1 seek 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org antlr v4 runtime misc interval r0", "$ i1 = r2 a", "$ i0 = r1 a", "if $ i1 > $ i0 goto label1", "r3 = org antlr v4 runtime misc interval r0", "$ i3 = r3 b", "$ i2 = r1 a", "if $ i3 < $ i2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i3 < $ i2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r7 = new org antlr v4 runtime misc interval set", "$ r5 = newarray int [ 0 ]", "specialinvoke r7 < init > $ r5", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r0 [ i1 ]", "r8 = org antlr v4 runtime misc int set r3", "r7 add all r8", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r7 = org antlr v4 runtime misc interval set r0", "$ z0 = r7 be nil", "if $ z0 == 0 goto label1", "r6 = new java lang runtime exception", "specialinvoke r6 < init > \\ `` set be empty\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r8 = org antlr v4 runtime misc interval set r0", "$ r3 = r8 interval", "r9 = org antlr v4 runtime misc interval set r0", "$ r2 = r9 interval", "$ i0 = $ r2 size", "$ i1 = $ i0 - 1", "$ r4 = $ r3 get $ i1", "r1 = org antlr v4 runtime misc interval $ r4", "$ i2 = r1 b", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = r1 instanceof org antlr v4 runtime misc interval set", "if $ z0 ! = 0 goto label2", "label return 0", "if $ z0 ! = 0 goto label2", "label r2 = org antlr v4 runtime misc interval set r1", "r5 = org antlr v4 runtime misc interval set r0", "$ r4 = r5 interval", "$ r3 = r2 interval", "$ z1 = $ r4 equal $ r3", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org antlr v4 runtime misc interval set r0", "$ r2 = r5 interval", "i1 = $ r2 size", "i4 = 0", "i5 = 0", "label if i5 > = i1 goto label5", "r6 = org antlr v4 runtime misc interval set r0", "$ r3 = r6 interval", "$ r4 = $ r3 get i5", "r1 = org antlr v4 runtime misc interval $ r4", "i2 = r1 a", "i3 = r1 b", "i6 = i2", "label if i6 > i3 goto label4", "if i4 ! = i0 goto label3", "return i6", "if i4 ! = i0 goto label3", "label i4 = i4 + 1", "i6 = i6 + 1", "goto label2", "label if i6 > i3 goto label4", "label i5 = i5 + 1", "goto label1", "label if i5 > = i1 goto label5", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org antlr v4 runtime parser r0", "$ r2 = r4 _input", "$ r3 = $ r2 get token source", "$ r3 set token factory r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r20 = org antlr v4 runtime parser r0", "r1 = r20 get serialize a t n", "if r1 ! = null goto label1", "r17 = new java lang unsupported operation exception", "specialinvoke r17 < init > \\ `` the current parser do not support an atn with bypass alternative \\ ``", "throw r17", "if r1 ! = null goto label1", "label $ r5 = org antlr v4 runtime parser bypass alt atn cache", "entermonitor $ r5", "label $ r6 = org antlr v4 runtime parser bypass alt atn cache", "$ r7 = $ r6 get r1", "r16 = org antlr v4 runtime atn atn $ r7", "if r16 ! = null goto label3", "r18 = new org antlr v4 runtime atn a t n deserialization option", "specialinvoke r18 < init >", "r18 set generate rule bypass transition 1", "r19 = new org antlr v4 runtime atn a t n deserializer", "specialinvoke r19 < init > r18", "$ r10 = r1 to char array", "r16 = r19 deserialize $ r10", "$ r11 = org antlr v4 runtime parser bypass alt atn cache", "$ r11 put r1 r16", "label exitmonitor $ r5", "label return r16"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org antlr v4 runtime tree terminal node impl", "specialinvoke r4 < init > r2", "r5 = org antlr v4 runtime tree terminal node r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org antlr v4 runtime parser rule context r0", "$ r2 = r6 child", "if $ r2 ! = null goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = org antlr v4 runtime parser rule context r0", "r7 child = r5", "label r8 = org antlr v4 runtime parser rule context r0", "$ r3 = r8 child", "$ r3 add r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org antlr v4 runtime parser rule context r0", "r5 = org antlr v4 runtime tree parse tree r1", "$ r2 = r4 add any child r5", "$ r3 = org antlr v4 runtime rule context $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org antlr v4 runtime parser rule context r0", "r5 = org antlr v4 runtime tree parse tree r1", "$ r2 = r4 add any child r5", "$ r3 = org antlr v4 runtime rule context $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org antlr v4 runtime recognizer r0", "r2 _interp = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org antlr v4 runtime tree pattern parse tree match r0", "$ r1 = r2 mismatch node", "if $ r1 ! = null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org objectweb asm class visitor r0", "$ r2 = r4 cv", "if $ r2 == null goto label1", "r5 = org objectweb asm class visitor r0", "$ r3 = r5 cv", "$ r3 visit attribute r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org objectweb asm class visitor r0", "$ i0 = r6 api", "if $ i0 == 17301504 goto label1", "r5 = new java lang unsupported operation exception", "specialinvoke r5 < init > \\ `` this feature require asm8_experimental\\ ``", "throw r5", "if $ i0 == 17301504 goto label1", "label r7 = org objectweb asm class visitor r0", "$ r2 = r7 cv", "if $ r2 == null goto label2", "r8 = org objectweb asm class visitor r0", "$ r3 = r8 cv", "$ r3 visit permit subtype experimental r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org objectweb asm class writer r0", "$ r2 = r4 symbol table", "$ r3 = $ r2 add constant module r1", "$ i0 = $ r3 index", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org objectweb asm constant dynamic r0", "$ r1 = r2 bootstrap method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org objectweb asm constant dynamic r0", "$ r1 = r3 bootstrap method argument", "$ r2 = $ r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org objectweb asm field visitor r0", "$ r2 = r4 fv", "if $ r2 == null goto label1", "r5 = org objectweb asm field visitor r0", "$ r3 = r5 fv", "$ r3 visit attribute r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org objectweb asm handle r0", "$ i0 = r1 tag", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org objectweb asm method visitor r0", "$ r1 = r4 mv", "if $ r1 == null goto label1", "r5 = org objectweb asm method visitor r0", "$ r2 = r5 mv", "$ r3 = $ r2 visit annotation default", "return $ r3", "if $ r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = org objectweb asm method visitor r0", "$ r1 = r3 mv", "if $ r1 == null goto label1", "r4 = org objectweb asm method visitor r0", "$ r2 = r4 mv", "$ r2 visit int insn i0 i1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r4 = org objectweb asm method visitor r0", "$ r2 = r4 mv", "if $ r2 == null goto label1", "r5 = org objectweb asm method visitor r0", "$ r3 = r5 mv", "$ r3 visit line number i0 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org objectweb asm signature signature visitor r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org objectweb asm common module remapper", "r5 = org objectweb asm common class remapper r0", "$ i0 = r5 api", "r6 = org objectweb asm common class remapper r0", "$ r3 = r6 remapper", "specialinvoke r4 < init > $ i0 r1 $ r3", "r7 = org objectweb asm module visitor r4", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org objectweb asm common method r0", "$ r1 = r2 descriptor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org objectweb asm common method r0", "$ r1 = r3 descriptor", "$ r2 = org objectweb asm type get return type $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org objectweb asm tree abstract insn node r0", "$ r1 = r2 previous insn", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i2 = 0", "r3 = org objectweb asm tree insn list r0", "r2 = r3 first insn", "r4 = org objectweb asm tree insn list r0", "$ i0 = r4 size", "r1 = newarray org objectweb asm tree abstract insn node [ $ i0 ]", "label if r2 == null goto label2", "r1 [ i2 ] = r2", "$ i1 = i2", "i2 = i2 + 1", "r2 index = $ i1", "r2 = r2 next insn", "goto label1", "label if r2 == null goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org objectweb asm tree insn list r0", "r1 remove all 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org objectweb asm tree module open node r0", "$ r5 = r9 packaze", "r10 = org objectweb asm tree module open node r0", "$ i0 = r10 access", "r11 = org objectweb asm tree module open node r0", "$ r2 = r11 module", "if $ r2 ! = null goto label1", "$ r8 = null", "goto label2", "label r1 visit open $ r5 $ i0 $ r8", "return", "if $ r2 ! = null goto label1", "label r12 = org objectweb asm tree module open node r0", "$ r4 = r12 module", "$ r3 = newarray java lang string [ 0 ]", "$ r6 = $ r4 to array $ r3", "$ r8 = java lang string [ ] $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r4 = org objectweb asm util trace signature visitor r0", "$ r1 = r4 exception", "if $ r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r5 = org objectweb asm util trace signature visitor r0", "$ r2 = r5 exception", "$ r3 = $ r2 to string"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org assertj core api abstract big decimal assert r0", "$ r6 = r9 big decimal", "r10 = org assertj core api abstract big decimal assert r0", "$ r5 = r10 info", "r11 = org assertj core api abstract big decimal assert r0", "$ r3 = r11 actual", "$ r4 = java lang number $ r3", "r12 = org assertj core api assertion info $ r5", "$ r6 assert be not close to r12 $ r4 r1 r2", "r13 = org assertj core api abstract big decimal assert r0", "$ r7 = r13 myself", "$ r8 = org assertj core api abstract big decimal assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 be less than or equal to r1", "$ r3 = org assertj core api abstract big decimal assert $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 be great than or equal to r1", "$ r3 = org assertj core api abstract big decimal assert $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org assertj core api abstract boolean array assert r0", "$ r5 = r8 array", "r9 = org assertj core api abstract boolean array assert r0", "$ r4 = r9 info", "r10 = org assertj core api abstract boolean array assert r0", "$ r2 = r10 actual", "$ r3 = boolean [ ] $ r2", "r11 = org assertj core api assertion info $ r4", "$ r5 assert contain sequence r11 $ r3 r1", "r12 = org assertj core api abstract boolean array assert r0", "$ r6 = r12 myself", "$ r7 = org assertj core api abstract boolean array assert $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray java lang object [ 1 ]", "$ r2 [ 0 ] = r1", "r4 = org assertj core api abstract map assert r0", "$ r3 = r4 contain key $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org assertj core api abstract map assert r0", "$ r5 = r8 map", "r9 = org assertj core api abstract map assert r0", "$ r4 = r9 info", "r10 = org assertj core api abstract map assert r0", "$ r2 = r10 actual", "$ r3 = java util map $ r2", "r11 = org assertj core api assertion info $ r4", "$ r5 assert contain key r11 $ r3 r1", "r12 = org assertj core api abstract map assert r0", "$ r6 = r12 myself", "$ r7 = org assertj core api abstract map assert $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r7 = org assertj core api abstract object array assert r0", "$ r4 = r7 array", "r8 = org assertj core api abstract object array assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract object array assert r0", "$ r1 = r9 actual", "$ r2 = java lang object [ ] $ r1", "r10 = org assertj core api assertion info $ r3", "$ r4 assert contain only null r10 $ r2", "r11 = org assertj core api abstract object array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract object array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org assertj core internal common validation check sequence be not null r1", "r9 = org assertj core api abstract object array assert r0", "$ r3 = r9 array", "r10 = org assertj core api abstract object array assert r0", "$ r4 = r10 info", "r11 = org assertj core api abstract object array assert r0", "$ r2 = r11 actual", "$ r5 = java lang object [ ] $ r2", "$ r6 = org assertj core util iterable util to array r1", "r12 = org assertj core api assertion info $ r4", "$ r3 assert do not contain sequence r12 $ r5 $ r6", "r13 = org assertj core api abstract object array assert r0", "$ r7 = r13 myself", "$ r8 = org assertj core api abstract object array assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org assertj core api abstract object assert r0", "$ r3 = r10 object", "r11 = org assertj core api abstract object assert r0", "$ r4 = r11 info", "r12 = org assertj core api abstract object assert r0", "$ r5 = r12 actual", "r13 = org assertj core api abstract object assert r0", "$ r6 = r13 comparator by property or field", "r14 = org assertj core api abstract object assert r0", "$ r7 = r14 get comparators by type", "r15 = org assertj core api assertion info $ r4", "$ r3 assert be equal to ignore give field r15 $ r5 r1 $ r6 $ r7 r2", "r16 = org assertj core api abstract object assert r0", "$ r8 = r16 myself", "$ r9 = org assertj core api abstract object assert $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api abstract object assert r0", "$ r4 = r7 object", "r8 = org assertj core api abstract object assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract object assert r0", "$ r2 = r9 actual", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have no null field or property except r10 $ r2 r1", "r11 = org assertj core api abstract object assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract object assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org assertj core api abstract object assert r0", "$ r3 = r6 get comparators by type", "$ r3 put r2 r1", "r7 = org assertj core api abstract object assert r0", "$ r4 = r7 myself", "$ r5 = org assertj core api abstract object assert $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org assertj core api abstract zone date time assert assert date time a string parameter be not null r1", "r5 = org assertj core api abstract zone date time assert r0", "$ r2 = r5 parse r1", "$ r3 = specialinvoke r0 be not equal to $ r2", "$ r4 = org assertj core api abstract zone date time assert $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org assertj core util file line of r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org assertj core api atomic reference array assert r0", "$ r3 = r6 array", "r7 = org assertj core api atomic reference array assert r0", "$ r2 = r7 info", "r8 = org assertj core api atomic reference array assert r0", "$ r1 = r8 array", "r9 = org assertj core api assertion info $ r2", "$ r3 assert contain only null r9 $ r1", "r10 = org assertj core api atomic reference array assert r0", "$ r4 = r10 myself", "$ r5 = org assertj core api atomic reference array assert $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert be r10 $ r2 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert be exactly r10 $ r2 i0 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org assertj core api condition r0", "$ r2 = r4 predicate", "r5 = org assertj core api condition r0", "specialinvoke r5 check predicate $ r2", "r6 = org assertj core api condition r0", "$ r3 = r6 predicate", "$ z0 = $ r3 test r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org assertj core api writable assertion info r0", "$ r1 = r2 override error message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org assertj core data temporal unit offset r0", "$ r3 = r4 unit", "$ l0 = $ r3 between r1 r2", "$ l1 = java lang math ab $ l0", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org assertj core internal byte array r0", "$ r5 = r6 array", "r7 = org assertj core internal byte array r0", "$ r4 = r7 failure", "$ r5 assert start with r1 $ r4 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org assertj core internal failure r0", "$ z0 = r1 remove assert j related element from stack trace", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "org assertj core util precondition check not null r3 \\ `` the input stream to compare to should not be null\\ ``", "org assertj core internal input stream assert not null r1 r2", "label r16 = org assertj core internal input stream r0", "$ r6 = r16 diff", "r13 = $ r6 diff r2 r3", "$ z0 = r13 be empty", "if $ z0 == 0 goto label3", "label return", "if $ z0 == 0 goto label3", "label r17 = org assertj core internal input stream r0", "$ r7 = r17 failure", "$ r8 = org assertj core error should have same content should have same content r2 r3 r13", "$ r9 = $ r7 failure r1 $ r8", "throw $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r14 = org assertj core internal iterables r0", "r14 assert not null r1 r2", "org assertj core internal common validation check iterable be not null r1 r3", "$ r5 = org assertj core util stream stream r2", "r15 = org assertj core internal iterables r0", "$ r6 = iterables $ lambda_assert be subset of_1__4 bootstrap $ r15 r3", "$ r7 = $ r5 filter $ r6", "$ r8 = java util stream collector to list", "$ r9 = $ r7 collect $ r8", "r4 = java util list $ r9", "$ i0 = r4 size", "if $ i0 < = 0 goto label1", "r16 = org assertj core internal iterables r0", "$ r11 = r16 failure", "r17 = org assertj core internal iterables r0", "$ r10 = r17 comparison strategy", "$ r12 = org assertj core error should be subset of should be subset of r2 r3 r4 $ r10", "$ r13 = $ r11 failure r1 $ r12", "throw $ r13", "if $ i0 < = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang comparable r2", "r6 = org assertj core internal number r0", "$ r4 = r6 zero", "$ r5 = java lang comparable $ r4", "r7 = org assertj core internal number r0", "r7 assert not equal by comparison r1 $ r3 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang comparable r2", "r6 = org assertj core internal number r0", "$ r4 = r6 zero", "$ r5 = java lang comparable $ r4", "r7 = org assertj core internal number r0", "r7 assert great than or equal to r1 $ r3 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang comparable r2", "r6 = org assertj core internal number r0", "$ r4 = r6 zero", "$ r5 = java lang comparable $ r4", "r7 = org assertj core internal number r0", "r7 assert less than or equal to r1 $ r3 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org assertj core internal object array r0", "$ r4 = r5 array", "r6 = org assertj core internal object array r0", "$ r3 = r6 failure", "$ r4 assert contain only null r1 $ r3 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org assertj core internal object r0", "$ z0 = specialinvoke r7 actual be exactly instance of type r2 r3 r1", "if $ z0 == 0 goto label1", "r8 = org assertj core internal object r0", "$ r4 = r8 failure", "$ r5 = org assertj core error should not be exactly instance of should not be exactly instance r2 r3", "$ r6 = $ r4 failure r1 $ r5", "throw $ r6", "if $ z0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = org assertj core internal object r0", "specialinvoke r8 check be not null and not empty r3", "r9 = org assertj core internal object r0", "$ z0 = specialinvoke r9 be actual in r2 r3", "if $ z0 ! = 0 goto label1", "r10 = org assertj core internal object r0", "$ r5 = r10 failure", "r11 = org assertj core internal object r0", "$ r4 = r11 comparison strategy", "$ r6 = org assertj core error should be in should be in r2 r3 $ r4", "$ r7 = $ r5 failure r1 $ r6", "throw $ r7", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if r0 ! = null goto label1", "label $ r1 = r0 get time", "$ r2 = org assertj core util date util format a datetime $ r1"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label r1 = java util calendar get instance", "r1 set time r0", "return r1"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core util date util to calendar r0", "$ i0 = $ r1 get 14", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org assertj core util diff patch r0", "$ r2 = r4 delta", "$ r1 = org assertj core util diff delta comparator instance", "java util collection sort $ r2 $ r1", "r5 = org assertj core util diff patch r0", "$ r3 = r5 delta", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org assertj core util introspection field support r0", "r1 allow use private field = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = org assertj core util introspection introspection get property getter r1 r3", "label $ r5 = newarray java lang object [ 0 ]", "$ r6 = r4 invoke r3 $ r5", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r7 = org assertj core api abstract boolean array assert r0", "$ r4 = r7 array", "r8 = org assertj core api abstract boolean array assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract boolean array assert r0", "$ r1 = r9 actual", "$ r2 = boolean [ ] $ r1", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have size great than r10 $ r2 i0", "r11 = org assertj core api abstract boolean array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract boolean array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r7 = org assertj core api abstract iterable assert r0", "$ r4 = r7 iterables", "r8 = org assertj core api abstract iterable assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract iterable assert r0", "$ r1 = r9 actual", "$ r2 = java lang iterable $ r1", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have size less than r10 $ r2 i0", "r11 = org assertj core api abstract iterable assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract iterable assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org assertj core api abstract object array assert r0", "$ r5 = r8 array", "r9 = org assertj core api abstract object array assert r0", "$ r4 = r9 info", "r10 = org assertj core api abstract object array assert r0", "$ r2 = r10 actual", "$ r3 = java lang object [ ] $ r2", "r11 = org assertj core api assertion info $ r4", "$ r5 assert contain only r11 $ r3 r1", "r12 = org assertj core api abstract object array assert r0", "$ r6 = r12 myself", "$ r7 = org assertj core api abstract object array assert $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api abstract object assert r0", "$ r4 = r7 object", "r8 = org assertj core api abstract object assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract object assert r0", "$ r2 = r9 actual", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have all null field or property except r10 $ r2 r1", "r11 = org assertj core api abstract object assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract object assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core api assumption assume that r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core api assumption assume that r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core api assumption assume that r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core api assumption assume that r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org assertj core api recursive comparison recursive comparison configuration r0", "$ r1 = r2 ignore type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org assertj core api recursive comparison assert r0", "$ r2 = r5 recursive comparison configuration", "$ r2 ignore field of type r1", "r6 = org assertj core api recursive comparison assert r0", "$ r3 = r6 myself", "$ r4 = org assertj core api recursive comparison assert $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org assertj core api recursive comparison assert r0", "$ r2 = r5 recursive comparison configuration", "$ r2 ignore collection order in field match regexes r1", "r6 = org assertj core api recursive comparison assert r0", "$ r3 = r6 myself", "$ r4 = org assertj core api recursive comparison assert $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org assertj core configuration configuration r0", "$ z0 = r4 compare private field enable", "org assertj core api assertion set allow compare private field $ z0", "r5 = org assertj core configuration configuration r0", "$ z1 = r5 extract private field enable", "org assertj core api assertion set allow extract private field $ z1", "r6 = org assertj core configuration configuration r0", "$ z2 = r6 bare name property extraction enable", "org assertj core api assertion set extract bare name property method $ z2", "r7 = org assertj core configuration configuration r0", "$ z3 = r7 lenient date parsing enable", "org assertj core api assertion set lenient date parse $ z3", "r8 = org assertj core configuration configuration r0", "$ i0 = r8 max element for print", "org assertj core api assertion set max element for print $ i0", "r9 = org assertj core configuration configuration r0", "$ i1 = r9 max length for single line description", "org assertj core api assertion set max length for single line description $ i1", "r10 = org assertj core configuration configuration r0", "$ z4 = r10 remove assert j related element from stack trace enable", "org assertj core api assertion set remove assert j related element from stack trace $ z4", "r11 = org assertj core configuration configuration r0", "$ r1 = r11 representation", "org assertj core api assertion use representation $ r1", "r12 = org assertj core configuration configuration r0", "$ r2 = r12 additional date format", "$ r3 = configuration $ register custom date format__3 bootstrap $", "$ r2 for each $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "r6 = org assertj core internal file r0", "r6 assert be file r1 r2", "$ l1 = r2 length", "$ b2 = l0 cmp $ l1", "if $ b2 ! = 0 goto label1", "return", "if $ b2 ! = 0 goto label1", "label r7 = org assertj core internal file r0", "$ r3 = r7 failure", "$ r4 = org assertj core error should have size should have size r2 l0", "$ r5 = $ r3 failure r1 $ r4", "throw $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = r0 length", "r1 = newarray int [ $ i0 ]", "i3 = 0", "label $ i1 = lengthof r1", "if i3 > = $ i1 goto label3", "$ i2 = r0 get i3", "r1 [ i3 ] = $ i2", "i3 = i3 + 1", "goto label2", "if i3 > = $ i1 goto label3", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org assertj core api abstract assert r0", "$ r3 = r4 failure r1 r2", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api abstract object assert r0", "$ r4 = r7 object", "r8 = org assertj core api abstract object assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract object assert r0", "$ r2 = r9 actual", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have field or property r10 $ r2 r1", "r11 = org assertj core api abstract object assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract object assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org assertj core api atomic reference assert r0", "r13 be not null", "r14 = org assertj core api atomic reference assert r0", "$ r4 = r14 actual", "$ r5 = java util concurrent atomic atomic reference $ r4", "r2 = $ r5 get", "r15 = org assertj core api atomic reference assert r0", "$ r6 = r15 object", "$ r7 = $ r6 get comparison strategy", "$ z0 = $ r7 be equal r2 r1", "if $ z0 ! = 0 goto label1", "r16 = org assertj core api atomic reference assert r0", "$ r10 = r16 actual", "$ r11 = org assertj core error should have value should have value $ r10 r1", "r17 = org assertj core api atomic reference assert r0", "$ r12 = r17 assertion error $ r11", "throw $ r12", "if $ z0 ! = 0 goto label1", "label r18 = org assertj core api atomic reference assert r0", "$ r8 = r18 myself", "$ r9 = org assertj core api atomic reference assert $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org assertj core api assumption assume that r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org assertj core api abstract object assert r0", "$ r6 = r9 object", "r10 = org assertj core api abstract object assert r0", "$ r5 = r10 info", "r11 = org assertj core api abstract object assert r0", "$ r4 = r11 actual", "r12 = org assertj core api abstract object assert r0", "$ r3 = r12 comparator by property or field", "r13 = org assertj core api abstract object assert r0", "$ r2 = r13 comparator by type", "r14 = org assertj core api assertion info $ r5", "$ r6 assert be equal to ignore null field r14 $ r4 r1 $ r3 $ r2", "r15 = org assertj core api abstract object assert r0", "$ r7 = r15 myself", "$ r8 = org assertj core api abstract object assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api abstract object assert r0", "$ r4 = r7 object", "r8 = org assertj core api abstract object assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract object assert r0", "$ r2 = r9 actual", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have no null field or property except r10 $ r2 r1", "r11 = org assertj core api abstract object assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract object assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api abstract object assert r0", "$ r4 = r7 object", "r8 = org assertj core api abstract object assert r0", "$ r3 = r8 info", "r9 = org assertj core api abstract object assert r0", "$ r2 = r9 actual", "r10 = org assertj core api assertion info $ r3", "$ r4 assert have field or property r10 $ r2 r1", "r11 = org assertj core api abstract object assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api abstract object assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org assertj core api abstract object assert r0", "$ r6 = r9 object", "r10 = org assertj core api abstract object assert r0", "$ r5 = r10 info", "r11 = org assertj core api abstract object assert r0", "$ r4 = r11 actual", "r12 = org assertj core api abstract object assert r0", "$ r3 = r12 comparator by property or field", "r13 = org assertj core api abstract object assert r0", "$ r2 = r13 comparator by type", "r14 = org assertj core api assertion info $ r5", "$ r6 assert be equal to compare field by field recursively r14 $ r4 r1 $ r3 $ r2", "r15 = org assertj core api abstract object assert r0", "$ r7 = r15 myself", "$ r8 = org assertj core api abstract object assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org assertj core api abstract short assert r0", "$ r6 = r9 short", "r10 = org assertj core api abstract short assert r0", "$ r5 = r10 info", "r11 = org assertj core api abstract short assert r0", "$ r3 = r11 actual", "$ r4 = java lang number $ r3", "r12 = org assertj core api assertion info $ r5", "$ r6 assert be close to r12 $ r4 r1 r2", "r13 = org assertj core api abstract short assert r0", "$ r7 = r13 myself", "$ r8 = org assertj core api abstract short assert $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org assertj core api atomic reference array assert r0", "$ r4 = r7 array", "r8 = org assertj core api atomic reference array assert r0", "$ r3 = r8 info", "r9 = org assertj core api atomic reference array assert r0", "$ r2 = r9 array", "r10 = org assertj core api assertion info $ r3", "$ r4 assert be r10 $ r2 r1", "r11 = org assertj core api atomic reference array assert r0", "$ r5 = r11 myself", "$ r6 = org assertj core api atomic reference array assert $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init >", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new java util stack", "specialinvoke r3 < init >", "r4 = org objectweb fractal adl xml x m l writer r0", "specialinvoke r4 write \\ `` \\", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r1 = new com ibm asyncutil iteration async queue $ unbounded queue", "specialinvoke r1 < init > null", "r2 = com ibm asyncutil iteration async queue r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "r1 = new com ibm asyncutil iteration async queue $ buffer queue", "specialinvoke r1 < init > i0", "r2 = com ibm asyncutil iteration bound async queue r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["com jayway awaitility awaitility default catch uncaught exception = 0", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new com jayway awaitility core condition factory", "r8 = com jayway awaitility core condition factory r0", "$ r6 = r8 alias", "r9 = com jayway awaitility core condition factory r0", "$ r5 = r9 timeout", "r10 = com jayway awaitility core condition factory r0", "$ r4 = r10 poll interval", "r11 = com jayway awaitility core condition factory r0", "$ r3 = r11 poll delay", "r12 = com jayway awaitility core condition factory r0", "$ z0 = r12 catch uncaught exception", "specialinvoke r7 < init > $ r6 $ r5 $ r4 $ r3 $ z0 r1", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com jayway awaitility core field supplier builder r0", "r4 expect field type = r1", "r3 = new com jayway awaitility core field supplier builder $ name and annotation field supplier", "r5 = com jayway awaitility core field supplier builder r0", "specialinvoke r3 < init > r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r8 = new com jayway awaitility reflect assignable to field type matcher strategy", "specialinvoke r8 < init > r1", "r10 = com jayway awaitility reflect field matcher strategy r8", "r2 = com jayway awaitility reflect whitebox impl find field in hierarchy r0 r10", "label $ r5 = r2 get r0", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = null", "$ z0 = com jayway awaitility reflect whitebox impl be class r0", "if $ z0 == 0 goto label1", "r1 = java lang class r0", "goto label2", "label return r1", "if $ z0 == 0 goto label1", "label if r0 == null goto label2", "r1 = r0 get class"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org awaitility core predicate exception ignorer", "$ r2 = awaitility $ lambda_ignore exception by default_2__5 bootstrap $ r0", "specialinvoke r3 < init > $ r2", "r4 = org awaitility core exception ignorer r3", "org awaitility awaitility default exception ignorer = r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = new org awaitility core condition factory", "r12 = org awaitility core condition factory r0", "$ r4 = r12 alias", "r13 = org awaitility core condition factory r0", "$ r5 = r13 timeout constraint", "r14 = org awaitility core condition factory r0", "$ r6 = r14 poll interval", "r15 = org awaitility core condition factory r0", "$ r7 = r15 poll delay", "r16 = org awaitility core condition factory r0", "$ z0 = r16 catch uncaught exception", "r10 = new org awaitility core predicate exception ignorer", "specialinvoke r10 < init > r1", "r17 = org awaitility core condition factory r0", "$ r9 = r17 condition evaluation listener", "r18 = org awaitility core condition factory r0", "$ r8 = r18 executor lifecycle", "r19 = org awaitility core exception ignorer r10", "specialinvoke r11 < init > $ r4 $ r5 $ r6 $ r7 $ z0 r19 $ r9 $ r8", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new net bytebuddy asm asm visitor wrapper $ for declare method", "specialinvoke r5 < init >", "$ r3 = newarray net bytebuddy asm asm visitor wrapper $ for declare method $ method visitor wrapper [ 1 ]", "$ r3 [ 0 ] = r0", "r6 = net bytebuddy asm asm visitor wrapper $ for declare method $ method visitor wrapper [ ] $ r3", "$ r4 = r5 invokable r1 r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = net bytebuddy matcher element matcher be method", "$ r4 = $ r3 and r1", "r6 = net bytebuddy asm modifier adjustment r0", "r7 = net bytebuddy matcher element matcher $ r4", "$ r5 = r6 with invokable modifier r7 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = net bytebuddy matcher element matcher any", "r4 = net bytebuddy asm modifier adjustment r0", "r5 = net bytebuddy matcher element matcher $ r2", "$ r3 = r4 with constructor modifier r5 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new net bytebuddy asm type reference adjustment", "$ r1 = net bytebuddy matcher element matcher none", "specialinvoke $ r0 < init > 1 $ r1", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = net bytebuddy utility java type record", "$ r3 = $ r2 get type stub", "$ r4 = $ r3 get name", "$ r7 = net bytebuddy description type type description $ generic object", "$ r5 = newarray net bytebuddy description modifier modifier contributor $ for type [ 1 ]", "$ r6 = net bytebuddy description modifier visibility public", "$ r5 [ 0 ] = $ r6", "r61 = net bytebuddy description modifier modifier contributor $ for type [ ] $ r5", "$ r8 = net bytebuddy dynamic scaffold instrument type $ default of $ r4 $ r7 r61", "r56 = new net bytebuddy description method method description $ token", "specialinvoke r56 < init > 4", "$ r10 = $ r8 with method r56", "r57 = new net bytebuddy description method method description $ token", "$ r12 = java lang integer type", "$ r13 = net bytebuddy description type type description $ for load type of $ r12", "$ r14 = $ r13 a generic type", "specialinvoke r57 < init > \\ `` hash code\\", "$ r15 = $ r10 with method r57", "r58 = new net bytebuddy description method method description $ token", "$ r17 = java lang boolean type", "$ r18 = net bytebuddy description type type description $ for load type of $ r17", "$ r19 = $ r18 a generic type", "$ r20 = net bytebuddy description type type description $ generic object", "$ r21 = java util collection singleton list $ r20", "specialinvoke r58 < init > \\ `` equals\\", "$ r22 = $ r15 with method r58", "r59 = new net bytebuddy description method method description $ token", "$ r24 = net bytebuddy description type type description $ for load type of class \\ `` ljava lang string \\ ``", "$ r25 = $ r24 a generic type", "specialinvoke r59 < init > \\ `` to string\\", "$ r26 = $ r22 with method r59", "r1 = $ r26 a generic type", "r60 = new net bytebuddy dynamic scaffold subclass subclass dynamic type builder", "r62 = net bytebuddy byte buddy r0", "$ r29 = r62 instrument type factory", "r63 = net bytebuddy byte buddy r0", "$ r28 = r63 name strategy", "$ r30 = $ r28 subclass r1", "$ r31 = $ r29 subclass $ r30 17 r1", "$ r32 = $ r31 with record 1", "r64 = net bytebuddy byte buddy r0", "$ r43 = r64 class file version", "r65 = net bytebuddy byte buddy r0", "$ r42 = r65 auxiliary type name strategy", "r66 = net bytebuddy byte buddy r0", "$ r41 = r66 annotation value filter factory", "r67 = net bytebuddy byte buddy r0", "$ r40 = r67 annotation retention", "r68 = net bytebuddy byte buddy r0", "$ r39 = r68 implementation context factory", "r69 = net bytebuddy byte buddy r0", "$ r38 = r69 method graph compiler", "r70 = net bytebuddy byte buddy r0", "$ r37 = r70 type validation", "r71 = net bytebuddy byte buddy r0", "$ r36 = r71 visibility bridge strategy", "r72 = net bytebuddy byte buddy r0", "$ r35 = r72 class writer strategy", "r73 = net bytebuddy byte buddy r0", "$ r34 = r73 ignore method", "$ r33 = net bytebuddy byte buddy $ record constructor strategy instance", "r74 = net bytebuddy dynamic scaffold subclass constructor strategy $ r33", "specialinvoke r60 < init > $ r32 $ r43 $ r42 $ r41 $ r40 $ r39 $ r38 $ r37 $ r36 $ r35 $ r34 r74", "$ r44 = net bytebuddy matcher element matcher be hash code", "r75 = net bytebuddy matcher element matcher $ r44", "$ r45 = r60 method r75", "$ r46 = net bytebuddy byte buddy $ record object method hash_code", "r76 = net bytebuddy implementation implementation $ r46", "$ r47 = $ r45 intercept r76", "$ r48 = net bytebuddy matcher element matcher be equal", "r77 = net bytebuddy matcher element matcher $ r48", "$ r49 = $ r47 method r77", "$ r50 = net bytebuddy byte buddy $ record object method equal", "r78 = net bytebuddy implementation implementation $ r50", "$ r51 = $ r49 intercept r78", "$ r52 = net bytebuddy matcher element matcher be to string", "r79 = net bytebuddy matcher element matcher $ r52", "$ r53 = $ r51 method r79", "$ r54 = net bytebuddy byte buddy $ record object method to_string", "r80 = net bytebuddy implementation implementation $ r54", "$ r55 = $ r53 intercept r80", "r81 = net bytebuddy dynamic dynamic type $ builder $ r55", "return r81"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get class loader", "$ r3 = net bytebuddy dynamic class file locator $ for class loader of $ r2", "r5 = net bytebuddy byte buddy r0", "$ r4 = r5 rebase r1 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r7 = net bytebuddy implementation bytecode constant null constant instance", "r22 = net bytebuddy implementation bytecode stack manipulation $ r7", "return r22", "if r0 ! = null goto label1", "label r17 = new java io byte array output stream", "specialinvoke r17 < init >", "r18 = new java io object output stream", "specialinvoke r18 < init > r17", "label r18 write object r0", "label r18 close", "goto label5", "label r19 = new net bytebuddy implementation bytecode constant serialize constant", "$ r6 = r17 to string \\ `` iso-8859-1\\ ``", "specialinvoke r19 < init > $ r6", "label r23 = net bytebuddy implementation bytecode stack manipulation r19", "return r23"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be primitive", "if $ z0 == 0 goto label5", "$ r2 = java lang long type", "$ z1 = r0 represent $ r2", "if $ z1 == 0 goto label1", "$ r10 = net bytebuddy implementation bytecode member method return long", "r11 = net bytebuddy implementation bytecode stack manipulation $ r10", "return r11", "if $ z1 == 0 goto label1", "label $ r3 = java lang double type", "$ z2 = r0 represent $ r3", "if $ z2 == 0 goto label2", "$ r9 = net bytebuddy implementation bytecode member method return double", "r12 = net bytebuddy implementation bytecode stack manipulation $ r9", "return r12", "if $ z2 == 0 goto label2", "label $ r4 = java lang float type", "$ z3 = r0 represent $ r4", "if $ z3 == 0 goto label3", "$ r8 = net bytebuddy implementation bytecode member method return float", "r13 = net bytebuddy implementation bytecode stack manipulation $ r8", "return r13", "if $ z3 == 0 goto label3", "label $ r5 = java lang void type", "$ z4 = r0 represent $ r5", "if $ z4 == 0 goto label4", "$ r7 = net bytebuddy implementation bytecode member method return void", "r14 = net bytebuddy implementation bytecode stack manipulation $ r7", "return r14", "if $ z4 == 0 goto label4", "label $ r6 = net bytebuddy implementation bytecode member method return integer", "r15 = net bytebuddy implementation bytecode stack manipulation $ r6", "return r15", "if $ z0 == 0 goto label5", "label $ r1 = net bytebuddy implementation bytecode member method return reference", "r16 = net bytebuddy implementation bytecode stack manipulation $ r1", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "$ r1 = net bytebuddy implementation equal method $ type property comparator for_enumeration_types", "r3 = net bytebuddy implementation equal method r0", "r4 = java util comparator $ r1", "$ r2 = r3 with field order r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new net bytebuddy description method method description $ for load constructor", "specialinvoke r3 < init > r0", "r4 = net bytebuddy description method method description r3", "$ r2 = net bytebuddy implementation method call invoke r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray net bytebuddy implementation method call $ argument loader $ factory [ 1 ]", "$ r2 = net bytebuddy implementation method call $ argument loader $ for method parameter $ of instrument method instance", "$ r1 [ 0 ] = $ r2", "r4 = net bytebuddy implementation method call r0", "r5 = net bytebuddy implementation method call $ argument loader $ factory [ ] $ r1", "$ r3 = r4 with r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r1 = new net bytebuddy matcher primitive type matcher", "specialinvoke r1 < init >", "r2 = net bytebuddy matcher element matcher $ junction r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "specialinvoke r0 visit var insn i0 i1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "specialinvoke r0 visit table switch insn i0 i1 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = com github benmanes caffeine cache stats cache stats r0", "l0 = r1 request count", "$ b1 = l0 cmp 0l", "if $ b1 ! = 0 goto label1", "$ d2 = 1 0", "goto label2", "label return $ d2", "if $ b1 ! = 0 goto label1", "label r2 = com github benmanes caffeine cache stats cache stats r0", "$ l2 = r2 hit count", "$ d1 = double $ l2", "$ d0 = double l0", "$ d2 = $ d1 $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = com github benmanes caffeine cache stats cache stats r0", "$ l0 = r1 eviction count", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r6 = com github benmanes caffeine cache timer wheel r0", "l1 = r6 nanos", "label r7 = com github benmanes caffeine cache timer wheel r0", "r7 nanos = l0", "i11 = 0", "label $ r1 = com github benmanes caffeine cache timer wheel shift", "$ i4 = lengthof $ r1", "if i11 > = $ i4 goto label4", "$ r2 = com github benmanes caffeine cache timer wheel shift", "$ l5 = $ r2 [ i11 ]", "$ i6 = int $ l5", "l2 = l1 > > > $ i6", "$ r3 = com github benmanes caffeine cache timer wheel shift", "$ l7 = $ r3 [ i11 ]", "$ i8 = int $ l7", "l3 = l0 > > > $ i8", "$ l9 = l3 - l2", "$ b10 = $ l9 cmp 0l", "if $ b10 > 0 goto label3", "goto label4", "label goto label6", "label return", "if $ b10 > 0 goto label3", "label r8 = com github benmanes caffeine cache timer wheel r0", "r8 expire i11 l2 l3", "i11 = i11 + 1", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org objectweb fractal cecilia adl ant think a d l r0", "$ r2 = r8 src path", "if $ r2 == null goto label1", "r6 = new org apache tool ant build exception", "specialinvoke r6 < init > \\ `` src path can not be specify twice \\ ``", "r9 = java lang throwable r6", "throw r9", "if $ r2 == null goto label1", "label r7 = new org apache tool ant type path", "r10 = org objectweb fractal cecilia adl ant think a d l r0", "$ r4 = r10 get project", "specialinvoke r7 < init > $ r4 r1", "r11 = org objectweb fractal cecilia adl ant think a d l r0", "r11 src path = r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["c0 = @ parameter0", "$ r2 = newarray org checkerframework checker formatter qual conversion category [ 5 ]", "$ r3 = org checkerframework checker formatter qual conversion category general", "$ r2 [ 0 ] = $ r3", "$ r4 = org checkerframework checker formatter qual conversion category char", "$ r2 [ 1 ] = $ r4", "$ r5 = org checkerframework checker formatter qual conversion category int", "$ r2 [ 2 ] = $ r5", "$ r6 = org checkerframework checker formatter qual conversion category float", "$ r2 [ 3 ] = $ r6", "$ r7 = org checkerframework checker formatter qual conversion category time", "$ r2 [ 4 ] = $ r7", "i1 = lengthof $ r2", "i2 = 0", "label if i2 > = i1 goto label3", "r1 = $ r2 [ i2 ]", "$ r9 = r1 char", "$ r10 = java lang string value of c0", "$ z0 = $ r9 contain $ r10", "if $ z0 == 0 goto label2", "return r1", "if $ z0 == 0 goto label2", "label i2 = i2 + 1", "goto label1", "label if i2 > = i1 goto label3", "label $ r8 = new java lang illegal argument exception", "specialinvoke $ r8 < init >", "throw $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["b0 = @ parameter0", "$ s1 = b0 & 255", "$ s2 = short $ s1", "return $ s2"], "adj": [[1], [2], [3], []]}
{"nodes": ["b0 = @ parameter0", "i1 = @ parameter1", "$ i2 = java lang byte to unsigned int b0", "$ r0 = java lang integer to unsigned string $ i2 i1", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = com fasterxml classmate resolve type with member r0", "$ r1 = r4 _static field", "if $ r1 ! = null goto label1", "r5 = com fasterxml classmate resolve type with member r0", "$ r3 = r5 resolve static field", "r6 = com fasterxml classmate resolve type with member r0", "r6 _static field = $ r3", "label r7 = com fasterxml classmate resolve type with member r0", "$ r2 = r7 _static field", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r29 = com rits clone cloner r0", "$ r2 = r29 fast cloners", "r22 = new com rits clone fast cloner calendar", "specialinvoke r22 < init >", "$ r2 put class \\ `` ljava util gregorian calendar \\", "r30 = com rits clone cloner r0", "$ r5 = r30 fast cloners", "r23 = new com rits clone fast cloner array list", "specialinvoke r23 < init >", "$ r5 put class \\ `` ljava util array list \\", "r31 = com rits clone cloner r0", "$ r8 = r31 fast cloners", "r24 = new com rits clone fast cloner link list", "specialinvoke r24 < init >", "$ r8 put class \\ `` ljava util link list \\", "r32 = com rits clone cloner r0", "$ r11 = r32 fast cloners", "r25 = new com rits clone fast cloner hash set", "specialinvoke r25 < init >", "$ r11 put class \\ `` ljava util hash set \\", "r33 = com rits clone cloner r0", "$ r14 = r33 fast cloners", "r26 = new com rits clone fast cloner hash map", "specialinvoke r26 < init >", "$ r14 put class \\ `` ljava util hash map \\", "r34 = com rits clone cloner r0", "$ r17 = r34 fast cloners", "r27 = new com rits clone fast cloner tree map", "specialinvoke r27 < init >", "$ r17 put class \\ `` ljava util tree map \\", "r35 = com rits clone cloner r0", "$ r20 = r35 fast cloners", "r28 = new com rits clone fast cloner concurrent hash map", "specialinvoke r28 < init >", "$ r20 put class \\ `` ljava util concurrent concurrent hash map \\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com rits clone cloner r0", "$ r2 = r3 null instead", "$ r2 add all r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org cometd oort oort r0", "$ r1 = r2 _url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org cometd oort oort r0", "$ r1 = r2 _comet listener", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org cometd server server session impl r0", "r1 _transient interval = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` select * from stream where id=\\ ``", "$ r3 = com pryv database query generator format text value r0", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` \\ ``", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com pryv filter r0", "$ r2 = r6 stream", "if $ r2 ! = null goto label1", "r5 = new java util hash set", "specialinvoke r5 < init >", "r7 = com pryv filter r0", "r7 stream = r5", "label r8 = com pryv filter r0", "$ r3 = r8 stream", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com pryv model event r0", "$ r2 = r6 tag", "if $ r2 ! = null goto label1", "r5 = new java util hash set", "specialinvoke r5 < init >", "r7 = com pryv model event r0", "r7 tag = r5", "label r8 = com pryv model event r0", "$ r3 = r8 tag", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["$ z0 = com pryv pryv online activate", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = com pryv utils logger r0", "$ r3 = r11 stream", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r4 = r10 append r1", "$ r5 = $ r4 append \\ `` - thread\\ ``", "$ r6 = java lang thread current thread", "$ r7 = $ r6 get name", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 to string", "$ r3 println $ r9", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r27 = org apache common beanutils basic dyna bean r0", "$ r4 = r27 value", "r3 = $ r4 get r1", "if r3 ! = null goto label1", "r24 = new java lang null pointer exception", "r23 = new java lang string buffer", "specialinvoke r23 < init >", "$ r17 = r23 append \\ `` no mapped value for \\'\\ ``", "$ r18 = $ r17 append r1", "$ r19 = $ r18 append \\ `` \\ ``", "$ r20 = $ r19 append r2", "$ r21 = $ r20 append \\ `` \\'\\ ``", "$ r22 = $ r21 to string", "specialinvoke r24 < init > $ r22", "throw r24", "if r3 ! = null goto label1", "label $ z0 = r3 instanceof java util map", "if $ z0 == 0 goto label2", "$ r13 = java util map r3", "$ r13 remove r2", "goto label3", "label return", "if $ z0 == 0 goto label2", "label r26 = new java lang illegal argument exception", "r25 = new java lang string buffer", "specialinvoke r25 < init >", "$ r7 = r25 append \\ `` non-mapped property for \\'\\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 append \\ `` \\ ``", "$ r10 = $ r9 append r2", "$ r11 = $ r10 append \\ `` \\'\\ ``", "$ r12 = $ r11 to string", "specialinvoke r26 < init > $ r12", "throw r26"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org apache common beanutils basic dyna bean r0", "$ r3 = r12 get dyna class", "r2 = $ r3 get dyna property r1", "if r2 ! = null goto label1", "r11 = new java lang illegal argument exception", "r10 = new java lang string buffer", "specialinvoke r10 < init >", "$ r6 = r10 append \\ `` invalid property name \\'\\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 append \\ `` \\'\\ ``", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if r2 ! = null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common beanutils bean comparator r0", "$ r1 = r2 comparator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "$ r2 = r8 append \\ `` bean map < \\ ``", "r9 = org apache common beanutils bean map r0", "$ r3 = r9 bean", "$ r4 = java lang string value of $ r3", "$ r5 = $ r2 append $ r4", "$ r6 = $ r5 append \\ `` > \\ ``", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common beanutils bean utils bean get instance", "$ z0 = $ r2 init cause r0 r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org apache common beanutils weak fast hash map", "if $ z0 == 0 goto label1", "$ r1 = org apache common beanutils weak fast hash map r0", "$ z1 = $ r1 get fast", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common beanutils bean utils bean r0", "$ r1 = r2 convert utils bean", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "$ r2 = r8 append \\ `` converter facade [ \\ ``", "r9 = org apache common beanutils converter converter facade r0", "$ r3 = r9 converter", "$ r4 = $ r3 to string", "$ r5 = $ r2 append $ r4", "$ r6 = $ r5 append \\ `` ] \\ ``", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common beanutils converter date time converter r0", "r2 time zone = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common beanutils converter number converter r0", "$ r1 = r2 pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common beanutils converter number converter r0", "r2 pattern = r1", "r3 = org apache common beanutils converter number converter r0", "r3 set use locale format 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r20 = new java lang string buffer", "specialinvoke r20 < init >", "$ r3 = r0 get class", "r21 = org apache common beanutils converter number converter r0", "$ r4 = r21 to string $ r3", "r20 append $ r4", "r20 append \\ `` [ use default=\\ ``", "r22 = org apache common beanutils converter number converter r0", "$ z0 = r22 be use default", "r20 append $ z0", "r20 append \\", "r23 = org apache common beanutils converter number converter r0", "$ z1 = r23 use locale format", "r20 append $ z1", "r24 = org apache common beanutils converter number converter r0", "$ r10 = r24 pattern", "if $ r10 == null goto label1", "label r26 = org apache common beanutils converter number converter r0", "$ r11 = r26 locale", "if $ r11 == null goto label2", "label r20 append 93", "$ r13 = r20 to string", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["$ r0 = org apache common beanutils convert utils bean get instance", "$ z0 = $ r0 get default boolean", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["z0 = @ parameter0", "$ r0 = org apache common beanutils convert utils bean get instance", "$ r0 set default boolean z0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common beanutils dyna property r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common beanutils dyna property r0", "$ r1 = r5 type", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label $ r2 = org apache common beanutils dyna property class $ java $ util $ map", "if $ r2 ! = null goto label2", "$ r4 = org apache common beanutils dyna property class $ \\ `` java util map\\ ``", "org apache common beanutils dyna property class $ java $ util $ map = $ r4", "goto label3", "label r6 = org apache common beanutils dyna property r0", "$ r3 = r6 type", "$ z0 = $ r4 be assignable from $ r3", "return $ z0", "if $ r2 ! = null goto label2", "label $ r4 = org apache common beanutils dyna property class $ java $ util $ map"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label return 0", "if $ i0 ! = 0 goto label2", "label r3 = org apache common beanutils expression default resolver r0", "$ r2 = r3 remove r1", "if $ r2 == null goto label3", "$ z0 = 1", "goto label4", "label return $ z0", "if $ r2 == null goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label return null", "if $ i0 ! = 0 goto label2", "label r4 = org apache common beanutils expression default resolver r0", "r2 = r4 next r1", "$ i1 = r1 length", "$ i2 = r2 length", "if $ i1 ! = $ i2 goto label3", "return null", "if $ i1 ! = $ i2 goto label3", "label i4 = r2 length", "$ c3 = r1 char at i4", "if $ c3 ! = 46 goto label4", "i4 = i4 + 1", "label $ r3 = r1 substring i4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common beanutils lazy dyna class r0", "$ z0 = r1 restrict", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = org apache common beanutils lazy dyna list r0", "$ i0 = r9 size", "if $ i0 ! = 0 goto label1", "r10 = org apache common beanutils lazy dyna list r0", "$ r7 = r10 element dyna bean type", "if $ r7 ! = null goto label1", "$ r8 = newarray org apache common beanutils lazy dyna bean [ 0 ]", "r11 = org apache common beanutils dyna bean [ ] $ r8", "return r11", "if $ r7 ! = null goto label1", "label r12 = org apache common beanutils lazy dyna list r0", "$ r2 = r12 element dyna bean type", "r13 = org apache common beanutils lazy dyna list r0", "$ i1 = r13 size", "$ r3 = java lang reflect array new instance $ r2 $ i1", "$ r4 = org apache common beanutils dyna bean [ ] $ r3", "r1 = org apache common beanutils dyna bean [ ] $ r4", "i2 = 0", "label r14 = org apache common beanutils lazy dyna list r0", "$ i3 = r14 size", "if i2 > = $ i3 goto label3", "r15 = org apache common beanutils lazy dyna list r0", "$ r5 = r15 get i2", "$ r6 = org apache common beanutils dyna bean $ r5", "r1 [ i2 ] = $ r6", "i2 = i2 + 1", "goto label2", "if i2 > = $ i3 goto label3", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache common beanutils locale locale convert utils bean r0", "$ r3 = r5 default locale", "r6 = org apache common beanutils locale locale convert utils bean r0", "$ r4 = r6 convert r1 r2 $ r3 null", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common beanutils map property descriptor r0", "$ r1 = r3 map write method ref", "$ r2 = org apache common beanutils map property descriptor $ map method reference access $ 000 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache common beanutils map property descriptor $ map method reference", "specialinvoke r3 < init > r1", "r4 = org apache common beanutils map property descriptor r0", "r4 map write method ref = r3", "r5 = org apache common beanutils map property descriptor r0", "specialinvoke r5 find map property type", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["$ r0 = org apache common beanutils bean utils bean get instance", "$ r1 = $ r0 get property utils", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common beanutils result set iterator r0", "$ z0 = r3 current", "if $ z0 ! = 0 goto label2", "r4 = org apache common beanutils result set iterator r0", "$ z1 = r4 eof", "if $ z1 ! = 0 goto label2", "r5 = org apache common beanutils result set iterator r0", "$ r1 = r5 dyna class", "$ r2 = $ r1 get result set", "$ z2 = $ r2 next", "if $ z2 == 0 goto label1", "r6 = org apache common beanutils result set iterator r0", "r6 current = 1", "r7 = org apache common beanutils result set iterator r0", "r7 eof = 0", "goto label2", "label return", "if $ z2 == 0 goto label1", "label r8 = org apache common beanutils result set iterator r0", "r8 current = 0", "r9 = org apache common beanutils result set iterator r0", "r9 eof = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r13 = org apache common beanutils weak fast hash map r0", "$ z0 = r13 fast", "if $ z0 == 0 goto label3", "i2 = 0", "r14 = org apache common beanutils weak fast hash map r0", "$ r7 = r14 map", "$ r8 = $ r7 entry set", "r11 = $ r8 iterator", "label $ z2 = r11 have next", "if $ z2 == 0 goto label2", "$ r9 = r11 next", "$ i1 = $ r9 hash code", "i2 = i2 + $ i1", "goto label1", "if $ z2 == 0 goto label2", "label return i2", "if $ z0 == 0 goto label3", "label r15 = org apache common beanutils weak fast hash map r0", "$ r3 = r15 map", "entermonitor $ r3", "label i3 = 0", "r16 = org apache common beanutils weak fast hash map r0", "$ r4 = r16 map", "$ r5 = $ r4 entry set", "r1 = $ r5 iterator", "label $ z1 = r1 have next", "if $ z1 == 0 goto label6", "$ r6 = r1 next", "$ i0 = $ r6 hash code", "i3 = i3 + $ i0", "goto label5", "if $ z1 == 0 goto label6", "label exitmonitor $ r3", "label return i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common beanutils wrap dyna bean r0", "$ r1 = r2 instance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common cli help formatter r0", "r1 default desc pad = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common cli help formatter r0", "$ r1 = r2 option comparator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common cli help formatter r0", "r2 option comparator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common cli option r0", "$ r1 = r2 long opt", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common cli option r0", "r1 require = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string", "$ r2 = org apache common codec binary binary codec to ascii char r0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common codec digest crypt crypt r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache common codec digest digest utils get digest \\ `` md5\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r0 update r1", "return r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common codec digest hmac algorithm hmac_sha_1", "$ r2 = org apache common codec digest hmac utils get initialized mac $ r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common codec digest hmac utils hmac md5 r0 r1", "$ r3 = org apache common codec binary hex encode hex string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common codec digest hmac utils hmac sha512 r0 r1", "$ r3 = org apache common codec binary hex encode hex string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` $ 1 $ \\ ``", "$ r3 = org apache common codec digest b64 get random salt 8", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 to string", "$ r6 = org apache common codec digest md5 crypt md5 crypt r0 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common codec language bm beider morse encoder r0", "$ r1 = r3 engine", "$ r2 = $ r1 get name type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common codec language bm beider morse encoder r0", "$ r1 = r2 engine", "$ z0 = $ r1 be concat", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common codec language bm name type r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common codec language bm rule r0", "$ r1 = r2 r context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = org apache common codec language soundex utils difference r0 r1 r2", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common codec net b codec r0", "$ r1 = r2 charset", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common codec net quote printable codec printable_chars", "r4 = org apache common codec net quote printable codec r0", "$ z0 = r4 strict", "$ r3 = org apache common codec net quote printable codec encode quote printable $ r2 r1 $ z0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "label javax crypto mac get instance r0", "label return 1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache common codec digest digest utils get digest \\ `` sha3-224\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org apache common codec digest digest utils get digest \\ `` sha3-384\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common codec digest digest utils sha3_256 r0", "$ r2 = org apache common codec binary hex encode hex string $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common codec net q codec r0", "r1 encode blank = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 bag abstract map bag r0", "$ r1 = r2 map", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common collections4 bag abstract map bag $ bag iterator", "r3 = org apache common collections4 bag abstract map bag r0", "specialinvoke r2 < init > r3", "r4 = java util iterator r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common collections4 bag abstract map bag r0", "$ r1 = r6 unique set", "if $ r1 ! = null goto label1", "r7 = org apache common collections4 bag abstract map bag r0", "$ r3 = r7 map", "$ r4 = $ r3 key set", "$ r5 = org apache common collections4 set unmodifiable set unmodifiable set $ r4", "r8 = org apache common collections4 bag abstract map bag r0", "r8 unique set = $ r5", "label r9 = org apache common collections4 bag abstract map bag r0", "$ r2 = r9 unique set", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache common collections4 bag collection bag", "specialinvoke r2 < init > r0", "r3 = org apache common collections4 bag r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common collections4 bidimap tree bidi map r0", "r3 = r4 get r1", "r5 = org apache common collections4 bidimap tree bidi map r0", "specialinvoke r5 do put r1 r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org apache common collections4 bidimap tree bidi map check value r1", "r4 = org apache common collections4 bidimap tree bidi map r0", "r2 = specialinvoke r4 lookup value r1", "if r2 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if r2 ! = null goto label1", "label $ r3 = r2 get key"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache common collections4 bidimap dual tree bidi map r0", "$ z0 = r10 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label r11 = org apache common collections4 bidimap dual tree bidi map r0", "$ r4 = r11 normal map", "$ z1 = $ r4 instanceof org apache common collections4 order map", "if $ z1 == 0 goto label2", "r12 = org apache common collections4 bidimap dual tree bidi map r0", "$ r7 = r12 normal map", "$ r8 = org apache common collections4 order map $ r7", "$ r9 = $ r8 previous key r1", "return $ r9", "if $ z1 == 0 goto label2", "label r13 = org apache common collections4 bidimap dual tree bidi map r0", "$ r5 = r13 normal map", "r2 = java util sort map $ r5", "r3 = r2 head map r1", "$ z2 = r3 be empty", "if $ z2 == 0 goto label3", "label $ r6 = r3 last key", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common collections4 bidimap tree bidi map $ data element key", "r3 = org apache common collections4 bidimap tree bidi map r0", "$ r2 = specialinvoke r3 do to string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collections4 collection composite collection r0", "$ r2 = r3 all", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common collections4 collection composite collection r0", "$ r1 = r3 all", "$ r2 = org apache common collections4 list unmodifiable list unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collections4 collection transform collection r0", "$ r2 = r4 transformer", "$ r3 = $ r2 transform r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ z0 = org apache common collections4 iterable utils match any r0 r1", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 instanceof java util collection", "if $ z0 == 0 goto label1", "$ r5 = new java util array list", "$ r4 = java util collection r0", "$ i0 = $ r4 size", "specialinvoke $ r5 < init > $ i0", "goto label2", "label $ r3 = org apache common collections4 collection utils select reject r0 r1 $ r5", "return $ r3", "if $ z0 == 0 goto label1", "label $ r5 = new java util array list", "specialinvoke $ r5 < init >"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collections4 functors constant factory constant factory r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "org apache common collections4 iterable utils check not null r0", "$ z0 = r0 instanceof org apache common collections4 fluent iterable", "if $ z0 == 0 goto label1", "$ r2 = org apache common collections4 fluent iterable r0", "return $ r2", "if $ z0 == 0 goto label1", "label $ r1 = new org apache common collections4 fluent iterable", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common collections4 fluent iterable r0", "$ r1 = r3 iterator", "$ r2 = org apache common collections4 iterator utils a enumeration $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collections4 fluent iterable r0", "$ r2 = r3 iterable", "org apache common collections4 iterable utils for each $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collections4 functors and predicate r0", "$ r2 = r4 i predicate1", "$ z0 = $ r2 evaluate r1", "if $ z0 == 0 goto label1", "r5 = org apache common collections4 functors and predicate r0", "$ r3 = r5 i predicate2", "$ z1 = $ r3 evaluate r1", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache common collections4 functors equal predicate r0", "$ r2 = r6 equator", "if $ r2 == null goto label1", "r7 = org apache common collections4 functors equal predicate r0", "$ r5 = r7 equator", "r8 = org apache common collections4 functors equal predicate r0", "$ r4 = r8 i value", "$ z1 = $ r5 equate $ r4 r1", "return $ z1", "if $ r2 == null goto label1", "label r9 = org apache common collections4 functors equal predicate r0", "$ r3 = r9 i value", "$ z0 = $ r3 equal r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collections4 functors none predicate r0", "r2 = r4 i predicate", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r2 [ i1 ]", "$ z0 = r3 evaluate r1", "if $ z0 == 0 goto label2", "return 0", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collections4 functors transformer closure r0", "$ r2 = r4 i transformer", "$ r2 transform r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common collections4 functors transformer predicate r0", "$ r3 = r7 i transformer", "$ r4 = $ r3 transform r1", "r2 = java lang boolean $ r4", "if r2 ! = null goto label1", "r6 = new org apache common collections4 functor exception", "specialinvoke r6 < init > \\ `` transformer must return an instanceof boolean it be a null object\\ ``", "r8 = java lang throwable r6", "throw r8", "if r2 ! = null goto label1", "label $ z0 = r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 functors while closure r0", "$ r1 = r2 i predicate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org apache common collections4 iterable utils check not null r0", "r2 = new org apache common collections4 iterable utils $ 11", "specialinvoke r2 < init > r0", "r3 = java lang iterable r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collections4 iterable utils empty iterator if null r0", "$ r3 = org apache common collections4 iterator utils find $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r4 = new java lang null pointer exception", "specialinvoke $ r4 < init > \\ `` predicate must not be null \\ ``", "throw $ r4", "if r1 ! = null goto label1", "label $ r2 = org apache common collections4 iterable utils empty if null r0", "$ r3 = org apache common collections4 iterable utils filter iterable $ r2 r1", "$ i0 = org apache common collections4 iterable utils size $ r3", "$ l1 = long $ i0", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java util collection", "if $ z0 == 0 goto label1", "$ r2 = java util collection r0", "$ z2 = $ r2 be empty", "return $ z2", "if $ z0 == 0 goto label1", "label $ r1 = org apache common collections4 iterable utils empty iterator if null r0", "$ z1 = org apache common collections4 iterator utils be empty $ r1", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collections4 iterators array iterator r0", "$ i1 = r1 index", "r2 = org apache common collections4 iterators array iterator r0", "$ i0 = r2 end index", "if $ i1 > = $ i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 > = $ i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 iterators array iterator r0", "$ r1 = r2 array", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = org apache common collections4 iterators enumeration iterator r0", "$ r1 = r9 collection", "if $ r1 == null goto label2", "r10 = org apache common collections4 iterators enumeration iterator r0", "$ r3 = r10 last", "if $ r3 == null goto label1", "r11 = org apache common collections4 iterators enumeration iterator r0", "$ r6 = r11 collection", "r12 = org apache common collections4 iterators enumeration iterator r0", "$ r5 = r12 last", "$ r6 remove $ r5", "goto label3", "label return", "if $ r3 == null goto label1", "label r7 = new java lang illegal state exception", "specialinvoke r7 < init > \\ `` next must have be call for remove to function\\ ``", "throw r7", "if $ r1 == null goto label2", "label r8 = new java lang unsupported operation exception", "specialinvoke r8 < init > \\ `` no collection associate with this iterator\\ ``", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 iterators filter iterator r0", "$ r1 = r2 iterator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 iterators filter iterator r0", "$ r1 = r2 predicate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 iterators iterator iterable r0", "$ r1 = r5 iterator", "$ z0 = $ r1 instanceof org apache common collections4 resettable iterator", "if $ z0 == 0 goto label1", "r6 = org apache common collections4 iterators iterator iterable r0", "$ r3 = r6 iterator", "$ r4 = org apache common collections4 resettable iterator $ r3", "$ r4 reset", "label r7 = org apache common collections4 iterators iterator iterable r0", "$ r2 = r7 type safe iterator", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common collections4 iterators list iterator wrapper r0", "$ r2 = r4 iterator", "$ z0 = $ r2 instanceof java util list iterator", "if $ z0 == 0 goto label1", "r5 = org apache common collections4 iterators list iterator wrapper r0", "$ r3 = r5 iterator", "r1 = java util list iterator $ r3", "$ i2 = r1 previous index", "return $ i2", "if $ z0 == 0 goto label1", "label r6 = org apache common collections4 iterators list iterator wrapper r0", "$ i0 = r6 current index", "$ i1 = $ i0 - 1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r7 = org apache common collections4 iterators loop iterator r0", "$ r1 = r7 collection", "$ i0 = $ r1 size", "if $ i0 ! = 0 goto label1", "r6 = new java util no such element exception", "specialinvoke r6 < init > \\ `` there be no element for this iterator to loop on\\ ``", "throw r6", "if $ i0 ! = 0 goto label1", "label r8 = org apache common collections4 iterators loop iterator r0", "$ r2 = r8 iterator", "$ z0 = $ r2 have next", "if $ z0 ! = 0 goto label2", "r9 = org apache common collections4 iterators loop iterator r0", "r9 reset", "label r10 = org apache common collections4 iterators loop iterator r0", "$ r3 = r10 iterator", "$ r4 = $ r3 next", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 iterators loop iterator r0", "$ r1 = r2 iterator", "$ r1 remove", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collections4 iterators loop list iterator r0", "$ r2 = r3 iterator", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 iterators object graph iterator r0", "r5 update current iterator", "r6 = org apache common collections4 iterators object graph iterator r0", "$ z0 = r6 have next", "if $ z0 ! = 0 goto label1", "r4 = new java util no such element exception", "specialinvoke r4 < init > \\ `` no more element in the iteration\\ ``", "throw r4", "if $ z0 ! = 0 goto label1", "label r7 = org apache common collections4 iterators object graph iterator r0", "$ r2 = r7 current iterator", "r8 = org apache common collections4 iterators object graph iterator r0", "r8 last used iterator = $ r2", "r9 = org apache common collections4 iterators object graph iterator r0", "r1 = r9 current value", "r10 = org apache common collections4 iterators object graph iterator r0", "r10 current value = null", "r11 = org apache common collections4 iterators object graph iterator r0", "r11 have next = 0", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collections4 iterators singleton iterator r0", "$ z0 = r1 before first", "if $ z0 == 0 goto label1", "r2 = org apache common collections4 iterators singleton iterator r0", "$ z1 = r2 remove", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 iterators singleton iterator r0", "$ z0 = r5 remove allow", "if $ z0 == 0 goto label3", "r6 = org apache common collections4 iterators singleton iterator r0", "$ z1 = r6 remove", "if $ z1 ! = 0 goto label1", "r7 = org apache common collections4 iterators singleton iterator r0", "$ z2 = r7 before first", "if $ z2 == 0 goto label2", "label r3 = new java lang illegal state exception", "specialinvoke r3 < init >", "throw r3", "if $ z2 == 0 goto label2", "label r8 = org apache common collections4 iterators singleton iterator r0", "r8 object = null", "r9 = org apache common collections4 iterators singleton iterator r0", "r9 remove = 1", "goto label4", "label return", "if $ z0 == 0 goto label3", "label r4 = new java lang unsupported operation exception", "specialinvoke r4 < init >", "throw r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collections4 list node cache link list r0", "$ i1 = r1 cache size", "r2 = org apache common collections4 list node cache link list r0", "$ i0 = r2 maximum cache size", "if $ i1 < $ i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 < $ i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collections4 list node cache link list r0", "r2 = r4 get node from cache", "if r2 ! = null goto label1", "$ r3 = specialinvoke r0 create node r1", "return $ r3", "if r2 ! = null goto label1", "label r2 set value r1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collections4 list tree list r0", "$ i0 = r1 mod count", "$ i1 = $ i0 + 1", "r2 = org apache common collections4 list tree list r0", "r2 mod count = $ i1", "r3 = org apache common collections4 list tree list r0", "r3 root = null", "r4 = org apache common collections4 list tree list r0", "r4 size = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label i1 = 1", "r1 = r0 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label5", "r2 = r1 next", "$ i0 = 31 * i1", "if r2 ! = null goto label3", "$ i2 = 0", "goto label4", "label i1 = $ i0 + $ i2", "goto label2", "if r2 ! = null goto label3", "label $ i2 = r2 hash code", "if $ z0 == 0 goto label5", "label return i1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collections4 list fix size list fix size list r0", "r2 = java util list $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 map abstract hash map r0", "$ r1 = r5 key set", "if $ r1 ! = null goto label1", "r4 = new org apache common collections4 map abstract hash map $ key set", "r6 = org apache common collections4 map abstract hash map r0", "specialinvoke r4 < init > r6", "r7 = org apache common collections4 map abstract hash map r0", "r7 key set = r4", "label r8 = org apache common collections4 map abstract hash map r0", "$ r2 = r8 key set", "r9 = java util set $ r2", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "r4 = org apache common collections4 map abstract hash map r0", "r1 = r4 create entry set iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r2 = r1 next", "$ r3 = java util map $ entry $ r2", "$ i0 = $ r3 hash code", "i1 = i1 + $ i0", "goto label1", "if $ z0 == 0 goto label2", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 map abstract link map r0", "$ r1 = r5 create entry null -1 null null", "r6 = org apache common collections4 map abstract link map r0", "r6 header = $ r1", "r7 = org apache common collections4 map abstract link map r0", "$ r4 = r7 header", "r8 = org apache common collections4 map abstract link map r0", "$ r3 = r8 header", "r9 = org apache common collections4 map abstract link map r0", "$ r2 = r9 header", "$ r3 after = $ r2", "$ r4 before = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collections4 map abstract reference map r0", "r1 purge", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache common collections4 map composite map r0", "$ r2 = r8 composite", "$ i0 = lengthof $ r2", "i1 = $ i0 - 1", "label if i1 < 0 goto label3", "r9 = org apache common collections4 map composite map r0", "$ r3 = r9 composite", "$ r4 = $ r3 [ i1 ]", "$ z0 = $ r4 contain key r1", "if $ z0 == 0 goto label2", "r10 = org apache common collections4 map composite map r0", "$ r5 = r10 composite", "$ r6 = $ r5 [ i1 ]", "$ r7 = $ r6 get r1", "return $ r7", "if $ z0 == 0 goto label2", "label i1 = i1 + -1", "goto label1", "label if i1 < 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collections4 map list order map r0", "$ i0 = r5 size", "if $ i0 ! = 0 goto label1", "r4 = new java util no such element exception", "specialinvoke r4 < init > \\ `` map be empty\\ ``", "throw r4", "if $ i0 ! = 0 goto label1", "label r6 = org apache common collections4 map list order map r0", "$ r1 = r6 insert order", "r7 = org apache common collections4 map list order map r0", "$ i1 = r7 size", "$ i2 = $ i1 - 1", "$ r2 = $ r1 get $ i2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common collections4 map list order map $ key set view", "r3 = org apache common collections4 map list order map r0", "specialinvoke r2 < init > r3", "r4 = java util set r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r21 = org apache common collections4 map list order map r0", "$ z0 = r21 be empty", "if $ z0 == 0 goto label1", "return \\ `` { } \\ ``", "if $ z0 == 0 goto label1", "label r20 = new java lang string builder", "specialinvoke r20 < init >", "r20 append 123", "z2 = 1", "r22 = org apache common collections4 map list order map r0", "$ r8 = r22 entry set", "r2 = $ r8 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label9", "$ r11 = r2 next", "r3 = java util map $ entry $ r11", "r4 = r3 get key", "r5 = r3 get value", "if z2 == 0 goto label3", "z2 = 0", "goto label4", "label if r4 ! = r0 goto label5", "$ r18 = \\ `` this map \\ ``", "goto label6", "label r20 append $ r18", "r20 append 61", "if r5 ! = r0 goto label7", "$ r19 = \\ `` this map \\ ``", "goto label8", "label r20 append $ r19", "goto label2", "if r5 ! = r0 goto label7", "label $ r19 = r5", "label if r4 ! = r0 goto label5", "label $ r18 = r4", "if z2 == 0 goto label3", "label r20 append \\", "if $ z1 == 0 goto label9", "label r20 append 125", "$ r10 = r20 to string", "return $ r10"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [], [26], [27], [28], [29], [], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collections4 map l r u map r0", "$ z0 = r1 scan until removable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i7 = 0", "if r1 == null goto label1", "$ i6 = r1 hash code", "i7 = 0 ^ $ i6", "label if r2 == null goto label2", "$ i5 = r2 hash code", "i7 = i7 ^ $ i5", "label $ i0 = i7 < < 9", "$ i1 = $ i0 ^ -1", "i8 = i7 + $ i1", "$ i2 = i8 > > > 14", "i9 = i8 ^ $ i2", "$ i3 = i9 < < 4", "i10 = i9 + $ i3", "$ i4 = i10 > > > 10", "i11 = i10 ^ $ i4", "return i11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = new java lang null pointer exception", "specialinvoke $ r2 < init > \\ `` key must not be null\\ ``", "throw $ r2", "if r1 ! = null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = org apache common collections4 map predicate map r0", "$ r3 = r11 key predicate", "if $ r3 == null goto label1", "r12 = org apache common collections4 map predicate map r0", "$ r7 = r12 key predicate", "$ z1 = $ r7 evaluate r1", "if $ z1 ! = 0 goto label1", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init > \\ `` can not add key - predicate reject it\\ ``", "throw r9", "if $ z1 ! = 0 goto label1", "label r13 = org apache common collections4 map predicate map r0", "$ r4 = r13 value predicate", "if $ r4 == null goto label2", "r14 = org apache common collections4 map predicate map r0", "$ r5 = r14 value predicate", "$ z0 = $ r5 evaluate r2", "if $ z0 ! = 0 goto label2", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` can not add value - predicate reject it\\ ``", "throw r10", "if $ z0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common collections4 map static bucket map $ key set", "r3 = org apache common collections4 map static bucket map r0", "specialinvoke r2 < init > r3 null", "r4 = java util set r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "b0 = @ parameter2", "r2 = org apache common collections4 map utils get byte r0 r1", "if r2 ! = null goto label1", "return b0", "if r2 ! = null goto label1", "label $ b1 = r2 byte value", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "s0 = @ parameter2", "r2 = org apache common collections4 map utils get short r0 r1", "if r2 ! = null goto label1", "return s0", "if r2 ! = null goto label1", "label $ s1 = r2 short value", "return $ s1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "r2 = org apache common collections4 map utils get integer r0 r1", "if r2 ! = null goto label1", "return i0", "if r2 ! = null goto label1", "label $ i1 = r2 int value", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "r8 = new java lang null pointer exception", "specialinvoke r8 < init > \\ `` value must not be null \\ ``", "throw r8", "if r2 ! = null goto label1", "label $ z0 = r2 instanceof java util collection", "if $ z0 == 0 goto label4", "r6 = java util collection r2", "$ z3 = r6 be empty", "if $ z3 ! = 0 goto label2", "r9 = org apache common collections4 multimap abstract multi value map r0", "$ r4 = r9 get r1", "$ z4 = $ r4 add all r6", "if $ z4 == 0 goto label2", "$ z5 = 1", "goto label3", "label return $ z5", "if $ z4 == 0 goto label2", "label $ z5 = 0", "if $ z0 == 0 goto label4", "label r7 = r2 iterator", "$ z1 = r7 have next", "if $ z1 == 0 goto label5", "r10 = org apache common collections4 multimap abstract multi value map r0", "$ r3 = r10 get r1", "$ z2 = org apache common collections4 collection utils add all $ r3 r7", "if $ z2 == 0 goto label5", "$ z6 = 1", "goto label6", "label return $ z6", "if $ z2 == 0 goto label5", "label $ z6 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collections4 multimap abstract set value map r0", "$ r2 = r3 get r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = new org apache common collections4 multiset abstract multi set $ 1", "r7 = org apache common collections4 multiset abstract multi set r0", "specialinvoke r6 < init > r7", "r8 = org apache common collections4 multiset abstract multi set r0", "$ r3 = r8 entry set", "$ r4 = $ r3 iterator", "r9 = org apache common collections4 transformer r6", "$ r5 = org apache common collections4 iterator utils transform iterator $ r4 r9", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collections4 multiset synchronized multi set synchronized multi set r0", "r2 = org apache common collections4 multi set $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache common collections4 functors null predicate null predicate", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collections4 functors equal predicate equal predicate r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common collections4 functors all predicate all predicate r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 queue abstract queue decorator r0", "$ r1 = r2 decorate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r9 = org apache common collections4 queue circular fifo queue r0", "i1 = r9 size", "if i0 < 0 goto label1", "if i0 < i1 goto label2", "label r8 = new java util no such element exception", "$ r2 = newarray java lang object [ 2 ]", "$ r3 = java lang integer value of i0", "$ r2 [ 0 ] = $ r3", "$ r4 = java lang integer value of i1", "$ r2 [ 1 ] = $ r4", "$ r5 = java lang string format \\ `` the specified index % 1 $ d be outside the available range [ 0 % 2 $ d \\", "specialinvoke r8 < init > $ r5", "throw r8", "if i0 < i1 goto label2", "label r10 = org apache common collections4 queue circular fifo queue r0", "$ i3 = r10 start", "$ i5 = $ i3 + i0", "r11 = org apache common collections4 queue circular fifo queue r0", "$ i4 = r11 max element", "i2 = $ i5 % $ i4", "r12 = org apache common collections4 queue circular fifo queue r0", "$ r6 = r12 element", "$ r7 = $ r6 [ i2 ]", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common collections4 sequence keep command r0", "$ r2 = r3 get object", "r1 visit keep command $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collections4 set abstract navigable set decorator r0", "$ r1 = r2 decorate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common collections4 set composite set r0", "$ r2 = r7 mutator", "if $ r2 ! = null goto label1", "r6 = new java lang unsupported operation exception", "specialinvoke r6 < init > \\ `` add be not support on composite set without a set mutator strategy\\ ``", "throw r6", "if $ r2 ! = null goto label1", "label r8 = org apache common collections4 set composite set r0", "$ r4 = r8 mutator", "r9 = org apache common collections4 set composite set r0", "$ r3 = r9 all", "r10 = org apache common collections4 set composite set r0", "$ z0 = $ r4 add r10 $ r3 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common collections4 set composite set r0", "r2 mutator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org apache common collections4 set composite set r0", "$ r5 = r15 get set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r7 = r2 next", "r3 = java util set $ r7", "r4 = org apache common collections4 collection utils intersection r3 r1", "$ i0 = r4 size", "if $ i0 < = 0 goto label3", "r16 = org apache common collections4 set composite set r0", "$ r8 = r16 mutator", "if $ r8 ! = null goto label2", "r13 = new java lang unsupported operation exception", "specialinvoke r13 < init > \\ `` collision add composited set with no set mutator set\\ ``", "throw r13", "if $ r8 ! = null goto label2", "label r17 = org apache common collections4 set composite set r0", "$ r9 = r17 get mutator", "r18 = org apache common collections4 set composite set r0", "$ r9 resolve collision r18 r3 r1 r4", "$ r10 = org apache common collections4 collection utils intersection r3 r1", "$ i1 = $ r10 size", "if $ i1 < = 0 goto label3", "r14 = new java lang illegal argument exception", "specialinvoke r14 < init > \\ `` attempt to add illegal entry unresolved by set mutator resolve collision \\ ``", "throw r14", "if $ i1 < = 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label r19 = org apache common collections4 set composite set r0", "$ r6 = r19 all", "$ r6 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org apache common collections4 set composite set r0", "$ r5 = r15 get set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r7 = r2 next", "r3 = java util set $ r7", "r4 = org apache common collections4 collection utils intersection r3 r1", "$ i0 = r4 size", "if $ i0 < = 0 goto label3", "r16 = org apache common collections4 set composite set r0", "$ r8 = r16 mutator", "if $ r8 ! = null goto label2", "r13 = new java lang unsupported operation exception", "specialinvoke r13 < init > \\ `` collision add composited set with no set mutator set\\ ``", "throw r13", "if $ r8 ! = null goto label2", "label r17 = org apache common collections4 set composite set r0", "$ r9 = r17 get mutator", "r18 = org apache common collections4 set composite set r0", "$ r9 resolve collision r18 r3 r1 r4", "$ r10 = org apache common collections4 collection utils intersection r3 r1", "$ i1 = $ r10 size", "if $ i1 < = 0 goto label3", "r14 = new java lang illegal argument exception", "specialinvoke r14 < init > \\ `` attempt to add illegal entry unresolved by set mutator resolve collision \\ ``", "throw r14", "if $ i1 < = 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label r19 = org apache common collections4 set composite set r0", "$ r6 = r19 all", "$ r6 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collections4 functors instantiate transformer instantiate transformer r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache common compress archivers archive input stream r0", "$ l1 = r1 byte read", "$ l2 = $ l1 - l0", "r2 = org apache common compress archivers archive input stream r0", "r2 byte read = $ l2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers archive input stream r0", "$ l0 = r1 byte read", "$ i1 = int $ l0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ l1 = long i0", "r1 = org apache common compress archivers archive output stream r0", "r1 count $ l1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers dump dump archive entry r0", "$ z0 = r1 be delete", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress archivers dump dump archive entry r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache common compress archivers dump dump archive entry r0", "r1 size = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = new java util date", "r3 = org apache common compress archivers dump dump archive entry r0", "$ l0 = r3 atime", "specialinvoke r2 < init > $ l0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers dump dump archive summary r0", "$ i0 = r1 level", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common compress archivers sevenz seven z archive entry r0", "r1 be anti item = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z1 = 1", "goto label2", "label r3 = org apache common compress archivers sevenz seven z archive entry r0", "r3 have last modified date = $ z1", "r4 = org apache common compress archivers sevenz seven z archive entry r0", "$ z0 = r4 have last modified date", "if $ z0 == 0 goto label3", "$ l0 = org apache common compress archivers sevenz seven z archive entry java time to ntfs time r1", "r5 = org apache common compress archivers sevenz seven z archive entry r0", "r5 last modified date = $ l0", "label return", "if r1 == null goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r9 = org apache common compress archivers sevenz seven z file r0", "$ r2 = r9 channel", "if $ r2 == null goto label6", "label r10 = org apache common compress archivers sevenz seven z file r0", "$ r3 = r10 channel", "$ r3 close", "label r11 = org apache common compress archivers sevenz seven z file r0", "r11 channel = null", "r12 = org apache common compress archivers sevenz seven z file r0", "$ r4 = r12 password", "if $ r4 == null goto label3", "r13 = org apache common compress archivers sevenz seven z file r0", "$ r5 = r13 password", "java util array fill $ r5 0", "label r14 = org apache common compress archivers sevenz seven z file r0", "r14 password = null", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common compress archivers sevenz seven z archive entry r1", "r4 = org apache common compress archivers sevenz seven z output file r0", "$ r3 = r4 file", "$ r3 add r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r2 = org apache common compress archivers sevenz seven z output file r0", "r2 write r1 0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b3 = l0 cmp 0l", "if $ b3 < = 0 goto label1", "r2 = org apache common compress archivers tar tar archive input stream r0", "$ z0 = specialinvoke r2 be directory", "if $ z0 == 0 goto label2", "label return 0l", "if $ z0 == 0 goto label2", "label r3 = org apache common compress archivers tar tar archive input stream r0", "$ l5 = r3 entry size", "r4 = org apache common compress archivers tar tar archive input stream r0", "$ l4 = r4 entry offset", "l1 = $ l5 - $ l4", "r5 = org apache common compress archivers tar tar archive input stream r0", "$ r1 = r5 be", "$ l6 = java lang math min l0 l1", "l2 = org apache common compress utils i o utils skip $ r1 $ l6", "r6 = org apache common compress archivers tar tar archive input stream r0", "r6 count l2", "r7 = org apache common compress archivers tar tar archive input stream r0", "$ l7 = r7 entry offset", "$ l8 = $ l7 + l2", "r8 = org apache common compress archivers tar tar archive input stream r0", "r8 entry offset = $ l8", "return l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers zip resource alignment extra field r0", "$ s0 = r1 alignment", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common compress archivers zip x000a_ntfs r0", "$ r1 = r3 access time", "$ r2 = org apache common compress archivers zip x000a_ntfs zip to date $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common compress archivers zip x000a_ntfs r0", "$ r1 = r3 create time", "$ r2 = org apache common compress archivers zip x000a_ntfs zip to date $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers zip x5455_ extend timestamp r0", "$ z0 = r1 bit0_modify time present", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers zip x5455_ extend timestamp r0", "$ z0 = r1 bit2_create time present", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = 1", "goto label2", "label r4 = org apache common compress archivers zip x5455_ extend timestamp r0", "r4 bit1_access time present = $ z0", "if r1 == null goto label3", "r5 = org apache common compress archivers zip x5455_ extend timestamp r0", "$ b2 = r5 flag", "$ b3 = $ b2 | 2", "goto label4", "label $ b1 = byte $ b3", "r7 = org apache common compress archivers zip x5455_ extend timestamp r0", "r7 flag = $ b1", "r8 = org apache common compress archivers zip x5455_ extend timestamp r0", "r8 access time = r1", "return", "if r1 == null goto label3", "label r6 = org apache common compress archivers zip x5455_ extend timestamp r0", "$ b0 = r6 flag", "$ b3 = $ b0 & -3", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress archivers zip x7875_ new unix r0", "$ r1 = r2 gid", "$ l0 = org apache common compress archivers zip zip util big to long $ r1", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common compress archivers zip x7875_ new unix zero", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common compress archivers zip zip archive entry r0", "r1 raw flag = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common compress archivers zip zip archive entry request r0", "$ r1 = r3 payload supplier", "$ r2 = $ r1 get", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache common compress change change", "specialinvoke r3 < init > r1 4", "r4 = org apache common compress change change set r0", "specialinvoke r4 add deletion r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "l1 = @ parameter1", "r1 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0", "r1 back reference offset = i0", "r2 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0", "r2 bytes remain = l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r2 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0", "i2 = r2 available", "if i1 < = i2 goto label1", "$ i4 = i1 - i2", "r3 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0", "specialinvoke r3 try to copy $ i4", "label r4 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0", "$ i3 = specialinvoke r4 read from buffer r1 i0 i1", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress compressor lz77support parameter r0", "$ i0 = r1 max literal length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i1 = lengthof r0", "$ i0 = lengthof r1", "$ z0 = org apache common compress utils archive utils be equal r0 0 $ i1 r1 0 $ i0 0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i2 = 0", "label if i2 > = i0 goto label3", "$ b1 = r0 [ i2 ]", "if $ b1 == 0 goto label2", "return 0", "if $ b1 == 0 goto label2", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress utils bit input stream r0", "$ i0 = r1 bit cache size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org apache common compress archivers sevenz seven z file option $ builder", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "l1 = org apache common compress archivers tar tar utils parse octal or binary r0 i0 12", "$ i3 = i0 + 12", "l2 = org apache common compress archivers tar tar utils parse octal or binary r0 $ i3 12", "$ r1 = new org apache common compress archivers tar tar archive struct sparse", "specialinvoke $ r1 < init > l1 l2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common compress archivers zip zip archive output stream r0", "r3 encode = r1", "$ r2 = org apache common compress archivers zip zip encode helper get zip encode r1", "r4 = org apache common compress archivers zip zip archive output stream r0", "r4 zip encode = $ r2", "r5 = org apache common compress archivers zip zip archive output stream r0", "$ z0 = r5 use u t f8 flag", "if $ z0 == 0 goto label1", "$ z1 = org apache common compress archivers zip zip encode helper be u t f8 r1", "if $ z1 ! = 0 goto label1", "r6 = org apache common compress archivers zip zip archive output stream r0", "r6 use u t f8 flag = 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache common compress change change", "specialinvoke r3 < init > r1 1", "r4 = org apache common compress change change set r0", "specialinvoke r4 add deletion r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress change change set result r0", "$ r1 = r2 add from stream", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common compress compressor xz x z utils file name util", "$ r2 = $ r1 get compress filename r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r6 = new java io file input stream", "specialinvoke $ r6 < init > r0", "r11 = null", "label $ i0 = lengthof r1", "i1 = org apache common compress utils i o utils read fully $ r6 r1 0 $ i0", "label if $ r6 == null goto label04", "goto label03", "label $ r6 close", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress harmony pack200 b h s d codec r0", "$ l0 = r1 large", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress harmony pack200 b h s d codec r0", "$ l0 = r1 small", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress harmony pack200 metadata band group r0", "$ r1 = r2 type_ r s", "$ i0 = $ r1 size", "if $ i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common compress harmony unpack200 bytecode b c i renumbered attribute r0", "$ z0 = r7 renumbered", "if $ z0 == 0 goto label1", "r6 = new java lang error", "specialinvoke r6 < init > \\ `` try to renumber a line number table that have already be renumbered\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r8 = org apache common compress harmony unpack200 bytecode b c i renumbered attribute r0", "r8 renumbered = 1", "r9 = org apache common compress harmony unpack200 bytecode b c i renumbered attribute r0", "r2 = r9 get start p c", "i3 = 0", "label $ i0 = lengthof r2", "if i3 > = $ i0 goto label3", "$ i1 = r2 [ i3 ]", "$ r3 = r1 get $ i1", "$ r4 = java lang integer $ r3", "$ i2 = $ r4 int value", "r2 [ i3 ] = $ i2", "i3 = i3 + 1", "goto label2", "if i3 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress harmony unpack200 bytecode c p interface method ref r0", "$ r1 = r2 name and type", "$ i0 = $ r1 invoke interface count", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common compress harmony unpack200 ic tuple r0", "$ r1 = r2 cache out class string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester digester r0", "$ r1 = r2 sax log", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r16 = org apache common digester digester r0", "$ r4 = r16 sax log", "$ z0 = $ r4 be debug enabled", "if $ z0 == 0 goto label1", "r17 = org apache common digester digester r0", "$ r6 = r17 sax log", "r15 = new java lang string buffer", "specialinvoke r15 < init >", "$ r7 = r15 append \\ `` notation decl \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 append \\", "$ r10 = $ r9 append r2", "$ r11 = $ r10 append \\", "$ r12 = $ r11 append r3", "$ r13 = $ r12 append \\ `` \\ ``", "$ r14 = $ r13 to string", "$ r6 debug $ r14", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester digester r0", "r2 entity resolver = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org apache common digester call method rule", "specialinvoke r4 < init > r2", "r5 = org apache common digester digester r0", "r6 = org apache common digester rule r4", "r5 add rule r1 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache common digester set property rule", "specialinvoke r3 < init >", "r4 = org apache common digester digester r0", "r5 = org apache common digester rule r3", "r4 add rule r1 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "label r6 = org apache common digester digester r0", "$ r2 = r6 stack", "$ r3 = $ r2 peek", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester plugins declaration r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common digester plugins plugin manager r0", "$ r2 = r7 declaration by id", "$ r3 = $ r2 get r1", "r6 = org apache common digester plugins declaration $ r3", "if r6 ! = null goto label1", "r8 = org apache common digester plugins plugin manager r0", "$ r4 = r8 parent", "if $ r4 == null goto label1", "r9 = org apache common digester plugins plugin manager r0", "$ r5 = r9 parent", "r6 = $ r5 get declaration by id r1", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester plugins plugin rule r0", "$ r1 = r2 parent", "r3 = org apache common digester rule $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester plugins plugin rule r0", "$ r1 = r2 plugin manager", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester plugins plugin rule r0", "$ r1 = r2 rule factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester abstract rule impl r0", "r2 digester = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache common digester set nested property rule r0", "$ r3 = r5 element name", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common digester simple regex matcher r0", "r2 log = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r6 = new org apache common digester xmlrules from xml rule set", "specialinvoke r6 < init > r0 r1", "r7 = new org apache common digester digester", "specialinvoke r7 < init >", "r8 = org apache common digester rule set r6", "r7 add rule set r8", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common digester3 abstract method rule r0", "$ z0 = r1 use exact match", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common digester3 binder abstract rule module r0", "$ r3 = r4 rule binder", "$ r3 add error r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r8 = new org apache common digester3 binder object create builder", "r9 = org apache common digester3 binder link rule builder r0", "$ r5 = r9 key pattern", "r10 = org apache common digester3 binder link rule builder r0", "$ r4 = r10 namespace u r i", "r11 = org apache common digester3 binder link rule builder r0", "$ r3 = r11 main binder", "r12 = org apache common digester3 binder link rule builder r0", "$ r2 = r12 class loader", "r13 = org apache common digester3 binder link rule builder r0", "specialinvoke r8 < init > $ r5 $ r4 $ r3 r13 $ r2", "r14 = org apache common digester3 binder link rule builder r0", "r15 = org apache common digester3 binder abstract back to link rule builder r8", "$ r6 = specialinvoke r14 add provider r15", "$ r7 = org apache common digester3 binder object create builder $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r7 = new org apache common digester3 binder plugin create rule builder", "r8 = org apache common digester3 binder link rule builder r0", "$ r4 = r8 key pattern", "r9 = org apache common digester3 binder link rule builder r0", "$ r3 = r9 namespace u r i", "r10 = org apache common digester3 binder link rule builder r0", "$ r2 = r10 main binder", "r11 = org apache common digester3 binder link rule builder r0", "specialinvoke r7 < init > $ r4 $ r3 $ r2 r11", "r12 = org apache common digester3 binder link rule builder r0", "r13 = org apache common digester3 binder abstract back to link rule builder r7", "$ r5 = specialinvoke r12 add provider r13", "$ r6 = org apache common digester3 binder plugin create rule builder $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r2 = org apache common digester3 binder object create builder r0", "r2 report error \\ `` create object use constructor class < ? > [ ] \\", "r3 = org apache common digester3 binder object create builder r0", "return r3", "if r1 ! = null goto label1", "label r4 = org apache common digester3 binder object create builder r0", "r4 constructor argument type = r1", "r5 = org apache common digester3 binder object create builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester3 digester r0", "$ r1 = r2 sax log", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common digester3 digester r0", "$ z0 = r1 use context class loader", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common digester3 digester r0", "$ r1 = r2 custom content handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r29 = org apache common digester3 digester r0", "$ r4 = r29 log", "$ z0 = $ r4 be debug enabled", "if $ z0 == 0 goto label1", "r30 = org apache common digester3 digester r0", "$ r9 = r30 log", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r10 = r25 append \\ `` register \\'\\ ``", "$ r11 = $ r10 append r1", "$ r12 = $ r11 append \\ `` \\ ' \\'\\ ``", "$ r13 = $ r12 append r2", "$ r14 = $ r13 append \\ `` \\'\\ ``", "$ r15 = $ r14 to string", "$ r9 debug $ r15", "label r31 = org apache common digester3 digester r0", "$ r6 = r31 entity validator", "r26 = new java net url", "specialinvoke r26 < init > r2", "$ r6 put r1 r26", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = new org apache common digester3 set property rule", "specialinvoke r5 < init > r2 r3", "r6 = org apache common digester3 digester r0", "r7 = org apache common digester3 rule r5", "r6 add rule r1 r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common digester3 set property rule r0", "$ z0 = r1 ignore miss property", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common exec command line r0", "$ z0 = r1 be file", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common exec log output stream r0", "$ r1 = r2 buffer", "$ i0 = $ r1 size", "if $ i0 < = 0 goto label1", "r3 = org apache common exec log output stream r0", "r3 process buffer", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r1 = java lang boolean false", "$ r2 = $ r1 to string", "r0 = java lang system get property \\ `` org apache common exec debug\\", "$ r3 = java lang boolean true", "$ r4 = $ r3 to string", "$ z0 = $ r4 equal ignore case r0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache common httpclient auth basic scheme log", "$ r3 trace \\ `` enter basic scheme authenticate credential http method \\ ``", "if r2 ! = null goto label1", "r17 = new java lang illegal argument exception", "specialinvoke r17 < init > \\ `` method may not be null\\ ``", "throw r17", "if r2 ! = null goto label1", "label r16 = org apache common httpclient username password credential r1", "label goto label4", "label $ r4 = r2 get params", "$ r5 = $ r4 get credential charset", "$ r6 = org apache common httpclient auth basic scheme authenticate r16 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient auth n t l m scheme r0", "$ r1 = r2 ntlmchallenge", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` parameter name may not be null\\ ``", "throw r8", "if r1 ! = null goto label1", "label r9 = org apache common httpclient auth r f c2617 scheme r0", "$ r2 = r9 params", "if $ r2 ! = null goto label2", "return null", "if $ r2 ! = null goto label2", "label r10 = org apache common httpclient auth r f c2617 scheme r0", "$ r3 = r10 params", "$ r4 = r1 to lower case", "$ r5 = $ r3 get $ r4", "$ r6 = java lang string $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common httpclient chunk input stream r0", "$ z0 = r5 close", "if $ z0 == 0 goto label1", "r4 = new java io i o exception", "specialinvoke r4 < init > \\ `` attempt read from closed stream \\ ``", "throw r4", "if $ z0 == 0 goto label1", "label r6 = org apache common httpclient chunk input stream r0", "$ z1 = r6 eof", "if $ z1 == 0 goto label2", "return -1", "if $ z1 == 0 goto label2", "label r7 = org apache common httpclient chunk input stream r0", "$ i1 = r7 po", "r8 = org apache common httpclient chunk input stream r0", "$ i0 = r8 chunk size", "if $ i1 < $ i0 goto label3", "r9 = org apache common httpclient chunk input stream r0", "specialinvoke r9 next chunk", "r10 = org apache common httpclient chunk input stream r0", "$ z2 = r10 eof", "if $ z2 == 0 goto label3", "label r11 = org apache common httpclient chunk input stream r0", "$ i2 = r11 po", "$ i3 = $ i2 + 1", "r12 = org apache common httpclient chunk input stream r0", "r12 po = $ i3", "r13 = org apache common httpclient chunk input stream r0", "$ r1 = r13 in", "$ i4 = $ r1 read", "return $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r14 = org apache common httpclient chunk output stream r0", "$ i0 = r14 cache position", "if $ i0 < = 0 goto label1", "r13 = new java lang string buffer", "specialinvoke r13 < init >", "r15 = org apache common httpclient chunk output stream r0", "$ i1 = r15 cache position", "$ r3 = java lang integer to hex string $ i1", "$ r4 = r13 append $ r3", "$ r5 = $ r4 append \\ `` \\r\\n\\ ``", "$ r6 = $ r5 to string", "r1 = org apache common httpclient util encode util get ascii byte $ r6", "r16 = org apache common httpclient chunk output stream r0", "$ r7 = r16 stream", "$ i2 = lengthof r1", "$ r7 write r1 0 $ i2", "r17 = org apache common httpclient chunk output stream r0", "$ r9 = r17 stream", "r18 = org apache common httpclient chunk output stream r0", "$ r8 = r18 cache", "r19 = org apache common httpclient chunk output stream r0", "$ i3 = r19 cache position", "$ r9 write $ r8 0 $ i3", "r20 = org apache common httpclient chunk output stream r0", "$ r12 = r20 stream", "$ r11 = org apache common httpclient chunk output stream endchunk", "$ r10 = org apache common httpclient chunk output stream endchunk", "$ i4 = lengthof $ r10", "$ r12 write $ r11 0 $ i4", "r21 = org apache common httpclient chunk output stream r0", "r21 cache position = 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient cookie r0", "$ r1 = r2 cookie path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common httpclient cookie r0", "r1 cookie version = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient header element r0", "$ r1 = r2 parameter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org apache common httpclient header element log", "$ r2 trace \\ `` enter header element parse element char [ ] \\ ``", "if r0 ! = null goto label1", "$ r10 = newarray org apache common httpclient header element [ 0 ]", "return $ r10", "if r0 ! = null goto label1", "label r12 = new java util array list", "specialinvoke r12 < init >", "i4 = 0", "i5 = 0", "i0 = lengthof r0", "z1 = 0", "goto label9", "label if i4 < i0 goto label2", "label c1 = r0 [ i4 ]", "if c1 ! = 34 goto label5", "if z1 ! = 0 goto label3", "$ z2 = 1", "goto label4", "label z1 = $ z2", "label r11 = null", "if z1 ! = 0 goto label6", "if c1 ! = 44 goto label6", "r13 = new org apache common httpclient header element", "specialinvoke r13 < init > r0 i5 i4", "r11 = r13", "i5 = i4 + 1", "goto label7", "label if r11 == null goto label8", "r15 = org apache common httpclient name value pair r11", "$ r4 = r15 get name", "if $ r4 == null goto label8", "r12 add r11", "label i4 = i4 + 1", "if c1 ! = 44 goto label6", "label $ i2 = i0 - 1", "if i4 ! = $ i2 goto label7", "r14 = new org apache common httpclient header element", "specialinvoke r14 < init > r0 i5 i0", "r11 = r14", "if z1 ! = 0 goto label3", "label $ z2 = 0", "label if i4 < i0 goto label2", "$ i3 = r12 size", "$ r7 = newarray org apache common httpclient header element [ $ i3 ]", "$ r8 = r12 to array $ r7", "$ r9 = org apache common httpclient header element [ ] $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common httpclient header group r0", "r3 clear", "i1 = 0", "goto label2", "label $ i0 = lengthof r1", "if i1 < $ i0 goto label1", "label $ r2 = r1 [ i1 ]", "r4 = org apache common httpclient header group r0", "r4 add header $ r2", "i1 = i1 + 1", "if i1 < $ i0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common httpclient header group r0", "$ r4 = r7 header", "r2 = $ r4 iterator", "goto label2", "label $ z0 = r2 have next", "if $ z0 ! = 0 goto label1", "label $ r5 = r2 next", "r3 = org apache common httpclient header $ r5", "r8 = org apache common httpclient name value pair r3", "$ r6 = r8 get name", "$ z1 = $ r6 equal ignore case r1", "if $ z1 == 0 goto label2", "return r3", "if $ z0 ! = 0 goto label1", "return null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init > \\ `` connection may not be null\\ ``", "throw r9", "if r1 ! = null goto label1", "label r10 = org apache common httpclient host configuration r0", "$ r2 = r10 proxy host", "if $ r2 == null goto label4", "r11 = org apache common httpclient host configuration r0", "$ r4 = r11 proxy host", "r12 = org apache common httpclient http host $ r4", "$ r5 = r12 get host name", "$ r6 = r1 get proxy host", "$ z0 = $ r5 equal ignore case $ r6", "if $ z0 == 0 goto label2", "r13 = org apache common httpclient host configuration r0", "$ r7 = r13 proxy host", "r14 = org apache common httpclient http host $ r7", "$ i0 = r14 get port", "$ i1 = r1 get proxy port", "if $ i0 ! = $ i1 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ i0 ! = $ i1 goto label2", "label $ z1 = 0", "if $ r2 == null goto label4", "label $ r3 = r1 get proxy host", "if $ r3 ! = null goto label5", "$ z2 = 1", "goto label6", "label return $ z2", "if $ r3 ! = null goto label5", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient host configuration r0", "$ r1 = r2 host", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common httpclient host configuration r0", "$ r1 = r3 host", "if $ r1 == null goto label1", "r4 = org apache common httpclient host configuration r0", "$ r2 = r4 host", "$ i0 = $ r2 get port", "return $ i0", "if $ r1 == null goto label1", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common httpclient host configuration r0", "$ r1 = r4 proxy host", "if $ r1 == null goto label1", "r5 = org apache common httpclient host configuration r0", "$ r2 = r5 proxy host", "r6 = org apache common httpclient http host $ r2", "$ r3 = r6 get host name", "return $ r3", "if $ r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient host configuration r0", "$ r1 = r2 local address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r3 = org apache common httpclient http client r0", "$ r2 = r3 params", "$ r2 make strict", "goto label2", "label return", "if z0 == 0 goto label1", "label r4 = org apache common httpclient http client r0", "$ r1 = r4 params", "$ r1 make lenient"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http connection r0", "$ r1 = r2 socket", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http connection r0", "$ r1 = r2 proxy host name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http connection r0", "$ r1 = r2 protocol in use", "$ z0 = $ r1 be secure", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http connection r0", "$ z0 = r2 be open", "if $ z0 == 0 goto label1", "r3 = org apache common httpclient http connection r0", "$ z1 = r3 be stale", "if $ z1 == 0 goto label1", "$ r1 = org apache common httpclient http connection log", "$ r1 debug \\ `` connection be stale close \\ ``", "r4 = org apache common httpclient http connection r0", "r4 close", "return 1", "if $ z1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http connection r0", "$ r1 = r2 last response input stream", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient http client r0", "$ r1 = r2 http connection manager", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common httpclient http connection log", "$ r1 trace \\ `` enter http connection release connection \\ ``", "r7 = org apache common httpclient http connection r0", "$ z0 = r7 lock", "if $ z0 == 0 goto label1", "$ r6 = org apache common httpclient http connection log", "$ r6 debug \\ `` connection be lock call to release connection ignore \\ ``", "goto label3", "label return", "if $ z0 == 0 goto label1", "label r8 = org apache common httpclient http connection r0", "$ r2 = r8 http connection manager", "if $ r2 == null goto label2", "$ r4 = org apache common httpclient http connection log", "$ r4 debug \\ `` release connection back to connection manager \\ ``", "r9 = org apache common httpclient http connection r0", "$ r5 = r9 http connection manager", "r10 = org apache common httpclient http connection r0", "$ r5 release connection r10", "if $ r2 == null goto label2", "label $ r3 = org apache common httpclient http connection log", "$ r3 warn \\ `` http connection manager be null connection can not be release \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache common httpclient http connection r0", "$ r1 = r2 params", "$ r1 set send buffer size i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init > \\ `` parameter may not be null\\ ``", "throw $ r3", "if r0 ! = null goto label1", "label $ r2 = r0 get bytes \\ `` us-ascii\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common httpclient http method base r0", "r1 do authentication = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common httpclient http method base r0", "$ r1 = r3 get request header group", "$ r2 = $ r1 get all header", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common httpclient http u r l r0", "r1 = r4 get raw password", "if r1 ! = null goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if r1 ! = null goto label1", "label r3 = new java lang string", "$ r2 = r3", "specialinvoke r3 < init > r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common httpclient method entity enclose method log", "$ r1 trace \\ `` enter entity enclose method get request content length \\ ``", "r6 = org apache common httpclient method entity enclose method r0", "$ z0 = r6 have request content", "if $ z0 ! = 0 goto label1", "return 0l", "if $ z0 ! = 0 goto label1", "label r7 = org apache common httpclient method entity enclose method r0", "$ z1 = r7 chunk", "if $ z1 == 0 goto label2", "return -1l", "if $ z1 == 0 goto label2", "label r8 = org apache common httpclient method entity enclose method r0", "$ r2 = r8 request entity", "if $ r2 ! = null goto label3", "r9 = org apache common httpclient method entity enclose method r0", "$ r5 = r9 generate request entity", "r10 = org apache common httpclient method entity enclose method r0", "r10 request entity = $ r5", "label r11 = org apache common httpclient method entity enclose method r0", "$ r3 = r11 request entity", "if $ r3 ! = null goto label4", "$ l0 = 0l", "goto label5", "label return $ l0", "if $ r3 ! = null goto label4", "label r12 = org apache common httpclient method entity enclose method r0", "$ r4 = r12 request entity", "$ l0 = $ r4 get content length"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org apache common httpclient method multipart file part log", "$ r3 trace \\ `` enter send disposition header output stream out \\ ``", "r9 = org apache common httpclient method multipart part r0", "specialinvoke r9 send disposition header r1", "r10 = org apache common httpclient method multipart file part r0", "$ r4 = r10 source", "r2 = $ r4 get file name", "if r2 == null goto label1", "$ r5 = org apache common httpclient method multipart file part file_name_bytes", "r1 write $ r5", "$ r6 = org apache common httpclient method multipart part quote_bytes", "r1 write $ r6", "$ r7 = org apache common httpclient util encode util get ascii byte r2", "r1 write $ r7", "$ r8 = org apache common httpclient method multipart part quote_bytes", "r1 write $ r8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common httpclient method multipart file part source r0", "$ r1 = r3 file name", "if $ r1 ! = null goto label1", "$ r2 = \\ `` noname\\ ``", "goto label2", "label return $ r2", "if $ r1 ! = null goto label1", "label r4 = org apache common httpclient method multipart file part source r0", "$ r2 = r4 file name"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r2 = org apache common httpclient method multipart part log", "$ r2 trace \\ `` enter length \\ ``", "r5 = org apache common httpclient method multipart part r0", "$ l0 = r5 length of data", "$ b1 = $ l0 cmp 0l", "if $ b1 > = 0 goto label1", "return -1l", "if $ b1 > = 0 goto label1", "label r4 = new java io byte array output stream", "specialinvoke r4 < init >", "r6 = org apache common httpclient method multipart part r0", "r6 send start r4", "r7 = org apache common httpclient method multipart part r0", "r7 send disposition header r4", "r8 = org apache common httpclient method multipart part r0", "r8 send content type header r4", "r9 = org apache common httpclient method multipart part r0", "r9 send transfer encode header r4", "r10 = org apache common httpclient method multipart part r0", "r10 send end of header r4", "r11 = org apache common httpclient method multipart part r0", "r11 send end r4", "$ i2 = r4 size", "$ l3 = long $ i2", "r12 = org apache common httpclient method multipart part r0", "$ l4 = r12 length of data", "$ l5 = $ l3 + $ l4", "return $ l5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` name must not be null\\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = org apache common httpclient method multipart part base r0", "r4 name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common httpclient method multipart post method log", "$ r1 trace \\ `` enter multipart post method get request content length \\ ``", "r3 = org apache common httpclient method multipart post method r0", "$ r2 = r3 get part", "$ l0 = org apache common httpclient method multipart part get length of part $ r2", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = org apache common httpclient method post method log", "$ r5 trace \\ `` enter post method remove parameter string string \\ ``", "if r1 ! = null goto label1", "r12 = new java lang illegal argument exception", "specialinvoke r12 < init > \\ `` parameter name may not be null\\ ``", "throw r12", "if r1 ! = null goto label1", "label if r2 ! = null goto label2", "r13 = new java lang illegal argument exception", "specialinvoke r13 < init > \\ `` parameter value may not be null\\ ``", "throw r13", "label if r2 ! = null goto label2", "label r14 = org apache common httpclient method post method r0", "$ r6 = r14 params", "r3 = $ r6 iterator", "goto label4", "label $ z2 = r3 have next", "if $ z2 ! = 0 goto label3", "label $ r7 = r3 next", "r4 = org apache common httpclient name value pair $ r7", "$ r8 = r4 get name", "$ z0 = r1 equal $ r8", "if $ z0 == 0 goto label4", "$ r9 = r4 get value", "$ z1 = r2 equal $ r9", "if $ z1 == 0 goto label4", "r3 remove", "return 1", "if $ z2 ! = 0 goto label3", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient multi thread http connection manager r0", "$ r1 = r2 params", "r3 = org apache common httpclient params http connection params $ r1", "$ z0 = r3 be stale check enabled", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common httpclient multi thread http connection manager r0", "$ i0 = r1 get connection in pool", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common httpclient params default http params r0", "r1 set boolean parameter \\ `` http authentication preemptive\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common httpclient host configuration any_host_configuration", "r2 = org apache common httpclient params http connection manager params r0", "$ i0 = r2 get max connection per host $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common httpclient params default http params r0", "r1 set int parameter \\ `` http connection-manager max-total\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r0 set int parameter \\ `` http socket timeout\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ i0 = r0 get int parameter \\ `` http socket receivebuffer\\", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r0 set int parameter \\ `` http socket linger\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common httpclient uri r0", "$ z0 = r1 _is_opaque_part", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient uri r0", "$ r1 = r2 _authority", "if $ r1 ! = null goto label1", "r3 = org apache common httpclient uri r0", "$ z0 = r3 _is_net_path", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["$ r0 = org apache common httpclient uri default document charset", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org apache common httpclient uri default document charset by locale", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common httpclient uri r0", "$ r1 = r2 _userinfo", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common httpclient uri r0", "r1 = r4 get raw current hier path", "if r1 ! = null goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if r1 ! = null goto label1", "label r3 = new java lang string", "$ r2 = r3", "specialinvoke r3 < init > r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common httpclient uri r0", "$ r1 = r5 _fragment", "if $ r1 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if $ r1 ! = null goto label1", "label r6 = org apache common httpclient uri r0", "$ r2 = r6 _fragment", "r7 = org apache common httpclient uri r0", "$ r3 = r7 get protocol charset", "$ r4 = org apache common httpclient uri decode $ r2 $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` username may not be null\\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = org apache common httpclient username password credential r0", "r4 user name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common httpclient username password credential r0", "$ r1 = r3 user name", "i1 = org apache common httpclient util lang utils hash code 17 $ r1", "r4 = org apache common httpclient username password credential r0", "$ r2 = r4 password", "i2 = org apache common httpclient util lang utils hash code i1 $ r2", "return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common httpclient util http u r l connection log", "$ r1 trace \\ `` enter http u r l connection connect \\ ``", "$ r2 = new java lang runtime exception", "specialinvoke $ r2 < init > \\ `` this class can only be use with alreadyretrieved data\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common httpclient util parameter formatter r0", "r1 always use quote = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common httpclient uri get default protocol charset", "$ r2 = org apache common httpclient util u r i util encode path r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io byte order mark r0", "$ r1 = r2 bytes", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "java util array sort r1 r0", "label return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r2 = specialinvoke r0 to string", "$ r3 = r10 append $ r2", "$ r4 = $ r3 append \\ `` [ \\ ``", "r11 = org apache common io comparator reverse file comparator r0", "$ r5 = r11 delegate", "$ r6 = $ r5 to string", "$ r7 = $ r4 append $ r6", "$ r8 = $ r7 append \\ `` ] \\ ``", "$ r9 = $ r8 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ l1 = org apache common io endian utils read swap long r0 i0", "$ d0 = java lang double long bit to double $ l1", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = org apache common io endian utils read r0", "i1 = org apache common io endian utils read r0", "i2 = org apache common io endian utils read r0", "i3 = org apache common io endian utils read r0", "$ i4 = i0 & 255", "$ i7 = $ i4 < < 0", "$ i5 = i1 & 255", "$ i6 = $ i5 < < 8", "$ i10 = $ i7 + $ i6", "$ i8 = i2 & 255", "$ i9 = $ i8 < < 16", "$ i13 = $ i10 + $ i9", "$ i11 = i3 & 255", "$ i12 = $ i11 < < 24", "$ i14 = $ i13 + $ i12", "return $ i14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io file accumulator path visitor r0", "$ r1 = r2 file list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common io file path utils empty_delete_option_array", "$ r2 = org apache common io file path utils clean directory r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r6 = new org apache common io file count path visitor", "$ r2 = org apache common io file counter long path counter", "specialinvoke r6 < init > $ r2", "r7 = java nio file file visitor r6", "$ r3 = org apache common io file path utils visit file tree r7 r0", "$ r4 = org apache common io file count path visitor $ r3", "$ r5 = $ r4 get path counter", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = org apache common io file path utils empty_link_option_array", "$ r3 = org apache common io file path utils empty_open_option_array", "$ r2 = org apache common io file path utils empty_file_visit_option_array", "$ z0 = org apache common io file path utils directory and file content equal r0 r1 $ r4 $ r3 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r2 = r7 append \\ `` file delete strategy [ \\ ``", "r8 = org apache common io file delete strategy r0", "$ r3 = r8 name", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` ] \\ ``", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 can read", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be file", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache common io filefilter prefix file filter", "specialinvoke r2 < init > r0", "r3 = org apache common io filefilter i o file filter r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache common io filefilter suffix file filter", "specialinvoke r2 < init > r0", "r3 = org apache common io filefilter i o file filter r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r11 = new java lang illegal argument exception", "specialinvoke $ r11 < init > \\ `` the filter must not be null\\ ``", "throw $ r11", "if r0 ! = null goto label1", "label $ r2 = new java util array list", "$ i0 = lengthof r0", "specialinvoke $ r2 < init > $ i0", "i2 = 0", "label $ i1 = lengthof r0", "if i2 > = $ i1 goto label4", "$ r3 = r0 [ i2 ]", "if $ r3 ! = null goto label3", "$ r5 = new java lang illegal argument exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` the filter [ \\ ``", "$ r8 = $ r7 append i2", "$ r9 = $ r8 append \\ `` ] be null\\ ``", "$ r10 = $ r9 to string", "specialinvoke $ r5 < init > $ r10", "throw $ r5", "if $ r3 ! = null goto label3", "label $ r4 = r0 [ i2 ]", "$ r2 add $ r4", "i2 = i2 + 1", "goto label2", "if i2 > = $ i1 goto label4", "label return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "r3 = org apache common io filefilter name file filter r0", "$ z0 = specialinvoke r3 accept base name $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r3 = null", "goto label2", "label r4 = org apache common io filefilter prefix file filter r0", "$ z0 = specialinvoke r4 accept $ r3", "return $ z0", "if r1 ! = null goto label1", "label $ r3 = r1 get name"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ c0 = org apache common io filename utils system_separator", "$ r1 = org apache common io filename utils do normalize r0 $ c0 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ z0 = org apache common io filename utils be system window", "if $ z0 == 0 goto label2", "$ r1 = org apache common io filename utils separator to window r0", "goto label3", "label return $ r1", "if $ z0 == 0 goto label2", "label $ r1 = org apache common io filename utils separator to unix r0"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common io file system r0", "$ r2 = r3 reserve file name", "$ i0 = java util array binary search $ r2 r1", "if $ i0 < 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common io file utils get parent file r0", "$ r2 = org apache common io file utils mkdirs $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = java lang system get property \\ `` user home\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "label $ r3 = org apache common io file utils stream file r0 z0 r1", "$ r4 = org apache common io file utils to list $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common io charsets to charset r1", "$ r3 = org apache common io file utils read file to string r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` file\\ ``", "$ z0 = r0 exist", "if $ z0 ! = 0 goto label1", "$ r2 = org apache common io file utils open output stream r0", "$ r2 close", "label $ l0 = java lang system current time millis", "org apache common io file utils set last modified r0 $ l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common io input char sequence reader r0", "$ i1 = r1 idx", "r2 = org apache common io input char sequence reader r0", "r2 mark = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r23 = org apache common io input char sequence reader r0", "$ i3 = r23 idx", "r24 = org apache common io input char sequence reader r0", "$ i4 = specialinvoke r24 end", "if $ i3 < $ i4 goto label1", "return -1", "if $ i3 < $ i4 goto label1", "label java util object require non null r1 \\ `` array\\ ``", "if i1 < 0 goto label2", "if i0 < 0 goto label2", "$ i6 = i0 + i1", "$ i5 = lengthof r1", "if $ i6 < = $ i5 goto label3", "label r22 = new java lang index out of bound exception", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r14 = r21 append \\ `` array size=\\ ``", "$ i33 = lengthof r1", "$ r15 = $ r14 append $ i33", "$ r16 = $ r15 append \\", "$ r17 = $ r16 append i0", "$ r18 = $ r17 append \\", "$ r19 = $ r18 append i1", "$ r20 = $ r19 to string", "specialinvoke r22 < init > $ r20", "throw r22", "if $ i6 < = $ i5 goto label3", "label r25 = org apache common io input char sequence reader r0", "$ r3 = r25 char sequence", "$ z0 = $ r3 instanceof java lang string", "if $ z0 == 0 goto label4", "r26 = org apache common io input char sequence reader r0", "$ i25 = specialinvoke r26 end", "r27 = org apache common io input char sequence reader r0", "$ i26 = r27 idx", "$ i27 = $ i25 - $ i26", "i34 = java lang math min i1 $ i27", "r28 = org apache common io input char sequence reader r0", "$ r10 = r28 char sequence", "$ r11 = java lang string $ r10", "r29 = org apache common io input char sequence reader r0", "$ i30 = r29 idx", "r30 = org apache common io input char sequence reader r0", "$ i28 = r30 idx", "$ i29 = $ i28 + i34", "$ r11 get char $ i30 $ i29 r1 i0", "r31 = org apache common io input char sequence reader r0", "$ i31 = r31 idx", "$ i32 = $ i31 + i34", "r32 = org apache common io input char sequence reader r0", "r32 idx = $ i32", "return i34", "if $ z0 == 0 goto label4", "label r33 = org apache common io input char sequence reader r0", "$ r4 = r33 char sequence", "$ z1 = $ r4 instanceof java lang string builder", "if $ z1 == 0 goto label5", "r34 = org apache common io input char sequence reader r0", "$ i17 = specialinvoke r34 end", "r35 = org apache common io input char sequence reader r0", "$ i18 = r35 idx", "$ i19 = $ i17 - $ i18", "i35 = java lang math min i1 $ i19", "r36 = org apache common io input char sequence reader r0", "$ r8 = r36 char sequence", "$ r9 = java lang string builder $ r8", "r37 = org apache common io input char sequence reader r0", "$ i22 = r37 idx", "r38 = org apache common io input char sequence reader r0", "$ i20 = r38 idx", "$ i21 = $ i20 + i35", "$ r9 get char $ i22 $ i21 r1 i0", "r39 = org apache common io input char sequence reader r0", "$ i23 = r39 idx", "$ i24 = $ i23 + i35", "r40 = org apache common io input char sequence reader r0", "r40 idx = $ i24", "return i35", "if $ z1 == 0 goto label5", "label r41 = org apache common io input char sequence reader r0", "$ r5 = r41 char sequence", "$ z2 = $ r5 instanceof java lang string buffer", "if $ z2 == 0 goto label6", "r42 = org apache common io input char sequence reader r0", "$ i9 = specialinvoke r42 end", "r43 = org apache common io input char sequence reader r0", "$ i10 = r43 idx", "$ i11 = $ i9 - $ i10", "i36 = java lang math min i1 $ i11", "r44 = org apache common io input char sequence reader r0", "$ r6 = r44 char sequence", "$ r7 = java lang string buffer $ r6", "r45 = org apache common io input char sequence reader r0", "$ i14 = r45 idx", "r46 = org apache common io input char sequence reader r0", "$ i12 = r46 idx", "$ i13 = $ i12 + i36", "$ r7 get char $ i14 $ i13 r1 i0", "r47 = org apache common io input char sequence reader r0", "$ i15 = r47 idx", "$ i16 = $ i15 + i36", "r48 = org apache common io input char sequence reader r0", "r48 idx = $ i16", "return i36", "if $ z2 == 0 goto label6", "label i37 = 0", "i38 = 0", "label if i38 > = i1 goto label9", "r49 = org apache common io input char sequence reader r0", "i2 = r49 read", "if i2 ! = -1 goto label8", "return i37", "if i2 ! = -1 goto label8", "label $ i8 = i0 + i38", "$ c7 = char i2", "r1 [ $ i8 ] = $ c7", "i37 = i37 + 1", "i38 = i38 + 1", "goto label7", "label if i38 > = i1 goto label9", "label return i37"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [], [109], [110], [111], [112], [113], [114], [115], [], [117], [118], [119], [120], [121], [122], [], [124], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = org apache common io input null input stream r0", "$ z0 = r3 eof", "if $ z0 == 0 goto label1", "r2 = new java io i o exception", "specialinvoke r2 < init > \\ `` skip after end of file\\ ``", "throw r2", "if $ z0 == 0 goto label1", "label r4 = org apache common io input null input stream r0", "$ l2 = r4 position", "r5 = org apache common io input null input stream r0", "$ l1 = r5 size", "$ b3 = $ l2 cmp $ l1", "if $ b3 ! = 0 goto label2", "r6 = org apache common io input null input stream r0", "$ i13 = specialinvoke r6 do end of file", "$ l14 = long $ i13", "return $ l14", "if $ b3 ! = 0 goto label2", "label r7 = org apache common io input null input stream r0", "$ l4 = r7 position", "$ l5 = $ l4 + l0", "r8 = org apache common io input null input stream r0", "r8 position = $ l5", "l15 = l0", "r9 = org apache common io input null input stream r0", "$ l7 = r9 position", "r10 = org apache common io input null input stream r0", "$ l6 = r10 size", "$ b8 = $ l7 cmp $ l6", "if $ b8 < = 0 goto label3", "r11 = org apache common io input null input stream r0", "$ l10 = r11 position", "r12 = org apache common io input null input stream r0", "$ l9 = r12 size", "$ l11 = $ l10 - $ l9", "l15 = l0 - $ l11", "r13 = org apache common io input null input stream r0", "$ l12 = r13 size", "r14 = org apache common io input null input stream r0", "r14 position = $ l12", "label return l15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common io input null reader r0", "$ l0 = r1 position", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache common io input null reader r0", "$ z0 = r2 mark support", "if $ z0 ! = 0 goto label1", "$ r1 = org apache common io input unsupported operation exception mark", "throw $ r1", "if $ z0 ! = 0 goto label1", "label r3 = org apache common io input null reader r0", "$ l1 = r3 position", "r4 = org apache common io input null reader r0", "r4 mark = $ l1", "$ l2 = long i0", "r5 = org apache common io input null reader r0", "r5 readlimit = $ l2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common io input queue input stream r0", "$ r2 = r4 block queue", "$ r3 = $ r2 poll", "r1 = java lang integer $ r3", "if r1 ! = null goto label1", "$ i1 = -1", "goto label2", "label return $ i1", "if r1 ! = null goto label1", "label $ i0 = r1 int value", "$ i1 = 255 & $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common io input random access file input stream r0", "$ r1 = r3 random access file", "$ l0 = $ r1 length", "r4 = org apache common io input random access file input stream r0", "$ r2 = r4 random access file", "$ l1 = $ r2 get file pointer", "$ l2 = $ l0 - $ l1", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io input random access file input stream r0", "$ r1 = r2 random access file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io input reverse line file reader r0", "$ r1 = r2 channel", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common io input tag input stream r0", "$ r2 = r3 tag", "$ z0 = org apache common io tag i o exception be tag with r1 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common io input tailer r0", "$ l0 = r1 delay millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java nio charset charset default charset", "$ r2 = org apache common io i o utils to input stream r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common io charsets to charset r1", "$ r3 = org apache common io i o utils to input stream r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io monitor file alteration observer r0", "$ r1 = r2 file filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org apache common io monitor file alteration observer r0", "$ r2 = r3 listener", "$ r2 add r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common io monitor file entry r0", "$ l0 = r1 length", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common io monitor file entry r0", "r1 exist = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io output appendable output stream r0", "$ r1 = r2 appendable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "java util object require non null r1 \\ `` character array be missing\\ ``", "if i1 < 0 goto label1", "$ i4 = i0 + i1", "$ i3 = lengthof r1", "if $ i4 < = $ i3 goto label2", "label r15 = new java lang index out of bound exception", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r5 = r14 append \\ `` array size=\\ ``", "$ i2 = lengthof r1", "$ r6 = $ r5 append $ i2", "$ r7 = $ r6 append \\", "$ r8 = $ r7 append i0", "$ r9 = $ r8 append \\", "$ r10 = $ r9 append i1", "$ r11 = $ r10 to string", "specialinvoke r15 < init > $ r11", "throw r15", "if $ i4 < = $ i3 goto label2", "label i7 = 0", "label if i7 > = i1 goto label4", "r16 = org apache common io output appendable writer r0", "$ r12 = r16 appendable", "$ i5 = i0 + i7", "$ c6 = r1 [ $ i5 ]", "$ r12 append $ c6", "i7 = i7 + 1", "goto label3", "label if i7 > = i1 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache common io output appendable writer r0", "$ r1 = r3 appendable", "$ c1 = char i0", "$ r1 append $ c1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 close", "r1 = org apache common io output defer file output stream r0", "r1 close = 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common io output file writer with encode r0", "$ r2 = r3 out", "$ r2 write r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = null", "i0 = 0", "r10 = org apache common io output filter collection writer r0", "$ r4 = r10 writer", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label6", "$ r6 = r1 next", "r2 = java io writer $ r6", "if r2 == null goto label5", "label r2 flush", "label goto label5", "label i0 = i0 + 1", "goto label1", "if $ z0 == 0 goto label6", "label r12 = org apache common io output filter collection writer r0", "$ z1 = specialinvoke r12 not empty r8", "if $ z1 == 0 goto label7", "r9 = new org apache common io i o exception list", "specialinvoke r9 < init > \\ `` flush\\", "r13 = java lang throwable r9", "throw r13", "if $ z1 == 0 goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io output writer output stream r0", "specialinvoke r2 process input 1", "r3 = org apache common io output writer output stream r0", "specialinvoke r3 flush output", "r4 = org apache common io output writer output stream r0", "$ r1 = r4 writer", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io output xml stream writer r0", "$ r1 = r2 default encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r9 = org apache common io serialization validate object input stream r0", "$ r6 = r9 reject matcher", "r8 = new org apache common io serialization full class name matcher", "$ r5 = newarray java lang string [ 1 ]", "$ r7 = r3 get name", "$ r5 [ 0 ] = $ r7", "specialinvoke r8 < init > $ r5", "$ r6 add r8", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r10 = org apache common io serialization validate object input stream r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ z0 = r0 instanceof org apache common io tag i o exception", "if $ z0 == 0 goto label1", "$ r2 = org apache common io tag i o exception r0", "$ r3 = $ r2 tag", "$ z1 = r1 equal $ r3", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ l1 = r1 last modified", "$ l2 = r2 last modified", "l0 = $ l1 - $ l2", "$ b3 = l0 cmp 0l", "if $ b3 > = 0 goto label1", "return -1", "if $ b3 > = 0 goto label1", "label $ b4 = l0 cmp 0l", "if $ b4 < = 0 goto label2", "return 1", "if $ b4 < = 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache common io filefilter age file filter", "specialinvoke r2 < init > r0", "r3 = org apache common io filefilter i o file filter r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common io filename utils do get full path r0 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common io i o case system", "$ z0 = org apache common io filename utils equal r0 r1 1 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common io input b o m input stream r0", "$ i0 = r2 mark fb index", "r3 = org apache common io input b o m input stream r0", "r3 fb index = $ i0", "r4 = org apache common io input b o m input stream r0", "$ z0 = r4 mark at start", "if $ z0 == 0 goto label1", "r5 = org apache common io input b o m input stream r0", "r5 first bytes = null", "label r6 = org apache common io input b o m input stream r0", "$ r1 = r6 in", "$ r1 reset", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r16 = org apache common io input char sequence reader r0", "$ i3 = r16 idx", "r17 = org apache common io input char sequence reader r0", "$ r2 = r17 char sequence", "$ i4 = $ r2 length", "if $ i3 < $ i4 goto label1", "return -1", "if $ i3 < $ i4 goto label1", "label if r1 ! = null goto label2", "r13 = new java lang null pointer exception", "specialinvoke r13 < init > \\ `` character array be missing\\ ``", "throw r13", "label if r1 ! = null goto label2", "label if i1 < 0 goto label3", "if i0 < 0 goto label3", "$ i6 = i0 + i1", "$ i5 = lengthof r1", "if $ i6 < = $ i5 goto label4", "label r15 = new java lang index out of bound exception", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r6 = r14 append \\ `` array size=\\ ``", "$ i9 = lengthof r1", "$ r7 = $ r6 append $ i9", "$ r8 = $ r7 append \\", "$ r9 = $ r8 append i0", "$ r10 = $ r9 append \\", "$ r11 = $ r10 append i1", "$ r12 = $ r11 to string", "specialinvoke r15 < init > $ r12", "throw r15", "if $ i6 < = $ i5 goto label4", "label i10 = 0", "i11 = 0", "label if i11 > = i1 goto label7", "r18 = org apache common io input char sequence reader r0", "i2 = r18 read", "if i2 ! = -1 goto label6", "return i10", "if i2 ! = -1 goto label6", "label $ i8 = i0 + i11", "$ c7 = char i2", "r1 [ $ i8 ] = $ c7", "i10 = i10 + 1", "i11 = i11 + 1", "goto label5", "label if i11 > = i1 goto label7", "label return i10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [], [51], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java nio charset charset default charset", "$ r2 = org apache common io i o utils to char array r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java nio charset charset default charset", "$ r2 = org apache common io i o utils read line r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common io charsets to charset r1", "$ r3 = org apache common io i o utils read line r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common io charsets to charset r1", "$ r3 = org apache common io i o utils to input stream r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "r1 write r0", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org apache common io charsets to charset r2", "org apache common io i o utils write r0 r1 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = org apache common io i o utils copy large r0 r1", "$ b1 = l0 cmp 2147483647l", "if $ b1 < = 0 goto label1", "return -1", "if $ b1 < = 0 goto label1", "label $ i2 = int l0", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org apache common io charsets to charset r2", "org apache common io i o utils copy r0 r1 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r2 = @ parameter0", "r3 = @ parameter1", "$ z0 = r2 instanceof java io buffer input stream", "if $ z0 ! = 0 goto label1", "$ r1 = new java io buffer input stream", "specialinvoke $ r1 < init > r2", "r2 = $ r1", "label $ z1 = r3 instanceof java io buffer input stream", "if $ z1 ! = 0 goto label2", "$ r0 = new java io buffer input stream", "specialinvoke $ r0 < init > r3", "r3 = $ r0", "label i0 = r2 read", "label if -1 == i0 goto label5", "i1 = r3 read", "if i0 == i1 goto label4", "return 0", "if i0 == i1 goto label4", "label i0 = r2 read", "goto label3", "label if -1 == i0 goto label5", "label i2 = r3 read", "if i2 ! = -1 goto label6", "$ z2 = 1", "goto label7", "label return $ z2", "if i2 ! = -1 goto label6", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common io output defer file output stream r0", "$ r1 = r4 memory output stream", "if $ r1 == null goto label1", "r5 = org apache common io output defer file output stream r0", "$ r2 = r5 memory output stream", "$ r3 = $ r2 to byte array", "return $ r3", "if $ r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "label if r0 == null goto label2", "r0 close", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java nio charset charset default charset", "$ r2 = org apache common io i o utils to char array r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java lang string", "$ r3 = org apache common io charsets to charset r1", "specialinvoke $ r2 < init > r0 $ r3", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r2 = @ parameter0", "r3 = @ parameter1", "if r2 ! = r3 goto label1", "return 1", "if r2 ! = r3 goto label1", "label $ z0 = r2 instanceof java io buffer input stream", "if $ z0 ! = 0 goto label2", "$ r1 = new java io buffer input stream", "specialinvoke $ r1 < init > r2", "r2 = $ r1", "label $ z1 = r3 instanceof java io buffer input stream", "if $ z1 ! = 0 goto label3", "$ r0 = new java io buffer input stream", "specialinvoke $ r0 < init > r3", "r3 = $ r0", "label i0 = r2 read", "label if -1 == i0 goto label6", "i1 = r3 read", "if i0 == i1 goto label5", "return 0", "if i0 == i1 goto label5", "label i0 = r2 read", "goto label4", "label if -1 == i0 goto label6", "label i2 = r3 read", "if i2 ! = -1 goto label7", "$ z2 = 1", "goto label8", "label return $ z2", "if i2 ! = -1 goto label7", "label $ z2 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [], [24], [25], [26], [27], [], [29], [30], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = java nio file file size r0", "$ b1 = $ l0 cmp 0l", "if $ b1 > 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 > 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = org apache common io i o utils copy large r0 r1", "$ b1 = l0 cmp 2147483647l", "if $ b1 < = 0 goto label1", "return -1", "if $ b1 < = 0 goto label1", "label $ i2 = int l0", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org apache common lang builder equal builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append r0 r1", "$ z0 = $ r3 be equal", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ r1 = org apache common lang array utils empty_boolean_array", "return $ r1", "if $ i0 ! = 0 goto label2", "label return r0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "i2 = @ parameter1", "i3 = @ parameter2", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label if i2 > = 0 goto label2", "i2 = 0", "label $ i1 = lengthof r0", "if i3 < = $ i1 goto label3", "i3 = lengthof r0", "label i0 = i3 - i2", "if i0 > 0 goto label4", "$ r2 = org apache common lang array utils empty_boolean_array", "return $ r2", "if i0 > 0 goto label4", "label r1 = newarray boolean [ i0 ]", "java lang system arraycopy r0 i2 r1 0 i0", "return r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "i2 = @ parameter2", "$ z1 = org apache common lang array utils be empty r0", "if $ z1 == 0 goto label1", "return -1", "if $ z1 == 0 goto label1", "label if i2 > = 0 goto label2", "label $ i0 = lengthof r0", "if i2 < $ i0 goto label3", "$ i1 = lengthof r0", "i2 = $ i1 - 1", "label i3 = i2", "label if i3 < 0 goto label6", "$ z2 = r0 [ i3 ]", "if z0 ! = $ z2 goto label5", "return i3", "if z0 ! = $ z2 goto label5", "label i3 = i3 + -1", "goto label4", "label if i3 < 0 goto label6", "label return -1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ i0 = org apache common lang array utils last index of r0 z0 2147483647", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "i2 = @ parameter2", "d1 = @ parameter3", "$ z0 = org apache common lang array utils be empty r0", "if $ z0 == 0 goto label1", "return -1", "if $ z0 == 0 goto label1", "label if i2 > = 0 goto label2", "i2 = 0", "label d2 = d0 - d1", "d3 = d0 + d1", "i3 = i2", "label $ i4 = lengthof r0", "if i3 > = $ i4 goto label5", "$ d4 = r0 [ i3 ]", "$ b0 = $ d4 cmpl d2", "if $ b0 < 0 goto label4", "$ d5 = r0 [ i3 ]", "$ b1 = $ d5 cmpg d3", "if $ b1 > 0 goto label4", "return i3", "if $ b1 > 0 goto label4", "label i3 = i3 + 1", "goto label3", "if i3 > = $ i4 goto label5", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r4 = org apache common lang array utils empty_boolean_array", "return $ r4", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i4 = 0", "label $ i2 = lengthof r0", "if i4 > = $ i2 goto label6", "r2 = r0 [ i4 ]", "$ i3 = i4", "if r2 ! = null goto label4", "$ z1 = z0", "goto label5", "label r1 [ $ i3 ] = $ z1", "i4 = i4 + 1", "goto label3", "if r2 ! = null goto label4", "label $ z1 = r2 boolean value", "if i4 > = $ i2 goto label6", "label return r1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = org apache common lang array utils empty_boolean_array", "return $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i3 = 0", "label $ i2 = lengthof r0", "if i3 > = $ i2 goto label4", "$ r2 = r0 [ i3 ]", "$ z0 = $ r2 boolean value", "r1 [ i3 ] = $ z0", "i3 = i3 + 1", "goto label3", "if i3 > = $ i2 goto label4", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r4 = org apache common lang array utils empty_boolean_array", "return $ r4", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray boolean [ $ i1 ]", "i4 = 0", "label $ i2 = lengthof r0", "if i4 > = $ i2 goto label6", "r2 = r0 [ i4 ]", "$ i3 = i4", "if r2 ! = null goto label4", "$ z1 = z0", "goto label5", "label r1 [ $ i3 ] = $ z1", "i4 = i4 + 1", "goto label3", "if r2 ! = null goto label4", "label $ z1 = r2 boolean value", "if i4 > = $ i2 goto label6", "label return r1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r2 = org apache common lang builder equal builder r0", "$ z2 = r2 be equal", "if $ z2 ! = 0 goto label1", "r3 = org apache common lang builder equal builder r0", "return r3", "if $ z2 ! = 0 goto label1", "label if z0 ! = z1 goto label2", "$ z3 = 1", "goto label3", "label r4 = org apache common lang builder equal builder r0", "r4 be equal = $ z3", "r5 = org apache common lang builder equal builder r0", "return r5", "label if z0 ! = z1 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r2 = org apache common lang builder equal builder r0", "$ z2 = r2 be equal", "if $ z2 ! = 0 goto label1", "r3 = org apache common lang builder equal builder r0", "return r3", "if $ z2 ! = 0 goto label1", "label if z0 ! = z1 goto label2", "$ z3 = 1", "goto label3", "label r4 = org apache common lang builder equal builder r0", "r4 be equal = $ z3", "r5 = org apache common lang builder equal builder r0", "return r5", "label if z0 ! = z1 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang builder equal builder r0", "r1 be equal = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache common lang builder hash code builder r0", "$ i1 = r2 i total", "r3 = org apache common lang builder hash code builder r0", "$ i0 = r3 i constant", "$ i2 = $ i1 * $ i0", "if z0 == 0 goto label1", "$ b4 = 0", "goto label2", "label $ i3 = $ i2 + $ b4", "r4 = org apache common lang builder hash code builder r0", "r4 i total = $ i3", "r5 = org apache common lang builder hash code builder r0", "return r5", "if z0 == 0 goto label1", "label $ b4 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang builder hash code builder r0", "$ i0 = r1 to hash code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = newarray java lang string [ 1 ]", "$ r2 [ 0 ] = r1", "$ r3 = org apache common lang builder reflection to string builder to string exclude r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = newarray java lang string [ 1 ]", "$ r2 [ 0 ] = r1", "$ r3 = org apache common lang builder reflection to string builder to string exclude r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = org apache common lang builder reflection to string builder r0", "r4 exclude field names = null", "goto label2", "label r7 = org apache common lang builder reflection to string builder r0", "return r7", "if r1 ! = null goto label1", "label $ r2 = org apache common lang builder reflection to string builder to no null string array r1", "r5 = org apache common lang builder reflection to string builder r0", "r5 exclude field names = $ r2", "r6 = org apache common lang builder reflection to string builder r0", "$ r3 = r6 exclude field name", "java util array sort $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "$ z0 = specialinvoke r0 be use identity hash code", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get array start", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set array separator r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set field separator r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get size end text", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang builder to string builder r0", "$ r2 = r3 style", "r4 = org apache common lang builder to string builder r0", "$ r1 = r4 buffer", "$ r2 append $ r1 null z0", "r5 = org apache common lang builder to string builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang builder to string builder r0", "$ r2 = r3 style", "r4 = org apache common lang builder to string builder r0", "$ r1 = r4 buffer", "$ r2 append $ r1 null z0", "r5 = org apache common lang builder to string builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang builder to string builder r0", "$ r2 = r3 style", "r4 = org apache common lang builder to string builder r0", "$ r1 = r4 buffer", "$ r2 append $ r1 null z0", "r5 = org apache common lang builder to string builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang builder to string builder r0", "$ r2 = r3 style", "r4 = org apache common lang builder to string builder r0", "$ r1 = r4 buffer", "$ r2 append $ r1 null z0", "r5 = org apache common lang builder to string builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r4 = org apache common lang builder to string builder r0", "$ r3 = r4 style", "r5 = org apache common lang builder to string builder r0", "$ r2 = r5 buffer", "$ r3 append $ r2 r1 z0", "r6 = org apache common lang builder to string builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "org apache common lang object utils identity to string r1 r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r1 append z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ i0 = lengthof r3", "r4 = org apache common lang builder to string style r0", "r4 append summary size r1 r2 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ i0 = lengthof r3", "r4 = org apache common lang builder to string style r0", "r4 append summary size r1 r2 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ i0 = lengthof r3", "r4 = org apache common lang builder to string style r0", "r4 append summary size r1 r2 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang char range r0", "$ c0 = r1 end", "return $ c0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org apache common lang char set common", "r1 = $ r2 get r0", "if r1 == null goto label1", "$ r4 = org apache common lang char set r1", "return $ r4", "if r1 == null goto label1", "label $ r3 = new org apache common lang char set", "specialinvoke $ r3 < init > r0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof org apache common lang char set", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = org apache common lang char set r1", "r5 = org apache common lang char set r0", "$ r4 = r5 set", "$ r3 = r2 set", "$ z1 = $ r4 equal $ r3", "return $ z1"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common lang char set r0", "$ r1 = r3 set", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "if r0 ! = null goto label1", "return c0", "if r0 ! = null goto label1", "label $ c1 = r0 char value", "return $ c1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "if r0 ! = null goto label1", "return c0", "if r0 ! = null goto label1", "label $ c1 = r0 char value", "return $ c1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["c0 = @ parameter0", "if c0 > = 16 goto label1", "$ r15 = new java lang string buffer", "specialinvoke $ r15 < init >", "$ r16 = $ r15 append \\ `` \\\\u000\\ ``", "$ r17 = java lang integer to hex string c0", "$ r18 = $ r16 append $ r17", "$ r19 = $ r18 to string", "return $ r19", "if c0 > = 16 goto label1", "label if c0 > = 256 goto label2", "$ r10 = new java lang string buffer", "specialinvoke $ r10 < init >", "$ r11 = $ r10 append \\ `` \\\\u00\\ ``", "$ r12 = java lang integer to hex string c0", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 to string", "return $ r14", "label if c0 > = 256 goto label2", "label if c0 > = 4096 goto label3", "$ r5 = new java lang string buffer", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` \\\\u0\\ ``", "$ r7 = java lang integer to hex string c0", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "return $ r9", "label if c0 > = 4096 goto label3", "label $ r0 = new java lang string buffer", "specialinvoke $ r0 < init >", "$ r1 = $ r0 append \\ `` \\\\u\\ ``", "$ r2 = java lang integer to hex string c0", "$ r3 = $ r1 append $ r2", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = new java util array list", "specialinvoke $ r2 < init >", "org apache common lang class utils get all interface r0 $ r2", "return $ r2"], "adj": [[1], [2], [], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r5 = new java util array list", "$ i0 = r0 size", "specialinvoke $ r5 < init > $ i0", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label7", "$ r6 = r2 next", "r3 = java lang string $ r6", "label $ r7 = java lang class for name r3", "$ r5 add $ r7", "label goto label6", "label goto label2", "if $ z0 == 0 goto label7", "label return $ r5"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang class utils get class r0 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r5 = org apache common lang array utils empty_class_array", "return $ r5", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "r1 = newarray java lang class [ $ i1 ]", "i4 = 0", "label $ i2 = lengthof r0", "if i4 > = $ i2 goto label6", "$ i3 = i4", "$ r2 = r0 [ i4 ]", "if $ r2 ! = null goto label4", "$ r6 = null", "goto label5", "label r1 [ $ i3 ] = $ r6", "i4 = i4 + 1", "goto label3", "if $ r2 ! = null goto label4", "label $ r3 = r0 [ i4 ]", "$ r6 = $ r3 get class", "if i4 > = $ i2 goto label6", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return r1", "if r0 ! = null goto label1", "label $ r2 = r0 get class", "$ r3 = $ r2 get name", "$ r4 = org apache common lang class utils get package canonical name $ r3", "return $ r4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache common lang enum enum get entry r0", "if r1 ! = null goto label1", "$ r3 = org apache common lang enum enum empty_map", "return $ r3", "if r1 ! = null goto label1", "label $ r2 = r1 unmodifiable map", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache common lang enum enum get entry r0", "if r1 ! = null goto label1", "$ r3 = java util collection empty_list", "return $ r3", "if r1 ! = null goto label1", "label $ r2 = r1 unmodifiable list", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang enum enum r0", "$ i0 = r1 i hash code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache common lang exception exception utils get throwable list r0", "$ i0 = r1 size", "$ r2 = newarray java lang throwable [ $ i0 ]", "$ r3 = r1 to array $ r2", "$ r4 = java lang throwable [ ] $ r3", "$ r5 = java lang throwable [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r20 = org apache common lang array utils empty_string_array", "return $ r20", "if r0 ! = null goto label1", "label r1 = org apache common lang exception exception utils get throwables r0", "i0 = lengthof r1", "$ r4 = new java util array list", "specialinvoke $ r4 < init >", "$ i1 = i0 - 1", "$ r5 = r1 [ $ i1 ]", "r21 = org apache common lang exception exception utils get stack frame list $ r5", "i4 = i0", "label i4 = i4 + -1", "if i4 < 0 goto label8", "r3 = r21", "if i4 == 0 goto label3", "$ i3 = i4 - 1", "$ r19 = r1 [ $ i3 ]", "r21 = org apache common lang exception exception utils get stack frame list $ r19", "org apache common lang exception exception utils remove common frame r3 r21", "label $ i2 = i0 - 1", "if i4 ! = $ i2 goto label4", "$ r17 = r1 [ i4 ]", "$ r18 = $ r17 to string", "$ r4 add $ r18", "goto label5", "label i5 = 0", "label $ i6 = r3 size", "if i5 > = $ i6 goto label7", "$ r16 = r3 get i5", "$ r4 add $ r16", "i5 = i5 + 1", "goto label6", "if i5 > = $ i6 goto label7", "label goto label2", "if i4 ! = $ i2 goto label4", "label $ r10 = new java lang string buffer", "specialinvoke $ r10 < init >", "$ r11 = $ r10 append \\ `` [ wrap ] \\ ``", "$ r12 = r1 [ i4 ]", "$ r13 = $ r12 to string", "$ r14 = $ r11 append $ r13", "$ r15 = $ r14 to string", "$ r4 add $ r15", "if i4 < 0 goto label8", "label $ r6 = newarray java lang string [ 0 ]", "$ r7 = $ r4 to array $ r6", "$ r8 = java lang string [ ] $ r7", "$ r9 = java lang string [ ] $ r8", "return $ r9"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache common lang int hash map r0", "r1 = r3 table", "$ i4 = i0 & 2147483647", "$ i3 = lengthof r1", "i2 = $ i4 % $ i3", "r2 = r1 [ i2 ]", "label if r2 == null goto label3", "$ i5 = r2 hash", "if $ i5 ! = i0 goto label2", "return 1", "if $ i5 ! = i0 goto label2", "label r2 = r2 next", "goto label1", "label if r2 == null goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common lang math double range r0", "$ r1 = r5 max object", "if $ r1 ! = null goto label1", "r4 = new java lang double", "r6 = org apache common lang math double range r0", "$ d0 = r6 max", "specialinvoke r4 < init > $ d0", "r7 = org apache common lang math double range r0", "r7 max object = r4", "label r8 = org apache common lang math double range r0", "$ r2 = r8 max object", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang math double range r0", "$ d0 = r1 max", "$ i0 = int $ d0", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang math fraction r0", "$ i0 = r1 numerator", "$ l3 = long $ i0", "r2 = org apache common lang math fraction r0", "$ i1 = r2 denominator", "$ l2 = long $ i1", "$ l4 = $ l3 $ l2", "return $ l4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang math fraction r0", "$ i0 = r1 numerator", "$ f1 = float $ i0", "r2 = org apache common lang math fraction r0", "$ i1 = r2 denominator", "$ f0 = float $ i1", "$ f2 = $ f1 $ f0", "return $ f2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` the fraction must not be null\\ ``", "throw r6", "if r1 ! = null goto label1", "label $ i0 = r1 numerator", "if $ i0 ! = 0 goto label2", "r7 = new java lang arithmetic exception", "specialinvoke r7 < init > \\ `` the fraction to divide by must not be zero\\ ``", "throw r7", "if $ i0 ! = 0 goto label2", "label $ r2 = r1 invert", "r8 = org apache common lang math fraction r0", "$ r3 = r8 multiply by $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ i0 = r1 get minimum integer", "r2 = org apache common lang math int range r0", "$ z0 = r2 contain integer $ i0", "if $ z0 == 0 goto label2", "$ i1 = r1 get maximum integer", "r3 = org apache common lang math int range r0", "$ z1 = r3 contain integer $ i1", "if $ z1 == 0 goto label2", "$ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common lang mutable mutable boolean r1", "z0 = r2 value", "r3 = org apache common lang mutable mutable boolean r0", "$ z1 = r3 value", "if $ z1 ! = z0 goto label1", "$ b0 = 0", "goto label3", "label return $ b0", "if $ z1 ! = z0 goto label1", "label r4 = org apache common lang mutable mutable boolean r0", "$ z2 = r4 value", "if $ z2 == 0 goto label2", "$ b0 = 1", "if $ z2 == 0 goto label2", "label $ b0 = -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = new java lang byte", "r3 = org apache common lang mutable mutable byte r0", "$ b0 = r3 byte value", "specialinvoke r2 < init > $ b0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache common lang mutable mutable double", "if $ z0 == 0 goto label1", "$ r2 = org apache common lang mutable mutable double r1", "$ d0 = $ r2 value", "$ l0 = java lang double double to long bit $ d0", "r3 = org apache common lang mutable mutable double r0", "$ d1 = r3 value", "$ l1 = java lang double double to long bit $ d1", "$ b2 = $ l0 cmp $ l1", "if $ b2 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ b2 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable int r0", "$ i0 = r1 value", "$ d0 = double $ i0", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable short r0", "$ s0 = r1 value", "$ d0 = double $ s0", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 print stack trace r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "org apache common lang object utils identity to string $ r2 r0", "$ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache common lang reflect field utils get field r0 r1 0", "org apache common lang reflect member utils set accessible workaround r2", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common lang reflect field utils read declare static field r0 r1 0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "org apache common lang reflect field utils write declare static field r0 r1 r2 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = newarray java lang class [ 1 ]", "$ r3 [ 0 ] = r2", "$ r4 = org apache common lang reflect method utils get accessible method r0 r1 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new java io file", "$ r1 = java lang system get property \\ `` java io tmpdir\\ ``", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang text str builder r0", "$ i0 = r1 size", "if $ i0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r12 = org apache common lang text str builder r0", "$ i12 = r12 size", "$ i13 = $ i12 + 4", "r13 = org apache common lang text str builder r0", "r13 ensure capacity $ i13", "r14 = org apache common lang text str builder r0", "$ r8 = r14 buffer", "r15 = org apache common lang text str builder r0", "$ i14 = r15 size", "$ i15 = $ i14 + 1", "r16 = org apache common lang text str builder r0", "r16 size = $ i15", "$ r8 [ $ i14 ] = 116", "r17 = org apache common lang text str builder r0", "$ r9 = r17 buffer", "r18 = org apache common lang text str builder r0", "$ i16 = r18 size", "$ i17 = $ i16 + 1", "r19 = org apache common lang text str builder r0", "r19 size = $ i17", "$ r9 [ $ i16 ] = 114", "r20 = org apache common lang text str builder r0", "$ r10 = r20 buffer", "r21 = org apache common lang text str builder r0", "$ i18 = r21 size", "$ i19 = $ i18 + 1", "r22 = org apache common lang text str builder r0", "r22 size = $ i19", "$ r10 [ $ i18 ] = 117", "r23 = org apache common lang text str builder r0", "$ r11 = r23 buffer", "r24 = org apache common lang text str builder r0", "$ i20 = r24 size", "$ i21 = $ i20 + 1", "r25 = org apache common lang text str builder r0", "r25 size = $ i21", "$ r11 [ $ i20 ] = 101", "goto label2", "label r43 = org apache common lang text str builder r0", "return r43", "if z0 == 0 goto label1", "label r26 = org apache common lang text str builder r0", "$ i0 = r26 size", "$ i1 = $ i0 + 5", "r27 = org apache common lang text str builder r0", "r27 ensure capacity $ i1", "r28 = org apache common lang text str builder r0", "$ r2 = r28 buffer", "r29 = org apache common lang text str builder r0", "$ i2 = r29 size", "$ i3 = $ i2 + 1", "r30 = org apache common lang text str builder r0", "r30 size = $ i3", "$ r2 [ $ i2 ] = 102", "r31 = org apache common lang text str builder r0", "$ r3 = r31 buffer", "r32 = org apache common lang text str builder r0", "$ i4 = r32 size", "$ i5 = $ i4 + 1", "r33 = org apache common lang text str builder r0", "r33 size = $ i5", "$ r3 [ $ i4 ] = 97", "r34 = org apache common lang text str builder r0", "$ r4 = r34 buffer", "r35 = org apache common lang text str builder r0", "$ i6 = r35 size", "$ i7 = $ i6 + 1", "r36 = org apache common lang text str builder r0", "r36 size = $ i7", "$ r4 [ $ i6 ] = 108", "r37 = org apache common lang text str builder r0", "$ r5 = r37 buffer", "r38 = org apache common lang text str builder r0", "$ i8 = r38 size", "$ i9 = $ i8 + 1", "r39 = org apache common lang text str builder r0", "r39 size = $ i9", "$ r5 [ $ i8 ] = 115", "r40 = org apache common lang text str builder r0", "$ r6 = r40 buffer", "r41 = org apache common lang text str builder r0", "$ i10 = r41 size", "$ i11 = $ i10 + 1", "r42 = org apache common lang text str builder r0", "r42 size = $ i11", "$ r6 [ $ i10 ] = 101"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common lang text str builder r0", "$ r1 = r3 append z0", "$ r2 = $ r1 append new line", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "r22 = org apache common lang text str builder r0", "r22 validate index i0", "if r1 ! = null goto label1", "r23 = org apache common lang text str builder r0", "$ r16 = r23 null text", "r24 = org apache common lang text str builder r0", "$ r17 = r24 insert i0 $ r16", "return $ r17", "if r1 ! = null goto label1", "label if i1 < 0 goto label2", "$ i3 = lengthof r1", "if i1 < = $ i3 goto label3", "label r19 = new java lang string index out of bound exception", "r18 = new java lang string buffer", "specialinvoke r18 < init >", "$ r4 = r18 append \\ `` invalid offset \\ ``", "$ r5 = $ r4 append i1", "$ r6 = $ r5 to string", "specialinvoke r19 < init > $ r6", "throw r19", "if i1 < = $ i3 goto label3", "label if i2 < 0 goto label4", "$ i5 = i1 + i2", "$ i4 = lengthof r1", "if $ i5 < = $ i4 goto label5", "label r21 = new java lang string index out of bound exception", "r20 = new java lang string buffer", "specialinvoke r20 < init >", "$ r9 = r20 append \\ `` invalid length \\ ``", "$ r10 = $ r9 append i2", "$ r11 = $ r10 to string", "specialinvoke r21 < init > $ r11", "throw r21", "if $ i5 < = $ i4 goto label5", "label if i2 < = 0 goto label6", "r25 = org apache common lang text str builder r0", "$ i6 = r25 size", "$ i7 = $ i6 + i2", "r26 = org apache common lang text str builder r0", "r26 ensure capacity $ i7", "r27 = org apache common lang text str builder r0", "$ r14 = r27 buffer", "r28 = org apache common lang text str builder r0", "$ r13 = r28 buffer", "$ i10 = i0 + i2", "r29 = org apache common lang text str builder r0", "$ i8 = r29 size", "$ i9 = $ i8 - i0", "java lang system arraycopy $ r14 i0 $ r13 $ i10 $ i9", "r30 = org apache common lang text str builder r0", "$ r15 = r30 buffer", "java lang system arraycopy r1 i1 $ r15 i0 i2", "r31 = org apache common lang text str builder r0", "$ i11 = r31 size", "$ i12 = $ i11 + i2", "r32 = org apache common lang text str builder r0", "r32 size = $ i12", "label r33 = org apache common lang text str builder r0", "return r33"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "c1 = @ parameter1", "if c0 == c1 goto label3", "i4 = 0", "label r3 = org apache common lang text str builder r0", "$ i2 = r3 size", "if i4 > = $ i2 goto label3", "r4 = org apache common lang text str builder r0", "$ r1 = r4 buffer", "$ c3 = $ r1 [ i4 ]", "if $ c3 ! = c0 goto label2", "r5 = org apache common lang text str builder r0", "$ r2 = r5 buffer", "$ r2 [ i4 ] = c1", "goto label3", "label r6 = org apache common lang text str builder r0", "return r6", "if $ c3 ! = c0 goto label2", "label i4 = i4 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "c1 = @ parameter1", "if c0 == c1 goto label3", "i4 = 0", "label r3 = org apache common lang text str builder r0", "$ i2 = r3 size", "if i4 > = $ i2 goto label3", "r4 = org apache common lang text str builder r0", "$ r1 = r4 buffer", "$ c3 = $ r1 [ i4 ]", "if $ c3 ! = c0 goto label2", "r5 = org apache common lang text str builder r0", "$ r2 = r5 buffer", "$ r2 [ i4 ] = c1", "label i4 = i4 + 1", "goto label1", "if i4 > = $ i2 goto label3", "label r6 = org apache common lang text str builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common lang text str builder r0", "$ i0 = r4 size", "if $ i0 ! = 0 goto label1", "r5 = org apache common lang text str builder r0", "return r5", "if $ i0 ! = 0 goto label1", "label r6 = org apache common lang text str builder r0", "i6 = r6 size", "r7 = org apache common lang text str builder r0", "r1 = r7 buffer", "i7 = 0", "label if i7 > = i6 goto label3", "$ c5 = r1 [ i7 ]", "if $ c5 > 32 goto label3", "i7 = i7 + 1", "goto label2", "if $ c5 > 32 goto label3", "label if i7 > = i6 goto label4", "$ i3 = i6 - 1", "$ c4 = r1 [ $ i3 ]", "if $ c4 > 32 goto label4", "i6 = i6 + -1", "goto label3", "if $ c4 > 32 goto label4", "label r8 = org apache common lang text str builder r0", "$ i1 = r8 size", "if i6 > = $ i1 goto label5", "r9 = org apache common lang text str builder r0", "$ i2 = r9 size", "r10 = org apache common lang text str builder r0", "r10 delete i6 $ i2", "label if i7 < = 0 goto label6", "r11 = org apache common lang text str builder r0", "r11 delete 0 i7", "label r12 = org apache common lang text str builder r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 0 goto label1", "return \\ `` \\ ``", "if i0 > 0 goto label1", "label r7 = org apache common lang text str builder r0", "$ i1 = r7 size", "if i0 < $ i1 goto label2", "r5 = new java lang string", "r8 = org apache common lang text str builder r0", "$ r4 = r8 buffer", "r9 = org apache common lang text str builder r0", "$ i4 = r9 size", "specialinvoke r5 < init > $ r4 0 $ i4", "return r5", "if i0 < $ i1 goto label2", "label r6 = new java lang string", "r10 = org apache common lang text str builder r0", "$ r2 = r10 buffer", "r11 = org apache common lang text str builder r0", "$ i2 = r11 size", "$ i3 = $ i2 - i0", "specialinvoke r6 < init > $ r2 $ i3 i0", "return r6"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r2 = org apache common lang text str builder r0", "r1 = r2 buffer", "i3 = 0", "label r3 = org apache common lang text str builder r0", "$ i1 = r3 size", "if i3 > = $ i1 goto label3", "$ c2 = r1 [ i3 ]", "if $ c2 ! = c0 goto label2", "return 1", "if $ c2 ! = c0 goto label2", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i1 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "i4 = @ parameter1", "if i4 > = 0 goto label1", "$ i5 = 0", "goto label2", "label r2 = org apache common lang text str builder r0", "$ i1 = r2 size", "if $ i5 < $ i1 goto label3", "return -1", "if $ i5 < $ i1 goto label3", "label r3 = org apache common lang text str builder r0", "r1 = r3 buffer", "i7 = $ i5", "label r4 = org apache common lang text str builder r0", "$ i2 = r4 size", "if i7 > = $ i2 goto label6", "$ c3 = r1 [ i7 ]", "if $ c3 ! = c0 goto label5", "return i7", "if $ c3 ! = c0 goto label5", "label i7 = i7 + 1", "goto label4", "if i7 > = $ i2 goto label6", "label return -1", "if i4 > = 0 goto label1", "label $ i5 = i4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common lang text str builder $ str builder reader", "r3 = org apache common lang text str builder r0", "specialinvoke r2 < init > r3", "r4 = java io reader r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org apache common lang text str matcher split_matcher", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "$ r1 = org apache common lang text str matcher char matcher c0", "r3 = org apache common lang text str substitutor r0", "$ r2 = r3 set variable suffix matcher $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang text str tokenizer r0", "specialinvoke r2 check tokenized", "r3 = org apache common lang text str tokenizer r0", "$ r1 = r3 token", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r2 = org apache common lang text str tokenizer r0", "r2 ignore matcher = r1", "label r3 = org apache common lang text str tokenizer r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common lang time date format utils format r0 r1 null null", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache common lang validate not null r0", "i1 = 0", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label3", "$ r2 = r0 [ i1 ]", "if $ r2 ! = null goto label2", "$ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init > r1", "throw $ r3", "if $ r2 ! = null goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "org apache common lang validate not null r0", "i1 = 0", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label3", "$ r1 = r0 [ i1 ]", "if $ r1 ! = null goto label2", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string buffer", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` the validated array contain null element at index \\ ``", "$ r5 = $ r4 append i1", "$ r6 = $ r5 to string", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "if $ r1 ! = null goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "org apache common lang validate not null r0", "i1 = 0", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label3", "$ r1 = r0 [ i1 ]", "if $ r1 ! = null goto label2", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string buffer", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` the validated array contain null element at index \\ ``", "$ r5 = $ r4 append i1", "$ r6 = $ r5 to string", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "if $ r1 ! = null goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ i5 = -1", "goto label2", "label if r0 == null goto label3", "$ i3 = r0 length", "if $ i3 == 0 goto label3", "if $ i5 ! = 0 goto label4", "label return r0", "if $ i5 ! = 0 goto label4", "label i1 = r0 length", "$ r3 = new java lang string buffer", "specialinvoke $ r3 < init > i1", "z1 = 1", "i6 = 0", "label if i6 > = i1 goto label9", "c2 = r0 char at i6", "$ z0 = org apache common lang word utils be delimiter c2 r1", "if $ z0 == 0 goto label6", "$ r3 append c2", "if $ z0 == 0 goto label6", "label if z1 == 0 goto label7", "$ c4 = java lang character to title case c2", "$ r3 append $ c4", "z1 = 0", "goto label8", "label i6 = i6 + 1", "goto label5", "label if z1 == 0 goto label7", "label $ r3 append c2", "label if i6 > = i1 goto label9", "label $ r4 = $ r3 to string", "return $ r4", "if r1 ! = null goto label1", "label $ i5 = lengthof r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [], [30], [31], [32], [33], [], [35], []]}
{"nodes": ["$ r0 = new java io file", "$ r1 = java lang system get property \\ `` java io tmpdir\\ ``", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang text str substitutor r0", "$ z0 = r1 enable substitution in variable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 concurrent basic thread factory r0", "$ r1 = r2 priority", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 concurrent basic thread factory r0", "$ r1 = r2 thread counter", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common lang3 concurrent callable background initializer r0", "$ r1 = r3 callable", "$ r2 = $ r1 call", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 concurrent constant initializer r0", "$ r1 = r2 object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 concurrent time semaphore r0", "$ r1 = r2 executor service", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common lang3 event event listener support r0", "$ r2 = r4 listener", "r5 = org apache common lang3 event event listener support r0", "$ r1 = r5 prototype array", "$ r3 = $ r2 to array $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 java version r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label if r0 ! = r1 goto label2", "return 1", "label if r0 ! = r1 goto label2", "label $ r3 = r0 get class", "$ r4 = r1 get class", "if $ r3 ! = $ r4 goto label3", "r2 = org apache common lang3 mutable mutable object r1", "r7 = org apache common lang3 mutable mutable object r0", "$ r6 = r7 value", "$ r5 = r2 value", "$ z0 = $ r6 equal $ r5", "return $ z0", "if $ r3 ! = $ r4 goto label3", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 range r0", "$ r1 = r2 maximum", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common lang3 reflect field utils read static field r0 r1 0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label04", "if r1 == null goto label01", "$ z12 = r1 be primitive", "if $ z12 ! = 0 goto label02", "label $ z13 = 1", "goto label03", "label return $ z13", "if $ z12 ! = 0 goto label02", "label $ z13 = 0", "if r0 ! = null goto label04", "label if r1 ! = null goto label05", "return 0", "label if r1 ! = null goto label05", "label $ z0 = r1 equal r0", "if $ z0 == 0 goto label06", "return 1", "if $ z0 == 0 goto label06", "label $ z1 = r0 instanceof java lang class", "if $ z1 == 0 goto label07", "$ r15 = java lang class r0", "$ z11 = org apache common lang3 class utils be assignable $ r15 r1", "return $ z11", "if $ z1 == 0 goto label07", "label $ z2 = r0 instanceof java lang reflect parameterized type", "if $ z2 == 0 goto label08", "$ r13 = java lang reflect parameterized type r0", "$ r14 = org apache common lang3 reflect type utils get raw type $ r13", "$ z10 = org apache common lang3 reflect type utils be assignable $ r14 r1", "return $ z10", "if $ z2 == 0 goto label08", "label $ z3 = r0 instanceof java lang reflect type variable", "if $ z3 == 0 goto label12", "$ r12 = java lang reflect type variable r0", "r2 = $ r12 get bound", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label11", "r3 = r2 [ i1 ]", "$ z9 = org apache common lang3 reflect type utils be assignable r3 r1", "if $ z9 == 0 goto label10", "label i1 = i1 + 1", "goto label09", "label if i1 > = i0 goto label11", "label return 0", "if $ z3 == 0 goto label12", "label $ z4 = r0 instanceof java lang reflect generic array type", "if $ z4 == 0 goto label16", "$ z6 = r1 equal class \\ `` ljava lang object \\ ``", "if $ z6 ! = 0 goto label13", "$ z7 = r1 be array", "if $ z7 == 0 goto label14", "$ r9 = java lang reflect generic array type r0", "$ r10 = $ r9 get generic component type", "$ r11 = r1 get component type", "$ z8 = org apache common lang3 reflect type utils be assignable $ r10 $ r11", "if $ z8 == 0 goto label14", "label $ z14 = 1", "goto label15", "label return $ z14", "if $ z8 == 0 goto label14", "label $ z14 = 0", "if $ z4 == 0 goto label16", "label $ z5 = r0 instanceof java lang reflect wildcard type", "if $ z5 == 0 goto label17", "label $ r4 = new java lang illegal state exception", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` find an unhandled type \\ ``", "$ r7 = $ r6 append r0", "$ r8 = $ r7 to string", "specialinvoke $ r4 < init > $ r8", "throw $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang3 string escape utils unescape_html3", "$ r2 = $ r1 translate r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang3 string escape utils unescape_xml", "$ r2 = $ r1 translate r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r2 = org apache common lang3 text str builder r0", "$ r1 = r2 append c0", "r3 = java lang appendable $ r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = newarray java lang object [ 1 ]", "$ r2 = java lang integer value of i0", "$ r1 [ 0 ] = $ r2", "$ r3 = org apache common lang3 validate valid index r0 i0 \\ `` the validated character sequence index be invalid % d\\", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "org apache common lang3 validate not null r0", "if i0 < 0 goto label1", "$ i1 = r0 length", "if i0 < $ i1 goto label2", "label $ r4 = new java lang index out of bound exception", "$ r5 = java lang string format r1 r2", "specialinvoke $ r4 < init > $ r5", "throw $ r4", "if i0 < $ i1 goto label2", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ i0 = r2 compare to r0", "if $ i0 < 0 goto label1", "$ i1 = r2 compare to r1", "if $ i1 < = 0 goto label2", "label $ r3 = new java lang illegal argument exception", "$ r4 = newarray java lang object [ 3 ]", "$ r4 [ 0 ] = r2", "$ r4 [ 1 ] = r0", "$ r4 [ 2 ] = r1", "$ r5 = java lang string format \\ `` the value % s be not in the specified inclusive range of % s to % s\\", "specialinvoke $ r3 < init > $ r5", "throw $ r3", "if $ i1 < = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ i0 = r2 compare to r0", "if $ i0 < 0 goto label1", "$ i1 = r2 compare to r1", "if $ i1 < = 0 goto label2", "label $ r5 = new java lang illegal argument exception", "$ r6 = java lang string format r3 r4", "specialinvoke $ r5 < init > $ r6", "throw $ r5", "if $ i1 < = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ z0 = r0 be assignable from r1", "if $ z0 ! = 0 goto label1", "$ r4 = new java lang illegal argument exception", "$ r5 = java lang string format r2 r3", "specialinvoke $ r4 < init > $ r5", "throw $ r4", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if r0 ! = null goto label1", "$ r2 = org apache common lang3 array utils add r0 z0", "goto label2", "label return $ r2", "if r0 ! = null goto label1", "label $ r1 = newarray boolean [ 1 ]", "$ r1 [ 0 ] = z0", "$ r2 = org apache common lang3 array utils insert 0 r0 $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = org apache common lang3 array utils get length r0", "if $ i1 == 0 goto label1", "$ i2 = lengthof r0", "if $ i2 > i0 goto label2", "label return 0", "if $ i2 > i0 goto label2", "label if i0 < 0 goto label3", "$ z0 = 1", "goto label4", "label return $ z0", "label if i0 < 0 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if r0 ! = null goto label1", "return", "if r0 ! = null goto label1", "label $ i1 = lengthof r0", "org apache common lang3 array utils shift r0 0 $ i1 i0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ z0 = org apache common lang3 array utils be empty r0", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label org apache common lang3 array utils swap r0 i0 i1 1"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "i7 = @ parameter1", "i8 = @ parameter2", "i9 = @ parameter3", "$ z1 = org apache common lang3 array utils be empty r0", "if $ z1 ! = 0 goto label1", "$ i0 = lengthof r0", "if i7 > = $ i0 goto label1", "$ i1 = lengthof r0", "if i8 < $ i1 goto label2", "label return", "if i8 < $ i1 goto label2", "label if i7 > = 0 goto label3", "i7 = 0", "label if i8 > = 0 goto label4", "i8 = 0", "label $ i2 = lengthof r0", "$ i3 = $ i2 - i7", "$ i4 = java lang math min i9 $ i3", "$ i5 = lengthof r0", "$ i6 = $ i5 - i8", "i10 = java lang math min $ i4 $ i6", "i11 = 0", "label if i11 > = i10 goto label6", "z0 = r0 [ i7 ]", "$ z2 = r0 [ i8 ]", "r0 [ i7 ] = $ z2", "r0 [ i8 ] = z0", "i11 = i11 + 1", "i7 = i7 + 1", "i8 = i8 + 1", "goto label5", "label if i11 > = i10 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 builder diff r0", "$ r1 = r2 field name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang3 concurrent event count circuit breaker r0", "$ l0 = r1 open interval", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang3 concurrent event count circuit breaker r0", "$ i0 = r1 closing threshold", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang3 concurrent time semaphore r0", "specialinvoke r1 prepare acquire", "label r2 = org apache common lang3 concurrent time semaphore r0", "z0 = specialinvoke r2 acquire permit", "if z0 ! = 0 goto label2", "r0 wait", "label if z0 == 0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common lang3 event event listener support r0", "$ r2 = r4 listener", "r5 = org apache common lang3 event event listener support r0", "$ r1 = r5 prototype array", "$ r3 = $ r2 to array $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang3 mutable mutable boolean r0", "r1 value = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang3 mutable mutable byte r0", "$ b0 = r1 value", "$ i1 = $ b0 + 1", "$ b2 = byte $ i1", "r2 = org apache common lang3 mutable mutable byte r0", "r2 value = $ b2", "r3 = org apache common lang3 mutable mutable byte r0", "$ b3 = r3 value", "return $ b3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["$ f0 = org apache common lang3 random utils next float 0 0f 3 4028235e38f", "return $ f0"], "adj": [[1], []]}
{"nodes": ["$ r0 = java lang system get property \\ `` user name\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org apache common lang3 text translate entity array java_ctrl_chars_escape", "$ r1 = $ r0 clone", "$ r2 = java lang string [ ] [ ] $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org apache common lang3 thread utils $ name predicate", "specialinvoke r3 < init > r0", "r4 = org apache common lang3 thread utils $ thread group predicate r3", "$ r2 = org apache common lang3 thread utils find thread group r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common lang3 time calendar utils r0", "$ r1 = r2 calendar", "$ i0 = $ r1 get 5", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org apache common lang3 time fast date parser r0", "$ r6 = r9 pattern", "r4 = $ r6 list iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label3", "$ r7 = r4 next", "r5 = org apache common lang3 time fast date parser $ strategy and width $ r7", "i0 = r5 get max width r4", "$ r8 = r5 strategy", "r10 = org apache common lang3 time fast date parser r0", "$ z1 = $ r8 parse r10 r3 r1 r2 i0", "if $ z1 ! = 0 goto label2", "return 0", "if $ z1 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["$ r0 = new org apache common lang3 time stop watch", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof org apache common lang3 tuple triple", "if $ z0 == 0 goto label4", "r2 = org apache common lang3 tuple triple r1", "r9 = org apache common lang3 tuple triple r0", "$ r3 = r9 get leave", "$ r4 = r2 get leave", "$ z1 = java util object equal $ r3 $ r4", "if $ z1 == 0 goto label2", "r10 = org apache common lang3 tuple triple r0", "$ r5 = r10 get middle", "$ r6 = r2 get middle", "$ z2 = java util object equal $ r5 $ r6", "if $ z2 == 0 goto label2", "r11 = org apache common lang3 tuple triple r0", "$ r7 = r11 get right", "$ r8 = r2 get right", "$ z3 = java util object equal $ r7 $ r8", "if $ z3 == 0 goto label2", "$ z4 = 1", "goto label3", "label return $ z4", "if $ z3 == 0 goto label2", "label $ z4 = 0", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang3 text str builder r0", "$ i0 = r1 size", "if $ i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org apache common lang3 time fast date parser r0", "$ r6 = r9 pattern", "r4 = $ r6 list iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label3", "$ r7 = r4 next", "r5 = org apache common lang3 time fast date parser $ strategy and width $ r7", "i0 = r5 get max width r4", "$ r8 = r5 strategy", "r10 = org apache common lang3 time fast date parser r0", "$ z1 = $ r8 parse r10 r3 r1 r2 i0", "if $ z1 ! = 0 goto label2", "return 0", "if $ z1 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ r0 = new org apache common lang3 text translate java unicode escaper", "specialinvoke $ r0 < init > i0 i1 1", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang3 time stop watch r0", "$ l0 = r1 get nano time", "$ l1 = $ l0 1000000l", "return $ l1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang3 class utils get name r0 \\ `` \\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r2 = r1", "goto label2", "label return $ r2", "if r0 ! = null goto label1", "label $ r2 = r0 get name"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common log impl log kit logger r0", "$ r1 = r6 logger", "if $ r1 ! = null goto label1", "$ r3 = org apache log hierarchy get default hierarchy", "r7 = org apache common log impl log kit logger r0", "$ r4 = r7 name", "$ r5 = $ r3 get logger for $ r4", "r8 = org apache common log impl log kit logger r0", "r8 logger = $ r5", "label r9 = org apache common log impl log kit logger r0", "$ r2 = r9 logger", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common log impl log kit logger r0", "r2 debug r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get name", "$ r2 = org apache common log log source get instance $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 analysis differentiation derivative structure r0", "$ r1 = r2 compiler", "$ i0 = $ r1 get free parameter", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common math3 analysis differentiation d s compiler r0", "$ r1 = r3 size", "r4 = org apache common math3 analysis differentiation d s compiler r0", "$ i0 = r4 parameter", "$ r2 = $ r1 [ $ i0 ]", "r5 = org apache common math3 analysis differentiation d s compiler r0", "$ i1 = r5 order", "$ i2 = $ r2 [ $ i1 ]", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r2 = org apache common math3 analysis polynomial polynomial function r0", "$ r1 = r2 coefficient", "$ d1 = org apache common math3 analysis polynomial polynomial function evaluate $ r1 d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 analysis polynomial polynomial function r0", "$ r1 = r2 coefficient", "$ i0 = lengthof $ r1", "$ i1 = $ i0 - 1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 complex complex r0", "$ d0 = r1 imaginary", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 complex complex r0", "$ z0 = r1 be na n", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common math3 complex complex r0", "$ z0 = r3 be na n", "if $ z0 == 0 goto label1", "$ r2 = org apache common math3 complex complex na n", "return $ r2", "if $ z0 == 0 goto label1", "label r4 = org apache common math3 complex complex r0", "$ d0 = r4 real", "$ d1 = org apache common math3 util fast math sin $ d0", "r5 = org apache common math3 complex complex r0", "$ d2 = r5 imaginary", "$ d3 = org apache common math3 util fast math cosh $ d2", "$ d5 = $ d1 * $ d3", "r6 = org apache common math3 complex complex r0", "$ d4 = r6 real", "$ d6 = org apache common math3 util fast math cos $ d4", "r7 = org apache common math3 complex complex r0", "$ d7 = r7 imaginary", "$ d8 = org apache common math3 util fast math sinh $ d7", "$ d9 = $ d6 * $ d8", "r8 = org apache common math3 complex complex r0", "$ r1 = r8 create complex $ d5 $ d9", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common math3 complex complex r0", "$ z0 = r5 be na n", "if $ z0 ! = 0 goto label1", "r6 = org apache common math3 complex complex r0", "$ d3 = r6 imaginary", "$ z1 = java lang double be infinite $ d3", "if $ z1 == 0 goto label2", "label $ r1 = org apache common math3 complex complex na n", "return $ r1", "if $ z1 == 0 goto label2", "label r7 = org apache common math3 complex complex r0", "$ d4 = r7 real", "$ b0 = $ d4 cmpl 20 0", "if $ b0 < = 0 goto label3", "r8 = org apache common math3 complex complex r0", "$ r4 = r8 create complex 1 0 0 0", "return $ r4", "if $ b0 < = 0 goto label3", "label r9 = org apache common math3 complex complex r0", "$ d5 = r9 real", "$ b1 = $ d5 cmpg -20 0", "if $ b1 > = 0 goto label4", "r10 = org apache common math3 complex complex r0", "$ r3 = r10 create complex -1 0 0 0", "return $ r3", "if $ b1 > = 0 goto label4", "label r11 = org apache common math3 complex complex r0", "$ d6 = r11 real", "d0 = 2 0 * $ d6", "r12 = org apache common math3 complex complex r0", "$ d7 = r12 imaginary", "d1 = 2 0 * $ d7", "$ d8 = org apache common math3 util fast math cosh d0", "$ d9 = org apache common math3 util fast math co d1", "d2 = $ d8 + $ d9", "$ d10 = org apache common math3 util fast math sinh d0", "$ d11 = $ d10 d2", "$ d12 = org apache common math3 util fast math sin d1", "$ d13 = $ d12 d2", "r13 = org apache common math3 complex complex r0", "$ r2 = r13 create complex $ d11 $ d13", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 complex complex r0", "$ d0 = r1 get imaginary", "r2 = org apache common math3 complex complex r0", "$ d1 = r2 get real", "$ d2 = org apache common math3 util fast math atan2 $ d0 $ d1", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "$ r1 = new org apache common math3 complex complex", "specialinvoke $ r1 < init > d0 d1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r2 = org apache common math3 complex quaternion r0", "$ d1 = r2 q0", "$ d2 = r1 get q0", "$ z0 = org apache common math3 util precision equal $ d1 $ d2 d0", "if $ z0 == 0 goto label1", "r3 = org apache common math3 complex quaternion r0", "$ d3 = r3 q1", "$ d4 = r1 get q1", "$ z1 = org apache common math3 util precision equal $ d3 $ d4 d0", "if $ z1 == 0 goto label1", "r4 = org apache common math3 complex quaternion r0", "$ d5 = r4 q2", "$ d6 = r1 get q2", "$ z2 = org apache common math3 util precision equal $ d5 $ d6 d0", "if $ z2 == 0 goto label1", "r5 = org apache common math3 complex quaternion r0", "$ d7 = r5 q3", "$ d8 = r1 get q3", "$ z3 = org apache common math3 util precision equal $ d7 $ d8 d0", "if $ z3 == 0 goto label1", "$ z4 = 1", "goto label2", "label return $ z4", "if $ z3 == 0 goto label1", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 complex quaternion r0", "$ d0 = r1 q1", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 dfp dfp field r0", "$ r1 = r2 r mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common math3 dfp dfp field r0", "$ r1 = r4 pi split", "$ r2 = $ r1 clone", "$ r3 = org apache common math3 dfp dfp [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 [ 0 ]", "$ r3 = $ r2 divide 4", "$ r4 = r0 [ 1 ]", "$ r5 = $ r4 divide 4", "r19 = $ r3 add $ r5", "$ r6 = r0 [ 0 ]", "$ r7 = $ r6 new instance \\ `` -0 25\\ ``", "$ r8 = r19 add $ r7", "$ r9 = r0 [ 0 ]", "$ r10 = $ r9 new instance \\ `` 0 25\\ ``", "$ r11 = r19 add $ r10", "r1 = $ r8 divide $ r11", "$ r12 = new org apache common math3 dfp dfp", "specialinvoke $ r12 < init > r1", "r20 = $ r12", "$ r13 = new org apache common math3 dfp dfp", "specialinvoke $ r13 < init > r1", "r21 = $ r13", "$ r14 = new org apache common math3 dfp dfp", "specialinvoke $ r14 < init > $ r12", "r22 = $ r14", "i0 = 1", "i1 = 0", "label if i1 > = 10000 goto label3", "r23 = r21 multiply r1", "r21 = r23 multiply r1", "i0 = i0 + 2", "r24 = r21 divide i0", "r20 = r20 add r24", "$ z0 = r20 equal r22", "if $ z0 == 0 goto label2", "goto label3", "label $ r15 = r0 [ 0 ]", "$ r16 = $ r15 get two", "r25 = r20 multiply $ r16", "$ r17 = org apache common math3 dfp dfp math split r25", "return $ r17", "if $ z0 == 0 goto label2", "label $ r18 = new org apache common math3 dfp dfp", "specialinvoke $ r18 < init > r20", "r22 = $ r18", "i1 = i1 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 distribution levy distribution r0", "$ d0 = r1 mu", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "if r0 == null goto label6", "i0 = lengthof r0", "i2 = 0", "label if i2 > = i0 goto label6", "r3 = r0 [ i2 ]", "$ z0 = r3 instanceof java lang object [ ]", "if $ z0 == 0 goto label4", "$ r8 = java lang object [ ] r3", "$ r9 = java lang object [ ] $ r8", "r4 = org apache common math3 exception util arg utils flatten $ r9", "i1 = lengthof r4", "i3 = 0", "label if i3 > = i1 goto label3", "r5 = r4 [ i3 ]", "$ r6 add r5", "i3 = i3 + 1", "goto label2", "label if i3 > = i1 goto label3", "label goto label5", "label i2 = i2 + 1", "goto label1", "if $ z0 == 0 goto label4", "label $ r6 add r3", "label if i2 > = i0 goto label6", "label $ r7 = $ r6 to array", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common math3 fit leastsquares levenberg marquardt optimizer", "specialinvoke r2 < init >", "r3 = org apache common math3 fit leastsquares least square optimizer r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 fit weight observed point r0", "$ r1 = r2 observation", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common math3 fraction big fraction r1", "r4 = org apache common math3 fraction big fraction r0", "$ r3 = r4 add $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common math3 fraction big fraction r1", "r4 = org apache common math3 fraction big fraction r0", "$ r3 = r4 subtract $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 fraction big fraction r0", "$ r1 = r2 negate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 genetics chromosome pair r0", "$ r1 = r2 first", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 genetics cycle crossover r0", "$ z0 = r1 random start", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 genetics elitistic list population r0", "$ d0 = r1 elitism rate", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 genetics fix generation count r0", "$ i0 = r1 num generation", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache common math3 genetics genetic algorithm random generator", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 genetics genetic algorithm r0", "$ r1 = r2 crossover policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 genetics tournament selection r0", "$ i0 = r1 arity", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r3 = org apache common math3 geometry enclose enclose ball r0", "$ r2 = r3 center", "$ d1 = r1 distance $ r2", "r4 = org apache common math3 geometry enclose enclose ball r0", "$ d2 = r4 radius", "$ d3 = $ d2 + d0", "$ b0 = $ d1 cmpg $ d3", "if $ b0 > 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 > 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r36 = org apache common math3 geometry euclidean threed field rotation r0", "$ r1 = r36 q0", "$ d0 = $ r1 get real", "$ b0 = $ d0 cmpg -0 1", "if $ b0 < 0 goto label1", "r37 = org apache common math3 geometry euclidean threed field rotation r0", "$ r22 = r37 q0", "$ d1 = $ r22 get real", "$ b1 = $ d1 cmpl 0 1", "if $ b1 < = 0 goto label2", "label r38 = org apache common math3 geometry euclidean threed field rotation r0", "$ r3 = r38 q1", "r39 = org apache common math3 geometry euclidean threed field rotation r0", "$ r2 = r39 q1", "$ r4 = $ r3 multiply $ r2", "$ r7 = org apache common math3 real field element $ r4", "r40 = org apache common math3 geometry euclidean threed field rotation r0", "$ r6 = r40 q2", "r41 = org apache common math3 geometry euclidean threed field rotation r0", "$ r5 = r41 q2", "$ r8 = $ r6 multiply $ r5", "$ r9 = $ r7 add $ r8", "$ r12 = org apache common math3 real field element $ r9", "r42 = org apache common math3 geometry euclidean threed field rotation r0", "$ r11 = r42 q3", "r43 = org apache common math3 geometry euclidean threed field rotation r0", "$ r10 = r43 q3", "$ r13 = $ r11 multiply $ r10", "$ r14 = $ r12 add $ r13", "$ r15 = org apache common math3 real field element $ r14", "$ r16 = $ r15 sqrt", "$ r17 = org apache common math3 real field element $ r16", "$ r18 = $ r17 asin", "$ r19 = org apache common math3 real field element $ r18", "$ r20 = $ r19 multiply 2", "$ r21 = org apache common math3 real field element $ r20", "return $ r21", "if $ b1 < = 0 goto label2", "label r44 = org apache common math3 geometry euclidean threed field rotation r0", "$ r23 = r44 q0", "$ d2 = $ r23 get real", "$ b2 = $ d2 cmpg 0 0", "if $ b2 > = 0 goto label3", "r45 = org apache common math3 geometry euclidean threed field rotation r0", "$ r29 = r45 q0", "$ r30 = $ r29 negate", "$ r31 = org apache common math3 real field element $ r30", "$ r32 = $ r31 acos", "$ r33 = org apache common math3 real field element $ r32", "$ r34 = $ r33 multiply 2", "$ r35 = org apache common math3 real field element $ r34", "return $ r35", "if $ b2 > = 0 goto label3", "label r46 = org apache common math3 geometry euclidean threed field rotation r0", "$ r24 = r46 q0", "$ r25 = $ r24 acos", "$ r26 = org apache common math3 real field element $ r25", "$ r27 = $ r26 multiply 2", "$ r28 = org apache common math3 real field element $ r27", "return $ r28"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ this", "r8 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r2 = r8 x", "$ r3 = $ r2 get field", "$ r4 = org apache common math3 util math array build array $ r3 3", "r1 = org apache common math3 real field element [ ] $ r4", "r9 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r5 = r9 x", "r1 [ 0 ] = $ r5", "r10 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r6 = r10 y", "r1 [ 1 ] = $ r6", "r11 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r7 = r11 z", "r1 [ 2 ] = $ r7", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common math3 geometry euclidean twod vector2 d r1", "r7 = new org apache common math3 geometry euclidean threed vector3 d", "$ d0 = r2 get x", "r8 = org apache common math3 geometry euclidean threed plane r0", "$ r4 = r8 u", "$ d1 = r2 get y", "r9 = org apache common math3 geometry euclidean threed plane r0", "$ r6 = r9 v", "r10 = org apache common math3 geometry euclidean threed plane r0", "$ d2 = r10 origin offset", "$ d3 = neg $ d2", "r11 = org apache common math3 geometry euclidean threed plane r0", "$ r5 = r11 w", "specialinvoke r7 < init > $ d0 $ r4 $ d1 $ r6 $ d3 $ r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry euclidean threed rotation order r0", "$ r1 = r2 a2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = java util locale get default", "$ r1 = org apache common math3 geometry euclidean twod vector2 d format get instance $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 geometry partition abstract region r0", "$ d0 = r1 tolerance", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common math3 geometry partition abstract region r0", "r2 barycenter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry partition boundary attribute r0", "$ r1 = r2 plus inside", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry partition characterization r0", "$ r1 = r2 inside touch", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r7 = org apache common math3 geometry spherical twod edge r0", "$ r2 = r7 circle", "r8 = org apache common math3 geometry spherical twod edge r0", "$ r3 = r8 circle", "r9 = org apache common math3 geometry spherical twod edge r0", "$ r1 = r9 start", "$ r4 = $ r1 get location", "$ r5 = $ r4 get vector", "$ d1 = $ r3 get phase $ r5", "$ d2 = d0 + $ d1", "$ r6 = $ r2 get point at $ d2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 geometry spherical twod property computer r0", "$ r1 = r2 convex cell inside point", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 geometry spherical twod s2 point r0", "$ d0 = r1 theta", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 geometry spherical twod s2 point r0", "$ d0 = r1 phi", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 linear abstract field matrix r0", "i0 = r2 get row dimension", "r3 = org apache common math3 linear abstract field matrix r0", "i1 = r3 get column dimension", "$ i2 = 322562 * 31", "i13 = $ i2 + i0", "$ i3 = i13 * 31", "i14 = $ i3 + i1", "i15 = 0", "label if i15 > = i0 goto label4", "i16 = 0", "label if i16 > = i1 goto label3", "$ i8 = i14 * 31", "$ i4 = i15 + 1", "$ i7 = 11 * $ i4", "$ i5 = i16 + 1", "$ i6 = 17 * $ i5", "$ i9 = $ i7 + $ i6", "r4 = org apache common math3 linear abstract field matrix r0", "$ r1 = r4 get entry i15 i16", "$ i10 = $ r1 hash code", "$ i11 = $ i9 * $ i10", "i14 = $ i8 + $ i11", "i16 = i16 + 1", "goto label2", "label if i16 > = i1 goto label3", "label i15 = i15 + 1", "goto label1", "label if i15 > = i0 goto label4", "label return i14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r7 = org apache common math3 linear abstract field matrix r0", "$ i3 = r7 get column dimension", "if i0 < $ i3 goto label2", "label r6 = new org apache common math3 exception out of range exception", "$ r2 = org apache common math3 exception util localized format column_index", "$ r3 = java lang integer value of i0", "$ r4 = java lang integer value of 0", "r8 = org apache common math3 linear abstract field matrix r0", "$ i1 = r8 get column dimension", "$ i2 = $ i1 - 1", "$ r5 = java lang integer value of $ i2", "r9 = org apache common math3 exception util localizable $ r2", "specialinvoke r6 < init > r9 $ r3 $ r4 $ r5", "r10 = java lang throwable r6", "throw r10", "if i0 < $ i3 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "i2 = 3542", "r3 = org apache common math3 linear array field vector r0", "r1 = r3 data", "i0 = lengthof r1", "i3 = 0", "label if i3 > = i0 goto label2", "r2 = r1 [ i3 ]", "$ i1 = r2 hash code", "i2 = i2 ^ $ i1", "i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label2", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["$ r0 = java text number format get available locale", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 linear open map real vector r0", "r1 = r2 copy", "r1 unitize", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common math3 linear array real vector r0", "$ r2 = r4 copy", "$ r3 = $ r2 map to self r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache common math3 linear sparse field vector", "if $ z0 == 0 goto label1", "$ r9 = org apache common math3 linear sparse field vector r1", "r12 = org apache common math3 linear sparse field vector r0", "$ r10 = r12 add $ r9", "return $ r10", "if $ z0 == 0 goto label1", "label i0 = r1 get dimension", "r13 = org apache common math3 linear sparse field vector r0", "r13 check vector dimension i0", "r11 = new org apache common math3 linear sparse field vector", "r14 = org apache common math3 linear sparse field vector r0", "$ r4 = r14 field", "r15 = org apache common math3 linear sparse field vector r0", "$ i1 = r15 get dimension", "specialinvoke r11 < init > $ r4 $ i1", "i2 = 0", "label if i2 > = i0 goto label3", "$ r5 = r1 get entry i2", "r16 = org apache common math3 linear sparse field vector r0", "$ r6 = r16 get entry i2", "$ r7 = $ r5 add $ r6", "$ r8 = org apache common math3 field element $ r7", "r11 set entry i2 $ r8", "i2 = i2 + 1", "goto label2", "label if i2 > = i0 goto label3", "label r17 = org apache common math3 linear field vector r11", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 ml neuralnet oned neuron string r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 ode abstract field integrator r0", "$ r1 = r2 equation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 ode equation mapper r0", "$ i0 = r1 first index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common math3 ode expandable stateful o d e r0", "$ r1 = r4 primary state dot", "$ r2 = $ r1 clone", "$ r3 = double [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 0 goto label1", "r7 = org apache common math3 ode field o d e state and derivative r0", "$ r4 = r7 derivative", "$ r5 = $ r4 clone", "$ r6 = org apache common math3 real field element [ ] $ r5", "goto label2", "label return $ r6", "if i0 ! = 0 goto label1", "label r8 = org apache common math3 ode field o d e state and derivative r0", "$ r1 = r8 secondary derivative", "$ i1 = i0 - 1", "$ r2 = $ r1 [ $ i1 ]", "$ r3 = $ r2 clone", "$ r6 = org apache common math3 real field element [ ] $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d8 = 0 0", "r5 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0", "$ i0 = r5 current degree", "if $ i0 < 5 goto label3", "i6 = 0", "label $ i1 = lengthof r1", "if i6 > = $ i1 goto label2", "r6 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0", "$ r3 = r6 polynomial", "r7 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0", "$ i5 = r7 current degree", "$ r4 = $ r3 [ $ i5 ]", "$ d6 = $ r4 [ i6 ]", "$ d5 = r1 [ i6 ]", "d0 = $ d6 $ d5", "$ d7 = d0 * d0", "d8 = d8 + $ d7", "i6 = i6 + 1", "goto label1", "if i6 > = $ i1 goto label2", "label $ i2 = lengthof r1", "$ d1 = double $ i2", "$ d2 = d8 $ d1", "$ d3 = org apache common math3 util fast math sqrt $ d2", "r8 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0", "$ r2 = r8 errfac", "r9 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0", "$ i3 = r9 current degree", "$ i4 = $ i3 - 5", "$ d4 = $ r2 [ $ i4 ]", "d8 = $ d3 * $ d4", "label return d8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache common math3 ode parameter configuration r0", "r1 h p = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 optim linear linear constraint r0", "$ r1 = r2 relationship", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache common math3 optim linear simplex tableau r0", "$ r1 = r2 basic row", "$ i1 = $ r1 [ i0 ]", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 optim nonlinear vector jacobian abstract least square optimizer r0", "$ d1 = r1 cost", "r2 = org apache common math3 optim nonlinear vector jacobian abstract least square optimizer r0", "$ d0 = r2 cost", "$ d2 = $ d1 * $ d0", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache common math3 optim nonlinear vector jacobian abstract least square optimizer r0", "r1 cost = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common math3 optim nonlinear vector multivariate vector optimizer r0", "$ r1 = r4 target", "$ r2 = $ r1 clone", "$ r3 = double [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 optim univariate search interval r0", "$ d0 = r1 upper", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 optim univariate search interval r0", "$ d0 = r1 start", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 optimization general abstract least square optimizer r0", "$ d0 = r1 get chi square", "r2 = org apache common math3 optimization general abstract least square optimizer r0", "$ i0 = r2 row", "$ d1 = double $ i0", "$ d2 = $ d0 $ d1", "$ d3 = org apache common math3 util fast math sqrt $ d2", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 optimization general abstract least square optimizer r0", "$ r1 = r2 get covariance 1 0e-14", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 random abstract random generator r0", "r1 cache normal deviate = #na n", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "$ d3 = org apache common math3 special beta regularize beta d0 d1 d2 1 0e-14 2147483647", "return $ d3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 stat cluster euclidean double point r0", "$ r1 = r2 point", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 stat correlation kendall correlation r0", "$ r1 = r2 correlation matrix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache common math3 linear block real matrix", "specialinvoke r4 < init > r1", "r5 = org apache common math3 stat correlation kendall correlation r0", "r6 = org apache common math3 linear real matrix r4", "$ r3 = r5 compute correlation matrix r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 stat descriptive descriptive statistic r0", "$ r1 = r2 sumsq impl", "r3 = org apache common math3 stat descriptive descriptive statistic r0", "$ d0 = r3 apply $ r1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 stat descriptive descriptive statistic r0", "$ r1 = r2 min impl", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common math3 stat descriptive descriptive statistic r0", "r2 min impl = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = lengthof r1", "r3 = org apache common math3 stat descriptive moment mean r0", "$ d0 = r3 evaluate r1 r2 0 $ i0", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 stat descriptive moment semi variance r0", "$ z0 = r1 bias correct", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r3 = org apache common math3 stat descriptive moment standard deviation r0", "$ r2 = r3 variance", "$ d1 = $ r2 evaluate r1 d0", "$ d2 = org apache common math3 util fast math sqrt $ d1", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r2 = @ parameter2", "r3 = org apache common math3 stat descriptive moment semi variance r0", "$ z0 = r3 bias correct", "$ i0 = lengthof r1", "r4 = org apache common math3 stat descriptive moment semi variance r0", "$ d1 = r4 evaluate r1 d0 r2 $ z0 0 $ i0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = lengthof r1", "r8 = org apache common math3 stat descriptive moment vectorial covariance r0", "$ r2 = r8 sum", "$ i0 = lengthof $ r2", "if $ i1 == $ i0 goto label1", "r7 = new org apache common math3 exception dimension mismatch exception", "$ i7 = lengthof r1", "r9 = org apache common math3 stat descriptive moment vectorial covariance r0", "$ r6 = r9 sum", "$ i6 = lengthof $ r6", "specialinvoke r7 < init > $ i7 $ i6", "r10 = java lang throwable r7", "throw r10", "if $ i1 == $ i0 goto label1", "label i8 = 0", "i9 = 0", "label $ i2 = lengthof r1", "if i9 > = $ i2 goto label5", "r11 = org apache common math3 stat descriptive moment vectorial covariance r0", "$ r3 = r11 sum", "$ d1 = $ r3 [ i9 ]", "$ d0 = r1 [ i9 ]", "$ d2 = $ d1 + $ d0", "$ r3 [ i9 ] = $ d2", "i10 = 0", "label if i10 > i9 goto label4", "r12 = org apache common math3 stat descriptive moment vectorial covariance r0", "$ r4 = r12 product sum", "$ i5 = i8", "i8 = i8 + 1", "$ d6 = $ r4 [ $ i5 ]", "$ d4 = r1 [ i9 ]", "$ d3 = r1 [ i10 ]", "$ d5 = $ d4 * $ d3", "$ d7 = $ d6 + $ d5", "$ r4 [ $ i5 ] = $ d7", "i10 = i10 + 1", "goto label3", "label if i10 > i9 goto label4", "label i9 = i9 + 1", "goto label2", "if i9 > = $ i2 goto label5", "label r13 = org apache common math3 stat descriptive moment vectorial covariance r0", "$ l3 = r13 n", "$ l4 = $ l3 + 1l", "r14 = org apache common math3 stat descriptive moment vectorial covariance r0", "r14 n = $ l4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 stat descriptive rank p square percentile r0", "$ d0 = r1 quantile", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common math3 stat descriptive aggregate summary statistic r0", "$ r3 = r6 statistic", "entermonitor $ r3", "label r7 = org apache common math3 stat descriptive aggregate summary statistic r0", "$ r4 = r7 statistic", "$ d0 = $ r4 get standard deviation", "exitmonitor $ r3", "label return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common math3 stat descriptive aggregate summary statistic r0", "$ r3 = r6 statistic", "entermonitor $ r3", "label r7 = org apache common math3 stat descriptive aggregate summary statistic r0", "$ r4 = r7 statistic", "$ d0 = $ r4 get min", "exitmonitor $ r3", "label return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = java text number format get percent instance", "r21 = new java lang string builder", "specialinvoke r21 < init >", "r21 append \\ `` value \\t freq \\t pct \\t cum pct \\n\\ ``", "r22 = org apache common math3 stat frequency r0", "$ r7 = r22 freq table", "$ r8 = $ r7 key set", "r3 = $ r8 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r10 = r3 next", "r4 = java lang comparable $ r10", "r21 append r4", "r21 append 9", "r23 = org apache common math3 stat frequency r0", "$ l0 = r23 get count r4", "r21 append $ l0", "if $ z0 == 0 goto label2", "label $ r9 = r21 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 stat frequency r0", "$ r1 = r2 freq table", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "d0 = @ parameter2", "$ b0 = d0 cmpg 0 0", "if $ b0 < = 0 goto label1", "$ b1 = d0 cmpl 0 5", "if $ b1 < = 0 goto label2", "label r8 = new org apache common math3 exception out of range exception", "$ r4 = org apache common math3 exception util localized format out_of_bound_significance_level", "$ r5 = java lang double value of d0", "$ r6 = java lang integer value of 0", "$ r7 = java lang double value of 0 5", "r9 = org apache common math3 exception util localizable $ r4", "specialinvoke r8 < init > r9 $ r5 $ r6 $ r7", "r10 = java lang throwable r8", "throw r10", "if $ b1 < = 0 goto label2", "label r11 = org apache common math3 stat inference kolmogorov smirnov test r0", "$ d1 = r11 kolmogorov smirnov test r1 r2", "$ b2 = $ d1 cmpg d0", "if $ b2 > = 0 goto label3", "$ z0 = 1", "goto label4", "label return $ z0", "if $ b2 > = 0 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "z0 = @ parameter3", "i1 = lengthof r1", "i2 = lengthof r2", "$ i5 = i1 + i2", "r3 = newarray double [ $ i5 ]", "java lang system arraycopy r1 0 r3 0 i1", "java lang system arraycopy r2 0 r3 i1 i2", "r9 = new org apache common math3 distribution enumerate real distribution", "r10 = org apache common math3 stat inference kolmogorov smirnov test r0", "$ r8 = r10 rng", "specialinvoke r9 < init > $ r8 r3", "r11 = org apache common math3 stat inference kolmogorov smirnov test r0", "l3 = specialinvoke r11 integral kolmogorov smirnov statistic r1 r2", "i9 = 0", "i10 = 0", "i11 = 0", "label if i11 > = i0 goto label4", "r5 = r9 sample i1", "r6 = r9 sample i2", "r12 = org apache common math3 stat inference kolmogorov smirnov test r0", "l4 = specialinvoke r12 integral kolmogorov smirnov statistic r5 r6", "$ b7 = l4 cmp l3", "if $ b7 < = 0 goto label2", "i9 = i9 + 1", "goto label3", "label i11 = i11 + 1", "goto label1", "if $ b7 < = 0 goto label2", "label $ b8 = l4 cmp l3", "if $ b8 ! = 0 goto label3", "i10 = i10 + 1", "label if i11 > = i0 goto label4", "label if z0 == 0 goto label5", "$ d3 = double i9", "$ d2 = double i0", "$ d4 = $ d3 $ d2", "goto label6", "label return $ d4", "label if z0 == 0 goto label5", "label $ i6 = i9 + i10", "$ d1 = double $ i6", "$ d0 = double i0", "$ d4 = $ d1 $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "d0 = @ parameter2", "$ r0 = org apache common math3 stat interval interval utils wilson_score", "$ r1 = $ r0 create interval i0 i1 d0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new org apache common math3 exception null argument exception", "specialinvoke r5 < init >", "r8 = java lang throwable r5", "throw r8", "if r1 ! = null goto label1", "label $ i0 = lengthof r1", "if $ i0 ! = 0 goto label2", "r6 = new org apache common math3 exception no data exception", "specialinvoke r6 < init >", "r9 = java lang throwable r6", "throw r9", "if $ i0 ! = 0 goto label2", "label r7 = new org apache common math3 linear array real vector", "specialinvoke r7 < init > r1", "r10 = org apache common math3 stat regression abstract multiple linear regression r0", "r11 = org apache common math3 linear real vector r7", "r10 y vector = r11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache common math3 stat descriptive moment variance", "specialinvoke r4 < init >", "r5 = org apache common math3 stat regression abstract multiple linear regression r0", "$ r2 = r5 y vector", "$ r3 = $ r2 to array", "$ d0 = r4 evaluate $ r3", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 stat regression o l s multiple linear regression r0", "$ d0 = r1 calculate residual sum of square", "r2 = org apache common math3 stat regression o l s multiple linear regression r0", "$ d1 = r2 calculate total sum of square", "$ d2 = $ d0 $ d1", "$ d3 = 1 0 - $ d2", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 stat regression regression result r0", "$ l0 = r1 nobs", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r4 = org apache common math3 stat regression simple regression r0", "$ l0 = r4 n", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label1", "r5 = org apache common math3 stat regression simple regression r0", "r5 xbar = d0", "r6 = org apache common math3 stat regression simple regression r0", "r6 ybar = d1", "goto label2", "label r23 = org apache common math3 stat regression simple regression r0", "$ z1 = r23 have intercept", "if $ z1 ! = 0 goto label3", "r24 = org apache common math3 stat regression simple regression r0", "$ d11 = r24 sum x x", "$ d10 = d0 * d0", "$ d12 = $ d11 + $ d10", "r25 = org apache common math3 stat regression simple regression r0", "r25 sum x x = $ d12", "r26 = org apache common math3 stat regression simple regression r0", "$ d14 = r26 sum y y", "$ d13 = d1 * d1", "$ d15 = $ d14 + $ d13", "r27 = org apache common math3 stat regression simple regression r0", "r27 sum y y = $ d15", "r28 = org apache common math3 stat regression simple regression r0", "$ d17 = r28 sum x y", "$ d16 = d0 * d1", "$ d18 = $ d17 + $ d16", "r29 = org apache common math3 stat regression simple regression r0", "r29 sum x y = $ d18", "label r30 = org apache common math3 stat regression simple regression r0", "$ d6 = r30 sum x", "$ d7 = $ d6 + d0", "r31 = org apache common math3 stat regression simple regression r0", "r31 sum x = $ d7", "r32 = org apache common math3 stat regression simple regression r0", "$ d8 = r32 sum y", "$ d9 = $ d8 + d1", "r33 = org apache common math3 stat regression simple regression r0", "r33 sum y = $ d9", "r34 = org apache common math3 stat regression simple regression r0", "$ l2 = r34 n", "$ l3 = $ l2 + 1l", "r35 = org apache common math3 stat regression simple regression r0", "r35 n = $ l3", "return", "if $ b1 ! = 0 goto label1", "label r7 = org apache common math3 stat regression simple regression r0", "$ z0 = r7 have intercept", "if $ z0 == 0 goto label2", "r8 = org apache common math3 stat regression simple regression r0", "$ l4 = r8 n", "$ d19 = double $ l4", "d2 = 1 0 + $ d19", "r9 = org apache common math3 stat regression simple regression r0", "$ l5 = r9 n", "$ d22 = double $ l5", "r10 = org apache common math3 stat regression simple regression r0", "$ l6 = r10 n", "$ d20 = double $ l6", "$ d21 = 1 0 + $ d20", "d3 = $ d22 $ d21", "r11 = org apache common math3 stat regression simple regression r0", "$ d23 = r11 xbar", "d4 = d0 - $ d23", "r12 = org apache common math3 stat regression simple regression r0", "$ d24 = r12 ybar", "d5 = d1 - $ d24", "r13 = org apache common math3 stat regression simple regression r0", "$ d27 = r13 sum x x", "$ d25 = d4 * d4", "$ d26 = $ d25 * d3", "$ d28 = $ d27 + $ d26", "r14 = org apache common math3 stat regression simple regression r0", "r14 sum x x = $ d28", "r15 = org apache common math3 stat regression simple regression r0", "$ d31 = r15 sum y y", "$ d29 = d5 * d5", "$ d30 = $ d29 * d3", "$ d32 = $ d31 + $ d30", "r16 = org apache common math3 stat regression simple regression r0", "r16 sum y y = $ d32", "r17 = org apache common math3 stat regression simple regression r0", "$ d35 = r17 sum x y", "$ d33 = d4 * d5", "$ d34 = $ d33 * d3", "$ d36 = $ d35 + $ d34", "r18 = org apache common math3 stat regression simple regression r0", "r18 sum x y = $ d36", "r19 = org apache common math3 stat regression simple regression r0", "$ d38 = r19 xbar", "$ d37 = d4 d2", "$ d39 = $ d38 + $ d37", "r20 = org apache common math3 stat regression simple regression r0", "r20 xbar = $ d39", "r21 = org apache common math3 stat regression simple regression r0", "$ d41 = r21 ybar", "$ d40 = d5 d2", "$ d42 = $ d41 + $ d40", "r22 = org apache common math3 stat regression simple regression r0", "r22 ybar = $ d42"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math3 stat regression simple regression r0", "$ z0 = r1 have intercept", "if $ z0 == 0 goto label1", "r2 = org apache common math3 stat regression simple regression r0", "$ d0 = r2 get slope", "r3 = org apache common math3 stat regression simple regression r0", "$ d1 = specialinvoke r3 get intercept $ d0", "goto label2", "label return $ d1", "if $ z0 == 0 goto label1", "label $ d1 = 0 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common math3 stat stat utils sum_of_squares", "$ d0 = $ r1 evaluate r0", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r1 = org apache common math3 stat stat utils mean", "$ d0 = $ r1 evaluate r0 i0 i1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache common math3 util continued fraction r0", "$ d1 = r1 evaluate d0 1 0e-8 2147483647", "return $ d1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common math3 util multidimensional counter r0", "$ r1 = r3 size", "$ r2 = org apache common math3 util math array copy of $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math3 util pair r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label $ z0 = r1 instanceof org apache common math3 util pair", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = org apache common math3 util pair r1", "r11 = org apache common math3 util pair r0", "$ r3 = r11 key", "if $ r3 ! = null goto label3", "$ r10 = r2 key", "if $ r10 ! = null goto label7", "goto label4", "label r13 = org apache common math3 util pair r0", "$ r6 = r13 value", "if $ r6 ! = null goto label5", "$ r9 = r2 value", "if $ r9 ! = null goto label7", "goto label6", "label $ z3 = 1", "goto label8", "label return $ z3", "if $ r9 ! = null goto label7", "label $ z3 = 0", "if $ r6 ! = null goto label5", "label r14 = org apache common math3 util pair r0", "$ r8 = r14 value", "$ r7 = r2 value", "$ z2 = $ r8 equal $ r7", "if $ z2 == 0 goto label7", "if $ r3 ! = null goto label3", "label r12 = org apache common math3 util pair r0", "$ r5 = r12 key", "$ r4 = r2 key", "$ z1 = $ r5 equal $ r4", "if $ z1 == 0 goto label7"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "$ z0 = org apache common math3 util precision equal d0 d1 1", "if $ z0 ! = 0 goto label1", "$ d3 = d1 - d0", "$ d4 = org apache common math3 util fast math ab $ d3", "$ b0 = $ d4 cmpg d2", "if $ b0 > 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ b0 > 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common math3 util transformer map r0", "$ r1 = r3 map", "$ r2 = $ r1 value", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common text lookup system property string lookup instance", "r2 = org apache common text lookup string lookup $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache common text similarity levenshtein detail distance r0", "$ r3 = r4 apply r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common text string tokenizer r0", "$ z0 = r1 ignore empty token", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["c0 = @ parameter0", "r1 = new org apache common text str matcher $ char matcher", "specialinvoke r1 < init > c0", "r2 = org apache common text str matcher r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common text text string builder r0", "$ r1 = r3 append z0", "$ r2 = $ r1 append new line", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common text text string builder r0", "$ r1 = r3 append z0", "$ r2 = $ r1 append new line", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r2 = org apache common text text string builder r0", "$ i1 = r2 size", "if $ i1 < = 0 goto label1", "r3 = org apache common text text string builder r0", "r3 append c0", "label r4 = org apache common text text string builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common text lookup default string lookup r0", "$ r1 = r2 key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common text similarity intersection result r0", "$ i0 = r1 size b", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common text text string builder r0", "i0 = r3 length", "if r1 == null goto label1", "$ i1 = lengthof r1", "if $ i1 > = i0 goto label2", "label r1 = newarray char [ i0 ]", "label r4 = org apache common text text string builder r0", "$ r2 = r4 buffer", "java lang system arraycopy $ r2 0 r1 0 i0", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["$ r0 = org apache common validator date validator date_validator", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r5 = org apache common validator email validator ip_domain_pattern", "r2 = $ r5 matcher r1", "i1 = 1", "label if i1 > 4 goto label8", "r3 = r2 group i1", "if r3 == null goto label2", "$ i0 = r3 length", "if $ i0 > 0 goto label3", "label return 0", "if $ i0 > 0 goto label3", "label i2 = java lang integer parse int r3", "label goto label6", "label if i2 < = 255 goto label7", "return 0", "label if i2 < = 255 goto label7", "label i1 = i1 + 1", "goto label1", "label if i1 > 4 goto label8", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r32 = org apache common validator field r0", "$ r2 = r32 get indexed list property", "r23 = org apache common beanutils property utils get property r1 $ r2", "label goto label6", "label $ z0 = r23 instanceof java util collection", "if $ z0 == 0 goto label7", "$ r12 = java util collection r23", "$ r13 = $ r12 to array", "return $ r13", "if $ z0 == 0 goto label7", "label $ r3 = r23 get class", "$ z1 = $ r3 be array", "if $ z1 == 0 goto label8", "$ r10 = java lang object [ ] r23", "$ r11 = java lang object [ ] $ r10", "return $ r11", "if $ z1 == 0 goto label8", "label r31 = new org apache common validator validator exception", "r30 = new java lang string buffer", "specialinvoke r30 < init >", "r36 = org apache common validator field r0", "$ r6 = r36 get key", "$ r7 = r30 append $ r6", "$ r8 = $ r7 append \\ `` be not indexed\\ ``", "$ r9 = $ r8 to string", "specialinvoke r31 < init > $ r9", "r37 = java lang throwable r31", "throw r37"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common validator field r0", "$ r1 = r2 depend", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common validator field r0", "$ r1 = r3 dependency list", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r32 = org apache common validator field r0", "$ r2 = r32 get indexed list property", "r23 = org apache common beanutils property utils get property r1 $ r2", "label goto label6", "label $ z0 = r23 instanceof java util collection", "if $ z0 == 0 goto label7", "$ r12 = java util collection r23", "$ r13 = $ r12 to array", "return $ r13", "if $ z0 == 0 goto label7", "label $ r3 = r23 get class", "$ z1 = $ r3 be array", "if $ z1 == 0 goto label8", "$ r10 = java lang object [ ] r23", "$ r11 = java lang object [ ] $ r10", "return $ r11", "if $ z1 == 0 goto label8", "label r31 = new org apache common validator validator exception", "r30 = new java lang string buffer", "specialinvoke r30 < init >", "r36 = org apache common validator field r0", "$ r6 = r36 get key", "$ r7 = r30 append $ r6", "$ r8 = $ r7 append \\ `` be not indexed\\ ``", "$ r9 = $ r8 to string", "specialinvoke r31 < init > $ r9", "r37 = java lang throwable r31", "throw r37"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r11 = org apache common validator form set r0", "$ r1 = r11 get variant", "if $ r1 == null goto label3", "r12 = org apache common validator form set r0", "$ r6 = r12 get language", "if $ r6 == null goto label1", "r13 = org apache common validator form set r0", "$ r8 = r13 get country", "if $ r8 ! = null goto label2", "label r9 = new java lang null pointer exception", "specialinvoke r9 < init > \\ `` when variant be specify country and language must be specify \\ ``", "throw r9", "if $ r8 ! = null goto label2", "label return 4", "if $ r1 == null goto label3", "label r14 = org apache common validator form set r0", "$ r2 = r14 get country", "if $ r2 == null goto label5", "r15 = org apache common validator form set r0", "$ r4 = r15 get language", "if $ r4 ! = null goto label4", "r10 = new java lang null pointer exception", "specialinvoke r10 < init > \\ `` when country be specify language must be specify \\ ``", "throw r10", "if $ r4 ! = null goto label4", "label return 3", "if $ r2 == null goto label5", "label r16 = org apache common validator form set r0", "$ r3 = r16 get language", "if $ r3 == null goto label6", "return 2", "if $ r3 == null goto label6", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [], [33], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common validator generic validator url_validator", "$ z0 = $ r1 be valid r0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common validator routine i s b n validator get instance", "$ z0 = $ r2 be valid i s b n10 r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = java util time zone null", "r6 = org apache common validator routine abstract calendar validator r0", "$ r5 = r6 format r1 r2 r3 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = new java text parse position", "specialinvoke r6 < init > 0", "r5 = r2 parse object r1 r6", "$ i0 = r6 get error index", "if $ i0 < = -1 goto label1", "return null", "if $ i0 < = -1 goto label1", "label r7 = org apache common validator routine abstract format validator r0", "$ z0 = r7 be strict", "if $ z0 == 0 goto label2", "$ i1 = r6 get index", "$ i2 = r1 length", "if $ i1 > = $ i2 goto label2", "label if r5 == null goto label3", "r8 = org apache common validator routine abstract format validator r0", "r5 = r8 process parse value r5 r2", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util locale null", "r6 = org apache common validator routine big integer validator r0", "$ r4 = r6 parse r1 r2 $ r3", "$ r5 = java math big integer $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = java util time zone null", "r7 = org apache common validator routine calendar validator r0", "$ r5 = r7 parse r1 r2 r3 $ r4", "$ r6 = java util calendar $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = org apache common validator routine calendar validator r0", "$ r5 = r7 parse r1 r2 r3 r4", "$ r6 = java util calendar $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i2 = r1 length", "if $ i2 > = 5 goto label4", "label r13 = new org apache common validator routine checkdigit check digit exception", "r12 = new java lang string buffer", "specialinvoke r12 < init >", "$ r5 = r12 append \\ `` invalid code length=\\ ``", "if r1 ! = null goto label2", "$ i3 = 0", "goto label3", "label $ r6 = $ r5 append $ i3", "$ r7 = $ r6 to string", "specialinvoke r13 < init > $ r7", "r15 = java lang throwable r13", "throw r15", "if r1 ! = null goto label2", "label $ i3 = r1 length", "if $ i2 > = 5 goto label4", "label r16 = org apache common validator routines checkdigit i b a n check digit r0", "i0 = specialinvoke r16 calculate modulus r1", "i1 = 98 - i0", "r2 = java lang integer to string i1", "if i1 < = 9 goto label5", "$ r11 = r2", "goto label6", "label return $ r11", "if i1 < = 9 goto label5", "label r14 = new java lang string buffer", "specialinvoke r14 < init >", "$ r9 = r14 append \\ `` 0\\ ``", "$ r10 = $ r9 append r2", "$ r11 = $ r10 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "if i0 > 9 goto label1", "$ r6 = java lang integer to string i0", "return $ r6", "if i0 > 9 goto label1", "label r8 = new org apache common validator routine checkdigit check digit exception", "r7 = new java lang string buffer", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` invalid check digit value =\\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "specialinvoke r8 < init > $ r5", "r9 = java lang throwable r8", "throw r9"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "$ i0 = r1 length", "if $ i0 < = 7 goto label1", "r8 = new org apache common validator routine checkdigit check digit exception", "r7 = new java lang string buffer", "specialinvoke r7 < init >", "$ r4 = r7 append \\ `` invalid code length = \\ ``", "$ i2 = r1 length", "$ r5 = $ r4 append $ i2", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "r9 = java lang throwable r8", "throw r9", "if $ i0 < = 7 goto label1", "label $ i1 = specialinvoke r0 calculate modulus r1 z0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = java util time zone null", "r7 = org apache common validator routine date validator r0", "$ r5 = r7 parse r1 r2 r3 $ r4", "$ r6 = java util date $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["$ r0 = org apache common validator routine domain validator domain_validator", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common validator routine domain validator infrastructure_tld_list", "$ r3 = r1 to lower case", "r5 = org apache common validator routine domain validator r0", "$ r4 = specialinvoke r5 chomp lead dot $ r3", "$ z0 = $ r2 contain $ r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache common validator routine domain validator local_tld_list", "$ r3 = r1 to lower case", "r5 = org apache common validator routine domain validator r0", "$ r4 = specialinvoke r5 chomp lead dot $ r3", "$ z0 = $ r2 contain $ r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util locale null", "r6 = org apache common validator routine float validator r0", "$ r4 = r6 parse r1 r2 $ r3", "$ r5 = java lang float $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r0 = org apache common validator routine inet address validator validator", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = java util locale null", "$ r3 = java util time zone null", "r7 = org apache common validator routine time validator r0", "$ r5 = r7 parse r1 r2 $ r4 $ r3", "$ r6 = java util calendar $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common validator validator r0", "$ r2 = r4 parameter", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common validator validator action r0", "r2 msg = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r17 = org apache common validator validator action r0", "$ z0 = specialinvoke r17 javascript already load", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r18 = org apache common validator validator action r0", "$ r2 = specialinvoke r18 get log", "$ z1 = $ r2 be trace enabled", "if $ z1 == 0 goto label2", "r19 = org apache common validator validator action r0", "$ r15 = specialinvoke r19 get log", "$ r15 trace \\ `` load function begun\\ ``", "label r20 = org apache common validator validator action r0", "$ r3 = r20 j function", "if $ r3 ! = null goto label3", "r21 = org apache common validator validator action r0", "$ r14 = specialinvoke r21 generate j function", "r22 = org apache common validator validator action r0", "r22 j function = $ r14", "label r23 = org apache common validator validator action r0", "r1 = specialinvoke r23 format javascript file name", "r24 = org apache common validator validator action r0", "$ r4 = specialinvoke r24 get log", "$ z2 = $ r4 be trace enabled", "if $ z2 == 0 goto label4", "r25 = org apache common validator validator action r0", "$ r8 = specialinvoke r25 get log", "r16 = new java lang string buffer", "specialinvoke r16 < init >", "$ r10 = r16 append \\ `` load j function \\'\\ ``", "$ r11 = $ r10 append r1", "$ r12 = $ r11 append \\ `` \\'\\ ``", "$ r13 = $ r12 to string", "$ r8 trace $ r13", "label r26 = org apache common validator validator action r0", "$ r5 = specialinvoke r26 read javascript file r1", "r27 = org apache common validator validator action r0", "r27 javascript = $ r5", "r28 = org apache common validator validator action r0", "$ r6 = specialinvoke r28 get log", "$ z3 = $ r6 be trace enabled", "if $ z3 == 0 goto label5", "r29 = org apache common validator validator action r0", "$ r7 = specialinvoke r29 get log", "$ r7 trace \\ `` load javascript function completed\\ ``", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common validator validator result r0", "$ r2 = r3 h action", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common validator validator result r0", "$ r1 = r3 h action", "$ r2 = java util collection unmodifiable map $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common validator validator result r0", "$ r3 = r4 h result", "$ r2 = r1 h result", "$ r3 put all $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common validator var r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r56 = org javacc jjdoc text generator r0", "$ r2 = r56 context", "$ r3 = $ r2 get output file", "$ z0 = $ r3 equal \\ `` \\ ``", "if $ z0 == 0 goto label07", "$ r10 = org javacc jjdoc j j doc globals input_file", "$ z1 = $ r10 equal \\ `` standard input\\ ``", "if $ z1 == 0 goto label01", "r47 = new java io print writer", "r46 = new java io output stream writer", "$ r32 = java lang system out", "specialinvoke r46 < init > $ r32", "specialinvoke r47 < init > r46", "return r47", "if $ z1 == 0 goto label01", "label r43 = \\ `` html\\ ``", "r57 = org javacc jjdoc text generator r0", "$ r11 = r57 context", "$ z2 = $ r11 get text", "if $ z2 == 0 goto label02", "r43 = \\ `` txt\\ ``", "goto label03", "label $ r44 = org javacc jjdoc j j doc globals input_file", "i0 = $ r44 last index of 46", "if i0 ! = -1 goto label04", "r48 = new java lang string builder", "specialinvoke r48 < init >", "$ r26 = org javacc jjdoc j j doc globals input_file", "$ r27 = r48 append $ r26", "$ r28 = $ r27 append r43", "$ r29 = $ r28 to string", "org javacc jjdoc j j doc globals output_file = $ r29", "goto label06", "label goto label08", "label r52 = new java io print writer", "r51 = new java io file writer", "$ r8 = org javacc jjdoc j j doc globals output_file", "specialinvoke r51 < init > $ r8", "specialinvoke r52 < init > r51", "r60 = org javacc jjdoc text generator r0", "r60 ostr = r52", "label goto label11", "label r63 = org javacc jjdoc text generator r0", "$ r9 = r63 ostr", "return $ r9", "if i0 ! = -1 goto label04", "label $ r13 = org javacc jjdoc j j doc globals input_file", "r1 = $ r13 substring i0", "$ z4 = r1 equal r43", "if $ z4 == 0 goto label05", "r49 = new java lang string builder", "specialinvoke r49 < init >", "$ r21 = org javacc jjdoc j j doc globals input_file", "$ r22 = r49 append $ r21", "$ r23 = $ r22 append r43", "$ r24 = $ r23 to string", "org javacc jjdoc j j doc globals output_file = $ r24", "if $ z4 == 0 goto label05", "label r50 = new java lang string builder", "specialinvoke r50 < init >", "$ r15 = org javacc jjdoc j j doc globals input_file", "$ r16 = $ r15 substring 0 i0", "$ r17 = r50 append $ r16", "$ r18 = $ r17 append r43", "$ r19 = $ r18 to string", "org javacc jjdoc j j doc globals output_file = $ r19", "if $ z2 == 0 goto label02", "label r58 = org javacc jjdoc text generator r0", "$ r12 = r58 context", "$ z3 = $ r12 get x text", "if $ z3 == 0 goto label03", "r43 = \\ `` xtext\\ ``", "if $ z0 == 0 goto label07", "label r59 = org javacc jjdoc text generator r0", "$ r4 = r59 context", "$ r5 = $ r4 get output file", "org javacc jjdoc j j doc globals output_file = $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], []]}
{"nodes": ["r0 = @ this", "$ z0 = org javacc parser option boolean value \\ `` node_uses_parser\\ ``", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ z0 = org javacc parser option boolean value \\ `` track_tokens\\ ``", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = org javacc parser option string value \\ `` node_class\\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = org javacc parser option string value \\ `` node_package\\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org javacc parser option option value", "$ r2 = $ r1 get r0", "$ r3 = java lang integer $ r2", "$ i0 = $ r3 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ z0 = org javacc parser option boolean value \\ `` debug_token_manager\\ ``", "return $ z0"], "adj": [[1], []]}
{"nodes": ["$ z0 = org javacc parser option boolean value \\ `` cache_tokens\\ ``", "return $ z0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org javacc parser option string value \\ `` jdk_version\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ z0 = org javacc parser option boolean value \\ `` generate_string_builder\\ ``", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = com graphbuilder curve bezier curve r0", "$ d0 = r1 t_min", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com graphbuilder curve b spline r0", "$ z0 = r1 use default interval", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com graphbuilder curve control path r0", "$ r1 = r2 curve bag", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com graphbuilder curve control path r0", "$ r1 = r2 point bag", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com graphbuilder curve control string parse exception r0", "$ i0 = r1 from index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com graphbuilder curve group iterator r0", "$ r1 = r2 group", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com graphbuilder curve natural cubic spline r0", "r1 close = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = com graphbuilder curve value vector r0", "$ r2 = r5 value", "$ i1 = lengthof $ r2", "if $ i1 > = i0 goto label4", "r6 = com graphbuilder curve value vector r0", "$ r3 = r6 value", "$ i2 = lengthof $ r3", "i3 = 2 * $ i2", "if i3 > = i0 goto label1", "i3 = i0", "label r1 = newarray double [ i3 ]", "i4 = 0", "label r7 = com graphbuilder curve value vector r0", "$ i5 = r7 size", "if i4 > = $ i5 goto label3", "r8 = com graphbuilder curve value vector r0", "$ r4 = r8 value", "$ d0 = $ r4 [ i4 ]", "r1 [ i4 ] = $ d0", "i4 = i4 + 1", "goto label2", "if i4 > = $ i5 goto label3", "label r9 = com graphbuilder curve value vector r0", "r9 value = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "r3 = new com graphbuilder math expression parse exception", "specialinvoke r3 < init > \\ `` expression string can not be null \\", "r4 = java lang throwable r3", "throw r4", "if r0 ! = null goto label1", "label $ r1 = com graphbuilder math expression tree build r0 0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ d0 = r1 [ 0 ]", "$ d1 = java lang math ab $ d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ d4 = r1 [ 0 ]", "$ d1 = r1 [ 0 ]", "$ d0 = r1 [ 0 ]", "$ d2 = $ d1 * $ d0", "$ d3 = 1 0 + $ d2", "$ d5 = java lang math sqrt $ d3", "$ d6 = $ d4 + $ d5", "$ d7 = java lang math log $ d6", "return $ d7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ d0 = r1 [ 0 ]", "$ d1 = java lang math atan $ d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 ! = 2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ d0 = r1 [ 0 ]", "$ d1 = java lang math pow 2 718281828459045 $ d0", "$ d2 = r1 [ 0 ]", "$ d3 = neg $ d2", "$ d4 = java lang math pow 2 718281828459045 $ d3", "$ d5 = $ d1 + $ d4", "$ d6 = $ d5 2 0", "return $ d6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ d0 = r1 [ 0 ]", "$ d1 = java lang math floor $ d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ d0 = r1 [ 0 ]", "$ d1 = java lang math sqrt $ d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = com graphbuilder math func map r0", "$ i0 = r4 num func", "r1 = newarray java lang string [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r5 = com graphbuilder math func map r0", "$ r2 = r5 name", "$ r3 = $ r2 [ i2 ]", "r1 [ i2 ] = $ r3", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r4 = com graphbuilder math func map r0", "$ i0 = r4 num func", "r1 = newarray com graphbuilder math func function [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r5 = com graphbuilder math func map r0", "$ r2 = r5 func", "$ r3 = $ r2 [ i2 ]", "r1 [ i2 ] = $ r3", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r5 = com graphbuilder math pascal triangle r0", "$ r3 = r5 share data", "$ r1 = newarray double [ ] [ 1 ]", "$ r2 = newarray double [ 1 ]", "$ r2 [ 0 ] = 1 0", "$ r1 [ 0 ] = $ r2", "com graphbuilder math pascal triangle $ share data access $ 102 $ r3 $ r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = com graphbuilder math var map r0", "$ i0 = r3 num var", "r1 = newarray double [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r4 = com graphbuilder math var map r0", "$ r2 = r4 value", "$ d0 = $ r2 [ i2 ]", "r1 [ i2 ] = $ d0", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache deltaspike core api config view navigation event pre view config navigate event r0", "$ r1 = r2 to view", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache deltaspike core util bean bean builder r0", "r1 passivation capable = z0", "r2 = org apache deltaspike core util bean bean builder r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java lang system get security manager", "if $ r1 == null goto label1", "r6 = new org apache deltaspike core util class utils $ get class loader action", "specialinvoke r6 < init > r0", "r7 = java security privilege action r6", "$ r4 = java security access controller do privilege r7", "$ r5 = java lang class loader $ r4", "return $ r5", "if $ r1 == null goto label1", "label $ r2 = org apache deltaspike core util class utils get class loader internal r0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache deltaspike core util project stage producer config_setting_keys", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r1 [ i1 ]", "r3 = org apache deltaspike core api config config resolver get property value r2", "if r3 == null goto label2", "$ z0 = r3 be empty", "if $ z0 ! = 0 goto label2", "$ r4 = org apache deltaspike core api projectstage project stage value of r3", "return $ r4", "if $ z0 ! = 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get modifier", "$ z0 = java lang reflect modifier be static $ i0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get modifier", "$ z0 = java lang reflect modifier be abstract $ i0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new org dom4j bean bean attribute list", "r3 = org dom4j bean bean element r0", "specialinvoke r2 < init > r3", "r4 = java util list r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org dom4j bean bean meta data singleton cache", "$ r2 = $ r1 get r0", "r6 = org dom4j bean bean meta data $ r2", "if r6 ! = null goto label1", "$ r3 = new org dom4j bean bean meta data", "specialinvoke $ r3 < init > r0", "r6 = $ r3", "$ r4 = org dom4j bean bean meta data singleton cache", "$ r4 put r0 $ r3", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org dom4j datatype datatype element factory r0", "$ r3 = r5 attribute x s datatypes", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new org w3c dom d o m exception", "specialinvoke $ r0 < init > 9 \\ `` not support yet\\ ``", "throw $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j dtd attribute decl r0", "$ r1 = r2 element name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org dom4j dtd attribute decl r0", "r2 value default = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org dom4j dtd element decl r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org dom4j io dispatch handler r0", "r4 at root = 1", "r5 = org dom4j io dispatch handler r0", "r5 path = \\ `` \\ ``", "r6 = org dom4j io dispatch handler r0", "$ r1 = r6 path stack", "$ r1 clear", "r7 = org dom4j io dispatch handler r0", "$ r2 = r7 handler stack", "$ r2 clear", "r8 = org dom4j io dispatch handler r0", "$ r3 = r8 handler", "$ r3 clear", "r9 = org dom4j io dispatch handler r0", "r9 default handler = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org dom4j io d o m document result r0", "$ r1 = r3 content handler", "$ r2 = $ r1 get document", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "r0 = javax xml parser s a x parser factory new instance", "r0 set validate z0", "r0 set namespace aware z1", "r1 = r0 new s a x parser", "$ r2 = r1 get x m l reader", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = new org dom4j dtd external entity decl", "specialinvoke r6 < init > r1 r2 r3", "r7 = org dom4j io s a x content handler r0", "$ z0 = r7 internal d t dsubset", "if $ z0 == 0 goto label1", "r8 = org dom4j io s a x content handler r0", "$ z2 = r8 include internal d t d declaration", "if $ z2 == 0 goto label2", "r9 = org dom4j io s a x content handler r0", "r10 = org dom4j dtd decl r6", "r9 add d t d declaration r10", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r11 = org dom4j io s a x content handler r0", "$ z1 = r11 include external d t d declaration", "if $ z1 == 0 goto label2", "r12 = org dom4j io s a x content handler r0", "r13 = org dom4j dtd decl r6", "r12 add external d t d declaration r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org dom4j io s a x content handler r0", "$ r2 = r6 external d t d declaration", "if $ r2 ! = null goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = org dom4j io s a x content handler r0", "r7 external d t d declaration = r5", "label r8 = org dom4j io s a x content handler r0", "$ r3 = r8 external d t d declaration", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r21 = new org xml sax input source", "r20 = new java io file input stream", "specialinvoke r20 < init > r1", "specialinvoke r21 < init > r20", "r24 = org dom4j io s a x reader r0", "$ r5 = r24 encode", "if $ r5 == null goto label2", "r25 = org dom4j io s a x reader r0", "$ r11 = r25 encode", "r21 set encode $ r11", "label r16 = r1 get absolute path", "if r16 == null goto label4", "r22 = new java lang string buffer", "specialinvoke r22 < init > \\ `` file \\ ``", "$ r7 = java io file separator", "$ z0 = r16 start with $ r7", "if $ z0 ! = 0 goto label3", "r22 append \\ `` \\ ``", "label r17 = r16 replace 92 47", "r22 append r17", "$ r9 = r22 to string", "r21 set system id $ r9", "label r26 = org dom4j io s a x reader r0", "$ r18 = r26 read r21", "label return $ r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org dom4j io s a x reader r0", "r2 encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org dom4j io s a x content handler", "r6 = org dom4j io s a x reader r0", "$ r3 = r6 get document factory", "r7 = org dom4j io s a x reader r0", "$ r4 = r7 dispatch handler", "r8 = org dom4j element handler $ r4", "specialinvoke r5 < init > $ r3 r8", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org dom4j rule rule r0", "$ d0 = r1 priority", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org dom4j swing x m l table model r0", "r2 definition = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = org dom4j tree namespace stack r0", "$ r4 = r6 document factory", "$ r5 = $ r4 create q name r1 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 length", "if $ i0 ! = 0 goto label1", "return 0", "if $ i0 ! = 0 goto label1", "label $ i1 = r0 length", "$ i2 = $ i1 - 1", "$ c3 = r0 char at $ i2", "$ z0 = java lang character be whitespace $ c3", "return $ z0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org dom4j xpath default x path r0", "r2 sort r1 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = nl jqno equalsverifier internal reflection conditional instantiator r0", "$ r4 = r6 fully qualified class name", "r7 = nl jqno equalsverifier internal reflection conditional instantiator r0", "$ r5 = r7 call factory $ r4 r1 r2 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = nl jqno equalsverifier internal reflection superclass iterable r0", "$ r1 = specialinvoke r3 create class list", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data autodiscover alternate mailbox r0", "$ r1 = r2 server", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label2", "label return null", "if $ z0 == 0 goto label2", "label $ z1 = r0 end with \\ `` \\ ``", "if $ z1 == 0 goto label3", "$ i0 = r0 length", "$ i1 = $ i0 - 1", "r0 = r0 substring 0 $ i1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data autodiscover configuration configuration setting base r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data autodiscover protocol connection r0", "$ i0 = r1 port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return \\ `` http schema microsoft com exchange 2010 autodiscover autodiscover get domain settings\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = microsoft exchange webservices data core ew utility get namespace prefix r1", "r4 = microsoft exchange webservices data core ew utility get namespace uri r1", "r6 = microsoft exchange webservices data core ews service xml writer r0", "$ r5 = r6 xml writer", "$ r5 write start element r3 r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 get response code", "r1 = r0 get response content type", "r2 = r0 get response header", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append i0", "$ r5 = $ r4 append \\ `` \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` \\n\\ ``", "$ r8 = microsoft exchange webservices data core ew utility format http header r2", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` \\n\\ ``", "$ r11 = $ r10 to string", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ z0 = r0 be enum", "microsoft exchange webservices data core ew utility ews assert $ z0 \\ `` ews utility parse enum value list\\", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r8 append \\ `` [ \\ ``", "i1 = lengthof r3", "i2 = 0", "label if i2 > = i1 goto label2", "c3 = r3 [ i2 ]", "label if i2 > = i1 goto label2", "label $ r8 append \\ `` ] \\ ``", "$ r11 = $ r8 to string", "r23 = r2 split $ r11", "i4 = lengthof r23", "i5 = 0", "label if i5 > = i4 goto label7", "r5 = r23 [ i5 ]", "$ r12 = r0 get enum constant", "r6 = java lang enum [ ] $ r12", "i0 = lengthof r6", "i6 = 0", "label if i6 > = i0 goto label6", "r7 = r6 [ i6 ]", "$ r13 = r7 to string", "$ z1 = $ r13 equal r5", "if $ z1 == 0 goto label5", "r1 add r7", "label i6 = i6 + 1", "goto label4", "label if i6 > = i0 goto label6", "label i5 = i5 + 1", "goto label3", "label if i5 > = i4 goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data core ew xml reader r0", "r3 ensure current node be start element", "r2 = null", "r4 = microsoft exchange webservices data core ew xml reader r0", "$ z0 = r4 be empty element", "if $ z0 ! = 0 goto label1", "r5 = microsoft exchange webservices data core ew xml reader r0", "r2 = r5 read value r1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new microsoft exchange webservices data security xml node type", "specialinvoke r4 < init > 2", "r5 = microsoft exchange webservices data core ew xml reader r0", "specialinvoke r5 internal read element r1 r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data core ew xml reader r0", "$ r1 = r3 get namespace prefix", "r4 = microsoft exchange webservices data core ew xml reader r0", "$ r2 = r4 get local name", "r5 = microsoft exchange webservices data core ew xml reader r0", "r5 skip element $ r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = microsoft exchange webservices data core ew xml reader r0", "$ r1 = r4 present event", "z0 = $ r1 be start element", "r5 = microsoft exchange webservices data core ew xml reader r0", "$ r2 = r5 xml reader", "$ r3 = $ r2 peek", "z1 = $ r3 be end element", "if z0 == 0 goto label1", "if z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core exception service remote service response exception r0", "$ r1 = r2 response", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data core exchange server info r0", "$ i0 = r1 minor version", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = microsoft exchange webservices data core exchange server info r0", "r1 minor version = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = microsoft exchange webservices data core exchange server info r0", "r1 major build number = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = microsoft exchange webservices data core exchange service r0", "r6 = java util concurrent future r1", "$ r3 = microsoft exchange webservices data misc async request result extract service request r5 r6", "r2 = microsoft exchange webservices data core request unsubscribe request $ r3", "r2 end execute r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "microsoft exchange webservices data core ew utility validate param r1 \\ `` email address\\ ``", "r6 = new microsoft exchange webservices data core request get room request", "r7 = microsoft exchange webservices data core exchange service r0", "specialinvoke r6 < init > r7", "r6 set room list r1", "$ r4 = r6 execute", "$ r5 = $ r4 get room", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r4 = microsoft exchange webservices data core exchange service base r0", "r4 trace enable = z0", "r5 = microsoft exchange webservices data core exchange service base r0", "$ z1 = r5 trace enable", "if $ z1 == 0 goto label1", "r6 = microsoft exchange webservices data core exchange service base r0", "$ r1 = r6 trace listener", "if $ r1 ! = null goto label1", "r3 = new microsoft exchange webservices data misc ews trace listener", "specialinvoke r3 < init >", "r7 = microsoft exchange webservices data core exchange service base r0", "r8 = microsoft exchange webservices data misc i trace listener r3", "r7 trace listener = r8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core exchange service base r0", "r2 web proxy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core property bag r0", "$ r2 = r4 modify property", "$ z0 = $ r2 contain r1", "if $ z0 ! = 0 goto label1", "r5 = microsoft exchange webservices data core property bag r0", "$ r3 = r5 add property", "$ z1 = $ r3 contain r1", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = microsoft exchange webservices data core property bag r0", "$ r4 = r13 property", "$ r5 = $ r4 entry set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = java util map $ entry $ r6", "$ r7 = r3 get value", "$ z1 = $ r7 equal r1", "if $ z1 == 0 goto label2", "r14 = microsoft exchange webservices data core property bag r0", "$ r8 = r14 delete property", "$ r9 = r3 get key", "$ z2 = $ r8 contain key $ r9", "if $ z2 ! = 0 goto label2", "$ r10 = r3 get key", "$ r12 = microsoft exchange webservices data property definition property definition $ r10", "r15 = microsoft exchange webservices data core property bag r0", "$ r11 = r15 modify property", "microsoft exchange webservices data core property bag add to change list $ r12 $ r11", "r16 = microsoft exchange webservices data core property bag r0", "r16 change", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core property set r0", "specialinvoke r2 throw if readonly", "r3 = microsoft exchange webservices data core property set r0", "r3 base property set = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request add delegate request r0", "$ r1 = r2 delegate user", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return \\ `` folders\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request create request r0", "$ r1 = r2 parent folder id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request create request r0", "r2 parent folder id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request expand group request r0", "r2 email address = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request find request r0", "$ r1 = r2 parent folder id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request find request r0", "$ r1 = r2 query string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = microsoft exchange webservices data core request get delegate request r0", "r1 include permission = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request get request r0", "$ r1 = r2 property set", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request get user configuration request r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = microsoft exchange webservices data core request http client web request r0", "specialinvoke r7 throw if request be null", "r5 = new java io byte array output stream", "specialinvoke r5 < init >", "r8 = microsoft exchange webservices data core request http client web request r0", "$ r3 = r8 http post", "r6 = new microsoft exchange webservices data core request byte array o s request entity", "specialinvoke r6 < init > r5", "r9 = org apache http http entity r6", "$ r3 set entity r9", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data core request http client web request r0", "specialinvoke r3 throw if response be null", "r4 = microsoft exchange webservices data core request http client web request r0", "$ r1 = r4 response", "$ r2 = $ r1 get status line", "$ i0 = $ r2 get status code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data core request http web request r0", "$ z0 = r1 pre authenticate", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request http web request r0", "$ r1 = r2 request method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request play on phone request r0", "$ r1 = r2 item id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request resolve name request r0", "r2 name to resolve = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request set user oof setting request r0", "$ r1 = r2 oof setting", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request sync folder hierarchy request r0", "r2 sync folder id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core request update inbox rule request r0", "$ r1 = r2 mailbox smtp address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core request update item request r0", "r2 conflict resolution mode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core response get user oof setting response r0", "$ r1 = r2 oof setting", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data core response resolve name response r0", "$ r1 = r3 get error code", "$ r2 = microsoft exchange webservices data core enumeration misc error service error error name resolution no result", "if $ r1 == $ r2 goto label1", "specialinvoke r0 internal throw if necessary", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core response service response r0", "$ r2 = r5 result", "$ r1 = microsoft exchange webservices data core enumeration service service result error", "if $ r2 ! = $ r1 goto label1", "r4 = new microsoft exchange webservices data core exception service remote service response exception", "r6 = microsoft exchange webservices data core response service response r0", "specialinvoke r4 < init > r6", "r7 = java lang throwable r4", "throw r7", "if $ r2 ! = $ r1 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core response sync response r0", "$ r1 = r2 change", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data core service folder folder r0", "$ z0 = r3 be dirty", "if $ z0 == 0 goto label1", "r4 = microsoft exchange webservices data core service folder folder r0", "$ r1 = r4 get property bag", "$ z1 = $ r1 get be update call necessary", "if $ z1 == 0 goto label1", "r5 = microsoft exchange webservices data core service folder folder r0", "$ r2 = r5 get service", "r6 = microsoft exchange webservices data core service folder folder r0", "$ r2 update folder r6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service folder folder r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema folder schema parent folder id", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex folder id $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core service item appointment r0", "r2 internal create null null r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = microsoft exchange webservices data core service item appointment r0", "$ r1 = r2 internal accept 1 z0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item appointment r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema appointment schema end", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java util date $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item appointment r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema appointment schema be cancel", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang boolean $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item appointment r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema appointment schema organizer", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex email address $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item appointment r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema appointment schema optional attendee", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex attendee collection $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item appointment r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema appointment schema allow new time proposal", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r7 = microsoft exchange webservices data core service item contact r0", "$ r1 = r7 get service", "$ r2 = microsoft exchange webservices data core enumeration misc exchange version exchange2010", "microsoft exchange webservices data core ew utility validate method version $ r1 $ r2 \\ `` remove contact picture\\ ``", "r8 = microsoft exchange webservices data core service item contact r0", "$ r3 = r8 get property bag", "$ r4 = microsoft exchange webservices data core service schema contact schema attachment", "$ z0 = $ r3 be property loaded $ r4", "if $ z0 ! = 0 goto label1", "r6 = new microsoft exchange webservices data core exception service local property exception", "specialinvoke r6 < init > \\ `` the attachment collection must be load \\ ``", "r9 = java lang throwable r6", "throw r9", "if $ z0 ! = 0 goto label1", "label r10 = microsoft exchange webservices data core service item contact r0", "specialinvoke r10 internal remove contact picture", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema display name", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema middle name", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema email address", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex email address dictionary $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item contact r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema contact schema generation", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema job title", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item contact r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema contact schema profession", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item contact r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema contact schema spouse name", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema alias", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item contact r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema contact schema note", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item conversation r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema conversation schema unique recipient", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex string list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item conversation r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema conversation schema global have attachment", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang boolean $ r3", "$ z0 = $ r4 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item email message r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema email message schema cc recipient", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = microsoft exchange webservices data property complex email address collection $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item email message r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema email message schema conversation index", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = byte [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item email message r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema email message schema from", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item email message r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema email message schema be delivery receipt request", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang boolean $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item item r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema item schema be unmodified", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang boolean $ r3", "$ z0 = $ r4 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = microsoft exchange webservices data core service item item r0", "$ r2 = r4 get property bag", "$ r3 = microsoft exchange webservices data core service schema item schema item class", "$ r2 set object from property definition $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item meet request r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema appointment schema original start", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java util date $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item post item r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema post item schema post time", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java util date $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data core service item task r0", "$ r1 = r5 get property bag", "$ r2 = microsoft exchange webservices data core service schema task schema actual work", "$ r3 = $ r1 get object from property definition $ r2", "$ r4 = java lang integer $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data core service response accept meet invitation message r0", "$ z0 = r1 tentative", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = microsoft exchange webservices data core service schema item schema body", "r4 = microsoft exchange webservices data core service response post reply r0", "r5 = microsoft exchange webservices data property definition property definition base $ r1", "$ r2 = r4 get object from property definition r5", "$ r3 = microsoft exchange webservices data property complex message body $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = microsoft exchange webservices data core service schema item schema instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data core service schema service object schema r0", "specialinvoke r2 register property r1 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data core service service object info r0", "$ r2 = r3 on change list", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core simple property bag r0", "$ r1 = r2 add item", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data core simple property bag r0", "$ r2 = r3 item", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = microsoft exchange webservices data core simple property bag r0", "$ r3 = r6 item", "$ z0 = $ r3 contain key r1", "if $ z0 == 0 goto label1", "r7 = microsoft exchange webservices data core simple property bag r0", "$ r4 = r7 item", "$ r5 = $ r4 get r1", "r2 set param $ r5", "return 1", "if $ z0 == 0 goto label1", "label r2 set param null", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data core web proxy r0", "$ r1 = r2 host", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data credential w s security base credential r0", "$ r1 = r2 ews url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 load null", "r24 = new java util string tokenizer", "specialinvoke r24 < init > r1", "label $ z0 = r24 have more token", "if $ z0 == 0 goto label2", "r21 = r24 next token", "$ i0 = java lang integer parse int r21", "r29 = microsoft exchange webservices data dns dns srv record r0", "r29 priority = $ i0", "r3 = r24 next token", "$ i1 = java lang integer parse int r3", "r30 = microsoft exchange webservices data dns dns srv record r0", "r30 weight = $ i1", "r4 = r24 next token", "$ i2 = java lang integer parse int r4", "r31 = microsoft exchange webservices data dns dns srv record r0", "r31 port = $ i2", "r5 = r24 next token", "r32 = microsoft exchange webservices data dns dns srv record r0", "r32 target = r5", "goto label1", "if $ z0 == 0 goto label2", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new microsoft exchange webservices data misc availability attendee info", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc availability attendee info r0", "$ r1 = r2 attendee type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 1 goto label1", "if i0 < = 49 goto label2", "label r6 = new java lang illegal argument exception", "$ r2 = newarray java lang object [ 3 ]", "$ r2 [ 0 ] = \\ `` good suggestion threshold\\ ``", "$ r3 = java lang integer value of 1", "$ r2 [ 1 ] = $ r3", "$ r4 = java lang integer value of 49", "$ r2 [ 2 ] = $ r4", "$ r5 = java lang string format \\ `` % s must be between % d and % d \\", "specialinvoke r6 < init > $ r5", "throw r6", "if i0 < = 49 goto label2", "label r7 = microsoft exchange webservices data misc availability availability option r0", "r7 good suggestion threshold = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data misc availability availability option r0", "$ i0 = r1 maximum non work hour suggestion per day", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 30 goto label1", "if i0 < = 1440 goto label2", "label r6 = new java lang illegal argument exception", "$ r2 = newarray java lang object [ 4 ]", "$ r2 [ 0 ] = \\ `` % s must be between % d and % d \\ ``", "$ r2 [ 1 ] = \\ `` meeting duration\\ ``", "$ r3 = java lang integer value of 30", "$ r2 [ 2 ] = $ r3", "$ r4 = java lang integer value of 1440", "$ r2 [ 3 ] = $ r4", "$ r5 = java lang string format \\ `` % s % s % s % s\\", "specialinvoke r6 < init > $ r5", "throw r6", "if i0 < = 1440 goto label2", "label r7 = microsoft exchange webservices data misc availability availability option r0", "r7 meeting duration = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data misc availability availability option r0", "r2 detail suggestion window = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data misc availability get user availability result r0", "$ r1 = r5 suggestion response", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r6 = microsoft exchange webservices data misc availability get user availability result r0", "$ r2 = r6 suggestion response", "$ r2 throw if necessary", "r7 = microsoft exchange webservices data misc availability get user availability result r0", "$ r3 = r7 suggestion response", "$ r4 = $ r3 get suggestion", "return $ r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc availability legacy availability time zone time r0", "$ r1 = r2 delta", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data misc availability legacy availability time zone time r0", "$ i0 = r1 month", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "microsoft exchange webservices data core ew utility validate param r0 \\ `` oof reply\\ ``", "$ r1 = r0 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc availability time window r0", "$ r1 = r2 end time", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc calendar action result r0", "$ r1 = r2 meeting cancellation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc conversation action r0", "$ r1 = r2 action", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data misc conversation action r0", "r2 category = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data misc id alternate id r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc mobile phone r0", "$ r1 = r2 phone number", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc name resolution r0", "$ r1 = r2 mailbox", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc name resolution r0", "$ r1 = r2 contact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc soap fault detail r0", "$ r1 = r2 fault code", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data misc soap fault detail r0", "r2 fault code = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data misc soap fault detail r0", "r2 fault string = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data misc soap fault detail r0", "$ i0 = r1 line number", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data misc user configuration r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data notification stream subscription r0", "$ r1 = r3 get service", "r4 = microsoft exchange webservices data notification stream subscription r0", "$ r2 = r4 get id", "$ r1 unsubscribe $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data notification subscription error event args r0", "$ r1 = r2 exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex attachment r0", "$ r1 = r2 content type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r6 = microsoft exchange webservices data property complex attachment r0", "$ r1 = r6 get owner", "$ r2 = $ r1 get service", "$ r3 = microsoft exchange webservices data core enumeration misc exchange version exchange2010", "microsoft exchange webservices data core ew utility validate property version $ r2 $ r3 \\ `` be inline\\ ``", "r7 = microsoft exchange webservices data property complex attachment r0", "$ z1 = r7 be inline", "$ r4 = java lang boolean value of $ z1", "$ r5 = java lang boolean value of z0", "r8 = microsoft exchange webservices data property complex attachment r0", "$ z2 = r8 can set field value $ r4 $ r5", "if $ z2 == 0 goto label1", "r9 = microsoft exchange webservices data property complex attachment r0", "r9 be inline = z0", "r10 = microsoft exchange webservices data property complex attachment r0", "r10 change", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex attachment collection r0", "r1 internal clear", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex attendee collection r0", "r1 internal clear", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex availability work hour r0", "$ r1 = r2 day of the week", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex availability work hour r0", "$ l0 = r1 start time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex complex property collection r0", "$ r1 = r2 modify item", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z5 = 1", "goto label2", "label microsoft exchange webservices data core ew utility ews assert $ z5 \\ `` complex property collection internal remove\\", "r7 = microsoft exchange webservices data property complex complex property collection r0", "$ r2 = r7 item", "$ z0 = $ r2 remove r1", "if $ z0 == 0 goto label5", "r1 remove change event r0", "r8 = microsoft exchange webservices data property complex complex property collection r0", "$ r3 = r8 add item", "$ z1 = $ r3 contain r1", "if $ z1 ! = 0 goto label3", "r9 = microsoft exchange webservices data property complex complex property collection r0", "$ r6 = r9 remove item", "$ r6 add r1", "goto label4", "label r11 = microsoft exchange webservices data property complex complex property collection r0", "$ r5 = r11 modify item", "$ r5 remove r1", "r12 = microsoft exchange webservices data property complex complex property collection r0", "r12 change", "return 1", "if $ z1 ! = 0 goto label3", "label r10 = microsoft exchange webservices data property complex complex property collection r0", "$ r4 = r10 add item", "$ r4 remove r1", "if $ z0 == 0 goto label5", "label return 0", "if r1 == null goto label1", "label $ z5 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r10 = microsoft exchange webservices data property complex delegate permission r0", "$ r3 = r10 delegate folder permission", "$ r4 = $ r3 value", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r5 = r1 next", "r2 = microsoft exchange webservices data property complex delegate permission $ delegate folder permission $ r5", "$ r6 = r2 get permission level", "$ r7 = microsoft exchange webservices data core enumeration permission folder delegate folder permission level custom", "if $ r6 ! = $ r7 goto label2", "r9 = new microsoft exchange webservices data core exception service local service validation exception", "specialinvoke r9 < init > \\ `` this operation can\\'t be perform because one or more folder permission level be set to custom \\ ``", "r11 = java lang throwable r9", "throw r11", "if $ r6 ! = $ r7 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = microsoft exchange webservices data property complex delegate user r0", "r1 receive copy of meeting message = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex email address r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data property complex email address r0", "$ r2 = r3 address", "r4 = microsoft exchange webservices data property complex email address r0", "$ z0 = r4 can set field value $ r2 r1", "if $ z0 == 0 goto label1", "r5 = microsoft exchange webservices data property complex email address r0", "r5 address = r1", "r6 = microsoft exchange webservices data property complex email address r0", "r6 change", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data property complex email address r0", "$ r2 = r3 mailbox type", "r4 = microsoft exchange webservices data property complex email address r0", "$ z0 = r4 can set field value $ r2 r1", "if $ z0 == 0 goto label1", "r5 = microsoft exchange webservices data property complex email address r0", "r5 mailbox type = r1", "r6 = microsoft exchange webservices data property complex email address r0", "r6 change", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex email address r0", "$ r1 = r2 get address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex extend property r0", "$ r1 = r2 property definition", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex file attachment r0", "$ r1 = r2 content stream", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex folder id r0", "$ r1 = r2 mailbox", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex folder permission r0", "$ z0 = r1 be folder owner", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property complex item attachment r0", "specialinvoke r2 item change r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex manage folder information r0", "$ r1 = r2 home page", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex meeting time zone r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex meeting time zone r0", "$ r1 = r2 daylight", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data property complex physical address entry r0", "$ r2 = r3 property bag", "$ r2 set simple property bag \\ `` state\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data property complex physical address entry r0", "$ r2 = r3 property bag", "$ r2 set simple property bag \\ `` country or region\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "if r2 == null goto label1", "return r2", "if r2 == null goto label1", "label r7 = new microsoft exchange webservices data core exception service local service validation exception", "$ r5 = newarray java lang object [ 1 ]", "$ r5 [ 0 ] = r3", "$ r6 = java lang string format \\ `` the recurrence pattern\\ 's % s property must be specify \\", "specialinvoke r7 < init > $ r6", "r8 = java lang throwable r7", "throw r8"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = microsoft exchange webservices data property complex recurrence pattern recurrence r0", "$ r1 = r3 number of occurrence", "if $ r1 ! = null goto label1", "r4 = microsoft exchange webservices data property complex recurrence pattern recurrence r0", "$ r2 = r4 end date", "if $ r2 == null goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ r2 == null goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex recurrence pattern recurrence r0", "r1 number of occurrence = null", "r2 = microsoft exchange webservices data property complex recurrence pattern recurrence r0", "r2 end date = null", "r3 = microsoft exchange webservices data property complex recurrence pattern recurrence r0", "r3 change", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex rule r0", "$ z0 = r1 be not support", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = microsoft exchange webservices data property complex rule action r0", "$ z0 = r1 delete", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex rule action r0", "$ r1 = r2 server reply with message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex rule operation error r0", "$ r1 = r2 operation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex time absolute date transition r0", "$ r1 = r2 date time", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property complex time absolute date transition r0", "r2 date time = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex time time zone transition r0", "$ r1 = r2 target period", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data property complex time change r0", "r2 absolute date = r1", "if r1 == null goto label1", "r3 = microsoft exchange webservices data property complex time change r0", "r3 recurrence = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "microsoft exchange webservices data core ew utility validate param r0 \\ `` message body\\ ``", "$ r1 = r0 text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property complex unique body r0", "$ r1 = r2 body type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property definition indexed property definition r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property definition service object property definition r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = microsoft exchange webservices data search find folder result r0", "r1 more available = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data sync change r0", "$ r1 = r2 change type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data sync change r0", "$ r1 = r2 service object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new microsoft exchange webservices data property complex folder id", "specialinvoke r2 < init >", "r3 = microsoft exchange webservices data property complex service id r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = microsoft exchange webservices data util date time utils parse internal r0 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "entermonitor r1", "label r9 = org xhtmlrenderer css newmatch matcher r0", "r4 = specialinvoke r9 get mapper r1", "$ r7 = r4 get p e cascade style r1 r2", "exitmonitor r1", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org xhtmlrenderer css sheet stylesheet info r0", "$ r1 = r2 medium type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org xhtmlrenderer css sheet stylesheet info r0", "$ i0 = r1 origin", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org xhtmlrenderer css sheet stylesheet info r0", "$ r1 = r2 title", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org xhtmlrenderer simple graphics2 d renderer r0", "$ r2 = r3 panel", "$ r2 set share context r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r13 = org xhtmlrenderer simple graphics2 d renderer r0", "$ r1 = r13 panel", "$ r2 = $ r1 get prefer size", "if $ r2 == null goto label1", "r11 = new java awt rectangle", "r14 = org xhtmlrenderer simple graphics2 d renderer r0", "$ r7 = r14 panel", "$ r8 = $ r7 get prefer size", "$ d0 = $ r8 get width", "$ i2 = int $ d0", "r15 = org xhtmlrenderer simple graphics2 d renderer r0", "$ r9 = r15 panel", "$ r10 = $ r9 get prefer size", "$ d1 = $ r10 get height", "$ i3 = int $ d1", "specialinvoke r11 < init > 0 0 $ i2 $ i3", "return r11", "if $ r2 == null goto label1", "label r12 = new java awt rectangle", "r16 = org xhtmlrenderer simple graphics2 d renderer r0", "$ r4 = r16 panel", "$ i0 = $ r4 get width", "r17 = org xhtmlrenderer simple graphics2 d renderer r0", "$ r5 = r17 panel", "$ i1 = $ r5 get height", "specialinvoke r12 < init > 0 0 $ i0 $ i1", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org xhtmlrenderer swing delegate user agent r0", "$ r1 = r2 _image resource loader", "$ r1 shrink", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org xhtmlrenderer swing hover listener r0", "r1 _previously hover = null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "i0 = @ parameter3", "i1 = @ parameter4", "$ r5 = java util log level fine", "r11 = new java lang string buffer", "specialinvoke r11 < init >", "$ r6 = r11 append \\ `` queue load for image uri \\ ``", "$ r7 = $ r6 append r2", "$ r8 = $ r7 to string", "org xhtmlrenderer util x r log general $ r5 $ r8", "r13 = org xhtmlrenderer swing image load queue r0", "$ r10 = r13 _load queue", "r12 = new org xhtmlrenderer swing image load item", "specialinvoke r12 < init > r1 r2 r3 i0 i1", "$ r10 add last r12", "r0 notify all", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r8 = org xhtmlrenderer swing mouse tracker r0", "$ r2 = r8 _handlers", "$ z0 = $ r2 contain key r1", "if $ z0 == 0 goto label2", "r9 = org xhtmlrenderer swing mouse tracker r0", "$ r6 = r9 _handlers", "$ r6 remove r1", "label r10 = org xhtmlrenderer swing mouse tracker r0", "$ z1 = r10 _enabled", "if $ z1 == 0 goto label3", "r11 = org xhtmlrenderer swing mouse tracker r0", "$ r3 = r11 _handlers", "$ i0 = $ r3 size", "if $ i0 ! = 0 goto label3", "r12 = org xhtmlrenderer swing mouse tracker r0", "$ r4 = r12 _panel", "$ r4 remove mouse listener r0", "r13 = org xhtmlrenderer swing mouse tracker r0", "$ r5 = r13 _panel", "$ r5 remove mouse motion listener r0", "r14 = org xhtmlrenderer swing mouse tracker r0", "r14 _enabled = 0", "label return"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r7 = org xhtmlrenderer swing root panel r0", "$ r2 = r7 enclose scroll pane", "if $ r2 == null goto label1", "r8 = org xhtmlrenderer swing root panel r0", "$ r4 = r8 enclose scroll pane", "$ r5 = $ r4 get viewport border bound", "return $ r5", "if $ r2 == null goto label1", "label r9 = org xhtmlrenderer swing root panel r0", "r1 = r9 get size", "r6 = new java awt rectangle", "$ i1 = r1 width", "$ i0 = r1 height", "specialinvoke r6 < init > 0 0 $ i1 $ i0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "b0 = @ parameter1", "r1 = org xhtmlrenderer util configuration value for r0", "if r1 ! = null goto label1", "return b0", "if r1 ! = null goto label1", "label $ r3 = java lang byte value of r1", "b1 = $ r3 byte value", "label goto label4", "label return b1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "label $ r3 = java lang system out", "$ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "$ r4 = $ r2 append \\ `` byte \\ ``", "$ i0 = org xhtmlrenderer util configuration value a byte \\ `` xr test-config-byte\\", "$ r5 = java lang string value of $ i0", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "$ r3 println $ r7", "$ r9 = java lang system out", "$ r8 = new java lang string buffer", "specialinvoke $ r8 < init >", "$ r10 = $ r8 append \\ `` short \\ ``", "$ i1 = org xhtmlrenderer util configuration value a short \\ `` xr test-config-short\\", "$ r11 = java lang string value of $ i1", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 to string", "$ r9 println $ r13", "$ r15 = java lang system out", "$ r14 = new java lang string buffer", "specialinvoke $ r14 < init >", "$ r16 = $ r14 append \\ `` int \\ ``", "$ i2 = org xhtmlrenderer util configuration value a int \\ `` xr test-config-int\\", "$ r17 = java lang string value of $ i2", "$ r18 = $ r16 append $ r17", "$ r19 = $ r18 to string", "$ r15 println $ r19", "$ r21 = java lang system out", "$ r20 = new java lang string buffer", "specialinvoke $ r20 < init >", "$ r22 = $ r20 append \\ `` long \\ ``", "$ l3 = org xhtmlrenderer util configuration value a long \\ `` xr test-config-long\\", "$ r23 = java lang string value of $ l3", "$ r24 = $ r22 append $ r23", "$ r25 = $ r24 to string", "$ r21 println $ r25", "$ r27 = java lang system out", "$ r26 = new java lang string buffer", "specialinvoke $ r26 < init >", "$ r28 = $ r26 append \\ `` float \\ ``", "$ f0 = org xhtmlrenderer util configuration value a float \\ `` xr test-config-float\\", "$ r29 = java lang string value of $ f0", "$ r30 = $ r28 append $ r29", "$ r31 = $ r30 to string", "$ r27 println $ r31", "$ r33 = java lang system out", "$ r32 = new java lang string buffer", "specialinvoke $ r32 < init >", "$ r34 = $ r32 append \\ `` double \\ ``", "$ d0 = org xhtmlrenderer util configuration value a double \\ `` xr test-config-double\\", "$ r35 = java lang string value of $ d0", "$ r36 = $ r34 append $ r35", "$ r37 = $ r36 to string", "$ r33 println $ r37", "$ r39 = java lang system out", "$ r38 = new java lang string buffer", "specialinvoke $ r38 < init >", "$ r40 = $ r38 append \\ `` boolean \\ ``", "$ z0 = org xhtmlrenderer util configuration be true \\ `` xr test-config-boolean\\", "$ r41 = java lang string value of $ z0", "$ r42 = $ r40 append $ r41", "$ r43 = $ r42 to string", "$ r39 println $ r43", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], []]}
{"nodes": ["f0 = @ parameter0", "$ r1 = new org xhtmlrenderer util f s image writer", "specialinvoke $ r1 < init > \\ `` jpg\\ ``", "$ r1 set write compression mode 2", "$ r1 set write compression type \\ `` jpeg\\ ``", "$ r1 set write compression quality f0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java awt color white", "org xhtmlrenderer util image util clear image r0 $ r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ z0 = r0 instanceof java awt image buffer image", "if $ z0 == 0 goto label1", "r2 = java awt image buffer image r0", "goto label2", "label return r2", "if $ z0 == 0 goto label1", "label $ i1 = r0 get width null", "$ i2 = r0 get height null", "r2 = org xhtmlrenderer util image util create compatible buffer image $ i1 $ i2 i0", "r1 = r2 create graphic", "r1 draw image r0 0 0 null null", "r1 dispose"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 format message r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 get tail r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "if i0 < = 2 goto label2", "label r8 = new java lang illegal argument exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` the metric set attribute must be in the set { 0,1,2 } and not \\'\\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 append \\ `` \\'\\ ``", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "throw r8", "if i0 < = 2 goto label2", "label r9 = org apache fontbox afm font metric r0", "r9 metric set = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox afm font metric r0", "$ r1 = r2 font name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox afm font metric r0", "$ r1 = r2 full name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox afm font metric r0", "$ i0 = r1 map scheme", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox afm font metric r0", "$ r1 = r2 character set", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox afm font metric r0", "$ r1 = r2 v vector", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache fontbox afm font metric r0", "r2 v vector = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox afm font metric r0", "$ f0 = r1 x height", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox afm font metric r0", "$ f0 = r1 italic angle", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox afm font metric r0", "$ r1 = r2 char width", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache fontbox afm font metric r0", "r2 track kern = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache fontbox afm font metric r0", "$ r2 = r3 track kern", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache fontbox afm font metric r0", "$ r2 = r3 composite", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache fontbox afm font metric r0", "r1 standard horizontal width = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox afm track kern r0", "$ f0 = r1 max kern", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox afm track kern r0", "$ f0 = r1 max point size", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox cff c f f c i d font r0", "$ r1 = r2 registry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache fontbox cff c f f operator name map", "$ r2 = $ r1 get r0", "$ r3 = org apache fontbox cff c f f operator $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache fontbox cff data input r0", "r1 buffer position = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache fontbox cff data input r0", "i0 = specialinvoke r3 read", "if i0 > = 0 goto label1", "r2 = new java io e o f exception", "specialinvoke r2 < init >", "throw r2", "if i0 > = 0 goto label1", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org apache fontbox cff data input r0", "i0 = specialinvoke r3 read", "r4 = org apache fontbox cff data input r0", "i1 = specialinvoke r4 read", "$ i2 = i0 | i1", "if $ i2 > = 0 goto label1", "r2 = new java io e o f exception", "specialinvoke r2 < init >", "throw r2", "if $ i2 > = 0 goto label1", "label $ i3 = i0 < < 8", "$ i4 = $ i3 | i1", "return $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache fontbox cff data output r0", "$ r2 = r3 output buffer", "$ i0 = lengthof r1", "$ r2 write r1 0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox cff type2 char string r0", "$ r1 = r2 type2sequence", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache fontbox cmap c map r0", "r2 cmap name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox cmap c map r0", "$ i0 = r1 supplement", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache fontbox encode encode r0", "$ r2 = r5 name to code", "$ r3 = $ r2 get r1", "$ r4 = java lang integer $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox ttf glyf composite comp r0", "$ d0 = r1 scale10", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "$ d1 = double i0", "r1 = org apache fontbox ttf glyf composite comp r0", "$ d0 = r1 scale01", "$ d5 = $ d1 * $ d0", "$ d3 = double i1", "r2 = org apache fontbox ttf glyf composite comp r0", "$ d2 = r2 yscale", "$ d4 = $ d3 * $ d2", "$ d6 = $ d5 + $ d4", "$ f0 = float $ d6", "$ i2 = java lang math round $ f0", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org apache fontbox ttf o s2 windows metric table r0", "$ i0 = r1 u default char", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache fontbox ttf true type font r0", "$ r1 = r3 get table \\ `` post\\ ``", "$ r2 = org apache fontbox ttf post script table $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache fontbox ttf true type font r0", "$ r1 = r3 get table \\ `` hhea\\ ``", "$ r2 = org apache fontbox ttf horizontal header table $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache fontbox ttf true type font r0", "$ r1 = r3 get table \\ `` hmtx\\ ``", "$ r2 = org apache fontbox ttf horizontal metric table $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org apache fontbox util charsets iso_8859_1", "r3 = org apache fontbox ttf t t f data stream r0", "$ r2 = r3 read string i0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache fontbox ttf t t f data stream r0", "$ i4 = r3 read", "l0 = long $ i4", "r4 = org apache fontbox ttf t t f data stream r0", "$ i5 = r4 read", "l1 = long $ i5", "r5 = org apache fontbox ttf t t f data stream r0", "$ i6 = r5 read", "l2 = long $ i6", "r6 = org apache fontbox ttf t t f data stream r0", "$ i7 = r6 read", "l3 = long $ i7", "$ b8 = l3 cmp 0l", "if $ b8 > = 0 goto label1", "r2 = new java io e o f exception", "specialinvoke r2 < init >", "throw r2", "if $ b8 > = 0 goto label1", "label $ l10 = l0 < < 24", "$ l9 = l1 < < 16", "$ l12 = $ l10 + $ l9", "$ l11 = l2 < < 8", "$ l14 = $ l12 + $ l11", "$ l13 = l3 < < 0", "$ l15 = $ l14 + $ l13", "return $ l15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox type1 type1 font r0", "$ r1 = r2 notice", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache fontbox type1 type1 font r0", "$ r1 = r2 family name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new org apache fontbox type1 type1 font", "specialinvoke r5 < init > r1 r2", "r6 = org apache fontbox type1 type1 parser r0", "r6 font = r5", "r7 = org apache fontbox type1 type1 parser r0", "specialinvoke r7 parse a s c i i r1", "$ i0 = lengthof r2", "if $ i0 < = 0 goto label1", "r8 = org apache fontbox type1 type1 parser r0", "specialinvoke r8 parse binary r2", "label r9 = org apache fontbox type1 type1 parser r0", "$ r4 = r9 font", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org objectweb fractal adl type type interface", "if $ z0 == 0 goto label1", "r1 = org objectweb fractal adl type type interface r0", "$ r2 = \\ `` optional\\ ``", "$ r3 = r1 get contingency", "$ z1 = $ r2 equal $ r3", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org objectweb fractal adl type type interface", "if $ z0 == 0 goto label1", "r1 = org objectweb fractal adl type type interface r0", "$ r2 = \\ `` collection\\ ``", "$ r3 = r1 get cardinality", "$ z1 = $ r2 equal $ r3", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "org objectweb fractal adl util printer log 2 r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["$ i0 = org objectweb fractal adl util printer level", "if $ i0 > 2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 > 2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = gate annotation annotation set impl r0", "$ r4 = r14 annots by id", "$ r5 = r1 get id", "$ r6 = $ r4 put $ r5 r1", "r2 = gate annotation $ r6", "if r2 == null goto label2", "r15 = gate annotation annotation set impl r0", "$ r10 = r15 annots by type", "if $ r10 == null goto label1", "r16 = gate annotation annotation set impl r0", "r16 remove from type index r2", "label r17 = gate annotation annotation set impl r0", "$ r11 = r17 annots by start node", "if $ r11 == null goto label2", "r18 = gate annotation annotation set impl r0", "r18 remove from offset index r2", "label r19 = gate annotation annotation set impl r0", "$ r12 = r19 annots by type", "if $ r12 == null goto label3", "r20 = gate annotation annotation set impl r0", "r20 add to type index r1", "label r21 = gate annotation annotation set impl r0", "$ r7 = r21 annots by start node", "if $ r7 == null goto label4", "r22 = gate annotation annotation set impl r0", "r22 add to start offset index r1", "label r13 = new gate event annotation set event", "r23 = gate annotation annotation set impl r0", "$ r9 = r23 doc", "r24 = gate document $ r9", "specialinvoke r13 < init > r0 201 r24 r1", "r25 = gate annotation annotation set impl r0", "r25 fire annotation add r13", "r26 = gate annotation annotation set impl r0", "r27 = gate event gate event r13", "r26 fire gate event r27", "if r2 == r1 goto label5", "$ z0 = 1", "goto label6", "label return $ z0", "if r2 == r1 goto label5", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "$ r5 = new java lang unsupported operation exception", "specialinvoke $ r5 < init >", "throw $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = gate config config xml handler r0", "$ r2 = r3 _seh", "$ r2 warn r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return 1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = gate corpus corpus impl r0", "$ r1 = r4 document list", "if $ r1 == null goto label1", "r5 = gate corpus corpus impl r0", "$ r2 = r5 document list", "$ z0 = $ r2 be empty", "if $ z0 ! = 0 goto label1", "r6 = gate corpus corpus impl r0", "$ r3 = r6 document list", "r7 = gate corpus corpus impl r0", "r7 add all $ r3", "label r8 = gate resource r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r7 = gate corpus document impl r0", "$ r1 = r7 default annots", "if $ r1 ! = null goto label1", "r5 = new gate annotation annotation set impl", "r8 = gate document r0", "specialinvoke r5 < init > r8 \\ `` \\ ``", "r9 = gate corpus document impl r0", "r10 = gate annotation set r5", "r9 default annots = r10", "r6 = new gate event document event", "r11 = gate document r0", "specialinvoke r6 < init > r11 101 \\ `` \\ ``", "r12 = gate corpus document impl r0", "r12 fire annotation set add r6", "label r13 = gate corpus document impl r0", "$ r2 = r13 default annots", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = gate document r0", "$ r1 = gate corpus document stax utils to xml r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate corpus mime type r0", "r2 type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = gate corpus mime type r0", "$ r1 = r2 subtype", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = gate corpus mime type r0", "$ r2 = r3 parameter", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = gate corpus serial corpus impl r0", "$ r1 = r6 doc data list", "$ i1 = $ r1 size", "if i0 < $ i1 goto label1", "return null", "if i0 < $ i1 goto label1", "label r7 = gate corpus serial corpus impl r0", "$ r2 = r7 doc data list", "$ r3 = $ r2 get i0", "$ r4 = gate corpus document data $ r3", "$ r5 = $ r4 get persistent i d", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 index of \\ `` < gate document\\ ``", "if $ i0 ! = -1 goto label1", "$ i1 = r0 index of \\ `` gate document\\ ``", "if $ i1 == -1 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ i1 == -1 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r9 = new gate creole execution exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r3 = r8 append \\ `` controller \\ ``", "$ r4 = r0 get class", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` hasn\\'t overriden the execute impl method\\ ``", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "r10 = java lang throwable r9", "throw r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole abstract language resource r0", "$ r1 = r2 lr persistent id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole abstract visual resource r0", "$ r1 = r2 feature", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate creole abstract visual resource r0", "r2 feature = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang runtime exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` class \\ ``", "$ r5 = r0 get class", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` hasn\\'t implement the set target method ! \\ ``", "$ r8 = $ r7 to string", "specialinvoke $ r2 < init > $ r8", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate creole abstract visual resource r0", "r2 handle = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = gate creole annic apache lucene document field r0", "r1 boost = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = gate creole annic apache lucene document field r0", "$ z0 = r1 be store", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole annic apache lucene index index reader r0", "$ r1 = r2 directory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole annic apache lucene search explanation r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = new java util array list", "specialinvoke r6 < init >", "r11 = gate creole annic apache lucene search index searcher r0", "r11 query type = r6", "r7 = new java util array list", "specialinvoke r7 < init >", "r12 = gate creole annic apache lucene search index searcher r0", "r12 first term position = r7", "r8 = new java util array list", "specialinvoke r8 < init >", "r13 = gate creole annic apache lucene search index searcher r0", "r13 document number = r8", "r9 = new java util array list", "specialinvoke r9 < init >", "r14 = gate creole annic apache lucene search index searcher r0", "r14 pattern length = r9", "r10 = new java util array list", "specialinvoke r10 < init >", "r15 = gate creole annic apache lucene search index searcher r0", "r15 frequency = r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new gate creole annic apache lucene search boolean query $ boolean weight", "r4 = gate creole annic apache lucene search boolean query r0", "specialinvoke r3 < init > r4 r1", "r5 = gate creole annic apache lucene search weight r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r22 = gate creole annic apache lucene search boolean query r0", "$ r4 = r22 clause", "$ i0 = $ r4 size", "if $ i0 ! = 1 goto label3", "r23 = gate creole annic apache lucene search boolean query r0", "$ r12 = r23 clause", "$ r13 = $ r12 element at 0", "r17 = gate creole annic apache lucene search boolean clause $ r13", "$ z2 = r17 prohibit", "if $ z2 ! = 0 goto label3", "$ r14 = r17 query", "r18 = $ r14 rewrite r1", "r24 = gate creole annic apache lucene search boolean query r0", "$ f0 = r24 get boost", "$ b1 = $ f0 cmpl 1 0f", "if $ b1 == 0 goto label2", "$ r15 = r17 query", "if r18 ! = $ r15 goto label1", "$ r16 = r18 clone", "r18 = gate creole annic apache lucene search query $ r16", "label r25 = gate creole annic apache lucene search boolean query r0", "$ f1 = r25 get boost", "$ f2 = r18 get boost", "$ f3 = $ f1 * $ f2", "r18 set boost $ f3", "label return r18", "if $ z2 ! = 0 goto label3", "label r19 = null", "i2 = 0", "label r26 = gate creole annic apache lucene search boolean query r0", "$ r20 = r26 clause", "$ i3 = $ r20 size", "if i2 > = $ i3 goto label7", "r27 = gate creole annic apache lucene search boolean query r0", "$ r5 = r27 clause", "$ r6 = $ r5 element at i2", "r2 = gate creole annic apache lucene search boolean clause $ r6", "$ r7 = r2 query", "r3 = $ r7 rewrite r1", "$ r8 = r2 query", "if r3 == $ r8 goto label6", "if r19 ! = null goto label5", "r28 = gate creole annic apache lucene search boolean query r0", "$ r11 = r28 clone", "r19 = gate creole annic apache lucene search boolean query $ r11", "label $ r10 = r19 clause", "r21 = new gate creole annic apache lucene search boolean clause", "$ z1 = r2 require", "$ z0 = r2 prohibit", "specialinvoke r21 < init > r3 $ z1 $ z0", "$ r10 set element at r21 i2", "label i2 = i2 + 1", "goto label4", "if i2 > = $ i3 goto label7", "label if r19 == null goto label8", "r29 = gate creole annic apache lucene search query r19", "return r29", "label if r19 == null goto label8", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [], [60], []]}
{"nodes": ["r0 = @ this", "r8 = gate creole annic apache lucene store f s directory r0", "$ i0 = r8 ref count", "$ i1 = $ i0 - 1", "r9 = gate creole annic apache lucene store f s directory r0", "r9 ref count = $ i1", "if $ i1 > 0 goto label5", "$ r3 = gate creole annic apache lucene store f s directory directory", "entermonitor $ r3", "label $ r5 = gate creole annic apache lucene store f s directory directory", "r10 = gate creole annic apache lucene store f s directory r0", "$ r4 = r10 directory", "$ r5 remove $ r4", "exitmonitor $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = gate creole annic apache lucene store r a m directory r0", "$ r3 = r5 file", "$ r4 = $ r3 get r1", "r2 = gate creole annic apache lucene store r a m file $ r4", "if r2 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r2 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = gate creole annic apache lucene util priority queue r0", "$ i1 = r4 size", "r5 = gate creole annic apache lucene util priority queue r0", "$ i0 = r5 max size", "if $ i1 > = $ i0 goto label1", "r6 = gate creole annic apache lucene util priority queue r0", "r6 put r1", "return 1", "if $ i1 > = $ i0 goto label1", "label r7 = gate creole annic apache lucene util priority queue r0", "$ i2 = r7 size", "if $ i2 < = 0 goto label2", "r8 = gate creole annic apache lucene util priority queue r0", "$ r2 = r8 top", "r9 = gate creole annic apache lucene util priority queue r0", "$ z0 = r9 less than r1 $ r2", "if $ z0 ! = 0 goto label2", "r10 = gate creole annic apache lucene util priority queue r0", "$ r3 = r10 heap", "$ r3 [ 1 ] = r1", "r11 = gate creole annic apache lucene util priority queue r0", "r11 adjust top", "if $ z0 ! = 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = gate creole annic apache lucene util priority queue r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole annic lucene lucene query result r0", "$ r1 = r2 gate annotation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang runtime exception", "specialinvoke $ r2 < init > \\ `` export result method be not implement yet ! \\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole annic lucene lucene search thread r0", "$ r1 = r2 query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate creole annic pattern annotation r0", "r2 type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate creole annic pattern annotation r0", "r2 text = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = gate creole annic pattern annotation r0", "$ r2 = r5 feature", "$ r3 = $ r2 get r1", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = gate creole annic pattern annotation r0", "$ i0 = r1 position", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate creole annotation schema r0", "r2 annotation name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = new org jdom input s a x builder", "specialinvoke r11 < init > 0", "label r8 = r11 build r1", "label goto label4", "label goto label6", "label r17 = gate creole annotation schema r0", "specialinvoke r17 work with j dom r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 resource unload r1", "$ r2 = r1 get resource", "r4 = gate creole conditional serial analyser controller r0", "$ r3 = r4 corpus", "if $ r2 ! = $ r3 goto label1", "r5 = gate creole conditional serial analyser controller r0", "r5 set corpus null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 cleanup", "r2 = gate creole conditional serial controller r0", "$ r1 = r2 strategy list", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = gate creole creole register impl r0", "$ r1 = r3 application type", "$ r2 = java util collection unmodifiable set $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = gate creole creole register impl r0", "$ r2 = specialinvoke r3 get v r for resource r1 1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole ir query result r0", "$ r1 = r2 field value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate creole parameter r0", "r2 help u r l = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole parameter list r0", "$ r1 = r2 runtime parameter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z2 = 0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "r7 = new java util array list", "specialinvoke r7 < init >", "$ r6 = r2 next", "r4 = gate creole parameter $ r6", "r7 add r4", "r8 = gate creole parameter list r0", "z2 = r8 add r7", "goto label1", "if $ z0 == 0 goto label2", "label return z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r3 = gate creole plugin r0", "$ r1 = r3 version", "if $ r1 ! = null goto label1", "$ r2 = \\ `` \\ ``", "goto label2", "label return $ r2", "if $ r1 ! = null goto label1", "label r4 = gate creole plugin r0", "$ r2 = r4 version"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole resource data r0", "$ r1 = r2 name", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole resource data r0", "$ r1 = r2 unmodifiable instantiation stack", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = gate creole resource data r0", "$ r2 = r3 instantiation stack", "$ r2 add 0 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate creole resource data r0", "r2 class name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole resource data r0", "$ r1 = r2 jar file url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole resource data r0", "$ r1 = r2 xml file url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate creole resource data r0", "$ r1 = r2 resource display", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = specialinvoke r0 add r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = gate document exporter r0", "$ r1 = r16 filter", "if $ r1 ! = null goto label1", "r15 = new gate util extension file filter", "r14 = new java lang string builder", "specialinvoke r14 < init >", "r17 = gate document exporter r0", "$ r5 = r17 file type", "$ r6 = r14 append $ r5", "$ r7 = $ r6 append \\ `` file * \\ ``", "r18 = gate document exporter r0", "$ r8 = r18 default extension", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 to string", "$ r12 = newarray java lang string [ 1 ]", "r19 = gate document exporter r0", "$ r13 = r19 default extension", "$ r12 [ 0 ] = $ r13", "specialinvoke r15 < init > $ r11 $ r12", "r20 = gate document exporter r0", "r21 = javax swing filechooser file filter r15", "r20 filter = r21", "label r22 = gate document exporter r0", "$ r2 = r22 filter", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = gate event corpus event r0", "$ r1 = r2 document l r i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate event datastore event r0", "$ r1 = r2 resource", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = gate factory create resource r0 r1 null null", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "gate factory check duplication context r1", "r2 = gate factory new feature map", "$ r5 = r0 entry set", "r3 = $ r5 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r6 = r3 next", "r4 = java util map $ entry $ r6", "r10 = r4 get value", "$ z1 = r10 instanceof gate resource", "if $ z1 == 0 goto label2", "$ r9 = gate resource r10", "r10 = gate factory duplicate $ r9 r1", "label $ r7 = r4 get key", "r2 put $ r7 r10", "goto label1", "if $ z0 == 0 goto label3", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["$ r0 = gate gate register i r engine", "$ r1 = java util collection unmodifiable set $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = gate gate know plugins", "$ z0 = $ r1 contain r0", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label $ r2 = gate gui creole manager plugin update manager get default plugins", "$ z1 = $ r2 contain r0", "if $ z1 == 0 goto label2", "label $ r3 = gate gate know plugins", "$ r3 add r0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r0 = gate gate user config file", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = gate gui corpus filler component r0", "$ r1 = r2 extension", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = gate gui docview abstract document view r0", "$ r1 = r2 document", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ z0 = r1 instanceof gate gui docview textual document view $ highlight data", "if $ z0 == 0 goto label1", "r6 = gate gui docview textual document view r0", "$ r2 = r6 text view", "$ r3 = $ r2 get highlighter", "$ r4 = gate gui docview textual document view $ highlight data r1", "$ r5 = $ r4 tag", "$ r3 change highlight $ r5 i0 i1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = r0 get feature", "r1 = $ r3 get \\ `` gate teamware input annotation sets\\ ``", "if r1 == null goto label1", "$ z0 = r1 instanceof java util set", "if $ z0 == 0 goto label1", "$ r7 = java util set r1", "return $ r7", "if $ z0 == 0 goto label1", "label $ r4 = new java util hash set", "specialinvoke $ r4 < init >", "$ r5 = r0 get feature", "$ r5 put \\ `` gate teamware input annotation sets\\", "gate gui teamware teamware utils populate input set name for controller $ r4 r0 1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = gate html neko html document handler r0", "r3 end element r1 r2 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return \\ `` datastore\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ r3 = new java util array list", "specialinvoke $ r3 < init >", "i6 = 0", "label $ i2 = r0 get maximum arity", "if i6 > = $ i2 goto label04", "$ i5 = i6 + 1", "r11 = newarray int [ $ i5 ]", "i7 = 0", "label if i7 > = i6 goto label03", "r11 [ i7 ] = -1", "i7 = i7 + 1", "goto label02", "label if i7 > = i6 goto label03", "label r11 [ i6 ] = i0", "$ r10 = r0 get relation r1 r11", "$ r3 add all $ r10", "i6 = i6 + 1", "goto label01", "if i6 > = $ i2 goto label04", "label $ r4 = new java util tree set", "specialinvoke $ r4 < init >", "$ r5 = java lang integer value of i0", "$ r4 add $ r5", "r13 = $ r3 iterator", "label $ z1 = r13 have next", "if $ z1 == 0 goto label08", "$ r8 = r13 next", "r14 = gate relation relation $ r8", "r15 = r14 get member", "i8 = lengthof r15", "i9 = 0", "label if i9 > = i8 goto label07", "i1 = r15 [ i9 ]", "$ r9 = java lang integer value of i1", "$ r4 add $ r9", "i9 = i9 + 1", "goto label06", "label if i9 > = i8 goto label07", "label goto label05", "if $ z1 == 0 goto label08", "label $ i3 = $ r4 size", "r16 = newarray int [ $ i3 ]", "i10 = 0", "r17 = $ r4 iterator", "label $ z2 = r17 have next", "if $ z2 == 0 goto label10", "$ r6 = r17 next", "$ r7 = java lang integer $ r6", "i11 = $ r7 int value", "$ i4 = i10", "i10 = i10 + 1", "r16 [ $ i4 ] = i11", "goto label09", "if $ z2 == 0 goto label10", "label return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = @ parameter0", "r8 = null", "$ z0 = r7 be show", "if $ z0 ! = 0 goto label1", "$ z2 = r7 instanceof javax swing j popup menu", "if $ z2 == 0 goto label1", "$ r6 = javax swing j popup menu r7", "r9 = $ r6 get invoker", "if r9 == null goto label1", "r7 = r9", "label $ z3 = r7 be show", "if $ z3 == 0 goto label4", "r10 = r7 get location on screen", "r8 = r7 get graphic configuration", "r1 = java awt graphic environment get local graphic environment", "r2 = r1 get screen device", "i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label4", "r3 = r2 [ i2 ]", "$ i1 = r3 get type", "if $ i1 ! = 0 goto label3", "r4 = r3 get default configuration", "$ r5 = r4 get bound", "$ z1 = $ r5 contain r10", "if $ z1 == 0 goto label3", "r8 = r4", "goto label4", "label return r8", "if $ z1 == 0 goto label3", "label i2 = i2 + 1", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = gate swing wait dialog r0", "$ r2 = r12 center box", "$ r2 remove all", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "r13 = gate swing wait dialog r0", "$ r8 = r13 center box", "$ r7 = r1 [ i1 ]", "$ r8 add $ r7", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r14 = gate swing wait dialog r0", "$ r3 = r14 center box", "$ r3 validate", "r15 = gate swing wait dialog r0", "r15 pack", "r16 = gate swing wait dialog r0", "r16 stop = 0", "r11 = new java lang thread", "$ r5 = java lang thread current thread", "$ r6 = $ r5 get thread group", "specialinvoke r11 < init > $ r6 r0 \\ `` wait dialog2\\ ``", "r11 set priority 10", "r11 start", "r17 = gate swing wait dialog r0", "r17 set visible 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = r1 exist", "if $ z0 == 0 goto label1", "specialinvoke r0 ensure file be visible r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = gate swing x j table r0", "r1 enable hiding column = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r5 = gate swing x j table r0", "$ r2 = r5 column data", "$ r3 = $ r2 get i0", "$ r4 = gate swing x j table $ column data $ r3", "$ r4 comparator = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = gate util abstract feature bearer r0", "r2 feature = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ z0 = gate util benchmark benchmarking enable", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i2 = 0", "label if i2 > = i0 goto label2", "$ r3 = gate util err err", "$ c1 = gate util err pad char", "$ r3 print $ c1", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label $ r1 = gate util err err", "$ r1 print r0", "$ r2 = gate util err err", "$ r2 flush", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["return \\ `` gate resources\\ ``"], "adj": [[]]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r2 = r1 get i d", "r3 = gate util gate class loader r0", "r3 forget class loader $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = gate util language analyser document processor r0", "$ r1 = r4 analyser", "r5 = gate resource $ r1", "gate factory delete resource r5", "r6 = gate util language analyser document processor r0", "$ r2 = r6 corpus", "if $ r2 == null goto label1", "r7 = gate util language analyser document processor r0", "$ r3 = r7 corpus", "r8 = gate resource $ r3", "gate factory delete resource r8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = gate util maven utils extra cache directory", "$ r1 add 0 r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = gate util r b tree map r0", "$ r3 = r5 root", "if $ r3 ! = null goto label1", "return null", "if $ r3 ! = null goto label1", "label r6 = gate util r b tree map r0", "r2 = specialinvoke r6 get ceil entry r1", "if r2 ! = null goto label2", "label $ r4 = r2 value", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["$ z0 = gate util tool unicode enable", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r1 = @ parameter0", "if r1 ! = null goto label1", "return 1", "if r1 ! = null goto label1", "label r2 = r1 trim", "$ z0 = r2 equal \\ `` \\ ``", "if $ z0 ! = 0 goto label2", "$ z1 = r2 equal \\ `` * \\ ``", "if $ z1 == 0 goto label3", "label return 1", "if $ z1 == 0 goto label3", "label $ r0 = gate main version", "$ i0 = gate util version comparator compare version $ r0 r2", "if $ i0 < 0 goto label4", "$ z2 = 1", "goto label5", "label return $ z2", "if $ i0 < 0 goto label4", "label $ z2 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new gate util xml x m l11 stream writer", "specialinvoke r3 < init > r1", "r4 = javax xml stream x m l stream writer r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = gate util xml x m l11 stream writer r0", "r1 write start document \\ `` 1 1\\ ``", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = gate utils string for r0 r1", "$ r3 = gate utils clean string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = gate simple annotation r1", "$ r2 = gate utils start r5", "$ l0 = $ r2 long value", "r6 = gate simple annotation r1", "$ r3 = gate utils end r6", "$ l1 = $ r3 long value", "$ r4 = gate utils get coextensive annotation worker r0 null $ l0 $ l1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r6 = gate simple annotation r1", "$ r3 = gate utils start r6", "$ l0 = $ r3 long value", "r7 = gate simple annotation r1", "$ r4 = gate utils end r7", "$ l1 = $ r4 long value", "$ r5 = gate utils get coextensive annotation worker r0 r2 $ l0 $ l1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = gate gate get creole register", "r12 = new gate creole plugin $ directory", "$ r4 = r0 to u r i", "$ r5 = $ r4 to u r l", "specialinvoke r12 < init > $ r5", "r15 = gate creole plugin r12", "$ r2 register plugin r15", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = com google googlejavaformat input output r0", "$ r1 = r4 line", "$ r2 = $ r1 get i0", "$ r3 = java lang string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com google googlejavaformat java java input r0", "$ r1 = r2 text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org graalvm home version create r1", "r3 = org graalvm home version r0", "$ i0 = r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org graalvm nativeimage image singleton lookup class \\ `` lorg graalvm nativeimage impl c type conversion support \\ ``", "$ r2 = org graalvm nativeimage impl c type conversion support $ r1", "$ r3 = $ r2 to c string r0", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "if i0 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = java lang thread current thread", "r1 = $ r4 get stack trace", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r0 [ i1 ]", "$ r5 = org graalvm nativeimage image singleton lookup class \\ `` lorg graalvm nativeimage impl runtime class initialization support \\ ``", "$ r7 = org graalvm nativeimage impl runtime class initialization support $ r5", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r8 = $ r6 append \\ `` from feature \\ ``", "$ r9 = org graalvm nativeimage host runtime class initialization get caller r1", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 to string", "$ r7 initialize at run time r3 $ r11", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i2 = 0", "label if i2 > = i0 goto label7", "r2 = r0 [ i2 ]", "$ z0 = r2 be array", "if $ z0 ! = 0 goto label2", "$ z1 = r2 be interface", "if $ z1 ! = 0 goto label2", "$ i1 = r2 get modifier", "$ z2 = java lang reflect modifier be abstract $ i1", "if $ z2 == 0 goto label3", "label $ r15 = new java lang illegal argument exception", "$ r16 = new java lang string builder", "specialinvoke $ r16 < init >", "$ r17 = $ r16 append \\ `` class \\ ``", "$ r18 = r2 get type name", "$ r19 = $ r17 append $ r18", "$ r20 = $ r19 append \\ `` can not be instantiate reflectively it must be a non-abstract instance type \\ ``", "$ r21 = $ r20 to string", "specialinvoke $ r15 < init > $ r21", "throw $ r15", "if $ z2 == 0 goto label3", "label $ r5 = newarray java lang class [ 0 ]", "r3 = r2 get declare constructor $ r5", "label goto label6", "label $ r6 = newarray java lang reflect executable [ 1 ]", "$ r6 [ 0 ] = r3", "org graalvm nativeimage host runtime reflection register $ r6", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], []]}
{"nodes": ["$ r0 = \\ `` buildtime\\ ``", "$ r1 = java lang system get property \\ `` org graalvm nativeimage imagecode\\ ``", "$ z0 = $ r0 equal $ r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org graalvm nativeimage image info in image code", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label $ r1 = org graalvm nativeimage impl image singleton support get", "$ z1 = $ r1 contain r0", "return $ z1"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["$ r0 = org graalvm nativeimage image singleton lookup class \\ `` lorg graalvm nativeimage impl process property support \\ ``", "$ r1 = org graalvm nativeimage impl process property support $ r0", "$ l0 = $ r1 get process i d", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org graalvm nativeimage image singleton lookup class \\ `` lorg graalvm nativeimage impl process property support \\ ``", "$ r2 = org graalvm nativeimage impl process property support $ r1", "$ z0 = $ r2 set argument vector program name r0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org graalvm option option descriptor r0", "$ r1 = r2 deprecation message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org graalvm polyglot context r0", "$ r2 = r3 impl", "$ z0 = $ r2 initialize language r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org graalvm polyglot context $ builder", "$ r2 = org graalvm polyglot context empty", "$ r2 get class", "specialinvoke $ r1 < init > $ r2 r0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org graalvm polyglot engine r0", "r1 close 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot instrument r0", "$ r1 = r3 impl", "$ r2 = $ r1 get id", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org graalvm polyglot instrument r0", "$ r2 = r4 impl", "$ r3 = $ r2 lookup r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org graalvm polyglot language r0", "$ r1 = r2 impl", "$ z0 = $ r1 be interactive", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot language r0", "$ r1 = r3 impl", "$ r2 = $ r1 get option", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r2 = org graalvm polyglot management management impl", "r3 = org graalvm polyglot management execution event r0", "$ r1 = r3 impl", "$ z0 = $ r2 be execution event root $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r2 = org graalvm polyglot management management impl", "r3 = org graalvm polyglot management execution listener r0", "$ r1 = r3 impl", "$ r2 close execution listener $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org graalvm polyglot polyglot exception r0", "$ r1 = r2 impl", "$ z0 = $ r1 be internal error", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org graalvm polyglot source get impl", "r3 = org graalvm polyglot source r0", "$ r2 = r3 impl", "$ i0 = $ r1 get length $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org graalvm polyglot source get impl", "r3 = org graalvm polyglot source r0", "$ r2 = r3 impl", "$ z0 = $ r1 have character $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org graalvm polyglot source get impl", "r3 = org graalvm polyglot source r0", "$ r2 = r3 impl", "$ i1 = $ r1 get line length $ r2 i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org graalvm polyglot source $ builder", "$ r3 = org graalvm polyglot source empty", "$ r3 get class", "specialinvoke $ r2 < init > $ r3 r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org graalvm polyglot source get impl", "$ r2 = $ r1 find mime type r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = org graalvm polyglot source section impl", "r3 = org graalvm polyglot source section r0", "$ r1 = r3 impl", "$ i0 = $ r2 get end line $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r2 = org graalvm polyglot source section impl", "r3 = org graalvm polyglot source section r0", "$ r1 = r3 impl", "$ i0 = $ r2 get char end index $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = org graalvm polyglot value r0", "$ r2 = r3 impl", "r4 = org graalvm polyglot value r0", "$ r1 = r4 receiver", "$ z0 = $ r2 remove array element $ r1 l0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot value r0", "$ r2 = r3 impl", "r4 = org graalvm polyglot value r0", "$ r1 = r4 receiver", "$ z0 = $ r2 be string $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org graalvm polyglot value r0", "$ r1 = r3 impl", "$ r2 = $ r1 get context", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang boolean value of 1", "r4 = graphql analysis query traverser r0", "specialinvoke r4 visit impl r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = graphql execution execution strategy r0", "$ r3 = r6 resolve field with info r1 r2", "$ r4 = execution strategy $ get field value__4 bootstrap $", "$ r5 = $ r3 then compose $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = graphql execution merge field r0", "$ r1 = r2 field", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = graphql execution input r0", "$ r1 = r2 locale", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 build", "r4 = graphql graph q l r0", "$ r3 = r4 execute $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 build", "r4 = graphql graph q l r0", "$ r3 = r4 execute async $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new graphql graph q l context $ builder", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = graphql language node parent tree r0", "$ r1 = r2 node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = graphql parser parser option default jvm parser option", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r10 = graphql schema field coordinate r0", "$ z0 = r10 system coordinate", "if $ z0 == 0 goto label3", "r11 = graphql schema field coordinate r0", "$ r5 = r11 field name", "if null == $ r5 goto label1", "r12 = graphql schema field coordinate r0", "$ r7 = r12 field name", "$ z1 = $ r7 start with \\ `` __\\ ``", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label $ r8 = field coordinate $ lambda_assert valid names_0__1 bootstrap $", "graphql assert assert true $ z2 $ r8", "r13 = graphql schema field coordinate r0", "$ r9 = r13 field name", "graphql assert assert valid name $ r9", "goto label4", "label return", "if $ z1 == 0 goto label1", "label $ z2 = 0", "if $ z0 == 0 goto label3", "label r14 = graphql schema field coordinate r0", "$ r1 = r14 type name", "graphql assert assert valid name $ r1", "r15 = graphql schema field coordinate r0", "$ r3 = r15 field name", "graphql assert assert valid name $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = graphql schema graph q l code registry r0", "$ r5 = r7 data fetcher map", "r8 = graphql schema graph q l code registry r0", "$ r4 = r8 system data fetcher map", "r9 = graphql schema graph q l code registry r0", "$ r3 = r9 default data fetcher factory", "$ r6 = graphql schema graph q l code registry get data fetcher impl r1 r2 $ r5 $ r4 $ r3", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = graphql schema graph q l enum type r0", "r2 = graphql schema graph q l enum type new enum r4", "r1 accept r2", "$ r3 = r2 build", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = graphql schema graph q l input object type r0", "r2 = graphql schema graph q l input object type new input object r4", "r1 accept r2", "$ r3 = r2 build", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = graphql schema graph q l schema r0", "$ r1 = r3 directives", "$ r2 = $ r1 get directive", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = graphql schema graph q l schema r0", "$ r1 = r3 schema directives", "$ r2 = $ r1 get directive", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = graphql schema graph q l schema r0", "r2 = graphql schema graph q l schema new schema r4", "r1 accept r2", "$ r3 = r2 build", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new graphql schema idl schema parser", "specialinvoke r6 < init >", "r2 = r6 build registry r1", "$ r4 = graphql schema idl un executable schema generator make un executable schema r2", "r7 = graphql schema idl schema printer r0", "$ r5 = r7 print $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = graphql type resolution environment r0", "$ r1 = r2 object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "graphql validation validator max_validation_errors = i0", "return"], "adj": [[1], [2], []]}
{"nodes": ["z0 = @ parameter0", "groovy grape grape disable checksum = z0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org codehaus groovy runtime invoker helper to string r1", "r3 = groovy io groovy print stream r0", "r3 print $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = new java lang string builder", "specialinvoke r6 < init >", "label r7 = groovy io line column reader r0", "i0 = r7 read", "if i0 ! = -1 goto label4", "$ i2 = r6 length", "if $ i2 ! = 0 goto label2", "$ r5 = null", "goto label3", "label return $ r5", "if $ i2 ! = 0 goto label2", "label $ r5 = r6 to string", "if i0 ! = -1 goto label4", "label c1 = char i0", "if c1 == 10 goto label6", "if c1 ! = 13 goto label5", "goto label6", "label $ r3 = r6 to string", "return $ r3", "if c1 ! = 13 goto label5", "label r6 append c1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [], [21], [22], []]}
{"nodes": ["org codehaus groovy runtime metaclass default meta class info set without custom metaclass creation handle 0", "groovy lang expando meta class creation handle enable", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = specialinvoke r0 pick method r1 r2", "if $ r3 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r3 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = groovy lang int range r0", "$ r1 = r2 get from", "$ i0 = $ r1 int value", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = @ parameter1", "r8 = groovy lang meta method r0", "r7 = r8 coerce argument to class r6", "label r9 = groovy lang meta method r0", "$ r3 = r9 invoke r1 r7", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = groovy lang proxy meta class r0", "$ r2 = r6 the class", "r7 = groovy lang proxy meta class r0", "$ r3 = r7 interceptor", "r8 = groovy lang proxy meta class r0", "$ r4 = proxy meta class $ lambda_invoke constructor_3__3 bootstrap $ r8 r1", "r9 = groovy lang proxy meta class r0", "$ r5 = specialinvoke r9 do call $ r2 \\ `` ctor\\", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "z0 = @ parameter4", "z1 = @ parameter5", "r10 = groovy lang proxy meta class r0", "$ r6 = r10 interceptor", "if null ! = $ r6 goto label1", "specialinvoke r0 set property r1 r2 r3 r4 z0 z1", "label r11 = groovy lang proxy meta class r0", "$ r7 = r11 interceptor", "$ z2 = $ r7 instanceof groovy lang property access interceptor", "if $ z2 == 0 goto label3", "r12 = groovy lang proxy meta class r0", "$ r8 = r12 interceptor", "r5 = groovy lang property access interceptor $ r8", "r5 before set r2 r3 r4", "r13 = groovy lang proxy meta class r0", "$ r9 = r13 interceptor", "$ z3 = $ r9 do invoke", "if $ z3 == 0 goto label2", "label goto label4", "label return", "if $ z2 == 0 goto label3", "label specialinvoke r0 set property r1 r2 r3 r4 z0 z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = groovy lang sequence r0", "$ r4 = r5 type", "if $ r4 == null goto label2", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "r3 = r2 next", "r6 = groovy lang sequence r0", "r6 check type r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "$ r7 = new groovy lang tuple7", "specialinvoke $ r7 < init > r0 r1 r2 r3 r4 r5 r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = groovy namespace q name r0", "$ r1 = r2 local part", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = groovy namespace q name r0", "$ r1 = r10 prefix", "$ z0 = $ r1 equal \\ `` \\ ``", "if $ z0 == 0 goto label1", "r11 = groovy namespace q name r0", "$ r8 = r11 local part", "goto label2", "label return $ r8", "if $ z0 == 0 goto label1", "label r9 = new java lang string builder", "specialinvoke r9 < init >", "r12 = groovy namespace q name r0", "$ r3 = r12 prefix", "$ r4 = r9 append $ r3", "$ r5 = $ r4 append 58", "r13 = groovy namespace q name r0", "$ r6 = r13 local part", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label2", "label $ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` invalid q name literal\\ ``", "throw $ r1", "if $ z0 == 0 goto label2", "label $ c1 = r0 char at 0", "if $ c1 ! = 123 goto label5", "i0 = r0 index of 125", "if i0 ! = -1 goto label3", "$ r7 = new java lang illegal argument exception", "specialinvoke $ r7 < init > \\ `` invalid q name literal\\ ``", "throw $ r7", "if i0 ! = -1 goto label3", "label $ i2 = r0 length", "$ i3 = $ i2 - 1", "if i0 ! = $ i3 goto label4", "$ r6 = new java lang illegal argument exception", "specialinvoke $ r6 < init > \\ `` invalid q name literal\\ ``", "throw $ r6", "if i0 ! = $ i3 goto label4", "label $ r3 = new groovy namespace q name", "$ r4 = r0 substring 1 i0", "$ i4 = i0 + 1", "$ r5 = r0 substring $ i4", "specialinvoke $ r3 < init > $ r4 $ r5", "return $ r3", "if $ c1 ! = 123 goto label5", "label $ r2 = new groovy namespace q name", "specialinvoke $ r2 < init > r0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "r1 = java util calendar get instance", "r1 set time r0", "$ r2 = r1 get time zone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java util date", "$ l0 = r0 to millisecond", "$ l1 = $ l0 + 1l", "specialinvoke $ r1 < init > $ l1", "$ r2 = groovy time time category get daylight saving offset $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = r0 get parameter", "$ r3 = r1 [ i0 ]", "r2 = $ r3 get origin type", "$ r4 = groovy transform stc closure signature hint pick generic type r2 i1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = groovy util charset toolkit r0", "r3 default charset = r1", "goto label2", "label return", "if r1 == null goto label1", "label $ r2 = groovy util charset toolkit get default system charset", "r4 = groovy util charset toolkit r0", "r4 default charset = $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = groovy util factory builder support r0", "$ r3 = r6 get explicit method", "$ r4 = $ r3 get r1", "$ r5 = groovy lang closure $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = groovy util factory builder support r0", "$ r2 = r5 local proxy builder", "$ r3 = $ r2 get", "r1 = groovy util factory builder support $ r3", "if r1 ! = null goto label1", "r6 = groovy util factory builder support r0", "$ r4 = r6 global proxy builder", "return $ r4", "if r1 ! = null goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = groovy util factory builder support r0", "r2 global proxy builder = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r11 = groovy util factory builder support r0", "$ r6 = r11 get proxy builder", "$ r7 = $ r6 get post instantiate delegate", "r4 = $ r7 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r8 = r4 next", "r5 = groovy lang closure $ r8", "$ r9 = newarray java lang object [ 3 ]", "$ r9 [ 0 ] = r0", "$ r9 [ 1 ] = r2", "$ r9 [ 2 ] = r3", "r5 call $ r9", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime default groovy method sum r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r11 = groovy util node r0", "r8 = r11 value", "r12 = groovy util node r0", "$ r2 = r12 value", "$ z0 = $ r2 instanceof groovy util node list", "if $ z0 == 0 goto label1", "r13 = groovy util node r0", "$ r7 = r13 value", "r1 = groovy util node list $ r7", "r8 = r1 clone", "label r10 = new groovy util node", "r14 = groovy util node r0", "$ r6 = r14 name", "r9 = new java util hash map", "r15 = groovy util node r0", "$ r5 = r15 attribute", "specialinvoke r9 < init > $ r5", "specialinvoke r10 < init > null $ r6 r9 r8", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 set parent null", "r3 = groovy util node r0", "$ r2 = groovy util node get parent list r3", "$ z0 = $ r2 remove r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = groovy util node r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = groovy util node r0", "$ z0 = specialinvoke r3 text be empty or null", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label r4 = groovy util node r0", "$ r1 = r4 text", "$ r2 = org codehaus groovy runtime string groovy method to big decimal $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r8 = null", "r9 = null", "r12 = groovy util node list r0", "r1 = r12 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label7", "r2 = r1 next", "r10 = null", "$ z1 = r2 instanceof java lang string", "if $ z1 == 0 goto label2", "r10 = java lang string r2", "goto label3", "label if r10 == null goto label6", "if r8 ! = null goto label4", "r8 = r10", "goto label6", "label goto label1", "if r8 ! = null goto label4", "label if r9 ! = null goto label5", "r11 = new java lang string builder", "specialinvoke r11 < init >", "r9 = r11", "r11 append r8", "label r9 append r10", "if $ z1 == 0 goto label2", "label $ z2 = r2 instanceof groovy util node", "if $ z2 == 0 goto label3", "$ r7 = groovy util node r2", "r10 = $ r7 text", "if $ z0 == 0 goto label7", "label if r9 == null goto label8", "$ r3 = r9 to string", "return $ r3", "label if r9 == null goto label8", "label if r8 == null goto label9", "return r8", "label if r8 == null goto label9", "label return \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r7 = r0", "label if r7 == null goto label5", "$ r4 = r7 get property", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r5 = r2 next", "r3 = org codehaus groovy ast property node $ r5", "$ r6 = r3 get name", "$ z1 = $ r6 equal r1", "if $ z1 == 0 goto label3", "$ z2 = r3 be static", "if $ z2 == 0 goto label3", "return r3", "if $ z2 == 0 goto label3", "label goto label2", "if $ z0 == 0 goto label4", "label r7 = r7 get super class", "goto label1", "label if r7 == null goto label5", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 ! = 0 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ i0 ! = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0", "$ r1 = r2 weight size", "$ l0 = $ r1 get", "$ l1 = java lang math max 0l $ l0", "return $ l1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache groovy util concurrent concurrentlinkedhashmap link deque r0", "$ r2 = r3 last", "if r1 == $ r2 goto label1", "r4 = org apache groovy util concurrent concurrentlinkedhashmap link deque r0", "r4 unlink r1", "r5 = org apache groovy util concurrent concurrentlinkedhashmap link deque r0", "r5 link last r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org codehaus groovy ast class node r0", "$ z0 = r1 synthetic public", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org codehaus groovy ast class node r0", "$ r5 = r8 get declare method r1", "r3 = $ r5 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r6 = r3 next", "r4 = org codehaus groovy ast method node $ r6", "$ r7 = r4 get parameter", "r9 = org codehaus groovy ast class node r0", "$ z1 = r9 parameter equal $ r7 r2", "if $ z1 == 0 goto label2", "return r4", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org codehaus groovy ast class node r0", "$ z0 = org apache groovy ast tool class node utils have possible static method r3 r1 r2 0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org codehaus groovy ast expr variable expression r0", "r1 use ref = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy ast class helper float_ t y p e", "if $ r1 ! = r0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 ! = r0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy ast class helper big decimal_ t y p e", "if r0 == $ r1 goto label1", "$ z0 = org codehaus groovy ast tool widen category be big int category r0", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 be derive from r1", "if $ z0 ! = 0 goto label1", "$ z1 = r0 implement interface r1", "if $ z1 == 0 goto label2", "label return 1", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof org codehaus groovy ast tool widen category $ low upper bound class node", "if $ z2 == 0 goto label6", "r2 = org codehaus groovy ast tool widen category $ low upper bound class node r1", "$ r5 = r2 get super class", "$ z3 = org codehaus groovy ast tool widen category implement interface or subclass of r0 $ r5", "if $ z3 == 0 goto label3", "return 1", "if $ z3 == 0 goto label3", "label r3 = r2 get interface", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label6", "r4 = r3 [ i1 ]", "$ z4 = r0 implement interface r4", "if $ z4 == 0 goto label5", "label i1 = i1 + 1", "goto label4", "label if i1 > = i0 goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "$ r2 = r1 get origin type", "r4 = org codehaus groovy classgen asm compile stack r0", "$ r3 = r4 define variable r1 $ r2 z0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org codehaus groovy classgen asm operand stack r0", "$ r1 = r3 stack", "i1 = $ r1 size", "i4 = i1 - 1", "label $ i2 = i1 - 1", "$ i3 = $ i2 - i0", "if i4 < = $ i3 goto label2", "r4 = org codehaus groovy classgen asm operand stack r0", "specialinvoke r4 pop with message i4", "i4 = i4 + -1", "goto label1", "if i4 < = $ i3 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r9 = org codehaus groovy control compilation unit r0", "$ r3 = r9 queue source", "$ z1 = $ r3 be empty", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label z0 = $ z2", "label r10 = org codehaus groovy control compilation unit r0", "$ r8 = r10 queue source", "$ z3 = $ r8 be empty", "if $ z3 ! = 0 goto label4", "r11 = org codehaus groovy control compilation unit r0", "$ r4 = r11 queue source", "$ r5 = $ r4 remove", "r1 = org codehaus groovy control source unit $ r5", "r2 = r1 get name", "r12 = org codehaus groovy control compilation unit r0", "$ r6 = r12 source", "$ r6 put r2 r1", "goto label3", "if $ z3 ! = 0 goto label4", "label if z0 == 0 goto label5", "r13 = org codehaus groovy control compilation unit r0", "r13 goto phase 1", "label return z0", "if $ z1 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy control compiler configuration r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org codehaus groovy control customizers secure a s t customizer r0", "$ r2 = r5 token blacklist", "if $ r2 == null goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` you be not allow to set both whitelist and blacklist\\ ``", "throw r4", "if $ r2 == null goto label1", "label r6 = org codehaus groovy control customizers secure a s t customizer r0", "r6 token whitelist = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org codehaus groovy control customizers secure a s t customizer r0", "$ r2 = r5 receiver black list", "if $ r2 == null goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` you be not allow to set both whitelist and blacklist\\ ``", "throw r4", "if $ r2 == null goto label1", "label r6 = org codehaus groovy control customizers secure a s t customizer r0", "r6 receiver white list = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy control error collector r0", "$ z0 = r2 have error", "if $ z0 == 0 goto label1", "r3 = org codehaus groovy control error collector r0", "$ r1 = r3 error", "$ i0 = $ r1 size", "goto label2", "label return $ i0", "if $ z0 == 0 goto label1", "label $ i0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org codehaus groovy control error collector r0", "$ r3 = r5 warning", "r6 = org codehaus groovy control error collector r0", "specialinvoke r6 write r1 r2 $ r3 \\ `` warning\\ ``", "r7 = org codehaus groovy control error collector r0", "$ r4 = r7 error", "r8 = org codehaus groovy control error collector r0", "specialinvoke r8 write r1 r2 $ r4 \\ `` error\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util object require non null r1", "$ r3 = org codehaus groovy control compiler configuration $ r2", "r4 = org codehaus groovy control process unit r0", "r4 configuration = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org codehaus groovy reflection reflection utils get call class 1", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "org codehaus groovy runtime array type utils check array type r0", "i0 = 0", "label $ z0 = r0 be array", "if $ z0 == 0 goto label2", "i0 = i0 + 1", "r0 = r0 get component type", "goto label1", "if $ z0 == 0 goto label2", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "label $ c1 = r0 [ i0 ]", "label return $ c1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "label $ z0 = r0 [ i0 ]", "label return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "f0 = @ parameter2", "label r0 [ i0 ] = f0", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r27 = org codehaus groovy runtime conversion handler r0", "$ r5 = r27 handle cache", "if $ r5 == null goto label01", "r28 = org codehaus groovy runtime conversion handler r0", "$ z2 = r28 be default method r2", "if $ z2 == 0 goto label01", "r29 = org codehaus groovy runtime conversion handler r0", "$ z3 = specialinvoke r29 default overridden r2", "if $ z3 ! = 0 goto label01", "r24 = org codehaus groovy vmplugin v m plugin factory get plugin", "r30 = org codehaus groovy runtime conversion handler r0", "$ r17 = r30 handle cache", "$ r18 = conversion handler $ lambda_invoke_0__1 bootstrap $ r24 r1", "r4 = $ r17 compute if absent r2 $ r18", "$ r19 = r24 invoke handle r4 r3", "return $ r19", "if $ z3 ! = 0 goto label01", "label r31 = org codehaus groovy runtime conversion handler r0", "$ z4 = r31 check method r2", "if $ z4 ! = 0 goto label09", "label $ r7 = r2 get declare class", "if $ r7 ! = class \\ `` lgroovy lang groovy object \\ `` goto label06", "$ r9 = \\ `` get meta class\\ ``", "$ r10 = r2 get name", "$ z0 = $ r9 equal $ r10", "if $ z0 == 0 goto label04", "r32 = org codehaus groovy runtime conversion handler r0", "$ r16 = specialinvoke r32 get meta class r1", "label return $ r16", "if $ z0 == 0 goto label04", "label $ r11 = \\ `` set meta class\\ ``", "$ r12 = r2 get name", "$ z1 = $ r11 equal $ r12", "if $ z1 == 0 goto label06", "$ r13 = r3 [ 0 ]", "$ r14 = groovy lang meta class $ r13", "r33 = org codehaus groovy runtime conversion handler r0", "$ r15 = specialinvoke r33 set meta class $ r14", "label return $ r15", "if $ z1 == 0 goto label06", "label r34 = org codehaus groovy runtime conversion handler r0", "$ r8 = r34 invoke custom r1 r2 r3", "label return $ r8", "if $ z4 ! = 0 goto label09", "label $ r6 = r2 invoke r0 r3", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "r3 = org codehaus groovy runtime conversion handler r0", "$ r1 = r3 delegate", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "org codehaus groovy runtime default groovy static method sleep impl l0 null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime invoker helper to array string r0 0 -1 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r0 write r1", "r0 flush", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java io object output stream", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label r0 write r1", "label org codehaus groovy runtime i o groovy method close with warn r0", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org codehaus groovy runtime i o groovy method $ 3", "specialinvoke r2 < init > r0", "r3 = java util iterator r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java io buffer reader", "$ r2 = new java io input stream reader", "specialinvoke $ r2 < init > r0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java io input stream reader", "specialinvoke $ r2 < init > r0", "$ r3 = org codehaus groovy runtime i o groovy method with reader $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org codehaus groovy runtime memoize l r u protection storage r0", "r5 remove r1", "r6 = org codehaus groovy runtime memoize l r u protection storage r0", "r6 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = org codehaus groovy runtime metaclass concurrent reader hash map r0", "$ r3 = r6 barrier lock", "entermonitor $ r3", "label r7 = org codehaus groovy runtime metaclass concurrent reader hash map r0", "$ r4 = r7 table", "exitmonitor $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == r2 goto label1", "$ z0 = r1 equal r2", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org codehaus groovy runtime metaclass concurrent reader hash map r0", "r1 = r4 entry set", "if r1 == null goto label1", "$ r2 = r1", "goto label2", "label r8 = java util set $ r2", "return r8", "if r1 == null goto label1", "label r3 = new org codehaus groovy runtime metaclass concurrent reader hash map $ entry set", "$ r2 = r3", "r5 = org codehaus groovy runtime metaclass concurrent reader hash map r0", "specialinvoke r3 < init > r5 null", "r6 = org codehaus groovy runtime metaclass concurrent reader hash map r0", "r7 = java util set r3", "r6 entry set = r7"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["z0 = @ parameter0", "org codehaus groovy runtime metaclass default meta class info orig byte = z0", "$ z1 = org codehaus groovy runtime metaclass default meta class info without custom handle", "if $ z1 == 0 goto label1", "$ z2 = org codehaus groovy runtime metaclass default meta class info orig byte", "if $ z2 == 0 goto label1", "$ z3 = 1", "goto label2", "label org codehaus groovy runtime metaclass default meta class info orig byte res = $ z3", "return", "if $ z2 == 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], []]}
{"nodes": ["z0 = @ parameter0", "org codehaus groovy runtime metaclass default meta class info orig long = z0", "$ z1 = org codehaus groovy runtime metaclass default meta class info without custom handle", "if $ z1 == 0 goto label1", "$ z2 = org codehaus groovy runtime metaclass default meta class info orig long", "if $ z2 == 0 goto label1", "$ z3 = 1", "goto label2", "label org codehaus groovy runtime metaclass default meta class info orig long res = $ z3", "return", "if $ z2 == 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], []]}
{"nodes": ["z0 = @ parameter0", "org codehaus groovy runtime metaclass default meta class info orig float = z0", "$ z1 = org codehaus groovy runtime metaclass default meta class info without custom handle", "if $ z1 == 0 goto label1", "$ z2 = org codehaus groovy runtime metaclass default meta class info orig float", "if $ z2 == 0 goto label1", "$ z3 = 1", "goto label2", "label org codehaus groovy runtime metaclass default meta class info orig float res = $ z3", "return", "if $ z2 == 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy runtime metaclass meta class registry impl r0", "$ r1 = r2 meta class creation handle", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org codehaus groovy runtime metaclass reflector loader r0", "r7 in define = 1", "$ i0 = lengthof r2", "r8 = org codehaus groovy runtime metaclass reflector loader r0", "r4 = r8 define class r1 r2 0 $ i0 r3", "r9 = org codehaus groovy runtime metaclass reflector loader r0", "$ r5 = r9 load class", "$ r5 put r1 r4", "r10 = org codehaus groovy runtime metaclass reflector loader r0", "r10 resolve class r4", "r11 = org codehaus groovy runtime metaclass reflector loader r0", "r11 in define = 0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org codehaus groovy reflection class info get class info r1", "$ r7 = r2 get meta class", "r3 = $ r7 get property", "$ r8 = new java util array list", "$ i0 = r3 size", "specialinvoke $ r8 < init > $ i0", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r9 append \\ `` \\n possible solution \\ ``", "r19 = r3 iterator", "label $ z0 = r19 have next", "if $ z0 == 0 goto label2", "$ r17 = r19 next", "r20 = groovy lang meta property $ r17", "$ r18 = new org codehaus groovy runtime method rank helper $ rankable field", "specialinvoke $ r18 < init > r0 r20", "$ r8 add $ r18", "goto label1", "if $ z0 == 0 goto label2", "label java util collection sort $ r8", "i2 = 0", "r21 = $ r8 iterator", "label $ z1 = r21 have next", "if $ z1 == 0 goto label7", "$ r11 = r21 next", "r6 = org codehaus groovy runtime method rank helper $ rankable field $ r11", "if i2 < = 5 goto label4", "goto label7", "label if i2 < = 0 goto label8", "$ r22 = $ r9 to string", "goto label9", "label return $ r22", "label if i2 < = 0 goto label8", "label $ r22 = \\ `` \\ ``", "if i2 < = 5 goto label4", "label $ r12 = r6 score", "$ i1 = $ r12 int value", "if $ i1 < = 30 goto label5", "label if i2 < = 0 goto label6", "$ r9 append \\", "label $ r13 = r6 f", "$ r14 = $ r13 get name", "$ r9 append $ r14", "i2 = i2 + 1", "goto label3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java io file input stream", "specialinvoke $ r2 < init > r0", "$ r3 = org codehaus groovy runtime i o groovy method new object input stream $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "$ r2 = java nio charset charset default charset", "$ r3 = $ r2 name", "org codehaus groovy runtime resource groovy method append r0 r1 $ r3 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org codehaus groovy runtime writable file", "specialinvoke r3 < init > r0 r1", "r4 = java io file r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "z1 = @ parameter3", "if z1 == 0 goto label1", "$ z3 = r0 exist", "if $ z3 ! = 0 goto label1", "$ z4 = 1", "goto label2", "label if z0 == 0 goto label4", "r10 = new java io file output stream", "specialinvoke r10 < init > r0 z0", "if $ z4 == 0 goto label3", "org codehaus groovy runtime resource groovy method write u t f16 bom if require r10 r1", "label r12 = new groovy io encode aware buffer writer", "r11 = new java io output stream writer", "specialinvoke r11 < init > r10 r1", "specialinvoke r12 < init > r11", "r16 = java io buffer writer r12", "return r16", "label if z0 == 0 goto label4", "label r13 = new java io file output stream", "specialinvoke r13 < init > r0", "if $ z4 == 0 goto label5", "org codehaus groovy runtime resource groovy method write u t f16 bom if require r13 r1", "label r15 = new groovy io encode aware buffer writer", "r14 = new java io output stream writer", "specialinvoke r14 < init > r13 r1", "specialinvoke r15 < init > r14", "r17 = java io buffer writer r15", "return r17", "if $ z3 ! = 0 goto label1", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org codehaus groovy runtime resource groovy method new input stream r0", "org codehaus groovy runtime i o groovy method each byte r2 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r2 = org codehaus groovy runtime resource groovy method new input stream r0", "org codehaus groovy runtime i o groovy method each byte r2 i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "r1 = @ parameter2", "r2 = r0 accept", "if z0 == 0 goto label1", "$ r3 = new java lang thread", "$ r4 = socket groovy method $ lambda_accept_0__1 bootstrap $ r2 r1", "specialinvoke $ r3 < init > $ r4", "$ r3 start", "goto label2", "label return r2", "if z0 == 0 goto label1", "label org codehaus groovy runtime socket groovy method invoke closure with socket r2 r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org codehaus groovy runtime string buffer writer r0", "$ r1 = r3 buffer", "$ c1 = char i0", "$ r1 append $ c1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org codehaus groovy syntax c s t node r0", "i0 = r1 size", "if i0 < = 1 goto label1", "$ i1 = i0 - 1", "return $ i1", "if i0 < = 1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "z0 = @ parameter1", "r2 = org codehaus groovy syntax c s t node r0", "r1 = r2 get i0", "if r1 ! = null goto label1", "if z0 == 0 goto label1", "r1 = org codehaus groovy syntax token null", "label r3 = org codehaus groovy syntax c s t node r1", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "org codehaus groovy tool file system compiler command line compile with error handle r0 1", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = new java io file", "r4 = org codehaus groovy tool javac raw java file object r0", "$ r2 = r4 uri", "specialinvoke r3 < init > $ r2", "$ z0 = r3 delete", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java lang boolean true", "r0 set node meta data \\ `` null check be processed\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org codehaus groovy transform stc type check context r0", "$ r2 = r3 enclose binary expression", "$ r2 add first r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org codehaus groovy transform stc type check context r0", "$ r1 = r3 enclose binary expression", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org codehaus groovy transform stc type check context r0", "$ r1 = r5 switch statement", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label r6 = org codehaus groovy transform stc type check context r0", "$ r2 = r6 switch statement", "$ r3 = $ r2 get first", "$ r4 = org codehaus groovy ast stmt switch statement $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org codehaus groovy transform stc type check context r0", "$ r1 = r3 switch statement", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org codehaus groovy transform stc type check context r0", "$ r1 = r4 enclose class node", "$ r2 = $ r1 remove first", "$ r3 = org codehaus groovy ast class node $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org codehaus groovy transform stc type check context r0", "$ r1 = r3 enclose class node", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org codehaus groovy transform stc type check context r0", "$ r1 = r3 enclose method call", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org codehaus groovy transform stc type check extension r0", "$ r3 = r4 type check visitor", "$ r3 store type r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = org codehaus groovy ast class helper map_type", "$ r3 = newarray org codehaus groovy ast class node [ 2 ]", "$ r3 [ 0 ] = r1", "$ r3 [ 1 ] = r2", "r6 = org codehaus groovy transform stc type check extension r0", "$ r5 = r6 parameterized type $ r4 $ r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label $ r2 = org codehaus groovy vmplugin v7 type helper get wrapper class r1", "if $ r2 ! = r0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ r2 ! = r0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r8 = @ parameter2", "r1 = r8 type", "$ r3 = r0 type", "r2 = $ r3 parameter type i0", "$ r4 = r1 return type", "if $ r4 ! = r2 goto label1", "$ r7 = r1 parameter type 0", "if $ r7 == r2 goto label2", "label $ r5 = r1 parameter type 0", "$ r6 = java lang invoke method type method type r2 $ r5", "r8 = r8 a type $ r6", "label $ r9 = newarray java lang invoke method handle [ 1 ]", "$ r9 [ 0 ] = r8", "$ r10 = java lang invoke method handle filter argument r0 i0 $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "java util object require non null r1", "$ r3 = plugin default groovy method $ be instance__1 bootstrap $ r1", "$ r4 = r0 filter $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 iterator", "$ r2 = org codehaus groovy vmplugin v8 plugin default groovy method stream $ r1", "$ r3 = java util stream collector to set", "$ r4 = $ r2 collect $ r3", "$ r5 = java util set $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "r2 = r0 get scheme", "$ r4 = \\ `` jrt\\ ``", "$ z1 = $ r4 equal r2", "if $ z1 == 0 goto label1", "r29 = java net uri create \\ `` jrt \\ ``", "$ r24 = new java lang string builder", "specialinvoke $ r24 < init >", "$ r25 = r0 get path", "$ r26 = $ r25 substring 1", "$ r27 = $ r24 append $ r26", "$ r28 = $ r27 append \\ `` \\ ``", "r30 = $ r28 to string", "goto label6", "label $ r18 = org codehaus groovy vmplugin v9 class finder find r29 r30 r1 z0", "return $ r18", "if $ z1 == 0 goto label1", "label $ r5 = \\ `` file\\ ``", "$ z2 = $ r5 equal r2", "if $ z2 == 0 goto label5", "r3 = java nio file path get r0", "$ r11 = newarray java nio file link option [ 0 ]", "$ z3 = java nio file file exist r3 $ r11", "if $ z3 ! = 0 goto label2", "$ r19 = new java lang illegal argument exception", "$ r20 = new java lang string builder", "specialinvoke $ r20 < init >", "$ r21 = $ r20 append r3", "$ r22 = $ r21 append \\ `` do not exist\\ ``", "$ r23 = $ r22 to string", "specialinvoke $ r19 < init > $ r23", "throw $ r19", "if $ z3 ! = 0 goto label2", "label $ r12 = newarray java nio file link option [ 0 ]", "$ z4 = java nio file file be directory r3 $ r12", "if $ z4 == 0 goto label3", "r29 = java net uri create \\ `` file \\ ``", "r30 = r3 to string", "goto label4", "label goto label6", "if $ z4 == 0 goto label3", "label $ r13 = new java lang string builder", "specialinvoke $ r13 < init >", "$ r14 = $ r13 append \\ `` jar\\ ``", "$ r15 = r0 to string", "$ r16 = $ r14 append $ r15", "$ r17 = $ r16 to string", "r29 = java net uri create $ r17", "r30 = \\ `` \\ ``", "if $ z2 == 0 goto label5", "label $ r6 = new java lang unsupported operation exception", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = $ r7 append r0", "$ r9 = $ r8 append \\ `` be not supported\\ ``", "$ r10 = $ r9 to string", "specialinvoke $ r6 < init > $ r10", "throw $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = r1 length", "if $ i0 < = 0 goto label1", "$ r5 = r1 to string", "r7 = groovy json default json generator r0", "$ z0 = r7 disable unicode escape", "r2 add json escape string $ r5 $ z0", "goto label2", "label return", "if $ i0 < = 0 goto label1", "label $ r3 = groovy json json output empty_string_chars", "r2 add char $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = new java text simple date format", "r11 = groovy json default json generator r0", "$ r6 = r11 date format", "r12 = groovy json default json generator r0", "$ r5 = r12 date locale", "specialinvoke r10 < init > $ r6 $ r5", "r13 = groovy json default json generator r0", "$ r7 = r13 timezone", "r10 set time zone $ r7", "$ r8 = r10 format r1", "r2 add quote $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = groovy json default json generator r0", "$ r4 = r6 converter", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = groovy json json generator $ converter $ r5", "$ z1 = r3 handle r1", "if $ z1 == 0 goto label2", "return r3", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = groovy json default json generator r0", "$ r4 = r6 exclude field type", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = java lang class $ r5", "$ z1 = r3 be assignable from r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = groovy json json delegate clone delegate and get content r1", "r4 = groovy json json builder r0", "r4 content = $ r2", "r5 = groovy json json builder r0", "$ r3 = r5 content", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = groovy json json slurper r0", "$ z0 = r1 chop", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache groovy json internal lazy value map r0", "$ r2 = r5 map", "if $ r2 ! = null goto label1", "r6 = org apache groovy json internal lazy value map r0", "specialinvoke r6 build map", "label r7 = org apache groovy json internal lazy value map r0", "$ r3 = r7 map", "r4 = $ r3 get r1", "r8 = org apache groovy json internal lazy value map r0", "specialinvoke r8 lazy chop if need r4", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new groovy util slurpersupport g path result $ 2", "r4 = groovy util slurpersupport g path result r0", "specialinvoke r3 < init > r4 r0 r1", "r5 = groovy util slurpersupport g path result r0", "r6 = groovy lang closure r3", "r5 replace node r6", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = groovy util slurpersupport g path result r0", "$ r1 = r3 text", "$ r2 = org codehaus groovy runtime string groovy method to boolean $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = groovy util slurpersupport node r0", "$ r2 = r3 child", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = new groovy lang groovy runtime exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` can\\'t call child node in the attribute \\ ``", "r9 = groovy util slurpersupport attribute r0", "$ r4 = r9 name", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "r10 = java lang throwable r8", "throw r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = groovy util xml parser r0", "$ z0 = r1 keep ignorable whitespace", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "groovy xml dom d o m category keep ignorable whitespace = z0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "z1 = @ parameter2", "$ r1 = groovy xml d o m builder parse r0 z0 z1 0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = groovy xml markup builder r0", "r1 omit empty attribute = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = groovy xml namespace r0", "$ r2 = r14 uri", "if $ r2 == null goto label2", "r15 = groovy xml namespace r0", "$ r4 = r15 uri", "$ i0 = $ r4 length", "if $ i0 < = 0 goto label2", "r16 = groovy xml namespace r0", "$ r5 = r16 prefix", "if $ r5 == null goto label1", "r11 = new groovy namespace q name", "r17 = groovy xml namespace r0", "$ r10 = r17 uri", "r18 = groovy xml namespace r0", "$ r9 = r18 prefix", "specialinvoke r11 < init > $ r10 r1 $ r9", "return r11", "if $ r5 == null goto label1", "label r12 = new groovy namespace q name", "r19 = groovy xml namespace r0", "$ r7 = r19 uri", "specialinvoke r12 < init > $ r7 r1", "return r12", "if $ i0 < = 0 goto label2", "label r13 = new groovy namespace q name", "specialinvoke r13 < init > r1", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [], [26], [27], [28], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "r0 = @ parameter2", "r1 = javax xml parser s a x parser factory new instance", "r1 set validate z1", "r1 set namespace aware z0", "r1 set schema r0", "$ r2 = r1 new s a x parser", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r4 = com google gson json null instance", "r5 = com google gson json element $ r4", "return r5", "if r1 ! = null goto label1", "label $ r2 = r1 get class", "r6 = com google gson gson r0", "$ r3 = r6 to json tree r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = com google gson gson builder r0", "r1 generate non executable json = 1", "r2 = com google gson gson builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com google gson gson builder r0", "$ r1 = r3 excluder", "$ r2 = $ r1 exclude field without expose annotation", "r4 = com google gson gson builder r0", "r4 excluder = $ r2", "r5 = com google gson gson builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com google gson gson builder r0", "r3 = com google gson field name strategy r1", "r2 field naming policy = r3", "r4 = com google gson gson builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = @ parameter0", "if r2 ! = null goto label1", "r2 = com google gson json null instance", "label r3 = com google gson json array r0", "$ r1 = r3 element", "$ r1 add r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r7 = com google gson json array r0", "$ r1 = r7 element", "$ i0 = $ r1 size", "if $ i0 ! = 1 goto label1", "r8 = com google gson json array r0", "$ r3 = r8 element", "$ r4 = $ r3 get 0", "$ r5 = com google gson json element $ r4", "$ z0 = $ r5 get a boolean", "return $ z0", "if $ i0 ! = 1 goto label1", "label r6 = new java lang illegal state exception", "specialinvoke r6 < init >", "throw r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "$ r2 = r0 get class", "$ r3 = $ r2 get simple name", "specialinvoke $ r1 < init > $ r3", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com google gson json object r0", "$ r2 = r5 member", "$ r3 = $ r2 get r1", "$ r4 = com google gson json array $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get type", "r3 = com google gson reflect type token r0", "$ z0 = r3 be assignable from $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com google gson json array r0", "$ r1 = r2 element", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == r1 goto label1", "if r0 == null goto label2", "$ z0 = r0 equal r1", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = com google common collect abstract multimap r0", "$ r1 = r3 a map", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com google common collect enum bi map r0", "$ r1 = r2 value type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 key", "$ r2 = com google common collect immutable multiset $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google common collect immutable sort map r0", "$ r1 = r2 key set", "r3 = com google common collect immutable set $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = com google common collect immutable sort set natural_empty_set", "r1 = com google common collect immutable sort set $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com google common collect order natural", "$ r3 = newarray java lang comparable [ 2 ]", "$ r3 [ 0 ] = r0", "$ r3 [ 1 ] = r1", "r5 = java util comparator $ r2", "$ r4 = com google common collect immutable sort set construct r5 2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common collect cartesian list create r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = com google common collect min max priority queue r0", "$ z0 = r4 be empty", "if $ z0 == 0 goto label1", "r3 = new java util no such element exception", "specialinvoke r3 < init >", "throw r3", "if $ z0 == 0 goto label1", "label r5 = com google common collect min max priority queue r0", "$ i0 = specialinvoke r5 get max element index", "r6 = com google common collect min max priority queue r0", "$ r1 = specialinvoke r6 remove and get $ i0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google common collect min max priority queue r0", "$ z0 = r2 be empty", "if $ z0 == 0 goto label1", "$ r1 = null", "goto label2", "label return $ r1", "if $ z0 == 0 goto label1", "label r3 = com google common collect min max priority queue r0", "$ i0 = specialinvoke r3 get max element index", "r4 = com google common collect min max priority queue r0", "$ r1 = r4 element data $ i0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com google common collect list a list r0 r1", "$ r3 = com google common collect order explicit $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common collect synchronize queue r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r2 = new com google common collect tree multiset", "$ r1 = com google common collect order natural", "r3 = java util comparator $ r1", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i5 = @ parameter1", "i0 = @ parameter2", "label if i5 > = i0 goto label4", "c1 = r1 char at i5", "r4 = com google common escape array base unicode escaper r0", "$ i2 = r4 replacement length", "if c1 > = $ i2 goto label2", "r5 = com google common escape array base unicode escaper r0", "$ r2 = r5 replacement", "$ r3 = $ r2 [ c1 ]", "if $ r3 ! = null goto label4", "label r6 = com google common escape array base unicode escaper r0", "$ c3 = r6 safe max char", "if c1 > $ c3 goto label4", "r7 = com google common escape array base unicode escaper r0", "$ c4 = r7 safe min char", "if c1 > = $ c4 goto label3", "goto label4", "label return i5", "if c1 > = $ c4 goto label3", "label i5 = i5 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = com google common escape array base unicode escaper r0", "$ i1 = r4 replacement length", "if i0 > = $ i1 goto label1", "r5 = com google common escape array base unicode escaper r0", "$ r3 = r5 replacement", "r1 = $ r3 [ i0 ]", "if r1 == null goto label1", "return r1", "if r1 == null goto label1", "label r6 = com google common escape array base unicode escaper r0", "$ i2 = r6 safe min", "if i0 < $ i2 goto label2", "r7 = com google common escape array base unicode escaper r0", "$ i3 = r7 safe max", "if i0 > $ i3 goto label2", "return null", "if i0 > $ i3 goto label2", "label r8 = com google common escape array base unicode escaper r0", "$ r2 = r8 escape unsafe i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r1 = @ parameter1", "r6 = com google common escape char escaper builder r0", "$ r2 = r6 map", "$ r3 = java lang character value of c0", "$ r4 = com google common base precondition check not null r1", "$ r2 put $ r3 $ r4", "r7 = com google common escape char escaper builder r0", "$ i1 = r7 max", "if c0 < = $ i1 goto label1", "r8 = com google common escape char escaper builder r0", "r8 max = c0", "label r9 = com google common escape char escaper builder r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = com google common eventbus dead event r0", "$ r1 = r2 source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com google common hash hash $ md5 holder md5", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 iterator", "$ z0 = r1 have next", "com google common base precondition check argument $ z0 \\ `` must be at least 1 hash code to combine \\ ``", "$ r6 = r1 next", "$ r7 = com google common hash hash code $ r6", "$ i0 = $ r7 bit", "$ i1 = $ i0 8", "r2 = newarray byte [ $ i1 ]", "r3 = r0 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label6", "$ r9 = r3 next", "r4 = com google common hash hash code $ r9", "r5 = r4 a byte", "$ i3 = lengthof r5", "$ i2 = lengthof r2", "if $ i3 ! = $ i2 goto label2", "$ z2 = 1", "goto label3", "label com google common base precondition check argument $ z2 \\ `` all hashcodes must have the same bit length \\ ``", "i8 = 0", "label $ i9 = lengthof r5", "if i8 > = $ i9 goto label5", "$ b5 = r2 [ i8 ]", "$ b4 = r5 [ i8 ]", "$ i6 = $ b5 + $ b4", "$ b7 = byte $ i6", "r2 [ i8 ] = $ b7", "i8 = i8 + 1", "goto label4", "if i8 > = $ i9 goto label5", "label goto label1", "if $ i3 ! = $ i2 goto label2", "label $ z2 = 0", "if $ z1 == 0 goto label6", "label $ r8 = com google common hash hash code from bytes no copy r2", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r4 = com google common hash hash input stream r0", "$ r1 = r4 in", "i0 = $ r1 read", "if i0 == -1 goto label1", "r5 = com google common hash hash input stream r0", "$ r2 = r5 hasher", "$ b1 = byte i0", "$ r2 put byte $ b1", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["$ r0 = com google common io base encode base16", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "com google common base precondition check not null r0", "com google common base precondition check not null r1", "if i1 > = 0 goto label1", "$ r4 = new java lang index out of bound exception", "specialinvoke $ r4 < init > \\ `` len be negative\\ ``", "throw $ r4", "if i1 > = 0 goto label1", "label i5 = 0", "label if i5 > = i1 goto label4", "$ i4 = i0 + i5", "$ i3 = i1 - i5", "i2 = r0 read r1 $ i4 $ i3", "if i2 ! = -1 goto label3", "goto label4", "label return i5", "if i2 ! = -1 goto label3", "label i5 = i5 + i2", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = com google common io closer create", "label r14 = com google common io char source r0", "$ r6 = r14 open buffer stream", "$ r7 = r1 register $ r6", "r12 = java io buffer reader $ r7", "r2 = com google common collect list new array list", "label $ r8 = r12 read line", "if $ r8 == null goto label3", "r2 add $ r8", "goto label2", "if $ r8 == null goto label3", "label r4 = com google common collect immutable list copy of r2", "label r1 close", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "com google common base precondition check not null r0", "com google common base precondition check not null r1", "$ r4 = new java io buffer reader", "$ r5 = new java io input stream reader", "$ r6 = new java io file input stream", "specialinvoke $ r6 < init > r0", "specialinvoke $ r5 < init > $ r6 r1", "specialinvoke $ r4 < init > $ r5", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r3 = new java io file", "$ r4 = java lang system get property \\ `` java io tmpdir\\ ``", "specialinvoke $ r3 < init > $ r4", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ l0 = java lang system current time millis", "$ r6 = $ r5 append $ l0", "$ r7 = $ r6 append \\ `` -\\ ``", "r1 = $ r7 to string", "i1 = 0", "label if i1 > = 10000 goto label3", "$ r17 = new java io file", "$ r18 = new java lang string builder", "specialinvoke $ r18 < init >", "$ r19 = $ r18 append r1", "$ r20 = $ r19 append i1", "$ r21 = $ r20 to string", "specialinvoke $ r17 < init > $ r3 $ r21", "$ z0 = $ r17 mkdir", "if $ z0 == 0 goto label2", "return $ r17", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = 10000 goto label3", "label $ r8 = new java lang illegal state exception", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` fail to create directory within 10000 attempt try \\ ``", "$ r11 = $ r10 append r1", "$ r12 = $ r11 append \\ `` 0 to \\ ``", "$ r13 = $ r12 append r1", "$ r14 = $ r13 append 9999", "$ r15 = $ r14 append 41", "$ r16 = $ r15 to string", "specialinvoke $ r8 < init > $ r16", "throw $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common io resource a byte source r0", "$ r2 = $ r1 read", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ z0 = com google common net host and port be valid port i0", "$ r2 = newarray java lang object [ 1 ]", "$ r3 = java lang integer value of i0", "$ r2 [ 0 ] = $ r3", "com google common base precondition check argument $ z0 \\ `` port out of range % s\\", "r1 = com google common net host and port from string r0", "$ z1 = r1 have port", "if $ z1 ! = 0 goto label1", "$ z3 = 1", "goto label2", "label $ r4 = newarray java lang object [ 1 ]", "$ r4 [ 0 ] = r0", "com google common base precondition check argument $ z3 \\ `` host have a port % s\\", "$ r5 = new com google common net host and port", "$ r6 = r1 host", "$ z2 = r1 have bracketless colon", "specialinvoke $ r5 < init > $ r6 i0 $ z2", "return $ r5", "if $ z1 ! = 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get address", "$ i0 = lengthof r1", "i6 = $ i0 - 1", "label if i6 < 0 goto label2", "$ b5 = r1 [ i6 ]", "if $ b5 ! = 0 goto label2", "r1 [ i6 ] = -1", "i6 = i6 + -1", "goto label1", "if $ b5 ! = 0 goto label2", "label if i6 < 0 goto label3", "$ z0 = 1", "goto label4", "label $ r2 = newarray java lang object [ 1 ]", "$ r2 [ 0 ] = r0", "com google common base precondition check argument $ z0 \\ `` decrementing % s would wrap \\", "$ b1 = r1 [ i6 ]", "$ i2 = $ b1 - 1", "$ b3 = byte $ i2", "r1 [ i6 ] = $ b3", "$ r3 = com google common net inet address bytes to inet address r1", "return $ r3", "label if i6 < 0 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r2 = com google common net internet domain name r0", "$ r1 = r2 part", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google common net internet domain name r0", "$ i0 = r1 public suffix index", "if $ i0 ! = 1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "label com google common net internet domain name from r0", "label return 1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r7 = com google common reflect class path r0", "$ r1 = r7 resource", "r8 = java lang iterable $ r1", "$ r2 = com google common collect fluent iterable from r8", "$ r3 = $ r2 filter class \\ `` lcom google common reflect class path $ class info \\ ``", "$ r4 = com google common reflect class path is_top_level", "$ r5 = $ r3 filter $ r4", "$ r6 = $ r5 to set", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = new com google common reflect type token $ type set", "r3 = com google common reflect type token r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "l0 = java lang double double to raw long bit d0", "$ r1 = com google common util concurrent atomic double updater", "$ l1 = $ r1 get and set r0 l0", "$ d1 = java lang double long bit to double $ l1", "return $ d1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = r1 monitor", "if $ r4 == r0 goto label1", "r7 = new java lang illegal monitor state exception", "specialinvoke r7 < init >", "throw r7", "if $ r4 == r0 goto label1", "label r8 = com google common util concurrent monitor r0", "r2 = r8 lock", "r2 lock interruptibly", "z2 = 0", "label $ z1 = r1 be satisfied", "z2 = $ z1", "label if $ z1 ! = 0 goto label4", "r2 unlock", "label return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 monitor", "if $ r2 ! = r0 goto label1", "$ z3 = 1", "goto label2", "label r6 = com google common util concurrent monitor r0", "$ r3 = r6 lock", "$ z0 = $ r3 be hold by current thread", "$ z1 = $ z3 & $ z0", "if $ z1 ! = 0 goto label3", "r5 = new java lang illegal monitor state exception", "specialinvoke r5 < init >", "throw r5", "if $ z1 ! = 0 goto label3", "label $ z2 = r1 be satisfied", "if $ z2 ! = 0 goto label4", "r7 = com google common util concurrent monitor r0", "specialinvoke r7 await uninterruptibly r1 1", "label return", "if $ r2 ! = r0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["$ r0 = com google common collect immutable list of", "r2 = java lang iterable $ r0", "$ r1 = com google common collect fluent iterable from r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com google common base precondition check not null r1", "if r0 == r1 goto label1", "r7 = com google common hash bloom filter r0", "$ i1 = r7 num hash function", "$ i0 = r1 num hash function", "if $ i1 ! = $ i0 goto label1", "r8 = com google common hash bloom filter r0", "$ l2 = r8 bit size", "$ l3 = r1 bit size", "$ b4 = $ l2 cmp $ l3", "if $ b4 ! = 0 goto label1", "r9 = com google common hash bloom filter r0", "$ r4 = r9 strategy", "$ r3 = r1 strategy", "$ z0 = $ r4 equal $ r3", "if $ z0 == 0 goto label1", "r10 = com google common hash bloom filter r0", "$ r6 = r10 funnel", "$ r5 = r1 funnel", "$ z1 = $ r6 equal $ r5", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new javax crypto spec secret key spec", "$ r2 = com google common base precondition check not null r0", "$ r3 = byte [ ] $ r2", "specialinvoke $ r1 < init > $ r3 \\ `` hmac s h a256\\ ``", "$ r4 = com google common hash hash hmac sha256 $ r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = com google common io base encode base32", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "com google common base precondition check not null r0", "com google common base precondition check not null r1", "r2 = com google common io byte stream create buffer", "l2 = 0l", "label i0 = r0 read r2", "if i0 ! = -1 goto label2", "goto label3", "label return l2", "if i0 ! = -1 goto label2", "label r1 write r2 0 i0", "$ l1 = long i0", "l2 = l2 + $ l1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "$ r2 = java nio byte buffer allocate 88", "$ r3 = java nio byte order little_endian", "r1 = $ r2 order $ r3", "r8 = com google common math pair stats r0", "$ r4 = r8 x stats", "$ r4 write to r1", "r9 = com google common math pair stats r0", "$ r5 = r9 y stats", "$ r5 write to r1", "r10 = com google common math pair stats r0", "$ d0 = r10 sum of product of delta", "r1 put double $ d0", "$ r7 = r1 array", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["$ r0 = com google common math quantiles scale 2", "$ r1 = $ r0 index 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = com google common math quantiles scale 100", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common collect fluent iterable concat r0", "r2 = java lang iterable $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com google common base precondition check not null r1", "if r0 == r1 goto label1", "r7 = com google common hash bloom filter r0", "$ i1 = r7 num hash function", "$ i0 = r1 num hash function", "if $ i1 ! = $ i0 goto label1", "r8 = com google common hash bloom filter r0", "$ l2 = r8 bit size", "$ l3 = r1 bit size", "$ b4 = $ l2 cmp $ l3", "if $ b4 ! = 0 goto label1", "r9 = com google common hash bloom filter r0", "$ r4 = r9 strategy", "$ r3 = r1 strategy", "$ z0 = $ r4 equal $ r3", "if $ z0 == 0 goto label1", "r10 = com google common hash bloom filter r0", "$ r6 = r10 funnel", "$ r5 = r1 funnel", "$ z1 = $ r6 equal $ r5", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com google common base precondition check not null r1", "if r0 == r1 goto label1", "$ z2 = 1", "goto label2", "label com google common base precondition check argument $ z2 \\ `` can not combine a bloom filter with itself \\ ``", "r13 = com google common hash bloom filter r0", "$ i1 = r13 num hash function", "$ i0 = r1 num hash function", "if $ i1 ! = $ i0 goto label3", "$ z3 = 1", "goto label4", "label r14 = com google common hash bloom filter r0", "$ i3 = r14 num hash function", "$ i2 = r1 num hash function", "com google common base precondition check argument $ z3 \\ `` bloom filter must have the same number of hash function % s ! = % s \\", "r15 = com google common hash bloom filter r0", "$ l4 = r15 bit size", "$ l5 = r1 bit size", "$ b6 = $ l4 cmp $ l5", "if $ b6 ! = 0 goto label5", "$ z4 = 1", "goto label6", "label r16 = com google common hash bloom filter r0", "$ l7 = r16 bit size", "$ l8 = r1 bit size", "com google common base precondition check argument $ z4 \\ `` bloom filter must have the same size underlie bit array % s ! = % s \\", "r17 = com google common hash bloom filter r0", "$ r4 = r17 strategy", "$ r3 = r1 strategy", "$ z0 = $ r4 equal $ r3", "r18 = com google common hash bloom filter r0", "$ r6 = r18 strategy", "$ r5 = r1 strategy", "com google common base precondition check argument $ z0 \\ `` bloom filter must have equal strategy % s ! = % s \\", "r19 = com google common hash bloom filter r0", "$ r8 = r19 funnel", "$ r7 = r1 funnel", "$ z1 = $ r8 equal $ r7", "r20 = com google common hash bloom filter r0", "$ r10 = r20 funnel", "$ r9 = r1 funnel", "com google common base precondition check argument $ z1 \\ `` bloom filter must have equal funnel % s ! = % s \\", "r21 = com google common hash bloom filter r0", "$ r12 = r21 bit", "$ r11 = r1 bit", "$ r12 put all $ r11", "return", "if $ b6 ! = 0 goto label5", "label $ z4 = 0", "if $ i1 ! = $ i0 goto label3", "label $ z3 = 0", "if r0 == r1 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], []]}
{"nodes": ["r0 = @ this", "r5 = com google common net medium type r0", "$ r1 = r5 parameter", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "$ r4 = r0", "goto label2", "label r8 = com google common net medium type $ r4", "return r8", "if $ z0 == 0 goto label1", "label r6 = com google common net medium type r0", "$ r3 = r6 type", "r7 = com google common net medium type r0", "$ r2 = r7 subtype", "$ r4 = com google common net medium type create $ r3 $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r4 = com google common primitives immutable double array r0", "$ i2 = r4 length", "com google common base precondition check position index i0 i1 $ i2", "if i0 ! = i1 goto label1", "$ r2 = com google common primitives immutable double array empty", "goto label2", "label return $ r2", "if i0 ! = i1 goto label1", "label r3 = new com google common primitives immutable double array", "$ r2 = r3", "r5 = com google common primitives immutable double array r0", "$ r1 = r5 array", "r6 = com google common primitives immutable double array r0", "$ i3 = r6 start", "$ i6 = $ i3 + i0", "r7 = com google common primitives immutable double array r0", "$ i4 = r7 start", "$ i5 = $ i4 + i1", "specialinvoke r3 < init > $ r1 $ i6 $ i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r18 = com google common util concurrent abstract future r0", "r1 = r18 value", "$ z0 = r1 instanceof com google common util concurrent abstract future $ set future", "if $ z0 == 0 goto label1", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r10 = r16 append \\ `` set future= [ \\ ``", "$ r11 = com google common util concurrent abstract future $ set future r1", "$ r12 = $ r11 future", "$ r13 = $ r10 append $ r12", "$ r14 = $ r13 append \\ `` ] \\ ``", "$ r15 = $ r14 to string", "return $ r15", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof java util concurrent schedule future", "if $ z1 == 0 goto label2", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r3 = r17 append \\ `` remain delay= [ \\ ``", "$ r5 = java util concurrent schedule future r0", "$ r4 = java util concurrent time unit milliseconds", "$ l0 = $ r5 get delay $ r4", "$ r6 = $ r3 append $ l0", "$ r7 = $ r6 append \\ `` ms ] \\ ``", "$ r8 = $ r7 to string", "return $ r8", "if $ z1 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com google common collect abstract sort set multimap r0", "$ r2 = r3 get r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "com google common base precondition check not null r0", "if i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label com google common base precondition check argument $ z0", "r3 = new com google common collect iterables $ 3", "specialinvoke r3 < init > r0 i0", "r4 = java lang iterable r3", "return r4", "if i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "com google common base precondition check not null r0", "com google common base precondition check not null r1", "com google common base precondition check not null r2", "$ r6 = newarray java util iterator [ 3 ]", "$ r6 [ 0 ] = r0", "$ r6 [ 1 ] = r1", "$ r6 [ 2 ] = r2", "$ r7 = com google common collect iterators consume for array $ r6", "$ r8 = com google common collect iterators concat $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = com google common collect iterators partition impl r0 i0 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 value", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r2 = new com google common collect multisets $ immutable entry", "specialinvoke r2 < init > r0 i0", "r3 = com google common collect multiset $ entry r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "com google common base precondition check not null r0", "$ r2 = new java util array deque", "specialinvoke $ r2 < init > 20", "$ r3 = com google common io byte stream to byte array internal r0 $ r2 0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com google common collect fluent iterable r0", "$ r2 = specialinvoke r4 get delegate", "$ r3 = com google common collect iterables to array $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = com google inject configuration exception r0", "$ r3 = r8 partial value", "if $ r3 ! = null goto label1", "$ z0 = 1", "goto label2", "label r9 = com google inject configuration exception r0", "$ r4 = r9 partial value", "com google common base precondition check state $ z0 \\ `` can\\'t clobber exist partial value % s with % s\\", "r7 = new com google inject configuration exception", "r10 = com google inject configuration exception r0", "$ r6 = r10 message", "r11 = java lang iterable $ r6", "specialinvoke r7 < init > r11", "r7 partial value = r1", "return r7", "if $ r3 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = com google inject internal util line number r0", "$ r1 = r2 source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new com google inject matcher matcher $ annotate with", "specialinvoke r2 < init > r0", "r3 = com google inject matcher matcher r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new com google inject matcher matcher $ return", "specialinvoke r2 < init > r0", "r3 = com google inject matcher matcher r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com google inject multibindings map binder r0", "$ r2 = r4 delegate", "$ r3 = $ r2 add bind r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = com google common collect list new array list", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = com google inject spi injection point $ r5", "$ r6 = r3 get dependency", "r1 add all $ r6", "goto label1", "if $ z0 == 0 goto label2", "label $ r4 = com google common collect immutable set copy of r1", "r7 = java util set $ r4", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get annotation", "$ r3 = com google inject internal kotlin support get instance", "r2 = $ r3 get annotation r0", "$ i0 = lengthof r2", "if $ i0 ! = 0 goto label1", "return r1", "if $ i0 ! = 0 goto label1", "label $ r4 = com google common collect object array concat r1 r2 class \\ `` ljava lang annotation annotation \\ ``", "$ r5 = java lang annotation annotation [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com google inject spi injection request r0", "$ r1 = r2 instance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google inject spi type listener bind r0", "$ r1 = r2 type matcher", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r1 = new com google inject util module $ require exact binding annotation module", "specialinvoke r1 < init > null", "r2 = com google inject module r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 bnf sentence r0", "$ r1 = r2 table", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 bnf sentence r0", "$ r1 = r2 query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org h2 command ddl alter table add constraint r0", "r3 ref schema = r1", "r4 = org h2 command ddl alter table add constraint r0", "r4 ref table name = r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org h2 util string utils replace all r1 \\ `` \\", "r3 = org h2 command ddl create function alias r0", "r3 java class method = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org h2 util new array list", "r4 = org h2 command parser r0", "r4 parameter = $ r2", "r5 = org h2 command parser r0", "specialinvoke r5 initialize r1", "r6 = org h2 command parser r0", "specialinvoke r6 read", "r7 = org h2 command parser r0", "$ r3 = specialinvoke r7 read table or view", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 command prepare r0", "$ r1 = r2 sql statement", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org h2 util utils get property \\ `` h2 script directory\\", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org h2 constraint constraint referential r0", "$ i1 = r3 update action", "if i0 ! = $ i1 goto label1", "r4 = org h2 constraint constraint referential r0", "$ r2 = r4 update s q l", "if $ r2 ! = null goto label1", "return", "if $ r2 ! = null goto label1", "label r5 = org h2 constraint constraint referential r0", "$ i2 = r5 update action", "if $ i2 == 0 goto label2", "$ r1 = org h2 message db exception get 90045 \\ `` on update\\ ``", "r6 = java lang throwable $ r1", "throw r6", "if $ i2 == 0 goto label2", "label r7 = org h2 constraint constraint referential r0", "r7 update action = i0", "r8 = org h2 constraint constraint referential r0", "specialinvoke r8 build update s q l"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = org h2 constraint constraint unique r0", "r2 index = r1", "r3 = org h2 constraint constraint unique r0", "r3 index owner = z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 engine connection info r0", "r2 remote = 1", "r3 = org h2 engine connection info r0", "r3 persistent = 0", "r4 = org h2 engine connection info r0", "r4 name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = org h2 engine function alias r0", "specialinvoke r16 load", "i0 = lengthof r1", "r17 = org h2 engine function alias r0", "r2 = r17 java method", "i1 = lengthof r2", "i4 = 0", "label if i4 > = i1 goto label4", "r3 = r2 [ i4 ]", "i2 = r3 get parameter count", "if i2 == i0 goto label2", "$ z0 = r3 be var args", "if $ z0 == 0 goto label3", "$ i3 = i0 + 1", "if i2 > $ i3 goto label3", "label return r3", "if i2 > $ i3 goto label3", "label i4 = i4 + 1", "goto label1", "label if i4 > = i1 goto label4", "label r15 = new java lang string builder", "specialinvoke r15 < init >", "r18 = org h2 engine function alias r0", "$ r5 = r18 method name", "$ r6 = r15 append $ r5", "$ r7 = $ r6 append \\ `` \\ ``", "r19 = org h2 engine function alias r0", "$ r8 = r19 class name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\", "$ r11 = $ r10 append i0", "$ r12 = $ r11 append \\ `` \\ ``", "$ r13 = $ r12 to string", "$ r14 = org h2 message db exception get 90087 $ r13", "r20 = java lang throwable $ r14", "throw r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r15 = org h2 engine session r0", "specialinvoke r15 check commit rollback", "r16 = org h2 engine session r0", "$ r3 = r16 transaction", "if $ r3 == null goto label4", "r17 = org h2 engine session r0", "$ r7 = r17 transaction", "r14 = $ r7 get change map 0l", "r18 = org h2 engine session r0", "$ r8 = r18 database", "$ r9 = $ r8 get mv store", "$ r10 = $ r9 get table", "r1 = $ r10 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r12 = r1 next", "r2 = org h2 mvstore db m v table $ r12", "$ r13 = r2 get map name", "$ z1 = r14 contain $ r13", "if $ z1 == 0 goto label2", "r2 set modify", "label goto label1", "if $ z0 == 0 goto label3", "label r19 = org h2 engine session r0", "$ r11 = r19 transaction", "$ r11 rollback", "r20 = org h2 engine session r0", "r20 transaction = null", "label r21 = org h2 engine session r0", "r21 current transaction name = null", "z2 = 0", "r22 = org h2 engine session r0", "$ r4 = r22 undo log", "$ i0 = $ r4 size", "if $ i0 < = 0 goto label5", "r23 = org h2 engine session r0", "r23 rollback to null 0", "z2 = 1", "label r24 = org h2 engine session r0", "$ r5 = r24 lock", "$ i1 = $ r5 size", "if $ i1 > 0 goto label6", "if z2 == 0 goto label7", "label r25 = org h2 engine session r0", "$ r6 = r25 database", "r26 = org h2 engine session r0", "$ r6 commit r26", "label r27 = org h2 engine session r0", "specialinvoke r27 clean temp table 0", "r28 = org h2 engine session r0", "specialinvoke r28 unlock all", "r29 = org h2 engine session r0", "$ z3 = r29 auto commit at transaction end", "if $ z3 == 0 goto label8", "r30 = org h2 engine session r0", "r30 auto commit = 1", "r31 = org h2 engine session r0", "r31 auto commit at transaction end = 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r6 = org h2 engine session remote r0", "$ r2 = r6 trace", "$ r2 debug r1 \\ `` remove server because of exception\\ ``", "r7 = org h2 engine session remote r0", "$ r3 = r7 transfer list", "$ r3 remove i0", "r8 = org h2 engine session remote r0", "$ r5 = r8 transfer list", "$ i2 = $ r5 size", "if $ i2 ! = 0 goto label1", "r9 = org h2 engine session remote r0", "$ z0 = specialinvoke r9 auto reconnect i1", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r10 = org h2 engine session remote r0", "r10 check close", "r11 = org h2 engine session remote r0", "specialinvoke r11 switch off cluster"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r6 = org h2 engine session remote r0", "$ r2 = r6 trace", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label1", "r7 = org h2 engine session remote r0", "$ r4 = r7 trace", "$ r3 = newarray java lang object [ 2 ]", "$ r3 [ 0 ] = r1", "$ r5 = java lang integer value of i0", "$ r3 [ 1 ] = $ r5", "$ r4 debug \\ `` { 0 } { 1 } \\", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r5 = r17 append \\ `` \\ ``", "$ r6 = $ r5 append z0", "$ r7 = $ r6 to string", "r19 = org h2 engine setting base r0", "r2 = r19 get r1 $ r7", "label $ z1 = java lang boolean parse boolean r2", "label return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 expression expression r0", "$ r1 = r2 get alias", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org h2 expression expression visitor", "specialinvoke $ r1 < init > 7 0 r0 null null null null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 expression expression visitor r0", "$ r1 = r2 max data modification id", "$ l0 = $ r1 [ 0 ]", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 expression expression visitor r0", "$ r1 = r2 table", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org h2 fulltext full text setting r0", "$ r2 = r5 index", "$ i0 = r1 id", "$ r3 = java lang integer value of $ i0", "$ r2 put $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["z0 = @ parameter0", "$ r1 = new org h2 index index type", "specialinvoke $ r1 < init >", "$ r1 persistent = z0", "$ r1 scan = 1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 index page data overflow r0", "$ r1 = r2 store", "$ i0 = $ r1 get page size", "$ i1 = 120 + $ i0", "$ i2 = $ i1 > > 2", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "r2 = org h2 jdbc jdbc blob r0", "$ r1 = r2 unsupported \\ `` lob update\\ ``", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org h2 jdbc jdbc callable statement r0", "specialinvoke r2 check register i0", "r3 = org h2 jdbc jdbc callable statement r0", "$ r1 = specialinvoke r3 get open result set", "$ b1 = $ r1 get byte i0", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org h2 jdbc jdbc callable statement r0", "specialinvoke r3 check register i0", "r4 = org h2 jdbc jdbc callable statement r0", "$ r1 = specialinvoke r4 get open result set", "$ r2 = $ r1 get date i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org h2 jdbc jdbc callable statement r0", "specialinvoke r3 check register i0", "r4 = org h2 jdbc jdbc callable statement r0", "$ r1 = specialinvoke r4 get open result set", "$ r2 = $ r1 get time i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org h2 jdbc jdbc callable statement r0", "$ r1 = r2 unsupported \\ `` row id\\ ``", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org h2 jdbc jdbc callable statement r0", "$ r1 = r2 unsupported \\ `` sqlxml\\ ``", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r3 = org h2 jdbc jdbc callable statement r0", "$ i1 = specialinvoke r3 get index for name r1", "r4 = org h2 jdbc jdbc callable statement r0", "r4 set character stream $ i1 r2 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org h2 jdbc jdbc callable statement r0", "$ i0 = specialinvoke r3 get index for name r1", "r4 = org h2 jdbc jdbc callable statement r0", "r4 set object $ i0 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org h2 jdbc jdbc clob r0", "$ r1 = r2 unsupported \\ `` lob update\\ ``", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "r3 = org h2 jdbc jdbc clob r0", "$ r2 = r3 unsupported \\ `` lob update\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` all procedure be callable\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r9 = org h2 jdbc jdbc database meta data r0", "$ z0 = r9 be debug enabled", "if $ z0 == 0 goto label1", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r2 = r8 append \\ `` support convert \\ ``", "$ r3 = $ r2 append i0", "$ r4 = $ r3 append \\", "$ r5 = $ r4 append i0", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 to string", "r10 = org h2 jdbc jdbc database meta data r0", "r10 debug code $ r7", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support different table correlation names\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support group by beyond select\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support outer joins\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` be catalog at start\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support schema in procedure calls\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support position update\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` support open statement across commit\\ ``", "return 1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` do max row size include blobs\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get max column name length\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 jdbc jdbc database meta data r0", "r1 debug code call \\ `` get max procedure name length\\ ``", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org h2 jdbc jdbc s q l exception r0", "$ r1 = r4 stack trace", "if $ r1 ! = null goto label1", "$ r3 = specialinvoke r0 to string", "return $ r3", "if $ r1 ! = null goto label1", "label r5 = org h2 jdbc jdbc s q l exception r0", "$ r2 = r5 stack trace", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 jdbcx jdbc data source r0", "r2 debug code call \\ `` set log writer out \\ ``", "r3 = org h2 jdbcx jdbc data source r0", "r3 log writer = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 jdbcx jdbc data source r0", "r2 debug code call \\ `` get user\\ ``", "r3 = org h2 jdbcx jdbc data source r0", "$ r1 = r3 user name", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 jdbcx jdbc data source r0", "r2 debug code call \\ `` set user\\", "r3 = org h2 jdbcx jdbc data source r0", "r3 user name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r24 = org h2 jdbcx jdbc x a connection r0", "$ z0 = r24 be debug enabled", "if $ z0 == 0 goto label1", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r12 = r22 append \\ `` rollback \\ ``", "$ r13 = org h2 jdbcx jdbc xid to string r1", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` \\ ``", "$ r16 = $ r15 to string", "r25 = org h2 jdbcx jdbc x a connection r0", "r25 debug code $ r16", "label r26 = org h2 jdbcx jdbc x a connection r0", "$ r3 = r26 physical conn", "$ r3 rollback", "r27 = org h2 jdbcx jdbc x a connection r0", "$ r4 = r27 physical conn", "$ r4 set auto commit 1", "r28 = org h2 jdbcx jdbc x a connection r0", "$ z1 = r28 prepare", "if $ z1 == 0 goto label7", "r20 = null", "label r29 = org h2 jdbcx jdbc x a connection r0", "$ r5 = r29 physical conn", "r20 = $ r5 create statement", "r23 = new java lang string builder", "specialinvoke r23 < init >", "$ r7 = r23 append \\ `` rollback transaction \\ ``", "$ r8 = org h2 jdbcx jdbc xid to string r1", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 to string", "r20 execute $ r10", "label org h2 util jdbc utils close silently r20", "goto label6", "label r30 = org h2 jdbcx jdbc x a connection r0", "r30 prepare = 0", "label goto label9", "label r31 = org h2 jdbcx jdbc x a connection r0", "r31 current transaction = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r23 = org h2 jdbcx jdbc x a connection r0", "$ z0 = r23 be debug enabled", "if $ z0 == 0 goto label1", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r9 = r20 append \\ `` start \\ ``", "$ r10 = org h2 jdbcx jdbc xid to string r1", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 append \\", "$ r13 = org h2 jdbcx jdbc x a connection quote flag i0", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` \\ ``", "$ r16 = $ r15 to string", "r24 = org h2 jdbcx jdbc x a connection r0", "r24 debug code $ r16", "label if i0 ! = 134217728 goto label2", "return", "label if i0 ! = 134217728 goto label2", "label if i0 ! = 2097152 goto label3", "r25 = org h2 jdbcx jdbc x a connection r0", "$ r5 = r25 current transaction", "if $ r5 == null goto label4", "r26 = org h2 jdbcx jdbc x a connection r0", "$ r6 = r26 current transaction", "$ z1 = $ r6 equal r1", "if $ z1 ! = 0 goto label4", "r21 = new javax transaction xa x a exception", "specialinvoke r21 < init > -3", "throw r21", "if $ z1 ! = 0 goto label4", "label r28 = org h2 jdbcx jdbc x a connection r0", "$ r19 = r28 physical conn", "$ r19 set auto commit 0", "label goto label7", "label r29 = org h2 jdbcx jdbc x a connection r0", "r29 current transaction = r1", "r30 = org h2 jdbcx jdbc x a connection r0", "r30 prepare = 0", "label if i0 ! = 2097152 goto label3", "label r27 = org h2 jdbcx jdbc x a connection r0", "$ r3 = r27 current transaction", "if $ r3 == null goto label4", "r22 = new javax transaction xa x a exception", "specialinvoke r22 < init > -4", "throw r22"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org h2 message db exception r0", "r8 = r12 get s q l exception", "$ z0 = r8 instanceof org h2 jdbc jdbc s q l exception", "if $ z0 == 0 goto label2", "r2 = org h2 jdbc jdbc s q l exception r8", "$ r7 = r2 get s q l", "if $ r7 ! = null goto label1", "r2 set s q l r1", "label r13 = org h2 message db exception r0", "return r13", "if $ z0 == 0 goto label2", "label r10 = new org h2 jdbc jdbc s q l exception", "$ r4 = r8 get message", "$ r5 = r8 get s q l state", "$ i0 = r8 get error code", "specialinvoke r10 < init > $ r4 r1 $ r5 $ i0 r8 null", "r11 = new org h2 message db exception", "r14 = java sql s q l exception r10", "specialinvoke r11 < init > r14", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = newarray java lang string [ 2 ]", "if r1 ! = null goto label1", "$ r4 = \\ `` null\\ ``", "goto label2", "label $ r2 [ 0 ] = $ r4", "$ r2 [ 1 ] = r0", "$ r3 = org h2 message db exception get 90008 $ r2", "return $ r3", "if r1 ! = null goto label1", "label $ r4 = r1 to string"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org h2 message trace r0", "r1 trace level = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 message trace r0", "$ z0 = specialinvoke r1 be enable 3", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org h2 message trace r0", "$ z0 = specialinvoke r4 be enable 2", "if $ z0 == 0 goto label1", "r5 = org h2 message trace r0", "$ r3 = r5 trace writer", "r6 = org h2 message trace r0", "$ r2 = r6 module", "$ r3 write 2 $ r2 r1 null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org h2 message trace object id", "$ i1 = $ r0 [ i0 ]", "$ i2 = $ i1 + 1", "$ r0 [ i0 ] = $ i2", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` null\\ ``", "if r0 ! = null goto label1", "label $ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` org h2 util string utils convert hex to bytes \\\\\\ `` \\ ``", "$ r3 = org h2 util string utils convert byte to hex r0", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` \\\\\\ `` \\ ``", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 message db exception to s q l exception r1", "r6 = org h2 message trace object r0", "$ r3 = r6 trace", "if $ r3 ! = null goto label1", "org h2 message trace system trace throwable r2", "goto label3", "label return r2", "if $ r3 ! = null goto label1", "label i0 = r2 get error code", "if i0 < 23000 goto label2", "if i0 > = 24000 goto label2", "r7 = org h2 message trace object r0", "$ r5 = r7 trace", "$ r5 info r2 \\ `` exception\\ ``", "if i0 > = 24000 goto label2", "label r8 = org h2 message trace object r0", "$ r4 = r8 trace", "$ r4 error r2 \\ `` exception\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b3 = l0 cmp 0l", "if $ b3 < = 0 goto label1", "$ z0 = 1", "goto label2", "label $ r3 = newarray java lang object [ 1 ]", "$ r4 = java lang long value of l0", "$ r3 [ 0 ] = $ r4", "org h2 mvstore data utils check argument $ z0 \\ `` max memory must be large than 0 be { 0 } \\", "r7 = org h2 mvstore cache cache long key l i r s r0", "r7 max memory = l0", "r8 = org h2 mvstore cache cache long key l i r s r0", "$ r5 = r8 segment", "if $ r5 == null goto label4", "r9 = org h2 mvstore cache cache long key l i r s r0", "$ r6 = r9 segment", "$ i4 = lengthof $ r6", "$ l5 = long $ i4", "$ l6 = l0 $ l5", "l1 = 1l + $ l6", "r10 = org h2 mvstore cache cache long key l i r s r0", "r1 = r10 segment", "i2 = lengthof r1", "i7 = 0", "label if i7 > = i2 goto label4", "r2 = r1 [ i7 ]", "r2 set max memory l1", "i7 = i7 + 1", "goto label3", "label if i7 > = i2 goto label4", "label return", "if $ b3 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r6 = new java util hash set", "specialinvoke r6 < init >", "r7 = org h2 mvstore cache cache long key l i r s r0", "r2 = r7 segment", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r2 [ i1 ]", "$ r5 = r3 key set", "r6 add all $ r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "l8 = @ parameter1", "label $ l0 = l8 & -128l", "$ b1 = $ l0 cmp 0l", "if $ b1 == 0 goto label2", "$ l4 = l8 & 127l", "$ l5 = 128l | $ l4", "$ i6 = int $ l5", "$ b7 = byte $ i6", "r0 write $ b7", "l8 = l8 > > > 7", "goto label1", "if $ b1 == 0 goto label2", "label $ i2 = int l8", "$ b3 = byte $ i2", "r0 write $ b3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["l0 = @ parameter0", "$ i1 = int l0", "$ i2 = $ i1 & 1", "return $ i2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 mvstore m v map r0", "$ r1 = r2 get first last 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org h2 mvstore m v map r0", "$ r2 = r3 get min max r1 0 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org h2 mvstore m v map r0", "r7 check open", "r8 = org h2 mvstore m v map r0", "$ r2 = r8 store", "$ r3 = $ r2 get meta map", "if r0 ! = $ r3 goto label1", "return", "if r0 ! = $ r3 goto label1", "label r9 = org h2 mvstore m v map r0", "r9 before write", "label r10 = org h2 mvstore m v map r0", "$ r4 = r10 root", "$ r4 remove all recursive", "r11 = org h2 mvstore m v map r0", "$ r5 = r11 store", "r12 = org h2 mvstore m v map r0", "$ i0 = r12 id", "$ r5 remove map $ i0", "r13 = org h2 mvstore m v map r0", "r13 close", "label r14 = org h2 mvstore m v map r0", "r14 after write", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 mvstore m v map r0", "$ r1 = r3 store", "r4 = org h2 mvstore m v map r0", "$ i0 = r4 id", "$ r2 = $ r1 get map name $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 mvstore m v map r0", "$ z0 = r3 read only", "if $ z0 == 0 goto label1", "r4 = org h2 mvstore m v map r0", "r4 check open", "$ r2 = org h2 mvstore data utils new unsupported operation exception \\ `` this map be read-only\\ ``", "throw $ r2", "if $ z0 == 0 goto label1", "label r5 = org h2 mvstore m v map r0", "r5 check concurrent write", "r6 = org h2 mvstore m v map r0", "$ r1 = r6 store", "$ r1 before write", "r7 = org h2 mvstore m v map r0", "r7 write = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org h2 util new hash map", "r1 put \\ `` file name\\", "$ r4 = new org h2 mvstore m v store", "specialinvoke $ r4 < init > r1", "$ r4 open", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org h2 mvstore m v store r0", "r1 page size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org h2 mvstore m v store r0", "specialinvoke r4 check open", "r5 = org h2 mvstore m v store r0", "$ r2 = r5 meta", "$ r3 = $ r2 get \\ `` set store version\\ ``", "r1 = java lang string $ r3", "if r1 ! = null goto label1", "$ i0 = 0", "goto label2", "label return $ i0", "if r1 ! = null goto label1", "label $ i0 = java lang integer parse int r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "$ r1 = new org h2 mvstore rtree m v r tree map", "specialinvoke $ r1 < init > i0 r0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org h2 mvstore rtree spatial key r0", "$ r1 = r2 min max", "$ i1 = i0 + i0", "$ i2 = $ i1 + 1", "$ f0 = $ r1 [ $ i2 ]", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 result local result r0", "r1 random access = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 result updatable row r0", "$ z0 = r1 be updatable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = new org h2 util statement builder", "specialinvoke r16 < init > \\ `` insert into \\ ``", "r17 = org h2 result updatable row r0", "specialinvoke r17 append table name r16", "r16 append 40", "r18 = org h2 result updatable row r0", "specialinvoke r18 append column list r16 0", "r16 append \\ `` value \\ ``", "r16 reset count", "i4 = 0", "label r19 = org h2 result updatable row r0", "$ i0 = r19 column count", "if i4 > = $ i0 goto label4", "r16 append except first \\", "r14 = r1 [ i4 ]", "if r14 ! = null goto label2", "r16 append \\ `` default\\ ``", "goto label3", "label i4 = i4 + 1", "goto label1", "if r14 ! = null goto label2", "label r16 append 63", "if i4 > = $ i0 goto label4", "label r16 append 41", "r20 = org h2 result updatable row r0", "$ r9 = r20 conn", "$ r10 = r16 to string", "r15 = $ r9 prepare statement $ r10", "i5 = 0", "i6 = 0", "label r21 = org h2 result updatable row r0", "$ i1 = r21 column count", "if i5 > = $ i1 goto label7", "r3 = r1 [ i5 ]", "if r3 == null goto label6", "$ i2 = i6", "i6 = i6 + 1", "$ i3 = $ i2 + 1", "r3 set r15 $ i3", "label i5 = i5 + 1", "goto label5", "if i5 > = $ i1 goto label7", "label i7 = r15 execute update", "if i7 == 1 goto label8", "$ r11 = org h2 message db exception get 2000", "r22 = java lang throwable $ r11", "throw r22", "if i7 == 1 goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [], [50], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org h2 constant sys property check", "if $ z0 == 0 goto label1", "$ r11 = r1 get schema", "if $ r11 == r0 goto label1", "org h2 message db exception throw internal error \\ `` wrong schema\\ ``", "label r2 = r1 get name", "$ i0 = r1 get type", "r14 = org h2 schema schema r0", "r3 = specialinvoke r14 get map $ i0", "$ z1 = org h2 constant sys property check", "if $ z1 == 0 goto label2", "$ r5 = r3 get r2", "if $ r5 == null goto label2", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r7 = r13 append \\ `` object already exist \\ ``", "$ r8 = $ r7 append r2", "$ r9 = $ r8 to string", "org h2 message db exception throw internal error $ r9", "label r3 put r2 r1", "r15 = org h2 schema schema r0", "r15 free unique name r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org h2 schema schema r0", "$ r3 = r6 index", "$ r4 = $ r3 get r2", "r5 = org h2 index index $ r4", "if r5 ! = null goto label1", "r5 = r1 find local temp table index r2", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org h2 schema schema r0", "$ r2 = r5 trigger", "$ r3 = $ r2 get r1", "$ r4 = org h2 schema trigger object $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org h2 schema schema r0", "$ r3 = r6 index", "$ r4 = $ r3 get r1", "r2 = org h2 index index $ r4", "if r2 ! = null goto label1", "$ r5 = org h2 message db exception get 42112 r1", "r7 = java lang throwable $ r5", "throw r7", "if r2 ! = null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org h2 schema schema r0", "$ r3 = r6 sequence", "$ r4 = $ r3 get r1", "r2 = org h2 schema sequence $ r4", "if r2 ! = null goto label1", "$ r5 = org h2 message db exception get 90036 r1", "r7 = java lang throwable $ r5", "throw r7", "if r2 ! = null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 util new array list", "r16 = org h2 schema schema r0", "$ r2 = specialinvoke r16 get map 0", "$ r3 = $ r2 value", "r1 add all $ r3", "r17 = org h2 schema schema r0", "$ r4 = specialinvoke r17 get map 3", "$ r5 = $ r4 value", "r1 add all $ r5", "r18 = org h2 schema schema r0", "$ r6 = specialinvoke r18 get map 1", "$ r7 = $ r6 value", "r1 add all $ r7", "r19 = org h2 schema schema r0", "$ r8 = specialinvoke r19 get map 4", "$ r9 = $ r8 value", "r1 add all $ r9", "r20 = org h2 schema schema r0", "$ r10 = specialinvoke r20 get map 5", "$ r11 = $ r10 value", "r1 add all $ r11", "r21 = org h2 schema schema r0", "$ r12 = specialinvoke r21 get map 11", "$ r13 = $ r12 value", "r1 add all $ r13", "r22 = org h2 schema schema r0", "$ r14 = specialinvoke r22 get map 9", "$ r15 = $ r14 value", "r1 add all $ r15", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r4 = org h2 schema trigger object r0", "r4 trigger class name = r1", "label r5 = org h2 schema trigger object r0", "specialinvoke r5 load", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 schema trigger object r0", "$ r1 = r3 trigger callback", "if $ r1 == null goto label1", "r4 = org h2 schema trigger object r0", "$ r2 = r4 trigger callback", "$ r2 close", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r8 = @ parameter0", "r0 = @ parameter1", "r9 = org h2 security sha256 normalize key for h m a c r8", "i0 = lengthof r0", "$ i3 = java lang math max 32 i0", "i1 = 64 + $ i3", "i2 = org h2 security sha256 get int count i1", "$ i4 = i2 * 4", "r1 = newarray byte [ $ i4 ]", "r2 = newarray int [ i2 ]", "$ r6 = new org h2 security sha256", "specialinvoke $ r6 < init >", "$ i5 = 64 + i0", "r4 = newarray byte [ $ i5 ]", "r5 = newarray byte [ 96 ]", "specialinvoke $ r6 calculate h m a c r9 r0 i0 r4 r5 r1 r2", "$ r7 = $ r6 result", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "i0 = lengthof r0", "i1 = org h2 security sha256 get int count i0", "$ i2 = i1 * 4", "r1 = newarray byte [ $ i2 ]", "r2 = newarray int [ i1 ]", "$ r4 = new org h2 security sha256", "specialinvoke $ r4 < init >", "specialinvoke $ r4 calculate hash r0 i0 r1 r2", "if z0 == 0 goto label1", "specialinvoke $ r4 fill with null", "java util array fill r2 0", "java util array fill r1 0", "java util array fill r0 0", "label $ r5 = $ r4 result", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 server web web app r0", "$ r1 = r2 server", "$ r1 shutdown", "return \\ `` admin jsp\\ ``"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label6", "$ r6 = r2 next", "r3 = java lang string $ r6", "$ z1 = r3 end with \\ `` lock db\\ ``", "if $ z1 == 0 goto label5", "$ r7 = new org h2 store file lock", "$ r8 = new org h2 message trace system", "specialinvoke $ r8 < init > null", "specialinvoke $ r7 < init > $ r8 r3 1000", "label $ r7 lock 1", "$ r7 unlock", "label goto label5", "label goto label1", "if $ z0 == 0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 equal \\ `` \\ ``", "if $ z0 == 0 goto label2", "label return \\ `` \\ ``", "if $ z0 == 0 goto label2", "label $ r1 = org h2 store f file utils to real path r0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r5 = org h2 store file store open r0 r1 r2 r3 r4 1024", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org h2 store file store r0", "$ r1 = r6 file", "if $ r1 == null goto label1", "r7 = org h2 store file store r0", "r7 close silently", "r8 = org h2 store file store r0", "$ r2 = r8 handler", "$ r3 = $ r2 get temp file deleter", "r9 = org h2 store file store r0", "$ r5 = r9 auto delete reference", "r10 = org h2 store file store r0", "$ r4 = r10 name", "$ r3 delete file $ r5 $ r4", "r11 = org h2 store file store r0", "r11 name = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "label r6 = org h2 store file store r0", "$ r2 = r6 file", "$ r2 force 1", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "org h2 store f file path register default provider", "$ r1 = org h2 store f file path provider", "$ r2 = r0 get scheme", "$ r1 remove $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org h2 store f file path get r0", "$ l0 = $ r1 last modified", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = org h2 store f file path get r0", "$ r2 = $ r1 new output stream z0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label i0 = r0 read r1", "if i0 > = 0 goto label2", "$ r2 = new java io e o f exception", "specialinvoke $ r2 < init >", "throw $ r2", "if i0 > = 0 goto label2", "label $ i1 = r1 remain", "if $ i1 > 0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org h2 store recover tester get instance", "$ z0 = org h2 util string utils be number r0", "if $ z0 == 0 goto label1", "$ i0 = java lang integer parse int r0", "r1 set test every $ i0", "label r2 = org h2 store f recorder r1", "org h2 store f file path rec set recorder r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org h2 table table r0", "$ r2 = r3 sequence", "r4 = org h2 engine db object r1", "org h2 table table remove $ r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org h2 table table r0", "$ r2 = r4 view", "$ r3 = org h2 table table add $ r2 r1", "r5 = org h2 table table r0", "r5 view = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = org h2 table table r0", "$ r1 = r5 constraint", "if $ r1 == null goto label1", "r6 = org h2 table table r0", "$ r4 = r6 constraint", "$ i1 = $ r4 size", "if $ i1 > 0 goto label2", "label r7 = org h2 table table r0", "$ r2 = r7 trigger", "if $ r2 == null goto label3", "r8 = org h2 table table r0", "$ r3 = r8 trigger", "$ i0 = $ r3 size", "if $ i0 < = 0 goto label3", "label $ z0 = 1", "goto label4", "label return $ z0", "if $ i0 < = 0 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "r4 = org h2 table table r0", "specialinvoke r4 fire row r1 r2 r3 0 z0", "if z0 ! = 0 goto label1", "r5 = org h2 table table r0", "specialinvoke r5 fire constraint r1 r2 r3 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 table table r0", "$ r1 = r2 database", "$ r1 check write allow", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = org h2 table table filter r0", "r8 state = 3", "r9 = org h2 table table filter r0", "$ r1 = r9 table", "$ r2 = $ r1 get null row", "r10 = org h2 table table filter r0", "r10 current = $ r2", "r11 = org h2 table table filter r0", "$ r3 = r11 current", "r12 = org h2 table table filter r0", "r13 = org h2 result search row $ r3", "r12 current search row = r13", "r14 = org h2 table table filter r0", "$ r4 = r14 nest join", "if $ r4 == null goto label1", "r15 = org h2 table table filter r0", "$ r6 = r15 nest join", "r7 = new org h2 table table filter $ 1", "r16 = org h2 table table filter r0", "specialinvoke r7 < init > r16", "r17 = org h2 table table filter $ table filter visitor r7", "$ r6 visit r17", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r17 = org h2 table table filter r0", "$ r2 = r17 session", "$ r3 = $ r2 get database", "$ r4 = $ r3 get mode", "$ z0 = $ r4 system columns", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r1 = newarray org h2 table column [ 3 ]", "r14 = new org h2 table column", "specialinvoke r14 < init > \\ `` oid\\", "r1 [ 0 ] = r14", "$ r7 = r1 [ 0 ]", "r18 = org h2 table table filter r0", "$ r6 = r18 table", "$ r7 set table $ r6 0", "r15 = new org h2 table column", "specialinvoke r15 < init > \\ `` ctid\\", "r1 [ 1 ] = r15", "$ r10 = r1 [ 1 ]", "r19 = org h2 table table filter r0", "$ r9 = r19 table", "$ r10 set table $ r9 0", "r16 = new org h2 table column", "specialinvoke r16 < init > \\ `` ctid\\", "r1 [ 2 ] = r16", "$ r13 = r1 [ 2 ]", "r20 = org h2 table table filter r0", "$ r12 = r20 table", "$ r13 set table $ r12 0", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 table table view r0", "$ r1 = r2 create exception", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "label $ r4 = new org h2 tool backup", "specialinvoke $ r4 < init >", "specialinvoke $ r4 process r0 r1 r2 z0", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 tool csv r0", "$ r1 = r2 field separator write", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 tool csv r0", "r2 row separator write = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 tool csv r0", "$ c0 = r1 field delimiter", "return $ c0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 tool csv r0", "$ r1 = r2 line separator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 tool csv r0", "$ z0 = r1 write column header", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 2 goto label1", "if i0 < = 32 goto label2", "label $ r1 = new java lang illegal argument exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "specialinvoke $ r1 < init > $ r5", "throw $ r1", "if i0 < = 32 goto label2", "label i1 = org h2 tool multi dimension get bit per value i0", "$ l2 = 1l < < i1", "$ l3 = $ l2 - 1l", "$ i4 = int $ l3", "return $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 > = 0 goto label1", "$ r6 = new java lang illegal argument exception", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = $ r7 append \\ `` 0 < \\ ``", "$ r9 = $ r8 append i0", "$ r10 = $ r9 to string", "specialinvoke $ r6 < init > $ r10", "throw $ r6", "if i0 > = 0 goto label1", "label if i1 > = 0 goto label2", "$ r1 = new java lang illegal argument exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` 0 < \\ ``", "$ r4 = $ r3 append i1", "$ r5 = $ r4 to string", "specialinvoke $ r1 < init > $ r5", "throw $ r1", "label if i1 > = 0 goto label2", "label l11 = 0l", "i12 = 0", "label if i12 > = 32 goto label4", "$ l3 = long i0", "$ l2 = 1l < < i12", "$ l4 = $ l3 & $ l2", "$ l5 = $ l4 < < i12", "l13 = l11 | $ l5", "$ l7 = long i1", "$ l6 = 1l < < i12", "$ l9 = $ l7 & $ l6", "$ i8 = i12 + 1", "$ l10 = $ l9 < < $ i8", "l11 = l13 | $ l10", "i12 = i12 + 1", "goto label3", "label if i12 > = 32 goto label4", "label return l11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], []]}
{"nodes": ["r0 = @ parameter0", "r5 = new org h2 server tcp server", "specialinvoke r5 < init >", "r6 = new org h2 tool server", "r7 = org h2 server service r5", "specialinvoke r6 < init > r7 r0", "r8 = org h2 server shutdown handler r6", "r5 set shutdown handler r8", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new org h2 tool server", "r3 = new org h2 server pg pg server", "specialinvoke r3 < init >", "r5 = org h2 server service r3", "specialinvoke r4 < init > r5 r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "label r22 = org h2 tool server r0", "r22 start = 1", "r23 = org h2 tool server r0", "$ r2 = r23 service", "$ r2 start", "r20 = new java lang string builder", "specialinvoke r20 < init >", "r24 = org h2 tool server r0", "$ r4 = r24 service", "$ r5 = $ r4 get name", "$ r6 = r20 append $ r5", "$ r7 = $ r6 append \\ `` \\ ``", "r25 = org h2 tool server r0", "$ r8 = r25 service", "$ r9 = $ r8 get u r l", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 append \\ `` \\ ``", "r18 = $ r11 to string", "r21 = new java lang thread", "specialinvoke r21 < init > r0 r18", "r26 = org h2 tool server r0", "$ r13 = r26 service", "$ z0 = $ r13 be daemon", "r21 set daemon $ z0", "r21 start", "i0 = 1", "label if i0 > = 64 goto label5", "org h2 tool server wait i0", "r27 = org h2 tool server r0", "$ z2 = r27 be run 0", "if $ z2 == 0 goto label4", "label r28 = org h2 tool server r0", "return r28", "if $ z2 == 0 goto label4", "label i0 = i0 + i0", "goto label2", "label if i0 > = 64 goto label5", "label r29 = org h2 tool server r0", "$ z1 = r29 be run 1", "if $ z1 == 0 goto label7", "label r30 = org h2 tool server r0", "return r30", "if $ z1 == 0 goto label7", "label $ r14 = newarray java lang string [ 2 ]", "$ r14 [ 0 ] = r18", "$ r14 [ 1 ] = \\ `` timeout please check your network configuration specially the file etc hosts\\ ``", "$ r15 = org h2 message db exception get 90061 $ r14", "r31 = java lang throwable $ r15", "throw r31"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = i0 > > 6", "r2 = org h2 util bit field r0", "specialinvoke r2 check capacity i1", "r3 = org h2 util bit field r0", "$ r1 = r3 data", "$ l2 = $ r1 [ i1 ]", "$ l3 = org h2 util bit field get bit mask i0", "$ l4 = $ l2 | $ l3", "$ r1 [ i1 ] = $ l4", "r4 = org h2 util bit field r0", "$ i5 = r4 max length", "if $ i5 > = i0 goto label1", "r5 = org h2 util bit field r0", "r5 max length = i0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = org h2 value value null instance", "if r0 ! = $ r4 goto label1", "return null", "if r0 ! = $ r4 goto label1", "label $ r5 = r0 convert to 10", "r2 = org h2 value value date $ r5", "$ r6 = r1 clone", "r3 = java util calendar $ r6", "r3 clear", "r3 set lenient 1", "l0 = r2 get date value", "$ i2 = org h2 util date time utils year from date value l0", "$ i3 = org h2 util date time utils month from date value l0", "$ i4 = org h2 util date time utils day from date value l0", "org h2 util date time utils set calendar field r3 $ i2 $ i3 $ i4 0 0 0 0", "l1 = r3 get time in millis", "$ r7 = new java sql date", "specialinvoke $ r7 < init > l1", "return $ r7"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = org h2 value value null instance", "if r0 ! = $ r4 goto label1", "return null", "if r0 ! = $ r4 goto label1", "label $ r5 = r0 convert to 9", "r2 = org h2 value value time $ r5", "$ r6 = r1 clone", "r3 = java util calendar $ r6", "r3 clear", "r3 set lenient 1", "l10 = r2 get nanos", "l11 = l10 1000000l", "l13 = l11 1000l", "$ l3 = l13 * 1000l", "l14 = l11 - $ l3", "l15 = l13 60l", "$ l4 = l15 * 60l", "l16 = l13 - $ l4", "l0 = l15 60l", "$ l5 = l0 * 60l", "l17 = l15 - $ l5", "$ i9 = int l0", "$ i8 = int l17", "$ i7 = int l16", "$ i6 = int l14", "org h2 util date time utils set calendar field r3 1970 1 1 $ i9 $ i8 $ i7 $ i6", "l1 = r3 get time in millis", "$ r7 = new java sql time", "specialinvoke $ r7 < init > l1", "return $ r7"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = org h2 util date time utils get calendar", "entermonitor r1", "label r1 set time r0", "if i0 ! = 1 goto label3", "$ i3 = org h2 util date time utils get year r1", "exitmonitor r1", "label return $ i3", "if i0 ! = 1 goto label3", "label i1 = r1 get i0", "if i0 ! = 2 goto label5", "$ i2 = i1 + 1", "if i0 ! = 2 goto label5", "label exitmonitor r1", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = org h2 util date time utils get date format r1 r2 r3", "entermonitor r4", "label $ r8 = r4 format r0", "exitmonitor r4", "label return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["l0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "$ l5 = l0 < < 9", "$ i3 = i1 < < 5", "$ l4 = long $ i3", "$ l7 = $ l5 | $ l4", "$ l6 = long i2", "$ l8 = $ l7 | $ l6", "return $ l8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ i2 = i0 + i1", "$ i4 = $ i2 - 1", "$ i3 = neg i1", "$ i5 = $ i4 & $ i3", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "r0 = org h2 util math utils get secure random", "entermonitor r0", "label $ i1 = r0 next int i0", "exitmonitor r0", "label return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new java util hash set", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r5 = org h2 util permutation r0", "$ z0 = r5 have next", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label i2 = 0", "label r6 = org h2 util permutation r0", "$ i0 = r6 m", "if i2 > = $ i0 goto label3", "r7 = org h2 util permutation r0", "$ r4 = r7 out", "r8 = org h2 util permutation r0", "$ r2 = r8 in", "r9 = org h2 util permutation r0", "$ r1 = r9 index", "$ i1 = $ r1 [ i2 ]", "$ r3 = $ r2 [ $ i1 ]", "$ r4 [ i2 ] = $ r3", "i2 = i2 + 1", "goto label2", "if i2 > = $ i0 goto label3", "label r10 = org h2 util permutation r0", "specialinvoke r10 move index", "return 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 util script reader r0", "$ z0 = r1 block remark", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r3 = org h2 util statement builder r0", "$ r1 = r3 builder", "$ r1 append c0", "r4 = org h2 util statement builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r3 = org h2 util statement builder r0", "$ r1 = r3 builder", "$ r1 append c0", "r4 = org h2 util statement builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r9 = @ parameter0", "r1 = @ parameter1", "r10 = org h2 store file lister get dir r9", "$ z0 = org h2 store f file utils be directory r10", "if $ z0 ! = 0 goto label1", "r14 = new java lang string builder", "specialinvoke r14 < init > \\ `` directory not find \\ ``", "r11 = r14", "r14 append r10", "goto label2", "label r16 = org h2 util tool r0", "$ r12 = r16 out", "$ r13 = r11 to string", "$ r12 println $ r13", "return", "if $ z0 ! = 0 goto label1", "label r15 = new java lang string builder", "specialinvoke r15 < init > \\ `` no database file have be found\\ ``", "r11 = r15", "$ r3 = r15 append \\ `` in directory \\ ``", "$ r3 append r10", "if r1 == null goto label2", "$ r5 = r15 append \\ `` for the database \\ ``", "$ r5 append r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "l1 = @ parameter2", "$ l2 = l1 > > 32", "$ i3 = int $ l2", "org h2 util utils write int r0 i0 $ i3", "$ i5 = i0 + 4", "$ i4 = int l1", "org h2 util utils write int r0 $ i5 $ i4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = r1 goto label1", "return 0", "if r0 ! = r1 goto label1", "label $ i4 = lengthof r0", "$ i3 = lengthof r1", "i0 = java lang math min $ i4 $ i3", "i9 = 0", "label if i9 > = i0 goto label6", "b1 = r0 [ i9 ]", "b2 = r1 [ i9 ]", "if b1 == b2 goto label5", "if b1 < = b2 goto label3", "$ b10 = 1", "goto label4", "label return $ b10", "if b1 < = b2 goto label3", "label $ b10 = -1", "if b1 == b2 goto label5", "label i9 = i9 + 1", "goto label2", "label if i9 > = i0 goto label6", "label $ i6 = lengthof r0", "$ i5 = lengthof r1", "$ i7 = $ i6 - $ i5", "$ i8 = java lang integer signum $ i7", "return $ i8"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "label java lang class for name r0", "label return 1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "r1 = org h2 util utils get property r0 null", "if r1 == null goto label4", "label $ z1 = java lang boolean parse boolean r1", "label return $ z1", "if r1 == null goto label4", "label return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r0 = new org h2 util value hash map", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 value compare mode r0", "$ r1 = r3 name", "if $ r1 ! = null goto label1", "$ r2 = \\ `` off\\ ``", "goto label2", "label return $ r2", "if $ r1 ! = null goto label1", "label r4 = org h2 value compare mode r0", "$ r2 = r4 name"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["org h2 value value lob dir counter = 0", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r8 = org h2 value value lob r0", "$ i1 = r8 type", "if i0 ! = $ i1 goto label1", "return r0", "if i0 ! = $ i1 goto label1", "label if i0 ! = 16 goto label2", "r9 = org h2 value value lob r0", "$ r4 = r9 get reader", "r10 = org h2 value value lob r0", "$ r5 = r10 handler", "r6 = org h2 value value lob create clob $ r4 -1l $ r5", "r11 = org h2 value value r6", "return r11", "label if i0 ! = 16 goto label2", "label if i0 ! = 15 goto label3", "r12 = org h2 value value lob r0", "$ r2 = r12 get input stream", "r13 = org h2 value value lob r0", "$ r3 = r13 handler", "r7 = org h2 value value lob create blob $ r2 -1l $ r3", "r14 = org h2 value value r7", "return r14", "label if i0 ! = 15 goto label3", "label $ r1 = specialinvoke r0 convert to i0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 value value lob r0", "$ r1 = r2 small", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["l0 = @ parameter0", "r3 = new org h2 value value time", "specialinvoke r3 < init > l0", "r4 = org h2 value value r3", "$ r1 = org h2 value value cache r4", "$ r2 = org h2 value value time $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hamcrest core be equal equal to r0", "$ r2 = org hamcrest collection array matching have item in array $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hamcrest collection array match a equal matcher r0", "$ r2 = org hamcrest collection array match array contain in any order $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return \\ `` [ \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hamcrest collection be in in r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r1 = new org hamcrest core be anything", "specialinvoke r1 < init >", "r2 = org hamcrest matcher r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org hamcrest core be null null value", "$ r1 = org hamcrest core be not not $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org hamcrest core be null null value", "$ r1 = org hamcrest core be not not $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util regex pattern compile r0", "$ r2 = org hamcrest core string regular expression match regex $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i5 = 0", "label $ i1 = r0 length", "if i5 > = $ i1 goto label3", "c0 = r0 char at i5", "$ z0 = java lang character be letter c0", "if $ z0 ! = 0 goto label2", "if 95 == c0 goto label2", "$ i4 = i5 - 1", "return $ i4", "if 95 == c0 goto label2", "label i5 = i5 + 1", "goto label1", "if i5 > = $ i1 goto label3", "label $ i2 = r0 length", "$ i3 = $ i2 - 1", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb cfg spi jaxb cfg collection cache type r0", "$ r1 = r2 usage", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb cfg spi jaxb cfg map reference type r0", "r2 file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "$ r1 = r2 cascade", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "r2 id type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "r2 index = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "$ r1 = r3 optimistic lock", "if $ r1 ! = null goto label1", "return 1", "if $ r1 ! = null goto label1", "label r4 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0", "$ r2 = r4 optimistic lock", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r2 cache", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "r2 element = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "r2 loader = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "r2 check = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r2 embed xml", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r2 schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "r2 schema = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "r2 catalog = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0", "$ r1 = r2 subselect attribute", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm base version attribute type r0", "$ r1 = r2 column attribute", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm basic attribute type r0", "r2 length = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm basic attribute type r0", "r2 unique = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm collection id type r0", "$ r1 = r2 generator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0", "$ r1 = r2 proxy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0", "r2 proxy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0", "$ r1 = r3 dynamic update", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0", "$ r2 = r4 dynamic update", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm entity discriminator type r0", "$ r1 = r2 formula", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm entity discriminator type r0", "r2 formula = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm filter definition type r0", "$ r1 = r2 condition", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm filter parameter type r0", "$ r1 = r2 parameter name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "$ r1 = r5 filter def", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "r6 filter def = r4", "label r7 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "$ r2 = r7 filter def", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "r2 auto import = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "$ r1 = r3 default access", "if $ r1 ! = null goto label1", "return \\ `` property\\ ``", "if $ r1 ! = null goto label1", "label r4 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "$ r2 = r4 default access", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "$ r1 = r3 default lazy", "if $ r1 ! = null goto label1", "return 1", "if $ r1 ! = null goto label1", "label r4 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0", "$ r2 = r4 default lazy", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm loader type r0", "$ r1 = r2 query ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm map type r0", "$ r1 = r2 map key many to many", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0", "$ r1 = r2 cache region", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0", "$ r1 = r3 cacheable", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0", "$ r2 = r4 cacheable", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0", "r2 fetch size = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0", "$ r1 = r2 flush mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm root entity type r0", "r2 timestamp = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm root entity type r0", "r2 multi tenancy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb hbm spi jaxb hbm tuplizer type r0", "$ r1 = r2 entity mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb hbm spi jaxb hbm tuplizer type r0", "r2 entity mode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new org hibernate boot internal metadata builder impl", "r5 = org hibernate boot metadata source r0", "specialinvoke r4 < init > r5", "r6 = org hibernate boot metadata source r0", "$ r3 = specialinvoke r6 get custom builder or default r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org hibernate boot metadata source r0", "$ r2 = r6 annotate class name", "if $ r2 ! = null goto label1", "r5 = new java util link hash set", "specialinvoke r5 < init >", "r7 = org hibernate boot metadata source r0", "r7 annotate class name = r5", "label r8 = org hibernate boot metadata source r0", "$ r3 = r8 annotate class name", "$ r3 add r1", "r9 = org hibernate boot metadata source r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate boot model source internal hbm xml element metadata r0", "$ z0 = r1 inherently single column", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = null", "label r13 = org hibernate bytecode enhance internal javassist enhancer impl r0", "$ r5 = r13 class pool", "r12 = new java io byte array input stream", "specialinvoke r12 < init > r2", "r9 = $ r5 make class if new r12", "r14 = org hibernate bytecode enhance internal javassist enhancer impl r0", "$ z0 = specialinvoke r14 enhance r9", "if $ z0 == 0 goto label02", "r15 = org hibernate bytecode enhance internal javassist enhancer impl r0", "$ r10 = specialinvoke r15 get byte code r9", "goto label03", "label r11 = $ r10", "label if r9 == null goto label05", "r9 detach", "label return r11", "if $ z0 == 0 goto label02", "label $ r10 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate bytecode enhance spi interceptor lazy attribute descriptor r0", "$ i0 = r1 attribute index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate bytecode internal javassist fast class r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate cfg abstract property holder r0", "$ r1 = r2 context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate cfg configuration r0", "$ r2 = r4 metadata source", "$ r2 add cacheable file r1", "r5 = org hibernate cfg configuration r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate cfg configuration r0", "r2 entity not find delegate = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = org hibernate internal util string helper be not empty r1", "if $ z0 == 0 goto label1", "$ r3 = r1", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label $ r3 = org hibernate internal util string helper unqualify r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["$ r1 = new java util property", "specialinvoke $ r1 < init >", "$ r2 = org hibernate cfg environment global_properties", "$ r1 put all $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate collection internal abstract persistent collection r0", "r1 initialize 1", "r2 = org hibernate collection internal abstract persistent collection r0", "r2 dirty", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate collection internal abstract persistent collection r0", "$ r1 = r2 session", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org hibernate collection internal persistent bag r0", "r5 read", "r6 = org hibernate collection internal persistent bag r0", "$ r3 = r6 bag", "r2 = $ r3 iterator", "i0 = 0", "label $ z1 = r2 have next", "if $ z1 == 0 goto label2", "$ r4 = r2 next", "$ z0 = r1 equal $ r4", "if $ z0 == 0 goto label1", "i0 = i0 + 1", "goto label1", "if $ z1 == 0 goto label2", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hibernate context internal manage session context exist session r0", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hibernate context internal manage session context session map 1", "$ r2 = r0 get session factory", "$ r3 = $ r1 put $ r2 r0", "$ r4 = org hibernate session $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org hibernate criterion detach criterion", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org hibernate criterion detach criterion", "$ r2 = r0 get name", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate criterion detach criterion r0", "$ r2 = r4 criterion", "$ r2 add order r1", "r5 = org hibernate criterion detach criterion r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r3 = @ parameter3", "$ r4 = org hibernate sql join type parse i0", "r6 = org hibernate criterion detach criterion r0", "$ r5 = r6 create criterion r1 r2 $ r4 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate criterion property r0", "$ r1 = r3 get property name", "$ r2 = org hibernate criterion projection count $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate criterion property r0", "$ r2 = r4 get property name", "$ r3 = org hibernate criterion subqueries property lt $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org hibernate criterion identifier eq expression", "specialinvoke r2 < init > r0", "r3 = org hibernate criterion criterion r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org hibernate criterion logical expression", "specialinvoke $ r2 < init > r0 r1 \\ `` and\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org hibernate criterion restriction conjunction r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = new org hibernate criterion s q l criterion", "specialinvoke r4 < init > r0 r1 r2", "r5 = org hibernate criterion criterion r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new org hibernate criterion conjunction", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate criterion simple expression r0", "r1 ignore case = 1", "r2 = org hibernate criterion simple expression r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org hibernate criterion property subquery expression", "specialinvoke r3 < init > r0 \\ `` < =\\", "r4 = org hibernate criterion criterion r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org hibernate criterion property subquery expression", "specialinvoke r3 < init > r0 \\ `` < \\", "r4 = org hibernate criterion criterion r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org hibernate criterion property subquery expression", "specialinvoke r3 < init > r0 \\ `` =\\", "r4 = org hibernate criterion criterion r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org hibernate criterion simple subquery expression", "specialinvoke r3 < init > r0 \\ `` > \\", "r4 = org hibernate criterion criterion r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = r1 size", "r20 = org hibernate dialect function template renderer r0", "$ i2 = r20 get anticipated number of argument", "if $ i2 < = 0 goto label1", "r21 = org hibernate dialect function template renderer r0", "$ i5 = r21 get anticipated number of argument", "if i0 == $ i5 goto label1", "$ r15 = org hibernate dialect function template renderer log", "r22 = org hibernate dialect function template renderer r0", "$ i6 = r22 get anticipated number of argument", "$ r15 miss argument $ i6 i0", "label r19 = new java lang string builder", "specialinvoke r19 < init >", "i7 = 0", "label r23 = org hibernate dialect function template renderer r0", "$ r17 = r23 chunk", "$ i8 = lengthof $ r17", "if i7 > = $ i8 goto label8", "r24 = org hibernate dialect function template renderer r0", "$ r6 = r24 param index", "$ i3 = lengthof $ r6", "if i7 > = $ i3 goto label6", "r25 = org hibernate dialect function template renderer r0", "$ r10 = r25 param index", "$ i4 = $ r10 [ i7 ]", "i1 = $ i4 - 1", "if i1 > = i0 goto label3", "$ r18 = r1 get i1", "goto label4", "label if $ r18 == null goto label5", "r26 = org hibernate dialect function template renderer r0", "$ r11 = r26 chunk", "$ r12 = $ r11 [ i7 ]", "$ r13 = r19 append $ r12", "$ r13 append $ r18", "label goto label7", "label i7 = i7 + 1", "goto label2", "if i1 > = i0 goto label3", "label $ r18 = null", "if i7 > = $ i3 goto label6", "label r27 = org hibernate dialect function template renderer r0", "$ r7 = r27 chunk", "$ r8 = $ r7 [ i7 ]", "r19 append $ r8", "if i7 > = $ i8 goto label8", "label $ r5 = r19 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return \\ `` value default \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = java lang integer value of i0", "r12 = org hibernate dialect type name r0", "$ r3 = r12 default", "$ r4 = $ r3 get r1", "r2 = java lang string $ r4", "if r2 ! = null goto label1", "r11 = new org hibernate mapping exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r7 = r10 append \\ `` no dialect map for jdbc type \\ ``", "$ r8 = $ r7 append i0", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "r13 = java lang throwable r11", "throw r13", "if r2 ! = null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = java lang integer value of i0", "r5 = org hibernate dialect type name r0", "$ r3 = r5 default", "$ r3 put r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org hibernate engine internal natural id xref delegate r0", "$ r5 = r7 natural id resolution cache map", "$ r6 = $ r5 get r1", "r4 = org hibernate engine internal natural id xref delegate $ natural id resolution cache $ r6", "if r4 == null goto label1", "$ z0 = r4 same a cached r2 r3", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r6 = org hibernate engine internal natural id xref delegate r0", "$ r3 = r6 natural id resolution cache map", "$ r4 = $ r3 value", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = org hibernate engine internal natural id xref delegate $ natural id resolution cache $ r5", "r2 un stash invalid natural id reference", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate engine internal natural id xref delegate r0", "$ r1 = r2 natural id resolution cache map", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate engine internal non nullable transient dependency r0", "$ r1 = r3 property path by transient entity", "if $ r1 == null goto label1", "r4 = org hibernate engine internal non nullable transient dependency r0", "$ r2 = r4 property path by transient entity", "$ z0 = $ r2 be empty", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org hibernate engine internal non nullable transient dependency r0", "$ r2 = r7 property path by transient entity", "if $ r2 == null goto label1", "r8 = org hibernate engine internal non nullable transient dependency r0", "$ r3 = r8 property path by transient entity", "$ r4 = $ r3 remove r1", "if $ r4 ! = null goto label1", "r6 = new java lang illegal state exception", "specialinvoke r6 < init > \\ `` attempt to resolve a non-nullable transient entity that be not a dependency \\ ``", "throw r6", "if $ r4 ! = null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["$ r0 = org hibernate engine internal statistical logging session event listener log", "$ z0 = $ r0 be info enabled", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = new java util property", "r4 = org hibernate engine jdbc connection internal basic connection creator r0", "$ r2 = r4 connection prop", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java util link hash set", "specialinvoke $ r4 < init >", "label r26 = r0 get type info", "label $ z0 = r26 next", "if $ z0 == 0 goto label03", "$ r5 = new org hibernate engine jdbc spi type info", "$ r6 = r26 get string \\ `` type_name\\ ``", "$ i0 = r26 get int \\ `` data_type\\ ``", "$ r7 = r26 get string \\ `` create_params\\ ``", "$ r8 = org hibernate engine jdbc spi type info interpret create params $ r7", "$ z1 = r26 get boolean \\ `` unsigned_attribute\\ ``", "$ i1 = r26 get int \\ `` precision\\ ``", "$ s2 = r26 get short \\ `` minimum_scale\\ ``", "$ s3 = r26 get short \\ `` maximum_scale\\ ``", "$ z2 = r26 get boolean \\ `` fixed_prec_scale\\ ``", "$ r9 = r26 get string \\ `` literal_prefix\\ ``", "$ r10 = r26 get string \\ `` literal_suffix\\ ``", "$ z3 = r26 get boolean \\ `` case_sensitive\\ ``", "$ s4 = r26 get short \\ `` searchable\\ ``", "$ r11 = org hibernate engine jdbc spi type searchability interpret $ s4", "$ s5 = r26 get short \\ `` nullable\\ ``", "$ r12 = org hibernate engine jdbc spi type nullability interpret $ s5", "specialinvoke $ r5 < init > $ r6 $ i0 $ r8 $ z1 $ i1 $ s2 $ s3 $ z2 $ r9 $ r10 $ z3 $ r11 $ r12", "$ r4 add $ r5", "goto label02", "if $ z0 == 0 goto label03", "label r26 close", "label goto label15", "label goto label17", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate engine spi action queue r0", "r3 = org hibernate action spi executable r1", "specialinvoke r2 register cleanup action r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate engine spi action queue r0", "r3 = org hibernate action spi executable r1", "specialinvoke r2 register cleanup action r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org hibernate engine spi batch fetch queue r0", "$ r3 = r7 batch loadable entity key", "if $ r3 == null goto label1", "$ z0 = r1 be batch loadable", "if $ z0 == 0 goto label1", "r8 = org hibernate engine spi batch fetch queue r0", "$ r4 = r8 batch loadable entity key", "$ r5 = r1 get entity name", "$ r6 = $ r4 get $ r5", "r2 = java util link hash set $ r6", "if r2 == null goto label1", "r2 remove r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org hibernate engine spi cascade style style", "$ r3 = $ r2 get r0", "r1 = org hibernate engine spi cascade style $ r3", "if r1 ! = null goto label1", "r10 = new org hibernate mapping exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append \\ `` unsupported cascade style \\ ``", "$ r7 = $ r6 append r0", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "r11 = java lang throwable r10", "throw r11", "if r1 ! = null goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get entity persister", "$ r4 = org hibernate event internal default resolve natural id event listener log", "$ z0 = $ r4 be trace enabled", "if $ z0 == 0 goto label1", "$ r14 = org hibernate event internal default resolve natural id event listener log", "$ r15 = org hibernate pretty message helper info string r2", "$ r16 = r1 get natural id value", "$ r14 tracev \\ `` attempt to resolve { 0 } #{ 1 } \\", "label r17 = org hibernate event internal default resolve natural id event listener r0", "r3 = r17 resolve from cache r1", "if r3 == null goto label3", "$ r10 = org hibernate event internal default resolve natural id event listener log", "$ z2 = $ r10 be trace enabled", "if $ z2 == 0 goto label2", "$ r11 = org hibernate event internal default resolve natural id event listener log", "$ r12 = org hibernate pretty message helper info string r2", "$ r13 = r1 get natural id value", "$ r11 tracev \\ `` resolved object in cache { 0 } #{ 1 } \\", "label return r3", "if r3 == null goto label3", "label $ r5 = org hibernate event internal default resolve natural id event listener log", "$ z1 = $ r5 be trace enabled", "if $ z1 == 0 goto label4", "$ r7 = org hibernate event internal default resolve natural id event listener log", "$ r8 = org hibernate pretty message helper info string r2", "$ r9 = r1 get natural id value", "$ r7 tracev \\ `` object not resolve in any cache { 0 } #{ 1 } \\", "label r18 = org hibernate event internal default resolve natural id event listener r0", "$ r6 = r18 load from datasource r1", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r11 = new java lang null pointer exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r5 = r10 append \\ `` null entity be not support by \\ ``", "$ r6 = r0 get class", "$ r7 = $ r6 get name", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if r1 ! = null goto label1", "label r12 = org hibernate event internal merge context r0", "$ r2 = r12 merge to manage entity xref", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r11 = new java lang null pointer exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r5 = r10 append \\ `` null copy be not support by \\ ``", "$ r6 = r0 get class", "$ r7 = $ r6 get name", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if r1 ! = null goto label1", "label r12 = org hibernate event internal merge context r0", "$ r2 = r12 manage to merge entity xref", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r5 = r1 entry set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "r3 = r2 next", "r4 = java util map $ entry r3", "$ r6 = r4 get key", "$ r7 = r4 get value", "r9 = org hibernate event internal merge context r0", "r9 put $ r6 $ r7", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate hql internal ast query translator impl r0", "r3 error if d m l", "r4 = org hibernate hql internal ast query translator impl r0", "$ r1 = specialinvoke r4 get walker", "$ r2 = $ r1 get return type", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate hql internal ast tree insert statement r0", "$ r1 = r3 get first child", "$ r2 = org hibernate hql internal ast tree into clause $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org hibernate hql internal ast tree order by clause r0", "$ r3 = r5 get a s t factory", "r2 = org hibernate hql internal ast util a s t util create $ r3 148 r1", "r6 = org hibernate hql internal ast tree order by clause r0", "$ r4 = r6 get first child", "if $ r4 ! = null goto label1", "r7 = org hibernate hql internal ast tree order by clause r0", "r7 set first child r2", "goto label2", "label return", "if $ r4 ! = null goto label1", "label r8 = org hibernate hql internal ast tree order by clause r0", "r8 add child r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org hibernate hql internal ast util a s t appender r0", "$ r2 = r6 last", "if $ r2 ! = null goto label1", "r7 = org hibernate hql internal ast util a s t appender r0", "$ r5 = r7 parent", "$ r5 set first child r1", "goto label2", "label r9 = org hibernate hql internal ast util a s t appender r0", "r9 last = r1", "r10 = org hibernate hql internal ast util a s t appender r0", "$ r4 = r10 last", "return $ r4", "if $ r2 ! = null goto label1", "label r8 = org hibernate hql internal ast util a s t appender r0", "$ r3 = r8 last", "$ r3 set next sibling r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org hibernate internal util string helper split \\ `` \\", "r8 = null", "i1 = 0", "label $ i0 = lengthof r2", "if i1 > = $ i0 goto label4", "r3 = r2 [ i1 ]", "r4 = org hibernate hql internal ast util a s t util create r1 110 r3", "if i1 ! = 0 goto label2", "r8 = r4", "goto label3", "label i1 = i1 + 1", "goto label1", "if i1 ! = 0 goto label2", "label r8 = org hibernate hql internal ast util a s t util create binary subtree r1 15 \\ `` \\", "if i1 > = $ i0 goto label4", "label $ r5 = org hibernate hql internal ast util path helper log", "$ z0 = $ r5 be debug enabled", "if $ z0 == 0 goto label5", "$ r6 = org hibernate hql internal ast util path helper log", "$ r7 = org hibernate hql internal ast util a s t util get debug string r8", "$ r6 debugf \\ `` parse path % s - > % s\\", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate hql internal ast util session factory helper r0", "$ r2 = r4 sfi", "$ r3 = org hibernate hql internal ast util session factory helper find queryable use import $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org hibernate hql internal ast util session factory helper r0", "$ r2 = r5 sfi", "$ r3 = $ r2 get sql function registry", "$ r4 = $ r3 find s q l function r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org hibernate hql internal ast util session factory helper r0", "r3 = specialinvoke r5 require s q l function r1", "r6 = org hibernate hql internal ast util session factory helper r0", "$ r4 = r6 find function return type r1 r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate id enhance table generator r0", "$ r1 = r2 identifier type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["entermonitor class \\ `` lorg hibernate id uuid helper \\ ``", "label $ s0 = org hibernate id uuid helper counter", "if $ s0 > = 0 goto label2", "org hibernate id uuid helper counter = 0", "label $ s1 = org hibernate id uuid helper counter", "$ i2 = $ s1 + 1", "$ s3 = short $ i2", "org hibernate id uuid helper counter = $ s3", "exitmonitor class \\ `` lorg hibernate id uuid helper \\ ``", "label return $ s1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r15 = org hibernate internal abstract scrollable result r0", "$ z0 = r15 close", "if $ z0 == 0 goto label1", "r13 = new java lang illegal state exception", "specialinvoke r13 < init > \\ `` scrollable result be closed\\ ``", "throw r13", "if $ z0 == 0 goto label1", "label r16 = org hibernate internal abstract scrollable result r0", "$ r2 = r16 holder instantiator", "if $ r2 == null goto label2", "r14 = new org hibernate hibernate exception", "specialinvoke r14 < init > \\ `` query specify a holder class\\ ``", "r17 = java lang throwable r14", "throw r17", "if $ r2 == null goto label2", "label $ r3 = r1 get return class", "r18 = org hibernate internal abstract scrollable result r0", "$ r4 = r18 type", "$ r5 = $ r4 [ i0 ]", "$ r6 = $ r5 get return class", "if $ r3 ! = $ r6 goto label3", "r19 = org hibernate internal abstract scrollable result r0", "$ r10 = r19 get i0", "return $ r10", "if $ r3 ! = $ r6 goto label3", "label r20 = org hibernate internal abstract scrollable result r0", "$ r7 = r20 type", "$ r8 = $ r7 [ i0 ]", "r21 = org hibernate internal abstract scrollable result r0", "$ r9 = specialinvoke r21 throw invalid column type exception i0 $ r8 r1", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate internal filter impl r0", "$ r2 = r4 parameter", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get r0", "r3 = java lang string $ r2", "if r3 ! = null goto label1", "return null", "if r3 ! = null goto label1", "label r4 = r3 trim", "$ z0 = r4 be empty", "if $ z0 == 0 goto label2", "label return r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = new java util hash map", "specialinvoke $ r6 < init >", "r4 = org hibernate internal util config configuration helper extract property value r0 r2", "if r4 == null goto label4", "$ r7 = new java util string tokenizer", "specialinvoke $ r7 < init > r4 r1", "label $ z0 = $ r7 have more token", "if $ z0 == 0 goto label4", "$ r8 = $ r7 next token", "$ z1 = $ r7 have more element", "if $ z1 == 0 goto label2", "$ r11 = $ r7 next token", "goto label3", "label $ r6 put $ r8 $ r11", "goto label1", "if $ z1 == 0 goto label2", "label $ r11 = \\ `` \\ ``", "if $ z0 == 0 goto label4", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 get error code", "r1 = r0 get next exception", "label if i0 ! = 0 goto label2", "if r1 == null goto label2", "i0 = r1 get error code", "r1 = r1 get next exception", "goto label1", "if r1 == null goto label2", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org hibernate internal util reflect helper $ assertion disable", "if $ z0 ! = 0 goto label1", "$ z2 = r1 be interface", "if $ z2 ! = 0 goto label1", "$ r2 = new java lang assertion error", "specialinvoke $ r2 < init > \\ `` interface to check be not an interface\\ ``", "throw $ r2", "if $ z2 ! = 0 goto label1", "label $ z1 = r1 be assignable from r0", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org hibernate internal util reflect helper be abstract class r0", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label $ r1 = org hibernate internal util reflect helper no_param_signature", "r10 = r0 get declare constructor $ r1", "org hibernate internal util reflect helper ensure accessibility r10", "label return r10"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["$ r0 = java lang thread current thread", "$ r1 = $ r0 get context class loader", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label2", "label return 0", "if $ z0 == 0 goto label2", "label c0 = r0 char at 0", "$ i2 = r0 length", "$ i3 = $ i2 - 1", "c1 = r0 char at $ i3", "if c0 ! = c1 goto label3", "if c0 == 96 goto label4", "if c0 == 34 goto label4", "label $ c4 = r1 open quote", "if c0 ! = $ c4 goto label5", "$ c5 = r1 close quote", "if c1 ! = $ c5 goto label5", "label $ z1 = 1", "goto label6", "label return $ z1", "if c1 ! = $ c5 goto label5", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate loader custom column collection aliases r0", "$ r1 = r2 identifier alias", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org hibernate loader abstract entity join walker r0", "$ r3 = r7 persister", "$ r4 = $ r3 get table name", "$ z1 = $ r4 equal r1", "if $ z1 == 0 goto label1", "r8 = org hibernate loader abstract entity join walker r0", "$ r5 = r8 persister", "$ r6 = $ r5 get key column name", "$ z3 = java util array equal r2 $ r6", "if $ z3 == 0 goto label1", "$ z4 = 1", "goto label2", "label if $ z4 ! = 0 goto label3", "$ z2 = specialinvoke r0 be duplicate association r1 r2", "if $ z2 == 0 goto label4", "label $ z5 = 1", "goto label5", "label return $ z5", "if $ z2 == 0 goto label4", "label $ z5 = 0", "if $ z3 == 0 goto label1", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate lock option r0", "$ r1 = r2 lock mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate lock option r0", "$ i0 = r1 timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org hibernate lock option r0", "r1 timeout = i0", "r2 = org hibernate lock option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate lock option r0", "$ z0 = r1 scope", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new org hibernate lock option", "specialinvoke r4 < init >", "r5 = org hibernate lock option r0", "org hibernate lock option copy r5 r4", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate mapping fetch profile r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate map foreign key r0", "$ r1 = r2 reference columns", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate map one to one r0", "r2 identifier = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org hibernate mapping persistent class r0", "$ z0 = r6 have property r1", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label r7 = org hibernate mapping persistent class r0", "$ r2 = r7 get super map superclass", "if $ r2 == null goto label2", "r8 = org hibernate mapping persistent class r0", "$ r5 = r8 get super map superclass", "$ z2 = $ r5 be property define in hierarchy r1", "if $ z2 == 0 goto label2", "label r9 = org hibernate mapping persistent class r0", "$ r3 = r9 get superclass", "if $ r3 == null goto label3", "r10 = org hibernate mapping persistent class r0", "$ r4 = r10 get superclass", "$ z1 = $ r4 be property define in hierarchy r1", "if $ z1 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate mapping persistent class r0", "$ r1 = r3 property", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r27 = org hibernate persister collection basic collection persister r0", "$ r2 = r27 create delete", "r28 = org hibernate persister collection basic collection persister r0", "$ r3 = r28 qualify table name", "r1 = $ r2 set table name $ r3", "r29 = org hibernate persister collection basic collection persister r0", "$ z0 = r29 have identifier", "if $ z0 == 0 goto label1", "$ r21 = newarray java lang string [ 1 ]", "r30 = org hibernate persister collection basic collection persister r0", "$ r22 = r30 identifier column name", "$ r21 [ 0 ] = $ r22", "r1 add primary key columns $ r21", "goto label3", "label r39 = org hibernate persister collection basic collection persister r0", "$ r24 = r39 get factory", "$ r25 = $ r24 get session factory option", "$ z3 = $ r25 be comment enabled", "if $ z3 == 0 goto label4", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r12 = r26 append \\ `` delete collection row \\ ``", "r40 = org hibernate persister collection basic collection persister r0", "$ r13 = r40 get role", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 to string", "r1 set comment $ r15", "label $ r10 = r1 to statement string", "return $ r10", "if $ z0 == 0 goto label1", "label r31 = org hibernate persister collection basic collection persister r0", "$ z1 = r31 have index", "if $ z1 == 0 goto label2", "r32 = org hibernate persister collection basic collection persister r0", "$ z2 = r32 index contain formula", "if $ z2 ! = 0 goto label2", "r33 = org hibernate persister collection basic collection persister r0", "$ r18 = r33 key column name", "r34 = org hibernate persister collection basic collection persister r0", "$ r17 = r34 index column name", "$ r19 = org hibernate internal util collection array helper join $ r18 $ r17", "r1 add primary key columns $ r19", "if $ z2 ! = 0 goto label2", "label r35 = org hibernate persister collection basic collection persister r0", "$ r4 = r35 key column name", "r1 add primary key columns $ r4", "r36 = org hibernate persister collection basic collection persister r0", "$ r8 = r36 element column name", "r37 = org hibernate persister collection basic collection persister r0", "$ r7 = r37 element column be in primary key", "r38 = org hibernate persister collection basic collection persister r0", "$ r6 = r38 element column writer", "r1 add primary key columns $ r8 $ r7 $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 equal \\ `` elements\\ ``", "if $ z0 == 0 goto label01", "r83 = org hibernate persister collection collection property mapping r0", "$ r62 = r83 member persister", "$ r63 = $ r62 get element column name r1", "return $ r63", "if $ z0 == 0 goto label01", "label $ z1 = r2 equal \\ `` indices\\ ``", "if $ z1 == 0 goto label03", "r84 = org hibernate persister collection collection property mapping r0", "$ r58 = r84 member persister", "$ z9 = $ r58 have index", "if $ z9 ! = 0 goto label02", "r69 = new org hibernate query exception", "specialinvoke r69 < init > \\ `` unindexed collection in index \\ ``", "r85 = java lang throwable r69", "throw r85", "if $ z9 ! = 0 goto label02", "label r86 = org hibernate persister collection collection property mapping r0", "$ r59 = r86 member persister", "$ r60 = $ r59 get index column name r1", "return $ r60", "if $ z1 == 0 goto label03", "label $ z2 = r2 equal \\ `` size\\ ``", "if $ z2 == 0 goto label04", "r87 = org hibernate persister collection collection property mapping r0", "$ r48 = r87 member persister", "r64 = $ r48 get key column name", "$ r49 = newarray java lang string [ 1 ]", "r70 = new java lang string builder", "specialinvoke r70 < init >", "$ r51 = r70 append \\ `` count \\ ``", "$ r52 = $ r51 append r1", "$ r53 = $ r52 append 46", "$ r54 = r64 [ 0 ]", "$ r55 = $ r53 append $ r54", "$ r56 = $ r55 append 41", "$ r57 = $ r56 to string", "$ r49 [ 0 ] = $ r57", "return $ r49", "if $ z2 == 0 goto label04", "label $ z3 = r2 equal \\ `` max index\\ ``", "if $ z3 == 0 goto label07", "r88 = org hibernate persister collection collection property mapping r0", "$ r37 = r88 member persister", "$ z8 = $ r37 have index", "if $ z8 ! = 0 goto label05", "r71 = new org hibernate query exception", "specialinvoke r71 < init > \\ `` unindexed collection in max index \\ ``", "r89 = java lang throwable r71", "throw r89", "if $ z8 ! = 0 goto label05", "label r90 = org hibernate persister collection collection property mapping r0", "$ r38 = r90 member persister", "r65 = $ r38 get index column name r1", "$ i3 = lengthof r65", "if $ i3 == 1 goto label06", "r72 = new org hibernate query exception", "specialinvoke r72 < init > \\ `` composite collection index in max index \\ ``", "r91 = java lang throwable r72", "throw r91", "if $ i3 == 1 goto label06", "label $ r39 = newarray java lang string [ 1 ]", "r73 = new java lang string builder", "specialinvoke r73 < init >", "$ r41 = r73 append \\ `` max \\ ``", "$ r42 = r65 [ 0 ]", "$ r43 = $ r41 append $ r42", "$ r44 = $ r43 append 41", "$ r45 = $ r44 to string", "$ r39 [ 0 ] = $ r45", "return $ r39", "if $ z3 == 0 goto label07", "label $ z4 = r2 equal \\ `` min index\\ ``", "if $ z4 == 0 goto label10", "r92 = org hibernate persister collection collection property mapping r0", "$ r26 = r92 member persister", "$ z7 = $ r26 have index", "if $ z7 ! = 0 goto label08", "r74 = new org hibernate query exception", "specialinvoke r74 < init > \\ `` unindexed collection in min index \\ ``", "r93 = java lang throwable r74", "throw r93", "if $ z7 ! = 0 goto label08", "label r94 = org hibernate persister collection collection property mapping r0", "$ r27 = r94 member persister", "r66 = $ r27 get index column name r1", "$ i2 = lengthof r66", "if $ i2 == 1 goto label09", "r75 = new org hibernate query exception", "specialinvoke r75 < init > \\ `` composite collection index in min index \\ ``", "r95 = java lang throwable r75", "throw r95", "if $ i2 == 1 goto label09", "label $ r28 = newarray java lang string [ 1 ]", "r76 = new java lang string builder", "specialinvoke r76 < init >", "$ r30 = r76 append \\ `` min \\ ``", "$ r31 = r66 [ 0 ]", "$ r32 = $ r30 append $ r31", "$ r33 = $ r32 append 41", "$ r34 = $ r33 to string", "$ r28 [ 0 ] = $ r34", "return $ r28", "if $ z4 == 0 goto label10", "label $ z5 = r2 equal \\ `` max element\\ ``", "if $ z5 == 0 goto label12", "r96 = org hibernate persister collection collection property mapping r0", "$ r17 = r96 member persister", "r67 = $ r17 get element column name r1", "$ i1 = lengthof r67", "if $ i1 == 1 goto label11", "r77 = new org hibernate query exception", "specialinvoke r77 < init > \\ `` composite collection element in max element \\ ``", "r97 = java lang throwable r77", "throw r97", "if $ i1 == 1 goto label11", "label $ r18 = newarray java lang string [ 1 ]", "r78 = new java lang string builder", "specialinvoke r78 < init >", "$ r20 = r78 append \\ `` max \\ ``", "$ r21 = r67 [ 0 ]", "$ r22 = $ r20 append $ r21", "$ r23 = $ r22 append 41", "$ r24 = $ r23 to string", "$ r18 [ 0 ] = $ r24", "return $ r18", "if $ z5 == 0 goto label12", "label $ z6 = r2 equal \\ `` min element\\ ``", "if $ z6 == 0 goto label14", "r98 = org hibernate persister collection collection property mapping r0", "$ r8 = r98 member persister", "r68 = $ r8 get element column name r1", "$ i0 = lengthof r68", "if $ i0 == 1 goto label13", "r79 = new org hibernate query exception", "specialinvoke r79 < init > \\ `` composite collection element in min element \\ ``", "r99 = java lang throwable r79", "throw r99", "if $ i0 == 1 goto label13", "label $ r9 = newarray java lang string [ 1 ]", "r80 = new java lang string builder", "specialinvoke r80 < init >", "$ r11 = r80 append \\ `` min \\ ``", "$ r12 = r68 [ 0 ]", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 append 41", "$ r15 = $ r14 to string", "$ r9 [ 0 ] = $ r15", "return $ r9", "if $ z6 == 0 goto label14", "label r82 = new org hibernate query exception", "r81 = new java lang string builder", "specialinvoke r81 < init >", "$ r5 = r81 append \\ `` illegal syntax near collection \\ ``", "$ r6 = $ r5 append r2", "$ r7 = $ r6 to string", "specialinvoke r82 < init > $ r7", "r100 = java lang throwable r82", "throw r100"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [], [55], [56], [57], [58], [59], [60], [61], [62], [63], [], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [], [87], [88], [89], [90], [91], [92], [93], [94], [95], [], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], [], [143], [144], [145], [146], [147], [148], [149], [150], [151], [152], [], [154], [155], [156], [157], [158], [159], [160], [161], [162], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hibernate engine spi load query influencers none", "r4 = org hibernate persister entity abstract entity persister r0", "$ r3 = r4 create entity loader r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append 91", "$ r6 = $ r5 append r0", "$ r7 = $ r6 append 46", "$ r8 = $ r7 append r1", "r3 = $ r8 append 35", "if r2 ! = null goto label1", "r3 append \\ `` < null > \\ ``", "goto label2", "label r3 append 93", "$ r11 = r3 to string", "return $ r11", "if r2 ! = null goto label1", "label r3 append r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate proxy abstract lazy initializer r0", "$ r1 = r2 session factory uuid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate query criterion internal expression abstract tuple element r0", "r2 alias = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org hibernate query internal abstract produce query r0", "$ r1 = r3 get lock option", "$ r1 set time out i0", "return 1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org hibernate query internal abstract produce query r0", "$ r2 = r4 get lock option", "$ r2 set follow on lock r1", "return 1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = org hibernate stat internal stats name container r0", "$ r1 = r6 map", "$ r2 = $ r1 key set", "$ r3 = newarray java lang string [ 0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate tool hbm2ddl schema export r0", "r2 import file = r1", "r3 = org hibernate tool hbm2ddl schema export r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org hibernate tool hbm2ddl schema export r0", "r1 format = z0", "r2 = org hibernate tool hbm2ddl schema export r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org hibernate tool hbm2ddl schema export r0", "r1 halt on error = z0", "r2 = org hibernate tool hbm2ddl schema export r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate tool hbm2ddl schema export r0", "$ r1 = r2 exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org hibernate tool hbm2ddl schema update task r0", "r1 quiet = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org hibernate transform alias to bean constructor result transformer", "if $ z0 == 0 goto label1", "r5 = org hibernate transform alias to bean constructor result transformer r0", "$ r4 = r5 constructor", "$ r2 = org hibernate transform alias to bean constructor result transformer r1", "$ r3 = $ r2 constructor", "$ z1 = $ r4 equal $ r3", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r27 = org hibernate tuple component component tuplizer factory r0", "r3 = specialinvoke r27 get proper constructor r1", "$ z0 = org hibernate tuple component component tuplizer factory $ assertion disable", "if $ z0 ! = 0 goto label1", "if r3 ! = null goto label1", "r24 = new java lang assertion error", "r23 = new java lang string builder", "specialinvoke r23 < init >", "$ r10 = r23 append \\ `` unable to locate proper constructor for tuplizer [ \\ ``", "$ r11 = r1 get name", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 append \\ `` ] \\ ``", "$ r14 = $ r13 to string", "specialinvoke r24 < init > $ r14", "throw r24", "if r3 ! = null goto label1", "label $ r5 = newarray java lang object [ 1 ]", "$ r5 [ 0 ] = r2", "$ r6 = r3 new instance $ r5", "$ r7 = org hibernate tuple component component tuplizer $ r6", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "i1 = @ parameter2", "r3 = new org hibernate engine jdbc internal binary stream impl", "$ r2 = org hibernate type descriptor java data helper extract bytes r0 l0 i1", "specialinvoke r3 < init > $ r2", "r4 = java io input stream r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["$ r0 = org hibernate version version", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "label r6 = org glassfish hk2 utility abstract active descriptor r0", "$ r2 = r6 w lock", "$ r2 lock", "r7 = org glassfish hk2 utility abstract active descriptor r0", "r7 be reify = z0", "label r8 = org glassfish hk2 utility abstract active descriptor r0", "$ r3 = r8 w lock", "$ r3 unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r13 = org glassfish hk2 utility abstract active descriptor r0", "$ r3 = r13 w lock", "$ r3 lock", "if r1 ! = null goto label3", "label r14 = org glassfish hk2 utility abstract active descriptor r0", "$ r10 = r14 w lock", "$ r10 unlock", "return 0", "if r1 ! = null goto label3", "label r15 = org glassfish hk2 utility abstract active descriptor r0", "$ r4 = r15 qualifier", "if $ r4 ! = null goto label5", "label r16 = org glassfish hk2 utility abstract active descriptor r0", "$ r9 = r16 w lock", "$ r9 unlock", "if $ r4 ! = null goto label5", "label r17 = org glassfish hk2 utility abstract active descriptor r0", "$ r5 = r17 qualifier", "z4 = $ r5 remove r1", "$ r6 = r1 annotation type", "$ r7 = $ r6 get name", "r18 = org glassfish hk2 utility abstract active descriptor r0", "r18 remove qualifier $ r7", "label r19 = org glassfish hk2 utility abstract active descriptor r0", "$ r8 = r19 w lock", "$ r8 unlock", "return z4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org glassfish hk2 internal indexed filter impl", "specialinvoke r2 < init > r0 null", "r3 = org glassfish hk2 api indexed filter r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org glassfish hk2 utility service locator utility get best contract r0", "r2 = r0 get name", "$ r3 = r0 get service id", "if $ r3 ! = null goto label1", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` the descriptor must have a specific service id\\ ``", "throw r10", "if $ r3 ! = null goto label1", "label $ r4 = r0 get locator id", "if $ r4 ! = null goto label2", "r11 = new java lang illegal argument exception", "specialinvoke r11 < init > \\ `` the descriptor must have a specific locator id\\ ``", "throw r11", "if $ r4 ! = null goto label2", "label r12 = new org glassfish hk2 internal specific filter impl", "$ r6 = r0 get service id", "$ l0 = $ r6 long value", "$ r7 = r0 get locator id", "$ l1 = $ r7 long value", "specialinvoke r12 < init > r1 r2 $ l0 $ l1", "r13 = org glassfish hk2 api indexed filter r12", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r61 = org glassfish hk2 utility classpath descriptor file finder r0", "$ r6 = r61 identifier", "$ r6 clear", "r53 = new java util array list", "specialinvoke r53 < init >", "r62 = org glassfish hk2 utility classpath descriptor file finder r0", "r2 = r62 name", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label15", "r3 = r2 [ i1 ]", "r63 = org glassfish hk2 utility classpath descriptor file finder r0", "$ r9 = r63 class loader", "r54 = new java lang string builder", "specialinvoke r54 < init >", "$ r10 = r54 append \\ `` meta-inf hk2-locator \\ ``", "$ r11 = $ r10 append r3", "$ r12 = $ r11 to string", "r4 = $ r9 get resource $ r12", "label $ z0 = r4 have more element", "if $ z0 == 0 goto label14", "$ r13 = r4 next element", "r5 = java net url $ r13", "$ z1 = org glassfish hk2 utility classpath descriptor file finder debug_descriptor_finder", "if $ z1 == 0 goto label03", "$ r26 = org glassfish hk2 utility reflection logger get logger", "r55 = new java lang string builder", "specialinvoke r55 < init >", "$ r28 = r55 append \\ `` add in url to set be parsed \\ ``", "$ r29 = $ r28 append r5", "$ r30 = $ r29 append \\ `` from \\ ``", "$ r31 = $ r30 append \\ `` meta-inf hk2-locator \\ ``", "$ r32 = $ r31 append r3", "$ r33 = $ r32 to string", "$ r26 debug $ r33", "label r64 = org glassfish hk2 utility classpath descriptor file finder r0", "$ r14 = r64 identifier", "$ r15 = r5 to u r i", "$ r16 = $ r15 to string", "$ r14 add $ r16", "label goto label06", "label r50 = r5 open stream", "label goto label12", "label $ z3 = org glassfish hk2 utility classpath descriptor file finder debug_descriptor_finder", "if $ z3 == 0 goto label13", "$ r17 = org glassfish hk2 utility reflection logger get logger", "r60 = new java lang string builder", "specialinvoke r60 < init >", "$ r19 = r60 append \\ `` input stream for \\ ``", "$ r20 = $ r19 append r5", "$ r21 = $ r20 append \\ `` from \\ ``", "$ r22 = $ r21 append \\ `` meta-inf hk2-locator \\ ``", "$ r23 = $ r22 append r3", "$ r24 = $ r23 append \\ `` have succesfully be opened\\ ``", "$ r25 = $ r24 to string", "$ r17 debug $ r25", "label r53 add r50", "goto label02", "if $ z0 == 0 goto label14", "label i1 = i1 + 1", "goto label01", "label if i1 > = i0 goto label15", "label return r53"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [], [60], [61], [], [63], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org glassfish hk2 utility descriptor impl r0", "$ r3 = r7 metadata", "if $ r3 ! = null goto label1", "r6 = new java util link hash map", "specialinvoke r6 < init >", "r8 = org glassfish hk2 utility descriptor impl r0", "r8 metadata = r6", "label r9 = org glassfish hk2 utility descriptor impl r0", "$ r4 = r9 metadata", "org glassfish hk2 utility reflection reflection helper add metadata $ r4 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org glassfish hk2 utility descriptor impl r0", "$ r3 = r5 metadata", "if $ r3 ! = null goto label1", "return 0", "if $ r3 ! = null goto label1", "label r6 = org glassfish hk2 utility descriptor impl r0", "$ r4 = r6 metadata", "$ z0 = org glassfish hk2 utility reflection reflection helper remove metadata $ r4 r1 r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 == null goto label1", "if r1 ! = null goto label2", "label $ r4 = new java lang illegal argument exception", "specialinvoke $ r4 < init >", "throw $ r4", "if r1 ! = null goto label2", "label r3 = r0 get service handle r1 r2", "if r3 ! = null goto label3", "$ r6 = r0 create and initialize r1", "return $ r6", "if r3 ! = null goto label3", "label $ r5 = r3 get service", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang assertion error", "specialinvoke $ r1 < init > \\ `` service locator utility enable topic distribution method have be remove use extras utility enable topic distribution\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java lang system err", "org glassfish hk2 utility service locator utility dump all descriptor r0 $ r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org jvnet hk2 internal collector r0", "$ r1 = r3 throwables", "if $ r1 == null goto label1", "r4 = org jvnet hk2 internal collector r0", "$ r2 = r4 throwables", "$ z0 = $ r2 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 ! = null goto label1", "r20 = new java lang illegal argument exception", "specialinvoke r20 < init >", "throw r20", "if r0 ! = null goto label1", "label r21 = new org jvnet hk2 internal collector", "specialinvoke r21 < init >", "r4 = org jvnet hk2 internal utility get class analyzer r1 r2 r21", "r21 throw if error", "r5 = org jvnet hk2 internal utility get constructor r0 r4 r21"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 get annotation class \\ `` ljavax inject name \\ ``", "r2 = javax inject name $ r3", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label $ r4 = r2 value", "if $ r4 == null goto label2", "$ r6 = r2 value", "$ z0 = $ r6 equal \\ `` \\ ``", "if $ z0 == 0 goto label3", "label $ r5 = new java lang illegal argument exception", "specialinvoke $ r5 < init > \\ `` @ name on the provide method of a factory must have an explicit value\\ ``", "r1 add throwable $ r5", "label $ r7 = r2 value", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["$ r1 = org jvnet hk2 internal utility proxy available", "if $ r1 == null goto label1", "$ r5 = org jvnet hk2 internal utility proxy available", "$ z1 = $ r5 boolean value", "return $ z1", "if $ r1 == null goto label1", "label $ r2 = class \\ `` lorg jvnet hk2 internal utility \\ ``", "r8 = $ r2 get class loader", "if r8 ! = null goto label2", "r8 = java lang class loader get system class loader", "label r8 load class \\ `` javassist util proxy method handler\\ ``", "$ r4 = java lang boolean value of 1", "org jvnet hk2 internal utility proxy available = $ r4", "label return 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org glassfish hk2 utility general hk2 thread local r0", "$ r3 = r7 queue", "r2 = org glassfish hk2 utility general hk2 thread local new storage key $ r3", "r8 = org glassfish hk2 utility general hk2 thread local r0", "$ r4 = r8 local", "$ r5 = org glassfish hk2 utility general hk2 thread local mask null r1", "$ r4 put r2 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish hk2 utility general thread specific object r0", "$ r1 = r2 incoming", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish hk2 utility reflection logger instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` null\\ ``", "if r0 ! = null goto label1", "label $ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = r0 get name", "$ r3 = $ r1 append $ r2", "$ r4 = r0 get parameter type", "$ r5 = org glassfish hk2 utility reflection pretty pretty print parameter $ r4", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` null\\ ``", "if r0 ! = null goto label1", "label r1 = r0 get generic type", "$ z0 = r1 instanceof java lang class", "if $ z0 == 0 goto label2", "$ r14 = java lang class r1", "r15 = org glassfish hk2 utility reflection pretty clazz $ r14", "goto label3", "label $ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` field \\ ``", "$ r4 = $ r3 append r15", "$ r5 = $ r4 append \\ `` \\ ``", "$ r6 = r0 get name", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` in \\ ``", "$ r9 = r0 get declare class", "$ r10 = $ r9 get name", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 append \\ `` \\ ``", "$ r13 = $ r12 to string", "return $ r13", "if $ z0 == 0 goto label2", "label r15 = org glassfish hk2 utility reflection pretty type r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org glassfish hk2 utility reflection reflection helper type from sub class to declare class r0 r2", "if r3 ! = null goto label1", "return r1", "if r3 ! = null goto label1", "label $ z0 = r1 instanceof java lang reflect parameterized type", "if $ z0 == 0 goto label2", "$ r14 = java lang reflect parameterized type r1", "$ r15 = org glassfish hk2 utility reflection reflection helper fix type variables $ r14 r3", "return $ r15", "if $ z0 == 0 goto label2", "label $ z1 = r1 instanceof java lang reflect generic array type", "if $ z1 == 0 goto label3", "$ r12 = java lang reflect generic array type r1", "$ r13 = org glassfish hk2 utility reflection reflection helper fix generic array type variables $ r12 r3", "return $ r13", "if $ z1 == 0 goto label3", "label $ z2 = r1 instanceof java lang reflect type variable", "if $ z2 ! = 0 goto label4", "label r4 = java lang reflect type variable r1", "r5 = r4 get name", "$ r7 = r3 get r5", "r6 = java lang reflect type $ r7", "if r6 ! = null goto label5", "label $ z3 = r6 instanceof java lang class", "if $ z3 == 0 goto label6", "return r6", "if $ z3 == 0 goto label6", "label $ z4 = r6 instanceof java lang reflect parameterized type", "if $ z4 == 0 goto label7", "$ r10 = java lang reflect parameterized type r6", "$ r11 = org glassfish hk2 utility reflection reflection helper fix type variables $ r10 r3", "return $ r11", "if $ z4 == 0 goto label7", "label $ z5 = r6 instanceof java lang reflect generic array type", "if $ z5 == 0 goto label8", "$ r8 = java lang reflect generic array type r6", "$ r9 = org glassfish hk2 utility reflection reflection helper fix generic array type variables $ r8 r3", "return $ r9", "if $ z5 == 0 goto label8", "label return r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [], [42], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java lang class", "if $ z0 == 0 goto label1", "return class \\ `` ljava lang object \\ ``", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof java lang reflect parameterized type", "if $ z1 ! = 0 goto label2", "label r1 = java lang reflect parameterized type r0", "r2 = r1 get actual type argument", "$ i0 = lengthof r2", "if $ i0 > 0 goto label3", "label $ r3 = r2 [ 0 ]", "return $ r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 annotation type", "$ z0 = r1 be annotation present class \\ `` ljavax inject qualifier \\ ``", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "return r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jvnet hk2 component multi map r0", "$ r2 = r3 get r1", "$ z0 = $ r2 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl nio client http async client builder r0", "r1 connection state disable = 1", "r2 = org apache http impl nio client http async client builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache http nio client method http async method $ 1", "specialinvoke r2 < init > r0", "r3 = org apache http nio protocol http async response consumer r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label4", "label r0 close", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r18 = @ parameter0", "r22 = org codehaus httpcache4j conditionals r0", "$ r2 = r22 modify since", "$ z0 = $ r2 be present", "if $ z0 ! = 0 goto label1", "$ z6 = 1", "goto label2", "label $ r3 = newarray java lang object [ 2 ]", "$ r3 [ 0 ] = \\ `` if- match\\ ``", "$ r3 [ 1 ] = \\ `` if- modified- since\\ ``", "$ r4 = java lang string format \\ `` the combination of % s and % s be undefined by the http specification\\", "org codehaus httpcache4j util precondition check argument $ z6 $ r4", "r23 = org codehaus httpcache4j conditionals r0", "$ r5 = r23 none match", "$ z1 = $ r5 be empty", "$ r6 = newarray java lang object [ 2 ]", "$ r6 [ 0 ] = \\ `` if- match\\ ``", "$ r6 [ 1 ] = \\ `` if- none- match\\ ``", "$ r7 = java lang string format \\ `` the combination of % s and % s be undefined by the http specification\\", "org codehaus httpcache4j util precondition check argument $ z1 $ r7", "r19 = new java util array list", "r24 = org codehaus httpcache4j conditionals r0", "$ r9 = r24 match", "specialinvoke r19 < init > $ r9", "if r18 ! = null goto label3", "r18 = org codehaus httpcache4j tag all", "label $ r10 = org codehaus httpcache4j tag all", "$ z2 = $ r10 equal r18", "if $ z2 == 0 goto label4", "r19 clear", "label $ r11 = org codehaus httpcache4j tag all", "$ z3 = r19 contain $ r11", "if $ z3 ! = 0 goto label5", "$ z4 = r19 contain r18", "if $ z4 ! = 0 goto label6", "r19 add r18", "goto label6", "label r21 = new org codehaus httpcache4j conditionals", "$ r14 = java util collection unmodifiable list r19", "$ r15 = org codehaus httpcache4j conditionals empty", "$ r16 = java util optional empty", "r25 = org codehaus httpcache4j conditionals r0", "$ r17 = r25 un modify since", "specialinvoke r21 < init > $ r14 $ r15 $ r16 $ r17", "return r21", "if $ z3 ! = 0 goto label5", "label r20 = new java lang illegal argument exception", "specialinvoke r20 < init > \\ `` tag all already in the list\\ ``", "throw r20", "if $ z0 ! = 0 goto label1", "label $ z6 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [], [51], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init > \\ `` http parameter may not be null\\ ``", "throw $ r3", "if r0 ! = null goto label1", "label r0 set parameter \\ `` http auth credential-charset\\", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http conn scheme scheme r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i2 = 0", "i3 = 0", "label $ i0 = r0 length", "if i3 > = $ i0 goto label3", "$ c1 = r0 char at i3", "if $ c1 ! = 46 goto label2", "i2 = i2 + 1", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label3", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache http impl client abstract http client r0", "r2 default params = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache http impl client redirect location r0", "$ r2 = r4 unique", "$ r2 add r1", "r5 = org apache http impl client redirect location r0", "$ r3 = r5 all", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl conn abstract pool entry r0", "r1 tracker = null", "r2 = org apache http impl conn abstract pool entry r0", "r2 state = null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl conn tsccm route specific pool r0", "$ i0 = r1 max entry", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl conn tsccm route specific pool r0", "$ i0 = r1 num entry", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache http impl conn tsccm conn pool by route", "r5 = org apache http impl conn tsccm thread safe client conn manager r0", "$ r3 = r5 conn operator", "specialinvoke r4 < init > $ r3 r1", "r6 = org apache http impl conn tsccm abstract conn pool r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z1 = r1 equal r2", "if $ z1 ! = 0 goto label1", "$ z2 = r2 start with \\ `` \\ ``", "if $ z2 == 0 goto label2", "$ z3 = r1 end with r2", "if $ z3 == 0 goto label2", "label $ z4 = 1", "goto label3", "label return $ z4", "if $ z3 == 0 goto label2", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` cookie may not be null\\ ``", "throw r6", "if r1 ! = null goto label1", "label $ z0 = r1 instanceof org apache http cookie set cookie2", "if $ z0 == 0 goto label2", "$ z1 = r1 instanceof org apache http cookie client cookie", "if $ z1 == 0 goto label2", "$ r3 = org apache http cookie client cookie r1", "$ z2 = $ r3 contain attribute \\ `` version\\ ``", "if $ z2 ! = 0 goto label2", "r7 = new org apache http cookie cookie restriction violation exception", "specialinvoke r7 < init > \\ `` violate rfc 2965 version attribute be require \\ ``", "r8 = java lang throwable r7", "throw r8", "if $ z2 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r15 = org apache http client utils u r i builder r0", "$ r5 = r15 query params", "if $ r5 ! = null goto label1", "r13 = new java util array list", "specialinvoke r13 < init >", "r16 = org apache http client utils u r i builder r0", "r16 query params = r13", "label r17 = org apache http client utils u r i builder r0", "$ r6 = r17 query params", "$ z0 = $ r6 be empty", "if $ z0 ! = 0 goto label4", "r18 = org apache http client utils u r i builder r0", "$ r9 = r18 query params", "r3 = $ r9 iterator", "label $ z2 = r3 have next", "if $ z2 == 0 goto label4", "$ r10 = r3 next", "r4 = org apache http name value pair $ r10", "$ r11 = r4 get name", "$ z3 = $ r11 equal r1", "if $ z3 == 0 goto label3", "r3 remove", "label goto label2", "if $ z2 == 0 goto label4", "label r19 = org apache http client utils u r i builder r0", "$ r8 = r19 query params", "r14 = new org apache http message basic name value pair", "specialinvoke r14 < init > r1 r2", "$ r8 add r14", "r20 = org apache http client utils u r i builder r0", "r20 encode query = null", "r21 = org apache http client utils u r i builder r0", "r21 encode scheme specific part = null", "r22 = org apache http client utils u r i builder r0", "return r22"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["$ r0 = new org apache http conn ssl s s l socket factory", "$ r1 = javax net ssl s s l socket factory get default", "$ r3 = javax net ssl s s l socket factory $ r1", "$ r2 = org apache http conn ssl s s l socket factory browser_compatible_hostname_verifier", "specialinvoke $ r0 < init > $ r3 $ r2", "return $ r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache http conn util inet address utils ipv4_pattern", "$ r2 = $ r1 matcher r0", "$ z0 = $ r2 match", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http client config request config r0", "$ z0 = r1 authentication enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http client config request config r0", "$ r1 = r2 target prefer auth scheme", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http client config request config r0", "$ z0 = r1 decompression enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http client entity entity builder r0", "r1 gzip compress = 1", "r2 = org apache http client entity entity builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org apache http util args not null r1 \\ `` parameter name\\ ``", "return null"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl client http client builder r0", "r1 evict expire connection = 1", "r2 = org apache http impl client http client builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http client config request config r0", "$ i0 = r1 connection request timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache http conn util public suffix matcher loader get default", "$ r1 = org apache http impl client cookie spec registry create default builder $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "if c0 ! = 44 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if c0 ! = 44 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "label r7 = org apache http params basic http params r0", "$ r2 = r7 clone", "$ r3 = org apache http params http params $ r2", "label return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` map of handler may not be null\\ ``", "throw r5", "if r1 ! = null goto label1", "label r6 = org apache http protocol uri pattern matcher r0", "$ r2 = r6 map", "$ r2 clear", "r7 = org apache http protocol uri pattern matcher r0", "$ r3 = r7 map", "$ r3 put all r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "i3 = @ parameter1", "i4 = @ parameter2", "if i3 > = 0 goto label1", "i3 = 0", "label r2 = org apache http util byte array buffer r0", "$ i1 = r2 len", "if i4 < = $ i1 goto label2", "r3 = org apache http util byte array buffer r0", "i4 = r3 len", "label if i3 < = i4 goto label3", "return -1", "label if i3 < = i4 goto label3", "label i5 = i3", "label if i5 > = i4 goto label6", "r4 = org apache http util byte array buffer r0", "$ r1 = r4 buffer", "$ b2 = $ r1 [ i5 ]", "if $ b2 ! = b0 goto label5", "return i5", "if $ b2 ! = b0 goto label5", "label i5 = i5 + 1", "goto label4", "label if i5 > = i4 goto label6", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label $ r2 = r1 buffer", "r3 = org apache http util byte array buffer r0", "r3 append $ r2 i0 i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache http util char array buffer r0", "$ r1 = r2 buffer", "$ c1 = $ r1 [ i0 ]", "return $ c1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http util char array buffer r0", "$ i0 = r1 len", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http util version info r0", "$ r1 = r2 info module", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http util version info r0", "$ r1 = r2 info release", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http util version info r0", "$ r1 = r2 info timestamp", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new java util hash set", "r5 = org apache http params basic http params r0", "$ r2 = r5 parameter", "$ r3 = $ r2 key set", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r22 = org apache http pool abstract conn pool r0", "$ z0 = r22 be shut down", "if $ z0 == 0 goto label01", "return", "if $ z0 == 0 goto label01", "label r23 = org apache http pool abstract conn pool r0", "r23 be shut down = 1", "r24 = org apache http pool abstract conn pool r0", "$ r2 = r24 lock", "$ r2 lock", "label r25 = org apache http pool abstract conn pool r0", "$ r3 = r25 available", "r16 = $ r3 iterator", "label $ z1 = r16 have next", "if $ z1 == 0 goto label04", "$ r13 = r16 next", "r17 = org apache http pool pool entry $ r13", "r17 close", "goto label03", "if $ z1 == 0 goto label04", "label r26 = org apache http pool abstract conn pool r0", "$ r4 = r26 lease", "r18 = $ r4 iterator", "label $ z2 = r18 have next", "if $ z2 == 0 goto label06", "$ r12 = r18 next", "r19 = org apache http pool pool entry $ r12", "r19 close", "goto label05", "if $ z2 == 0 goto label06", "label r27 = org apache http pool abstract conn pool r0", "$ r5 = r27 route to pool", "$ r6 = $ r5 value", "r20 = $ r6 iterator", "label $ z3 = r20 have next", "if $ z3 == 0 goto label08", "$ r11 = r20 next", "r21 = org apache http pool route specific pool $ r11", "r21 shutdown", "goto label07", "if $ z3 == 0 goto label08", "label r28 = org apache http pool abstract conn pool r0", "$ r7 = r28 route to pool", "$ r7 clear", "r29 = org apache http pool abstract conn pool r0", "$ r8 = r29 lease", "$ r8 clear", "r30 = org apache http pool abstract conn pool r0", "$ r9 = r30 available", "$ r9 clear", "label r31 = org apache http pool abstract conn pool r0", "$ r10 = r31 lock", "$ r10 unlock", "goto label12", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache http entity content type r0", "$ r2 = r4 get mime type", "$ r3 = org apache http entity content type create $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i3 = r2 get pos", "i0 = r2 get pos", "i1 = r2 get upper bound", "i4 = i0", "label if i4 > = i1 goto label3", "c2 = r1 char at i4", "$ z0 = org apache http message token parser be whitespace c2", "if $ z0 ! = 0 goto label2", "goto label3", "label r2 update po i3", "return", "if $ z0 ! = 0 goto label2", "label i3 = i3 + 1", "i4 = i4 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache http util args not null r0 \\ `` response\\ ``", "$ r3 = r0 get entity", "org apache http util entity utils consume $ r3", "r0 set entity r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 1", "if r0 ! = null goto label1", "label i2 = 0", "label $ i0 = r0 length", "if i2 > = $ i0 goto label4", "$ c1 = r0 char at i2", "$ z0 = java lang character be whitespace $ c1", "if $ z0 ! = 0 goto label3", "return 0", "if $ z0 ! = 0 goto label3", "label i2 = i2 + 1", "goto label2", "if i2 > = $ i0 goto label4", "label return 1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r3 = org apache http impl nio n http connection base r0", "$ i0 = r3 status", "if $ i0 == 0 goto label1", "r2 = new org apache http connection close exception", "specialinvoke r2 < init >", "r4 = java lang throwable r2", "throw r4", "if $ i0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = r1 attachment", "r2 = org apache http impl nio reactor i o session impl $ r4", "label $ z0 = r1 be acceptable", "if $ z0 == 0 goto label2", "r7 = org apache http impl nio reactor abstract i o reactor r0", "r7 acceptable r1", "label $ z1 = r1 be connectable", "if $ z1 == 0 goto label3", "r8 = org apache http impl nio reactor abstract i o reactor r0", "r8 connectable r1", "label $ z2 = r1 be readable", "if $ z2 == 0 goto label4", "r2 reset last read", "r9 = org apache http impl nio reactor abstract i o reactor r0", "r9 readable r1", "label $ z3 = r1 be writable", "if $ z3 == 0 goto label5", "r2 reset last write", "r10 = org apache http impl nio reactor abstract i o reactor r0", "r10 writable r1", "label goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org apache http impl nio reactor abstract i o reactor r0", "$ r2 = r3 close session", "$ r2 add r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r8 = org apache http impl nio reactor abstract multiworker i o reactor r0", "$ r3 = r8 status lock", "entermonitor $ r3", "label $ l2 = java lang system current time millis", "l1 = $ l2 + l0", "l6 = l0", "label r9 = org apache http impl nio reactor abstract multiworker i o reactor r0", "$ r6 = r9 status", "$ r7 = org apache http nio reactor i o reactor status shut_down", "if $ r6 == $ r7 goto label3", "r10 = org apache http impl nio reactor abstract multiworker i o reactor r0", "$ r4 = r10 status lock", "$ r4 wait l6", "$ b3 = l0 cmp 0l", "if $ b3 < = 0 goto label2", "$ l4 = java lang system current time millis", "l6 = l1 - $ l4", "$ b5 = l6 cmp 0l", "if $ b5 > 0 goto label2", "goto label3", "label exitmonitor $ r3", "label goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl nio reactor i o reactor config r0", "$ l0 = r1 shutdown grace period", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http nio protocol http async service r0", "$ r1 = r2 response factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http nio protocol http async service r0", "$ r1 = r2 exception logger", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http nio util expandable buffer r0", "$ i0 = r1 mode", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache http nio util expandable buffer r0", "$ r1 = r2 buffer", "$ i0 = $ r1 capacity", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get have var params", "$ r2 = java lang boolean value of $ r1", "$ z0 = $ r2 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net revelc code impsort ex imp sort exception r0", "$ r1 = r2 reason", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = com fasterxml jackson core base parser base r0", "$ r2 = r10 _parsing context", "$ z0 = $ r2 in root", "if $ z0 ! = 0 goto label3", "r11 = com fasterxml jackson core base parser base r0", "$ r3 = r11 _parsing context", "$ z1 = $ r3 in array", "if $ z1 == 0 goto label1", "$ r9 = \\ `` array\\ ``", "goto label2", "label $ r4 = newarray java lang object [ 2 ]", "$ r4 [ 0 ] = $ r9", "r12 = com fasterxml jackson core base parser base r0", "$ r5 = r12 _parsing context", "r13 = com fasterxml jackson core base parser base r0", "$ r6 = r13 _get source reference", "$ r7 = $ r5 get start location $ r6", "$ r4 [ 1 ] = $ r7", "$ r8 = java lang string format \\ `` expect close marker for % s start marker at % s \\", "r14 = com fasterxml jackson core base parser base r0", "r14 _report invalid e o f $ r8 null", "label return", "if $ z1 == 0 goto label1", "label $ r9 = \\ `` object\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson core base64 variant r0", "$ r1 = r3 _name", "$ r2 = com fasterxml jackson core base64 variant value of $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "i12 = @ parameter2", "i13 = i12 + 1", "r6 = com fasterxml jackson core base64 variant r0", "$ r2 = r6 _base64 to ascii b", "$ i1 = i0 > > 18", "$ i2 = $ i1 & 63", "$ b3 = $ r2 [ $ i2 ]", "r1 [ i12 ] = $ b3", "i14 = i13 + 1", "r7 = com fasterxml jackson core base64 variant r0", "$ r3 = r7 _base64 to ascii b", "$ i4 = i0 > > 12", "$ i5 = $ i4 & 63", "$ b6 = $ r3 [ $ i5 ]", "r1 [ i13 ] = $ b6", "i15 = i14 + 1", "r8 = com fasterxml jackson core base64 variant r0", "$ r4 = r8 _base64 to ascii b", "$ i7 = i0 > > 6", "$ i8 = $ i7 & 63", "$ b9 = $ r4 [ $ i8 ]", "r1 [ i14 ] = $ b9", "i16 = i15 + 1", "r9 = com fasterxml jackson core base64 variant r0", "$ r5 = r9 _base64 to ascii b", "$ i10 = i0 & 63", "$ b11 = $ r5 [ $ i10 ]", "r1 [ i15 ] = $ b11", "return i16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang object [ 2 ]", "r5 = com fasterxml jackson core base64 variant r0", "$ r2 = r5 get name", "$ r1 [ 0 ] = $ r2", "r6 = com fasterxml jackson core base64 variant r0", "$ c0 = r6 get pad char", "$ r3 = java lang character value of $ c0", "$ r1 [ 1 ] = $ r3", "$ r4 = java lang string format \\ `` unexpected end of base64-encoded string base64 variant \\ ' % s\\ ' expect pad one or more \\ ' % c\\ ' character at the end\\", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson core filter token filter r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com fasterxml jackson core filter token filter r0", "return r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson core filter token filter r0", "$ z0 = r1 _include scalar", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core format data format matcher r0", "$ r1 = r2 _match", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = com fasterxml jackson core io char type get7 bit output escape", "$ i0 = lengthof r0", "$ r1 = java util array copy of r0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com fasterxml jackson core io json string encoder instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = com fasterxml jackson core io segment string writer r0", "$ r2 = r4 _buffer", "r1 = $ r2 content a string", "r5 = com fasterxml jackson core io segment string writer r0", "$ r3 = r5 _buffer", "$ r3 release buffer", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core io serialize string r0", "$ r1 = r2 _value", "$ i0 = $ r1 length", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r4 = com fasterxml jackson core json factory r0", "r2 = r4 get format name", "if r2 == null goto label2", "$ r3 = r1 get schema type", "$ z0 = r2 equal $ r3", "if $ z0 == 0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core json factory r0", "$ r1 = r2 _input decorator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new java lang string builder", "specialinvoke r4 < init > 100", "r5 = com fasterxml jackson core json location r0", "$ r2 = r5 _append source desc r4", "$ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson core json parser r0", "$ r1 = r3 current token", "$ r2 = com fasterxml jackson core json token start_array", "if $ r1 ! = $ r2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 ! = $ r2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com fasterxml jackson core json parser r0", "$ r2 = r4 _codec", "r5 = com fasterxml jackson core json parser r0", "$ r3 = $ r2 read value r5 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` operation not support by parser of type \\ ``", "$ r4 = r0 get class", "$ r5 = $ r4 get name", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 to string", "specialinvoke $ r1 < init > $ r7", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core json pointer r0", "$ r1 = r2 _next segment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i3 = 0", "r12 = com fasterxml jackson core sym char to name canonicalizer r0", "$ r1 = r12 _symbols", "i0 = lengthof $ r1", "i4 = 0", "label if i4 > = i0 goto label3", "r13 = com fasterxml jackson core sym char to name canonicalizer r0", "$ r8 = r13 _symbols", "r9 = $ r8 [ i4 ]", "if r9 == null goto label2", "i3 = i3 + 1", "label i4 = i4 + 1", "goto label1", "label if i4 > = i0 goto label3", "label i5 = i0 > > 1", "i6 = 0", "label if i6 > = i5 goto label7", "r14 = com fasterxml jackson core sym char to name canonicalizer r0", "$ r7 = r14 _buckets", "r10 = $ r7 [ i6 ]", "label if r10 == null goto label6", "label i6 = i6 + 1", "goto label4", "label if i6 > = i5 goto label7", "label r15 = com fasterxml jackson core sym char to name canonicalizer r0", "$ i1 = r15 _size", "if i3 == $ i1 goto label8", "r11 = new java lang illegal state exception", "$ r3 = newarray java lang object [ 2 ]", "r16 = com fasterxml jackson core sym char to name canonicalizer r0", "$ i2 = r16 _size", "$ r4 = java lang integer value of $ i2", "$ r3 [ 0 ] = $ r4", "$ r5 = java lang integer value of i3", "$ r3 [ 1 ] = $ r5", "$ r6 = java lang string format \\ `` internal error expect internal size % d v calculate count % d\\", "specialinvoke r11 < init > $ r6", "throw r11", "if i3 == $ i1 goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core type resolve type r0", "$ r1 = r2 get reference type", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core util json parser delegate r0", "$ r1 = r2 delegate", "$ r1 clear current token", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com fasterxml jackson core util json parser delegate r0", "$ r2 = r3 delegate", "$ i0 = $ r2 get text r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new java lang runtime exception", "specialinvoke $ r0 < init > \\ `` internal error this code path should never get executed\\ ``", "throw $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com fasterxml jackson core filter token filter context r0", "$ z0 = r3 _need to handle name", "if $ z0 == 0 goto label1", "r4 = com fasterxml jackson core filter token filter context r0", "r4 _need to handle name = 0", "r5 = com fasterxml jackson core filter token filter context r0", "$ r2 = r5 _current name", "r1 write field name $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = com fasterxml jackson core io i o context r0", "$ r1 = r4 _read i o buffer", "r5 = com fasterxml jackson core io i o context r0", "r5 _verify alloc $ r1", "r6 = com fasterxml jackson core io i o context r0", "$ r2 = r6 _buffer recycler", "$ r3 = $ r2 alloc byte buffer 0", "r7 = com fasterxml jackson core io i o context r0", "r7 _read i o buffer = $ r3", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core json location r0", "$ r1 = r2 _content reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson core json parser r0", "$ r1 = r2 get token location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson core util json parser delegate r0", "$ r1 = r3 delegate", "$ r2 = $ r1 get big integer value", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 be number", "if $ z0 == 0 goto label1", "$ z3 = r2 be number", "if $ z3 == 0 goto label1", "$ z4 = com github fge jackson json num equal num equal r1 r2", "return $ z4", "if $ z3 == 0 goto label1", "label r3 = com github fge jackson node type get node type r1", "r4 = com github fge jackson node type get node type r2", "if r3 == r4 goto label2", "return 0", "if r3 == r4 goto label2", "label $ z1 = r1 be container node", "if $ z1 ! = 0 goto label3", "$ z2 = r1 equal r2", "return $ z2", "if $ z1 ! = 0 goto label3", "label $ i0 = r1 size", "$ i1 = r2 size", "if $ i0 == $ i1 goto label4", "label $ r5 = com github fge jackson node type array", "if r3 ! = $ r5 goto label5", "r6 = com github fge jackson json num equal r0", "$ z5 = specialinvoke r6 array equal r1 r2", "goto label6", "label return $ z5", "if r3 ! = $ r5 goto label5", "label r7 = com github fge jackson json num equal r0", "$ z5 = specialinvoke r7 object equal r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = com github fge jackson jsonpointer json pointer bundle", "$ r3 check not null r1 \\ `` null input\\ ``", "r9 = com github fge jackson jsonpointer json pointer r0", "$ r5 = r9 token resolvers", "r2 = com google common collect list new array list $ r5", "$ r6 = r1 token resolvers", "r2 add all $ r6", "r8 = new com github fge jackson jsonpointer json pointer", "specialinvoke r8 < init > r2", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = r1", "r7 = com github fge jackson jsonpointer tree pointer r0", "$ r4 = r7 token resolvers", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = com github fge jackson jsonpointer token resolver $ r5", "if r6 ! = null goto label2", "goto label3", "label return r6", "if r6 ! = null goto label2", "label r6 = r3 get r6", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind bean description r0", "$ r1 = r2 _type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com fasterxml jackson databind cfg config override r0", "$ r2 = r6 _overrides", "if $ r2 ! = null goto label1", "return null", "if $ r2 ! = null goto label1", "label r7 = com fasterxml jackson databind cfg config override r0", "$ r3 = r7 _overrides", "$ r4 = $ r3 get r1", "$ r5 = com fasterxml jackson databind cfg config override $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind cfg mapper builder r0", "$ r2 = r5 _mapper", "$ r2 set default setter info r1", "r6 = com fasterxml jackson databind cfg mapper builder r0", "$ r4 = r6 _this", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind cfg mapper builder r0", "$ r2 = r5 _mapper", "$ r2 set time zone r1", "r6 = com fasterxml jackson databind cfg mapper builder r0", "$ r4 = r6 _this", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind cfg mapper config base r0", "$ r1 = r2 _mix ins", "$ i0 = $ r1 local size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get simple name", "r4 = com fasterxml jackson databind deser bean deserializer base r0", "$ r3 = r4 find property $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson databind deser bean deserializer builder r0", "r2 add property r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind deser impl bean property map r0", "$ r1 = r2 _props in order", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind deser std delegate deserializer r0", "$ r1 = r2 _delegatee", "$ z0 = $ r1 be cachable", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com fasterxml jackson databind deserialization config r0", "$ i1 = r1 _deser feature", "$ i2 = $ i1 & i0", "if $ i2 ! = i0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i2 ! = i0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind java type r0", "$ r1 = r2 _class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ r2 = new com fasterxml jackson databind json map exception $ reference", "specialinvoke $ r2 < init > r1 i0", "$ r3 = com fasterxml jackson databind json map exception wrap with path r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = new java lang string builder", "specialinvoke r4 < init >", "r5 = com fasterxml jackson databind json map exception r0", "$ r2 = r5 get path reference r4", "$ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = com fasterxml jackson databind module simple module r0", "$ r4 = r8 _subtypes", "if $ r4 ! = null goto label1", "r7 = new java util link hash set", "specialinvoke r7 < init >", "r9 = com fasterxml jackson databind module simple module r0", "r9 _subtypes = r7", "label i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r1 [ i1 ]", "r10 = com fasterxml jackson databind module simple module r0", "r10 _check not null r3 \\ `` subtype to register\\ ``", "r11 = com fasterxml jackson databind module simple module r0", "$ r5 = r11 _subtypes", "$ r5 add r3", "i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label3", "label r12 = com fasterxml jackson databind module simple module r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com fasterxml jackson databind node array node r0", "$ r3 = r4 _children", "$ r2 = r1 _children", "$ r3 add all $ r2", "r5 = com fasterxml jackson databind node array node r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = com fasterxml jackson databind node array node r0", "r1 = r3 array node", "r4 = com fasterxml jackson databind node array node r0", "r5 = com fasterxml jackson databind json node r1", "r4 _insert i0 r5", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com fasterxml jackson databind node array node r0", "$ r2 = r3 _children", "$ r2 add r1", "r4 = com fasterxml jackson databind node array node r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind node binary node r0", "$ r1 = r2 _data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "$ r1 = com fasterxml jackson databind node int node value of b0", "r2 = com fasterxml jackson databind node numeric node $ r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = new com fasterxml jackson databind node array node", "r3 = com fasterxml jackson databind node json node factory r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new com fasterxml jackson databind node p o j o node", "specialinvoke r3 < init > r1", "r4 = com fasterxml jackson databind node value node r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = @ parameter1", "if r5 ! = null goto label1", "r6 = com fasterxml jackson databind node object node r0", "r5 = r6 null node", "label r7 = com fasterxml jackson databind node object node r0", "$ r2 = r7 _children", "$ r3 = $ r2 put r1 r5", "$ r4 = com fasterxml jackson databind json node $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = com fasterxml jackson databind node p o j o node r0", "$ r1 = r4 _value", "if $ r1 ! = null goto label1", "$ r3 = \\ `` null\\ ``", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r5 = com fasterxml jackson databind node p o j o node r0", "$ r2 = r5 _value", "$ r3 = $ r2 to string"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind node p o j o node r0", "$ r1 = r2 _value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com fasterxml jackson databind object mapper r0", "$ r2 = r4 _config override", "$ r3 = com fasterxml jackson databind introspect visibility checker $ std construct r1", "r5 = com fasterxml jackson databind introspect visibility checker $ r3", "$ r2 set default visibility r5", "r6 = com fasterxml jackson databind object mapper r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com fasterxml jackson databind object mapper r0", "$ r2 = r3 _json factory", "$ z0 = $ r2 be enable r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com fasterxml jackson databind object mapper r0", "$ r2 = r4 get serialization config", "r5 = com fasterxml jackson databind object mapper r0", "$ r3 = r5 _serializer provider $ r2", "$ z0 = $ r3 have serializer for r1 null", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = com fasterxml jackson databind object writer r0", "$ r1 = r4 _config", "$ r2 = $ r1 get default pretty printer", "r5 = com fasterxml jackson databind object writer r0", "$ r3 = r5 with $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = com fasterxml jackson databind ser bean property writer r0", "$ r3 = r8 _internal setting", "if $ r3 ! = null goto label1", "r7 = new java util hash map", "specialinvoke r7 < init >", "r9 = com fasterxml jackson databind ser bean property writer r0", "r9 _internal setting = r7", "label r10 = com fasterxml jackson databind ser bean property writer r0", "$ r4 = r10 _internal setting", "$ r5 = $ r4 put r1 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind ser default serializer provider r0", "$ r1 = r2 _serializer cache", "$ r1 flush", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new java util hash set", "$ i0 = lengthof r0", "specialinvoke r4 < init > $ i0", "java util collection add all r4 r0", "r5 = new com fasterxml jackson databind ser impl simple bean property filter $ filter except filter", "specialinvoke r5 < init > r4", "r6 = com fasterxml jackson databind ser impl simple bean property filter r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i2 = lengthof r1", "if $ i2 < = 0 goto label1", "$ r4 = r1 [ 0 ]", "$ z0 = $ r4 instanceof com fasterxml jackson core json json write feature", "if $ z0 == 0 goto label1", "r8 = com fasterxml jackson databind serialization config r0", "$ r5 = specialinvoke r8 _with json write feature r1", "return $ r5", "if $ z0 == 0 goto label1", "label r9 = com fasterxml jackson databind serialization config r0", "i9 = r9 _format write feature", "r10 = com fasterxml jackson databind serialization config r0", "i10 = r10 _format write feature to change", "i0 = lengthof r1", "i11 = 0", "label if i11 > = i0 goto label3", "r3 = r1 [ i11 ]", "i1 = r3 get mask", "i9 = i9 | i1", "i10 = i10 | i1", "i11 = i11 + 1", "goto label2", "label if i11 > = i0 goto label3", "label r11 = com fasterxml jackson databind serialization config r0", "$ i3 = r11 _format write feature", "if $ i3 ! = i9 goto label4", "r12 = com fasterxml jackson databind serialization config r0", "$ i8 = r12 _format write feature to change", "if $ i8 ! = i10 goto label4", "$ r6 = r0", "goto label5", "label r18 = com fasterxml jackson databind serialization config $ r6", "return r18", "if $ i8 ! = i10 goto label4", "label r7 = new com fasterxml jackson databind serialization config", "$ r6 = r7", "r13 = com fasterxml jackson databind serialization config r0", "$ i7 = r13 _mapper feature", "r14 = com fasterxml jackson databind serialization config r0", "$ i6 = r14 _ser feature", "r15 = com fasterxml jackson databind serialization config r0", "$ i5 = r15 _generator feature", "r16 = com fasterxml jackson databind serialization config r0", "$ i4 = r16 _generator feature to change", "r17 = com fasterxml jackson databind serialization config r0", "specialinvoke r7 < init > r17 $ i7 $ i6 $ i5 $ i4 i9 i10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` can not pass null json serializer\\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = com fasterxml jackson databind serializer provider r0", "r4 _null value serializer = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind serializer provider r0", "$ r1 = r2 get config", "r3 = com fasterxml jackson databind cfg mapper config $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson databind serializer provider r0", "$ r1 = r3 _config", "$ r2 = $ r1 get filter provider", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com fasterxml jackson databind serializer provider r0", "$ r2 = r3 _null value serializer", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com fasterxml jackson databind type type factory unknown type", "$ r3 = com fasterxml jackson databind type type factory unknown type", "r5 = com fasterxml jackson databind type type factory r0", "$ r4 = r5 construct map type r1 $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 get modifier", "$ i1 = i0 & 1536", "if $ i1 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` [ null ] \\ ``", "if r0 ! = null goto label1", "label $ r1 = new java lang string builder", "$ i0 = r0 length", "$ i1 = $ i0 + 2", "specialinvoke $ r1 < init > $ i1", "$ r2 = $ r1 append 96", "$ r3 = $ r2 append r0", "$ r4 = $ r3 append 96", "$ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r4 = com fasterxml jackson databind util object buffer r0", "r4 _reset", "r5 = com fasterxml jackson databind util object buffer r0", "$ r1 = r5 _free buffer", "if $ r1 ! = null goto label1", "$ r3 = newarray java lang object [ 12 ]", "r6 = com fasterxml jackson databind util object buffer r0", "r6 _free buffer = $ r3", "return $ r3", "if $ r1 ! = null goto label1", "label r7 = com fasterxml jackson databind util object buffer r0", "$ r2 = r7 _free buffer", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r6 = com fasterxml jackson databind util object buffer r0", "$ i2 = r6 _size", "i1 = i0 + $ i2", "$ r4 = java lang reflect array new instance r2 i1", "$ r5 = java lang object [ ] $ r4", "r3 = java lang object [ ] $ r5", "r7 = com fasterxml jackson databind util object buffer r0", "r7 _copy to r3 i1 r1 i0", "r8 = com fasterxml jackson databind util object buffer r0", "r8 _reset", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson databind util simple bean property definition r0", "$ r1 = r3 _full name", "$ r2 = $ r1 get simple name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new com fasterxml jackson core io serialize string", "specialinvoke r3 < init > r1", "r4 = com fasterxml jackson core serializable string r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com fasterxml jackson databind deser bean deserializer builder r0", "$ r2 = r6 _includable prop", "if $ r2 ! = null goto label1", "r5 = new java util hash set", "specialinvoke r5 < init >", "r7 = com fasterxml jackson databind deser bean deserializer builder r0", "r7 _includable prop = r5", "label r8 = com fasterxml jackson databind deser bean deserializer builder r0", "$ r3 = r8 _includable prop", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson databind util enum resolver r0", "$ z0 = r1 _is from int value", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = com fasterxml jackson databind mapper feature use_annotations", "r4 = com fasterxml jackson databind deserialization config r0", "$ z0 = r4 be enable $ r1", "if $ z0 == 0 goto label1", "$ r3 = specialinvoke r0 get annotation introspector", "return $ r3", "if $ z0 == 0 goto label1", "label $ r2 = com fasterxml jackson databind introspect nop annotation introspector instance", "r5 = com fasterxml jackson databind annotation introspector $ r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com fasterxml jackson databind deserialization context r0", "$ r3 = r4 weird string exception null r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = com fasterxml jackson databind introspect annotate class r0", "$ r3 = r6 _mix in resolver", "if $ r3 == null goto label1", "r7 = com fasterxml jackson databind introspect annotate class r0", "$ r4 = r7 _mix in resolver", "$ r5 = $ r4 find mix in class for r2", "r8 = com fasterxml jackson databind introspect annotate class r0", "r8 _add class mix in r1 r2 $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = specialinvoke r0 get message", "r11 = com fasterxml jackson databind json map exception r0", "$ r2 = r11 _path", "if $ r2 ! = null goto label1", "return r1", "if $ r2 ! = null goto label1", "label if r1 ! = null goto label2", "r9 = new java lang string builder", "$ r6 = r9", "specialinvoke r9 < init >", "goto label3", "label $ r6 append \\ `` through reference chain \\ ``", "r12 = com fasterxml jackson databind json map exception r0", "r8 = r12 get path reference $ r6", "r8 append 41", "$ r5 = r8 to string", "return $ r5", "label if r1 ! = null goto label2", "label r10 = new java lang string builder", "$ r6 = r10", "specialinvoke r10 < init > r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "$ r1 = com fasterxml jackson databind object mapper $ default type object_and_non_concrete", "r3 = com fasterxml jackson databind object mapper r0", "$ r2 = r3 enable default type $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind object mapper r0", "$ r1 = r2 create object node", "r3 = com fasterxml jackson core tree node $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com fasterxml jackson databind ser std map serializer r0", "$ r1 = r2 _key serializer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r2 = @ parameter0", "r3 = com fasterxml jackson databind util class util get root cause r2", "$ z0 = r3 instanceof java lang exception", "if $ z0 == 0 goto label1", "$ r1 = java lang exception r3", "throw $ r1", "if $ z0 == 0 goto label1", "label $ r0 = java lang error r3", "throw $ r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 length", "if $ i0 < 5 goto label1", "$ c1 = r1 char at 0", "$ z0 = java lang character be digit $ c1", "if $ z0 == 0 goto label1", "$ c2 = r1 char at 3", "$ z1 = java lang character be digit $ c2", "if $ z1 == 0 goto label1", "$ c3 = r1 char at 4", "if $ c3 ! = 45 goto label1", "return 1", "if $ c3 ! = 45 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["$ r0 = com fasterxml jackson databind node boolean node true", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r5 = com fasterxml jackson dataformat yaml u t f8 reader r0", "r5 _input ptr = 0", "r6 = com fasterxml jackson dataformat yaml u t f8 reader r0", "r6 _input end = 0", "r7 = com fasterxml jackson dataformat yaml u t f8 reader r0", "$ r1 = r7 _input source", "if $ r1 == null goto label2", "r8 = com fasterxml jackson dataformat yaml u t f8 reader r0", "$ r4 = r8 _input source", "r9 = com fasterxml jackson dataformat yaml u t f8 reader r0", "$ r3 = r9 _input buffer", "r10 = com fasterxml jackson dataformat yaml u t f8 reader r0", "$ r2 = r10 _input buffer", "$ i1 = lengthof $ r2", "i0 = $ r4 read $ r3 0 $ i1", "if i0 < = 0 goto label1", "r11 = com fasterxml jackson dataformat yaml u t f8 reader r0", "r11 _input end = i0", "label return i0", "if $ r1 == null goto label2", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com fasterxml jackson datatype jdk8 jdk8 module r0", "r1 _cfg handle absent a null = z0", "r2 = com fasterxml jackson datatype jdk8 jdk8 module r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof com sun el method expression impl", "if $ z0 == 0 goto label1", "r2 = com sun el method expression impl r1", "r5 = com sun el method expression impl r0", "$ r3 = specialinvoke r5 get node", "$ r4 = specialinvoke r2 get node", "$ z1 = $ r3 equal $ r4", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r1 set property resolve 0", "i1 = 0", "label r7 = javax el composite e l resolver r0", "$ i0 = r7 size", "if i1 > = $ i0 goto label3", "r8 = javax el composite e l resolver r0", "$ r4 = r8 el resolvers", "$ r5 = $ r4 [ i1 ]", "r6 = $ r5 get value r1 r2 r3", "$ z0 = r1 be property resolve", "if $ z0 == 0 goto label2", "return r6", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = javax el e l context r0", "$ r2 = r6 listener", "if $ r2 ! = null goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = javax el e l context r0", "r7 listener = r5", "label r8 = javax el e l context r0", "$ r3 = r8 listener", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = javax el e l context r0", "$ r4 = r8 lambda args", "if $ r4 ! = null goto label1", "return null", "if $ r4 ! = null goto label1", "label r9 = javax el e l context r0", "$ r5 = r9 lambda args", "$ i0 = $ r5 size", "i1 = $ i0 - 1", "label if i1 < 0 goto label4", "r10 = javax el e l context r0", "$ r6 = r10 lambda args", "$ r7 = $ r6 element at i1", "r2 = java util map $ r7", "r3 = r2 get r1", "if r3 == null goto label3", "return r3", "if r3 == null goto label3", "label i1 = i1 + -1", "goto label2", "label if i1 < 0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = javax el e l manager r0", "$ r2 = r5 get e l context", "r4 = new javax el bean name e l resolver", "specialinvoke r4 < init > r1", "r6 = javax el e l resolver r4", "$ r2 add e l resolver r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax el e l manager r0", "$ r2 = r3 get e l context", "$ r2 add e l resolver r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = javax el e l manager r0", "$ r4 = r9 get e l context", "$ r5 = $ r4 get bean", "r3 = $ r5 get r1", "r10 = javax el e l manager r0", "$ r6 = r10 get e l context", "$ r7 = $ r6 get bean", "$ r7 put r1 r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax el e l processor r0", "$ r2 = r3 get value r1 class \\ `` ljava lang object \\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "if r1 ! = null goto label1", "$ r10 = new java lang null pointer exception", "specialinvoke $ r10 < init >", "throw $ r10", "if r1 ! = null goto label1", "label $ z0 = r2 instanceof javax el e l class", "if $ z0 == 0 goto label2", "$ z1 = r3 instanceof java lang string", "if $ z1 ! = 0 goto label3", "label return null", "if $ z1 ! = 0 goto label3", "label $ r8 = javax el e l class r2", "r6 = $ r8 get klass", "r7 = java lang string r3", "$ r9 = \\ `` < init > \\ ``", "$ z2 = $ r9 equal r7", "if $ z2 == 0 goto label4", "r11 = javax el e l util find constructor r6 r4 r5", "r12 = javax el e l util invoke constructor r1 r11 r5", "goto label5", "label r1 set property resolve r2 r3", "return r12", "if $ z2 == 0 goto label4", "label r13 = javax el e l util find method r6 r7 r4 r5 1", "r12 = javax el e l util invoke method r1 r13 null r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r10 = org glassfish json json patch builder impl r0", "$ r2 = r10 builder", "$ r3 = javax json json create object builder", "$ r4 = javax json json patch $ operation test", "$ r5 = $ r4 operation name", "$ r6 = $ r3 add \\ `` op\\", "$ r7 = $ r6 add \\ `` path\\", "$ r8 = $ r7 add \\ `` value\\", "$ r2 add $ r8", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax json bind jsonb config r0", "$ r2 = r3 set property \\ `` jsonb property-order-strategy\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax w r client entity r0", "$ r1 = r3 variant", "$ r2 = $ r1 get medium type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = javax w r core abstract multivalued map r0", "r3 = r4 get value r1", "if r2 == null goto label1", "r3 add 0 r2", "goto label2", "label return", "if r2 == null goto label1", "label r5 = javax w r core abstract multivalued map r0", "r5 add first null r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = javax w r core cache control r0", "$ i0 = r1 max age", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = javax w r core cache control r0", "$ r1 = r5 private field", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = javax w r core cache control r0", "r6 private field = r4", "label r7 = javax w r core cache control r0", "$ r2 = r7 private field", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = javax w r core cache control r0", "$ z0 = r1 no store", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax w r core cookie r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax w r core cookie r0", "$ i0 = r1 version", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = javax w r core cookie header_delegate", "$ r2 = $ r1 to string r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = javax w r ext runtime delegate get instance", "r1 = $ r2 create link builder", "r1 uri r0", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = javax w r core response $ status no_content", "$ r1 = javax w r core response status $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = javax w r core response $ status not_modified", "$ r1 = javax w r core response status $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javax w r core response $ status not_acceptable", "$ r2 = javax w r core response status $ r1", "$ r3 = $ r2 variant r0", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javax xml bind datatype converter the converter", "if $ r1 ! = null goto label1", "javax xml bind datatype converter init converter", "label $ r2 = javax xml bind datatype converter the converter", "$ r3 = $ r2 print decimal r0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax xml bind helper abstract marshaller impl r0", "r2 no n s schema location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javax xml bind helper abstract unmarshaller impl r0", "$ r1 = r2 event handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax xml bind j a x b element r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r12 = javax xml bind j a x b exception r0", "$ r1 = r12 link exception", "if $ r1 ! = null goto label1", "$ r10 = specialinvoke r0 to string", "goto label2", "label return $ r10", "if $ r1 ! = null goto label1", "label r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r3 = specialinvoke r0 to string", "$ r4 = r11 append $ r3", "$ r5 = $ r4 append \\ `` \\n - with link exception\\n [ \\ ``", "r13 = javax xml bind j a x b exception r0", "$ r6 = r13 link exception", "$ r7 = $ r6 to string", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r17 = org jboss jandex annotation instance r0", "$ r6 = r17 name", "r3 = r1 get class by name $ r6", "if r3 ! = null goto label1", "r16 = new java lang illegal argument exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r10 = r15 append \\ `` index do not contain annotation definition \\ ``", "r18 = org jboss jandex annotation instance r0", "$ r11 = r18 name", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 to string", "specialinvoke r16 < init > $ r13", "throw r16", "if r3 ! = null goto label1", "label r19 = org jboss jandex annotation instance r0", "r4 = r19 value r2", "if r4 == null goto label2", "return r4", "if r4 == null goto label2", "label $ r7 = newarray org jboss jandex type [ 0 ]", "r5 = r3 method r2 $ r7", "if r5 ! = null goto label3", "$ r14 = null", "goto label4", "label return $ r14", "if r5 ! = null goto label3", "label $ r14 = r5 default value"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss jandex array type r0", "$ r1 = r2 component", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss jandex class info r0", "$ z0 = r1 have no args constructor", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org jboss jandex class info r0", "$ r1 = r4 nest info", "if $ r1 == null goto label1", "r5 = org jboss jandex class info r0", "$ r2 = r5 nest info", "$ r3 = org jboss jandex class info $ nest info access $ 300 $ r2", "goto label2", "label return $ r3", "if $ r1 == null goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss jandex dot name r0", "$ z0 = r1 inner class", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org jboss jandex field info r0", "$ r1 = r3 internal", "$ r2 = $ r1 name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org jboss jandex field info r0", "$ r1 = r3 internal", "$ r2 = $ r1 type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jboss jandex field info r0", "$ r2 = r3 internal", "$ z0 = $ r2 have annotation r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jboss jandex index writer r0", "$ i0 = r2 write r1 9", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "z1 = @ parameter3", "z2 = @ parameter4", "$ r3 = java lang system out", "$ r2 = java lang system err", "$ r4 = org jboss jandex jar indexer create jar index r0 r1 z0 z1 z2 $ r3 $ r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org jboss jandex method info r0", "$ r1 = r3 method internal", "$ r2 = $ r1 parameter name i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss jandex parameterized type r0", "$ r1 = r2 owner", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss jandex type target r0", "$ r1 = r2 target", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss jandex unresolved type variable r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org dataloader data loader r0", "$ r2 = r3 load r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org dataloader data loader option r0", "$ z0 = r1 cache exception enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org dataloader data loader option r0", "r1 cache exception enable = z0", "r2 = org dataloader data loader option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org dataloader stats statistics", "r4 = org dataloader stats statistic r0", "$ l0 = r4 load count", "$ l1 = r1 get load count", "$ l2 = $ l0 + $ l1", "r5 = org dataloader stats statistic r0", "$ l3 = r5 load error count", "$ l4 = r1 get load error count", "$ l5 = $ l3 + $ l4", "r6 = org dataloader stats statistic r0", "$ l6 = r6 batch invoke count", "$ l7 = r1 get batch invoke count", "$ l8 = $ l6 + $ l7", "r7 = org dataloader stats statistic r0", "$ l9 = r7 batch load count", "$ l10 = r1 get batch load count", "$ l11 = $ l9 + $ l10", "r8 = org dataloader stats statistic r0", "$ l12 = r8 batch load exception count", "$ l13 = r1 get batch load exception count", "$ l14 = $ l12 + $ l13", "r9 = org dataloader stats statistic r0", "$ l15 = r9 cache hit count", "$ l16 = r1 get cache hit count", "$ l17 = $ l15 + $ l16", "specialinvoke r3 < init > $ l2 $ l5 $ l8 $ l11 $ l14 $ l17", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["$ r0 = org dataloader try nil_throwable", "$ r1 = org dataloader try fail $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r19 = new java util array list", "specialinvoke r19 < init >", "i1 = 0", "r4 = r2 get deltas", "r15 = r4 iterator", "label $ z0 = r15 have next", "if $ z0 == 0 goto label4", "$ r12 = r15 next", "r16 = com github difflib patch abstract delta $ r12", "r20 = com github difflib text diff row generator r0", "$ r13 = specialinvoke r20 decompress delta r16", "r5 = $ r13 iterator", "label $ z3 = r5 have next", "if $ z3 == 0 goto label3", "$ r14 = r5 next", "r6 = com github difflib patch abstract delta $ r14", "r21 = com github difflib text diff row generator r0", "i1 = specialinvoke r21 transform delta into diff row r1 i1 r19 r6", "goto label2", "if $ z3 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label $ i0 = r1 size", "$ r8 = r1 sub list i1 $ i0", "r17 = $ r8 iterator", "label $ z1 = r17 have next", "if $ z1 == 0 goto label6", "$ r9 = r17 next", "r18 = java lang string $ r9", "$ r10 = com github difflib text diff row $ tag equal", "r22 = com github difflib text diff row generator r0", "$ r11 = specialinvoke r22 build diff row $ r10 r18 r18", "r19 add $ r11", "goto label5", "if $ z1 == 0 goto label6", "label return r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ this", "$ r2 = com github javaparser ast compilation unit printer_key", "r7 = com github javaparser ast compilation unit r0", "$ z0 = r7 contain data $ r2", "if $ z0 ! = 0 goto label1", "r8 = com github javaparser ast compilation unit r0", "r1 = r8 create default printer", "r9 = com github javaparser ast compilation unit r0", "r9 printer r1", "label $ r3 = com github javaparser ast compilation unit printer_key", "r10 = com github javaparser ast compilation unit r0", "$ r4 = r10 get data $ r3", "$ r5 = com github javaparser printer printer $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com github javaparser utils utils assert not null r1", "r9 = com github javaparser ast compilation unit r0", "$ r3 = r9 import", "if r1 ! = $ r3 goto label1", "r10 = com github javaparser ast compilation unit r0", "return r10", "if r1 ! = $ r3 goto label1", "label $ r5 = com github javaparser ast observer observable property import", "r11 = com github javaparser ast compilation unit r0", "$ r4 = r11 import", "r12 = com github javaparser ast compilation unit r0", "r12 notify property change $ r5 $ r4 r1", "r13 = com github javaparser ast compilation unit r0", "$ r6 = r13 import", "if $ r6 == null goto label2", "r14 = com github javaparser ast compilation unit r0", "$ r7 = r14 import", "$ r7 set parent node null", "label r15 = com github javaparser ast compilation unit r0", "r15 import = r1", "r16 = com github javaparser ast compilation unit r0", "r16 set a parent node of r1", "r17 = com github javaparser ast compilation unit r0", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = com github javaparser ast compilation unit r0", "$ r2 = r9 find all class \\ `` lcom github javaparser ast body class or interface declaration \\ ``", "$ r3 = $ r2 stream", "$ r4 = compilation unit $ lambda_get local declaration from classname_4__8 bootstrap $ r1", "$ r5 = $ r3 filter $ r4", "$ r6 = java util stream collector to list", "$ r7 = $ r5 collect $ r6", "$ r8 = java util list $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com github javaparser ast expr char literal expr", "$ r2 = com github javaparser utils utils escape end of line r0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = com github javaparser ast expr name expr r0", "$ r1 = r4 get symbol resolver", "r5 = com github javaparser ast node r0", "$ r2 = $ r1 resolve declaration r5 class \\ `` lcom github javaparser resolution declaration resolve value declaration \\ ``", "$ r3 = com github javaparser resolution declaration resolve value declaration $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com github javaparser utils string escape utils escape java r1", "r3 = com github javaparser ast expr string literal expr r0", "r3 value = $ r2", "r4 = com github javaparser ast expr string literal expr r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = com github javaparser ast import declaration r0", "$ z0 = r1 be asterisk", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser ast package declaration r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = com github javaparser ast stmt for stmt r0", "$ r2 = r8 compare", "if r1 ! = $ r2 goto label1", "r9 = com github javaparser ast stmt for stmt r0", "return r9", "if r1 ! = $ r2 goto label1", "label $ r4 = com github javaparser ast observer observable property compare", "r10 = com github javaparser ast stmt for stmt r0", "$ r3 = r10 compare", "r11 = com github javaparser ast stmt for stmt r0", "r11 notify property change $ r4 $ r3 r1", "r12 = com github javaparser ast stmt for stmt r0", "$ r5 = r12 compare", "if $ r5 == null goto label2", "r13 = com github javaparser ast stmt for stmt r0", "$ r6 = r13 compare", "$ r6 set parent node null", "label r14 = com github javaparser ast stmt for stmt r0", "r14 compare = r1", "r15 = com github javaparser ast stmt for stmt r0", "r16 = com github javaparser ast node r1", "r15 set a parent node of r16", "r17 = com github javaparser ast stmt for stmt r0", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser ast stmt if stmt r0", "$ r1 = r2 then stmt", "$ z0 = $ r1 instanceof com github javaparser ast stmt block stmt", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser ast stmt if stmt r0", "$ r1 = r2 else stmt", "$ z0 = $ r1 instanceof com github javaparser ast stmt block stmt", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com github javaparser parse start name", "$ r3 = com github javaparser provider provider r1", "r5 = com github javaparser java parser r0", "$ r4 = r5 parse $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = com github javaparser parser configuration r0", "$ r1 = r3 symbol resolver", "$ r2 = java util optional of nullable $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com github javaparser printer configuration default printer configuration r0", "$ r2 = r7 default option", "$ r3 = $ r2 stream", "$ r4 = default printer configuration $ lambda_get_0__1 bootstrap $ r1", "$ r5 = $ r3 filter $ r4", "$ r6 = $ r5 find first", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = com github javaparser printer configuration pretty printer configuration r0", "$ r1 = r3 get indentation", "$ r2 = $ r1 get type", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com github javaparser range r0", "$ z0 = r4 strictly contain r1", "if $ z0 ! = 0 goto label1", "r5 = com github javaparser range r0", "$ r2 = r5 begin", "$ z1 = $ r2 equal r1", "if $ z1 ! = 0 goto label1", "r6 = com github javaparser range r0", "$ r3 = r6 end", "$ z2 = $ r3 equal r1", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com github javaparser range r0", "$ r2 = r4 begin", "$ z0 = r1 be after $ r2", "if $ z0 == 0 goto label1", "r5 = com github javaparser range r0", "$ r3 = r5 end", "$ z1 = r1 be before $ r3", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com github javaparser range r0", "$ r2 = r4 begin", "$ z0 = r1 be after $ r2", "if $ z0 == 0 goto label1", "r5 = com github javaparser range r0", "$ r3 = r5 end", "$ z1 = r1 be before $ r3", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = com github javaparser resolution declaration resolve type parameter declaration r0", "$ r1 = r2 get container", "$ z0 = $ r1 instanceof com github javaparser resolution declaration resolve constructor declaration", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init >", "r11 = com github javaparser resolution method usage r0", "$ r2 = r11 get declaration", "$ r3 = $ r2 declare type", "$ r4 = $ r3 get qualify name", "$ r5 = r10 append $ r4", "$ r6 = $ r5 append \\ `` \\ ``", "r12 = com github javaparser resolution method usage r0", "$ r7 = r12 get signature", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = com github javaparser resolution type resolve reference type r0", "$ r1 = r3 type declaration", "$ r2 = $ r1 get qualify name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = com github javaparser resolution type resolve primitive type value", "$ r2 = java util array stream $ r1", "r4 = com github javaparser resolution type resolve reference type r0", "$ r3 = resolve reference type $ lambda_is unboxable_10__13 bootstrap $ r4", "$ z0 = $ r2 any match $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java lang string format r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com github javaparser utils log current_adapter", "$ r3 = com github javaparser utils log make format supplier r0 r1", "$ r2 info $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = com github javaparser symbolsolver javaparsermodel java parser facade instance", "$ r0 clear", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = com github javaparser symbolsolver resolution name name category r0", "$ z0 = r1 need disambiguation", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = com github javaparser symbolsolver resolution name name logic be a name r0", "if $ z0 ! = 0 goto label1", "r32 = new java lang illegal argument exception", "specialinvoke r32 < init > \\ `` a name be expected\\ ``", "throw r32", "if $ z0 ! = 0 goto label1", "label $ z1 = r0 instanceof com github javaparser ast expr name", "if $ z1 == 0 goto label2", "$ r29 = com github javaparser ast expr name r0", "$ r30 = $ r29 a string", "return $ r30", "if $ z1 == 0 goto label2", "label $ z2 = r0 instanceof com github javaparser ast expr simple name", "if $ z2 == 0 goto label3", "$ r27 = com github javaparser ast expr simple name r0", "$ r28 = $ r27 get identifier", "return $ r28", "if $ z2 == 0 goto label3", "label $ z3 = r0 instanceof com github javaparser ast type class or interface type", "if $ z3 == 0 goto label4", "$ r25 = com github javaparser ast type class or interface type r0", "$ r26 = $ r25 a string", "return $ r26", "if $ z3 == 0 goto label4", "label $ z4 = r0 instanceof com github javaparser ast expr field access expr", "if $ z4 == 0 goto label6", "r1 = com github javaparser ast expr field access expr r0", "$ r14 = r1 get scope", "r37 = com github javaparser ast node $ r14", "$ z6 = com github javaparser symbolsolver resolution name name logic be a name r37", "if $ z6 == 0 goto label5", "r33 = new java lang string builder", "specialinvoke r33 < init >", "$ r17 = r1 get scope", "r38 = com github javaparser ast node $ r17", "$ r18 = com github javaparser symbolsolver resolution name name logic name a string r38", "$ r19 = r33 append $ r18", "$ r20 = $ r19 append \\ `` \\ ``", "$ r21 = r1 get name", "r39 = com github javaparser ast node $ r21", "$ r22 = com github javaparser symbolsolver resolution name name logic name a string r39", "$ r23 = $ r20 append $ r22", "$ r24 = $ r23 to string", "return $ r24", "if $ z6 == 0 goto label5", "label r34 = new java lang illegal argument exception", "specialinvoke r34 < init >", "throw r34", "if $ z4 == 0 goto label6", "label $ z5 = r0 instanceof com github javaparser ast expr name expr", "if $ z5 == 0 goto label7", "$ r12 = com github javaparser ast expr name expr r0", "$ r13 = $ r12 get name a string", "return $ r13", "if $ z5 == 0 goto label7", "label r36 = new java lang unsupported operation exception", "r35 = new java lang string builder", "specialinvoke r35 < init >", "$ r4 = r35 append \\ `` unknown type of name find \\ ``", "$ r5 = $ r4 append r0", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = r0 get class", "$ r8 = $ r7 get canonical name", "$ r9 = $ r6 append $ r8", "$ r10 = $ r9 append \\ `` \\ ``", "$ r11 = $ r10 to string", "specialinvoke r36 < init > $ r11", "throw r36"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], [], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util optional empty", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "com github javaparser utils utils assert not null r0", "$ r2 = java io file separator", "i0 = r0 last index of $ r2", "$ r3 = r0 substring 0 i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["c0 = @ parameter0", "$ r0 = new javaslang collection char seq", "$ r1 = new java lang string", "$ r2 = newarray char [ 1 ]", "$ r2 [ 0 ] = c0", "specialinvoke $ r1 < init > $ r2", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "i2 = @ parameter3", "r3 = javaslang collection char seq r0", "$ r2 = r3 back", "$ r2 get char i0 i1 r1 i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r2 = javaslang collection char seq r0", "$ r1 = r2 back", "$ i2 = $ r1 last index of i0 i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = javaslang collection char seq r0", "$ r3 = r6 back", "$ r2 = r1 back", "$ r4 = $ r3 concat $ r2", "$ r5 = javaslang collection char seq of $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection hash set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = javaslang collection hash map of r0 r1 r2 r3 r4 r5", "$ r8 = newarray javaslang tuple2 [ 3 ]", "$ r9 = javaslang tuple of r0 r1", "$ r8 [ 0 ] = $ r9", "$ r10 = javaslang tuple of r2 r3", "$ r8 [ 1 ] = $ r10", "$ r11 = javaslang tuple of r4 r5", "$ r8 [ 2 ] = $ r11", "r7 = javaslang collection queue of $ r8", "$ r12 = new javaslang collection link hash map", "specialinvoke $ r12 < init > r7 r6", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection link hash set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = javaslang collection comparators natural comparator", "$ r2 = javaslang collection priority queue of all $ r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection tree set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection tree set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = javaslang collection tree set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` array be null\\ ``", "$ r2 = javaslang collection bit map trie of all r0", "$ r3 = javaslang collection vector of all $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r20 = javassist byte array class path r0", "$ r4 = r20 classname", "$ z0 = $ r4 equal r1", "if $ z0 == 0 goto label4", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r6 = r1 replace 46 47", "$ r7 = r16 append $ r6", "$ r8 = $ r7 append \\ `` class\\ ``", "r2 = $ r8 to string", "label r19 = new java net url", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r11 = r17 append \\ `` file byte array class path \\ ``", "$ r12 = $ r11 append r2", "$ r13 = $ r12 to string", "r18 = new javassist byte array class path $ bytecode u r l stream handler", "r21 = javassist byte array class path r0", "specialinvoke r18 < init > r21 null", "r22 = java net u r l stream handler r18", "specialinvoke r19 < init > null $ r13 r22", "label return r19", "if $ z0 == 0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & -8", "return $ i1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode analysis control flow r0", "$ r1 = r2 basic block", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = javassist bytecode analysis frame r0", "$ r2 = r3 local", "$ r2 [ i0 ] = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r8 = new javassist bytecode analysis frame", "r9 = javassist bytecode analysis frame r0", "$ r3 = r9 local", "$ i1 = lengthof $ r3", "r10 = javassist bytecode analysis frame r0", "$ r4 = r10 stack", "$ i0 = lengthof $ r4", "specialinvoke r8 < init > $ i1 $ i0", "r11 = javassist bytecode analysis frame r0", "$ r7 = r11 stack", "$ r6 = r8 stack", "r12 = javassist bytecode analysis frame r0", "$ r5 = r12 stack", "$ i2 = lengthof $ r5", "java lang system arraycopy $ r7 0 $ r6 0 $ i2", "r13 = javassist bytecode analysis frame r0", "$ i3 = r13 top", "r8 top = $ i3", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode analysis type r0", "$ z0 = r1 special", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r19 = new java lang string buffer", "specialinvoke r19 < init > \\ `` @ \\ ``", "r20 = javassist bytecode annotation annotation r0", "$ r5 = r20 get type name", "r19 append $ r5", "r21 = javassist bytecode annotation annotation r0", "$ r7 = r21 member", "if $ r7 == null goto label3", "r19 append \\ `` \\ ``", "r22 = javassist bytecode annotation annotation r0", "$ r10 = r22 member", "$ r11 = $ r10 key set", "r2 = $ r11 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r13 = r2 next", "r3 = java lang string $ r13", "$ r14 = r19 append r3", "$ r15 = $ r14 append \\ `` =\\ ``", "r23 = javassist bytecode annotation annotation r0", "$ r16 = r23 get member value r3", "$ r17 = $ r15 append $ r16", "$ r17 append \\", "goto label1", "if $ z0 == 0 goto label2", "label $ i0 = r19 length", "$ i1 = $ i0 - 2", "r19 set length $ i1", "r19 append \\ `` \\ ``", "label $ r8 = r19 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javassist bytecode annotation annotation member value r0", "r1 visit annotation member value r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javassist bytecode annotation array member value r0", "r3 value = r1", "if r1 == null goto label1", "$ i0 = lengthof r1", "if $ i0 < = 0 goto label1", "$ r2 = r1 [ 0 ]", "r4 = javassist bytecode annotation array member value r0", "r4 type = $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode attribute info r0", "$ r1 = r2 const pool", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i4 = 0", "if r1 == null goto label2", "i1 = lengthof r1", "i5 = 0", "label if i5 > = i1 goto label2", "$ i2 = i4 + i0", "$ r2 = r1 [ i5 ]", "r3 = javassist bytecode bytecode r0", "$ i3 = r3 add load $ i2 $ r2", "i4 = i4 + $ i3", "i5 = i5 + 1", "goto label1", "label if i5 > = i1 goto label2", "label return i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r3 = javassist bytecode bytecode r0", "r3 add 197", "r4 = javassist bytecode bytecode r0", "$ r2 = r4 const pool", "$ i1 = $ r2 add class info r1", "r5 = javassist bytecode bytecode r0", "r5 add index $ i1", "r6 = javassist bytecode bytecode r0", "r6 add i0", "$ i2 = 1 - i0", "r7 = javassist bytecode bytecode r0", "r7 grow stack $ i2", "return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "i3 = @ parameter3", "specialinvoke r0 add i0 i1 i2 i3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode class file r0", "$ i0 = r1 access flag", "$ i1 = $ i0 & 1024", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode class file r0", "$ i0 = r1 super class", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = javassist bytecode class file r0", "$ r2 = r11 cache interface", "if $ r2 == null goto label1", "r12 = javassist bytecode class file r0", "$ r9 = r12 cache interface", "return $ r9", "if $ r2 == null goto label1", "label r13 = javassist bytecode class file r0", "$ r3 = r13 interface", "if $ r3 ! = null goto label2", "r10 = newarray java lang string [ 0 ]", "goto label5", "label r18 = javassist bytecode class file r0", "r18 cache interface = r10", "return r10", "if $ r3 ! = null goto label2", "label r14 = javassist bytecode class file r0", "$ r4 = r14 interface", "$ i0 = lengthof $ r4", "r1 = newarray java lang string [ $ i0 ]", "i3 = 0", "label r15 = javassist bytecode class file r0", "$ r5 = r15 interface", "$ i1 = lengthof $ r5", "if i3 > = $ i1 goto label4", "r16 = javassist bytecode class file r0", "$ r7 = r16 const pool", "r17 = javassist bytecode class file r0", "$ r6 = r17 interface", "$ i2 = $ r6 [ i3 ]", "$ r8 = $ r7 get class info $ i2", "r1 [ i3 ] = $ r8", "i3 = i3 + 1", "goto label3", "if i3 > = $ i1 goto label4", "label r10 = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = javassist bytecode class file r0", "r6 cache interface = null", "if r1 == null goto label2", "$ i0 = lengthof r1", "$ r2 = newarray int [ $ i0 ]", "r7 = javassist bytecode class file r0", "r7 interface = $ r2", "i3 = 0", "label $ i1 = lengthof r1", "if i3 > = $ i1 goto label2", "r8 = javassist bytecode class file r0", "$ r5 = r8 interface", "r9 = javassist bytecode class file r0", "$ r4 = r9 const pool", "$ r3 = r1 [ i3 ]", "$ i2 = $ r4 add class info $ r3", "$ r5 [ i3 ] = $ i2", "i3 = i3 + 1", "goto label1", "if i3 > = $ i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode class file r0", "r1 major = 49", "r2 = javassist bytecode class file r0", "r2 minor = 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode code iterator r0", "r1 mark = 0", "r2 = javassist bytecode code iterator r0", "r2 current po = 0", "r3 = javassist bytecode code iterator r0", "$ i1 = r3 get code length", "r4 = javassist bytecode code iterator r0", "r4 end po = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode code iterator r0", "$ r1 = r2 bytecode", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode code iterator r0", "$ i0 = r1 current po", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode code iterator r0", "$ i0 = specialinvoke r1 skip super constructor0 0", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = javassist bytecode code iterator r0", "specialinvoke r2 insert0 i0 r1 1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode const pool r0", "$ i0 = r2 this class info", "r3 = javassist bytecode const pool r0", "$ r1 = r3 get class info $ i0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = javassist bytecode const pool r0", "$ i0 = r1 this class info", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = javassist bytecode const pool r0", "$ r1 = r2 get item i0", "$ i1 = $ r1 get tag", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = javassist bytecode const pool r0", "$ r2 = r3 get item i0", "r1 = javassist bytecode name and type info $ r2", "$ i1 = r1 type descriptor", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = javassist bytecode const pool r0", "$ r3 = r6 get item i0", "r1 = javassist bytecode fieldref info $ r3", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ i1 = r1 name and type index", "r7 = javassist bytecode const pool r0", "$ r4 = r7 get item $ i1", "r2 = javassist bytecode name and type info $ r4", "if r2 ! = null goto label2", "label $ i2 = r2 type descriptor", "r8 = javassist bytecode const pool r0", "$ r5 = r8 get utf8 info $ i2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = javassist bytecode const pool r0", "$ r2 = r3 get item i0", "r1 = javassist bytecode method handle info $ r2", "$ i1 = r1 ref index", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = javassist bytecode const pool r0", "$ r2 = r3 get item i0", "r1 = javassist bytecode invoke dynamic info $ r2", "$ i1 = r1 bootstrap", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode enclose method attribute r0", "$ r1 = r2 get", "$ i0 = javassist bytecode byte array read u16bit $ r1 2", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode exception table r0", "$ r1 = r2 entry", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "i1 = @ parameter2", "i9 = r1 size", "label i9 = i9 + -1", "if i9 < 0 goto label2", "$ r3 = r1 entry", "$ r4 = $ r3 get i9", "r2 = javassist bytecode exception table entry $ r4", "$ i2 = r2 start pc", "$ i8 = $ i2 + i1", "$ i3 = r2 end pc", "$ i7 = $ i3 + i1", "$ i4 = r2 handler pc", "$ i6 = $ i4 + i1", "$ i5 = r2 catch type", "r5 = javassist bytecode exception table r0", "r5 add i0 $ i8 $ i7 $ i6 $ i5", "goto label1", "if i9 < 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r4 = javassist bytecode local variable attribute r0", "$ r1 = r4 info", "i2 = lengthof $ r1", "i7 = 2", "label if i7 > = i2 goto label3", "r5 = javassist bytecode local variable attribute r0", "$ r2 = r5 info", "$ i4 = i7 + 8", "i3 = javassist bytecode byte array read u16bit $ r2 $ i4", "if i3 < i0 goto label2", "$ i6 = i3 + i1", "r6 = javassist bytecode local variable attribute r0", "$ r3 = r6 info", "$ i5 = i7 + 8", "javassist bytecode byte array write16bit $ i6 $ r3 $ i5", "label i7 = i7 + 10", "goto label1", "label if i7 > = i2 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode method info r0", "$ r1 = r2 const pool", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = javassist bytecode method info r0", "$ r1 = r3 attribute", "javassist bytecode attribute info remove $ r1 \\ `` exceptions\\ ``", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = javassist bytecode method info r0", "r1 = r4 get code attribute", "if r1 ! = null goto label1", "return -1", "if r1 ! = null goto label1", "label $ r3 = r1 get attribute \\ `` line number table\\ ``", "r2 = javassist bytecode line number attribute $ r3", "if r2 ! = null goto label2", "label $ i1 = r2 to line number i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = javassist bytecode nest host attribute r0", "$ r1 = r2 info", "$ i0 = javassist bytecode byte array read u16bit $ r1 0", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = javassist bytecode signature attribute parse sig r0", "label return $ r2"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = javassist can not compile exception r0", "$ r1 = r4 message", "if $ r1 == null goto label1", "r5 = javassist can not compile exception r0", "$ r3 = r5 message", "return $ r3", "if $ r1 == null goto label1", "label r6 = javassist can not compile exception r0", "$ r2 = r6 to string", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javassist class map r0", "$ r2 = r3 get r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javassist class pool r0", "$ r1 = r3 source", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = new javassist convert transform read field", "r8 = javassist code converter r0", "$ r5 = r8 transformer", "$ r6 = r2 get name", "specialinvoke r7 < init > $ r5 r1 $ r6 r3", "r9 = javassist code converter r0", "r10 = javassist convert transformer r7", "r9 transformer = r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i1 = @ parameter0", "r1 = r0", "label $ i0 = i1", "i1 = i1 + -1", "if $ i0 < = 0 goto label2", "r2 = javassist compiler ast a s t list r1", "r1 = r2 right", "goto label1", "if $ i0 < = 0 goto label2", "label r3 = javassist compiler ast a s t list r1", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = javassist compiler jvst code gen r0", "$ i0 = r2 expr type", "if $ i0 ! = 344 goto label1", "r3 = javassist compiler jvst code gen r0", "$ r1 = r3 bytecode", "$ r1 add opcode 1", "r4 = javassist compiler jvst code gen r0", "r4 expr type = 307", "r5 = javassist compiler jvst code gen r0", "r5 array dim = 0", "r6 = javassist compiler jvst code gen r0", "r6 class name = \\ `` java lang object\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 oprand1", "$ z0 = r2 instanceof javassist compiler ast member", "if $ z0 == 0 goto label2", "$ r4 = javassist compiler ast member r2", "r3 = $ r4 get", "r13 = javassist compiler jvst code gen r0", "$ r5 = r13 proc handler", "if $ r5 == null goto label1", "r14 = javassist compiler jvst code gen r0", "$ r8 = r14 proceed name", "$ z2 = r3 equal $ r8", "if $ z2 == 0 goto label1", "r15 = javassist compiler jvst code gen r0", "$ r9 = r15 proc handler", "r16 = javassist compiler jvst code gen r0", "$ r10 = r16 bytecode", "$ r11 = r1 oprand2", "$ r12 = javassist compiler ast a s t list $ r11", "r17 = javassist compiler jvst code gen r0", "$ r9 doit r17 $ r10 $ r12", "return", "if $ z2 == 0 goto label1", "label $ z1 = r3 equal \\ `` $ cflow\\ ``", "if $ z1 == 0 goto label2", "$ r6 = r1 oprand2", "$ r7 = javassist compiler ast a s t list $ r6", "r18 = javassist compiler jvst code gen r0", "r18 at cflow $ r7", "if $ z1 == 0 goto label2", "label specialinvoke r0 at call expr r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = javassist compiler parser r0", "r2 = specialinvoke r7 parse conditional expr r1", "r8 = javassist compiler parser r0", "$ r4 = r8 lex", "$ i1 = $ r4 look ahead", "$ z0 = javassist compiler parser be assign op $ i1", "if $ z0 ! = 0 goto label1", "return r2", "if $ z0 ! = 0 goto label1", "label r9 = javassist compiler parser r0", "$ r5 = r9 lex", "i0 = $ r5 get", "r10 = javassist compiler parser r0", "r3 = r10 parse expression r1", "$ r6 = javassist compiler ast assign expr make assign i0 r2 r3", "r11 = javassist compiler ast a s tree $ r6", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javassist ct behavior r0", "specialinvoke r2 insert before r1 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javassist ct class r0", "r2 check modify", "r3 = javassist ct class r0", "$ r1 = r3 get class file2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray javassist ct field [ 0 ]", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javassist ct class r0", "$ r2 = r3 get field r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray javassist ct method [ 0 ]", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = javassist ct class type r0", "$ i0 = r1 get count", "if $ i0 > = 2 goto label2", "r2 = javassist ct class type r0", "$ z0 = r2 be modify", "if $ z0 ! = 0 goto label1", "$ z3 = javassist class pool release unmodified class file", "if $ z3 == 0 goto label1", "r3 = javassist ct class type r0", "specialinvoke r3 remove class file", "goto label2", "label r7 = javassist ct class type r0", "r7 get count = 0", "return", "if $ z3 == 0 goto label1", "label r4 = javassist ct class type r0", "$ z1 = r4 be frozen", "if $ z1 == 0 goto label2", "r5 = javassist ct class type r0", "$ z2 = r5 be prune", "if $ z2 ! = 0 goto label2", "r6 = javassist ct class type r0", "specialinvoke r6 save class file"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = javassist ct constructor r0", "$ r1 = r2 method info", "$ z0 = $ r1 be static initializer", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javassist ct method r0", "$ r1 = r3 method info", "$ r2 = $ r1 get name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new javassist ct constructor", "specialinvoke $ r3 < init > r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r27 = javassist expr expr r0", "$ r5 = r27 this class", "r1 = $ r5 get class pool", "r28 = javassist expr expr r0", "$ r6 = r28 this method", "r2 = $ r6 get const pool", "r26 = new java util link list", "specialinvoke r26 < init >", "label r29 = javassist expr expr r0", "$ r8 = r29 this method", "r17 = $ r8 get code attribute", "r18 = r17 get exception table", "r30 = javassist expr expr r0", "i3 = r30 current po", "i4 = r18 size", "i5 = 0", "label if i5 > = i4 goto label07", "$ i1 = r18 start pc i5", "if $ i1 > i3 goto label06", "$ i2 = r18 end pc i5", "if i3 > = $ i2 goto label06", "i0 = r18 catch type i5", "if i0 < = 0 goto label06", "label $ r12 = r2 get class info i0", "$ r13 = r1 get $ r12", "javassist expr expr add class r26 $ r13", "label goto label06", "label i5 = i5 + 1", "goto label02", "label if i5 > = i4 goto label07", "label goto label09", "label r31 = javassist expr expr r0", "$ r9 = r31 this method", "r20 = $ r9 get exception attribute", "if r20 == null goto label15", "r21 = r20 get exception", "if r21 == null goto label15", "i6 = lengthof r21", "i7 = 0", "label if i7 > = i6 goto label15", "label $ r10 = r21 [ i7 ]", "$ r11 = r1 get $ r10", "javassist expr expr add class r26 $ r11", "label goto label14", "label i7 = i7 + 1", "goto label10", "label if i7 > = i6 goto label15", "label $ i8 = r26 size", "$ r23 = newarray javassist ct class [ $ i8 ]", "$ r24 = r26 to array $ r23", "$ r25 = javassist ct class [ ] $ r24", "return $ r25"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r7 = javassist expr handler r0", "$ r3 = r7 etable", "r8 = javassist expr handler r0", "$ i1 = r8 index", "i0 = $ r3 catch type $ i1", "if i0 ! = 0 goto label1", "return null", "if i0 ! = 0 goto label1", "label r9 = javassist expr handler r0", "r1 = r9 get const pool", "r2 = r1 get class info i0", "r10 = javassist expr handler r0", "$ r4 = r10 this class", "$ r5 = $ r4 get class pool", "$ r6 = $ r5 get ct class r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r5 = javassist expr method call r0", "$ r1 = r5 get ct class", "r6 = javassist expr method call r0", "$ r2 = r6 get method name", "r7 = javassist expr method call r0", "$ r3 = r7 get signature", "$ r4 = $ r1 get method $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 2", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 1024", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["$ r0 = javassist runtime desc use_context_class_loader_locally", "$ r0 remove", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i1 = 0", "label $ r1 = javassist util proxy factory helper primitive type", "$ i0 = lengthof $ r1", "if i1 > = $ i0 goto label3", "$ r8 = javassist util proxy factory helper primitive type", "$ r9 = $ r8 [ i1 ]", "if $ r9 ! = r0 goto label2", "return i1", "if $ r9 ! = r0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label $ r2 = new java lang runtime exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` bad type\\ ``", "$ r5 = r0 get name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "specialinvoke $ r2 < init > $ r7", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = javassist util proxy proxy factory r0", "$ z0 = r1 factory use cache", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javassist util proxy proxy factory r0", "$ z0 = r1 factory write replace", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax servlet http http servlet request wrapper r0", "$ r2 = specialinvoke r3 _get http servlet request", "$ i0 = $ r2 get int header r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet http http servlet request wrapper r0", "$ r1 = specialinvoke r3 _get http servlet request", "$ r2 = $ r1 get method", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet http http servlet request wrapper r0", "$ r1 = specialinvoke r3 _get http servlet request", "$ r2 = $ r1 get context path", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet http http servlet request wrapper r0", "$ r1 = specialinvoke r2 _get http servlet request", "$ z0 = $ r1 be request session id from cookie", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = javax servlet http http servlet response wrapper r0", "$ r1 = specialinvoke r2 _get http servlet response", "$ r1 set status i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet servlet output stream r0", "r1 print \\ `` \\r\\n\\ ``", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet servlet output stream r0", "r1 print \\ `` \\r\\n\\ ``", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet servlet request wrapper r0", "$ r1 = r2 request", "$ i0 = $ r1 get content length", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet servlet request wrapper r0", "$ r1 = r3 request", "$ r2 = $ r1 get remote addr", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet servlet request wrapper r0", "$ r1 = r3 request", "$ r2 = $ r1 get remote host", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet servlet request wrapper r0", "$ r1 = r3 request", "$ r2 = $ r1 get local addr", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = class \\ `` ljavax servlet servlet request \\ ``", "$ z0 = $ r2 be assignable from r1", "if $ z0 ! = 0 goto label1", "r19 = new java lang illegal argument exception", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r10 = r18 append \\ `` give class \\ ``", "$ r11 = r1 get name", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 append \\ `` not a subinterface of \\ ``", "$ r14 = class \\ `` ljavax servlet servlet request \\ ``", "$ r15 = $ r14 get name", "$ r16 = $ r13 append $ r15", "$ r17 = $ r16 to string", "specialinvoke r19 < init > $ r17", "throw r19", "if $ z0 ! = 0 goto label1", "label r20 = javax servlet servlet request wrapper r0", "$ r3 = r20 request", "$ r4 = $ r3 get class", "$ z1 = r1 be assignable from $ r4", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label r21 = javax servlet servlet request wrapper r0", "$ r5 = r21 request", "$ z2 = $ r5 instanceof javax servlet servlet request wrapper", "if $ z2 == 0 goto label3", "r22 = javax servlet servlet request wrapper r0", "$ r6 = r22 request", "$ r7 = javax servlet servlet request wrapper $ r6", "$ z3 = $ r7 be wrapper for r1", "return $ z3", "if $ z2 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax servlet servlet response wrapper r0", "$ r2 = r3 response", "$ r2 set content type r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet servlet response wrapper r0", "$ r1 = r2 response", "$ i0 = $ r1 get buffer size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javax websocket default client endpoint config r0", "$ r1 = r2 prefer subprotocols", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax websocket session exception r0", "$ r1 = r2 session", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com sun xml bind marshaller x m l writer r0", "r1 write xml decl = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = com sun xml bind v2 context factory create context r1 r2 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml bind v2 model impl e r property info impl r0", "$ r1 = r2 xml name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com sun xml bind v2 runtime jax bean info r0", "$ s0 = r1 flag", "$ s1 = $ s0 & 2", "if $ s1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ s1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun xml bind v2 runtime output encode r0", "$ r2 = r3 buf", "r4 = com sun xml bind v2 runtime output encode r0", "$ i0 = r4 len", "r1 write $ r2 0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r7 = com sun xml bind v2 runtime unmarshaller scope r0", "$ z0 = r7 have start", "if $ z0 == 0 goto label1", "r8 = com sun xml bind v2 runtime unmarshaller scope r0", "$ r5 = r8 lister", "r9 = com sun xml bind v2 runtime unmarshaller scope r0", "$ r4 = r9 pack", "r10 = com sun xml bind v2 runtime unmarshaller scope r0", "$ r3 = r10 bean", "r11 = com sun xml bind v2 runtime unmarshaller scope r0", "$ r2 = r11 acc", "$ r5 end pack $ r4 $ r3 $ r2", "r12 = com sun xml bind v2 runtime unmarshaller scope r0", "r12 reset", "label $ z1 = com sun xml bind v2 runtime unmarshaller scope $ assertion disable", "if $ z1 ! = 0 goto label2", "r13 = com sun xml bind v2 runtime unmarshaller scope r0", "$ z2 = specialinvoke r13 clean", "if $ z2 ! = 0 goto label2", "r6 = new java lang assertion error", "specialinvoke r6 < init >", "throw r6", "if $ z2 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r3 = com sun xml bind v2 runtime unmarshaller tag name r0", "r1 = r3 get qname", "i0 = r1 index of 58", "if i0 > = 0 goto label1", "return \\ `` \\ ``", "if i0 > = 0 goto label1", "label $ r2 = r1 substring 0 i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r36 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "$ r2 = r36 factory", "$ z0 = $ r2 be empty", "if $ z0 ! = 0 goto label1", "r37 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "$ r5 = r37 factory", "$ r4 = r1 jaxb type", "$ r6 = $ r5 get $ r4", "r29 = com sun xml bind v2 runtime unmarshaller unmarshalling context $ factory $ r6", "if r29 == null goto label1", "$ r7 = r29 create instance", "return $ r7", "if r29 == null goto label1", "label r38 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "$ r3 = r1 create instance r38", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "$ r2 = r5 assoc", "if $ r2 == null goto label1", "r6 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "$ r4 = r6 assoc", "r7 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0", "$ r3 = r7 current element", "$ r4 add inner $ r3 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["return"], "adj": [[]]}
{"nodes": ["r0 = @ this", "r3 = com sun xml bind v2 util collision check stack r0", "$ r1 = r3 data", "r4 = com sun xml bind v2 util collision check stack r0", "$ i0 = r4 size", "$ i1 = $ i0 - 1", "$ r2 = $ r1 [ $ i1 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["z0 = @ parameter0", "label r26 = javax xml parser s a x parser factory new instance", "$ r1 = com sun xml bind v2 util xml factory logger", "$ r0 = java util log level fine", "$ z1 = $ r1 be loggable $ r0", "if $ z1 == 0 goto label2", "$ r6 = com sun xml bind v2 util xml factory logger", "$ r5 = java util log level fine", "$ r6 log $ r5 \\ `` s a x parser factory instance { 0 } \\", "label r26 set namespace aware 1", "$ z2 = com sun xml bind v2 util xml factory be x m l security disable z0", "if $ z2 ! = 0 goto label3", "$ z3 = 1", "goto label4", "label r26 set feature \\ `` http javax xml x m l constant feature secure-processing\\", "label return r26", "if $ z2 ! = 0 goto label3", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jaxen base x path r0", "r2 = r4 select node r1", "if r2 == null goto label2", "$ i0 = r2 size", "if $ i0 ! = 1 goto label2", "r3 = r2 get 0", "$ z0 = r3 instanceof java lang string", "if $ z0 ! = 0 goto label1", "$ z1 = r3 instanceof java lang number", "if $ z1 ! = 0 goto label1", "$ z2 = r3 instanceof java lang boolean", "if $ z2 == 0 goto label2", "label return r3", "if $ z2 == 0 goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r9 = org jaxen base x path r0", "$ r1 = r9 support", "if $ r1 ! = null goto label1", "r8 = new org jaxen context support", "r10 = org jaxen base x path r0", "$ r4 = r10 create namespace context", "r11 = org jaxen base x path r0", "$ r5 = r11 create function context", "r12 = org jaxen base x path r0", "$ r6 = r12 create variable context", "r13 = org jaxen base x path r0", "$ r7 = r13 get navigator", "specialinvoke r8 < init > $ r4 $ r5 $ r6 $ r7", "r14 = org jaxen base x path r0", "r14 support = r8", "label r15 = org jaxen base x path r0", "$ r2 = r15 support", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return null"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org jaxen dom namespace node r0", "r4 = r7 get user data r1", "r8 = org jaxen dom namespace node r0", "$ r5 = r8 user data", "$ r5 put r1 r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org jaxen expr default name step r0", "$ z0 = r1 match any name", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = new java lang string buffer", "specialinvoke r16 < init > 64", "r17 = org jaxen expr default name step r0", "$ r3 = r17 get axis name", "$ r4 = r16 append $ r3", "$ r4 append \\ `` \\ ``", "r18 = org jaxen expr default name step r0", "$ r6 = r18 get prefix", "if $ r6 == null goto label1", "r19 = org jaxen expr default name step r0", "$ r7 = r19 get prefix", "$ i0 = $ r7 length", "if $ i0 < = 0 goto label1", "r20 = org jaxen expr default name step r0", "$ r8 = r20 get prefix", "$ r9 = r16 append $ r8", "$ r9 append 58", "label r21 = org jaxen expr default name step r0", "$ r11 = r21 get local name", "$ r12 = r16 append $ r11", "$ r13 = specialinvoke r0 get text", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 to string", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 instanceof java util locale", "if $ z0 == 0 goto label1", "$ r6 = java util locale r1", "return $ r6", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof java util list", "if $ z1 == 0 goto label3", "r7 = java util list r1", "$ z2 = r7 be empty", "if $ z2 ! = 0 goto label2", "$ r4 = r7 get 0", "r9 = org jaxen function ext locale function support r0", "$ r5 = r9 get locale $ r4 r2", "return $ r5", "if $ z2 ! = 0 goto label2", "label goto label4", "label return null", "if $ z1 == 0 goto label3", "label r8 = org jaxen function string function evaluate r1 r2", "if r8 == null goto label4", "$ i0 = r8 length", "if $ i0 < = 0 goto label4", "r10 = org jaxen function ext locale function support r0", "$ r3 = r10 find locale r8", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java util string tokenizer", "specialinvoke r10 < init > r1 \\ `` -\\ ``", "$ z0 = r10 have more token", "if $ z0 == 0 goto label3", "r3 = r10 next token", "$ z1 = r10 have more token", "if $ z1 ! = 0 goto label1", "r13 = org jaxen function ext locale function support r0", "$ r9 = r13 find locale for language r3", "return $ r9", "if $ z1 ! = 0 goto label1", "label r4 = r10 next token", "$ z2 = r10 have more token", "if $ z2 ! = 0 goto label2", "r11 = new java util locale", "specialinvoke r11 < init > r3 r4", "return r11", "if $ z2 ! = 0 goto label2", "label r5 = r10 next token", "r12 = new java util locale", "specialinvoke r12 < init > r3 r4 r5", "return r12", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 instanceof java lang double", "if $ z0 == 0 goto label01", "$ r10 = java lang double r0", "return $ r10", "if $ z0 == 0 goto label01", "label $ z1 = r0 instanceof java lang string", "if $ z1 == 0 goto label05", "r2 = java lang string r0", "label $ r9 = new java lang double", "specialinvoke $ r9 < init > r2", "label return $ r9", "if $ z1 == 0 goto label05", "label $ z2 = r0 instanceof java util list", "if $ z2 ! = 0 goto label06", "$ z3 = r0 instanceof java util iterator", "if $ z3 == 0 goto label07", "label $ r3 = org jaxen function string function evaluate r0 r1", "$ r4 = org jaxen function number function evaluate $ r3 r1", "return $ r4", "if $ z3 == 0 goto label07", "label $ z4 = r1 be element r0", "if $ z4 ! = 0 goto label08", "$ z5 = r1 be attribute r0", "if $ z5 ! = 0 goto label08", "$ z6 = r1 be text r0", "if $ z6 ! = 0 goto label08", "$ z7 = r1 be comment r0", "if $ z7 ! = 0 goto label08", "$ z8 = r1 be process instruction r0", "if $ z8 ! = 0 goto label08", "$ z9 = r1 be document r0", "if $ z9 ! = 0 goto label08", "$ z10 = r1 be namespace r0", "if $ z10 == 0 goto label09", "label $ r15 = org jaxen function string function evaluate r0 r1", "$ r16 = org jaxen function number function evaluate $ r15 r1", "return $ r16", "if $ z10 == 0 goto label09", "label $ z11 = r0 instanceof java lang boolean", "if $ z11 == 0 goto label11", "$ r6 = java lang boolean true", "$ z12 = $ r6 equal r0", "if $ z12 == 0 goto label10", "$ r8 = new java lang double", "specialinvoke $ r8 < init > 1 0", "return $ r8", "if $ z12 == 0 goto label10", "label $ r7 = new java lang double", "specialinvoke $ r7 < init > 0 0", "return $ r7", "if $ z11 == 0 goto label11", "label $ r5 = org jaxen function number function na n", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [], [53], [54], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r2 get navigator", "r8 = org jaxen pattern namespace test r0", "$ r4 = r8 prefix", "r7 = $ r3 translate namespace prefix to uri $ r4 r1", "if r7 ! = null goto label1", "$ r5 = r2 get context support", "r9 = org jaxen pattern namespace test r0", "$ r6 = r9 prefix", "r7 = $ r5 translate namespace prefix to uri $ r6", "label if r7 ! = null goto label2", "r7 = \\ `` \\ ``", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org jaxen saxpath x path syntax exception r0", "$ r1 = r2 xpath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jaxen util precede sibling axis iterator r0", "$ r1 = r2 next obj", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org jaxen x path syntax exception r0", "$ i0 = r1 position", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = javax resource resource exception r0", "r2 link exception = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = javax resource spi work hint context r0", "$ r3 = r5 hint", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org jboss log delegate basic logger r0", "$ r4 = r5 log", "$ r4 error r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r6 = org jboss log delegate basic logger r0", "$ r5 = r6 log", "$ r5 log r1 r2 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = new org jboss log serialize logger", "r4 = org jboss log logger r0", "$ r2 = r4 name", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jboss logmanager ext handler r0", "$ z0 = r2 auto flush", "if $ z0 == 0 goto label1", "r3 = org jboss logmanager ext handler r0", "r3 flush", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = org jboss logmanager formatters format step r0", "r4 render r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["z0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "z1 = @ parameter3", "$ r0 = org jboss logmanager formatters formatters exception format step z0 i0 0 i1 null", "return $ r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["z0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ r0 = org jboss logmanager formatters formatters ndc format step z0 i0 0 i1 0", "return $ r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org jboss logmanager formatters multistep formatter r0", "$ r1 = r4 step", "$ r2 = $ r1 clone", "$ r3 = org jboss logmanager formatters format step [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org jboss logmanager handler flushable closeable", "if $ z0 == 0 goto label1", "$ r1 = org jboss logmanager handler flushable closeable r0", "goto label2", "label r3 = org jboss logmanager handler flushable closeable $ r1", "return r3", "if $ z0 == 0 goto label1", "label r2 = new org jboss logmanager handlers handler $ 1", "$ r1 = r2", "specialinvoke r2 < init > r0"], "adj": [[1], [2], [3], [4], [], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r6 = org jboss logmanager handler output stream handler r0", "$ r3 = r6 output lock", "entermonitor $ r3", "label $ r4 = specialinvoke r0 get encode", "exitmonitor $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 1 goto label1", "$ r4 = org jboss logmanager handler queue handler bad queue length", "throw $ r4", "if i0 > = 1 goto label1", "label r6 = org jboss logmanager handler queue handler r0", "$ r3 = r6 buffer", "entermonitor $ r3", "label r7 = org jboss logmanager handler queue handler r0", "r7 limit = i0", "exitmonitor $ r3", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org jboss logmanager handler size rotate file handler r0", "$ r4 = r7 output lock", "entermonitor $ r4", "label $ r5 = org jboss logmanager handler suffix rotator parse r1", "r8 = org jboss logmanager handler size rotate file handler r0", "r8 suffix rotator = $ r5", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss logmanager handler socket handler r0", "$ r1 = r2 protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org jboss logmanager handler syslog handler r0", "$ r4 = r6 output lock", "entermonitor $ r4", "label r7 = org jboss logmanager handler syslog handler r0", "r7 facility = r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java net inet address get by name r1", "r3 = org jboss logmanager handler syslog handler r0", "r3 set server address $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org jboss logmanager log context r0", "$ r3 = r5 root logger", "r2 = $ r3 get if exists r1", "if r2 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if r2 ! = null goto label1", "label $ r4 = r2 create logger"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["$ r0 = org jboss logmanager log context instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org jboss logmanager mdc mdc", "$ r1 = $ r0 get", "$ r2 = org jboss logmanager fast copy hash map $ r1", "$ r2 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org jboss logmanager ndc ndc", "$ r1 = $ r0 get", "$ r2 = org jboss logmanager ndc $ stack $ r1", "$ r2 trim to i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jboss thread delegate executor r0", "$ r2 = r3 delegate", "$ r2 execute r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss thread enhance queue executor r0", "$ i0 = r1 try allocate thread 1 0f", "if $ i0 == 0 goto label1", "return 0", "if $ i0 == 0 goto label1", "label r2 = org jboss thread enhance queue executor r0", "$ z0 = r2 do start thread null", "if $ z0 == 0 goto label2", "return 1", "if $ z0 == 0 goto label2", "label r3 = org jboss thread enhance queue executor r0", "r3 deallocate thread"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss thread enhance queue executor r0", "$ r1 = r2 exception handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jboss thread enhance queue executor r0", "r2 termination task = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ z0 = org jboss thread enhance queue executor update_statistics", "if $ z0 == 0 goto label1", "$ z1 = org jboss thread enhance queue executor no_queue_limit", "if $ z1 ! = 0 goto label1", "r1 = org jboss thread enhance queue executor r0", "$ i0 = r1 peak queue size", "goto label2", "label return $ i0", "if $ z1 ! = 0 goto label1", "label $ i0 = -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org jboss thread enhance queue executor r0", "$ r2 = r5 run thread", "$ r1 = org jboss thread enhance queue executor no_threads", "$ r3 = $ r2 to array $ r1", "$ r4 = java lang thread [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org jboss thread reject executor instance", "r1 = java util concurrent executor $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org jboss thread version jar_name", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r7 = org jboss tm transaction local r0", "$ r1 = r7 transaction manager", "$ z0 = $ r1 instanceof org jboss tm transaction local delegate", "if $ z0 == 0 goto label1", "r8 = org jboss tm transaction local r0", "$ r4 = r8 transaction manager", "$ r5 = org jboss tm transaction local delegate $ r4", "r9 = org jboss tm transaction local r0", "r9 delegate = $ r5", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r6 = new org jboss tm transaction local delegate impl", "r10 = org jboss tm transaction local r0", "$ r3 = r10 transaction manager", "specialinvoke r6 < init > $ r3", "r11 = org jboss tm transaction local r0", "r12 = org jboss tm transaction local delegate r6", "r11 delegate = r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss tm transaction manager locator r0", "$ r1 = r2 locate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` null listener\\ ``", "throw r10", "if r1 ! = null goto label1", "label r12 = org jboss tm usertx user transaction registry r0", "$ r2 = r12 listener", "$ r2 remove r1", "$ r4 = org jboss tm usertx user transaction registry log", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r5 = r11 append r0", "$ r6 = $ r5 append \\ `` remove listener \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 to string", "$ r4 debug $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r45 = org testcontainers jdbc container database driver r0", "$ z0 = r45 accepts u r l r1", "if $ z0 ! = 0 goto label01", "return null", "if $ z0 ! = 0 goto label01", "label r3 = org testcontainers jdbc connection url new instance r1", "$ r9 = org testcontainers jdbc container database driver jdbc url container cache", "entermonitor $ r9", "label $ r10 = r3 get query string", "$ r11 = $ r10 or else \\ `` \\ ``", "r5 = java lang string $ r11", "$ r12 = org testcontainers jdbc container database driver jdbc url container cache", "$ r13 = r3 get url", "$ r14 = $ r12 get $ r13", "r37 = org testcontainers container jdbc database container $ r14", "if r37 ! = null goto label07", "$ r21 = org testcontainers jdbc container database driver logger", "$ r21 debug \\ `` container not find in cache create new instance\\ ``", "r38 = r3 get container parameter", "r39 = java util service loader load class \\ `` lorg testcontainers container jdbc database container provider \\ ``", "r6 = r39 iterator", "label $ z3 = r6 have next", "if $ z3 == 0 goto label05", "$ r31 = r6 next", "r7 = org testcontainers container jdbc database container provider $ r31", "$ r32 = r3 get database type", "$ z4 = r7 support $ r32", "if $ z4 == 0 goto label04", "r37 = r7 new instance r3", "$ r33 = r3 get tmpfs option", "r37 with tmp fs $ r33", "$ r35 = r37 get jdbc driver instance", "r46 = org testcontainers jdbc container database driver r0", "r46 delegate = $ r35", "label goto label03", "if $ z3 == 0 goto label05", "label if r37 ! = null goto label06", "r43 = new java lang unsupported operation exception", "r42 = new java lang string builder", "specialinvoke r42 < init >", "$ r26 = r42 append \\ `` database name \\ ``", "$ r27 = r3 get database type", "$ r28 = $ r26 append $ r27", "$ r29 = $ r28 append \\ `` not supported\\ ``", "$ r30 = $ r29 to string", "specialinvoke r43 < init > $ r30", "throw r43", "label if r37 ! = null goto label06", "label $ r22 = org testcontainers jdbc container database driver jdbc url container cache", "$ r22 put r1 r37", "r37 set parameter r38", "r37 start", "label r40 = r37 create connection r5", "$ r15 = org testcontainers jdbc container database driver initialize container", "$ r16 = r37 get container id", "$ z1 = $ r15 contain $ r16", "if $ z1 ! = 0 goto label08", "r44 = new org testcontainers jdbc jdbc database delegate", "specialinvoke r44 < init > r37 r5", "r47 = org testcontainers jdbc container database driver r0", "r48 = org testcontainers delegate database delegate r44", "specialinvoke r47 run init script if require r3 r48", "r49 = org testcontainers jdbc container database driver r0", "specialinvoke r49 run init function if require r3 r40", "$ r19 = org testcontainers jdbc container database driver initialize container", "$ r20 = r37 get container id", "$ r19 add $ r20", "label r50 = org testcontainers jdbc container database driver r0", "$ r17 = specialinvoke r50 wrap connection r40 r37 r3", "exitmonitor $ r9", "label return $ r17"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ this", "r1 = org jdom attribute r0", "$ i0 = r1 type", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ i0 = specialinvoke r0 hash code", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang string buffer", "specialinvoke $ r1 < init > 64", "$ r2 = $ r1 append \\ `` [ cdata \\ ``", "$ r3 = r0 get text", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` ] \\ ``", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org jdom document r0", "$ r2 = r5 property map", "if $ r2 ! = null goto label1", "return null", "if $ r2 ! = null goto label1", "label r6 = org jdom document r0", "$ r3 = r6 property map", "$ r4 = $ r3 get r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom document r0", "$ r1 = r2 content", "$ i0 = $ r1 index of first element", "if $ i0 > = 0 goto label1", "$ z0 = 0", "goto label2", "label return $ z0", "if $ i0 > = 0 goto label1", "label $ z0 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r5 = org jdom document r0", "$ r2 = r5 content", "$ r2 remove i0", "r6 = org jdom document r0", "$ r4 = r6 content", "$ r4 add all i0 r1", "r7 = org jdom document r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org jdom text", "specialinvoke r4 < init > r1", "r5 = org jdom element r0", "r6 = org jdom content r4", "$ r3 = r5 add content r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org jdom filter content filter r0", "r1 filter mask = 63", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r1 = org jdom filter content filter r0", "$ i2 = r1 filter mask", "$ i3 = $ i2 | 32", "r2 = org jdom filter content filter r0", "r2 filter mask = $ i3", "goto label2", "label return", "if z0 == 0 goto label1", "label r3 = org jdom filter content filter r0", "$ i0 = r3 filter mask", "$ i1 = $ i0 & -33", "r4 = org jdom filter content filter r0", "r4 filter mask = $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jdom input d o m builder r0", "$ r3 = r4 factory", "r2 = $ r3 document null", "r5 = org jdom input d o m builder r0", "specialinvoke r5 build tree r1 r2 null 1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jdom input d o m builder r0", "r2 factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = new org xml sax input source", "specialinvoke r6 < init > r1", "r6 set system id r2", "r7 = org jdom input s a x builder r0", "$ r5 = r7 build r6", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom input s a x builder r0", "$ r1 = r2 sax driver class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jdom input s a x builder r0", "$ z0 = r1 reuse parser", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jdom input s a x builder r0", "r1 ignore white = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom j d o m exception r0", "$ r1 = r2 cause", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom namespace r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = new org jdom output format", "specialinvoke $ r1 < init >", "$ r1 set indent \\ `` \\ ``", "$ r3 = org jdom output format $ text mode trim", "$ r1 set text mode $ r3", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jdom output format r0", "r1 omit declaration = z0", "r2 = org jdom output format r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom output j d o m locator r0", "$ r1 = r2 node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom output s a x outputter r0", "$ r1 = r2 decl handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jdom output s a x outputter r0", "r1 report dtd event = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org jdom process instruction r0", "$ r2 = r6 map data", "$ r3 = $ r2 remove r1", "if $ r3 == null goto label1", "r7 = org jdom process instruction r0", "$ r4 = r7 map data", "r8 = org jdom process instruction r0", "$ r5 = specialinvoke r8 to string $ r4", "r9 = org jdom process instruction r0", "r9 raw data = $ r5", "return 1", "if $ r3 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "$ r2 = r8 append \\ `` [ processing instruction \\ ``", "r9 = new org jdom output x m l outputter", "specialinvoke r9 < init >", "r10 = org jdom process instruction r0", "$ r4 = r9 output string r10", "$ r5 = $ r2 append $ r4", "$ r6 = $ r5 append \\ `` ] \\ ``", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org jdom element r0", "$ r1 = r3 get text", "$ r2 = org jdom text normalize string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jdom transform j d o m result r0", "$ r1 = r2 factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = r0 get input source", "$ r3 = org jdom transform j d o m source $ j d o m input source $ r2", "r1 = $ r3 get source", "r4 = null", "$ z0 = r1 instanceof java util list", "if $ z0 == 0 goto label1", "r4 = java util list r1", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init >", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = new org jdom transform j d o m source", "specialinvoke r12 < init > r1", "r13 = new org jdom transform j d o m result", "specialinvoke r13 < init >", "label r15 = org jdom transform x s l transformer r0", "$ r7 = r15 templates", "$ r8 = $ r7 new transformer", "r16 = javax xml transform source r12", "r17 = javax xml transform result r13", "$ r8 transform r16 r17", "$ r9 = r13 get result", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = new org jdom transform j d o m source", "specialinvoke r12 < init > r1", "r13 = new org jdom transform j d o m result", "specialinvoke r13 < init >", "label r15 = org jdom transform x s l transformer r0", "$ r7 = r15 templates", "$ r8 = $ r7 new transformer", "r16 = javax xml transform source r12", "r17 = javax xml transform result r13", "$ r8 transform r16 r17", "$ r9 = r13 get result", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["c0 = @ parameter0", "$ z0 = org jdom verifier be x m l letter c0", "if $ z0 ! = 0 goto label1", "$ z1 = org jdom verifier be x m l digit c0", "if $ z1 ! = 0 goto label1", "if c0 == 46 goto label1", "if c0 == 45 goto label1", "if c0 == 95 goto label1", "if c0 == 58 goto label1", "$ z2 = org jdom verifier be x m l combine char c0", "if $ z2 ! = 0 goto label1", "$ z3 = org jdom verifier be x m l extender c0", "if $ z3 ! = 0 goto label1", "$ z4 = 0", "goto label2", "label return $ z4", "if $ z3 ! = 0 goto label1", "label $ z4 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r19 = org jdom xpath jaxen x path r0", "r19 current context = r1", "r20 = org jdom xpath jaxen x path r0", "$ r5 = r20 x path", "r21 = org jaxen base x path $ r5", "r2 = r21 number value of r1", "goto label6", "label r25 = org jdom xpath jaxen x path r0", "r25 current context = null", "goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org jdom xpath jaxen x path r0", "$ r4 = r6 x path", "r7 = org jaxen base x path $ r4", "r3 = r7 get variable context", "$ z0 = r3 instanceof org jaxen simple variable context", "if $ z0 == 0 goto label1", "$ r5 = org jaxen simple variable context r3", "$ r5 set variable value null r1 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jdom element r0", "$ r2 = r3 attribute", "$ r2 clear and set r1", "r4 = org jdom element r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp pdfa x m p schema p d f a id r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` amd\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp pdfa x m p schema p d f a id r0", "r9 set text property $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache jempbox xmp resource event r0", "$ r1 = r3 parent", "$ r2 = org apache jempbox impl x m l util get string value $ r1 \\ `` st evtinstance i d\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache jempbox xmp resource event r0", "$ r1 = r3 parent", "$ r2 = org apache jempbox impl x m l util get string value $ r1 \\ `` st refmanager variant\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache jempbox xmp resource ref r0", "$ r1 = r3 parent", "$ r2 = org apache jempbox impl x m l util get string value $ r1 \\ `` st refdocument i d\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache jempbox xmp thumbnail r0", "$ r2 = r3 parent", "org apache jempbox impl x m l util set string value $ r2 \\ `` xap g imgimage\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache jempbox xmp x m p schema medium management", "r6 = org apache jempbox xmp x m p metadata r0", "specialinvoke r5 < init > r6", "r7 = org apache jempbox xmp x m p metadata r0", "r8 = org apache jempbox xmp x m p schema r5", "$ r3 = r7 basic add schema r8", "$ r4 = org apache jempbox xmp x m p schema medium management $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache jempbox xmp x m p metadata r0", "r2 = specialinvoke r5 get r d f element", "$ r3 = r1 get element", "r2 append child $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache jempbox xmp x m p metadata r0", "$ r1 = r2 xmp document", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache jempbox xmp x m p metadata r0", "r2 = specialinvoke r5 get r d f element", "$ r3 = r1 get element", "r2 append child $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache jempbox xmp x m p schema basic", "r6 = org apache jempbox xmp x m p metadata r0", "specialinvoke r5 < init > r6", "r7 = org apache jempbox xmp x m p metadata r0", "r8 = org apache jempbox xmp x m p schema r5", "$ r3 = r7 basic add schema r8", "$ r4 = org apache jempbox xmp x m p schema basic $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache jempbox xmp x m p metadata", "$ r2 = org apache jempbox impl x m l util parse r0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = null", "r17 = org apache jempbox xmp x m p schema r0", "$ r8 = r17 schema", "r2 = $ r8 get element by tag name r1", "$ i0 = r2 get length", "if $ i0 < = 0 goto label3", "$ r9 = r2 item 0", "r3 = org w3c dom element $ r9", "r4 = r3 get element by tag name \\ `` rdf seq\\ ``", "$ i1 = r4 get length", "if $ i1 < = 0 goto label3", "$ r10 = r4 item 0", "r5 = org w3c dom element $ r10", "r16 = new java util array list", "specialinvoke r16 < init >", "r6 = r5 get element by tag name \\ `` rdfli\\ ``", "i3 = 0", "label $ i2 = r6 get length", "if i3 > = $ i2 goto label2", "$ r12 = r6 item i3", "r7 = org w3c dom element $ r12", "$ r13 = org apache jempbox impl x m l util get string value r7", "r16 add $ r13", "i3 = i3 + 1", "goto label1", "if i3 > = $ i2 goto label2", "label r14 = java util collection unmodifiable list r16", "label return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` advisory\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "r9 remove bag value $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` advisory\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "$ r6 = r9 get bag list $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` metadata date\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "r9 set date property $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` modify date\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "$ r6 = r9 get date property $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` thumbnails\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "$ r6 = r9 get thumbnail property $ r5 null", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema basic r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` thumbnails\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema basic r0", "$ r6 = r9 get language property languages $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` description\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "r9 set language property $ r6 null r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` language\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "r9 remove bag value $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` relation\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "$ r6 = r9 get bag list $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` rights\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "$ r6 = r9 get language property $ r5 null", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` subject\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "r9 remove bag value $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` subject\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "$ r6 = r9 get bag list $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` title\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "r9 set language property $ r6 null r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema dublin core r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` title\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema dublin core r0", "$ r6 = r9 get language property $ r5 null", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema iptc4xmp core r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` ci adr extadr\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema iptc4xmp core r0", "r9 set text property $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema medium management r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` document i d\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema medium management r0", "r9 set text property $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema medium management r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` history\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema medium management r0", "r10 = org apache jempbox xmp elementable r1", "r9 remove sequence value $ r6 r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema p d f r0", "$ r2 = r8 prefix", "$ r3 = r7 append $ r2", "$ r4 = $ r3 append \\ `` keywords\\ ``", "$ r5 = $ r4 to string", "r9 = org apache jempbox xmp x m p schema p d f r0", "$ r6 = r9 get text property $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema photoshop r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` supplemental categories\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema photoshop r0", "r9 remove bag value $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = org apache jempbox xmp x m p schema right management r0", "$ r3 = r8 prefix", "$ r4 = r7 append $ r3", "$ r5 = $ r4 append \\ `` owner\\ ``", "$ r6 = $ r5 to string", "r9 = org apache jempbox xmp x m p schema right management r0", "r9 remove bag value $ r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r9 = org apache jempbox xmp x m p schema right management r0", "$ r4 = r9 prefix", "$ r5 = r8 append $ r4", "$ r6 = $ r5 append \\ `` usage terms\\ ``", "$ r7 = $ r6 to string", "r10 = org apache jempbox xmp x m p schema right management r0", "r10 set language property $ r7 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey client abstract rx invoker r0", "$ r1 = r2 sync invoker", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey client client request r0", "$ r1 = r2 reader interceptor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal jdkconnector localization message localizer", "$ r1 = org glassfish jersey client internal jdkconnector localization message localizable r e d i r e c t_ i n f i n i t e_ l o o p", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal jdkconnector localization message localizer", "$ r1 = org glassfish jersey client internal jdkconnector localization message localizable c l o s e d_ b y_ c l i e n t_ w h i l e_ r e c e i v i n g_ b o d y", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey client internal jdkconnector localization message localizer", "$ r2 = org glassfish jersey client internal jdkconnector localization message localizable h t t p_ c o n n e c t i o n_ e s t a b l i s h i n g_ i l l e g a l_ s t a t e r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal jdkconnector localization message localizer", "$ r1 = org glassfish jersey client internal jdkconnector localization message localizable h t t p_ p a c k e t_ h e a d e r_ o v e r f l o w", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey client internal jdkconnector localization message localizer", "$ r2 = org glassfish jersey client internal jdkconnector localization message localizable p r o x y_ c o n n e c t_ f a i l r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal jdkconnector localization message localizer", "$ r1 = org glassfish jersey client internal jdkconnector localization message localizable u n e x p e c t e d_ d a t a_ i n_ b u f f e r", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey client internal localization message localizer", "$ r2 = org glassfish jersey client internal localization message localizable e r r o r_ l i s t e n e r_ i n i t r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey client internal localization message localizer", "$ r2 = org glassfish jersey client internal localization message localizable e r r o r_ s e r v i c e_ l o c a t o r_ p r o v i d e r_ i n s t a n c e_ r e q u e s t r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal localization message localizer", "$ r1 = org glassfish jersey client internal localization message localizable n u l l_ t r u s t s t o r e", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey client internal localization message localizer", "$ r1 = org glassfish jersey client internal localization message localizable c l i e n t_ u r i_ n u l l", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 have entity", "if $ z0 == 0 goto label1", "$ r5 = r1 get medium type", "if $ r5 ! = null goto label1", "r13 = new org glassfish jersey client internal rout client response medium type determiner $ 1", "r14 = org glassfish jersey client internal rout client response medium type determiner r0", "specialinvoke r13 < init > r14 r2", "$ r7 = r1 get header", "$ r8 = org glassfish jersey message internal header utils a string header $ r7 r2", "r15 = org glassfish jersey message internal inbound message context r13", "r15 header $ r8", "$ r10 = r1 get entity", "r16 = org glassfish jersey message internal inbound message context r13", "$ r11 = r16 get qualify acceptable medium type", "r17 = org glassfish jersey client internal rout client response medium type determiner r0", "r4 = specialinvoke r17 determine response medium type $ r10 $ r11", "$ r12 = r1 get header", "$ r12 add \\ `` content- type\\", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey severity fatal", "org glassfish jersey internal error error r0 r1 $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r2 = org glassfish jersey internal error get instance", "$ r3 = $ r2 issue", "r0 = $ r3 iterator", "label $ z0 = r0 have next", "if $ z0 == 0 goto label3", "$ r4 = r0 next", "r1 = org glassfish jersey internal error $ error message $ r4", "$ r5 = r1 get severity", "$ r6 = org glassfish jersey severity fatal", "if $ r5 ! = $ r6 goto label2", "return 1", "if $ r5 ! = $ r6 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal error process r0 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = specialinvoke r0 set exception r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org glassfish jersey internal inject abstract binder r0", "$ r2 = r3 internal binding", "$ r2 add r1", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org glassfish jersey internal inject abstract binder r0", "$ r2 = r3 internal binding", "$ r2 add r1", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey internal inject bind r0", "$ r1 = r2 analyzer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java util optional int of i0", "r2 = org glassfish jersey internal inject alias bind r0", "r2 rank = $ r1", "r3 = org glassfish jersey internal inject alias bind r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish jersey internal inject injectee impl r0", "r2 injectee descriptor = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new java util array list", "specialinvoke r6 < init >", "r6 get class", "$ r5 = provider binder $ add__1 bootstrap $ r6", "r1 for each $ r5", "r7 = org glassfish jersey internal inject provider binder r0", "r7 bind instance r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal localization message localizer", "$ r2 = org glassfish jersey internal localization message localizable e r r o r s_ a n d_ w a r n i n g s_ d e t e c t e d r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal localization message localizer", "$ r2 = org glassfish jersey internal localization message localizable u r i_ c o m p o n e n t_ e n c o d e d_ o c t e t_ m a l f o r m e d r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org glassfish jersey internal localization message localizer", "$ r4 = org glassfish jersey internal localization message localizable e r r o r_ t e m p l a t e_ p a r s e r_ i l l e g a l_ c h a r_ s t a r t_ n a m e r0 r1 r2", "$ r5 = $ r3 localize $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org glassfish jersey internal localization message localizer", "$ r1 = org glassfish jersey internal localization message localizable e r r o r_ r e a d i n g_ e n t i t y_ f r o m_ i n p u t_ s t r e a m", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org glassfish jersey internal localization message localizer", "$ r4 = org glassfish jersey internal localization message localizable f e a t u r e_ c o n s t r a i n e d_ t o_ i g n o r e d r0 r1 r2", "$ r5 = $ r3 localize $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal localization message localizer", "$ r2 = org glassfish jersey internal localization message localizable i n j e c t i o n_ e r r o r_ n o n s t a t i c_ m e m b e r_ c l a s s_ n o t_ s u p p o r t e d r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey internal localization message localizer", "$ r3 = org glassfish jersey internal localization message localizable t o o_ m a n y_ h e a d e r_ v a l u e s r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org glassfish jersey internal localization message localizer", "$ r1 = org glassfish jersey internal localization message localizable e r r o r_ i n t e r c e p t o r_ w r i t e r_ p r o c e e d", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey internal localization message localizer", "$ r3 = org glassfish jersey internal localization message localizable h t t p_ h e a d e r_ n o_ c h a r s_ b e t w e e n_ s e p a r a t o r s r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal localization message localizer", "$ r2 = org glassfish jersey internal localization message localizable m b r_ t r y i n g_ t o_ c l o s e_ s t r e a m r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal localization message localizer", "$ r2 = org glassfish jersey internal localization message localizable i n j e c t i o n_ e r r o r_ s u i t a b l e_ c o n s t r u c t o r_ n o t_ f o u n d r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey internal routing request specific consumes produce acceptor r0", "$ r1 = r2 method rout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = org glassfish jersey internal service finder _get context class loader", "$ r2 = org glassfish jersey internal service finder find r0 $ r1 z0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey internal service finder _get context class loader", "$ r2 = org glassfish jersey internal service finder find r0 $ r1 0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = new java lang string builder", "specialinvoke r6 < init >", "r7 = org glassfish jersey internal sonar sonar jersey common r0", "$ r2 = r7 common", "$ r3 = r6 append $ r2", "$ r4 = $ r3 append \\ `` unit test\\ ``", "$ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org glassfish jersey internal util collection class type pair", "specialinvoke $ r1 < init > r0 r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org glassfish jersey internal guava precondition check not null r0 \\ `` set1\\ ``", "org glassfish jersey internal guava precondition check not null r1 \\ `` set2\\ ``", "r5 = new org glassfish jersey internal util collection view $ 4", "specialinvoke r5 < init > r0 r1", "r6 = java util set r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` null\\ ``", "if r0 ! = null goto label1", "label $ i0 = r0 size", "$ r1 = newarray java lang object [ $ i0 ]", "$ r2 = r0 to array $ r1", "$ r3 = org glassfish jersey internal util pretty array $ r2", "return $ r3"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = org glassfish jersey internal util property helper get value r0 r1 r2 r4 r5", "if r6 ! = null goto label1", "r6 = r3", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org glassfish jersey internal util reflection helper get type argument r0", "if r1 ! = null goto label1", "$ r8 = java util collection empty list", "return $ r8", "if r1 ! = null goto label1", "label $ r2 = java util array stream r1", "$ r3 = reflection helper $ erasure__1 bootstrap $", "$ r4 = $ r2 map $ r3", "$ r5 = java util stream collector to list", "$ r6 = $ r4 collect $ r5", "$ r7 = java util list $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey internal util reflection helper get class r0 r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new java util link list", "specialinvoke $ r3 < init >", "r2 = org glassfish jersey internal util tokenizer tokenize r0 r1 $ r3", "$ i0 = r2 size", "$ r4 = newarray java lang string [ $ i0 ]", "$ r5 = r2 to array $ r4", "$ r6 = java lang string [ ] $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey message internal reader writer read from a string r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new org glassfish jersey message internal inbound message context $ 2", "r5 = org glassfish jersey message internal inbound message context r0", "specialinvoke r4 < init > r5", "r6 = org glassfish jersey message internal inbound message context r0", "r7 = java util function function r4", "$ r2 = specialinvoke r6 single header \\ `` date\\", "$ r3 = java util date $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey message internal inbound message context r0", "$ r1 = r2 entity content", "$ r1 close 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get remainder", "r2 = r0 next 0", "$ r4 = org glassfish jersey message internal http header reader $ event quote string", "if r2 ! = $ r4 goto label1", "$ r9 = new org glassfish jersey message internal matching entity tag", "$ r10 = r0 get event value", "$ r11 = $ r10 to string", "specialinvoke $ r9 < init > $ r11", "return $ r9", "if r2 ! = $ r4 goto label1", "label $ r5 = org glassfish jersey message internal http header reader $ event token", "if r2 ! = $ r5 goto label2", "r3 = r0 get event value", "if r3 == null goto label2", "$ i0 = r3 length", "if $ i0 ! = 1 goto label2", "$ c1 = r3 char at 0", "if 87 ! = $ c1 goto label2", "r0 next separator 47", "$ r6 = new org glassfish jersey message internal matching entity tag", "$ r7 = r0 next quote string", "$ r8 = $ r7 to string", "specialinvoke $ r6 < init > $ r8 1", "return $ r6", "if 87 ! = $ c1 goto label2", "label $ r12 = new java text parse exception", "$ r13 = org glassfish jersey internal localization message error_parsing_entity_tag r1", "$ i2 = r0 get index", "specialinvoke $ r12 < init > $ r13 $ i2", "throw $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r3 = org glassfish jersey message internal outbound message context empty_annotations", "goto label2", "label r4 = org glassfish jersey message internal outbound message context r0", "r4 entity annotation = $ r3", "return", "if r1 ! = null goto label1", "label $ r3 = r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org glassfish jersey message internal quality source medium type r0", "$ i0 = r1 q", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new org glassfish jersey model internal component bag $ immutable component bag", "r3 = org glassfish jersey model internal component bag r0", "specialinvoke r2 < init > r3", "r4 = org glassfish jersey model internal component bag r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org glassfish jersey process internal request scope r0", "$ r1 = r3 current", "$ r2 = $ r1 get reference", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r6 = org glassfish jersey process internal stage $ continuation of r0 r1", "label $ r3 = r6 next", "if $ r3 == null goto label2", "$ r5 = r6 result", "r6 = $ r3 apply $ r5", "goto label1", "if $ r3 == null goto label2", "label $ r4 = r6 result", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org glassfish jersey uri internal character iterator r0", "$ i0 = r4 po", "if $ i0 ! = -1 goto label1", "r3 = new java lang illegal state exception", "specialinvoke r3 < init > \\ `` iterator not use yet \\ ``", "throw r3", "if $ i0 ! = -1 goto label1", "label r5 = org glassfish jersey uri internal character iterator r0", "$ r1 = r5 s", "r6 = org glassfish jersey uri internal character iterator r0", "$ i1 = r6 po", "$ c2 = $ r1 char at $ i1", "return $ c2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey uri uri template r0", "$ r1 = r2 template variable", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org glassfish jersey uri uri template", "if $ z0 == 0 goto label1", "r2 = org glassfish jersey uri uri template r1", "r5 = org glassfish jersey uri uri template r0", "$ r4 = r5 pattern", "$ r3 = r2 pattern", "$ z1 = $ r4 equal $ r3", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey core header content disposition r0", "$ r1 = r2 read date", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 to char array", "i0 = lengthof r1", "i2 = 0", "label if i2 > = i0 goto label3", "c1 = r1 [ i2 ]", "$ z0 = com sun jersey core header grammar util be token c1", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new java util array list", "specialinvoke $ r3 < init >", "label i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r0 [ i1 ]", "com sun jersey core header reader http header reader read medium type $ r3 r2", "i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label3", "label $ r4 = com sun jersey core header medium type media_type_comparator", "java util collection sort $ r3 $ r4", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get modifier", "$ z0 = java lang reflect modifier be public $ i0", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r3 = new com sun jersey core reflection reflection helper $ 2", "specialinvoke r3 < init > r0", "r4 = java security privilege action r3", "java security access controller do privilege r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r5 = r0 generic interface", "$ z0 = $ r5 instanceof java lang reflect parameterized type", "if $ z0 == 0 goto label6", "$ r6 = r0 generic interface", "r11 = java lang reflect parameterized type $ r6", "r1 = r11 get actual type argument", "$ i0 = lengthof r1", "r2 = newarray java lang reflect type [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label5", "r3 = r1 [ i2 ]", "$ z1 = r3 instanceof java lang class", "if $ z1 == 0 goto label2", "r2 [ i2 ] = r3", "goto label4", "label i2 = i2 + 1", "goto label1", "if $ z1 == 0 goto label2", "label $ z2 = r3 instanceof java lang reflect parameterized type", "if $ z2 == 0 goto label3", "r12 = java lang reflect parameterized type r3", "if $ z2 == 0 goto label3", "label $ z3 = r3 instanceof java lang reflect type variable", "if $ z3 == 0 goto label4", "$ r9 = r0 concrete class", "$ r8 = r0 declare class", "$ r7 = java lang reflect type variable r3", "r4 = com sun jersey core reflection reflection helper resolve type variable $ r9 $ r8 $ r7", "$ r10 = r4 t", "r2 [ i2 ] = $ r10", "if i2 > = $ i1 goto label5", "label return r2", "if $ z0 == 0 goto label6", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com sun jersey impl impl message localizer", "$ r2 = com sun jersey impl impl message localizable e r r o r_ n o_ s u b_ r e s_ m e t h o d_ l o c a t o r_ f o u n d r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com sun jersey impl impl message localizer", "$ r3 = com sun jersey impl impl message localizable e r r o r_ p r o c e s s i n g_ m e t h o d r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com sun jersey impl impl message localizer", "$ r2 = com sun jersey impl impl message localizable e r r o r_ m a r s h a l l i n g_ j a x b r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = javax w r core cookie r0", "$ r1 = r2 domain", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax w r core cookie r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ i0 = 97 * 7", "r9 = javax w r core cookie r0", "$ r1 = r9 name", "if $ r1 == null goto label1", "r10 = javax w r core cookie r0", "$ r8 = r10 name", "$ i7 = $ r8 hash code", "goto label2", "label i8 = $ i0 + $ i7", "$ i1 = 97 * i8", "r11 = javax w r core cookie r0", "$ r2 = r11 value", "if $ r2 == null goto label3", "r12 = javax w r core cookie r0", "$ r7 = r12 value", "$ i9 = $ r7 hash code", "goto label4", "label i10 = $ i1 + $ i9", "$ i3 = 97 * i10", "r13 = javax w r core cookie r0", "$ i2 = r13 version", "i11 = $ i3 + $ i2", "$ i4 = 97 * i11", "r14 = javax w r core cookie r0", "$ r3 = r14 path", "if $ r3 == null goto label5", "r15 = javax w r core cookie r0", "$ r6 = r15 path", "$ i12 = $ r6 hash code", "goto label6", "label i13 = $ i4 + $ i12", "$ i5 = 97 * i13", "r16 = javax w r core cookie r0", "$ r4 = r16 domain", "if $ r4 == null goto label7", "r17 = javax w r core cookie r0", "$ r5 = r17 domain", "$ i14 = $ r5 hash code", "goto label8", "label i15 = $ i5 + $ i14", "return i15", "if $ r4 == null goto label7", "label $ i14 = 0", "if $ r3 == null goto label5", "label $ i12 = 0", "if $ r2 == null goto label3", "label $ i9 = 0", "if $ r1 == null goto label1", "label $ i7 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "r2 = javax w r core entity tag r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init >", "r11 = javax w r core medium type r0", "$ r2 = r11 type", "$ r3 = $ r2 to lower case", "$ r4 = r10 append $ r3", "r12 = javax w r core medium type r0", "$ r5 = r12 subtype", "$ r6 = $ r5 to lower case", "$ r7 = $ r4 append $ r6", "$ r8 = $ r7 to string", "$ i0 = $ r8 hash code", "r13 = javax w r core medium type r0", "$ r9 = r13 parameter", "$ i1 = $ r9 hash code", "$ i2 = $ i0 + $ i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = r1 get name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` _\\ ``", "$ r8 = $ r7 append r2", "$ r9 = $ r8 append \\ `` _\\ ``", "$ r10 = r3 get name", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 to string", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey message filter spi filter helper entity_classes", "$ z0 = $ r1 contain key r0", "if $ z0 ! = 0 goto label1", "$ r5 = org glassfish jersey message filter spi filter helper entity_classes", "$ r6 = org glassfish jersey message filter spi filter helper _get entity class r0", "$ r5 put if absent r0 $ r6", "label $ r2 = org glassfish jersey message filter spi filter helper entity_classes", "$ r3 = $ r2 get r0", "$ r4 = java lang class $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r0 = org glassfish jersey message filter spi scope provider default_scope", "$ r1 = java util collection singleton $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish jersey jackson internal jackson jaxrs base provider base r0", "$ z0 = r2 have match medium type r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r4 = org eclipse jetty annotation annotation decorator r0", "$ r3 = r4 _introspector", "$ r3 introspect r1 r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org eclipse jetty annotation resource annotation handler env_entry_types", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = null", "i1 = 0", "label r12 = org eclipse jetty http http field r0", "$ i0 = r12 _size", "if i1 > = $ i0 goto label4", "r13 = org eclipse jetty http http field r0", "$ r4 = r13 _fields", "r3 = $ r4 [ i1 ]", "$ r5 = r3 get name", "$ z0 = $ r5 equal ignore case r1", "if $ z0 == 0 goto label3", "if r9 ! = null goto label2", "r11 = new org eclipse jetty http quote c s v", "$ r8 = newarray java lang string [ 0 ]", "specialinvoke r11 < init > 0 $ r8", "r9 = r11", "label $ r6 = r3 get value", "r9 add value $ r6", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label4", "label r14 = org eclipse jetty http http field r0", "r10 = r14 add c s v r9 r2", "if r10 == null goto label5", "r15 = org eclipse jetty http http field r0", "r15 add r1 r10", "return 1", "if r10 == null goto label5", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i2 = 0", "label r10 = org eclipse jetty http http field r0", "$ i1 = r10 _size", "if i2 > = $ i1 goto label3", "r11 = org eclipse jetty http http field r0", "$ r4 = r11 _fields", "r2 = $ r4 [ i2 ]", "$ r5 = r2 get name", "$ z0 = $ r5 equal ignore case r1", "if $ z0 == 0 goto label2", "$ r6 = r2 get value", "if $ r6 == null goto label2", "r9 = new org eclipse jetty http http field $ 1", "r12 = org eclipse jetty http http field r0", "specialinvoke r9 < init > r12 r2 i2 r1", "r13 = java util enumeration r9", "return r13", "if $ r6 == null goto label2", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label3", "label r8 = java util collection empty list", "$ r3 = java util collection enumeration r8", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r2 = org eclipse jetty http date generator format date l0", "r3 = org eclipse jetty http http field r0", "r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jetty io byte buffer output stream2 r0", "$ r1 = r3 _accumulator", "$ r2 = $ r1 take byte buffer", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jetty io client connector r0", "r1 reuse port = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org eclipse jetty io datagram channel end point r0", "$ z0 = r9 be input shutdown", "if $ z0 == 0 goto label1", "$ r8 = org eclipse jetty io datagram channel end point eof", "return $ r8", "if $ z0 == 0 goto label1", "label i0 = org eclipse jetty util buffer util flip to fill r1", "r10 = org eclipse jetty io datagram channel end point r0", "$ r3 = r10 get channel", "r2 = $ r3 receive r1", "org eclipse jetty util buffer util flip to flush r1 i0", "if r2 ! = null goto label2", "return null", "if r2 ! = null goto label2", "label r11 = org eclipse jetty io datagram channel end point r0", "r11 not idle", "i1 = r1 remain", "$ r4 = org eclipse jetty io datagram channel end point log", "$ z1 = $ r4 be debug enabled", "if $ z1 == 0 goto label3", "$ r5 = org eclipse jetty io datagram channel end point log", "$ r6 = java lang integer value of i1", "$ r7 = org eclipse jetty util buffer util to detail string r1", "$ r5 debug \\ `` fill { } { } \\", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = jakarta servlet generic servlet r0", "$ r3 = r6 get servlet context", "r7 = jakarta servlet generic servlet r0", "$ r4 = r7 get servlet name", "$ r5 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string java lang string java lang string > $ r4 r1 java lang invoke string concat factory make concat with constant \\ `` \\u \\u0001\\ ``", "$ r3 log $ r5 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return -1l"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = jakarta servlet http http servlet request wrapper r0", "$ r1 = r3 _get http servlet request", "$ r2 = $ r1 get http servlet map", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r6 = jakarta websocket close reason r0", "$ r1 = r6 reason phrase", "if $ r1 ! = null goto label1", "r7 = jakarta websocket close reason r0", "$ r4 = r7 close code", "$ i1 = $ r4 get code", "$ r5 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string int > $ i1 java lang invoke string concat factory make concat with constant \\ `` close reason [ \\u0001 ] \\ ``", "goto label2", "label return $ r5", "if $ r1 ! = null goto label1", "label r8 = jakarta websocket close reason r0", "$ r2 = r8 close code", "$ i0 = $ r2 get code", "r9 = jakarta websocket close reason r0", "$ r3 = r9 reason phrase", "$ r5 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string int java lang string > $ i0 $ r3 java lang invoke string concat factory make concat with constant \\ `` close reason [ \\u0001 \\u0001 ] \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = jakarta websocket server default server endpoint config r0", "$ r1 = r2 encoders", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty proxy after content transformer r0", "$ l0 = r1 max input buffer size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init >", "throw r9", "if r1 ! = null goto label1", "label r8 = r1", "label $ r3 = r8 get handler", "$ z0 = $ r3 instanceof org eclipse jetty server handler handler wrapper", "if $ z0 == 0 goto label3", "$ r6 = r8 get handler", "r8 = org eclipse jetty server handler handler wrapper $ r6", "goto label2", "if $ z0 == 0 goto label3", "label $ r4 = r8 get handler", "if $ r4 == null goto label4", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` bad tail of inserted wrapper chain\\ ``", "throw r10", "if $ r4 == null goto label4", "label r11 = org eclipse jetty server handler handler wrapper r0", "r2 = r11 get handler", "r12 = org eclipse jetty server handler handler wrapper r0", "r13 = org eclipse jetty server handler r1", "r12 set handler r13", "r8 set handler r2", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jetty server handler idle timeout handler r0", "r1 _apply to async = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse jetty server handler inet access handler r0", "$ r2 = r4 _set", "$ r3 = org eclipse jetty server handler inet access set $ pattern tuple from r1", "$ r2 exclude $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r6 = r2 get http channel", "$ r7 = $ r6 get connector", "r4 = $ r7 get name", "$ r8 = r2 get meta data", "$ r9 = $ r8 get u r i", "r5 = $ r9 get decode path", "r13 = org eclipse jetty server handler inet access handler r0", "$ r11 = r13 _set", "r12 = new org eclipse jetty server handler inet access set $ access tuple", "specialinvoke r12 < init > r4 r1 r5", "$ z0 = $ r11 test r12", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = org eclipse jetty server http configuration r0", "r4 _server authority = null", "goto label3", "label return", "if r1 ! = null goto label1", "label $ z0 = r1 have host", "if $ z0 ! = 0 goto label2", "r3 = new java lang illegal state exception", "specialinvoke r3 < init > \\ `` server authority must have host declared\\ ``", "throw r3", "if $ z0 ! = 0 goto label2", "label r5 = org eclipse jetty server http configuration r0", "r5 _server authority = r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r5 = org eclipse jetty server optional ssl connection factory log", "$ z0 = $ r5 be debug enabled", "if $ z0 == 0 goto label1", "$ r13 = org eclipse jetty server optional ssl connection factory log", "r15 = org eclipse jetty server optional ssl connection factory r0", "$ r12 = r15 _next protocol", "$ r13 debug \\ `` optional s s l tls detection unsuccessful attempt to upgrade to { } \\", "label r16 = org eclipse jetty server optional ssl connection factory r0", "$ r6 = r16 _next protocol", "if $ r6 == null goto label3", "r17 = org eclipse jetty server optional ssl connection factory r0", "$ r7 = r17 _next protocol", "r4 = r1 get connection factory $ r7", "if r4 ! = null goto label2", "r14 = new java lang illegal state exception", "r18 = org eclipse jetty server optional ssl connection factory r0", "$ r9 = r18 _next protocol", "$ r10 = r1 get protocols", "$ r11 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string java lang string java util list org eclipse jetty io end point > $ r9 $ r10 r2 java lang invoke string concat factory make concat with constant \\ `` can not find protocol \\'\\u0001\\ ' in connector\\ 's protocol list \\u0001 for \\u0001\\ ``", "specialinvoke r14 < init > $ r11", "throw r14", "if r4 ! = null goto label2", "label org eclipse jetty server optional ssl connection factory upgrade to connection factory r4 r1 r2", "goto label4", "label return", "if $ r6 == null goto label3", "label r19 = org eclipse jetty server optional ssl connection factory r0", "r19 other protocol r3 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r5 = org eclipse jetty server session abstract session data store r0", "$ z0 = r5 be start", "if $ z0 ! = 0 goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` not started\\ ``", "throw r4", "if $ z0 ! = 0 goto label1", "label r6 = org eclipse jetty server session abstract session data store r0", "r1 = abstract session data store $ lambda_clean orphans_0__3 bootstrap $ r6 l0", "r7 = org eclipse jetty server session abstract session data store r0", "$ r2 = r7 _context", "$ r2 run r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org eclipse jetty server session database adaptor r0", "r3 _driver class name = r1", "r4 = org eclipse jetty server session database adaptor r0", "r4 _connection url = r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org eclipse jetty server session default session id manager r0", "r1 _reseed = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty server abstract n c s a request log r0", "$ z0 = r1 _prefer proxied for address", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r5 = org eclipse jetty server handler gzip gzip handler r0", "$ r4 = r5 _methods", "$ r4 exclude r3", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r6 = org eclipse jetty server handler gzip gzip handler r0", "$ r4 = r6 _paths", "$ r5 = org eclipse jetty util string util csv split r3", "$ r4 include $ r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org eclipse jetty util string util csv split r1", "r3 = org eclipse jetty server handler gzip gzip handler r0", "r3 set exclude method $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r21 = org eclipse jetty server handler i p access handler r0", "$ r5 = r21 _white", "$ i0 = $ r5 size", "if $ i0 < = 0 goto label06", "z3 = 0", "z4 = 0", "r22 = org eclipse jetty server handler i p access handler r0", "$ r11 = r22 _white", "$ r12 = $ r11 get match r2", "r16 = $ r12 iterator", "label $ z1 = r16 have next", "if $ z1 == 0 goto label04", "$ r13 = r16 next", "r3 = java util map $ entry $ r13", "z4 = 1", "$ r14 = r3 get value", "r4 = org eclipse jetty util i p address map $ r14", "if r4 == null goto label03", "$ i2 = r4 size", "if $ i2 == 0 goto label02", "$ r15 = r4 match r1", "if $ r15 == null goto label03", "label z3 = 1", "goto label04", "label r23 = org eclipse jetty server handler i p access handler r0", "$ z2 = r23 _white list by path", "if $ z2 == 0 goto label05", "if z4 == 0 goto label06", "if z3 ! = 0 goto label06", "return 0", "if z3 ! = 0 goto label06", "label r24 = org eclipse jetty server handler i p access handler r0", "$ r17 = r24 _black", "$ i3 = $ r17 size", "if $ i3 < = 0 goto label10", "r25 = org eclipse jetty server handler i p access handler r0", "$ r6 = r25 _black", "$ r7 = $ r6 get match r2", "r18 = $ r7 iterator", "label $ z0 = r18 have next", "if $ z0 == 0 goto label10", "$ r8 = r18 next", "r19 = java util map $ entry $ r8", "$ r9 = r19 get value", "r20 = org eclipse jetty util i p address map $ r9", "if r20 == null goto label09", "$ i1 = r20 size", "if $ i1 == 0 goto label08", "$ r10 = r20 match r1", "if $ r10 == null goto label09", "label return 0", "if $ r10 == null goto label09", "label goto label07", "if $ z0 == 0 goto label10", "label return 1", "if $ z2 == 0 goto label05", "label if z3 ! = 0 goto label06", "if $ r15 == null goto label03", "label goto label01"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jetty server http configuration r0", "r1 _request header size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty servlet servlet context handler r0", "$ r1 = r2 _obj factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org eclipse jetty servlet servlet handler $ chain", "specialinvoke r4 < init > r1 r2", "r5 = javax servlet filter chain r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "l3 = org eclipse jetty util atomic bi integer encode i1 i2", "r1 = org eclipse jetty util atomic bi integer r0", "$ z0 = r1 compare and set l0 l3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = org eclipse jetty util buffer util flip to fill r0", "label i1 = org eclipse jetty util buffer util put r1 r0", "label org eclipse jetty util buffer util flip to flush r0 i0", "return i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "if r0 ! = null goto label1", "$ r2 = org eclipse jetty util buffer util empty_buffer", "return $ r2", "if r0 ! = null goto label1", "label $ r1 = java nio byte buffer wrap r0 i0 i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` null\\ ``", "if r0 ! = null goto label1", "label $ r1 = org eclipse jetty util buffer util to array r0", "$ r2 = org eclipse jetty util type util to hex string $ r1", "return $ r2"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label $ z0 = r0 instanceof java util list", "if $ z0 == 0 goto label2", "$ r1 = java util list r0", "$ i0 = $ r1 size", "return $ i0", "if $ z0 == 0 goto label2", "label return 1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = java lang system identity hash code r1", "$ r2 = java lang string value of $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org eclipse jetty util multi map r0", "$ r3 = r8 get r1", "r6 = java util list $ r3", "if r6 ! = null goto label1", "r7 = new java util array list", "specialinvoke r7 < init >", "r6 = r7", "label r6 add r2", "specialinvoke r0 put r1 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty util resource path resource r0", "$ r1 = r2 alias", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = null", "if r2 == null goto label5", "label $ r4 = r1 get certificate r2", "r12 = org eclipse jetty util security certificate validator r0", "r12 validate r1 $ r4", "label goto label4", "label r10 = r2", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jetty util ssl ssl context factory r0", "$ r2 = org eclipse jetty util ssl ssl context factory get x509 cert chain r3 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org eclipse jetty util thread queue thread pool r0", "r4 _idle timeout = i0", "r5 = org eclipse jetty util thread queue thread pool r0", "$ r2 = r5 get bean class \\ `` lorg eclipse jetty util thread reserve thread executor \\ ``", "r1 = org eclipse jetty util thread reserve thread executor $ r2", "if r1 == null goto label1", "$ l1 = long i0", "$ r3 = java util concurrent time unit milliseconds", "r1 set idle timeout $ l1 $ r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["$ r0 = org eclipse jetty util thread shutdown thread _thread", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty util pool r0", "$ i0 = r1 max usage count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = r1 be directory", "if $ z0 ! = 0 goto label2", "label $ r7 = java util collection empty set", "return $ r7", "if $ z0 ! = 0 goto label2", "label r12 = new java util hash set", "specialinvoke r12 < init >", "r3 = r1 list file", "if r3 == null goto label6", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label6", "r5 = r3 [ i1 ]", "$ z1 = r5 be directory", "if $ z1 == 0 goto label4", "r13 = org eclipse jetty webapp meta inf configuration r0", "$ r11 = r13 get tlds r5", "r12 add all $ r11", "goto label5", "label i1 = i1 + 1", "goto label3", "if $ z1 == 0 goto label4", "label r6 = r5 get canonical path", "$ z2 = r6 contain \\ `` meta-inf\\ ``", "if $ z2 == 0 goto label5", "$ z3 = r6 end with \\ `` tld\\ ``", "if $ z3 == 0 goto label5", "$ r9 = r5 to u r i", "$ r10 = $ r9 to u r l", "r12 add $ r10", "label if i1 > = i0 goto label6", "label return r12"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["z0 = @ parameter0", "r0 = @ parameter1", "if z0 ! = 0 goto label1", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > r0", "throw $ r1", "if z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = io jsonwebtoken lang string have text r0", "if $ z0 ! = 0 goto label1", "$ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > r1", "throw $ r2", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = io jsonwebtoken lang object be empty r0", "if $ z0 == 0 goto label1", "$ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > r1", "throw $ r2", "if $ z0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ i0 ! = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label4", "r3 = r0 [ i1 ]", "$ z0 = io jsonwebtoken lang object null safe equal r3 r1", "if $ z0 == 0 goto label3", "return 1", "if $ z0 == 0 goto label3", "label i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label4", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java lang object [ ]", "if $ z0 == 0 goto label1", "$ r15 = java lang object [ ] r0", "$ r16 = java lang object [ ] $ r15", "return $ r16", "if $ z0 == 0 goto label1", "label if r0 ! = null goto label2", "$ r14 = newarray java lang object [ 0 ]", "return $ r14", "label if r0 ! = null goto label2", "label $ r3 = r0 get class", "$ z1 = $ r3 be array", "if $ z1 ! = 0 goto label3", "$ r9 = new java lang illegal argument exception", "$ r10 = new java lang string builder", "specialinvoke $ r10 < init >", "$ r11 = $ r10 append \\ `` source be not an array \\ ``", "$ r12 = $ r11 append r0", "$ r13 = $ r12 to string", "specialinvoke $ r9 < init > $ r13", "throw $ r9", "if $ z1 ! = 0 goto label3", "label i0 = java lang reflect array get length r0", "if i0 ! = 0 goto label4", "$ r8 = newarray java lang object [ 0 ]", "return $ r8", "if i0 ! = 0 goto label4", "label $ r4 = java lang reflect array get r0 0", "r1 = $ r4 get class", "$ r5 = java lang reflect array new instance r1 i0", "$ r6 = java lang object [ ] $ r5", "r2 = java lang object [ ] $ r6", "i1 = 0", "label if i1 > = i0 goto label6", "$ r7 = java lang reflect array get r0 i1", "r2 [ i1 ] = $ r7", "i1 = i1 + 1", "goto label5", "label if i1 > = i0 goto label6", "label return r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label i3 = 7", "i0 = lengthof r0", "i4 = 0", "label if i4 > = i0 goto label3", "$ i1 = 31 * i3", "$ z0 = r0 [ i4 ]", "$ i2 = io jsonwebtoken lang object hash code $ z0", "i3 = $ i1 + $ i2", "i4 = i4 + 1", "goto label2", "label if i4 > = i0 goto label3", "label return i3"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` \\ ``", "if r0 ! = null goto label1", "label $ r1 = io jsonwebtoken lang object null safe to string r0", "return $ r1"], "adj": [[1], [2], [], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "if r1 ! = null goto label2", "label return 0", "if r1 ! = null goto label2", "label $ z0 = r0 end with r1", "if $ z0 == 0 goto label3", "return 1", "if $ z0 == 0 goto label3", "label $ i0 = r0 length", "$ i1 = r1 length", "if $ i0 > = $ i1 goto label4", "return 0", "if $ i0 > = $ i1 goto label4", "label $ i2 = r0 length", "$ i3 = r1 length", "$ i4 = $ i2 - $ i3", "$ r4 = r0 substring $ i4", "r2 = $ r4 to lower case", "r3 = r1 to lower case", "$ z1 = r2 equal r3", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "$ i1 = r0 last index of c0", "$ i2 = $ i1 + 1", "$ r1 = r0 substring $ i2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = r0 size", "$ r1 = newarray java lang string [ $ i0 ]", "$ r2 = r0 to array $ r1", "$ r3 = java lang string [ ] $ r2", "return $ r3"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = io jsonwebtoken signature algorithm r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com sun jna function parameter context r0", "$ i0 = r1 index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com sun jna memory r0", "r1 bound check l0 8l", "$ d0 = specialinvoke r0 get double l0", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "s1 = @ parameter1", "r1 = com sun jna memory r0", "r1 bound check l0 2l", "specialinvoke r0 set short l0 s1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "f0 = @ parameter1", "r1 = com sun jna memory r0", "r1 bound check l0 4l", "specialinvoke r0 set float l0 f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com sun jna pointer r0", "$ l1 = r1 peer", "r2 = com sun jna pointer r0", "$ f0 = com sun jna native get float r2 $ l1 l0", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r1 = newarray short [ i1 ]", "r2 = com sun jna pointer r0", "r2 read l0 r1 0 i1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r1 = newarray int [ i1 ]", "r2 = com sun jna pointer r0", "r2 read l0 r1 0 i1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r4 = new java util array list", "specialinvoke $ r4 < init >", "r8 = r0 get class", "label $ z0 = r8 equal class \\ `` lcom sun jna structure \\ ``", "if $ z0 ! = 0 goto label6", "$ r5 = new java util array list", "specialinvoke $ r5 < init >", "r3 = r8 get declare field", "i2 = 0", "label $ i1 = lengthof r3", "if i2 > = $ i1 goto label5", "$ r6 = r3 [ i2 ]", "i0 = $ r6 get modifier", "$ z2 = java lang reflect modifier be static i0", "if $ z2 ! = 0 goto label4", "$ z3 = java lang reflect modifier be public i0", "if $ z3 ! = 0 goto label3", "goto label4", "label i2 = i2 + 1", "goto label2", "if $ z3 ! = 0 goto label3", "label $ r7 = r3 [ i2 ]", "$ r5 add $ r7", "if i2 > = $ i1 goto label5", "label $ r4 add all 0 $ r5", "r8 = r8 get superclass", "goto label1", "if $ z0 ! = 0 goto label6", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun jna structure r0", "$ z0 = r2 data equal r1 0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = com sun jna klass new instance r0", "r1 = com sun jna structure $ r2", "$ z0 = r1 instanceof com sun jna structure $ by value", "if $ z0 == 0 goto label1", "r1 allocate memory", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r9 = com sun jna union r0", "r1 = r9 get field list", "r8 = new java util array list", "$ i0 = r1 size", "specialinvoke r8 < init > $ i0", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r6 = r3 next", "r4 = java lang reflect field $ r6", "$ r7 = r4 get name", "r8 add $ r7", "goto label1", "if $ z0 == 0 goto label2", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jna platform dnd ghost drag image r0", "$ r1 = r2 drag image", "$ r1 dispose", "r3 = com sun jna platform dnd ghost drag image r0", "r3 drag image = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = com sun jna platform linux x attr instance", "$ r3 = new com sun jna platform linux x attr $ size_t", "$ i2 = lengthof r2", "$ l3 = long $ i2", "specialinvoke $ r3 < init > $ l3", "i0 = $ r4 lsetxattr r0 r1 r2 $ r3 0", "if i0 == 0 goto label1", "i1 = com sun jna native get last error", "$ r5 = new java io i o exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` errno \\ ``", "$ r8 = $ r7 append i1", "$ r9 = $ r8 to string", "specialinvoke $ r5 < init > $ r9", "throw $ r5", "if i0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["$ r1 = new com sun jna ptr int by reference", "specialinvoke $ r1 < init >", "$ r2 = com sun jna platform mac i o kit util io", "$ r2 i o master port 0 $ r1", "$ i1 = $ r1 get value", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = com sun jna platform mac i o kit util get master port", "$ r1 = com sun jna platform mac i o kit util io", "r0 = $ r1 i o registry get root entry i0", "$ r3 = com sun jna platform mac i o kit util sys", "$ r2 = com sun jna platform mac i o kit util sys", "$ i1 = $ r2 mach_task_self", "$ r3 mach_port_deallocate $ i1 i0", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jna platform win32 com c o m bind base object r0", "$ r1 = r2 i dispatch", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jna platform win32 com c o m invoke exception r0", "$ r1 = r2 error arg", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jna platform win32 com tlb imp tlb base r0", "$ r1 = r2 class buffer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = new com sun jna ptr int by reference", "specialinvoke r6 < init >", "r8 = com sun jna platform win32 com type info util r0", "$ r5 = r8 type info", "r7 = new com sun jna platform win32 win def $ uint", "$ l1 = long i0", "specialinvoke r7 < init > $ l1", "r2 = $ r5 get impl type flag r7 r6", "com sun jna platform win32 com c o m utils check r c r2", "$ i2 = r6 get value", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new com sun jna ptr pointer by reference", "specialinvoke r8 < init >", "r10 = com sun jna platform win32 com type info util r0", "$ r5 = r10 type info", "r3 = $ r5 get ref type info r1 r8", "com sun jna platform win32 com c o m utils check r c r3", "r9 = new com sun jna platform win32 com type info", "$ r7 = r8 get value", "specialinvoke r9 < init > $ r7", "r11 = com sun jna platform win32 com i type info r9", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jna platform win32 com type lib util r0", "$ r1 = r2 lcid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com sun jna platform win32 crypt32 util crypt unprotect data r0 0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = com sun jna platform win32 secur32 util get user name ex 2", "$ r1 = com sun jna platform win32 netapi32 util get user local group $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new com sun jna platform win32 guid $ guid", "$ r4 = r0 get pointer", "specialinvoke $ r3 < init > $ r4", "r2 = newarray char [ 39 ]", "$ r5 = com sun jna platform win32 ole32 instance", "i1 = $ r5 string from g u i d2 $ r3 r2 39", "if i1 ! = 0 goto label1", "$ r7 = new java lang runtime exception", "specialinvoke $ r7 < init > \\ `` string from g u i d2\\ ``", "throw $ r7", "if i1 ! = 0 goto label1", "label $ i2 = i1 - 1", "r2 [ $ i2 ] = 0", "$ r6 = com sun jna native to string r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return", "if r0 ! = null goto label1", "label $ r1 = com sun jna platform win32 rasapi32 instance", "i0 = $ r1 ra hang up r0", "if i0 == 0 goto label2", "r3 = new com sun jna platform win32 rasapi32 util $ ras32 exception", "specialinvoke r3 < init > i0", "r4 = java lang throwable r3", "throw r4", "if i0 == 0 goto label2", "label return"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = com sun jna platform win32 shl obj $ known_folder_flag none", "i0 = $ r4 get flag", "r11 = new com sun jna ptr pointer by reference", "specialinvoke r11 < init >", "$ r6 = com sun jna platform win32 shell32 instance", "r2 = $ r6 s h get know folder path r0 i0 null r11", "$ i1 = r2 int value", "$ z0 = com sun jna platform win32 w32 error succeed $ i1", "if $ z0 ! = 0 goto label1", "r12 = new com sun jna platform win32 win32 exception", "specialinvoke r12 < init > r2", "r13 = java lang throwable r12", "throw r13", "if $ z0 ! = 0 goto label1", "label $ r7 = r11 get value", "r3 = $ r7 get wide string 0l", "$ r8 = com sun jna platform win32 ole32 instance", "$ r9 = r11 get value", "$ r8 co task mem free $ r9", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r7 = com sun jna platform win32 w32 service manager r0", "$ r1 = r7 _handle", "if $ r1 == null goto label2", "$ r3 = com sun jna platform win32 advapi32 instance", "r8 = com sun jna platform win32 w32 service manager r0", "$ r2 = r8 _handle", "$ z0 = $ r3 close service handle $ r2", "if $ z0 ! = 0 goto label1", "r6 = new com sun jna platform win32 win32 exception", "$ r5 = com sun jna platform win32 kernel32 instance", "$ i0 = $ r5 get last error", "specialinvoke r6 < init > $ i0", "r9 = java lang throwable r6", "throw r9", "if $ z0 ! = 0 goto label1", "label r10 = com sun jna platform win32 w32 service manager r0", "r10 _handle = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ r4 = com sun jna platform win32 advapi32 instance", "r10 = com sun jna platform win32 w32 service manager r0", "$ r3 = r10 _handle", "r2 = $ r4 open service $ r3 r1 i0", "if r2 ! = null goto label1", "r8 = new com sun jna platform win32 win32 exception", "$ r7 = com sun jna platform win32 kernel32 instance", "$ i1 = $ r7 get last error", "specialinvoke r8 < init > $ i1", "r11 = java lang throwable r8", "throw r11", "if r2 ! = null goto label1", "label r9 = new com sun jna platform win32 w32 service", "specialinvoke r9 < init > r2", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r13 = new com sun jna ptr int by reference", "specialinvoke r13 < init >", "$ r5 = com sun jna platform win32 wevtapi instance", "z0 = $ r5 evt get channel config property r0 i0 0 0 null r13", "$ r6 = com sun jna platform win32 kernel32 instance", "i1 = $ r6 get last error", "if z0 ! = 0 goto label1", "if i1 == 122 goto label1", "r14 = new com sun jna platform win32 win32 exception", "specialinvoke r14 < init > i1", "r18 = java lang throwable r14", "throw r18", "if i1 == 122 goto label1", "label r15 = new com sun jna memory", "$ i2 = r13 get value", "$ l3 = long $ i2", "specialinvoke r15 < init > $ l3", "$ r8 = com sun jna platform win32 wevtapi instance", "$ l4 = r15 size", "$ i5 = int $ l4", "r19 = com sun jna pointer r15", "z1 = $ r8 evt get channel config property r0 i0 0 $ i5 r19 r13", "if z1 ! = 0 goto label2", "r16 = new com sun jna platform win32 win32 exception", "$ r11 = com sun jna platform win32 kernel32 instance", "$ i6 = $ r11 get last error", "specialinvoke r16 < init > $ i6", "r20 = java lang throwable r16", "throw r20", "if z1 ! = 0 goto label2", "label r17 = new com sun jna platform win32 winevt $ evt_variant", "r21 = com sun jna pointer r15", "specialinvoke r17 < init > r21", "r17 read", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r7 = org joda time base abstract date time r0", "r1 = r7 get zone", "r6 = new java util gregorian calendar", "$ r4 = r1 to time zone", "specialinvoke r6 < init > $ r4", "r8 = org joda time base abstract date time r0", "$ r5 = r8 to date", "r6 set time $ r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = new org joda time date time", "r4 = org joda time base abstract instant r0", "$ l0 = r4 get millis", "r5 = org joda time base abstract instant r0", "$ r2 = r5 get zone", "specialinvoke r3 < init > $ l0 $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = new java util date", "r3 = org joda time base abstract instant r0", "$ l0 = r3 get millis", "specialinvoke r2 < init > $ l0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org joda time base abstract interval r0", "$ l1 = r1 get start millis", "$ b2 = $ l1 cmp l0", "if $ b2 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b2 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label $ z0 = r1 instanceof org joda time readable interval", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r2 = org joda time readable interval r1", "r5 = org joda time base abstract interval r0", "$ l0 = r5 get start millis", "$ l1 = r2 get start millis", "$ b2 = $ l0 cmp $ l1", "if $ b2 ! = 0 goto label3", "r6 = org joda time base abstract interval r0", "$ l3 = r6 get end millis", "$ l4 = r2 get end millis", "$ b5 = $ l3 cmp $ l4", "if $ b5 ! = 0 goto label3", "r7 = org joda time base abstract interval r0", "$ r3 = r7 get chronology", "$ r4 = r2 get chronology", "$ z1 = org joda time field field utils equal $ r3 $ r4", "if $ z1 == 0 goto label3", "$ z2 = 1", "goto label4", "label return $ z2", "if $ z1 == 0 goto label3", "label $ z2 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], []]}
{"nodes": ["r0 = @ this", "r3 = org joda time base abstract partial r0", "$ i0 = r3 size", "r1 = newarray org joda time date time field type [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r4 = org joda time base abstract partial r0", "$ r2 = r4 get field type i2", "r1 [ i2 ] = $ r2", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org joda time base abstract partial r0", "$ i0 = r3 size", "r1 = newarray org joda time date time field [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r4 = org joda time base abstract partial r0", "$ r2 = r4 get field i2", "r1 [ i2 ] = $ r2", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org joda time base abstract partial r0", "$ i0 = r2 index of r1", "if $ i0 == -1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 == -1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i1 = 0", "r3 = org joda time base abstract partial r0", "i0 = r3 size", "label if i1 > = i0 goto label3", "r4 = org joda time base abstract partial r0", "$ r2 = r4 get field type i1", "if $ r2 ! = r1 goto label2", "return i1", "if $ r2 ! = r1 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "$ r1 = new org joda time period", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org joda time period", "r4 = org joda time base base duration r0", "$ l0 = r4 get millis", "specialinvoke r3 < init > $ l0 r1", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time base base period r0", "$ r1 = r2 i type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org joda time base base single field period r0", "r1 i period = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org joda time date time field type year", "r4 = org joda time chrono base chronology r0", "$ r2 = r4 year", "$ r3 = org joda time field unsupported date time field get instance $ r1 $ r2", "r5 = org joda time date time field $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = org joda time date time field type year of century", "r4 = org joda time chrono base chronology r0", "$ r2 = r4 year", "$ r3 = org joda time field unsupported date time field get instance $ r1 $ r2", "r5 = org joda time date time field $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "return 1", "if r0 ! = r1 goto label1", "label if r1 == null goto label4", "$ r3 = r0 get class", "$ r4 = r1 get class", "if $ r3 ! = $ r4 goto label4", "r2 = org joda time chrono basic chronology r1", "r7 = org joda time chrono basic chronology r0", "$ i0 = r7 get minimum day in first week", "$ i1 = r2 get minimum day in first week", "if $ i0 ! = $ i1 goto label2", "r8 = org joda time chrono basic chronology r0", "$ r5 = r8 get zone", "$ r6 = r2 get zone", "$ z0 = $ r5 equal $ r6", "if $ z0 == 0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0", "if $ r3 ! = $ r4 goto label4", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], []]}
{"nodes": ["$ r0 = org joda time chrono coptic chronology instance_utc", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time date time zone get default", "$ r1 = org joda time chrono coptic chronology get instance $ r0 4", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org joda time chrono g j day of week date time field r0", "$ r1 = r2 i chronology", "$ i1 = $ r1 get day of week l0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org joda time chrono g j locale symbol for locale r2", "$ i0 = $ r3 day of week text to value r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org joda time date time zone get default", "$ r1 = org joda time chrono gregorian chronology get instance $ r0 4", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org joda time date time zone get default", "$ r1 = org joda time chrono islamic chronology leap_year_16_based", "$ r2 = org joda time chrono islamic chronology get instance $ r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org joda time convert converter manager r0", "r1 = r3 i instant converter", "$ i0 = r1 size", "r2 = newarray org joda time convert instant converter [ $ i0 ]", "r4 = org joda time convert converter [ ] r2", "r1 copy into r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = @ parameter1", "if r3 ! = null goto label1", "$ r2 = org joda time readable instant r1", "r4 = $ r2 get chronology", "r3 = org joda time date time utils get chronology r4", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 day of month", "$ l1 = $ r2 round floor l0", "return $ l1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 0 goto label1", "r4 = org joda time date midnight r0", "return r4", "if i0 ! = 0 goto label1", "label r5 = org joda time date midnight r0", "$ r1 = r5 get chronology", "$ r2 = $ r1 week", "r6 = org joda time date midnight r0", "$ l2 = r6 get millis", "l1 = $ r2 add $ l2 i0", "r7 = org joda time date midnight r0", "$ r3 = r7 with millis l1", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 0 goto label1", "r4 = org joda time date midnight r0", "return r4", "if i0 ! = 0 goto label1", "label r5 = org joda time date midnight r0", "$ r1 = r5 get chronology", "$ r2 = $ r1 day", "r6 = org joda time date midnight r0", "$ l2 = r6 get millis", "l1 = $ r2 subtract $ l2 i0", "r7 = org joda time date midnight r0", "$ r3 = r7 with millis l1", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r6 = org joda time date midnight r0", "r1 = r6 get chronology", "r7 = org joda time date midnight r0", "l0 = r7 get millis", "$ r2 = org joda time duration field type day", "$ r3 = $ r2 get field r1", "l1 = $ r3 add l0 1", "r5 = new org joda time interval", "specialinvoke r5 < init > l0 l1 r1", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org joda time date midnight r0", "$ r1 = r4 get chronology", "$ r2 = $ r1 weekyear", "r5 = org joda time date midnight r0", "$ l1 = r5 get millis", "$ l2 = $ r2 set $ l1 i0", "r6 = org joda time date midnight r0", "$ r3 = r6 with millis $ l2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org joda time date midnight r0", "$ r1 = r4 get chronology", "$ r2 = $ r1 month of year", "r5 = org joda time date midnight r0", "$ l1 = r5 get millis", "$ l2 = $ r2 set $ l1 i0", "r6 = org joda time date midnight r0", "$ r3 = r6 with millis $ l2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = new org joda time date midnight $ property", "r5 = org joda time date midnight r0", "$ r2 = r5 get chronology", "$ r3 = $ r2 day of month", "r6 = org joda time date midnight r0", "specialinvoke r4 < init > r6 $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time date time r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org joda time date time r0", "$ r1 = r3 get zone", "r4 = org joda time date time r0", "$ l1 = r4 get millis", "l0 = $ r1 adjust offset $ l1 0", "r5 = org joda time date time r0", "$ r2 = r5 with millis l0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "r6 = org joda time date time r0", "r1 = r6 get chronology", "r7 = org joda time date time r0", "l3 = r7 get millis", "$ r2 = r1 year", "l4 = $ r2 set l3 i0", "$ r3 = r1 month of year", "l5 = $ r3 set l4 i1", "$ r4 = r1 day of month", "l6 = $ r4 set l5 i2", "r8 = org joda time date time r0", "$ r5 = r8 with millis l6", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 0 goto label1", "r4 = org joda time date time r0", "return r4", "if i0 ! = 0 goto label1", "label r5 = org joda time date time r0", "$ r1 = r5 get chronology", "$ r2 = $ r1 month", "r6 = org joda time date time r0", "$ l2 = r6 get millis", "l1 = $ r2 add $ l2 i0", "r7 = org joda time date time r0", "$ r3 = r7 with millis l1", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 0 goto label1", "r4 = org joda time date time r0", "return r4", "if i0 ! = 0 goto label1", "label r5 = org joda time date time r0", "$ r1 = r5 get chronology", "$ r2 = $ r1 week", "r6 = org joda time date time r0", "$ l2 = r6 get millis", "l1 = $ r2 subtract $ l2 i0", "r7 = org joda time date time r0", "$ r3 = r7 with millis l1", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org joda time date time r0", "$ r1 = r4 get chronology", "$ r2 = $ r1 week of weekyear", "r5 = org joda time date time r0", "$ l1 = r5 get millis", "$ l2 = $ r2 set $ l1 i0", "r6 = org joda time date time r0", "$ r3 = r6 with millis $ l2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org joda time date time comparator r0", "$ r1 = r5 i lower limit", "if $ r1 ! = null goto label1", "$ i2 = 0", "goto label2", "label r7 = org joda time date time comparator r0", "$ r3 = r7 i upper limit", "if $ r3 ! = null goto label3", "$ i4 = 0", "goto label4", "label $ i5 = 123 * $ i4", "$ i6 = $ i2 + $ i5", "return $ i6", "if $ r3 ! = null goto label3", "label r8 = org joda time date time comparator r0", "$ r4 = r8 i upper limit", "$ i4 = $ r4 hash code", "if $ r1 ! = null goto label1", "label r6 = org joda time date time comparator r0", "$ r2 = r6 i lower limit", "$ i2 = $ r2 hash code"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["$ r0 = org joda time date time field type weekyear_type", "return $ r0"], "adj": [[1], []]}
{"nodes": ["l0 = @ parameter0", "org joda time date time utils check permission", "r1 = new org joda time date time utils $ fix millis provider", "specialinvoke r1 < init > l0", "r2 = org joda time date time utils $ millis provider r1", "org joda time date time utils c millis provider = r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r1 = @ parameter0", "if r1 ! = null goto label1", "l0 = org joda time date time utils current time millis", "r2 = new org joda time interval", "specialinvoke r2 < init > l0 l0", "r1 = r2", "label r3 = org joda time readable interval r1", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = org joda time date time zone get default", "return $ r1", "if r0 ! = null goto label1", "label return r0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["d0 = @ parameter0", "d1 = d0 - 2440587 5", "$ d2 = d1 * 8 64e7", "$ l0 = long $ d2", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "if i0 < -86399999 goto label1", "if i0 < = 86399999 goto label2", "label $ r1 = new java lang illegal argument exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` millis out of range \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "specialinvoke $ r1 < init > $ r5", "throw $ r1", "if i0 < = 86399999 goto label2", "label r0 = org joda time date time zone print offset i0", "$ r6 = org joda time date time zone fix offset zone r0 i0", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["$ r0 = org joda time date time zone c available i ds", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time date time zone c provider", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time date time zone r0", "$ r1 = r2 i i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time duration r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org joda time duration field type minutes_type", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time field abstract partial field property r0", "$ i0 = r2 get", "$ r1 = java lang integer to string $ i0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time field abstract partial field property r0", "$ r1 = r2 get a text null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time field abstract partial field property r0", "$ r1 = r2 get field", "$ i0 = $ r1 get maximum value", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org joda time field abstract partial field property r0", "$ r1 = r3 get field", "r4 = org joda time field abstract partial field property r0", "$ r2 = r4 get readable partial", "$ i0 = $ r1 get maximum value $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r4 = org joda time field base date time field r0", "$ r3 = r4 get a text i0 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "r2 = org joda time field base date time field r0", "$ r1 = r2 get duration field", "$ i2 = $ r1 get difference l0 l1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org joda time field base date time field r0", "$ i1 = r1 get maximum value", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l2 = @ parameter0", "r1 = org joda time field base date time field r0", "l0 = r1 round floor l2", "$ b1 = l0 cmp l2", "if $ b1 == 0 goto label1", "r2 = org joda time field base date time field r0", "l2 = r2 add l0 1", "label return l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time field divide date time field r0", "$ i0 = r1 i max", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r3 = @ parameter0", "r0 = @ parameter1", "if r3 ! = null goto label1", "return null", "if r3 ! = null goto label1", "label $ z0 = r3 instanceof org joda time field strict date time field", "if $ z0 == 0 goto label2", "$ r2 = org joda time field strict date time field r3", "r3 = $ r2 get wrap field", "label $ z1 = r3 be lenient", "if $ z1 == 0 goto label3", "return r3", "if $ z1 == 0 goto label3", "label r4 = new org joda time field lenient date time field", "specialinvoke r4 < init > r3 r0", "r5 = org joda time date time field r4", "return r5"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "l4 = @ parameter0", "i0 = @ parameter1", "l5 = specialinvoke r0 add l4 i0", "r1 = org joda time field offset date time field r0", "$ i1 = r1 get l5", "r2 = org joda time field offset date time field r0", "$ i3 = r2 i min", "r3 = org joda time field offset date time field r0", "$ i2 = r3 i max", "r4 = org joda time date time field r0", "org joda time field field utils verify value bound r4 $ i1 $ i3 $ i2", "return l5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["$ r0 = org joda time format date time format create formatter for style index 3 3", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = org joda time format date time formatter r0", "$ r1 = r3 i parser", "$ r2 = org joda time format internal parser date time parser of $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org joda time date time zone utc", "r3 = org joda time format date time formatter r0", "$ r2 = r3 with zone $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org joda time format date time formatter r0", "r2 = specialinvoke r10 require parser", "r11 = org joda time format date time formatter r0", "$ r5 = r11 i chrono", "r12 = org joda time format date time formatter r0", "r3 = specialinvoke r12 select chronology $ r5", "r9 = new org joda time format date time parser bucket", "r13 = org joda time format date time formatter r0", "$ r8 = r13 i locale", "r14 = org joda time format date time formatter r0", "$ r7 = r14 i pivot year", "r15 = org joda time format date time formatter r0", "$ i0 = r15 i default year", "specialinvoke r9 < init > 0l r3 $ r8 $ r7 $ i0", "$ l1 = r9 do parse millis r2 r1", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["$ r0 = org joda time format i s o date time format $ constant access $ 900", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time format i s o date time format year month day", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time format i s o date time format $ constant access $ 1600", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = org joda time format i s o date time format $ constant access $ 4700", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = java util locale get default", "$ r1 = org joda time format period format word base $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org joda time format period formatter r0", "specialinvoke r9 check printer", "r10 = org joda time format period formatter r0", "specialinvoke r10 check period r1", "r11 = org joda time format period formatter r0", "r2 = r11 get printer", "r8 = new java lang string buffer", "r12 = org joda time format period formatter r0", "$ r5 = r12 i locale", "$ i0 = r2 calculate print length r1 $ r5", "specialinvoke r8 < init > $ i0", "r13 = org joda time format period formatter r0", "$ r6 = r13 i locale", "r2 print to r8 r1 $ r6", "$ r7 = r8 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r7 = org joda time format period formatter builder r0", "$ r2 = r7 i element pair", "r8 = org joda time format period formatter builder r0", "$ z1 = r8 i not printer", "r9 = org joda time format period formatter builder r0", "$ z0 = r9 i not parser", "r1 = org joda time format period formatter builder to formatter $ r2 $ z1 $ z0", "r10 = org joda time format period formatter builder r0", "$ r3 = r10 i field formatters", "$ r4 = $ r3 clone", "$ r5 = org joda time format period formatter builder $ field formatter [ ] $ r4", "$ r6 = org joda time format period formatter builder $ field formatter [ ] $ r5", "r11 = org joda time format period formatter builder r0", "r11 i field formatters = $ r6", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r6 = org joda time format period formatter builder r0", "r6 i min print digit = 1", "r7 = org joda time format period formatter builder r0", "r7 i print zero set = 2", "r8 = org joda time format period formatter builder r0", "r8 i max parse digit = 10", "r9 = org joda time format period formatter builder r0", "r9 i reject sign value = 0", "r10 = org joda time format period formatter builder r0", "r10 i prefix = null", "r11 = org joda time format period formatter builder r0", "$ r1 = r11 i element pair", "if $ r1 ! = null goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r12 = org joda time format period formatter builder r0", "r12 i element pair = r5", "goto label2", "label r14 = org joda time format period formatter builder r0", "r14 i not printer = 0", "r15 = org joda time format period formatter builder r0", "r15 i not parser = 0", "$ r3 = newarray org joda time format period formatter builder $ field formatter [ 10 ]", "r16 = org joda time format period formatter builder r0", "r16 i field formatters = $ r3", "return", "if $ r1 ! = null goto label1", "label r13 = org joda time format period formatter builder r0", "$ r2 = r13 i element pair", "$ r2 clear"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = org joda time format period formatter builder r0", "specialinvoke r1 append field 1", "r2 = org joda time format period formatter builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org joda time illegal field value exception r0", "$ r1 = r2 i duration field type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = org joda time date time utils get duration millis r1", "r5 = org joda time interval r0", "$ l3 = r5 to duration millis", "$ b4 = l0 cmp $ l3", "if $ b4 ! = 0 goto label1", "r6 = org joda time interval r0", "return r6", "if $ b4 ! = 0 goto label1", "label r7 = org joda time interval r0", "r2 = r7 get chronology", "r8 = org joda time interval r0", "l1 = r8 get end millis", "l2 = r2 add l1 l0 -1", "r4 = new org joda time interval", "specialinvoke r4 < init > l2 l1 r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org joda time mutable interval r0", "$ l1 = r2 get end millis", "r3 = org joda time mutable interval r0", "$ r1 = r3 get chronology", "specialinvoke r0 set interval l0 $ l1 $ r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = org joda time mutable interval r0", "$ l2 = r3 get end millis", "r4 = org joda time mutable interval r0", "r4 set start millis $ l2", "goto label2", "label return", "if r1 ! = null goto label1", "label r5 = org joda time mutable interval r0", "$ r2 = r5 get chronology", "r6 = org joda time mutable interval r0", "$ l0 = r6 get end millis", "$ l1 = $ r2 add r1 $ l0 -1", "r7 = org joda time mutable interval r0", "r7 set start millis $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org joda time duration field type week", "specialinvoke r0 add field $ r1 i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r7 = org joda time partial r0", "i1 = r7 index of support r1", "if i0 ! = 0 goto label1", "r8 = org joda time partial r0", "return r8", "if i0 ! = 0 goto label1", "label r9 = org joda time partial r0", "r4 = r9 get value", "r10 = org joda time partial r0", "$ r2 = r10 get field i1", "r5 = $ r2 add r0 i1 r4 i0", "r6 = new org joda time partial", "r11 = org joda time partial r0", "specialinvoke r6 < init > r11 r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = new org joda time period", "$ r1 = newarray int [ 8 ]", "$ r1 [ 0 ] = 0", "$ r1 [ 1 ] = 0", "$ r1 [ 2 ] = 0", "$ r1 [ 3 ] = i0", "$ r1 [ 4 ] = 0", "$ r1 [ 5 ] = 0", "$ r1 [ 6 ] = 0", "$ r1 [ 7 ] = 0", "$ r2 = org joda time period type standard", "specialinvoke $ r0 < init > $ r1 $ r2", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ i1 = neg i0", "r2 = org joda time period r0", "$ r1 = r2 plus day $ i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r7 = org joda time period type c time", "if r7 ! = null goto label1", "$ r0 = new org joda time period type", "$ r1 = newarray org joda time duration field type [ 4 ]", "$ r2 = org joda time duration field type hour", "$ r1 [ 0 ] = $ r2", "$ r3 = org joda time duration field type minute", "$ r1 [ 1 ] = $ r3", "$ r4 = org joda time duration field type second", "$ r1 [ 2 ] = $ r4", "$ r5 = org joda time duration field type millis", "$ r1 [ 3 ] = $ r5", "$ r6 = newarray int [ 8 ]", "$ r6 [ 0 ] = -1", "$ r6 [ 1 ] = -1", "$ r6 [ 2 ] = -1", "$ r6 [ 3 ] = -1", "$ r6 [ 4 ] = 0", "$ r6 [ 5 ] = 1", "$ r6 [ 6 ] = 2", "$ r6 [ 7 ] = 3", "specialinvoke $ r0 < init > \\ `` time\\", "r7 = $ r0", "org joda time period type c time = $ r0", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org joda time tz cache date time zone", "if $ z0 == 0 goto label1", "$ r2 = org joda time tz cache date time zone r0", "return $ r2", "if $ z0 == 0 goto label1", "label $ r1 = new org joda time tz cache date time zone", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = org jolokia backend backend manager r0", "$ r2 = r3 restrictor", "$ z1 = $ r2 be origin allow r1 z0", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = java lang management management factory get platform m bean server", "org jolokia util jmx util remove m bean registration listener r1 r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jolokia config config key r0", "$ z0 = r1 request config", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jolokia detector server handle r0", "$ r1 = r2 product", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = org jolokia config config key detector_options", "r3 = r1 get $ r4", "label if r3 == null goto label3", "r19 = new org json simple parser j s o n parser", "specialinvoke r19 < init >", "$ r6 = r19 parse r3", "r17 = org json simple j s o n object $ r6", "r21 = org jolokia detector server handle r0", "$ r7 = r21 get product", "$ r8 = r17 get $ r7", "$ r9 = org json simple j s o n object $ r8", "label return $ r9", "label if r3 == null goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 size", "if $ i0 < = 0 goto label1", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` path contains extra element not usable for a list request \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "if $ i0 < = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org jolokia history history limit r0", "$ i1 = r1 max entry", "if $ i1 > i0 goto label1", "r2 = org jolokia history history limit r0", "$ i2 = r2 max entry", "if $ i2 ! = 0 goto label2", "label r3 = org jolokia history history limit r0", "r3 max entry = i0", "label r4 = org jolokia history history limit r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ l1 = java lang system current time millis", "l0 = $ l1 1000l", "$ r5 = java lang long value of l0", "r2 put \\ `` timestamp\\", "r3 = r1 get type", "r9 = org jolokia history history store r0", "$ r7 = r9 history updaters", "$ r8 = $ r7 get r3", "r4 = org jolokia history history store $ history updater $ r8", "if r4 == null goto label1", "r4 update history r2 r1 l0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org jolokia request jmx request r0", "$ r1 = r2 value fault handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = new org json simple j s o n object", "specialinvoke r8 < init >", "r9 = org jolokia request proxy target config r0", "$ r3 = r9 url", "r8 put \\ `` url\\", "r10 = org jolokia request proxy target config r0", "$ r5 = r10 env", "if $ r5 == null goto label1", "r11 = org jolokia request proxy target config r0", "$ r6 = r11 env", "r8 put \\ `` env\\", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label6", "$ i0 = r0 size", "if $ i0 < = 0 goto label6", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "$ r6 = r2 next", "r3 = java lang string $ r6", "if r3 == null goto label2", "$ r11 = r3", "goto label3", "label $ r7 = org jolokia util escape util escape part $ r11", "$ r4 append $ r7", "$ z1 = r2 have next", "if $ z1 == 0 goto label4", "$ r4 append \\ `` \\ ``", "label goto label1", "if r3 == null goto label2", "label $ r11 = \\ `` * \\ ``", "if $ z0 == 0 goto label5", "label $ r5 = $ r4 to string", "return $ r5", "if $ i0 < = 0 goto label6", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = joptsimple argument accept option spec r0", "specialinvoke r4 add default value r1", "r5 = joptsimple argument accept option spec r0", "r5 default to r2", "r6 = joptsimple argument accept option spec r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 last index of 46", "$ i1 = $ i0 + 1", "$ r1 = r0 substring $ i1", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org json j s o n tokener", "specialinvoke $ r2 < init > r1", "$ r3 = org json cdl to j s o n array r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 ! = 0 goto label2", "label return null", "if $ i0 ! = 0 goto label2", "label $ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "i2 = 0", "label $ i1 = r1 length", "if i2 > = $ i1 goto label5", "r3 = r1 opt j s o n object i2", "if r3 == null goto label4", "$ r6 = r3 to j s o n array r0", "$ r7 = org json cdl row to string $ r6", "$ r4 append $ r7", "label i2 = i2 + 1", "goto label3", "if i2 > = $ i1 goto label5", "label $ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r3 = org json j s o n stringer r0", "$ c0 = r3 mode", "if $ c0 ! = 100 goto label1", "r4 = org json j s o n stringer r0", "$ r1 = r4 writer", "$ r2 = $ r1 to string", "goto label2", "label return $ r2", "if $ c0 ! = 100 goto label1", "label $ r2 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r16 = new org json j s o n exception", "specialinvoke r16 < init > \\ `` null key \\ ``", "r19 = java lang throwable r16", "throw r19", "if r1 ! = null goto label1", "label r20 = org json j s o n writer r0", "$ c0 = r20 mode", "if $ c0 ! = 107 goto label6", "label r21 = org json j s o n writer r0", "$ r4 = r21 stack", "r22 = org json j s o n writer r0", "$ i1 = r22 top", "$ i2 = $ i1 - 1", "$ r6 = $ r4 [ $ i2 ]", "$ r5 = java lang boolean true", "$ r6 put once r1 $ r5", "r23 = org json j s o n writer r0", "$ z0 = r23 comma", "if $ z0 == 0 goto label3", "r24 = org json j s o n writer r0", "$ r11 = r24 writer", "$ r11 write 44", "label r25 = org json j s o n writer r0", "$ r8 = r25 writer", "$ r9 = org json j s o n object quote r1", "$ r8 write $ r9", "r26 = org json j s o n writer r0", "$ r10 = r26 writer", "$ r10 write 58", "r27 = org json j s o n writer r0", "r27 comma = 0", "r28 = org json j s o n writer r0", "r28 mode = 111", "label r29 = org json j s o n writer r0", "return r29", "if $ c0 ! = 107 goto label6", "label r18 = new org json j s o n exception", "specialinvoke r18 < init > \\ `` misplace key \\ ``", "r31 = java lang throwable r18", "throw r31"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r2 = org json x m l parser configuration r0", "$ r1 = r2 c data tag name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com jayway jsonpath internal filter relational operator eq", "r4 = com jayway jsonpath criterion r0", "r4 criterion type = $ r2", "$ r3 = com jayway jsonpath internal filter value node to value node r1", "r5 = com jayway jsonpath criterion r0", "r5 right = $ r3", "r6 = com jayway jsonpath criterion r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof java util map", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = com jayway jsonpath spi json abstract json provider r0", "$ z0 = r14 be array r1", "if $ z0 == 0 goto label1", "$ r10 = java util list r1", "$ i2 = $ r10 size", "return $ i2", "if $ z0 == 0 goto label1", "label r15 = com jayway jsonpath spi json abstract json provider r0", "$ z1 = r15 be map r1", "if $ z1 == 0 goto label2", "r16 = com jayway jsonpath spi json abstract json provider r0", "$ r9 = r16 get property key r1", "$ i1 = $ r9 size", "return $ i1", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof java lang string", "if $ z2 == 0 goto label3", "$ r8 = java lang string r1", "$ i0 = $ r8 length", "return $ i0", "if $ z2 == 0 goto label3", "label r13 = new com jayway jsonpath json path exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r4 = r12 append \\ `` length operation can not be apply to \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "if $ r6 == null goto label4", "$ r7 = r1 get class", "$ r11 = $ r7 get name", "goto label5", "label specialinvoke r13 < init > $ r11", "r17 = java lang throwable r13", "throw r17", "if $ r6 == null goto label4", "label $ r11 = \\ `` null\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io restassured path json json path r0", "$ r2 = r5 get r1", "$ r3 = io restassured internal common path object converter convert object to $ r2 class \\ `` ljava lang boolean \\ ``", "$ r4 = java lang boolean $ r3", "$ z0 = $ r4 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io restassured path json json path r0", "$ r2 = r5 get r1", "$ r3 = io restassured internal common path object converter convert object to $ r2 class \\ `` ljava lang character \\ ``", "$ r4 = java lang character $ r3", "$ c0 = $ r4 char value", "return $ c0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = java lang system out", "r3 = io restassured path json json path r0", "$ r2 = specialinvoke r3 to json string", "$ r1 println $ r2", "r4 = io restassured path json json path r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io restassured path json json path r0", "r2 pretty print", "r3 = io restassured path json json path r0", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new io restassured path json json path", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["io restassured path json json path config = null", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com github fge jsonschema core util regex e c m a262 helper primary_script_engine", "if $ r1 == null goto label1", "$ r4 = newarray java lang object [ 1 ]", "$ r4 [ 0 ] = r0", "$ z1 = com github fge jsonschema core util regex e c m a262 helper invoke script engine \\ `` regex be valid\\", "return $ z1", "if $ r1 == null goto label1", "label $ r3 = com github fge jsonschema core util regex e c m a262 helper regex_is_valid", "$ r2 = newarray java lang object [ 1 ]", "$ r2 [ 0 ] = r0", "$ z0 = com github fge jsonschema core util regex e c m a262 helper invoke fallback engine $ r3 $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com github fge jsonschema core util value holder r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com github fge jsonschema cfg validation configuration new builder", "$ r1 = $ r0 freeze", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com github fge jsonschema library library r0", "$ r1 = r2 digester", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 ! = null goto label1", "r1 append \\ `` null\\ ``", "return", "if r0 ! = null goto label1", "label $ r3 = net minidev json reader json writer j s o n iterable writer", "$ r3 write j s o n string r0 r1 r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = net minidev json j s o n value compression", "$ r2 = net minidev json j s o n array to j s o n string r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net minidev json j s o n array r0", "$ r1 = r2 to j s o n string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = net minidev json j s o n navi r0", "$ r1 = r5 current", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r6 = net minidev json j s o n navi r0", "$ r2 = r6 current", "$ z0 = $ r2 instanceof java lang boolean", "if $ z0 == 0 goto label2", "r7 = net minidev json j s o n navi r0", "$ r3 = r7 current", "$ r4 = java lang boolean $ r3", "return $ r4", "if $ z0 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r10 = net minidev json j s o n navi r0", "$ z0 = r10 failure", "if $ z0 == 0 goto label1", "r11 = net minidev json j s o n navi r0", "return r11", "if $ z0 == 0 goto label1", "label r12 = net minidev json j s o n navi r0", "$ r1 = r12 current", "if $ r1 ! = null goto label2", "r13 = net minidev json j s o n navi r0", "$ z3 = r13 readonly", "if $ z3 == 0 goto label2", "r14 = net minidev json j s o n navi r0", "specialinvoke r14 failure \\ `` can not create array child in readonly\\", "label r15 = net minidev json j s o n navi r0", "$ r9 = r15 current", "if $ r9 == null goto label5", "r16 = net minidev json j s o n navi r0", "$ z1 = r16 be array", "if $ z1 == 0 goto label3", "r17 = net minidev json j s o n navi r0", "return r17", "if $ z1 == 0 goto label3", "label r18 = net minidev json j s o n navi r0", "$ z2 = r18 be object", "if $ z2 == 0 goto label4", "r19 = net minidev json j s o n navi r0", "specialinvoke r19 failure \\ `` can not use object feature on array \\", "label r20 = net minidev json j s o n navi r0", "specialinvoke r20 failure \\ `` can not use current possition a object\\", "goto label6", "label r23 = net minidev json j s o n navi r0", "$ r4 = r23 root", "if $ r4 ! = null goto label7", "r24 = net minidev json j s o n navi r0", "$ r5 = r24 current", "r25 = net minidev json j s o n navi r0", "r25 root = $ r5", "goto label8", "label r27 = net minidev json j s o n navi r0", "return r27", "if $ r4 ! = null goto label7", "label r26 = net minidev json j s o n navi r0", "specialinvoke r26 store", "if $ r9 == null goto label5", "label r21 = net minidev json j s o n navi r0", "$ r2 = r21 mapper", "$ r3 = $ r2 create array", "r22 = net minidev json j s o n navi r0", "r22 current = $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "r6 = net minidev json j s o n navi r0", "$ z0 = r6 failure", "if $ z0 == 0 goto label1", "r7 = net minidev json j s o n navi r0", "return r7", "if $ z0 == 0 goto label1", "label r8 = net minidev json j s o n navi r0", "$ r2 = r8 current", "$ z1 = $ r2 instanceof java util list", "if $ z1 ! = 0 goto label2", "r9 = net minidev json j s o n navi r0", "$ r5 = specialinvoke r9 failure \\ `` current node be not an array\\", "return $ r5", "if $ z1 ! = 0 goto label2", "label r10 = net minidev json j s o n navi r0", "$ r3 = r10 current", "r1 = java util list $ r3", "$ i0 = r1 size", "r11 = net minidev json j s o n navi r0", "$ r4 = r11 at $ i0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = net minidev json reader json writer r0", "r3 register writer interface last r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = lengthof r2", "i1 = 0", "goto label2", "label if i1 < i0 goto label1", "label r3 = r2 [ i1 ]", "r7 = net minidev json reader json writer r0", "$ r5 = r7 data", "$ r5 put r3 r1", "i1 = i1 + 1", "label if i1 < i0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "if z0 == 0 goto label1", "$ r4 = org skyscreamer jsonassert j s o n compare mode strict", "goto label2", "label org skyscreamer jsonassert j s o n assert assert not equal r0 r1 $ r4", "return", "if z0 == 0 goto label1", "label $ r4 = org skyscreamer jsonassert j s o n compare mode lenient"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "if z0 == 0 goto label1", "$ r4 = org skyscreamer jsonassert j s o n compare mode strict", "goto label2", "label org skyscreamer jsonassert j s o n assert assert not equal r0 r1 $ r4", "return", "if z0 == 0 goto label1", "label $ r4 = org skyscreamer jsonassert j s o n compare mode lenient"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org skyscreamer jsonassert j s o n compare result r0", "$ r1 = r2 _expected", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org jsoup helper data util read file to byte buffer r0", "$ r4 = org jsoup parser parser html parser", "$ r5 = org jsoup helper data util parse byte data r3 r1 r2 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = new org jsoup helper descendable link list $ descend iterator", "r3 = org jsoup helper descendable link list r0", "$ i0 = r3 size", "r4 = org jsoup helper descendable link list r0", "specialinvoke r2 < init > r4 $ i0 null", "r5 = java util iterator r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 iterator", "$ r3 = org jsoup helper string util join $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org jsoup helper data util load r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org jsoup helper data util load r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "r3 = new org jsoup node boolean attribute", "specialinvoke r3 < init > r1", "r4 = org jsoup node attribute r0", "r5 = org jsoup node attribute r3", "r4 put r5", "goto label2", "label return", "if z0 == 0 goto label1", "label r6 = org jsoup node attribute r0", "r6 remove r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "org jsoup helper validate not null r0", "$ r3 = new org jsoup node document", "specialinvoke $ r3 < init > r0", "r2 = $ r3 append element \\ `` html\\ ``", "r2 append element \\ `` head\\ ``", "r2 append element \\ `` body\\ ``", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup node document r0", "$ r1 = r2 location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org jsoup node element", "$ r3 = org jsoup parser parse setting preserve case", "$ r4 = org jsoup parser tag value of r1 $ r3", "r7 = org jsoup node document r0", "$ r5 = r7 base uri", "specialinvoke r6 < init > $ r4 $ r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org jsoup helper validate not null r1", "$ r2 = newarray org jsoup nod node [ 1 ]", "$ r2 [ 0 ] = r1", "r3 = org jsoup node element r0", "r3 add child 0 $ r2", "r4 = org jsoup node element r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = new org jsoup select evaluator $ index great than", "specialinvoke r3 < init > i0", "r4 = org jsoup select evaluator r3", "r5 = org jsoup node element r0", "$ r2 = org jsoup select collector collect r4 r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org jsoup node element r0", "$ r1 = r4 tag name", "$ z0 = $ r1 equal \\ `` textarea\\ ``", "if $ z0 == 0 goto label1", "r5 = org jsoup node element r0", "$ r3 = r5 text", "return $ r3", "if $ z0 == 0 goto label1", "label r6 = org jsoup node element r0", "$ r2 = r6 attr \\ `` value\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org jsoup node element r0", "$ r4 = r6 child node", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = org jsoup nod node $ r5", "r3 outer html r1", "goto label1", "if $ z0 == 0 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 after r1", "$ r3 = org jsoup node element $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 after r1", "$ r3 = org jsoup node element $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org jsoup helper validate not null r1", "r4 = org jsoup nod node r0", "$ r2 = r4 parent node", "org jsoup helper validate not null $ r2", "r5 = org jsoup nod node r0", "$ r3 = r5 parent node", "r6 = org jsoup nod node r0", "$ r3 replace child r6 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org jsoup parser tag r0", "$ z0 = r1 can contain inline", "if $ z0 ! = 0 goto label1", "r2 = org jsoup parser tag r0", "$ z1 = r2 be empty", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup parser token queue r0", "$ z0 = r2 be empty", "if $ z0 == 0 goto label1", "$ c1 = 0", "goto label2", "label return $ c1", "if $ z0 == 0 goto label1", "label r3 = org jsoup parser token queue r0", "$ r1 = r3 queue", "r4 = org jsoup parser token queue r0", "$ i0 = r4 po", "$ c1 = $ r1 char at $ i0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 to string", "r3 = org jsoup parser token queue r0", "r3 add first $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org jsoup parser token queue r0", "$ z0 = r1 be empty", "if $ z0 ! = 0 goto label1", "r2 = org jsoup parser token queue r0", "$ i0 = r2 po", "$ i1 = $ i0 + 1", "r3 = org jsoup parser token queue r0", "r3 po = $ i1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org jsoup parser token queue r0", "$ r3 = r6 queue", "r7 = org jsoup parser token queue r0", "$ i1 = r7 po", "i0 = $ r3 index of r1 $ i1", "if i0 == -1 goto label1", "r8 = org jsoup parser token queue r0", "$ r5 = r8 queue", "r9 = org jsoup parser token queue r0", "$ i2 = r9 po", "r2 = $ r5 substring $ i2 i0", "r10 = org jsoup parser token queue r0", "$ i3 = r10 po", "$ i4 = r2 length", "$ i5 = $ i3 + $ i4", "r11 = org jsoup parser token queue r0", "r11 po = $ i5", "return r2", "if i0 == -1 goto label1", "label r12 = org jsoup parser token queue r0", "$ r4 = r12 remainder", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["$ r0 = new org jsoup safety whitelist", "specialinvoke $ r0 < init >", "$ r1 = newarray java lang string [ 24 ]", "$ r1 [ 0 ] = \\ `` a\\ ``", "$ r1 [ 1 ] = \\ `` b\\ ``", "$ r1 [ 2 ] = \\ `` blockquote\\ ``", "$ r1 [ 3 ] = \\ `` br\\ ``", "$ r1 [ 4 ] = \\ `` cite\\ ``", "$ r1 [ 5 ] = \\ `` code\\ ``", "$ r1 [ 6 ] = \\ `` dd\\ ``", "$ r1 [ 7 ] = \\ `` dl\\ ``", "$ r1 [ 8 ] = \\ `` dt\\ ``", "$ r1 [ 9 ] = \\ `` em\\ ``", "$ r1 [ 10 ] = \\ `` i\\ ``", "$ r1 [ 11 ] = \\ `` li\\ ``", "$ r1 [ 12 ] = \\ `` ol\\ ``", "$ r1 [ 13 ] = \\ `` p\\ ``", "$ r1 [ 14 ] = \\ `` pre\\ ``", "$ r1 [ 15 ] = \\ `` q\\ ``", "$ r1 [ 16 ] = \\ `` small\\ ``", "$ r1 [ 17 ] = \\ `` span\\ ``", "$ r1 [ 18 ] = \\ `` strike\\ ``", "$ r1 [ 19 ] = \\ `` strong\\ ``", "$ r1 [ 20 ] = \\ `` sub\\ ``", "$ r1 [ 21 ] = \\ `` sup\\ ``", "$ r1 [ 22 ] = \\ `` u\\ ``", "$ r1 [ 23 ] = \\ `` ul\\ ``", "$ r2 = $ r0 add tags $ r1", "$ r3 = newarray java lang string [ 1 ]", "$ r3 [ 0 ] = \\ `` href\\ ``", "$ r4 = $ r2 add attribute \\ `` a\\", "$ r5 = newarray java lang string [ 1 ]", "$ r5 [ 0 ] = \\ `` cite\\ ``", "$ r6 = $ r4 add attribute \\ `` blockquote\\", "$ r7 = newarray java lang string [ 1 ]", "$ r7 [ 0 ] = \\ `` cite\\ ``", "$ r8 = $ r6 add attribute \\ `` q\\", "$ r9 = newarray java lang string [ 4 ]", "$ r9 [ 0 ] = \\ `` ftp\\ ``", "$ r9 [ 1 ] = \\ `` http\\ ``", "$ r9 [ 2 ] = \\ `` https\\ ``", "$ r9 [ 3 ] = \\ `` mailto\\ ``", "$ r10 = $ r8 add protocols \\ `` a\\", "$ r11 = newarray java lang string [ 2 ]", "$ r11 [ 0 ] = \\ `` http\\ ``", "$ r11 [ 1 ] = \\ `` https\\ ``", "$ r12 = $ r10 add protocols \\ `` blockquote\\", "$ r13 = newarray java lang string [ 2 ]", "$ r13 [ 0 ] = \\ `` http\\ ``", "$ r13 [ 1 ] = \\ `` https\\ ``", "$ r14 = $ r12 add protocols \\ `` cite\\", "$ r15 = $ r14 add enforce attribute \\ `` a\\", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r4 = org jsoup select element r0", "r1 = r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r3 = r1 next", "r2 = org jsoup node element $ r3", "r2 remove", "goto label1", "if $ z0 == 0 goto label2", "label r5 = org jsoup select element r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup select element r0", "$ r1 = specialinvoke r2 sibling null 0 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = r1", "i1 = 0", "label if r6 == null goto label5", "r7 = org jsoup select node traversor r0", "$ r2 = r7 visitor", "$ r2 head r6 i1", "$ i0 = r6 child node size", "if $ i0 < = 0 goto label2", "r6 = r6 child node 0", "i1 = i1 + 1", "goto label1", "if $ i0 < = 0 goto label2", "label $ r3 = r6 next sibling", "if $ r3 ! = null goto label3", "if i1 < = 0 goto label3", "r8 = org jsoup select node traversor r0", "$ r5 = r8 visitor", "$ r5 tail r6 i1", "r6 = r6 parent node", "i1 = i1 + -1", "goto label2", "if i1 < = 0 goto label3", "label r9 = org jsoup select node traversor r0", "$ r4 = r9 visitor", "$ r4 tail r6 i1", "if r6 ! = r1 goto label4", "goto label5", "label return", "if r6 ! = r1 goto label4", "label r6 = r6 next sibling"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org jsoup helper validate not empty r0", "org jsoup helper validate not null r1", "r2 = org jsoup select query parser parse r0", "$ r10 = new java util array list", "specialinvoke $ r10 < init >", "$ r11 = new java util identity hash map", "specialinvoke $ r11 < init >", "r5 = r1 iterator", "label $ z0 = r5 have next", "if $ z0 == 0 goto label5", "$ r13 = r5 next", "r6 = org jsoup node element $ r13", "r7 = org jsoup select selector select r2 r6", "r8 = r7 iterator", "label $ z1 = r8 have next", "if $ z1 == 0 goto label4", "$ r14 = r8 next", "r9 = org jsoup node element $ r14", "$ z2 = $ r11 contain key r9", "if $ z2 ! = 0 goto label3", "$ r10 add r9", "$ r15 = java lang boolean true", "$ r11 put r9 $ r15", "label goto label2", "if $ z1 == 0 goto label4", "label goto label1", "if $ z0 == 0 goto label5", "label $ r12 = new org jsoup select element", "specialinvoke $ r12 < init > $ r10", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java util array a list r0", "$ r3 = org jsoup internal string util join $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jsoup nodes comment r0", "r1 = r2 get data", "$ i0 = r1 length", "if $ i0 < = 1 goto label2", "$ z0 = r1 start with \\ `` ! \\ ``", "if $ z0 ! = 0 goto label1", "$ z1 = r1 start with \\ `` ? \\ ``", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r4 = org jsoup nod node r0", "$ r2 = r4 attribute", "r1 = $ r2 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "r1 next", "r1 remove", "goto label1", "if $ z0 == 0 goto label2", "label r5 = org jsoup nod node r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = org slf4j bridge s l f4 j bridge handler get root logger", "r1 = r0 get handler", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "$ r2 = r1 [ i1 ]", "r0 remove handler $ r2", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["junit framework assert fail null", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r4 = @ parameter0", "$ i0 = junit runner base test runner fg max message length", "if $ i0 == -1 goto label1", "$ i1 = r4 length", "$ i2 = junit runner base test runner fg max message length", "if $ i1 < = $ i2 goto label1", "$ r0 = new java lang string buffer", "$ i3 = junit runner base test runner fg max message length", "$ r1 = r4 substring 0 $ i3", "$ r2 = java lang string value of $ r1", "specialinvoke $ r0 < init > $ r2", "$ r3 = $ r0 append \\ `` \\ ``", "r4 = $ r3 to string", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new junit textui test runner", "specialinvoke $ r2 < init >", "$ r3 = $ r2 do run r0", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = new junit framework test result", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = junit framework test suite r0", "$ r1 = r3 f test", "$ r2 = $ r1 element", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ z0 = 1", "goto label2", "label org junit assert assert true r0 $ z0", "return", "if r1 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org junit comparison failure r0", "$ r1 = r2 f expect", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ r1 = java text number format get instance", "$ d0 = double l0", "$ d1 = $ d0 1000 0", "$ r2 = $ r1 format $ d1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org junit runner description", "$ r3 = newarray java lang object [ 2 ]", "$ r3 [ 0 ] = r1", "$ r4 = r0 get name", "$ r3 [ 1 ] = $ r4", "$ r5 = java lang string format \\ `` % s % s \\", "specialinvoke $ r2 < init > $ r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org junit runner request class \\ `` all\\", "r4 = org junit runner j unit core r0", "$ r3 = r4 run $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org junit runner request class \\ `` all\\", "r4 = org junit runner j unit core r0", "$ r3 = r4 run $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org junit runner notification run notifier r0", "$ r2 = r3 f listener", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java io file", "specialinvoke $ r1 < init > r0", "$ r2 = org junit experimental max max core store locally $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org junit experimental result printable result r0", "$ r1 = r3 result", "$ r2 = $ r1 get failure", "$ i0 = $ r2 size", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org junit rule temporary folder r0", "$ r1 = r3 get root", "r4 = org junit rule temporary folder r0", "$ r2 = specialinvoke r4 create temporary folder in $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org junit rule test watcher $ 1", "r5 = org junit rule test watcher r0", "specialinvoke r4 < init > r5 r2 r1", "r6 = org junit runner model statement r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org junit runner j unit core default computer", "$ r2 = org junit runner request class $ r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org junit runner model initialization error r0", "$ r1 = r2 f error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = new org junit comparison failure $ comparison compactor", "r7 = org junit comparison failure r0", "$ r3 = r7 f expect", "r8 = org junit comparison failure r0", "$ r2 = r8 f actual", "specialinvoke r6 < init > 20 $ r3 $ r2", "$ r4 = specialinvoke r0 get message", "$ r5 = r6 compact $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org junit internal matcher throwable cause matcher", "specialinvoke r2 < init > r0", "r3 = org hamcrest matcher r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hamcrest core matcher contain string r1", "r3 = org junit rule expect exception r0", "r3 expect message $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org junit runner j unit command line parse result", "specialinvoke $ r2 < init >", "specialinvoke $ r2 parse args r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org junit runner model test class r0", "$ r2 = r4 method for annotation", "r5 = org junit runner model test class r0", "r1 = specialinvoke r5 collect value $ r2", "$ r3 = org junit runner model test class method_comparator", "r6 = java util comparator $ r3", "java util collection sort r1 r6", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = org junit validator annotation validator factory validators_for_annotation_types", "$ r5 = $ r4 get r1", "r2 = org junit validator annotation validator $ r5", "if r2 == null goto label1", "return r2", "if r2 == null goto label1", "label r3 = r1 value", "if r3 ! = null goto label2", "$ r12 = new java lang illegal argument exception", "$ r13 = new java lang string builder", "specialinvoke $ r13 < init >", "$ r14 = $ r13 append \\ `` can\\'t create validator value be null in annotation \\ ``", "$ r15 = r1 get class", "$ r16 = $ r15 get name", "$ r17 = $ r14 append $ r16", "$ r18 = $ r17 to string", "specialinvoke $ r12 < init > $ r18", "throw $ r12", "if r3 ! = null goto label2", "label $ r6 = r3 new instance", "r26 = org junit validator annotation validator $ r6", "$ r7 = org junit validator annotation validator factory validators_for_annotation_types", "$ r7 put if absent r1 r26", "$ r9 = org junit validator annotation validator factory validators_for_annotation_types", "$ r10 = $ r9 get r1", "$ r11 = org junit validator annotation validator $ r10", "label return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = new org hamcrest core describe a", "specialinvoke r4 < init > r0 r1 r2", "r5 = org hamcrest matcher r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r1 = new org hamcrest core be null", "specialinvoke r1 < init >", "r2 = org hamcrest matcher r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org junit internal matcher combinable matcher", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org junit rule temporary folder r0", "$ r1 = r2 folder", "r3 = org junit rule temporary folder r0", "specialinvoke r3 recursive delete $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org junit jupiter api extension condition evaluation result", "specialinvoke $ r1 < init > 0 r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org junit platform common util precondition not null r1 \\ `` type must not be null\\ ``", "if r0 ! = null goto label3", "$ z2 = r1 be primitive", "if $ z2 ! = 0 goto label1", "$ z3 = 1", "goto label2", "label return $ z3", "if $ z2 ! = 0 goto label1", "label $ z3 = 0", "if r0 ! = null goto label3", "label $ z0 = r1 be instance r0", "if $ z0 == 0 goto label4", "return 1", "if $ z0 == 0 goto label4", "label $ z1 = r1 be primitive", "if $ z1 == 0 goto label7", "$ r3 = org junit platform common util reflection utils primitive to wrapper map", "$ r4 = $ r3 get r1", "$ r5 = r0 get class", "if $ r4 ! = $ r5 goto label5", "$ z4 = 1", "goto label6", "label return $ z4", "if $ r4 ! = $ r5 goto label5", "label $ z4 = 0", "if $ z1 == 0 goto label7", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org junit platform common util reflection utils primitive to wrapper map", "$ r2 = $ r1 get r0", "$ r3 = java lang class $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = com google i18n phonenumbers a you type formatter r0", "r11 current output = \\ `` \\ ``", "r12 = com google i18n phonenumbers a you type formatter r0", "$ r1 = r12 accrue input", "$ r1 set length 0", "r13 = com google i18n phonenumbers a you type formatter r0", "$ r2 = r13 accrue input without format", "$ r2 set length 0", "r14 = com google i18n phonenumbers a you type formatter r0", "$ r3 = r14 format template", "$ r3 set length 0", "r15 = com google i18n phonenumbers a you type formatter r0", "r15 last match position = 0", "r16 = com google i18n phonenumbers a you type formatter r0", "r16 current formatting pattern = \\ `` \\ ``", "r17 = com google i18n phonenumbers a you type formatter r0", "$ r4 = r17 prefix before national number", "$ r4 set length 0", "r18 = com google i18n phonenumbers a you type formatter r0", "r18 extract national prefix = \\ `` \\ ``", "r19 = com google i18n phonenumbers a you type formatter r0", "$ r5 = r19 national number", "$ r5 set length 0", "r20 = com google i18n phonenumbers a you type formatter r0", "r20 able to format = 1", "r21 = com google i18n phonenumbers a you type formatter r0", "r21 input have format = 0", "r22 = com google i18n phonenumbers a you type formatter r0", "r22 position to remember = 0", "r23 = com google i18n phonenumbers a you type formatter r0", "r23 original position = 0", "r24 = com google i18n phonenumbers a you type formatter r0", "r24 be complete number = 0", "r25 = com google i18n phonenumbers a you type formatter r0", "r25 be expect country call code = 0", "r26 = com google i18n phonenumbers a you type formatter r0", "$ r6 = r26 possible format", "$ r6 clear", "r27 = com google i18n phonenumbers a you type formatter r0", "r27 should add space after national prefix = 0", "r28 = com google i18n phonenumbers a you type formatter r0", "$ r8 = r28 current metadata", "r29 = com google i18n phonenumbers a you type formatter r0", "$ r7 = r29 default metadata", "$ z0 = $ r8 equal $ r7", "if $ z0 ! = 0 goto label1", "r30 = com google i18n phonenumbers a you type formatter r0", "$ r9 = r30 default country", "r31 = com google i18n phonenumbers a you type formatter r0", "$ r10 = specialinvoke r31 get metadata for region $ r9", "r32 = com google i18n phonenumbers a you type formatter r0", "r32 current metadata = $ r10", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], []]}
{"nodes": ["r1 = new com google i18n phonenumbers internal regex base matcher", "specialinvoke r1 < init >", "r2 = com google i18n phonenumbers internal matcher api r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google i18n phonenumbers phone number match r0", "$ r1 = r2 raw string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache log4j console appender r0", "r1 follow = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j lf5 log level r0", "$ r1 = r2 _label", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org apache log4j lf5 viewer log broker monitor", "$ r3 = org apache log4j lf5 log level get log4 j level", "specialinvoke $ r2 < init > $ r3", "$ i0 = org apache log4j lf5 l f5 appender get default monitor width", "$ i1 = org apache log4j lf5 l f5 appender get default monitor height", "$ r2 set frame size $ i0 $ i1", "$ r2 set font size 12", "$ r2 show", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache log4j lf5 util log file parser r0", "r5 _monitor = r1", "r4 = new java lang thread", "specialinvoke r4 < init > r0", "r4 start", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r9 = new org apache log4j lf5 util adapter log record", "specialinvoke r9 < init >", "r9 set category r1", "r9 set message r3", "r9 set n d c r5", "r9 set thrown r4", "if r2 ! = null goto label1", "r10 = org apache log4j lf5 util log monitor adapter r0", "$ r8 = r10 get default level", "r9 set level $ r8", "goto label2", "label r11 = org apache log4j lf5 util log monitor adapter r0", "r12 = org apache log4j lf5 log record r9", "r11 add message r12", "return", "if r2 ! = null goto label1", "label r9 set level r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j lf5 util resource r0", "$ r1 = r2 _name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j lf5 util resource r0", "$ r1 = org apache log4j lf5 util resource utils get resource a u r l r0 r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "r8 = org apache log4j lf5 viewer categoryexplorer category node editor r0", "$ r4 = r8 _category model", "r1 = $ r4 get root category node", "r2 = r1 depth first enumeration", "label $ z0 = r2 have more element", "if $ z0 == 0 goto label3", "$ r5 = r2 next element", "r3 = org apache log4j lf5 viewer categoryexplorer category node $ r5", "$ z1 = r3 be leaf", "if $ z1 == 0 goto label2", "$ i0 = r3 get number of contained record", "if $ i0 ! = 0 goto label2", "$ r6 = r3 get parent", "if $ r6 == null goto label2", "r9 = org apache log4j lf5 viewer categoryexplorer category node editor r0", "$ r7 = r9 _category model", "r10 = javax swing tree mutable tree node r3", "$ r7 remove node from parent r10", "i1 = i1 + 1", "label goto label1", "if $ z0 == 0 goto label3", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org apache log4j lf5 viewer configure m r u file manager r0", "$ r1 = r5 _mru file list", "$ i1 = $ r1 size", "if i0 > = $ i1 goto label2", "i4 = 0", "label r6 = org apache log4j lf5 viewer configure m r u file manager r0", "$ r2 = r6 _mru file list", "$ i2 = $ r2 size", "$ i3 = $ i2 - i0", "if i4 > = $ i3 goto label2", "r7 = org apache log4j lf5 viewer configure m r u file manager r0", "$ r3 = r7 _mru file list", "$ r3 remove last", "i4 = i4 + 1", "goto label1", "if i4 > = $ i3 goto label2", "label r8 = org apache log4j lf5 viewer configure m r u file manager r0", "r8 _max size = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache log4j lf5 viewer l f5 swing utils $ 1", "specialinvoke r2 < init > r0", "r3 = java lang runnable r2", "javax swing swing utility invoke later r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = 0", "label r14 = new org apache log4j lf5 util log file parser", "specialinvoke r14 < init > r1", "r17 = org apache log4j lf5 viewer log broker monitor r0", "r14 parse r17", "z0 = 1", "label goto label4", "label return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org apache log4j logger r0", "$ r3 = r8 repository", "$ z0 = $ r3 be disabled 5000", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label $ r4 = org apache log4j level trace", "r9 = org apache log4j logger r0", "$ r5 = r9 get effective level", "r10 = org apache log4j priority $ r5", "$ z1 = $ r4 be great or equal r10", "if $ z1 == 0 goto label2", "$ r7 = org apache log4j logger fqcn", "$ r6 = org apache log4j level trace", "r11 = org apache log4j logger r0", "r12 = org apache log4j priority $ r6", "r11 force log $ r7 r12 r1 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org apache log4j level fatal", "r6 = org apache log4j priority $ r3", "$ z0 = r0 be enable for r6", "if $ z0 == 0 goto label1", "$ r4 = org apache log4j level fatal", "$ r5 = org apache log4j log m f format r1 r2", "org apache log4j log m f force log r0 $ r4 $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log4j net s m t p appender r0", "r2 cc = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log4j net s m t p appender r0", "$ r1 = r2 smtp protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache log4j net socket appender r0", "$ z0 = r6 advertise via multicast d n s", "if $ z0 == 0 goto label1", "r5 = new org apache log4j net zero conf support", "r7 = org apache log4j net socket appender r0", "$ i1 = r7 port", "r8 = org apache log4j net socket appender r0", "$ r3 = r8 get name", "specialinvoke r5 < init > \\ `` _log4j_obj_tcpconnect_appender local \\", "r9 = org apache log4j net socket appender r0", "r9 zero conf = r5", "r10 = org apache log4j net socket appender r0", "$ r4 = r10 zero conf", "$ r4 advertise", "label r11 = org apache log4j net socket appender r0", "$ r1 = r11 address", "r12 = org apache log4j net socket appender r0", "$ i0 = r12 port", "r13 = org apache log4j net socket appender r0", "r13 connect $ r1 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log4j net socket appender r0", "r2 application = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ l0 = r1 get time", "r5 = org apache log4j pattern cache date format r0", "r5 format $ l0 r2", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log4j pattern format info r0", "$ z0 = r1 leave align", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache log4j pattern log event r0", "$ r1 = r3 get property", "$ r2 = $ r1 key set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache log4j pattern relative time pattern converter", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log log4j internal default log builder r0", "r2 in use = 1", "r3 = org apache log log4j internal default log builder r0", "r3 level = r1", "r4 = org apache log log4j internal default log builder r0", "r4 marker = null", "r5 = org apache log log4j internal default log builder r0", "r5 throwable = null", "r6 = org apache log log4j internal default log builder r0", "r6 location = null", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "label $ r3 = org apache log log4j log manager factory", "$ r2 = org apache log log4j log manager fqcn", "$ r4 = $ r3 get context $ r2 r0 null z0", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r16 = null", "if r1 ! = null goto label01", "return null", "if r1 ! = null goto label01", "label if r2 == null goto label02", "r16 = java util resource bundle get bundle r1 r2", "goto label03", "label goto label05", "label r18 = r1", "label if r16 ! = null goto label11", "$ i1 = r18 last index of 46", "if $ i1 < = 0 goto label11", "r18 = r18 substring 0 $ i1", "label if r2 == null goto label08", "r16 = java util resource bundle get bundle r18 r2", "goto label09", "label goto label06", "label if r2 == null goto label08", "label r16 = java util resource bundle get bundle r18", "if $ i1 < = 0 goto label11", "label return r16", "label if r2 == null goto label02", "label r16 = java util resource bundle get bundle r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j message parameterized message r0", "$ r1 = r2 throwable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j message structure data message r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache log log4j level info", "r3 = org apache log log4j spi abstract logger r0", "$ r2 = r3 at level $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log log4j spi mutable thread context stack r0", "r1 freeze = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j status status console listener r0", "$ r1 = r2 level", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r1 ! = null goto label1", "$ r5 = r2", "goto label2", "label return $ r5", "if r1 ! = null goto label1", "label $ r3 = java util locale english", "$ r4 = r1 to upper case $ r3", "$ r5 = java lang enum value of r0 $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label r1 = r0 get", "$ z0 = r1 instanceof org apache log log4j message message", "if $ z0 == 0 goto label2", "$ r2 = org apache log log4j message message r1", "$ r3 = $ r2 get format message", "goto label3", "label return $ r3", "if $ z0 == 0 goto label2", "label $ r3 = r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r5 = org apache log log4j util property util r0", "r2 = r5 get string property r1", "if r2 == null goto label4", "label $ i1 = java lang integer parse int r2", "label return $ i1", "if r2 == null goto label4", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new java util property", "specialinvoke $ r5 < init >", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label return $ r5", "if $ i0 ! = 0 goto label2", "label $ i1 = r1 length", "$ i2 = $ i1 - 1", "$ c3 = r1 char at $ i2", "if $ c3 == 46 goto label3", "$ r14 = new java lang string builder", "specialinvoke $ r14 < init >", "$ r15 = $ r14 append r1", "$ r16 = $ r15 append 46", "$ r17 = $ r16 to string", "goto label4", "label r3 = $ r17", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "$ r7 = r0 string property name", "r18 = $ r7 iterator", "label $ z3 = r18 have next", "if $ z3 == 0 goto label7", "$ r10 = r18 next", "r19 = java lang string $ r10", "$ z1 = r19 start with r3", "if $ z1 == 0 goto label6", "$ i4 = r3 length", "$ r11 = r19 substring $ i4", "$ r12 = r0 get property r19", "$ r5 set property $ r11 $ r12", "$ r6 add r19", "label goto label5", "if $ z3 == 0 goto label7", "label r20 = $ r6 iterator", "label $ z0 = r20 have next", "if $ z0 == 0 goto label9", "$ r8 = r20 next", "r21 = java lang string $ r8", "r0 remove r21", "goto label8", "if $ z0 == 0 goto label9", "label return $ r5", "if $ c3 == 46 goto label3", "label $ r17 = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 be empty", "if $ z0 == 0 goto label2", "label return 1", "if $ z0 == 0 goto label2", "label i2 = 0", "label $ i1 = r0 length", "if i2 > = $ i1 goto label5", "c0 = r0 char at i2", "$ z1 = java lang character be whitespace c0", "if $ z1 ! = 0 goto label4", "return 0", "if $ z1 ! = 0 goto label4", "label i2 = i2 + 1", "goto label3", "if i2 > = $ i1 goto label5", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender abstract appender r0", "$ r1 = r2 handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender abstract appender r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log log4j core appender abstract output stream appender r0", "$ z0 = r1 immediate flush", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache log log4j core appender async appender r0", "$ r2 = r6 appender ref", "$ i0 = lengthof $ r2", "r1 = newarray java lang string [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r7 = org apache log log4j core appender async appender r0", "$ r3 = r7 appender ref", "$ r4 = $ r3 [ i2 ]", "$ r5 = $ r4 get ref", "r1 [ i2 ] = $ r5", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r2 = org apache log log4j core appender output stream manager r0", "r2 write r1 0 $ i0 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r2 = org apache log log4j core appender output stream manager r0", "r2 write byte r1 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "label r13 = org apache log log4j core appender output stream manager r0", "$ r3 = r13 get output stream", "$ r3 write r1 i0 i1", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["$ r0 = new org apache log log4j core appender random access file appender $ builder", "specialinvoke $ r0 < init >", "$ r1 = $ r0 a builder", "$ r2 = org apache log log4j core appender random access file appender $ builder $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = org apache log log4j core appender roll action composite action r0", "$ z0 = r8 stop on error", "if $ z0 == 0 goto label04", "r9 = org apache log log4j core appender roll action composite action r0", "r4 = r9 action", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label03", "r5 = r4 [ i1 ]", "$ z2 = r5 execute", "if $ z2 ! = 0 goto label02", "return 0", "if $ z2 ! = 0 goto label02", "label i1 = i1 + 1", "goto label01", "label if i1 > = i0 goto label03", "label return 1", "if $ z0 == 0 goto label04", "label z3 = 1", "r6 = null", "r10 = org apache log log4j core appender roll action composite action r0", "r7 = r10 action", "i2 = lengthof r7", "i3 = 0", "label if i3 > = i2 goto label10", "r1 = r7 [ i3 ]", "label $ z1 = r1 execute", "z3 = z3 & $ z1", "label goto label09", "label i3 = i3 + 1", "goto label05", "label if i3 > = i2 goto label10", "label if r6 == null goto label11", "throw r6", "label if r6 == null goto label11", "label return z3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender roll action file rename action r0", "$ r1 = r2 destination", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r22 = new javax script simple binding", "specialinvoke r22 < init >", "r22 put \\ `` base path\\", "r22 put \\ `` path list\\", "r23 = org apache log log4j core appender roll action script condition r0", "$ r8 = r23 configuration", "$ r9 = $ r8 get property", "r22 put all $ r9", "r24 = org apache log log4j core appender roll action script condition r0", "$ r10 = r24 configuration", "r22 put \\ `` configuration\\", "r25 = org apache log log4j core appender roll action script condition r0", "$ r12 = r25 configuration", "$ r13 = $ r12 get str substitutor", "r22 put \\ `` substitutor\\", "$ r15 = org apache log log4j core appender roll action script condition logger", "r22 put \\ `` status logger\\", "r26 = org apache log log4j core appender roll action script condition r0", "$ r17 = r26 configuration", "$ r18 = $ r17 get script manager", "r27 = org apache log log4j core appender roll action script condition r0", "$ r19 = r27 script", "$ r20 = $ r19 get name", "r4 = $ r18 execute $ r20 r22", "$ r21 = java util list r4", "return $ r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = new org apache log log4j core appender roll file appender $ builder", "specialinvoke $ r0 < init >", "$ r1 = $ r0 a builder", "$ r2 = org apache log log4j core appender roll file appender $ builder $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core appender rout route r0", "$ r1 = r2 route", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache log log4j core async async logger r0", "$ r4 = r6 private config", "r2 = $ r4 logger config", "r3 = r2 get property list", "if r3 == null goto label1", "r7 = org apache log log4j core async async logger r0", "specialinvoke r7 on property present r1 r3", "label $ r5 = r2 get reliability strategy", "r8 = org apache log log4j util supplier r0", "r9 = org apache log log4j core log event r1", "$ r5 log r8 r9", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache log log4j core config abstract configuration r0", "$ r2 = r3 listener", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core config abstract configuration r0", "$ r1 = r2 root", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache log log4j core config abstract configuration r0", "$ r2 = r4 logger configs", "$ r2 remove r1", "r5 = org apache log log4j core config abstract configuration r0", "specialinvoke r5 set parent", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core config custom level config r0", "$ r1 = r2 level name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r5 = org apache log log4j core config plugins convert type converter registry instance", "if r5 ! = null goto label6", "$ r2 = org apache log log4j core config plugins convert type converter registry instance_lock", "entermonitor $ r2", "label r5 = org apache log log4j core config plugins convert type converter registry instance", "if r5 ! = null goto label2", "$ r3 = new org apache log log4j core config plugins convert type converter registry", "specialinvoke $ r3 < init >", "r5 = $ r3", "org apache log log4j core config plugins convert type converter registry instance = $ r3", "label exitmonitor $ r2", "label goto label6", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core config plugins util resolver util r0", "$ r1 = r2 resource match", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 instanceof java lang string", "if $ z0 == 0 goto label1", "r9 = org apache log log4j core config plugins visitor abstract plugin visitor r0", "$ r6 = r9 conversion type", "$ r5 = java lang string r2", "$ r7 = org apache log log4j util string trim to null $ r5", "$ r8 = org apache log log4j core config plugins convert type converter convert r1 $ r6 $ r7", "return $ r8", "if $ z0 == 0 goto label1", "label r10 = org apache log log4j core config plugins visitor abstract plugin visitor r0", "$ r3 = r10 conversion type", "$ r4 = org apache log log4j core config plugins convert type converter convert r1 $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache log log4j core filter abstract filterable r0", "$ z0 = r2 stop l0 r1 1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org apache log log4j core impl log4j log event r0", "$ r1 = r7 source", "if $ r1 == null goto label1", "r8 = org apache log log4j core impl log4j log event r0", "$ r6 = r8 source", "return $ r6", "if $ r1 == null goto label1", "label r9 = org apache log log4j core impl log4j log event r0", "$ r2 = r9 logger fqcn", "if $ r2 == null goto label2", "r10 = org apache log log4j core impl log4j log event r0", "$ z0 = r10 include location", "if $ z0 ! = 0 goto label3", "label return null", "if $ z0 ! = 0 goto label3", "label r11 = org apache log log4j core impl log4j log event r0", "$ r3 = r11 logger fqcn", "$ r4 = org apache log log4j util stack locator util calc location $ r3", "r12 = org apache log log4j core impl log4j log event r0", "r12 source = $ r4", "r13 = org apache log log4j core impl log4j log event r0", "$ r5 = r13 source", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache log log4j core log event r1", "r4 = org apache log log4j core layout abstract layout r0", "r4 encode $ r3 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache log log4j core logger r0", "$ r3 = r10 get level", "if r1 ! = $ r3 goto label1", "return", "if r1 ! = $ r3 goto label1", "label if r1 == null goto label2", "r5 = r1", "goto label5", "label r9 = new org apache log log4j core logger $ private config", "r13 = org apache log log4j core logger r0", "$ r8 = r13 private config", "r14 = org apache log log4j core logger r0", "specialinvoke r9 < init > r14 $ r8 r5", "r15 = org apache log log4j core logger r0", "r15 private config = r9", "label if r1 == null goto label2", "label r11 = org apache log log4j core logger r0", "r2 = r11 get parent", "if r2 == null goto label3", "$ r6 = r2 get level", "goto label4", "label r5 = $ r6", "if r2 == null goto label3", "label r12 = org apache log log4j core logger r0", "$ r4 = r12 private config", "$ r6 = org apache log log4j core logger $ private config access $ 000 $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log log4j core logger context r0", "r2 config location = r1", "r3 = org apache log log4j core logger context r0", "specialinvoke r3 reconfigure r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core logger context r0", "$ r1 = r2 configuration", "r3 = org apache log log4j core logger context r0", "r3 update logger $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "$ r4 = r1 get message", "$ z0 = $ r4 instanceof org apache log log4j message structure data message", "if $ z0 ! = 0 goto label2", "label return null", "if $ z0 ! = 0 goto label2", "label $ r5 = r1 get message", "r3 = org apache log log4j message structure data message $ r5", "$ z1 = r2 equal ignore case \\ `` id\\ ``", "if $ z1 == 0 goto label3", "$ r8 = r3 get id", "$ r9 = $ r8 get name", "return $ r9", "if $ z1 == 0 goto label3", "label $ z2 = r2 equal ignore case \\ `` type\\ ``", "if $ z2 == 0 goto label4", "$ r7 = r3 get type", "return $ r7", "if $ z2 == 0 goto label4", "label $ r6 = r3 get r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache log log4j core net multicast dns advertiser jm d n s", "if $ r2 == null goto label5", "label $ r5 = org apache log log4j core net multicast dns advertiser jm d n s class", "$ r3 = newarray java lang class [ 1 ]", "$ r4 = org apache log log4j core net multicast dns advertiser service info class", "$ r3 [ 0 ] = $ r4", "r13 = $ r5 get method \\ `` unregister service\\", "$ r7 = org apache log log4j core net multicast dns advertiser jm d n s", "$ r6 = newarray java lang object [ 1 ]", "$ r6 [ 0 ] = r1", "r13 invoke $ r7 $ r6", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org apache log log4j core net ssl store configuration r0", "r1 location = null", "r2 = org apache log log4j core net ssl store configuration r0", "r2 password provider = null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core pattern process id pattern converter r0", "$ r1 = r2 pid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache log log4j core tool picocli command line r0", "$ r1 = r2 unmatched argument", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache log log4j core tool picocli command line to command line r0", "r2 parse r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ l5 = java lang system current time millis", "$ l6 = $ l5 * 10000l", "$ l7 = $ l6 + 122192928000000000l", "$ r0 = org apache log log4j core util uuid util count", "$ i8 = $ r0 increment and get", "$ i9 = $ i8 % 10000", "$ l10 = long $ i9", "l0 = $ l7 + $ l10", "$ l11 = l0 & 4294967295l", "l1 = $ l11 < < 32", "$ l12 = l0 & 281470681743360l", "l2 = $ l12 > > 16", "$ l13 = l0 & 1152640029630136320l", "l3 = $ l13 > > 48", "$ l14 = l1 | l2", "$ l15 = $ l14 | 4096l", "l4 = $ l15 | l3", "$ r1 = new java util uuid", "$ l16 = org apache log log4j core util uuid util least", "specialinvoke $ r1 < init > l4 $ l16", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if r1 ! = null goto label1", "label r5 = org apache log log4j core lookup property lookup r0", "$ r2 = r5 property", "$ r3 = $ r2 get r1", "$ r4 = java lang string $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["return"], "adj": [[]]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback classic net j m s queue appender r0", "r2 queue bind name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback classic net j m s queue appender r0", "$ r1 = r2 queue bind name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = ch qos logback classic selector context j n d i selector thread local", "$ r2 set r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback classic sift context base discriminator r0", "r2 default value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback classic sift m d c base discriminator r0", "r2 default value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r9 = ch qos logback classic util logback m d c adapter r0", "$ r5 = r9 copy on inherit thread local", "$ r6 = $ r5 get", "r2 = java util map $ r6", "if r2 ! = null goto label2", "label r10 = ch qos logback classic util logback m d c adapter r0", "r3 = specialinvoke r10 get and set last operation 1", "r11 = ch qos logback classic util logback m d c adapter r0", "$ z0 = specialinvoke r11 be last op read or null r3", "if $ z0 == 0 goto label3", "r12 = ch qos logback classic util logback m d c adapter r0", "r4 = specialinvoke r12 duplicate and insert new map r2", "r4 remove r1", "goto label4", "label return", "if $ z0 == 0 goto label3", "label r2 remove r1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = ch qos logback classic util logback m d c adapter r0", "r2 = r5 get property map", "if r2 == null goto label1", "if r1 == null goto label1", "$ r3 = r2 get r1", "$ r4 = java lang string $ r3", "return $ r4", "if r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r8 = ch qos logback classic util logback m d c adapter r0", "$ r2 = r8 last operation", "$ r3 = java lang integer value of 2", "$ r2 set $ r3", "r9 = ch qos logback classic util logback m d c adapter r0", "$ r4 = r9 copy on inherit thread local", "$ r5 = $ r4 get", "r1 = java util map $ r5", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r7 = new java util hash map", "specialinvoke r7 < init > r1", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = ch qos logback classic net server server socket receiver r0", "$ i0 = r1 backlog", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = ch qos logback classic net server s s l server socket receiver r0", "$ r1 = r5 ssl", "if $ r1 ! = null goto label1", "r4 = new ch qos logback core net ssl s s l configuration", "specialinvoke r4 < init >", "r6 = ch qos logback classic net server s s l server socket receiver r0", "r6 ssl = r4", "label r7 = ch qos logback classic net server s s l server socket receiver r0", "$ r2 = r7 ssl", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback classic net syslog appender r0", "r2 stack trace pattern = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = ch qos logback classic spi log event r0", "$ l0 = r1 time stamp", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core db driver manager connection source r0", "$ r1 = r2 driver class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core html h t m l layout base r0", "r2 pattern = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r32 = ch qos logback core joran action abstract event evaluator action r0", "$ z0 = r32 in error", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r33 = ch qos logback core joran action abstract event evaluator action r0", "$ r4 = r33 evaluator", "$ z1 = $ r4 instanceof ch qos logback core spi life cycle", "if $ z1 == 0 goto label2", "r34 = ch qos logback core joran action abstract event evaluator action r0", "$ r13 = r34 evaluator", "r35 = ch qos logback core spi life cycle $ r13", "r35 start", "r30 = new java lang string builder", "specialinvoke r30 < init >", "$ r15 = r30 append \\ `` start evaluator name [ \\ ``", "r36 = ch qos logback core joran action abstract event evaluator action r0", "$ r16 = r36 evaluator", "$ r17 = $ r16 get name", "$ r18 = $ r15 append $ r17", "$ r19 = $ r18 append \\ `` ] \\ ``", "$ r20 = $ r19 to string", "r37 = ch qos logback core joran action abstract event evaluator action r0", "r37 add info $ r20", "label r3 = r1 peek object", "r38 = ch qos logback core joran action abstract event evaluator action r0", "$ r5 = r38 evaluator", "if r3 == $ r5 goto label3", "r39 = ch qos logback core joran action abstract event evaluator action r0", "r39 add warn \\ `` the object on the top the of the stack be not the evaluator push early \\ ``", "goto label8", "label return", "if r3 == $ r5 goto label3", "label r1 pop object", "label r40 = ch qos logback core joran action abstract event evaluator action r0", "$ r7 = r40 context", "$ r8 = $ r7 get object \\ `` evaluator_map\\ ``", "r28 = java util map $ r8", "if r28 ! = null goto label5", "r41 = ch qos logback core joran action abstract event evaluator action r0", "r41 add error \\ `` could not find evaluator map\\ ``", "goto label6", "label goto label8", "if r28 ! = null goto label5", "label r42 = ch qos logback core joran action abstract event evaluator action r0", "$ r9 = r42 evaluator", "$ r10 = $ r9 get name", "r43 = ch qos logback core joran action abstract event evaluator action r0", "$ r11 = r43 evaluator", "r28 put $ r10 $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r16 = ch qos logback core joran action appender action r0", "$ z0 = r16 in error", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r17 = ch qos logback core joran action appender action r0", "$ r4 = r17 appender", "$ z1 = $ r4 instanceof ch qos logback core spi life cycle", "if $ z1 == 0 goto label2", "r18 = ch qos logback core joran action appender action r0", "$ r14 = r18 appender", "r19 = ch qos logback core spi life cycle $ r14", "r19 start", "label r3 = r1 peek object", "r20 = ch qos logback core joran action appender action r0", "$ r5 = r20 appender", "if r3 == $ r5 goto label3", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r8 = r15 append \\ `` the object at the of the stack be not the appender name [ \\ ``", "r21 = ch qos logback core joran action appender action r0", "$ r9 = r21 appender", "$ r10 = $ r9 get name", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 append \\ `` ] push earlier \\ ``", "$ r13 = $ r12 to string", "r22 = ch qos logback core joran action appender action r0", "r22 add warn $ r13", "goto label4", "label return", "if r3 == $ r5 goto label3", "label r1 pop object"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], []]}
{"nodes": ["r0 = @ this", "r24 = ch qos logback core net s m t p appender base r0", "$ z0 = r24 start", "if $ z0 ! = 0 goto label1", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r17 = r21 append \\ `` attempt to append to a non-started appender \\ ``", "r25 = ch qos logback core net s m t p appender base r0", "$ r18 = r25 get name", "$ r19 = $ r17 append $ r18", "$ r20 = $ r19 to string", "r26 = ch qos logback core net s m t p appender base r0", "r26 add error $ r20", "return 0", "if $ z0 ! = 0 goto label1", "label r27 = ch qos logback core net s m t p appender base r0", "$ r1 = r27 mime msg", "if $ r1 ! = null goto label2", "r28 = ch qos logback core net s m t p appender base r0", "r28 add error \\ `` message object not configure \\ ``", "if $ r1 ! = null goto label2", "label r29 = ch qos logback core net s m t p appender base r0", "$ r2 = r29 event evaluator", "if $ r2 ! = null goto label3", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r11 = r22 append \\ `` no event evaluator be set for appender [ \\ ``", "r30 = ch qos logback core net s m t p appender base r0", "$ r12 = r30 name", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 append \\ `` ] \\ ``", "$ r15 = $ r14 to string", "r31 = ch qos logback core net s m t p appender base r0", "r31 add error $ r15", "if $ r2 ! = null goto label3", "label r32 = ch qos logback core net s m t p appender base r0", "$ r3 = r32 layout", "if $ r3 ! = null goto label4", "r23 = new java lang string builder", "specialinvoke r23 < init >", "$ r5 = r23 append \\ `` no layout set for appender name [ \\ ``", "r33 = ch qos logback core net s m t p appender base r0", "$ r6 = r33 name", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` ] for more information please visit http logback qos ch code html #smtp_no_layout\\ ``", "$ r9 = $ r8 to string", "r34 = ch qos logback core net s m t p appender base r0", "r34 add error $ r9", "if $ r3 ! = null goto label4", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core net s m t p appender base r0", "$ r1 = r2 smtp host", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = ch qos logback core net socket appender base r0", "r1 port = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "c0 = @ parameter2", "i1 = @ parameter3", "specialinvoke r0 escape \\ `` % \\", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = ch qos logback core roll rolling policy base r0", "$ r1 = r6 file name pattern str", "$ z0 = $ r1 end with \\ `` gz\\ ``", "if $ z0 == 0 goto label1", "r7 = ch qos logback core roll rolling policy base r0", "r7 add info \\ `` will use gz compression\\ ``", "$ r5 = ch qos logback core roll helper compression mode gz", "r8 = ch qos logback core roll rolling policy base r0", "r8 compression mode = $ r5", "goto label3", "label return", "if $ z0 == 0 goto label1", "label r9 = ch qos logback core roll rolling policy base r0", "$ r2 = r9 file name pattern str", "$ z1 = $ r2 end with \\ `` zip\\ ``", "if $ z1 == 0 goto label2", "r10 = ch qos logback core roll rolling policy base r0", "r10 add info \\ `` will use zip compression\\ ``", "$ r4 = ch qos logback core roll helper compression mode zip", "r11 = ch qos logback core roll rolling policy base r0", "r11 compression mode = $ r4", "if $ z1 == 0 goto label2", "label r12 = ch qos logback core roll rolling policy base r0", "r12 add info \\ `` no compression will be used\\ ``", "$ r3 = ch qos logback core roll helper compression mode none", "r13 = ch qos logback core roll rolling policy base r0", "r13 compression mode = $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r12 = null", "r13 = ch qos logback core spi appender attachable impl r0", "$ r5 = r13 r", "$ r5 lock", "label r14 = ch qos logback core spi appender attachable impl r0", "$ r6 = r14 appender list", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "$ r8 = r2 next", "r3 = ch qos logback core appender $ r8", "$ r9 = r3 get name", "$ z1 = r1 equal $ r9", "if $ z1 == 0 goto label4", "r12 = r3", "goto label5", "label r15 = ch qos logback core spi appender attachable impl r0", "$ r7 = r15 r", "$ r7 unlock", "goto label8", "label return r12", "if $ z1 == 0 goto label4", "label goto label3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new java util array list", "specialinvoke $ r5 < init >", "r3 = r1 get resource r0", "label $ z0 = r3 have more element", "if $ z0 == 0 goto label2", "$ r6 = r3 next element", "r4 = java net url $ r6", "$ r5 add r4", "goto label1", "if $ z0 == 0 goto label2", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = ch qos logback core util loader has_get_class_loader_permission", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r4 = new ch qos logback core util loader $ 2", "specialinvoke r4 < init > r0", "r5 = java security privilege action r4", "$ r2 = java security access controller do privilege r5", "$ r3 = java lang class loader $ r2", "return $ r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get class loader", "if r1 ! = null goto label1", "$ r2 = java lang class loader get system class loader", "return $ r2", "if r1 ! = null goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r11 = new java lang illegal argument exception", "specialinvoke $ r11 < init > \\ `` context argument can not be null\\ ``", "throw $ r11", "if r0 ! = null goto label1", "label r1 = r0 get status manager", "if r1 ! = null goto label2", "$ r5 = ch qos logback core util status printer ps", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r6 = $ r4 append \\ `` warn context name \\\\\\ `` \\ ``", "$ r7 = r0 get name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` \\\\\\ `` have no status manager\\ ``", "$ r10 = $ r9 to string", "$ r5 println $ r10", "goto label3", "label return", "if r1 ! = null goto label2", "label $ r3 = new ch qos logback core status status checker", "specialinvoke $ r3 < init > r0", "$ i0 = $ r3 get high level 0l", "if $ i0 ! = 2 goto label3", "ch qos logback core util status printer print r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = ch qos logback core basic status manager r0", "$ r4 = r9 status listener list lock", "entermonitor $ r4", "label $ z1 = r1 instanceof ch qos logback core status on console status listener", "if $ z1 == 0 goto label3", "r10 = ch qos logback core basic status manager r0", "$ r6 = r10 status listener list", "$ r7 = r1 get class", "r11 = ch qos logback core basic status manager r0", "z0 = specialinvoke r11 check for presence $ r6 $ r7", "if z0 == 0 goto label3", "exitmonitor $ r4", "label return 0", "if z0 == 0 goto label3", "label r12 = ch qos logback core basic status manager r0", "$ r5 = r12 status listener list", "$ r5 add r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core net s m t p appender base r0", "r2 localhost = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core net ssl key manager factory factory bean r0", "r2 algorithm = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core net ssl key manager factory factory bean r0", "r2 provider = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core net ssl s s l parameter configuration r0", "r2 include protocol = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core net ssl s s l parameter configuration r0", "r2 need client auth = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core net ssl s s l parameter configuration r0", "$ r1 = r2 want client auth", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = ch qos logback core html h t m l layout base r0", "r2 title = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = ch qos logback core joran util bean bean description cache r0", "$ r3 = r10 class to bean description", "$ z0 = $ r3 contain key r1", "if $ z0 ! = 0 goto label1", "r11 = ch qos logback core joran util bean bean description cache r0", "$ r7 = specialinvoke r11 get bean description factory", "r2 = $ r7 create r1", "r12 = ch qos logback core joran util bean bean description cache r0", "$ r8 = r12 class to bean description", "$ r8 put r1 r2", "label r13 = ch qos logback core joran util bean bean description cache r0", "$ r4 = r13 class to bean description", "$ r5 = $ r4 get r1", "$ r6 = ch qos logback core joran util bean bean description $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = ch qos logback core net s m t p appender base r0", "r1 asynchronous send = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core spi context aware base r0", "$ r1 = r2 declare origin", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = ch qos logback core util c o w array list r0", "specialinvoke r2 refresh copy if necessary", "r3 = ch qos logback core util c o w array list r0", "$ r1 = r3 our copy", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = r0 trim", "$ i0 = $ r1 length", "if $ i0 ! = 0 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ i0 ! = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ b1 = r0 [ i0 ]", "$ s6 = $ b1 & 255", "$ i2 = i0 + 1", "$ b3 = r0 [ $ i2 ]", "$ s4 = $ b3 & 255", "$ i5 = $ s4 < < 8", "$ i11 = $ s6 | $ i5", "$ i7 = i0 + 2", "$ b8 = r0 [ $ i7 ]", "$ s9 = $ b8 & 255", "$ i10 = $ s9 < < 16", "$ i15 = $ i11 | $ i10", "$ i12 = i0 + 3", "$ b13 = r0 [ $ i12 ]", "$ i14 = $ b13 < < 24", "$ i16 = $ i15 | $ i14", "return $ i16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = net jpountz lz4 l z4 decompressor with length get decompress length r1 i0", "r4 = net jpountz lz4 l z4 decompressor with length r0", "$ r2 = r4 decompressor", "$ i2 = i0 + 4", "$ r3 = $ r2 decompress r1 $ i2 i1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = net jpountz lz4 l z4 frame input stream r0", "$ z0 = r1 read single frame", "if $ z0 == 0 goto label3", "r2 = net jpountz lz4 l z4 frame input stream r0", "$ l0 = r2 expect content size", "$ b1 = $ l0 cmp 0l", "if $ b1 < 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ b1 < 0 goto label1", "label $ z1 = 0", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven artifact repository authentication r0", "$ r1 = r2 private key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven repository proxy r0", "$ r1 = r2 user name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven artifact resolver artifact resolution request r0", "$ r1 = r2 collection filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven execution build failure r0", "$ r1 = r2 cause", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven extension internal core export r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven project maven project r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = org apache maven project maven project r0", "$ r3 = r16 artifact", "if $ r3 ! = null goto label5", "r17 = org apache maven project maven project r0", "$ r4 = r17 artifact filter", "if $ r4 == null goto label1", "r18 = org apache maven project maven project r0", "$ r6 = r18 resolve artifact", "if $ r6 ! = null goto label2", "label r14 = new java util link hash set", "specialinvoke r14 < init >", "r19 = org apache maven project maven project r0", "r19 artifact = r14", "goto label5", "label r25 = org apache maven project maven project r0", "$ r13 = r25 artifact", "return $ r13", "if $ r6 ! = null goto label2", "label r15 = new java util link hash set", "r20 = org apache maven project maven project r0", "$ r8 = r20 resolve artifact", "$ i0 = $ r8 size", "$ i1 = $ i0 * 2", "specialinvoke r15 < init > $ i1", "r21 = org apache maven project maven project r0", "r21 artifact = r15", "r22 = org apache maven project maven project r0", "$ r9 = r22 resolve artifact", "r1 = $ r9 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label5", "$ r10 = r1 next", "r2 = org apache maven artifact artifact $ r10", "r23 = org apache maven project maven project r0", "$ r11 = r23 artifact filter", "$ z1 = $ r11 include r2", "if $ z1 == 0 goto label4", "r24 = org apache maven project maven project r0", "$ r12 = r24 artifact", "$ r12 add r2", "label goto label3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven cli internal extension model core extension r0", "$ r1 = r2 artifact id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven share invoker default invocation request r0", "$ r1 = r2 property", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven share invoker maven command line builder r0", "r2 logger = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model activation r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model activation r0", "r2 o = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model activation file r0", "$ r1 = r2 exist", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model build base r0", "r2 default goal = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model build base r0", "r2 directory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model contributor r0", "$ r1 = r2 timezone", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model dependency r0", "r2 system path = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model distribution management r0", "$ r1 = r2 relocation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model distribution management r0", "$ r1 = r2 snapshot repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model distribution management r0", "r2 relocation = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model distribution management r0", "r2 status = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven model input location r0", "$ i0 = r1 column number", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model issue management r0", "r2 system = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model license r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model license r0", "r2 distribution = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model license r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 issue management", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 ci management = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 issue management = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 mailing list = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model base r0", "$ r1 = r2 report", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model base r0", "r2 module = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model organization r0", "r2 url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model parent r0", "r2 relative path = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model plugin r0", "$ r1 = r2 extension", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model plugin r0", "$ r1 = r2 group id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model prerequisite r0", "$ r1 = r2 maven", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model profile r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model relocation r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model relocation r0", "r2 group id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model report r0", "$ r1 = r2 exclude default", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model report r0", "r2 output directory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model report set r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model repository policy r0", "$ r1 = r2 checksum policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang string value of z0", "r2 = org apache maven model repository policy r0", "r2 enable = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model build model data r0", "$ r1 = r2 active profile", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache maven model build result error null r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model profile default profile activation context r0", "r2 project directory = r1", "r3 = org apache maven model profile default profile activation context r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven plugin descriptor plugin descriptor r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven artifact repository metadata plugin r0", "r2 prefix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven artifact repository metadata versioning r0", "r2 snapshot version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = java util collection empty list", "r3 = org eclipse aether collection collect request r0", "r3 manage dependency = $ r2", "goto label2", "label r5 = org eclipse aether collection collect request r0", "return r5", "if r1 ! = null goto label1", "label r4 = org eclipse aether collection collect request r0", "r4 manage dependency = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether deployment deploy request r0", "r2 repository = r1", "r3 = org eclipse aether deployment deploy request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = java util collection empty list", "r3 = org eclipse aether deployment deploy result r0", "r3 metadata = $ r2", "goto label2", "label r5 = org eclipse aether deployment deploy result r0", "return r5", "if r1 ! = null goto label1", "label r4 = org eclipse aether deployment deploy result r0", "r4 metadata = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r2 = java lang boolean true", "r3 = org eclipse aether graph dependency r0", "$ r1 = r3 optional", "$ z0 = $ r2 equal $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r2 = java util collection empty list", "r3 = org eclipse aether installation install request r0", "r3 metadata = $ r2", "goto label2", "label r5 = org eclipse aether installation install request r0", "return r5", "if r1 ! = null goto label1", "label r4 = org eclipse aether installation install request r0", "r4 metadata = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse aether repository authentication context r0", "$ r2 = r4 get r1 null class \\ `` ljava lang string \\ ``", "$ r3 = java lang string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org eclipse aether repository local artifact registration r0", "r3 context = r1", "goto label2", "label r5 = org eclipse aether repository local artifact registration r0", "return r5", "if r1 == null goto label1", "label $ r2 = java util collection empty list", "r4 = org eclipse aether repository local artifact registration r0", "r4 context = $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether repository local artifact request r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org eclipse aether repository local metadata registration r0", "r3 context = r1", "goto label2", "label r5 = org eclipse aether repository local metadata registration r0", "return r5", "if r1 == null goto label1", "label $ r2 = java util collection empty list", "r4 = org eclipse aether repository local metadata registration r0", "r4 context = $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether repository event r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution artifact descriptor policy request r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution artifact descriptor result r0", "$ r1 = r2 relocation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse aether resolution artifact request r0", "r5 node = r1", "if r1 == null goto label1", "$ r2 = r1 get dependency", "$ r3 = $ r2 get artifact", "r6 = org eclipse aether resolution artifact request r0", "r6 set artifact $ r3", "label r7 = org eclipse aether resolution artifact request r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution artifact result r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether resolution dependency request r0", "r2 collect request = r1", "r3 = org eclipse aether resolution dependency request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution metadata request r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether resolution metadata result r0", "r2 exception = r1", "r3 = org eclipse aether resolution metadata result r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse aether resolution version range result r0", "$ r1 = r5 version", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label r6 = org eclipse aether resolution version range result r0", "$ r2 = r6 version", "$ r3 = $ r2 get 0", "$ r4 = org eclipse aether version version $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution version range result r0", "$ r1 = r2 version constraint", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether resolution version request r0", "r2 artifact = r1", "r3 = org eclipse aether resolution version request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution version result r0", "$ r1 = r2 exception", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether resolution version result r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse aether transfer transfer event r0", "$ r1 = r3 data buffer", "if $ r1 == null goto label1", "r4 = org eclipse aether transfer transfer event r0", "$ r2 = r4 data buffer", "$ i0 = $ r2 remain", "goto label2", "label return $ i0", "if $ r1 == null goto label1", "label $ i0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org eclipse aether transfer transfer resource r0", "r1 content length = l0", "r2 = org eclipse aether transfer transfer resource r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether transfer transfer resource r0", "$ r1 = r2 trace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org eclipse aether impl default service locator r0", "$ r3 = specialinvoke r4 get entry r1 1", "$ r3 set service r2", "r5 = org eclipse aether impl default service locator r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether impl update check r0", "$ r1 = r2 item", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether spi connector artifact transfer r0", "$ r1 = r2 artifact", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set exception r1", "r3 = org eclipse aether spi connector artifact download r0", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse aether spi connector metadata transfer r0", "$ r1 = r2 metadata", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse aether spi connector transport put task r0", "r3 data file = r1", "$ r2 = org eclipse aether spi connector transport put task empty", "r4 = org eclipse aether spi connector transport put task r0", "r4 data bytes = $ r2", "r5 = org eclipse aether spi connector transport put task r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 add r1", "r3 = org eclipse aether util artifact default artifact type registry r0", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r12 = new java util array list", "r13 = org eclipse aether util graph visitor abstract depth first node list generator r0", "$ r6 = r13 get node", "$ i0 = $ r6 size", "specialinvoke r12 < init > $ i0", "r14 = org eclipse aether util graph visitor abstract depth first node list generator r0", "$ r7 = r14 get node", "r2 = $ r7 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r8 = r2 next", "r3 = org eclipse aether graph dependency node $ r8", "$ r9 = r3 get dependency", "if $ r9 == null goto label2", "$ r10 = r3 get dependency", "$ r11 = $ r10 get artifact", "r4 = $ r11 get file", "if r4 == null goto label2", "r12 add r4", "label goto label1", "if $ z0 == 0 goto label3", "label return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org eclipse aether util listener chain repository listener r0", "$ r2 = r3 listener", "$ r2 remove r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse aether util repository authentication builder r0", "$ r2 = r3 add string \\ `` username\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse aether util repository authentication builder r0", "$ r2 = r3 add secret \\ `` password\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse aether util repository authentication builder r0", "$ r2 = r3 add secret \\ `` password\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting mirror r0", "$ r1 = r2 mirror of", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting mirror r0", "r2 layout = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting mirror r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting profile r0", "r2 plugin repository = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting profile r0", "r2 property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting proxy r0", "r2 non proxy host = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting server r0", "$ r1 = r2 configuration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting server r0", "$ r1 = r2 directory permission", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting server r0", "r2 file permission = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache maven setting setting r0", "r1 interactive mode = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting setting r0", "r2 profile = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r4 append 34", "$ r6 = specialinvoke r0 get command line r1 r2", "$ r7 = $ r6 get 0", "$ r8 = java lang string $ r7", "$ r4 append $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r6 = org apache maven share utils io directory scanner r0", "$ r2 = r6 dirs include", "r7 = org apache maven share utils io directory scanner r0", "$ r1 = r7 dirs include", "$ i0 = $ r1 size", "$ r3 = newarray java lang string [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r6 = org apache maven share utils io directory scanner r0", "r6 slow scan", "r7 = org apache maven share utils io directory scanner r0", "$ r2 = r7 dirs exclude", "r8 = org apache maven share utils io directory scanner r0", "$ r1 = r8 dirs exclude", "$ i0 = $ r1 size", "$ r3 = newarray java lang string [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache maven share utils io file utils extension r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com draw metadata directory r0", "$ r1 = r2 _defined tag list", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = com draw metadata directory r0", "r2 set object array i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r3 = org eclipse microprofile rest client spi rest client builder resolver instance", "if $ r3 ! = null goto label9", "entermonitor class \\ `` lorg eclipse microprofile rest client spi rest client builder resolver \\ ``", "label $ r5 = org eclipse microprofile rest client spi rest client builder resolver instance", "if $ r5 == null goto label3", "$ r9 = org eclipse microprofile rest client spi rest client builder resolver instance", "exitmonitor class \\ `` lorg eclipse microprofile rest client spi rest client builder resolver \\ ``", "label return $ r9", "if $ r5 == null goto label3", "label r11 = rest client builder resolver $ lambda_instance_0__1 bootstrap $", "$ r6 = java security access controller do privilege r11", "r12 = java lang class loader $ r6", "if r12 ! = null goto label4", "r13 = rest client builder resolver $ lambda_instance_1__2 bootstrap $", "$ r8 = java security access controller do privilege r13", "r12 = java lang class loader $ r8", "label r1 = org eclipse microprofile rest client spi rest client builder resolver load spi r12", "if r1 ! = null goto label5", "$ r7 = new java lang illegal state exception", "specialinvoke $ r7 < init > \\ `` no rest client builder resolver implementation find ! \\ ``", "throw $ r7", "if r1 ! = null goto label5", "label org eclipse microprofile rest client spi rest client builder resolver instance = r1", "if $ r3 ! = null goto label9", "label $ r4 = org eclipse microprofile rest client spi rest client builder resolver instance", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], []]}
{"nodes": ["z0 = @ parameter0", "if z0 == 0 goto label1", "$ r0 = com eclipsesource json json true", "goto label2", "label return $ r0", "if z0 == 0 goto label1", "label $ r0 = com eclipsesource json json false"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["$ r0 = new com eclipsesource json json array", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "$ r2 = com eclipsesource json json value z0", "r4 = com eclipsesource json json object r0", "r4 set r1 $ r2", "r5 = com eclipsesource json json object r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "$ r2 = com eclipsesource json json value z0", "r4 = com eclipsesource json json object r0", "r4 set r1 $ r2", "r5 = com eclipsesource json json object r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r9 = new java lang null pointer exception", "specialinvoke r9 < init > \\ `` object be null\\ ``", "throw r9", "if r1 ! = null goto label1", "label r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r4 = r2 next", "r3 = com eclipsesource json json object $ member $ r4", "$ r5 = com eclipsesource json json object $ member access $ 000 r3", "$ r6 = com eclipsesource json json object $ member access $ 100 r3", "r10 = com eclipsesource json json object r0", "r10 set $ r5 $ r6", "goto label2", "if $ z0 == 0 goto label3", "label r11 = com eclipsesource json json object r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang unsupported operation exception", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` not a number \\ ``", "r9 = com eclipsesource json json value r0", "$ r4 = r9 to string", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "specialinvoke r8 < init > $ r6", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com eclipsesource json writer config minimal", "r3 = com eclipsesource json json value r0", "r3 write to r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com eclipsesource json parse exception r0", "$ r1 = r2 location", "$ i0 = $ r1 column", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["b0 = @ parameter0", "r3 = new org mockito internal matcher less or equal", "$ r1 = java lang byte value of b0", "specialinvoke r3 < init > $ r1", "r4 = org mockito argument matcher r3", "$ r2 = org mockito additional matcher report matcher r4", "$ b1 = $ r2 return zero", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["b0 = @ parameter0", "r3 = new org mockito internal matcher less or equal", "$ r1 = java lang byte value of b0", "specialinvoke r3 < init > $ r1", "r4 = org mockito argument matcher r3", "$ r2 = org mockito additional matcher report matcher r4", "$ b1 = $ r2 return zero", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["b0 = @ parameter0", "r3 = new org mockito internal matcher less or equal", "$ r1 = java lang byte value of b0", "specialinvoke r3 < init > $ r1", "r4 = org mockito argument matcher r3", "$ r2 = org mockito additional matcher report matcher r4", "$ b1 = $ r2 return zero", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["b0 = @ parameter0", "r3 = new org mockito internal matcher less than", "$ r1 = java lang byte value of b0", "specialinvoke r3 < init > $ r1", "r4 = org mockito argument matcher r3", "$ r2 = org mockito additional matcher report matcher r4", "$ b1 = $ r2 return zero", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["b0 = @ parameter0", "r3 = new org mockito internal matcher less than", "$ r1 = java lang byte value of b0", "specialinvoke r3 < init > $ r1", "r4 = org mockito argument matcher r3", "$ r2 = org mockito additional matcher report matcher r4", "$ b1 = $ r2 return zero", "return $ b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r5 = new org mockito internal matcher array equal", "specialinvoke r5 < init > r0", "r6 = org mockito argument matcher r5", "$ r2 = org mockito additional matcher report matcher r6", "$ r3 = $ r2 return null", "$ r4 = boolean [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "$ r0 = org mockito additional matcher mock progress", "$ r1 = $ r0 get argument matcher storage", "$ r2 = $ r1 report and", "$ z2 = $ r2 return false", "return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "$ r0 = org mockito additional matcher mock progress", "$ r1 = $ r0 get argument matcher storage", "$ r2 = $ r1 report or", "$ z2 = $ r2 return false", "return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "$ r0 = org mockito additional matcher mock progress", "$ r1 = $ r0 get argument matcher storage", "$ r2 = $ r1 report or", "$ z2 = $ r2 return false", "return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["z0 = @ parameter0", "$ r0 = org mockito additional matcher mock progress", "$ r1 = $ r0 get argument matcher storage", "$ r2 = $ r1 report not", "$ z1 = $ r2 return false", "return $ z1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "r4 = new org mockito internal matcher equal with delta", "$ r1 = java lang double value of d0", "$ r2 = java lang double value of d1", "specialinvoke r4 < init > $ r1 $ r2", "r5 = org mockito argument matcher r4", "$ r3 = org mockito additional matcher report matcher r5", "$ b0 = $ r3 return zero", "$ d2 = double $ b0", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r0 get class", "r2 = $ r3 get simple name", "$ r4 = org mockito internal util decamelizer decamelize matcher r2", "r1 append text $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org mockito asm class writer r0", "$ r2 = r3 new class item r1", "$ i0 = $ r2 index", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org mockito asm label r0", "$ i0 = r3 status", "$ i1 = $ i0 & 2", "if $ i1 ! = 0 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` label offset position have not be resolve yet\\ ``", "throw r2", "if $ i1 ! = 0 goto label1", "label r4 = org mockito asm label r0", "$ i2 = r4 position", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org mockito asm tree analysis analyzer r0", "$ r1 = r2 frame", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org mockito asm tree insn list r0", "r2 = r3 first", "label if r2 == null goto label2", "if r2 == r1 goto label2", "r2 = r2 next", "goto label1", "if r2 == r1 goto label2", "label if r2 == null goto label3", "$ z0 = 1", "goto label4", "label return $ z0", "label if r2 == null goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "if i0 == 5 goto label1", "if i0 == 2 goto label1", "if i0 ! = 4 goto label2", "label if r1 == null goto label3", "r8 = org mockito asm util trace abstract visitor r0", "$ r2 = r8 buf", "$ r3 = $ r2 append \\ `` signature \\ ``", "$ r4 = $ r3 append r1", "$ r4 append 10", "goto label3", "label return", "if i0 ! = 4 goto label2", "label r9 = org mockito asm util trace abstract visitor r0", "$ r6 = r9 buf", "$ r6 append r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mockito cglib core abstract class generator r0", "r2 class loader = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = lengthof r1", "if $ i0 ! = 0 goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` array can not be empty\\ ``", "throw r4", "if $ i0 ! = 0 goto label1", "label $ r2 = org mockito cglib proxy callback info determine type r1", "r5 = org mockito cglib proxy enhancer r0", "r5 callback type = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org mockito cglib util parallel sorter r0", "$ i1 = specialinvoke r1 len", "r2 = org mockito cglib util parallel sorter r0", "r2 quick sort i0 0 $ i1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org mockito internal matcher any any", "r3 = org hamcrest matcher $ r0", "$ r1 = org mockito matcher report matcher r3", "$ r2 = $ r1 return set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "r3 = new org mockito internal matcher equal", "$ r1 = java lang boolean value of z0", "specialinvoke r3 < init > $ r1", "r4 = org hamcrest matcher r3", "$ r2 = org mockito matcher report matcher r4", "$ z1 = $ r2 return false", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r1 = org mockito mockito mockito_core", "r3 = new org mockito internal stubbing answer do nothing", "specialinvoke r3 < init >", "r4 = org mockito stub answer r3", "$ r2 = $ r1 do answer r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org mockito internal verification verification mode factory at least i0", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org mockito internal stubbing defaultanswers forward invocation", "specialinvoke r2 < init > r0", "r3 = org mockito stub answer r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org mockito internal configuration plugins plugins registry", "$ r1 = $ r0 get stack trace cleaner provider", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util link list", "specialinvoke $ r2 < init >", "label $ z0 = r0 have more element", "if $ z0 == 0 goto label2", "$ r3 = r0 next element", "$ r2 add $ r3", "goto label1", "if $ z0 == 0 goto label2", "label return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org mockito internal util default mock detail r0", "$ r2 = r3 delegate", "r4 = org mockito internal util default mock detail r0", "$ r1 = r4 to inspect", "$ z0 = $ r2 be mock $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org mockito internal util reflection field initialization report r0", "$ r1 = r2 field instance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r24 = new org mockito internal util reflection accessibility changer", "specialinvoke r24 < init >", "r27 = org mockito internal util reflection field initializer r0", "$ r4 = r27 field", "r24 enable access $ r4", "label r28 = org mockito internal util reflection field initializer r0", "r22 = specialinvoke r28 acquire field instance", "label r29 = org mockito internal util reflection field initializer r0", "$ r5 = r29 field", "r24 safely disable access $ r5", "return r22"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "$ r3 = r0 get class", "$ r4 = $ r3 get declare field", "$ r5 = org mockito internal util reflection field instance field in r0 $ r4", "$ r2 add all $ r5", "$ r6 = new org mockito internal util reflection field $ instance field", "specialinvoke $ r6 < init > r0 $ r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["$ r0 = org mockito internal matcher any any", "r2 = org hamcrest matcher $ r0", "$ r1 = org mockito matcher report matcher r2", "$ z0 = $ r1 return false", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "r3 = new org mockito internal matcher equal", "$ r1 = java lang boolean value of z0", "specialinvoke r3 < init > $ r1", "r4 = org hamcrest matcher r3", "$ r2 = org mockito matcher report matcher r4", "$ z1 = $ r2 return false", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org mockito matcher report matcher r0", "$ b0 = $ r1 return zero", "$ l1 = long $ b0", "return $ l1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["l0 = @ parameter0", "r0 = @ parameter1", "r2 = new org mockito internal stubbing answer answer with delay", "specialinvoke r2 < init > l0 r0", "r3 = org mockito stub answer r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r1 = new org mockito internal matcher instance of", "specialinvoke r1 < init > class \\ `` ljava lang boolean \\", "r2 = org mockito argument matcher r1", "org mockito argument matcher report matcher r2", "return 0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r1 = new org mockito internal matcher instance of", "specialinvoke r1 < init > class \\ `` ljava lang byte \\", "r2 = org mockito argument matcher r1", "org mockito argument matcher report matcher r2", "return 0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "org mockito hamcrest mockito hamcrest report matcher r0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org mockito internal junit exception factory factory", "$ r4 = $ r3 create r0 r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org mockito internal stub invocation container impl r0", "$ r1 = r2 stub", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be use", "if $ z0 ! = 0 goto label1", "$ r1 = r0 get strictness", "$ r2 = org mockito quality strictness lenient", "if $ r1 == $ r2 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ r1 == $ r2 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org mockito mockito time 1", "$ r2 = $ r1 description r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org mockserver client forward chain expectation r0", "$ r3 = r10 expectation", "r9 = new org mockserver model http object callback", "specialinvoke r9 < init >", "r11 = org mockserver client forward chain expectation r0", "r12 = org mockserver mock action expectation callback r1", "$ r4 = specialinvoke r11 register web socket client r12", "$ r5 = r9 with client id $ r4", "$ r3 then respond $ r5", "r13 = org mockserver client forward chain expectation r0", "$ r8 = r13 mock server client", "r14 = org mockserver client forward chain expectation r0", "$ r7 = r14 expectation", "$ r8 send expectation $ r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org mockserver model http request request", "$ r4 = $ r3 with method \\ `` put\\ ``", "r16 = org mockserver client mock server client r0", "$ r5 = specialinvoke r16 calculate path \\ `` bind\\ ``", "$ r6 = $ r4 with path $ r5", "r17 = org mockserver client mock server client r0", "$ r7 = r17 port bind serializer", "$ r8 = org mockserver model port bind port bind r1", "$ r9 = $ r7 serialize $ r8", "$ r10 = java nio charset standard charsets utf_8", "$ r11 = $ r6 with body $ r9 $ r10", "r18 = org mockserver client mock server client r0", "$ r12 = specialinvoke r18 send request $ r11", "r2 = $ r12 get body a string", "r19 = org mockserver client mock server client r0", "$ r13 = r19 port bind serializer", "$ r14 = $ r13 deserialize r2", "$ r15 = $ r14 get port", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org mockserver client mock server event bus get instance", "$ r2 = org mockserver client mock server event bus $ event type stop", "$ r1 publish $ r2", "label $ r3 = org mockserver model http request request", "$ r4 = $ r3 with method \\ `` put\\ ``", "r33 = org mockserver client mock server client r0", "$ r5 = specialinvoke r33 calculate path \\ `` stop\\ ``", "$ r6 = $ r4 with path $ r5", "r34 = org mockserver client mock server client r0", "specialinvoke r34 send request $ r6", "r35 = org mockserver client mock server client r0", "$ z1 = r35 be run", "if $ z1 == 0 goto label3", "i0 = 0", "label r36 = org mockserver client mock server client r0", "$ z2 = r36 be run", "if $ z2 == 0 goto label3", "if i0 > = 50 goto label3", "$ r13 = java util concurrent time unit milliseconds", "$ r13 sleep 5l", "i0 = i0 + 1", "goto label2", "if i0 > = 50 goto label3", "label goto label6", "label r39 = org mockserver client mock server client r0", "$ r30 = r39 event loop group", "$ z3 = $ r30 be shut down", "if $ z3 ! = 0 goto label7", "r40 = org mockserver client mock server client r0", "$ r11 = r40 event loop group", "$ r11 shutdown gracefully", "label r41 = org mockserver client mock server client r0", "$ r8 = r41 client class", "$ r9 = $ r8 cast r0", "$ r10 = org mockserver client mock server client $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = lengthof r1", "if $ i0 == 0 goto label1", "$ r4 = r1 [ 0 ]", "if $ r4 ! = null goto label2", "label r20 = new java lang illegal argument exception", "specialinvoke r20 < init > \\ `` verify http request require a non null non empty array of http request objects\\ ``", "throw r20", "if $ r4 ! = null goto label2", "label r21 = new org mockserver verify verification sequence", "specialinvoke r21 < init >", "r2 = r21 with request r1", "$ r6 = org mockserver model http request request", "$ r7 = $ r6 with method \\ `` put\\ ``", "r23 = org mockserver client mock server client r0", "$ r8 = specialinvoke r23 calculate path \\ `` verify sequence\\ ``", "$ r9 = $ r7 with path $ r8", "r24 = org mockserver client mock server client r0", "$ r10 = r24 verification sequence serializer", "$ r11 = $ r10 serialize r2", "$ r12 = java nio charset standard charsets utf_8", "$ r13 = $ r9 with body $ r11 $ r12", "r25 = org mockserver client mock server client r0", "$ r14 = specialinvoke r25 send request $ r13", "r3 = $ r14 get body a string", "if r3 == null goto label3", "$ z0 = r3 be empty", "if $ z0 ! = 0 goto label3", "r22 = new java lang assertion error", "specialinvoke r22 < init > r3", "throw r22", "if $ z0 ! = 0 goto label3", "label r26 = org mockserver client mock server client r0", "$ r15 = r26 client class", "$ r16 = $ r15 cast r0", "$ r17 = org mockserver client mock server client $ r16", "return $ r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mockserver model action r0", "r2 delay = r1", "r3 = org mockserver model action r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org mockserver model http override forward request", "specialinvoke $ r1 < init >", "$ r2 = $ r1 with http request r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org mockserver model http request r0", "$ r2 = r3 with body r1", "r4 = org mockserver model http object $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org mockserver model http request r0", "$ r2 = r3 header", "$ z0 = $ r2 contain entry r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org mockserver model http request r0", "$ r2 = r3 with cooky r1", "r4 = org mockserver model http object $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org mockserver model http template", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java util locale get default", "r3 = com github fge msgsimple bundle message bundle r0", "r3 check argument z0 $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = io smallrye mutiny helper parameter validation non null r1 \\ `` executor\\ ``", "$ r3 = java util concurrent schedule executor service $ r2", "r4 = io smallrye mutiny group uni on item delay r0", "r4 executor = $ r3", "r5 = io smallrye mutiny group uni on item delay r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new io smallrye mutiny group uni on timeout", "r8 = io smallrye mutiny group uni on timeout r0", "$ r3 = r8 failure", "r9 = io smallrye mutiny group uni on timeout r0", "$ r4 = r9 timeout", "$ r5 = io smallrye mutiny helper parameter validation non null r1 \\ `` executor\\ ``", "$ r6 = java util concurrent schedule executor service $ r5", "specialinvoke r7 < init > $ r3 $ r4 $ r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = io smallrye mutiny helper queue spsc link array queue r0", "l5 = specialinvoke r1 lv consumer index", "label l0 = l5", "r2 = io smallrye mutiny helper queue spsc link array queue r0", "l1 = specialinvoke r2 lv producer index", "r3 = io smallrye mutiny helper queue spsc link array queue r0", "l5 = specialinvoke r3 lv consumer index", "$ b2 = l0 cmp l5", "if $ b2 ! = 0 goto label2", "$ l3 = l1 - l5", "$ i4 = int $ l3", "return $ i4", "if $ b2 ! = 0 goto label2", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r8 = org mvel2 asm class visitor r0", "$ r5 = r8 cv", "if $ r5 == null goto label1", "r9 = org mvel2 asm class visitor r0", "$ r6 = r9 cv", "$ r7 = $ r6 visit method i0 r1 r2 r3 r4", "return $ r7", "if $ r5 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r6 = org mvel2 asm class writer r0", "$ r5 = r6 new invoke dynamic item r1 r2 r3 r4", "$ i0 = $ r5 index", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org mvel2 asm method visitor r0", "$ r2 = r4 mv", "if $ r2 == null goto label1", "r5 = org mvel2 asm method visitor r0", "$ r3 = r5 mv", "$ r3 visit ldc insn r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 262144 goto label17", "r44 = org mvel2 asm tree method node r0", "$ r1 = r44 visible type annotation", "if $ r1 == null goto label01", "r45 = org mvel2 asm tree method node r0", "$ r31 = r45 visible type annotation", "$ i11 = $ r31 size", "if $ i11 < = 0 goto label01", "r35 = new java lang runtime exception", "specialinvoke r35 < init >", "throw r35", "if $ i11 < = 0 goto label01", "label r46 = org mvel2 asm tree method node r0", "$ r2 = r46 invisible type annotation", "if $ r2 == null goto label02", "r47 = org mvel2 asm tree method node r0", "$ r29 = r47 invisible type annotation", "$ i10 = $ r29 size", "if $ i10 < = 0 goto label02", "r36 = new java lang runtime exception", "specialinvoke r36 < init >", "throw r36", "if $ i10 < = 0 goto label02", "label r48 = org mvel2 asm tree method node r0", "$ r3 = r48 try catch block", "if $ r3 ! = null goto label03", "$ i12 = 0", "goto label04", "label i1 = $ i12", "i13 = 0", "label if i13 > = i1 goto label08", "r50 = org mvel2 asm tree method node r0", "$ r21 = r50 try catch block", "$ r22 = $ r21 get i13", "r33 = org mvel2 asm tree try catch block node $ r22", "$ r23 = r33 visible type annotation", "if $ r23 == null goto label06", "$ r27 = r33 visible type annotation", "$ i9 = $ r27 size", "if $ i9 < = 0 goto label06", "r37 = new java lang runtime exception", "specialinvoke r37 < init >", "throw r37", "if $ i9 < = 0 goto label06", "label $ r24 = r33 invisible type annotation", "if $ r24 == null goto label07", "$ r25 = r33 invisible type annotation", "$ i8 = $ r25 size", "if $ i8 < = 0 goto label07", "r38 = new java lang runtime exception", "specialinvoke r38 < init >", "throw r38", "if $ i8 < = 0 goto label07", "label i13 = i13 + 1", "goto label05", "label if i13 > = i1 goto label08", "label i14 = 0", "label r51 = org mvel2 asm tree method node r0", "$ r5 = r51 instruction", "$ i2 = $ r5 size", "if i14 > = $ i2 goto label15", "r52 = org mvel2 asm tree method node r0", "$ r12 = r52 instruction", "r34 = $ r12 get i14", "$ r13 = r34 visible type annotation", "if $ r13 == null goto label10", "$ r19 = r34 visible type annotation", "$ i7 = $ r19 size", "if $ i7 < = 0 goto label10", "r39 = new java lang runtime exception", "specialinvoke r39 < init >", "throw r39", "if $ i7 < = 0 goto label10", "label $ r14 = r34 invisible type annotation", "if $ r14 == null goto label11", "$ r17 = r34 invisible type annotation", "$ i6 = $ r17 size", "if $ i6 < = 0 goto label11", "r40 = new java lang runtime exception", "specialinvoke r40 < init >", "throw r40", "if $ i6 < = 0 goto label11", "label $ z1 = r34 instanceof org mvel2 asm tree method insn node", "if $ z1 == 0 goto label14", "$ r15 = org mvel2 asm tree method insn node r34", "z0 = $ r15 itf", "$ i5 = r34 opcode", "if $ i5 ! = 185 goto label12", "$ z3 = 1", "goto label13", "label if z0 == $ z3 goto label14", "r41 = new java lang runtime exception", "specialinvoke r41 < init >", "throw r41", "label if z0 == $ z3 goto label14", "label i14 = i14 + 1", "goto label09", "if $ i5 ! = 185 goto label12", "label $ z3 = 0", "if i14 > = $ i2 goto label15", "label r53 = org mvel2 asm tree method node r0", "$ r6 = r53 visible local variable annotation", "if $ r6 == null goto label16", "r54 = org mvel2 asm tree method node r0", "$ r10 = r54 visible local variable annotation", "$ i4 = $ r10 size", "if $ i4 < = 0 goto label16", "r42 = new java lang runtime exception", "specialinvoke r42 < init >", "throw r42", "if $ i4 < = 0 goto label16", "label r55 = org mvel2 asm tree method node r0", "$ r7 = r55 invisible local variable annotation", "if $ r7 == null goto label17", "r56 = org mvel2 asm tree method node r0", "$ r8 = r56 invisible local variable annotation", "$ i3 = $ r8 size", "if $ i3 < = 0 goto label17", "r43 = new java lang runtime exception", "specialinvoke r43 < init >", "throw r43", "if $ i3 < = 0 goto label17", "label return", "if $ r3 ! = null goto label03", "label r49 = org mvel2 asm tree method node r0", "$ r4 = r49 try catch block", "$ i12 = $ r4 size"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], [49], [50], [51], [52], [53], [], [55], [56], [], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [], [75], [76], [77], [78], [79], [80], [81], [82], [], [84], [85], [86], [87], [88], [89], [90], [91], [], [93], [94], [95], [], [97], [98], [], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [], [124], [125], [126], [127], [128], []]}
{"nodes": ["r0 = @ this", "r1 = org mvel2 asm type reference r0", "$ i0 = r1 value", "$ i1 = $ i0 & 16776960", "$ i2 = $ i1 > > 8", "$ s3 = short $ i2", "return $ s3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org mvel2 asm type reference r0", "$ i0 = r1 value", "$ i1 = $ i0 & 16711680", "$ i2 = $ i1 > > 16", "return $ i2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ r2 = new java lang runtime exception", "specialinvoke $ r2 < init > \\ `` must be overriden\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "$ r3 = new java lang runtime exception", "specialinvoke $ r3 < init > \\ `` must be overriden\\ ``", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new org mvel2 m v e l interpret runtime", "specialinvoke $ r3 < init > r0 r1", "$ r4 = $ r3 parse", "$ r5 = org mvel2 data conversion convert $ r4 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org mvel2 mvel eval r0", "$ r2 = java lang string value of $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r8 = new org mvel2 integration impl cache map variable resolver factory", "specialinvoke r8 < init > r2", "label r9 = org mvel2 integration variable resolver factory r8", "r4 = org mvel2 mvel _eval file r0 r1 r9", "label r8 externalize", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "label r14 = r0 get method r1 r2", "$ i0 = r14 get modifier", "$ i1 = $ i0 & 8", "if $ i1 ! = 0 goto label2", "$ r3 = new java lang runtime exception", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` method not a static method \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 to string", "specialinvoke $ r3 < init > $ r7", "throw $ r3", "if $ i1 ! = 0 goto label2", "label return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org mvel2 parser context r0", "r1 line count = i0", "return i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = com arjuna common internal util propertyservice bean populator get default instance class \\ `` lcom arjuna at arjuna common core environment bean \\ ``", "$ r1 = com arjuna at arjuna common core environment bean $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com arjuna at arjuna common coordinator environment bean r0", "r1 tx reaper cancel wait period = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label r9 = com arjuna at arjuna common coordinator environment bean r0", "$ r7 = r9 check action factory class name", "if $ r7 == null goto label2", "r10 = com arjuna at arjuna common coordinator environment bean r0", "$ z0 = r10 allow check action factory override", "if $ z0 == 0 goto label4", "label r11 = com arjuna at arjuna common coordinator environment bean r0", "r3 = r11 check action factory", "r12 = com arjuna at arjuna common coordinator environment bean r0", "r12 check action factory = r1", "if r1 ! = null goto label3", "r13 = com arjuna at arjuna common coordinator environment bean r0", "r13 check action factory class name = null", "goto label4", "label exitmonitor r0", "label goto label8", "label return", "if r1 ! = null goto label3", "label if r1 == r3 goto label4", "r4 = com arjuna common internal util classloading utility get name for class r1", "r14 = com arjuna at arjuna common coordinator environment bean r0", "r14 check action factory class name = r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com arjuna at arjuna common core environment bean r0", "r2 var dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com arjuna at arjuna common core environment bean r0", "$ r1 = r2 node identifier", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna at arjuna common object store environment bean r0", "$ i0 = r1 cache store remove item", "if $ i0 > = 0 goto label1", "return 0", "if $ i0 > = 0 goto label1", "label r2 = com arjuna at arjuna common object store environment bean r0", "$ i1 = r2 cache store remove item", "return $ i1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com arjuna at arjuna common object store environment bean r0", "r1 cache store hash = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna at arjuna common object store environment bean r0", "$ i0 = r1 hierarchy retry", "if $ i0 > = 0 goto label1", "return 100", "if $ i0 > = 0 goto label1", "label r2 = com arjuna at arjuna common object store environment bean r0", "$ i1 = r2 hierarchy retry", "return $ i1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna at arjuna common recovery environment bean r0", "$ i0 = r1 recovery backoff period", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna at arjuna common recovery environment bean r0", "$ i0 = r1 transaction status manager port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label if r1 ! = null goto label2", "r10 = new java util array list", "specialinvoke r10 < init >", "r13 = com arjuna at arjuna common recovery environment bean r0", "r13 recovery module = r10", "r11 = new java util array list", "specialinvoke r11 < init >", "r14 = com arjuna at arjuna common recovery environment bean r0", "r14 recovery module class name = r11", "goto label3", "label exitmonitor r0", "label goto label7", "label return", "label if r1 ! = null goto label2", "label r15 = com arjuna at arjuna common recovery environment bean r0", "$ r5 = r15 recovery module class name", "$ z0 = r1 equal $ r5", "if $ z0 ! = 0 goto label3", "r16 = com arjuna at arjuna common recovery environment bean r0", "r16 recovery module = null", "r12 = new java util array list", "specialinvoke r12 < init > r1", "r17 = com arjuna at arjuna common recovery environment bean r0", "r17 recovery module class name = r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0", "r1 file size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0", "r1 pool size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0", "$ i0 = r1 compact min file", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0", "$ r1 = r2 file prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0", "$ r1 = r2 file extension", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0", "r2 store dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com arjuna ats internal arjuna objectstore slot slot store environment bean r0", "r1 sync delete = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = com arjuna ats internal arjuna recovery transaction status manager item _type name", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com arjuna ats internal jta transaction arjunacore jca subordinate xid imple r0", "$ r2 = r4 _the xid", "$ i0 = $ r2 format i d", "if $ i0 == 131077 goto label1", "$ z1 = specialinvoke r0 equal r1", "return $ z1", "if $ i0 == 131077 goto label1", "label z2 = 0", "$ z0 = r1 instanceof com arjuna ats internal jta transaction arjunacore jca subordinate xid imple", "if $ z0 == 0 goto label2", "$ r3 = com arjuna ats internal jta transaction arjunacore jca subordinate xid imple r1", "r5 = com arjuna ats internal jta transaction arjunacore jca subordinate xid imple r0", "r6 = javax transaction xa xid $ r3", "z2 = r5 be same transaction r6", "label return z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java util hashtable", "specialinvoke r5 < init >", "r6 = com arjuna at jdbc common j d b c environment bean r0", "r6 jndi property = r5", "goto label2", "label return", "if r1 ! = null goto label1", "label $ r2 = r1 clone", "$ r3 = java util hashtable $ r2", "r7 = com arjuna at jdbc common j d b c environment bean r0", "r7 jndi property = $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com arjuna at jta common j t a environment bean r0", "r1 support subtransactions = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "entermonitor r0", "label r7 = new java util array list", "r8 = com arjuna at jta common j t a environment bean r0", "$ r5 = r8 xa resource orphan filter class name", "specialinvoke r7 < init > $ r5", "exitmonitor r0", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = com arjuna at jta common j t a environment bean r0", "$ z0 = r1 xa rollback optimization", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com arjuna at jta common j t a environment bean r0", "r2 transaction manager j n d i context = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com arjuna at jta common j t a environment bean r0", "$ r1 = r2 transaction synchronization registry j n d i context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label if r1 ! = null goto label2", "r11 = com arjuna at jta common j t a environment bean r0", "r11 xa resource map = null", "r9 = new java util array list", "specialinvoke r9 < init >", "r12 = com arjuna at jta common j t a environment bean r0", "r12 xa resource map class name = r9", "goto label3", "label exitmonitor r0", "label goto label7", "label return", "label if r1 ! = null goto label2", "label r13 = com arjuna at jta common j t a environment bean r0", "$ r5 = r13 xa resource map class name", "$ z0 = r1 equal $ r5", "if $ z0 ! = 0 goto label3", "r14 = com arjuna at jta common j t a environment bean r0", "r14 xa resource map = null", "r10 = new java util array list", "specialinvoke r10 < init > r1", "r15 = com arjuna at jta common j t a environment bean r0", "r15 xa resource map class name = r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label r8 = com arjuna at jta common j t a environment bean r0", "r3 = r8 last resource optimisation interface", "r9 = com arjuna at jta common j t a environment bean r0", "r9 last resource optimisation interface = r1", "if r1 ! = null goto label2", "r10 = com arjuna at jta common j t a environment bean r0", "r10 last resource optimisation interface class name = null", "goto label3", "label exitmonitor r0", "label goto label7", "label return", "if r1 ! = null goto label2", "label if r1 == r3 goto label3", "r4 = com arjuna common internal util classloading utility get name for class r1", "r11 = com arjuna at jta common j t a environment bean r0", "r11 last resource optimisation interface class name = r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "entermonitor r0", "label r7 = new java util array list", "r8 = com arjuna at jta common j t a environment bean r0", "$ r5 = r8 commit markable resource j n d i name", "specialinvoke r7 < init > $ r5", "exitmonitor r0", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label if r1 ! = null goto label2", "r9 = new java util array list", "specialinvoke r9 < init >", "r11 = com arjuna at jta common j t a environment bean r0", "r11 commit markable resource j n d i name = r9", "goto label3", "label exitmonitor r0", "label goto label7", "label return", "label if r1 ! = null goto label2", "label r12 = com arjuna at jta common j t a environment bean r0", "$ r5 = r12 commit markable resource j n d i name", "$ z0 = r1 equal $ r5", "if $ z0 ! = 0 goto label3", "r10 = new java util array list", "specialinvoke r10 < init > r1", "r13 = com arjuna at jta common j t a environment bean r0", "r13 commit markable resource j n d i name = r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com arjuna at jta common j t a environment bean r0", "r1 notify commit markable resource recovery module of complete branch = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "com arjuna at jta utils j n d i manager bind j t a transaction manager implementation r0", "com arjuna at jta utils j n d i manager bind j t a user transaction implementation r0", "com arjuna at jta utils j n d i manager bind j t a transaction synchronization registry implementation r0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "$ r5 = r3 to lower case", "$ z0 = $ r5 equal \\ `` entry\\ ``", "if $ z0 == 0 goto label1", "$ i0 = r4 get length", "if $ i0 < = 0 goto label1", "r10 = com arjuna common util propertyservice sax handler r0", "$ r6 = specialinvoke r10 get attribute value \\ `` key\\", "r11 = com arjuna common util propertyservice sax handler r0", "r11 current key = $ r6", "r12 = com arjuna common util propertyservice sax handler r0", "$ r7 = r12 current key", "if $ r7 == null goto label1", "r13 = com arjuna common util propertyservice sax handler r0", "r13 be entry = 1", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "r14 = com arjuna common util propertyservice sax handler r0", "r14 current buffer = r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com arjuna common util propertyservice string property replacer replace property r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r13 = org jboss narayana jta jms connection manager r0", "$ z0 = r13 be connect", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r14 = org jboss narayana jta jms connection manager r0", "$ r3 = specialinvoke r14 create x a connection", "r15 = org jboss narayana jta jms connection manager r0", "r15 connection = $ r3", "r16 = org jboss narayana jta jms connection manager r0", "$ r4 = r16 connection", "$ r5 = $ r4 create x a session", "r17 = org jboss narayana jta jms connection manager r0", "r17 session = $ r5", "label goto label8", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r15 = org jboss narayana jta jms connection proxy r0", "$ r2 = r15 transaction helper", "$ z0 = $ r2 be transaction available", "if $ z0 == 0 goto label2", "r13 = new org jboss narayana jta jms connection close synchronization", "r16 = org jboss narayana jta jms connection proxy r0", "$ r5 = r16 xa connection", "r17 = javax jms connection $ r5", "specialinvoke r13 < init > r17", "r18 = org jboss narayana jta jms connection proxy r0", "$ r6 = r18 transaction helper", "r19 = javax transaction synchronization r13", "$ r6 register synchronization r19", "$ r7 = com arjuna at jta log jta logger logger", "$ z1 = $ r7 be trace enabled", "if $ z1 == 0 goto label1", "$ r9 = com arjuna at jta log jta logger logger", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r10 = r14 append \\ `` registered synchronization to close the connection \\ ``", "$ r11 = $ r10 append r13", "$ r12 = $ r11 to string", "$ r9 trace $ r12", "label goto label3", "label return", "if $ z0 == 0 goto label2", "label r20 = org jboss narayana jta jms connection proxy r0", "$ r3 = r20 xa connection", "$ r3 close"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jboss narayana jta jms jms x a resource recovery helper r0", "$ r2 = r4 connection manager", "$ r3 = jms x a resource recovery helper $ lambda_rollback_5__5 bootstrap $ r1", "$ r2 connect and accept $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r2 = com arjuna at jta log jta logger logger", "$ z0 = $ r2 be trace enabled", "if $ z0 == 0 goto label1", "$ r5 = com arjuna at jta log jta logger logger", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r6 = r14 append \\ `` close session \\ ``", "r15 = org jboss narayana jta jms session close synchronization r0", "$ r7 = r15 session", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "$ r5 trace $ r9", "label r16 = org jboss narayana jta jms session close synchronization r0", "$ r3 = r16 session", "$ r3 close", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "$ r1 = com arjuna at jta transaction manager transaction manager", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org cyberneko html filter default filter r0", "$ r2 = r4 f document handler", "if $ r2 == null goto label1", "r5 = org cyberneko html filter default filter r0", "$ r3 = r5 f document handler", "$ r3 start c d a t a r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org cyberneko html filter default filter r0", "$ r2 = r4 f document handler", "if $ r2 == null goto label1", "r5 = org cyberneko html filter default filter r0", "$ r3 = r5 f document handler", "$ r3 end c d a t a r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org cyberneko html filter writer r0", "$ r2 = r7 f printer", "$ r2 print \\ `` < \\ ``", "r8 = org cyberneko html filter writer r0", "$ r4 = r8 f printer", "$ r3 = r1 rawname", "$ r4 print $ r3", "r9 = org cyberneko html filter writer r0", "$ r5 = r9 f printer", "$ r5 print 62", "r10 = org cyberneko html filter writer r0", "$ r6 = r10 f printer", "$ r6 flush", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org cyberneko html h t m l configuration r0", "$ r2 = r3 f document scanner", "$ r2 evaluate input source r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org cyberneko html h t m l entity entities", "$ r3 = $ r2 get r0", "r1 = java lang string $ r3", "if r1 == null goto label1", "$ i0 = r1 char at 0", "goto label2", "label return $ i0", "if r1 == null goto label1", "label $ i0 = -1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org cyberneko html h t m l entity entities", "$ r3 = $ r2 get r0", "r1 = java lang string $ r3", "if r1 == null goto label1", "$ i0 = r1 char at 0", "goto label2", "label return $ i0", "if r1 == null goto label1", "label $ i0 = -1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "d0 = @ parameter1", "$ l1 = java lang double double to raw long bit d0", "r2 = io netty buffer byte buf r0", "$ r1 = r2 set long l e i0 $ l1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io netty buffer byte buf output stream r0", "$ r1 = r2 buffer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ i0 = io netty buffer pooled byte buf allocator default_normal_cache_size", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = io netty buffer pooled byte buf allocator r0", "$ r1 = r2 heap arena metric", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io netty buffer pooled byte buf allocator r0", "$ r1 = r2 direct arena metric", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i2 = @ parameter1", "label $ i1 = i2", "i2 = i2 + -1", "if $ i1 < = 0 goto label2", "r1 = io netty handler codec compression crc32 r0", "r1 update c r c i0", "goto label1", "if $ i1 < = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io netty handler codec http cookie client cookie encoder lax", "r3 = io netty handler codec http cookie cookie r0", "$ r2 = $ r1 encode r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec http cors cors config r0", "$ r1 = r2 origins", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec http cors cors config r0", "$ z0 = r1 allow credential", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = io netty handler codec http cors cors config r0", "$ r1 = r3 allow request header", "$ r2 = java util collection unmodifiable set $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec http cors cors config builder r0", "r1 enable = 0", "r2 = io netty handler codec http cors cors config builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io netty handler codec http cors cors config builder r0", "$ r2 = r4 request method", "$ r3 = java util array a list r1", "$ r2 add all $ r3", "r5 = io netty handler codec http cors cors config builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r6 = io netty handler codec http cors cors config builder r0", "$ r4 = r6 request header", "$ r5 = r3 to string", "$ r4 add $ r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r7 = io netty handler codec http cors cors config builder r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec http cors cors config builder r0", "r1 short circuit = 1", "r2 = io netty handler codec http cors cors config builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io netty handler codec http http method r0", "$ r1 = r3 name", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 header", "$ r3 = io netty handler codec http http header name content_type", "r5 = java lang char sequence $ r3", "r1 = $ r2 get r5", "if r1 == null goto label1", "$ r4 = io netty handler codec http http util get mime type r1", "return $ r4", "if r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec http multipart http post multipart request decoder r0", "$ i0 = r1 discard threshold", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "$ r4 = r2 get name", "r5 = io netty handler codec http multipart http post request encoder r0", "r5 add body file upload r1 $ r4 r2 r3 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r4 = io netty handler codec http query string decoder r0", "$ i1 = specialinvoke r4 path end idx", "i0 = $ i1 + 1", "r5 = io netty handler codec http query string decoder r0", "$ r1 = r5 uri", "$ i2 = $ r1 length", "if i0 > = $ i2 goto label1", "r6 = io netty handler codec http query string decoder r0", "$ r2 = r6 uri", "$ r3 = $ r2 substring i0", "goto label2", "label return $ r3", "if i0 > = $ i2 goto label1", "label $ r3 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io netty handler codec http http constant default_charset", "$ r2 = io netty handler codec http query string decoder decode component r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec http websocketx web socket server handshaker r0", "$ r1 = r2 decoder config", "$ i0 = $ r1 max frame payload length", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ r1 = r3 encoder enforce max concurrent stream", "if $ r1 == null goto label1", "r4 = io netty handler codec http2 abstract http2 connection handler builder r0", "$ r2 = r4 encoder enforce max concurrent stream", "$ z0 = $ r2 boolean value", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["l0 = @ parameter0", "$ r1 = io netty handler codec http2 http2 error protocol_error", "$ r0 = newarray java lang object [ 1 ]", "$ r2 = java lang long value of l0", "$ r0 [ 0 ] = $ r2", "$ r3 = io netty handler codec http2 http2 exception connection error $ r1 \\ `` header size exceed max allow size % d \\", "r4 = java lang throwable $ r3", "throw r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof io netty handler codec http2 http2 exception $ stream exception", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "s0 = @ parameter1", "if z0 == 0 goto label1", "r1 = io netty handler codec http2 http2 flag r0", "$ s5 = r1 value", "$ s6 = $ s5 | s0", "$ s7 = short $ s6", "r2 = io netty handler codec http2 http2 flag r0", "r2 value = $ s7", "goto label2", "label r5 = io netty handler codec http2 http2 flag r0", "return r5", "if z0 == 0 goto label1", "label r3 = io netty handler codec http2 http2 flag r0", "$ s2 = r3 value", "$ s1 = s0 ^ -1", "$ s3 = $ s2 & $ s1", "$ s4 = short $ s3", "r4 = io netty handler codec http2 http2 flag r0", "r4 value = $ s4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = io netty handler codec http2 http2 flag r0", "$ s1 = r1 value", "$ s2 = $ s1 & s0", "if $ s2 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ s2 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = io netty util ascii string r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "i12 = @ parameter1", "r1 = @ parameter2", "i13 = @ parameter3", "i0 = @ parameter4", "if z0 ! = 0 goto label1", "r4 = io netty util ascii string r0", "$ z2 = r4 region match i12 r1 i13 i0", "return $ z2", "if z0 ! = 0 goto label1", "label io netty util internal object util check not null r1 \\ `` string\\ ``", "r5 = io netty util ascii string r0", "i1 = r5 length", "if i12 < 0 goto label2", "$ i3 = i1 - i12", "if i0 < = $ i3 goto label3", "label return 0", "if i0 < = $ i3 goto label3", "label if i13 < 0 goto label4", "$ i4 = r1 length", "$ i5 = $ i4 - i13", "if i0 < = $ i5 goto label5", "label return 0", "if i0 < = $ i5 goto label5", "label r6 = io netty util ascii string r0", "$ i6 = r6 array offset", "i14 = i12 + $ i6", "i2 = i14 + i0", "label if i14 > = i2 goto label7", "r7 = io netty util ascii string r0", "$ r3 = r7 value", "$ i7 = i14", "i14 = i14 + 1", "$ b8 = $ r3 [ $ i7 ]", "$ c9 = io netty util ascii string b2c $ b8", "$ i10 = i13", "i13 = i13 + 1", "$ c11 = r1 char at $ i10", "$ z1 = io netty util ascii string equal ignore case $ c9 $ c11", "if $ z1 ! = 0 goto label6", "return 0", "label if i14 > = i2 goto label7", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r9 = new net bytebuddy description type type variable token", "$ r3 = r0 get symbol", "$ r4 = r0 get upper bound", "r8 = new net bytebuddy description type type description $ generic $ visitor $ substitutor $ for detachment", "specialinvoke r8 < init > r1", "r10 = net bytebuddy description type type description $ generic $ visitor r8", "$ r6 = $ r4 accept r10", "$ r7 = r0 get declare annotation", "r11 = java util list $ r6", "r12 = java util list $ r7", "specialinvoke r9 < init > $ r3 r11 r12", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new net bytebuddy implementation invoke dynamic", "r9 = net bytebuddy implementation invoke dynamic r0", "$ r7 = r9 bootstrap method", "r10 = net bytebuddy implementation invoke dynamic r0", "$ r6 = r10 handle argument", "r11 = net bytebuddy implementation invoke dynamic r0", "$ r5 = r11 invocation provider", "r12 = net bytebuddy implementation invoke dynamic r0", "$ r4 = r12 termination handler", "specialinvoke r8 < init > $ r7 $ r6 $ r5 $ r4 r1 r2", "r13 = net bytebuddy implementation implementation $ composable r8", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = new net bytebuddy implementation method call", "r10 = net bytebuddy implementation method call r0", "$ r8 = r10 method locator", "r11 = net bytebuddy implementation method call r0", "$ r7 = r11 target handler", "r12 = net bytebuddy implementation method call r0", "$ r6 = r12 argument loader", "r13 = net bytebuddy implementation method call r0", "$ r5 = r13 method invoker", "r14 = net bytebuddy implementation method call r0", "$ r4 = r14 termination handler", "specialinvoke r9 < init > $ r8 $ r7 $ r6 $ r5 $ r4 r1 r2", "r15 = net bytebuddy implementation implementation $ composable r9", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org apache common collections4 queue predicate queue", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = r1 get method", "if i0 ! = -1 goto label1", "r11 = new java lang illegal argument exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r7 = r10 append \\ `` method must be set on zip archive entry \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if i0 ! = -1 goto label1", "label r3 = org apache common compress archivers zip zip archive entry request create zip archive entry request r1 r2", "r12 = new org apache common compress archivers zip parallel scatter zip creator $ 2", "r13 = org apache common compress archivers zip parallel scatter zip creator r0", "specialinvoke r12 < init > r13 r3", "r14 = java util concurrent callable r12", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common math3 fit leastsquares least square builder r0", "r2 param validator = r1", "r3 = org apache common math3 fit leastsquares least square builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org apache common math3 fit simple curve fitter", "specialinvoke $ r2 < init > r0 r1 2147483647", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache common math3 geometry vector r1", "$ d0 = r0 distance r2", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = new org apache common math3 geometry euclidean threed field vector3 d", "r16 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r4 = r16 x", "$ r3 = r1 x", "$ r5 = $ r4 add $ r3", "$ r8 = org apache common math3 real field element $ r5", "r17 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r7 = r17 y", "$ r6 = r1 y", "$ r9 = $ r7 add $ r6", "$ r12 = org apache common math3 real field element $ r9", "r18 = org apache common math3 geometry euclidean threed field vector3 d r0", "$ r11 = r18 z", "$ r10 = r1 z", "$ r13 = $ r11 add $ r10", "$ r14 = org apache common math3 real field element $ r13", "specialinvoke r15 < init > $ r8 $ r12 $ r14", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 cross product r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache common math3 geometry euclidean threed polyhedron set r0", "$ r3 = r5 get tree 1", "r6 = org apache common math3 geometry euclidean threed polyhedron set r0", "$ r4 = specialinvoke r6 recurse first intersection $ r3 r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache common math3 ode nonstiff runge kutta field step interpolator r0", "$ r4 = r8 field", "r9 = org apache common math3 ode nonstiff runge kutta field step interpolator r0", "$ r2 = r9 y dot k", "$ r3 = $ r2 [ 0 ]", "$ i0 = lengthof $ r3", "$ r5 = org apache common math3 util math array build array $ r4 $ i0", "$ r6 = org apache common math3 real field element [ ] $ r5", "r10 = org apache common math3 ode nonstiff runge kutta field step interpolator r0", "$ r7 = specialinvoke r10 combine $ r6 r1", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r13 = org apache deltaspike core util metadata builder annotate type builder r0", "$ r3 = r13 method", "$ r4 = $ r3 get r1", "if $ r4 ! = null goto label1", "r14 = org apache deltaspike core util metadata builder annotate type builder r0", "$ r10 = r14 method", "r12 = new org apache deltaspike core util metadata builder annotation builder", "specialinvoke r12 < init >", "$ r10 put r1 r12", "label r15 = org apache deltaspike core util metadata builder annotate type builder r0", "$ r5 = r15 method", "$ r6 = $ r5 get r1", "$ r7 = org apache deltaspike core util metadata builder annotation builder $ r6", "$ r7 add r2", "r16 = org apache deltaspike core util metadata builder annotate type builder r0", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = microsoft exchange webservices data autodiscover configuration outlook outlook account r0", "r2 response type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new microsoft exchange webservices data autodiscover web client url", "specialinvoke $ r2 < init >", "label r0 read", "$ r3 = r0 get node type", "$ i0 = $ r3 get node type", "if $ i0 ! = 1 goto label3", "$ r4 = r0 get local name", "$ z0 = $ r4 equal \\ `` authentication methods\\ ``", "if $ z0 == 0 goto label2", "$ r8 = r0 read element value class \\ `` ljava lang string \\ ``", "$ r9 = java lang string $ r8", "$ r2 set authentication method $ r9", "goto label3", "label $ r10 = microsoft exchange webservices data core enumeration misc xml namespace autodiscover", "$ z2 = r0 be end element $ r10 \\ `` web client url\\ ``", "if $ z2 == 0 goto label1", "return $ r2", "if $ z0 == 0 goto label2", "label $ r5 = r0 get local name", "$ z1 = $ r5 equal \\ `` url\\ ``", "if $ z1 == 0 goto label3", "$ r6 = r0 read element value class \\ `` ljava lang string \\ ``", "$ r7 = java lang string $ r6", "$ r2 set url $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 have attribute", "microsoft exchange webservices data core ew utility ews assert $ z0 \\ `` exchange server version parse\\", "$ r2 = new microsoft exchange webservices data core exchange server info", "specialinvoke $ r2 < init >", "$ r3 = r0 read attribute value class \\ `` ljava lang integer \\", "$ r4 = java lang integer $ r3", "$ i0 = $ r4 int value", "$ r2 major version = $ i0", "$ r5 = r0 read attribute value class \\ `` ljava lang integer \\", "$ r6 = java lang integer $ r5", "$ i1 = $ r6 int value", "$ r2 minor version = $ i1", "$ r7 = r0 read attribute value class \\ `` ljava lang integer \\", "$ r8 = java lang integer $ r7", "$ i2 = $ r8 int value", "$ r2 major build number = $ i2", "$ r9 = r0 read attribute value class \\ `` ljava lang integer \\", "$ r10 = java lang integer $ r9", "$ i3 = $ r10 int value", "$ r2 minor build number = $ i3", "$ r11 = r0 read attribute value \\ `` version\\ ``", "$ r2 version string = $ r11", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = new microsoft exchange webservices data core request move folder request", "$ r6 = microsoft exchange webservices data core enumeration service error service error handle throw on error", "r12 = microsoft exchange webservices data core exchange service r0", "specialinvoke r11 < init > r12 $ r6", "r11 set destination folder id r2", "$ r7 = r11 get folder id", "$ r7 add r1", "r4 = r11 execute", "$ r8 = r4 get response at index 0", "$ r9 = microsoft exchange webservices data core response move copy folder response $ r8", "$ r10 = $ r9 get folder", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = microsoft exchange webservices data core exchange service r0", "r9 = java util concurrent future r1", "$ r3 = microsoft exchange webservices data misc async request result extract service request r8 r9", "r2 = microsoft exchange webservices data core request sync folder hierarchy request $ r3", "$ r4 = r2 end execute r1", "$ r5 = $ r4 get response at index 0", "$ r6 = microsoft exchange webservices data core response sync folder hierarchy response $ r5", "$ r7 = $ r6 get change", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "microsoft exchange webservices data core ew utility validate param r1 \\ `` id\\ ``", "r10 = new java util array list", "specialinvoke r10 < init >", "r10 add r1", "$ r6 = microsoft exchange webservices data core enumeration service error service error handle throw on error", "r11 = microsoft exchange webservices data core exchange service r0", "r4 = specialinvoke r11 internal convert id r10 r2 $ r6", "$ r7 = r4 get response at index 0", "$ r8 = microsoft exchange webservices data core response convert id response $ r7", "$ r9 = $ r8 get convert id", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "$ z0 = 1", "goto label2", "label microsoft exchange webservices data core ew utility ews assert $ z0 \\ `` exchange service load property for user configuration\\", "r7 = new microsoft exchange webservices data core request get user configuration request", "r8 = microsoft exchange webservices data core exchange service r0", "specialinvoke r7 < init > r8", "r7 set user configuration r1", "r9 = java lang enum r2", "$ r5 = java util enum set of r9", "r7 set property $ r5", "r7 execute", "return", "if r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = microsoft exchange webservices data core property bag r0", "$ r4 = r6 property", "$ z0 = $ r4 contain key r1", "if $ z0 == 0 goto label1", "r7 = microsoft exchange webservices data core property bag r0", "$ r5 = r7 property", "r3 = $ r5 get r1", "r2 set param r3", "return 1", "if $ z0 == 0 goto label1", "label r2 set param null", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = microsoft exchange webservices data core request simple service request base r0", "r12 validate", "r13 = microsoft exchange webservices data core request simple service request base r0", "r2 = r13 build ews http web request", "r9 = new microsoft exchange webservices data misc async executor", "specialinvoke r9 < init >", "r10 = new microsoft exchange webservices data misc callable method", "specialinvoke r10 < init > r2", "r14 = java util concurrent callable r10", "r5 = r9 submit r14 r1", "r9 shutdown", "r11 = new microsoft exchange webservices data misc async request result", "specialinvoke r11 < init > r0 r2 r5 null", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new microsoft exchange webservices data property complex folder id", "specialinvoke $ r2 < init > r1", "$ r3 = microsoft exchange webservices data core property set get first class property", "$ r4 = microsoft exchange webservices data core service folder calendar folder bind r0 $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = r0 bind to item class \\ `` lmicrosoft exchange webservices data core service item post item \\", "$ r4 = microsoft exchange webservices data core service item post item $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = microsoft exchange webservices data notification stream subscription connection r0", "$ r2 = r3 on subscription error", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = microsoft exchange webservices data property complex delegate permission r0", "$ r1 = r5 delegate folder permission", "$ r2 = $ r1 get \\ `` calendar folder permission level\\ ``", "$ r3 = microsoft exchange webservices data property complex delegate permission $ delegate folder permission $ r2", "$ r4 = $ r3 get permission level", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new microsoft exchange webservices data property complex folder id", "specialinvoke r5 < init > r1", "r7 = microsoft exchange webservices data property complex folder id collection r0", "r8 = microsoft exchange webservices data property complex complex property r5", "$ z0 = r7 contain r8", "if $ z0 == 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` the id be already in the list \\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r9 = microsoft exchange webservices data property complex folder id collection r0", "r10 = microsoft exchange webservices data property complex complex property r5", "r9 internal add r10", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = microsoft exchange webservices data property complex recurrence day of the week collection r0", "$ r1 = r4 item", "$ r2 = $ r1 get i0", "$ r3 = microsoft exchange webservices data core enumeration property time day of the week $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 setup recurrence r1", "r3 = microsoft exchange webservices data property complex recurrence range end date recurrence range r0", "$ r2 = r3 end date", "r1 set end date $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = microsoft exchange webservices data property definition extend property definition r0", "$ r1 = r2 property set", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == r1 goto label1", "if r0 == null goto label2", "if r1 == null goto label2", "$ r2 = r0 get uri", "$ r3 = r1 get uri", "$ z0 = $ r2 equal ignore case $ r3", "if $ z0 == 0 goto label2", "$ r5 = r0 index", "$ r4 = r1 index", "$ z1 = $ r5 equal ignore case $ r4", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new gate creole annic apache lucene search hit", "r5 = gate creole annic apache lucene search searcher r0", "specialinvoke r4 < init > r5 r1 r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ i1 = i0 | 4096", "r7 = org codehaus groovy ast class node r0", "r6 = r7 add method r1 $ i1 r2 r3 r4 r5", "r6 set synthetic 1", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "i0 = @ parameter3", "r3 = @ parameter4", "z0 = @ parameter5", "z1 = @ parameter6", "z2 = @ parameter7", "$ r4 = org codehaus groovy vmplugin v7 indy interface select_method", "$ r5 = org codehaus groovy vmplugin v7 indy interface make r0 r1 r2 i0 r3 z0 z1 z2 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = r1 next r0 r2", "$ r4 = org hibernate engine internal versioning log", "$ z0 = $ r4 be trace enabled", "if $ z0 == 0 goto label1", "$ r5 = org hibernate engine internal versioning log", "$ r6 = r2 get factory", "$ r7 = r1 to loggable string r0 $ r6", "$ r8 = r2 get factory", "$ r9 = r1 to loggable string r3 $ r8", "$ r5 tracef \\ `` incrementing % s to % s\\", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new org hibernate engine jdbc env internal lob creator builder impl", "$ z0 = org hibernate engine jdbc env internal lob creator builder impl use contextual lob creation r0 r1 r2", "specialinvoke $ r3 < init > $ z0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = org hibernate loader abstract entity join walker r0", "$ z0 = r4 be join fetch enable in map r2 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "i0 = @ parameter3", "$ r5 = r2 get name parameter", "r12 = org hibernate param positional parameter specification r0", "$ i1 = r12 label", "$ r6 = java lang integer to string $ i1", "$ r7 = $ r5 get $ r6", "r4 = org hibernate engine spi type value $ r7", "$ r8 = r4 get type", "$ r9 = r4 get value", "$ r8 null safe set r1 $ r9 i0 r3", "$ r10 = r4 get type", "$ r11 = r3 get factory", "r13 = org hibernate engine spi map $ r11", "$ i2 = $ r10 get column span r13", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get collection definition", "$ r3 = $ r2 get collection persister", "r1 = org hibernate persister collection queryable collection $ r3", "$ r4 = r0 get source", "$ r5 = r1 get owner entity persister", "$ r6 = org hibernate persister entity outer join loadable $ r5", "$ r7 = r1 get element type", "$ r8 = org hibernate type composite type $ r7", "$ r9 = r1 get table name", "$ r10 = r1 get element column name", "$ r11 = org hibernate persister walk internal composition singular sub attribute helper get singular sub attribute $ r4 $ r6 $ r8 $ r9 $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com fasterxml jackson databind deser bean deserializer base r0", "$ r3 = r4 deserialize from object r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r13 = com fasterxml jackson databind deser bean deserializer base r0", "r3 = specialinvoke r13 _delegate deserializer", "if r3 == null goto label2", "r14 = com fasterxml jackson databind deser bean deserializer base r0", "$ r8 = r14 _value instantiator", "$ z0 = $ r8 can create from boolean", "if $ z0 ! = 0 goto label2", "r15 = com fasterxml jackson databind deser bean deserializer base r0", "$ r9 = r15 _value instantiator", "$ r10 = r3 deserialize r1 r2", "r12 = $ r9 create use delegate r2 $ r10", "r16 = com fasterxml jackson databind deser bean deserializer base r0", "$ r11 = r16 _injectables", "if $ r11 == null goto label1", "r17 = com fasterxml jackson databind deser bean deserializer base r0", "r17 inject value r2 r12", "label return r12", "if $ z0 ! = 0 goto label2", "label $ r4 = r1 get current token", "$ r5 = com fasterxml jackson core json token value_true", "if $ r4 ! = $ r5 goto label3", "$ z1 = 1", "goto label4", "label r18 = com fasterxml jackson databind deser bean deserializer base r0", "$ r6 = r18 _value instantiator", "$ r7 = $ r6 create from boolean r2 $ z1", "return $ r7", "if $ r4 ! = $ r5 goto label3", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get raw class", "$ z0 = r2 be primitive", "if $ z0 == 0 goto label3", "$ r4 = java lang boolean type", "if r2 ! = $ r4 goto label1", "$ r9 = com fasterxml jackson databind introspect basic class introspector boolean_desc", "return $ r9", "if r2 ! = $ r4 goto label1", "label $ r5 = java lang integer type", "if r2 ! = $ r5 goto label2", "$ r8 = com fasterxml jackson databind introspect basic class introspector int_desc", "return $ r8", "if r2 ! = $ r5 goto label2", "label $ r6 = java lang long type", "if r2 ! = $ r6 goto label4", "$ r7 = com fasterxml jackson databind introspect basic class introspector long_desc", "return $ r7", "if r2 ! = $ r6 goto label4", "label return null", "if $ z0 == 0 goto label3", "label if r2 ! = class \\ `` ljava lang string \\ `` goto label4", "$ r3 = com fasterxml jackson databind introspect basic class introspector string_desc", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com fasterxml jackson databind ser container serializer r0", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = com fasterxml jackson databind ser std std delegate serializer r0", "r5 = r7 convert value r1", "r8 = com fasterxml jackson databind ser std std delegate serializer r0", "r6 = r8 _delegate serializer", "if r6 ! = null goto label1", "r9 = com fasterxml jackson databind ser std std delegate serializer r0", "r6 = r9 _find serializer r1 r3", "label r6 serialize with type r5 r2 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = r2 get upper bound", "$ r5 = $ r4 [ 0 ]", "r7 = com fasterxml jackson databind type type factory r0", "$ r6 = r7 _from any r1 $ r5 r3", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com fasterxml jackson databind ser basic serializer factory r0", "$ r2 = r5 _factory config", "$ r3 = $ r2 with serializer modifier r1", "r6 = com fasterxml jackson databind ser basic serializer factory r0", "$ r4 = r6 with config $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com fasterxml jackson databind ser std token buffer serializer r0", "$ r3 = r4 create schema node \\ `` any\\", "r5 = com fasterxml jackson databind json node $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new com github javaparser ast body annotation declaration", "$ r5 = com github javaparser ast modifier create modifier list r2", "specialinvoke r7 < init > $ r5 r1", "r8 = com github javaparser ast compilation unit r0", "$ r6 = r8 get type", "r9 = com github javaparser ast node r7", "$ r6 add r9", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com github javaparser printer configuration pretty printer configuration r0", "$ r3 = r7 get indentation", "$ r4 = com github javaparser utils utils assert not null r1", "$ r5 = com github javaparser printer configuration indentation $ indent type $ r4", "r2 = $ r3 set type $ r5", "r8 = com github javaparser printer configuration pretty printer configuration r0", "r8 set indentation r2", "r9 = com github javaparser printer configuration pretty printer configuration r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = new com github javaparser printer configuration default configuration option", "$ r2 = com github javaparser printer configuration default printer configuration $ config option max_enum_constants_to_align_horizontally", "$ r3 = java lang integer value of i0", "specialinvoke r5 < init > $ r2 $ r3", "r6 = com github javaparser printer configuration pretty printer configuration r0", "r7 = com github javaparser printer configuration configuration option r5", "r6 add option r7", "r8 = com github javaparser printer configuration pretty printer configuration r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1", "z2 = 0", "label r2 = com github javaparser symbolsolver javaparser navigator demand parent node r2", "$ z3 = r2 instanceof com github javaparser ast body body declaration", "if $ z3 == 0 goto label3", "$ z1 = r2 instanceof com github javaparser ast body type declaration", "if $ z1 == 0 goto label2", "return r2", "if $ z1 == 0 goto label2", "label z2 = 1", "goto label1", "if $ z3 == 0 goto label3", "label $ z0 = r2 instanceof com github javaparser ast expr object creation expr", "if $ z0 == 0 goto label1", "if z2 == 0 goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = r1", "z3 = 0", "label r7 = com github javaparser symbolsolver javaparser navigator demand parent node r7", "$ z4 = r7 instanceof com github javaparser ast body body declaration", "if $ z4 == 0 goto label3", "$ z1 = r7 instanceof com github javaparser ast body type declaration", "if $ z1 == 0 goto label2", "$ r3 = com github javaparser ast body type declaration r7", "$ r4 = $ r3 get fully qualify name", "$ r5 = $ r4 get", "$ r6 = java lang string $ r5", "$ z2 = $ r6 end with r2", "if $ z2 == 0 goto label2", "return r7", "if $ z2 == 0 goto label2", "label z3 = 1", "goto label1", "if $ z4 == 0 goto label3", "label $ z0 = r7 instanceof com github javaparser ast expr object creation expr", "if $ z0 == 0 goto label1", "if z3 == 0 goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 instanceof com github javaparser symbolsolver javaparsermodel declaration java parser class declaration", "if $ z0 == 0 goto label1", "$ r25 = com github javaparser symbolsolver javaparsermodel declaration java parser class declaration r1", "r27 = $ r25 get context", "$ r26 = r27 solve symbol r2", "return $ r26", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof com github javaparser symbolsolver javaparsermodel declaration java parser interface declaration", "if $ z1 == 0 goto label2", "$ r23 = com github javaparser symbolsolver javaparsermodel declaration java parser interface declaration r1", "r28 = $ r23 get context", "$ r24 = r28 solve symbol r2", "return $ r24", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof com github javaparser symbolsolver javaparsermodel declaration java parser enum declaration", "if $ z2 == 0 goto label3", "$ r21 = com github javaparser symbolsolver javaparsermodel declaration java parser enum declaration r1", "r29 = $ r21 get context", "$ r22 = r29 solve symbol r2", "return $ r22", "if $ z2 == 0 goto label3", "label $ z3 = r1 instanceof com github javaparser symbolsolver reflectionmodel reflection class declaration", "if $ z3 == 0 goto label4", "$ r19 = com github javaparser symbolsolver reflectionmodel reflection class declaration r1", "r31 = com github javaparser symbolsolver resolution symbol solver r0", "$ r18 = r31 type solver", "$ r20 = $ r19 solve symbol r2 $ r18", "return $ r20", "if $ z3 == 0 goto label4", "label $ z4 = r1 instanceof com github javaparser symbolsolver reflectionmodel reflection interface declaration", "if $ z4 == 0 goto label5", "$ r16 = com github javaparser symbolsolver reflectionmodel reflection interface declaration r1", "r32 = com github javaparser symbolsolver resolution symbol solver r0", "$ r15 = r32 type solver", "$ r17 = $ r16 solve symbol r2 $ r15", "return $ r17", "if $ z4 == 0 goto label5", "label $ z5 = r1 instanceof com github javaparser symbolsolver reflectionmodel reflection enum declaration", "if $ z5 == 0 goto label6", "$ r13 = com github javaparser symbolsolver reflectionmodel reflection enum declaration r1", "r30 = $ r13 get enum constant r2", "r33 = com github javaparser resolution declaration resolve declaration r30", "$ r14 = com github javaparser symbolsolver model resolution symbol reference solve r33", "return $ r14", "if $ z5 == 0 goto label6", "label $ z6 = r1 instanceof com github javaparser symbolsolver javassistmodel javassist class declaration", "if $ z6 == 0 goto label7", "$ r11 = com github javaparser symbolsolver javassistmodel javassist class declaration r1", "r34 = com github javaparser symbolsolver resolution symbol solver r0", "$ r10 = r34 type solver", "$ r12 = $ r11 solve symbol r2 $ r10", "return $ r12", "if $ z6 == 0 goto label7", "label $ z7 = r1 instanceof com github javaparser symbolsolver javassistmodel javassist enum declaration", "if $ z7 == 0 goto label8", "$ r8 = com github javaparser symbolsolver javassistmodel javassist enum declaration r1", "r35 = com github javaparser symbolsolver resolution symbol solver r0", "$ r7 = r35 type solver", "$ r9 = $ r8 solve symbol r2 $ r7", "return $ r9", "if $ z7 == 0 goto label8", "label $ z8 = r1 instanceof com github javaparser symbolsolver javassistmodel javassist interface declaration", "if $ z8 == 0 goto label9", "$ r5 = com github javaparser symbolsolver javassistmodel javassist interface declaration r1", "r36 = com github javaparser symbolsolver resolution symbol solver r0", "$ r4 = r36 type solver", "$ r6 = $ r5 solve symbol r2 $ r4", "return $ r6", "if $ z8 == 0 goto label9", "label $ r3 = com github javaparser symbolsolver model resolution symbol reference unsolved class \\ `` lcom github javaparser resolution declaration resolve value declaration \\ ``", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [62], [], [64], [65], [66], [67], [68], [69], [70], [], [72], [73], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 path \\ `` id\\ ``", "$ r3 = com github fge jsonschema core load configuration load configuration builder bundle", "$ z0 = r2 be textual", "$ r3 check argument $ z0 \\ `` load cfg no i d in schema\\ ``", "$ r4 = r2 text value", "r6 = com github fge jsonschema core load configuration load configuration builder r0", "$ r5 = r6 preload schema $ r4 r1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache log log4j core config builder impl default configuration builder r0", "r2 source = r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse aether default repository system session r0", "specialinvoke r2 fail if read only", "r3 = org eclipse aether default repository system session r0", "r3 dependency graph transformer = r1", "r4 = org eclipse aether default repository system session r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 get proxy", "if r2 == null goto label1", "$ r7 = r2 get authentication", "goto label2", "label $ r3 = org eclipse aether repository authentication context new instance r0 r1 r2 $ r7", "return $ r3", "if r2 == null goto label1", "label $ r7 = null"], "adj": [[1], [2], [3], [4], [5], [], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label2", "r8 = org eclipse aether resolution version range result r0", "$ r3 = r8 repository", "$ z0 = $ r3 be empty", "if $ z0 == 0 goto label1", "r7 = new java util hash map", "specialinvoke r7 < init >", "r9 = org eclipse aether resolution version range result r0", "r9 repository = r7", "label r10 = org eclipse aether resolution version range result r0", "$ r4 = r10 repository", "$ r4 put r1 r2", "label r11 = org eclipse aether resolution version range result r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return r1", "if r0 ! = null goto label1", "label if r1 == null goto label2", "$ z0 = r1 equal r0", "if $ z0 == 0 goto label3", "label return r0", "if $ z0 == 0 goto label3", "label r4 = new org eclipse aether util graph traverser and dependency traverser", "$ r3 = newarray org eclipse aether collection dependency traverser [ 2 ]", "$ r3 [ 0 ] = r0", "$ r3 [ 1 ] = r1", "specialinvoke r4 < init > $ r3", "r5 = org eclipse aether collection dependency traverser r4", "return r5"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse microprofile reactive stream operator spi reactive stream factory resolver instance = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "io netty util internal object util check not null r1 \\ `` channel\\ ``", "$ r4 = r1 new promise", "r6 = io netty handler codec http websocketx web socket client handshaker r0", "$ r5 = r6 close r1 r2 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r10 = r1 header", "$ r11 = io netty handler codec http http header name sec_websocket_key", "r47 = java lang char sequence $ r11", "r3 = $ r10 get r47", "if r3 ! = null goto label1", "r44 = new io netty handler codec http websocketx web socket server handshake exception", "r48 = io netty handler codec http http request r1", "specialinvoke r44 < init > \\ `` not a web socket request miss key\\", "r49 = java lang throwable r44", "throw r49", "if r3 ! = null goto label1", "label r45 = new io netty handler codec http default full http response", "$ r13 = io netty handler codec http http version http_1_1", "$ r14 = io netty handler codec http http response status switching_protocols", "$ r15 = r1 content", "$ r16 = $ r15 alloc", "$ r17 = $ r16 buffer 0", "specialinvoke r45 < init > $ r13 $ r14 $ r17", "if r2 == null goto label2", "r50 = io netty handler codec http full http response r45", "$ r41 = r50 header", "$ r41 add r2", "label r46 = new java lang string builder", "specialinvoke r46 < init >", "$ r19 = r46 append r3", "$ r20 = $ r19 append \\ `` 258eafa5-e914-47da-95ca-c5ab0dc85b11\\ ``", "r5 = $ r20 to string", "$ r21 = io netty util charset util us_ascii", "$ r22 = r5 get bytes $ r21", "r6 = io netty handler codec http websocketx web socket util sha1 $ r22", "r7 = io netty handler codec http websocketx web socket util base64 r6", "$ r23 = io netty handler codec http websocketx web socket server handshaker08 logger", "$ z0 = $ r23 be debug enabled", "if $ z0 == 0 goto label3", "$ r40 = io netty handler codec http websocketx web socket server handshaker08 logger", "$ r40 debug \\ `` web socket version 08 server handshake key { } response { } \\", "label r51 = io netty handler codec http full http response r45", "$ r24 = r51 header", "$ r26 = io netty handler codec http http header name upgrade", "$ r25 = io netty handler codec http http header value websocket", "r52 = java lang char sequence $ r26", "$ r27 = $ r24 set r52 $ r25", "$ r29 = io netty handler codec http http header name connection", "$ r28 = io netty handler codec http http header value upgrade", "r53 = java lang char sequence $ r29", "$ r30 = $ r27 set r53 $ r28", "$ r31 = io netty handler codec http http header name sec_websocket_accept", "r54 = java lang char sequence $ r31", "$ r30 set r54 r7", "$ r33 = r1 header", "$ r34 = io netty handler codec http http header name sec_websocket_protocol", "r55 = java lang char sequence $ r34", "r8 = $ r33 get r55", "if r8 == null goto label5", "r56 = io netty handler codec http websocketx web socket server handshaker08 r0", "r9 = r56 select subprotocol r8", "if r9 ! = null goto label4", "$ r38 = io netty handler codec http websocketx web socket server handshaker08 logger", "$ z1 = $ r38 be debug enabled", "if $ z1 == 0 goto label5", "$ r39 = io netty handler codec http websocketx web socket server handshaker08 logger", "$ r39 debug \\ `` request subprotocol s not support { } \\", "goto label5", "label r59 = io netty handler codec http full http response r45", "return r59", "if r9 ! = null goto label4", "label r57 = io netty handler codec http full http response r45", "$ r35 = r57 header", "$ r36 = io netty handler codec http http header name sec_websocket_protocol", "r58 = java lang char sequence $ r36", "$ r35 set r58 r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io netty util concurrent fast thread local thread r0", "r2 thread local map = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = io netty util internal logging jdk logger r0", "$ r5 = r10 logger", "$ r4 = java util log level fine", "$ z0 = $ r5 be loggable $ r4", "if $ z0 == 0 goto label1", "r3 = io netty util internal logging message formatter format r1 r2", "$ r6 = io netty util internal logging jdk logger self", "$ r7 = java util log level fine", "$ r8 = r3 get message", "$ r9 = r3 get throwable", "r11 = io netty util internal logging jdk logger r0", "specialinvoke r11 log $ r6 $ r7 $ r8 $ r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = io netty util internal logging jdk logger r0", "$ r5 = r10 logger", "$ r4 = java util log level fine", "$ z0 = $ r5 be loggable $ r4", "if $ z0 == 0 goto label1", "r3 = io netty util internal logging message formatter format r1 r2", "$ r6 = io netty util internal logging jdk logger self", "$ r7 = java util log level fine", "$ r8 = r3 get message", "$ r9 = r3 get throwable", "r11 = io netty util internal logging jdk logger r0", "specialinvoke r11 log $ r6 $ r7 $ r8 $ r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io netty util internal logging jdk logger r0", "$ r3 = r6 logger", "$ r2 = java util log level info", "$ z0 = $ r3 be loggable $ r2", "if $ z0 == 0 goto label1", "$ r5 = io netty util internal logging jdk logger self", "$ r4 = java util log level info", "r7 = io netty util internal logging jdk logger r0", "specialinvoke r7 log $ r5 $ r4 r1 null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = io netty util internal logging log4 j logger r0", "$ z0 = r9 be trace enabled", "if $ z0 == 0 goto label3", "r3 = io netty util internal logging message formatter format r1 r2", "r10 = io netty util internal logging log4 j logger r0", "$ r4 = r10 logger", "$ r5 = io netty util internal logging log4 j logger fqcn", "r11 = io netty util internal logging log4 j logger r0", "$ z1 = r11 trace capable", "if $ z1 == 0 goto label1", "$ r8 = org apache log4j level trace", "goto label2", "label $ r6 = r3 get message", "$ r7 = r3 get throwable", "r12 = org apache log4j priority $ r8", "$ r4 log $ r5 r12 $ r6 $ r7", "label return", "if $ z1 == 0 goto label1", "label $ r8 = org apache log4j level debug"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r11 = io netty util internal logging log4 j logger r0", "$ r5 = r11 logger", "$ z0 = $ r5 be debug enabled", "if $ z0 == 0 goto label1", "r4 = io netty util internal logging message formatter format r1 r2 r3", "r12 = io netty util internal logging log4 j logger r0", "$ r6 = r12 logger", "$ r7 = io netty util internal logging log4 j logger fqcn", "$ r8 = org apache log4j level debug", "$ r9 = r4 get message", "$ r10 = r4 get throwable", "r13 = org apache log4j priority $ r8", "$ r6 log $ r7 r13 $ r9 $ r10", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io netty util internal logging log4 j logger r0", "$ r4 = r5 logger", "$ r3 = io netty util internal logging log4 j logger fqcn", "$ r2 = org apache log4j level error", "r6 = org apache log4j priority $ r2", "$ r4 log $ r3 r6 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "io netty util internal object util check not null r0 r1", "$ i0 = lengthof r0", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append r1", "$ r5 = $ r4 append \\ `` length\\ ``", "$ r6 = $ r5 to string", "io netty util internal object util check positive $ i0 $ r6", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "if r0 == null goto label1", "$ l1 = r0 long value", "goto label2", "label return $ l1", "if r0 == null goto label1", "label $ l1 = l0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["l0 = @ parameter0", "i1 = @ parameter1", "$ z0 = io netty util internal shade org jctools util pow2 be power of two i1", "if $ z0 ! = 0 goto label1", "$ r0 = new java lang illegal argument exception", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` alignment must be a power of \\ ``", "$ r3 = $ r2 append i1", "$ r4 = $ r3 to string", "specialinvoke $ r0 < init > $ r4", "throw $ r0", "if $ z0 ! = 0 goto label1", "label $ i2 = i1 - 1", "$ l3 = long $ i2", "$ l7 = l0 + $ l3", "$ i4 = i1 - 1", "$ i5 = $ i4 ^ -1", "$ l6 = long $ i5", "$ l8 = $ l7 & $ l6", "return $ l8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 < i1 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init >", "throw r2", "if i0 < i1 goto label1", "label $ i2 = i1 - i0", "r3 = io netty util internal thread local random r0", "$ i3 = r3 next int $ i2", "$ i4 = $ i3 + i0", "return $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "$ r1 = io netty util internal internal thread local map get if set", "r2 = io netty util concurrent fast thread local r0", "r2 remove $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = io netty handler ssl open ssl session stats r0", "$ r3 = r7 context", "$ r4 = $ r3 ctx lock", "r1 = $ r4 read lock", "r1 lock", "label r8 = io netty handler ssl open ssl session stats r0", "$ r5 = r8 context", "$ l1 = $ r5 ctx", "l0 = io netty internal tcnative s s l context session ticket key new $ l1", "label r1 unlock", "return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label $ r3 = io netty handler ssl ssl context to x509 certificate r1", "r13 = io netty handler ssl ssl context builder r0", "$ r4 = r13 trust manager $ r3", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler ssl ssl handler r0", "$ l0 = r1 close notify read timeout millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler stream chunk file r0", "$ l0 = r1 offset", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "$ i1 = $ i0 % 48", "if $ i1 == 0 goto label1", "r15 = new java lang illegal argument exception", "specialinvoke r15 < init > \\ `` key length % 48 ! = 0\\ ``", "throw r15", "if $ i1 == 0 goto label1", "label $ i2 = lengthof r1", "$ i3 = $ i2 48", "r2 = newarray io netty internal tcnative session ticket key [ $ i3 ]", "i8 = 0", "i9 = 0", "label $ i4 = lengthof r2", "if i8 > = $ i4 goto label3", "r3 = java util array copy of range r1 i9 16", "i10 = i9 + 16", "r4 = java util array copy of range r1 i10 16", "i11 = i8 + 16", "r5 = java util array copy of range r1 i10 16", "i9 = i10 + 16", "r16 = new io netty internal tcnative session ticket key", "specialinvoke r16 < init > r3 r4 r5", "r2 [ i11 ] = r16", "i8 = i11 + 1", "goto label2", "if i8 > = $ i4 goto label3", "label r17 = io netty handler ssl open ssl session context r0", "$ r7 = r17 context", "$ r8 = $ r7 ctx lock", "r14 = $ r8 write lock", "r14 lock", "label r18 = io netty handler ssl open ssl session context r0", "$ r9 = r18 context", "$ l6 = $ r9 ctx", "$ i5 = io netty internal tcnative ssl ssl_op_no_ticket", "io netty internal tcnative s s l context clear option $ l6 $ i5", "r19 = io netty handler ssl open ssl session context r0", "$ r10 = r19 context", "$ l7 = $ r10 ctx", "io netty internal tcnative s s l context set session ticket key $ l7 r2", "label r14 unlock", "goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], []]}
{"nodes": ["r0 = @ this", "r2 = io netty channel abstract coalesce buffer queue r0", "$ r1 = r2 buf and listener pair", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose compression algorithm r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com nimbusds jose crypto bc bouncy castle provider singleton bouncy castle provider", "if $ r0 == null goto label1", "$ r3 = com nimbusds jose crypto bc bouncy castle provider singleton bouncy castle provider", "return $ r3", "if $ r0 == null goto label1", "label $ r1 = new org bouncycastle jce provider bouncy castle provider", "specialinvoke $ r1 < init >", "com nimbusds jose crypto bc bouncy castle provider singleton bouncy castle provider = $ r1", "$ r2 = com nimbusds jose crypto bc bouncy castle provider singleton bouncy castle provider", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose crypto impl composite key r0", "$ r1 = r2 enc key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "$ r1 = new java util link hash set", "specialinvoke $ r1 < init >", "if i0 < 256 goto label1", "$ r5 = com nimbusds jose j w s algorithm hs256", "$ r1 add $ r5", "label if i0 < 384 goto label2", "$ r4 = com nimbusds jose j w s algorithm hs384", "$ r1 add $ r4", "label if i0 < 512 goto label3", "$ r3 = com nimbusds jose j w s algorithm hs512", "$ r1 add $ r3", "label $ r2 = java util collection unmodifiable set $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof com nimbusds jose j w s algorithm", "if $ z0 == 0 goto label1", "$ r10 = com nimbusds jose j w s algorithm r0", "$ z5 = com nimbusds jose jca j c a support be support $ r10", "return $ z5", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof com nimbusds jose j w e algorithm", "if $ z1 == 0 goto label2", "$ r9 = com nimbusds jose j w e algorithm r0", "$ z4 = com nimbusds jose jca j c a support be support $ r9", "return $ z4", "if $ z1 == 0 goto label2", "label $ z2 = r0 instanceof com nimbusds jose encryption method", "if $ z2 == 0 goto label3", "$ r8 = com nimbusds jose encryption method r0", "$ z3 = com nimbusds jose jca j c a support be support $ r8", "return $ z3", "if $ z2 == 0 goto label3", "label $ r1 = new java lang illegal argument exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` unexpected algorithm class \\ ``", "$ r4 = r0 get class", "$ r5 = $ r4 get canonical name", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 to string", "specialinvoke $ r1 < init > $ r7", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof com nimbusds jose j w s algorithm", "if $ z0 == 0 goto label1", "$ r10 = com nimbusds jose j w s algorithm r0", "$ z5 = com nimbusds jose jca j c a support be support $ r10", "return $ z5", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof com nimbusds jose j w e algorithm", "if $ z1 == 0 goto label2", "$ r9 = com nimbusds jose j w e algorithm r0", "$ z4 = com nimbusds jose jca j c a support be support $ r9", "return $ z4", "if $ z1 == 0 goto label2", "label $ z2 = r0 instanceof com nimbusds jose encryption method", "if $ z2 == 0 goto label3", "$ r8 = com nimbusds jose encryption method r0", "$ z3 = com nimbusds jose jca j c a support be support $ r8", "return $ z3", "if $ z2 == 0 goto label3", "label $ r1 = new java lang illegal argument exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` unexpected algorithm class \\ ``", "$ r4 = r0 get class", "$ r5 = $ r4 get canonical name", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 to string", "specialinvoke $ r1 < init > $ r7", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds jose jca j w e j c a context r0", "r2 ce provider = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose j w e crypto part r0", "$ r1 = r2 encrypt key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose j w e object r0", "$ r1 = r2 auth tag", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose jwk e c key r0", "$ r1 = r2 x", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose jwk j w k matcher r0", "$ r1 = r2 size bit", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = new java util link list", "specialinvoke r9 < init >", "if r1 ! = null goto label1", "return r9", "if r1 ! = null goto label1", "label $ r6 = r1 get key", "r3 = $ r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r7 = r3 next", "r4 = com nimbusds jose jwk jwk $ r7", "r10 = com nimbusds jose jwk j w k selector r0", "$ r8 = r10 matcher", "$ z1 = $ r8 match r4", "if $ z1 == 0 goto label3", "r9 add r4", "label goto label2", "if $ z0 == 0 goto label4", "label return r9"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r10 = new java util link list", "specialinvoke r10 < init >", "r12 = com nimbusds jose jwk j w k set r0", "$ r6 = r12 key", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r9 = r2 next", "r3 = com nimbusds jose jwk jwk $ r9", "r4 = r3 to public j w k", "if r4 == null goto label2", "r10 add r4", "label goto label1", "if $ z0 == 0 goto label3", "label r11 = new com nimbusds jose jwk j w k set", "r13 = com nimbusds jose jwk j w k set r0", "$ r8 = r13 custom member", "specialinvoke r11 < init > r10 $ r8", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose jwk key operation r0", "$ r1 = r2 identifier", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose jwk r s a key r0", "$ r1 = r2 dq", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose jwk r s a key r0", "$ r1 = r2 qi", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = com nimbusds jose jwk source immutable secret r0", "$ r1 = r6 get j w k set", "$ r2 = $ r1 get key", "$ r3 = $ r2 get 0", "$ r4 = com nimbusds jose jwk octet sequence key $ r3", "$ r5 = $ r4 to byte array", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jose jwk source j w k set with timestamp r0", "$ r1 = r2 timestamp", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com nimbusds jose util base64", "$ r2 = com nimbusds jose util base64 codec encode to string r0 0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com nimbusds jose util base64 u r l", "$ r2 = com nimbusds jose util base64 codec encode to string r0 1", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r1 = new javax crypto spec secret key spec", "$ r2 = r0 get encode", "specialinvoke $ r1 < init > $ r2 \\ `` aes\\ ``", "return $ r1"], "adj": [[1], [2], [], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = com nimbusds jose util x509 cert utils parse with exception r0", "label return $ r2"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com nimbusds jose util x509 cert utils to p e m string r0 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds jwt proc default j w t claim verifier r0", "$ r1 = r2 exact match claim", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk a authorization server metadata r0", "r2 introspection endpoint auth method = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk assertion assertion detail r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk assertion saml2 s a m l2 assertion detail r0", "$ r1 = r2 subject format", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk auth p k i t l s client authentication r0", "$ r1 = r2 cert subject d n", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk auth verifier context r0", "$ r1 = r2 o", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = com nimbusds oauth2 sdk auth x509 certificate confirmation r0", "r2 = r10 to j w t claim", "r9 = new com nimbusds jwt j w t claim set $ builder", "specialinvoke r9 < init > r1", "$ r4 = r2 get key", "$ r5 = java lang string $ r4", "$ r6 = r2 get value", "$ r7 = r9 claim $ r5 $ r6", "$ r8 = $ r7 build", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk authorization code grant r0", "$ r1 = r2 code", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com nimbusds oauth2 sdk authorization error response std error", "$ r1 = java util collection unmodifiable set $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r5 = com nimbusds oauth2 sdk authorization request r0", "$ z0 = r5 specifies request object", "if $ z0 == 0 goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` can not create nested jwt secure authorization request\\ ``", "throw r4", "if $ z0 == 0 goto label1", "label r6 = com nimbusds oauth2 sdk authorization request r0", "$ r1 = r6 to parameter", "$ r2 = com nimbusds oauth2 sdk util j w t claim set utils to j w t claim set $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk authorization response r0", "$ r1 = r2 issuer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk authorization success response r0", "$ r1 = r2 access token", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk ciba c i b a request r0", "$ r1 = r2 bind message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds oauth2 sdk ciba c i b a error response r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = com nimbusds oauth2 sdk ciba c i b a token delivery r0", "$ r1 = r4 get tokens", "$ z0 = $ r1 instanceof com nimbusds openid connect sdk token o i d c token", "if $ z0 == 0 goto label1", "r5 = com nimbusds oauth2 sdk ciba c i b a token delivery r0", "$ r2 = r5 get tokens", "$ r3 = $ r2 to o i d c tokens", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client information r0", "$ r1 = r2 metadata", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = java util collection singleton r1", "goto label2", "label r4 = com nimbusds oauth2 sdk client client metadata r0", "r4 set redirection u r be $ r3", "return", "if r1 == null goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r2 get logo u r i null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com nimbusds oauth2 sdk util u r i utils ensure scheme be h t t p sor h t t p r1", "r4 = com nimbusds oauth2 sdk client client metadata r0", "$ r2 = r4 tos u r i entry", "$ r2 put null r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r2 request object j w s alg", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk client client metadata r0", "r2 request object j w e alg = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk client client metadata r0", "r2 software i d = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk client client metadata r0", "r2 software version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r2 authz j w e alg", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r2 back channel token delivery mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r20 = com nimbusds oauth2 sdk client client metadata r0", "$ r1 = r20 response type", "if $ r1 ! = null goto label1", "r18 = new java util hash set", "specialinvoke r18 < init >", "r21 = com nimbusds oauth2 sdk client client metadata r0", "r21 response type = r18", "r22 = com nimbusds oauth2 sdk client client metadata r0", "$ r15 = r22 response type", "$ r16 = com nimbusds oauth2 sdk response type get default", "$ r15 add $ r16", "label r23 = com nimbusds oauth2 sdk client client metadata r0", "$ r2 = r23 grant type", "if $ r2 ! = null goto label2", "r19 = new java util hash set", "specialinvoke r19 < init >", "r24 = com nimbusds oauth2 sdk client client metadata r0", "r24 grant type = r19", "r25 = com nimbusds oauth2 sdk client client metadata r0", "$ r13 = r25 grant type", "$ r12 = com nimbusds oauth2 sdk grant type authorization_code", "$ r13 add $ r12", "label r26 = com nimbusds oauth2 sdk client client metadata r0", "$ r3 = r26 auth method", "if $ r3 ! = null goto label4", "r27 = com nimbusds oauth2 sdk client client metadata r0", "$ r7 = r27 grant type", "$ r6 = com nimbusds oauth2 sdk grant type implicit", "$ z0 = $ r7 contain $ r6", "if $ z0 == 0 goto label3", "r28 = com nimbusds oauth2 sdk client client metadata r0", "$ r9 = r28 grant type", "$ i0 = $ r9 size", "if $ i0 ! = 1 goto label3", "$ r10 = com nimbusds oauth2 sdk auth client authentication method none", "r29 = com nimbusds oauth2 sdk client client metadata r0", "r29 auth method = $ r10", "goto label4", "label r31 = com nimbusds oauth2 sdk client client metadata r0", "$ r17 = r31 authz j w e alg", "if $ r17 == null goto label5", "r32 = com nimbusds oauth2 sdk client client metadata r0", "$ r4 = r32 authz j w e enc", "if $ r4 ! = null goto label5", "$ r5 = com nimbusds jose encryption method a128cbc_hs256", "r33 = com nimbusds oauth2 sdk client client metadata r0", "r33 authz j w e enc = $ r5", "label return", "if $ i0 ! = 1 goto label3", "label $ r8 = com nimbusds oauth2 sdk auth client authentication method get default", "r30 = com nimbusds oauth2 sdk client client metadata r0", "r30 auth method = $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk device device authorization success response r0", "$ r1 = r2 get verification u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = com nimbusds oauth2 sdk dpop j w k thumbprint confirmation r0", "r2 = r10 to j w t claim", "r9 = new com nimbusds jwt j w t claim set $ builder", "specialinvoke r9 < init > r1", "$ r4 = r2 get key", "$ r5 = java lang string $ r4", "$ r6 = r2 get value", "$ r7 = r9 claim $ r5 $ r6", "$ r8 = $ r7 build", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk dpop verifier default d po p single use checker r0", "$ r1 = r2 cache j t be", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk dpop verifier default d po p single use checker r0", "$ r1 = r2 timer", "$ r1 cancel", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk general exception r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk http h t t p request r0", "$ r1 = r2 fragment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds oauth2 sdk http h t t p request r0", "r2 fragment = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk http h t t p request r0", "$ r1 = r2 client x509 certificate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r7 = java util collection empty list", "return $ r7", "if r0 ! = null goto label1", "label $ r4 = new java util array list", "$ i0 = r0 size", "specialinvoke $ r4 < init > $ i0", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = com nimbusds oauth2 sdk id identifier $ r5", "$ r6 = r3 get value", "$ r4 add $ r6", "goto label2", "if $ z0 == 0 goto label3", "label return $ r4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk request object p o s t request r0", "$ r1 = r2 request j s o n object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 implies implicit flow", "if $ z0 ! = 0 goto label1", "$ z1 = r0 implies hybrid flow", "if $ z1 == 0 goto label2", "label $ r1 = com nimbusds oauth2 sdk response mode fragment_jwt", "return $ r1", "if $ z1 == 0 goto label2", "label $ r2 = com nimbusds oauth2 sdk response mode query_jwt", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk token tokens r0", "$ r1 = r2 refresh token", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk token token scheme error r0", "$ r1 = r2 realm", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk tokenexchange token exchange grant r0", "$ r1 = r2 audience", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk token introspection request r0", "$ r1 = r2 client authz", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds oauth2 sdk token introspection error response r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds oauth2 sdk token request r0", "$ r1 = r2 exist grant", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds oauth2 sdk util date simple date r0", "$ i0 = r1 day", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = new java net uri", "$ r3 = r0 get scheme", "$ r4 = r0 get host", "$ i0 = r0 get port", "$ r5 = r0 get path", "specialinvoke $ r2 < init > $ r3 null $ r4 $ i0 $ r5 null null", "label return $ r2"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r2 = r1 get value", "r3 = com nimbusds openid connect sdk assurance claim birthplace r0", "r3 set claim \\ `` country\\", "goto label2", "label return", "if r1 == null goto label1", "label r4 = com nimbusds openid connect sdk assurance claim birthplace r0", "r4 set claim \\ `` country\\"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds openid connect sdk assurance claim i s o3166_3 country code r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "com nimbusds openid connect sdk assurance claim i s o3166_1 alpha country code mapper lazy load map_3_2", "$ r2 = com nimbusds openid connect sdk assurance claim i s o3166_1 alpha country code mapper map_3_2", "$ r3 = r0 get value", "r1 = $ r2 get property $ r3", "if r1 == null goto label1", "$ r4 = new com nimbusds openid connect sdk assurance claim i s o3166_1 alpha2 country code", "specialinvoke $ r4 < init > r1", "goto label2", "label return $ r4", "if r1 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence attachment attachment r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds openid connect sdk assurance evidence attachment embed attachment r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence attachment content r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence attestation r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence document evidence r0", "$ r1 = r2 time", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence electronic signature evidence r0", "$ r1 = r2 signature type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence electronic signature evidence r0", "$ r1 = r2 issuer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r27 = new net minidev json j s o n object", "specialinvoke r27 < init >", "r29 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r4 = r29 get type", "$ r5 = $ r4 get value", "r27 put \\ `` type\\", "r30 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r7 = r30 get number", "if $ r7 == null goto label1", "r31 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r25 = r31 get number", "r27 put \\ `` number\\", "label r28 = new net minidev json j s o n object", "specialinvoke r28 < init >", "r32 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r9 = r32 get issuer name", "if $ r9 == null goto label2", "r33 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r23 = r33 get issuer name", "r28 put \\ `` name\\", "label r34 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r10 = r34 get issuer country", "if $ r10 == null goto label3", "r35 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r20 = r35 get issuer country", "$ r21 = $ r20 get value", "r28 put \\ `` country\\", "label $ z0 = r28 be empty", "if $ z0 ! = 0 goto label4", "r27 put \\ `` issuer\\", "label r36 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r11 = r36 get date of issuance", "if $ r11 == null goto label5", "r37 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r16 = r37 get date of issuance", "$ r17 = $ r16 to i s o8601 string", "r27 put \\ `` date_of_issuance\\", "label r38 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r12 = r38 get date of expiry", "if $ r12 == null goto label6", "r39 = com nimbusds openid connect sdk assurance evidence i d document description r0", "$ r13 = r39 get date of expiry", "$ r14 = $ r13 to i s o8601 string", "r27 put \\ `` date_of_expiry\\", "label return r27"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance evidence voucher r0", "$ r1 = r2 birthdate string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance identity verification r0", "$ r1 = r2 trust framework", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk assurance identity verification r0", "$ r1 = r2 assurance process", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "r7 = com nimbusds openid connect sdk claim claim set r0", "$ r5 = r7 claim", "$ r5 put r1 r2", "goto label2", "label return", "if r2 == null goto label1", "label r8 = com nimbusds openid connect sdk claim claim set r0", "$ r3 = r8 claim", "$ r3 remove r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "r10 = com nimbusds openid connect sdk claim claim set r0", "$ r8 = r10 get string claim r1", "goto label2", "label return $ r8", "if r2 ! = null goto label1", "label r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r4 = r9 append r1", "$ r5 = $ r4 append 35", "$ r6 = $ r5 append r2", "$ r7 = $ r6 to string", "r11 = com nimbusds openid connect sdk claim claim set r0", "$ r8 = r11 get string claim $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label1", "$ r5 = r2 to string", "r6 = com nimbusds openid connect sdk claim claim set r0", "r6 set claim r1 $ r5", "goto label2", "label return", "if r2 == null goto label1", "label r7 = com nimbusds openid connect sdk claim claim set r0", "$ r3 = r7 claim", "$ r3 remove r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r11 = new net minidev json j s o n object", "specialinvoke r11 < init >", "r12 = com nimbusds openid connect sdk claim claim set request r0", "$ r6 = r12 entry", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r7 = r2 next", "r3 = com nimbusds openid connect sdk claim claim set request $ entry $ r7", "r4 = r3 to j s o n object entry", "$ r8 = r4 get key", "$ r9 = r4 get value", "r11 put $ r8 $ r9", "goto label1", "if $ z0 == 0 goto label2", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk claim i d token claim set r0", "$ r1 = r2 get date claim \\ `` auth_time\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = com nimbusds openid connect sdk claim i d token claim set r0", "r1 = r10 get string list claim \\ `` amr\\ ``", "if r1 == null goto label1", "$ z0 = r1 be empty", "if $ z0 == 0 goto label2", "label return null", "if $ z0 == 0 goto label2", "label r8 = new java util array list", "$ i0 = r1 size", "specialinvoke r8 < init > $ i0", "r3 = r1 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label4", "$ r6 = r3 next", "r4 = java lang string $ r6", "r9 = new com nimbusds openid connect sdk claim amr", "specialinvoke r9 < init > r4", "r8 add r9", "goto label3", "if $ z1 == 0 goto label4", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label3", "r8 = new java util array list", "$ i0 = r1 size", "specialinvoke r8 < init > $ i0", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r6 = r3 next", "r4 = com nimbusds openid connect sdk claim amr $ r6", "$ r7 = r4 get value", "r8 add $ r7", "goto label1", "if $ z0 == 0 goto label2", "label r9 = com nimbusds openid connect sdk claim i d token claim set r0", "r9 set claim \\ `` amr\\", "goto label4", "label return", "if r1 == null goto label3", "label r10 = com nimbusds openid connect sdk claim i d token claim set r0", "r10 set claim \\ `` amr\\"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds openid connect sdk claim person claim r0", "r2 set claim \\ `` family_name\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = null", "if r1 == null goto label3", "r8 = new java util link list", "specialinvoke r8 < init >", "r7 = r8", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = com nimbusds openid connect sdk assurance claim country code $ r5", "if r3 == null goto label2", "$ r6 = r3 get value", "r8 add $ r6", "label goto label1", "if $ z0 == 0 goto label3", "label r9 = com nimbusds openid connect sdk claim person claim r0", "r9 set claim \\ `` nationalities\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk claim person claim r0", "$ r1 = r2 get string claim \\ `` birth_middle_name\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com nimbusds openid connect sdk claim request r0", "$ r2 = r4 user info claim", "$ r3 = com nimbusds openid connect sdk claim request remove claim $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com nimbusds openid connect sdk claim request r0", "$ r2 = r4 verify user info claim", "$ r3 = com nimbusds openid connect sdk claim request remove claim $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r41 = new net minidev json j s o n object", "specialinvoke r41 < init >", "r46 = com nimbusds openid connect sdk claim request r0", "$ r3 = r46 get i d token claim", "$ z0 = $ r3 be empty", "if $ z0 ! = 0 goto label01", "r47 = com nimbusds openid connect sdk claim request r0", "$ r33 = r47 get i d token claim", "$ r34 = com nimbusds openid connect sdk claim request $ entry to j s o n object $ r33", "r41 put \\ `` id_token\\", "label r48 = com nimbusds openid connect sdk claim request r0", "$ r4 = r48 get verify i d token claim", "$ z1 = $ r4 be empty", "if $ z1 ! = 0 goto label05", "$ r21 = r41 get \\ `` id_token\\ ``", "if $ r21 == null goto label02", "$ r32 = r41 get \\ `` id_token\\ ``", "r36 = net minidev json j s o n object $ r32", "goto label03", "label r43 = new net minidev json j s o n object", "specialinvoke r43 < init >", "r49 = com nimbusds openid connect sdk claim request r0", "$ r24 = r49 get verify i d token claim", "$ r25 = com nimbusds openid connect sdk claim request $ entry to j s o n object $ r24", "r43 put \\ `` claims\\", "r50 = com nimbusds openid connect sdk claim request r0", "$ r27 = r50 get i d token claim verification j s o n object", "if $ r27 == null goto label04", "r51 = com nimbusds openid connect sdk claim request r0", "$ r30 = r51 get i d token claim verification j s o n object", "r43 put \\ `` verification\\", "label r36 put \\ `` verified_claims\\", "if $ r21 == null goto label02", "label r42 = new net minidev json j s o n object", "specialinvoke r42 < init >", "r36 = r42", "if $ z1 ! = 0 goto label05", "label r52 = com nimbusds openid connect sdk claim request r0", "$ r38 = r52 get user info claim", "$ z3 = $ r38 be empty", "if $ z3 ! = 0 goto label06", "r53 = com nimbusds openid connect sdk claim request r0", "$ r18 = r53 get user info claim", "$ r19 = com nimbusds openid connect sdk claim request $ entry to j s o n object $ r18", "r41 put \\ `` userinfo\\", "label r54 = com nimbusds openid connect sdk claim request r0", "$ r5 = r54 get verify user info claim", "$ z2 = $ r5 be empty", "if $ z2 ! = 0 goto label10", "$ r6 = r41 get \\ `` userinfo\\ ``", "if $ r6 == null goto label07", "$ r17 = r41 get \\ `` userinfo\\ ``", "r39 = net minidev json j s o n object $ r17", "goto label08", "label r45 = new net minidev json j s o n object", "specialinvoke r45 < init >", "r55 = com nimbusds openid connect sdk claim request r0", "$ r9 = r55 get verify user info claim", "$ r10 = com nimbusds openid connect sdk claim request $ entry to j s o n object $ r9", "r45 put \\ `` claims\\", "r56 = com nimbusds openid connect sdk claim request r0", "$ r12 = r56 get user info claim verification j s o n object", "if $ r12 == null goto label09", "r57 = com nimbusds openid connect sdk claim request r0", "$ r15 = r57 get user info claim verification j s o n object", "r45 put \\ `` verification\\", "label r39 put \\ `` verified_claims\\", "if $ r6 == null goto label07", "label r44 = new net minidev json j s o n object", "specialinvoke r44 < init >", "r39 = r44", "if $ z2 ! = 0 goto label10", "label return r41"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ this", "r5 = com nimbusds openid connect sdk federation entity entity statement claim set r0", "r1 = r5 get j s o n object claim \\ `` jwks\\ ``", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r6 = java util map r1", "$ r3 = com nimbusds jose jwk j w k set parse r6", "label return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r4 = r1 to j s o n object", "goto label2", "label $ r3 = com nimbusds openid connect sdk federation entity federation metadata type openid_relying_party", "r5 = com nimbusds openid connect sdk federation entity entity statement claim set r0", "r5 set metadata $ r3 $ r4", "return", "if r1 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "$ r3 = com nimbusds openid connect sdk federation entity federation metadata type openid_provider", "r6 = com nimbusds openid connect sdk federation entity entity statement claim set r0", "r1 = r6 get metadata $ r3", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ r4 = com nimbusds openid connect sdk op o i d c provider metadata parse r1", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk federation entity entity statement claim set r0", "$ r1 = r2 get j s o n object claim \\ `` metadata_policy\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r1 = r2 federation a p i endpoint", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r34 = new net minidev json j s o n object", "specialinvoke r34 < init >", "r36 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r6 = r36 get federation a p i endpoint u r i", "if $ r6 == null goto label1", "r37 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r31 = r37 get federation a p i endpoint u r i", "$ r32 = $ r31 to string", "r34 put \\ `` federation_api_endpoint\\", "label r38 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r7 = r38 get trust anchor i d", "if $ r7 == null goto label2", "r39 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r28 = r39 get trust anchor i d", "$ r29 = $ r28 get value", "r34 put \\ `` trust_anchor_id\\", "label r40 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r8 = r40 get name", "if $ r8 == null goto label3", "r41 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r26 = r41 get name", "r34 put \\ `` name\\", "label r42 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r9 = r42 get contact", "if $ r9 == null goto label4", "r43 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r24 = r43 get contact", "r34 put \\ `` contacts\\", "label r44 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r10 = r44 get policy u r i", "if $ r10 == null goto label5", "r45 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r21 = r45 get policy u r i", "$ r22 = $ r21 to string", "r34 put \\ `` policy_uri\\", "label r46 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r11 = r46 get homepage u r i", "if $ r11 == null goto label6", "r47 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r18 = r47 get homepage u r i", "$ r19 = $ r18 to string", "r34 put \\ `` homepage_uri\\", "label r48 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r12 = r48 trust mark", "$ z0 = com nimbusds oauth2 sdk util collection utils be not empty $ r12", "if $ z0 == 0 goto label9", "r35 = new net minidev json j s o n array", "specialinvoke r35 < init >", "r49 = com nimbusds openid connect sdk federation entity federation entity metadata r0", "$ r14 = r49 trust mark", "r3 = $ r14 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label8", "$ r16 = r3 next", "r4 = com nimbusds jwt sign j w t $ r16", "$ r17 = r4 serialize", "r35 add $ r17", "goto label7", "if $ z1 == 0 goto label8", "label r34 put \\ `` trust_marks\\", "label return r34"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [], [60], [61], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new com nimbusds openid connect sdk federation policy metadata policy entry", "$ r4 = java util collection singleton list r2", "specialinvoke r5 < init > r1 $ r4", "r6 = com nimbusds openid connect sdk federation policy metadata policy r0", "r6 put r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com nimbusds openid connect sdk federation policy metadata policy r0", "$ r2 = r5 entry", "$ r3 = $ r2 get r1", "$ r4 = java util list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk federation registration explicit client registration request r0", "$ r1 = r2 entity statement", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0", "$ i0 = r1 max path length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk federation trust default trust chain retriever r0", "$ r1 = r2 constraint", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java util collection empty map", "$ r3 = com nimbusds openid connect sdk o i d c claim request resolve r0 r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds openid connect sdk op o i d c provider metadata r0", "r2 user info j w e encs = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds openid connect sdk op o i d c provider metadata r0", "r2 document verification method = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com nimbusds openid connect sdk op o i d c provider metadata r0", "r2 electronic record type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com nimbusds openid connect sdk rp o i d c client metadata r0", "$ i0 = r1 default max age", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com nimbusds oauth2 sdk util u r i utils ensure scheme be h t t p sor h t t p r1", "r2 = com nimbusds openid connect sdk rp o i d c client metadata r0", "r2 back channel logout u r i = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = com nimbusds openid connect sdk user info success response r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk validators abstract j w t validator r0", "$ r1 = r2 client i d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com nimbusds openid connect sdk validators i d token claim verifier r0", "$ r1 = r2 expect issuer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp address r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com squareup okhttp address r0", "$ r1 = r3 url", "$ r2 = $ r1 host", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = 0", "r5 = com squareup okhttp connection pool r0", "$ r3 = r5 connection", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r4 = r1 next", "r2 = com squareup okhttp internal io real connection $ r4", "$ z1 = r2 be multiplexed", "if $ z1 == 0 goto label2", "i0 = i0 + 1", "label goto label1", "if $ z0 == 0 goto label3", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label $ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append r0", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 append r1", "r15 = $ r7 to string", "r2 = r15 get bytes \\ `` iso-8859-1\\ ``", "$ r8 = okio byte string of r2", "r3 = $ r8 base64", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` basic \\ ``", "$ r11 = $ r10 append r3", "$ r12 = $ r11 to string", "label return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = com squareup okhttp internal disk lru cache r0", "$ l0 = r1 max size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = com squareup okhttp internal disk lru cache r0", "r3 max size = l0", "r4 = com squareup okhttp internal disk lru cache r0", "$ z0 = r4 initialize", "if $ z0 == 0 goto label1", "r5 = com squareup okhttp internal disk lru cache r0", "$ r2 = r5 executor", "r6 = com squareup okhttp internal disk lru cache r0", "$ r1 = r6 cleanup runnable", "$ r2 execute $ r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com squareup okhttp internal framed frame stream r0", "$ r1 = r2 error code", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = com squareup okhttp internal http http1x stream r0", "$ r3 = r10 http engine", "$ r3 write request header", "r11 = com squareup okhttp internal http http1x stream r0", "$ r4 = r11 http engine", "$ r5 = $ r4 get connection", "$ r6 = $ r5 get route", "$ r7 = $ r6 get proxy", "$ r8 = $ r7 type", "r2 = com squareup okhttp internal http request line get r1 $ r8", "$ r9 = r1 header", "r12 = com squareup okhttp internal http http1x stream r0", "r12 write request $ r9 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == r1 goto label1", "if r0 == null goto label2", "$ z0 = r0 equal r1", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com squareup okhttp ok http client r0", "r1 retry on connection failure = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = new java lang string", "r6 = com squareup okhttp response body r0", "$ r2 = r6 bytes", "r7 = com squareup okhttp response body r0", "$ r3 = specialinvoke r7 charset", "$ r4 = $ r3 name", "specialinvoke r5 < init > $ r2 $ r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r6 = com squareup okhttp route r0", "$ r1 = r6 address", "$ r2 = $ r1 ssl socket factory", "if $ r2 == null goto label1", "r7 = com squareup okhttp route r0", "$ r3 = r7 proxy", "$ r4 = $ r3 type", "$ r5 = java net proxy $ type http", "if $ r4 ! = $ r5 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r4 ! = $ r5 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = okhttp3 address r0", "$ r1 = r2 protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 value \\ `` set- cookie\\ ``", "r7 = null", "i1 = 0", "i0 = r2 size", "label if i1 > = i0 goto label5", "$ r4 = r2 get i1", "$ r5 = java lang string $ r4", "r3 = okhttp3 cookie parse r0 $ r5", "if r3 ! = null goto label2", "goto label4", "label i1 = i1 + 1", "goto label1", "if r3 ! = null goto label2", "label if r7 ! = null goto label3", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "r7 = $ r6", "label r7 add r3", "label if i1 > = i0 goto label5", "label if r7 == null goto label6", "$ r8 = java util collection unmodifiable list r7", "goto label7", "label return $ r8", "label if r7 == null goto label6", "label $ r8 = java util collection empty list"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = okhttp3 form body r0", "$ r1 = r2 encode names", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r2 = okhttp3 internal frame error code no_error", "$ r1 = okhttp3 internal frame error code cancel", "r3 = okhttp3 internal framed frame connection r0", "specialinvoke r3 close $ r2 $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = okhttp3 internal http2 http2 connection r0", "r1 start 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = okhttp3 ok http client r0", "$ i0 = r1 ping interval", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = okhttp3 http url r0", "$ r1 = r2 scheme", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = okhttp3 http url r0", "$ r1 = r2 password", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = okhttp3 ok http client r0", "$ i0 = r1 connect timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = okhttp3 ok http client r0", "$ i0 = r1 ping interval", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = okio buffer r0", "$ r2 = specialinvoke r3 hmac \\ `` hmac s h a512\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = okio buffer r0", "$ r1 = r3 snapshot", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = okio buffer r0", "$ r1 = specialinvoke r2 digest \\ `` sha-256\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = okio buffer r0", "$ r2 = specialinvoke r3 hmac \\ `` hmac s h a512\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = okio byte string r0", "$ r1 = r2 data", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = okio timeout r0", "$ z0 = r1 have deadline", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = okio byte string r0", "$ r1 = specialinvoke r2 digest \\ `` md5\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java association association session type r0", "$ r1 = r2 _sess type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org openid4java association association session type r0", "$ z0 = r1 _compat", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = org openid4java association diffie hellman session r0", "$ r2 = r5 _key pair", "$ r3 = $ r2 get public", "r1 = javax crypto interface d h public key $ r3", "$ r4 = org openid4java association diffie hellman session public key to string r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openid4java consumer consumer manager r0", "r2 _dh params = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openid4java consumer consumer manager r0", "r2 _min assoc sess enc = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java consumer consumer manager r0", "$ r1 = r2 _min assoc sess enc", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org openid4java consumer consumer manager r0", "r1 _immediate auth = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java discovery yadis yadis result r0", "$ r1 = r2 _content type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org openid4java discovery yadis yadis url r0", "$ r1 = r3 _yadis url", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org openid4java message association request r0", "r1 = r3 get parameter value \\ `` openid dh_modulus\\ ``", "if r1 == null goto label1", "$ r2 = r1", "goto label3", "label return $ r2", "if r1 == null goto label1", "label r4 = org openid4java message association request r0", "$ z0 = r4 have parameter \\ `` openid dh_consumer_public\\ ``", "if $ z0 == 0 goto label2", "$ r2 = \\ `` a nz5 ogu i o x l dhm yms wizj e o h tdxfo2 vcbt2 i3 m y zu ye91ou j4m l b x+ ykc liem oc pym2 c b r y h n oyyjm g0mg3 b vd9 rc ln5 s3 i h ho x g hblzqd l f ei 368 ygo79 j rnx tk xjgm y0rxl j5b u1z i ka s du kdi i+ x uk k j x8 fvf8 w8vsix y or\\ ``", "if $ z0 == 0 goto label2", "label $ r2 = null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org openid4java message association request r0", "r1 = r3 get parameter value \\ `` openid dh_gen\\ ``", "if r1 == null goto label1", "$ r2 = r1", "goto label3", "label return $ r2", "if r1 == null goto label1", "label r4 = org openid4java message association request r0", "$ z0 = r4 have parameter \\ `` openid dh_consumer_public\\ ``", "if $ z0 == 0 goto label2", "$ r2 = \\ `` ag==\\ ``", "if $ z0 == 0 goto label2", "label $ r2 = null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org openid4java message association response r0", "r2 set \\ `` enc_mac_key\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org openid4java message auth success r0", "$ r2 = r4 _sign extension", "$ z0 = $ r2 contain r1", "if $ z0 ! = 0 goto label1", "r5 = org openid4java message auth success r0", "$ r3 = r5 _sign extension", "$ r3 add r1", "r6 = org openid4java message auth success r0", "r6 build sign list", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org openid4java message ax ax message r0", "$ r2 = r4 _parameters", "$ r3 = $ r2 get parameter value r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org openid4java message message have extension factory r0", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label $ r2 = org openid4java message message _extension factory", "$ r3 = $ r2 get r0", "r11 = java lang class $ r3", "$ r4 = r11 new instance", "r1 = org openid4java message message extension factory $ r4", "label goto label4", "label return r1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org openid4java message message r0", "$ r2 = r3 _ext aliases", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org openid4java message pape pape message r0", "$ r2 = r3 _parameters", "$ z0 = $ r2 have parameter r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return \\ `` http openid net extension sreg 1 1\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java message sreg s reg message r0", "$ r1 = r2 _type uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openid4java server server manager r0", "$ r1 = r2 _sign field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "org openid4java util http client factory multi thread http client = z0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org opentest4j multiple failure error r0", "$ r1 = r2 failure", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org opentest4j value wrapper r0", "$ i0 = r1 identity hash code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache oltu oauth2 common o auth provider type r0", "$ r1 = r2 provider name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache oltu oauth2 common o auth provider type r0", "$ r1 = r2 token endpoint", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r7 = new java lang null pointer exception", "specialinvoke r7 < init >", "throw r7", "if r1 ! = null goto label1", "label r9 = org eclipse core command category r0", "$ r2 = r9 category listener", "if $ r2 ! = null goto label2", "r8 = new java util array list", "specialinvoke r8 < init >", "r10 = org eclipse core command category r0", "r10 category listener = r8", "label r11 = org eclipse core command category r0", "$ r3 = r11 category listener", "$ z0 = $ r3 contain r1", "if $ z0 ! = 0 goto label3", "r12 = org eclipse core command category r0", "$ r4 = r12 category listener", "$ r4 add r1", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse core command command r1", "r15 = org eclipse core command command r0", "$ r4 = r15 category", "$ r3 = r2 category", "i0 = org eclipse core internal command util util compare $ r4 $ r3", "if i0 ! = 0 goto label1", "r16 = org eclipse core command command r0", "$ z1 = r16 define", "$ z0 = r2 define", "i0 = org eclipse core internal command util util compare $ z1 $ z0", "if i0 ! = 0 goto label1", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org eclipse core command command manager r0", "r3 = r4 get category \\ `` org eclipse core command category autogenerated\\ ``", "r3 define r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse core command command manager r0", "$ r2 = r6 define handle object", "r7 = org eclipse core command command manager r0", "$ r1 = r7 define handle object", "$ i0 = $ r1 size", "$ r3 = newarray org eclipse core command command [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = org eclipse core command command [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core command command manager event r0", "$ r1 = r2 category id", "if $ r1 == null goto label1", "return 1", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang null pointer exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r8 = org eclipse core command contexts context r0", "$ r2 = r8 listener", "if $ r2 ! = null goto label2", "r7 = new java util hash set", "specialinvoke r7 < init >", "r9 = org eclipse core command contexts context r0", "r9 listener = r7", "label r10 = org eclipse core command contexts context r0", "$ r3 = r10 listener", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core command state r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse core command state r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org eclipse core expression element handler instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r7 = org eclipse core expression expression info r0", "$ r1 = r7 f misbehave expression type", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r8 = org eclipse core expression expression info r0", "$ r3 = r8 f misbehave expression type", "r9 = org eclipse core expression expression info r0", "$ r2 = r9 f misbehave expression type", "$ i0 = $ r2 size", "$ r4 = newarray java lang class [ $ i0 ]", "$ r5 = $ r3 to array $ r4", "$ r6 = java lang class [ ] $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r5 = new org eclipse core internal expression property tester descriptor", "r6 = org eclipse core expression property tester r0", "$ r4 = r6 f config element", "r7 = org eclipse core expression property tester r0", "$ r3 = r7 f namespace", "r8 = org eclipse core expression property tester r0", "$ r2 = r8 f property", "specialinvoke r5 < init > $ r4 $ r3 $ r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["$ r0 = org eclipse core internal filebuffers file buffer plugin get file buffer manager", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = org eclipse core internal filebuffers extension registry r0", "$ r7 = r14 f setup participant descriptor", "$ r8 = $ r7 get r1", "r2 = java util set $ r8", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r13 = new java util array list", "specialinvoke r13 < init >", "r4 = r2 iterator", "goto label3", "label $ z1 = r4 have next", "if $ z1 ! = 0 goto label2", "label $ r10 = r4 next", "r5 = org eclipse core runtime i configuration element $ r10", "r15 = org eclipse core internal filebuffers extension registry r0", "$ r11 = r15 f setup participant", "r16 = org eclipse core internal filebuffers extension registry r0", "$ r12 = r16 get extension r5 $ r11 class \\ `` lorg eclipse core filebuffers i document setup participant \\ ``", "r6 = org eclipse core filebuffers i document setup participant $ r12", "if r6 == null goto label3", "r13 add r6", "if $ z1 ! = 0 goto label2", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org eclipse core internal filebuffers extension registry r0", "$ r3 = r7 find content type r1 r2", "r8 = org eclipse core internal filebuffers extension registry r0", "r6 = r8 get document factory $ r3", "if r6 ! = null goto label1", "$ r5 = r1 last segment", "r9 = org eclipse core internal filebuffers extension registry r0", "r6 = r9 get document factory $ r5", "label if r6 ! = null goto label2", "$ r4 = r1 get file extension", "r10 = org eclipse core internal filebuffers extension registry r0", "r6 = r10 get document factory $ r4", "label if r6 ! = null goto label3", "r11 = org eclipse core internal filebuffers extension registry r0", "r6 = r11 get document factory \\ `` * \\ ``", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang system line separator", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r1 = new org eclipse core filesystem provider file info", "specialinvoke r1 < init >", "r2 = org eclipse core filesystem i file info r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse core internal filesystem internal file system core get instance", "$ r2 = $ r1 get file system r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org eclipse core internal filesystem internal file system core get instance", "$ r1 = $ r0 get local file system", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ i0 = org eclipse core internal filesystem local local file native native attribute", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = new org eclipse core internal job order lock", "r3 = org eclipse core internal job lock manager r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse core internal job worker r0", "$ r1 = r3 current job", "$ r2 = org eclipse core runtime job job $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org eclipse core runtime job job $ 2", "specialinvoke r3 < init > r0 r1", "r4 = org eclipse core runtime job job r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get rule", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ z0 = specialinvoke r0 be user", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get active job", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org eclipse core internal dtree delta data tree r0", "$ r3 = r5 root node", "$ r4 = $ r3 assemble with r2 r1 0", "r6 = org eclipse core internal dtree delta data tree r0", "r6 root node = $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal dtree delta data tree r0", "$ r1 = r2 root node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse core internal dtree delta data tree r0", "$ z0 = r6 be immutable", "if $ z0 ! = 0 goto label1", "r5 = new java lang illegal argument exception", "$ r4 = org eclipse core internal utils message dtree_not immutable", "specialinvoke r5 < init > $ r4", "throw r5", "if $ z0 ! = 0 goto label1", "label r7 = org eclipse core internal dtree delta data tree r0", "$ r2 = r7 copy", "r1 = org eclipse core internal dtree delta data tree $ r2", "r8 = org eclipse core internal dtree delta data tree r0", "r1 set parent r8", "r1 empty delta", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse core internal localstore collect sync status visitor r0", "r1 ignore local deletion = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r10 = org eclipse core internal resource folder r0", "$ r3 = r10 get property manager", "r11 = org eclipse core resource i resource r0", "$ r3 delete property r11 2", "r12 = org eclipse core internal resource folder r0", "$ r4 = r12 workspace", "$ r5 = $ r4 get root", "r13 = org eclipse core internal resource folder r0", "$ r6 = r13 path", "r1 = $ r5 get file $ r6", "r14 = org eclipse core internal resource folder r0", "$ z0 = r14 be link", "if $ z0 == 0 goto label1", "r15 = org eclipse core internal resource folder r0", "r2 = r15 get raw location u r i", "r16 = org eclipse core internal resource folder r0", "r16 delete 0 null", "r1 create link r2 16 null", "goto label2", "label return r1", "if $ z0 == 0 goto label1", "label r17 = org eclipse core internal resource folder r0", "$ r7 = r17 workspace", "r18 = org eclipse core resource i resource r0", "$ r7 delete resource r18", "r19 = org eclipse core internal resource folder r0", "$ r8 = r19 workspace", "r20 = org eclipse core resource i resource r1", "$ r8 create resource r20 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "i0 = @ parameter3", "r9 = new java util array list", "specialinvoke r9 < init >", "r10 = org eclipse core internal resource marker manager r0", "r10 do find marker r1 r9 r2 z0 i0", "$ z1 = r9 be empty", "if $ z1 == 0 goto label1", "$ r8 = org eclipse core internal resource marker manager no_markers", "return $ r8", "if $ z1 == 0 goto label1", "label $ i1 = r9 size", "$ r5 = newarray org eclipse core resource i marker [ $ i1 ]", "$ r6 = r9 to array $ r5", "$ r7 = org eclipse core resource i marker [ ] $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse core internal resource marker manager r0", "$ r3 = r6 cache", "$ r4 = r1 get type", "$ z0 = $ r3 be persistent $ r4", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r2 = r1 get attribute \\ `` transient\\ ``", "if r2 == null goto label2", "$ z1 = r2 instanceof java lang boolean", "if $ z1 == 0 goto label2", "$ r5 = java lang boolean r2", "$ z2 = $ r5 boolean value", "if $ z2 == 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse core internal resource marker manager r0", "$ r2 = r3 cache", "$ z0 = $ r2 be persistent r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org eclipse core internal resource marker set r0", "$ r4 = r7 element", "$ i2 = lengthof $ r4", "$ i3 = $ i2 * 2", "r1 = newarray org eclipse core internal resource i marker set element [ $ i3 ]", "$ i4 = lengthof r1", "i0 = $ i4 - 1", "r8 = org eclipse core internal resource marker set r0", "$ r5 = r8 element", "i1 = lengthof $ r5", "i8 = 0", "goto label5", "label if i8 < i1 goto label1", "label r2 = $ r5 [ i8 ]", "if r2 == null goto label4", "$ l5 = r2 get id", "r9 = org eclipse core internal resource marker set r0", "$ i6 = r9 hash for $ l5", "$ i7 = lengthof r1", "i9 = $ i6 % $ i7", "goto label3", "label $ r6 = r1 [ i9 ]", "if $ r6 ! = null goto label2", "label i9 = i9 + 1", "if i9 < = i0 goto label3", "i9 = 0", "if $ r6 ! = null goto label2", "r1 [ i9 ] = r2", "label i8 = i8 + 1", "label if i8 < i1 goto label1", "r10 = org eclipse core internal resource marker set r0", "r10 element = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 get type", "if $ i0 ! = 1 goto label1", "$ r2 = r1 get full path", "$ i1 = $ r2 segment count", "if $ i1 ! = 2 goto label1", "$ r3 = r1 get name", "$ z0 = $ r3 equal \\ `` project\\ ``", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org eclipse core internal resource project r0", "$ r1 = r2 internal get description", "r3 = org eclipse core internal resource project r0", "r4 = org eclipse core resource i project description $ r1", "r3 write description r4 i0 1 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse core internal resource project info r0", "r2 property store = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core internal resource resource info r0", "$ i0 = r1 flag", "$ i1 = org eclipse core internal resource resource info get type $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core internal resource resource info r0", "$ i0 = r1 flag", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org eclipse core internal utils file util compute overlap r0 r1 1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org eclipse core internal utils file util compute overlap r0 r1 0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return r1", "if r1 ! = null goto label1", "label r7 = org eclipse core internal utils string pool r0", "$ r3 = r7 map", "r2 = $ r3 get r1", "if r2 == null goto label3", "if r2 == r1 goto label2", "r8 = org eclipse core internal utils string pool r0", "$ i0 = r8 saving", "$ i1 = r1 length", "$ i2 = 2 * $ i1", "$ i3 = 44 + $ i2", "$ i4 = $ i0 + $ i3", "r9 = org eclipse core internal utils string pool r0", "r9 saving = $ i4", "label $ r6 = java lang string r2", "return $ r6", "if r2 == null goto label3", "label r10 = org eclipse core internal utils string pool r0", "$ r4 = r10 map", "$ r4 put r1 r1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = org eclipse core internal watson element tree reader read number r2", "r5 = org eclipse core internal watson element tree reader r0", "r3 = r5 get reader $ i0", "$ r4 = r3 read delta r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r3 = @ parameter3", "r11 = org eclipse core internal watson element tree writer r0", "r11 write number 1 r3", "r10 = new org eclipse core internal dtree delta data tree", "$ r6 = r1 get data tree", "$ r7 = org eclipse core runtime path root", "r12 = org eclipse core runtime i path $ r7", "$ r8 = $ r6 copy complete subtree r12", "specialinvoke r10 < init > $ r8", "r13 = org eclipse core internal watson element tree writer r0", "$ r9 = r13 data tree writer", "r14 = org eclipse core internal dtree abstract data tree r10", "$ r9 write tree r14 r2 i0 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 forget last built state", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = newarray org eclipse core resource map resource mapping [ 0 ]", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r10 = org eclipse core resource map resource traversal r0", "$ r3 = r10 resource", "$ i0 = lengthof $ r3", "if $ i0 ! = 0 goto label1", "$ r8 = newarray org eclipse core resource i marker [ 0 ]", "return $ r8", "if $ i0 ! = 0 goto label1", "label r9 = new java util array list", "specialinvoke r9 < init >", "r11 = org eclipse core resource map resource traversal r0", "r11 do find marker r9 r1 z0", "$ i1 = r9 size", "$ r5 = newarray org eclipse core resource i marker [ $ i1 ]", "$ r6 = r9 to array $ r5", "$ r7 = org eclipse core resource i marker [ ] $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = specialinvoke r0 create polling monitor r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core resource resource attribute r0", "$ i0 = r1 attribute", "$ i1 = $ i0 & 16", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r10 = org eclipse core internal preference legacy preference forwarder r0", "$ z1 = r10 get boolean r1", "if $ z1 == 0 goto label1", "$ r8 = java lang boolean true", "goto label2", "label r2 = $ r8", "if z0 == 0 goto label3", "$ r9 = java lang boolean true", "goto label4", "label r3 = $ r9", "if $ r9 ! = r2 goto label5", "return", "if $ r9 ! = r2 goto label5", "label r11 = org eclipse core internal preference legacy preference forwarder r0", "r11 notify = 0", "r12 = org eclipse core internal preference legacy preference forwarder r0", "$ z2 = r12 get default boolean r1", "if $ z2 ! = z0 goto label6", "r13 = org eclipse core internal preference legacy preference forwarder r0", "$ r6 = r13 get plugin preference 1", "$ r6 remove r1", "goto label7", "label r15 = org eclipse core internal preference legacy preference forwarder r0", "r15 fire property change event r1 r2 r3", "goto label9", "label r17 = org eclipse core internal preference legacy preference forwarder r0", "r17 notify = 1", "if $ z2 ! = z0 goto label6", "label r14 = org eclipse core internal preference legacy preference forwarder r0", "$ r5 = r14 get plugin preference 1", "$ r5 put boolean r1 z0", "if z0 == 0 goto label3", "label $ r9 = java lang boolean false", "if $ z1 == 0 goto label1", "label $ r8 = java lang boolean false"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse core internal preference legacy preference forwarder r0", "$ r2 = r6 get plugin preference 1", "r7 = org eclipse core internal preference legacy preference forwarder r0", "$ r3 = r7 get default preference", "$ r4 = $ r3 get r1 \\ `` \\ ``", "$ r5 = $ r2 get r1 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core internal preference legacy preference forwarder r0", "$ r1 = r2 get plugin preference 1", "$ z0 = $ r1 be dirty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org eclipse core runtime performance stats enable", "if $ z0 == 0 goto label1", "org eclipse core internal runtime performance stats processor add listener r0", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core runtime performance stats r0", "$ z0 = r1 be failure", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse core runtime file locator to file u r l r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org eclipse core internal runtime internal platform get default", "$ r1 = $ r0 get location", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "return null"], "adj": [[1], []]}
{"nodes": ["$ r0 = org eclipse core internal runtime internal platform get default", "$ r1 = $ r0 get n l", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org eclipse core internal runtime internal platform get default", "$ r1 = $ r0 get w s", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse core internal runtime internal platform get default", "$ z0 = $ r1 be fragment r0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label $ r4 = org eclipse core resource resource plugin get workspace", "$ r4 run r2 r1 1 null", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = new org eclipse debug core debug event", "specialinvoke r2 < init > r0 16 i0", "r3 = org eclipse debug core model debug element r0", "r3 fire event r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse debug core model memory byte r0", "$ b0 = r1 flag", "$ b1 = $ b0 | 1", "$ b2 = byte $ b1", "r2 = org eclipse debug core model memory byte r0", "r2 flag = $ b2", "if z0 ! = 0 goto label1", "r3 = org eclipse debug core model memory byte r0", "$ b3 = r3 flag", "$ b4 = $ b3 ^ 1", "$ b5 = byte $ b4", "r4 = org eclipse debug core model memory byte r0", "r4 flag = $ b5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse debug core model memory byte r0", "$ b0 = r1 flag", "$ b1 = $ b0 & 16", "if $ b1 ! = 16 goto label1", "return 1", "if $ b1 ! = 16 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = org eclipse debug core refresh util attr_refresh_scope", "r2 = r0 get attribute $ r4 null", "if r2 == null goto label2", "r3 = org eclipse debug core refresh util to resource r2", "if r3 == null goto label2", "$ i0 = lengthof r3", "if $ i0 < = 0 goto label2", "b1 = 1", "$ z0 = org eclipse debug core refresh util be refresh recursive r0", "if $ z0 == 0 goto label1", "b1 = 2", "label org eclipse debug core refresh util refresh resource r3 b1 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse debug core sourcelookup abstract source lookup director r0", "r2 f id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new org eclipse debug core sourcelookup abstract source lookup director $ source lookup query", "r9 = org eclipse debug core sourcelookup abstract source lookup director r0", "specialinvoke r8 < init > r9 r1", "r10 = org eclipse core runtime i safe runnable r8", "org eclipse core runtime safe runner run r10", "r3 = r8 get source element", "r4 = r8 get exception", "if r4 == null goto label2", "$ z0 = r4 instanceof org eclipse core runtime core exception", "if $ z0 == 0 goto label1", "r5 = org eclipse core runtime core exception r4", "$ r7 = r5 get status", "$ i0 = $ r7 get severity", "if $ i0 ! = 4 goto label2", "r11 = java lang throwable r5", "org eclipse debug core debug plugin log r11", "goto label2", "label r8 dispose", "return r3", "if $ z0 == 0 goto label1", "label org eclipse debug core debug plugin log r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new org eclipse core runtime status", "$ r5 = org eclipse debug core debug plugin get unique identifier", "specialinvoke r7 < init > 4 $ r5 125 r1 r2", "r8 = new org eclipse core runtime core exception", "r9 = org eclipse core runtime i status r7", "specialinvoke r8 < init > r9", "r10 = java lang throwable r8", "throw r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org eclipse debug core debug plugin parse document r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse debug core sourcelookup container archive source container r0", "$ r1 = r2 f file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse debug core sourcelookup container directory source container r0", "$ r1 = r2 f directory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse debug internal core breakpoint manager r0", "$ r2 = r3 f suppress change", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org eclipse debug internal core group group launch r0", "$ r3 = r8 sub launch", "entermonitor $ r3", "label r9 = org eclipse debug internal core group group launch r0", "$ r5 = r9 sub launch", "$ r4 = newarray org eclipse debug core model i process [ 0 ]", "$ r5 put r1 $ r4", "exitmonitor $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse debug internal core launch configuration info r0", "r2 f type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get attribute \\ `` key\\ ``", "r3 = r1 get child node", "i0 = r3 get length", "r11 = new java util array list", "specialinvoke r11 < init > i0", "i2 = 0", "goto label4", "label if i2 < i0 goto label1", "label r9 = r3 item i2", "$ s1 = r9 get node type", "if $ s1 ! = 1 goto label3", "r10 = org w3c dom element r9", "$ r6 = r10 get node name", "$ z0 = $ r6 equal ignore case \\ `` list entry\\ ``", "if $ z0 ! = 0 goto label2", "r12 = org eclipse debug internal core launch configuration info r0", "$ r8 = r12 get invalid format debug exception", "r13 = java lang throwable $ r8", "throw r13", "if $ z0 ! = 0 goto label2", "label r14 = org eclipse debug internal core launch configuration info r0", "$ r7 = r14 get value attribute r10", "r11 add $ r7", "label i2 = i2 + 1", "label if i2 < i0 goto label1", "r15 = org eclipse debug internal core launch configuration info r0", "r15 set attribute r2 r11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse debug internal core launch configuration info r0", "$ z0 = r3 be prototype", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r4 = org eclipse debug internal core launch configuration info r0", "$ r1 = r4 f visible attribute", "if $ r1 ! = null goto label2", "r5 = org eclipse debug internal core launch configuration info r0", "r5 initialize visible attribute", "label r6 = org eclipse debug internal core launch configuration info r0", "$ r2 = r6 f visible attribute", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r5 = org eclipse debug internal core launch configuration info r0", "$ r2 = r5 f visible attribute", "if $ r2 == null goto label2", "if z0 == 0 goto label1", "r6 = org eclipse debug internal core launch configuration info r0", "$ r4 = r6 f visible attribute", "$ r4 add r1", "goto label2", "label return", "if z0 == 0 goto label1", "label r7 = org eclipse debug internal core launch configuration info r0", "$ r3 = r7 f visible attribute", "$ r3 remove r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse debug internal core launch configuration type r0", "r4 initialize migration delegate", "r5 = org eclipse debug internal core launch configuration type r0", "$ r2 = r5 f migration delegate", "if $ r2 == null goto label1", "r6 = org eclipse debug internal core launch configuration type r0", "$ r3 = r6 f migration delegate", "$ z0 = $ r3 be candidate r1", "return $ z0", "if $ r2 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse debug internal core launch manager r0", "r6 initialize launch delegate", "r7 = org eclipse debug internal core launch manager r0", "$ r2 = r7 f launch delegate", "r1 = $ r2 value", "$ i0 = r1 size", "$ r3 = newarray org eclipse debug core i launch delegate [ $ i0 ]", "$ r4 = r1 to array $ r3", "$ r5 = org eclipse debug core i launch delegate [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r7 = org eclipse debug internal core launch manager r0", "$ r3 = r7 f launch", "entermonitor $ r3", "label r8 = org eclipse debug internal core launch manager r0", "$ r4 = r8 f launch set", "$ r4 remove r1", "r9 = org eclipse debug internal core launch manager r0", "$ r5 = r9 f launch", "$ z1 = $ r5 remove r1", "exitmonitor $ r3", "label return $ z1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get delta", "if r2 == null goto label4", "r8 = org eclipse debug internal core launch manager r0", "r3 = r8 get delta visitor", "r7 = null", "r9 = org eclipse debug internal core launch manager r0", "$ z0 = r9 be delete configuration", "if $ z0 == 0 goto label1", "r10 = org eclipse debug internal core launch manager r0", "r7 = r10 get map resource visitor", "label r11 = org eclipse core resource i resource delta visitor r3", "r2 accept r11", "if r7 == null goto label4", "r12 = org eclipse core resource i resource delta visitor r7", "r2 accept r12", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse debug internal core launch manager r0", "r1 = r5 get launch configuration type", "i0 = lengthof r1", "i1 = 0", "goto label2", "label if i1 < i0 goto label1", "label r2 = r1 [ i1 ]", "$ r4 = org eclipse debug internal core launch configuration type r2", "r6 = org eclipse debug internal core launch manager r0", "r6 persist prefer launch delegate $ r4", "i1 = i1 + 1", "label if i1 < i0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse debug internal core launch manager r0", "r2 = r5 get launch mode r1", "if r2 == null goto label1", "$ r3 = r2 get label", "$ r4 = org eclipse debug internal core launch manager remove accelerator $ r3", "return $ r4", "if r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse debug internal core launch manager r0", "$ r1 = r5 f step filter manager", "if $ r1 ! = null goto label1", "r4 = new org eclipse debug internal core step filter manager", "specialinvoke r4 < init >", "r6 = org eclipse debug internal core launch manager r0", "r6 f step filter manager = r4", "label r7 = org eclipse debug internal core launch manager r0", "$ r2 = r7 f step filter manager", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org eclipse debug internal core launch manager r0", "$ r6 = r15 f active mode", "if $ r6 ! = null goto label6", "r14 = new java util hash set", "specialinvoke r14 < init > 3", "r16 = org eclipse debug internal core launch manager r0", "r16 f active mode = r14", "r17 = org eclipse debug internal core launch manager r0", "$ r9 = r17 get launch configuration type", "i0 = lengthof $ r9", "i2 = 0", "goto label5", "label if i2 < i0 goto label1", "label r2 = $ r9 [ i2 ]", "r18 = org eclipse debug internal core launch manager r0", "$ r10 = r18 get launch mode", "i1 = lengthof $ r10", "i3 = 0", "goto label4", "label if i3 < i1 goto label2", "label r4 = $ r10 [ i3 ]", "$ r11 = r4 get identifier", "$ z1 = r2 support mode $ r11", "if $ z1 == 0 goto label3", "r19 = org eclipse debug internal core launch manager r0", "$ r12 = r19 f active mode", "$ r13 = r4 get identifier", "$ r12 add $ r13", "label i3 = i3 + 1", "label if i3 < i1 goto label2", "i2 = i2 + 1", "label if i2 < i0 goto label1", "label r20 = org eclipse debug internal core launch manager r0", "$ r7 = r20 f active mode", "$ z0 = $ r7 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "entermonitor r0", "label r13 = org eclipse debug internal core output stream monitor r0", "$ r3 = r13 f thread", "if $ r3 ! = null goto label2", "r14 = org eclipse debug internal core output stream monitor r0", "$ r4 = r14 f do", "$ r4 set 0", "r12 = new java lang thread", "r15 = org eclipse debug internal core output stream monitor r0", "$ r6 = output stream monitor $ read__1 bootstrap $ r15", "$ r7 = org eclipse debug internal core debug core message output stream monitor_label", "specialinvoke r12 < init > $ r6 $ r7", "r16 = org eclipse debug internal core output stream monitor r0", "r16 f thread = r12", "r17 = org eclipse debug internal core output stream monitor r0", "$ r8 = r17 f thread", "$ r8 set daemon 1", "r18 = org eclipse debug internal core output stream monitor r0", "$ r9 = r18 f thread", "$ r9 set priority 1", "r19 = org eclipse debug internal core output stream monitor r0", "$ r10 = r19 f thread", "$ r10 start", "label exitmonitor r0", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "$ r2 = org eclipse debug internal core preference contexts", "$ r3 = $ r2 [ 1 ]", "$ r4 = $ r3 get node r0", "$ r4 remove r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org eclipse debug internal core x m l memento r0", "$ r3 = r9 factory", "r2 = $ r3 create element r1", "r10 = org eclipse debug internal core x m l memento r0", "$ r4 = r10 element", "$ r4 append child r2", "r8 = new org eclipse debug internal core x m l memento", "r11 = org eclipse debug internal core x m l memento r0", "$ r7 = r11 factory", "specialinvoke r8 < init > $ r7 r2", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org osgi service application application admin permission r0", "$ r1 = r2 action", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org osgi service application application descriptor r0", "r2 = r13 get property specific r1", "$ r5 = r2 remove \\ `` application locked\\ ``", "r3 = java lang boolean $ r5", "r14 = org osgi service application application descriptor r0", "$ r6 = r14 lock", "entermonitor $ r6", "label if r3 == null goto label3", "$ z1 = r3 boolean value", "r15 = org osgi service application application descriptor r0", "$ r10 = r15 lock", "$ z2 = $ r10 [ 0 ]", "if $ z1 == $ z2 goto label3", "r16 = org osgi service application application descriptor r0", "$ r11 = r16 lock", "$ z3 = $ r11 [ 0 ]", "if $ z3 == 0 goto label2", "r17 = org osgi service application application descriptor r0", "r17 lock specific", "goto label3", "label exitmonitor $ r6", "label goto label7", "label r19 = org osgi service application application descriptor r0", "$ r7 = r19 lock", "$ z0 = $ r7 [ 0 ]", "$ r8 = java lang boolean value of $ z0", "r2 put \\ `` application locked\\", "return r2", "if $ z3 == 0 goto label2", "label r18 = org osgi service application application descriptor r0", "r18 unlock specific"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse core internal runtime activator r0", "r2 = r5 get bundle admin", "if r2 ! = null goto label1", "$ r4 = newarray org osgi framework bundle [ 0 ]", "return $ r4", "if r2 ! = null goto label1", "label $ r3 = r2 get fragment r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["$ r0 = org eclipse core internal runtime meta data keeper meta area", "if $ r0 == null goto label1", "$ r3 = org eclipse core internal runtime meta data keeper meta area", "return $ r3", "if $ r0 == null goto label1", "label $ r1 = new org eclipse core internal runtime data area", "specialinvoke $ r1 < init >", "org eclipse core internal runtime meta data keeper meta area = $ r1", "$ r2 = org eclipse core internal runtime meta data keeper meta area", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org eclipse core internal runtime runtime log log listener", "entermonitor $ r2", "label $ r3 = org eclipse core internal runtime runtime log log listener", "$ z0 = $ r3 contain r0", "exitmonitor $ r2", "label return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse core internal runtime find support find r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org eclipse core internal runtime activator get u r l converter r0", "if r1 ! = null goto label1", "$ r2 = r0", "goto label2", "label return $ r2", "if r1 ! = null goto label1", "label $ r2 = r1 resolve r0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core runtime listener list r0", "$ r1 = r2 listener", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z2 = 1", "goto label2", "label org eclipse core runtime assert be legal $ z2", "$ z1 = r1 be multi status", "if $ z1 ! = 0 goto label3", "r2 = org eclipse core runtime multi status r0", "r2 add r1", "goto label4", "label return", "if $ z1 ! = 0 goto label3", "label r3 = org eclipse core runtime multi status r0", "r3 add all r1", "if r1 == null goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse core runtime plugin version identifier r0", "$ r1 = r3 version", "$ r2 = $ r1 get qualifier", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse core runtime progress monitor wrapper r0", "$ r1 = r2 progress monitor", "$ r1 clear block", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse core runtime assert be not null r0", "label $ r2 = r0 run with result", "label return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse core runtime status r0", "r1 code = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 < = 0 goto label1", "$ z1 = 1", "goto label2", "label org eclipse core runtime assert be legal $ z1", "r2 = org eclipse core runtime status r0", "r2 plugin id = r1", "return", "if $ i0 < = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse core runtime registry factory get registry", "$ r1 remove listener r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org eclipse core internal registry extension registry r0", "$ r3 = r8 access", "$ r3 enter write", "label $ r4 = org eclipse core internal registry combine event delta record removal", "r9 = org eclipse core internal registry extension registry r0", "r9 event delta = $ r4", "r10 = org eclipse core internal registry extension registry r0", "r10 basic remove r1", "r11 = org eclipse core internal registry extension registry r0", "r11 fire registry change event", "r12 = org eclipse core internal registry extension registry r0", "r12 event delta = null", "goto label3", "label r14 = org eclipse core internal registry extension registry r0", "$ r5 = r14 access", "$ r5 exit write", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org eclipse core internal registry reference map r0", "r2 purge", "r3 = org eclipse core internal registry reference map r0", "$ r1 = r3 do remove i0 0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core internal registry registry timestamp r0", "r1 aggregate timestamp = 0l", "r2 = org eclipse core internal registry registry timestamp r0", "r2 modify = 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse core internal registry registry timestamp r0", "$ z0 = r1 modify", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = org eclipse core internal registry registry provider factory get default", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r1 = r0 get registry", "return $ r1"], "adj": [[1], [2], [], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse jdt core compiler char operation no_strings", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r2 = @ parameter0", "c0 = @ parameter1", "if r2 ! = null goto label1", "$ r1 = newarray char [ 1 ]", "$ r1 [ 0 ] = c0", "return $ r1", "if r2 ! = null goto label1", "label i1 = lengthof r2", "$ i2 = i1 + 1", "$ r0 = newarray char [ $ i2 ]", "java lang system arraycopy r2 0 $ r0 0 i1", "$ r0 [ i1 ] = c0", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "return r0", "if r1 ! = null goto label1", "label if r0 ! = null goto label2", "$ r3 = newarray char [ ] [ 1 ]", "$ r3 [ 0 ] = r1", "return $ r3", "label if r0 ! = null goto label2", "label i0 = lengthof r0", "$ i1 = i0 + 1", "r2 = newarray char [ ] [ $ i1 ]", "java lang system arraycopy r0 0 r2 0 i0", "r2 [ i0 ] = r1", "return r2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["c0 = @ parameter0", "r0 = @ parameter1", "c1 = @ parameter2", "if r0 ! = null goto label1", "$ r2 = newarray char [ 2 ]", "$ r2 [ 0 ] = c0", "$ r2 [ 1 ] = c1", "return $ r2", "if r0 ! = null goto label1", "label i2 = lengthof r0", "$ i3 = i2 + 2", "r1 = newarray char [ $ i3 ]", "r1 [ 0 ] = c0", "java lang system arraycopy r0 0 r1 1 i2", "$ i4 = i2 + 1", "r1 [ $ i4 ] = c1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["c0 = @ parameter0", "if c0 > = 128 goto label1", "$ r0 = org eclipse jdt internal compiler parser scanner helper obvious_ident_char_natures", "$ i1 = $ r0 [ c0 ]", "$ i2 = $ i1 & 256", "if $ i2 == 0 goto label1", "return 1", "if $ i2 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["c0 = @ parameter0", "r0 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "i4 = i1", "goto label3", "label if i4 < i2 goto label1", "label $ c3 = r0 [ i4 ]", "if c0 ! = $ c3 goto label2", "return i4", "if c0 ! = $ c3 goto label2", "label i4 = i4 + 1", "label if i4 < i2 goto label1", "return -1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core compiler reconcile context r0", "$ r1 = r2 operation", "$ z0 = $ r1 resolve binding", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jdt core compiler reconcile context r0", "$ r1 = r4 operation", "$ r2 = $ r1 delta builder", "$ r3 = $ r2 delta", "r5 = org eclipse jdt core i java element delta $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org eclipse jdt core compiler reconcile context r0", "$ r2 = r8 operation", "$ r3 = $ r2 problem", "if $ r3 ! = null goto label1", "return null", "if $ r3 ! = null goto label1", "label r9 = org eclipse jdt core compiler reconcile context r0", "$ r4 = r9 operation", "$ r5 = $ r4 problem", "$ r6 = $ r5 get r1", "$ r7 = org eclipse jdt core compiler categorize problem [ ] $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "if r3 ! = null goto label1", "r7 = new java lang illegal argument exception", "$ r6 = org eclipse jdt internal core util message correction_null unit", "specialinvoke r7 < init > $ r6", "throw r7", "if r3 ! = null goto label1", "label $ i0 = r1 get i d", "$ i1 = r1 get source start", "$ i2 = r1 get source end", "$ r4 = r1 get argument", "r8 = org eclipse jdt core correction engine r0", "r8 compute correction r2 $ i0 $ i1 $ i2 $ r4 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["$ r0 = org eclipse jdt internal compiler impl compiler option warn token", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom abstract type declaration r0", "r1 = r2 get parent", "$ z0 = r1 instanceof org eclipse jdt core dom compilation unit", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom annotation type member declaration r0", "$ r1 = r2 optional default value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jdt core dom annotation type member declaration r0", "$ r1 = r4 ast", "$ r2 = $ r1 get bind resolver", "r5 = org eclipse jdt core dom annotation type member declaration r0", "$ r3 = $ r2 resolve member r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom break statement r0", "$ r1 = r2 optional label", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom cast expression r0", "r2 = r7 type", "$ r3 = org eclipse jdt core dom cast expression type_property", "r8 = org eclipse jdt core dom cast expression r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom cast expression r0", "r11 type = r1", "$ r4 = org eclipse jdt core dom cast expression type_property", "r12 = org eclipse jdt core dom cast expression r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom compilation unit r0", "$ r2 = r5 ast", "$ r3 = $ r2 get bind resolver", "$ r4 = $ r3 find declare node r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom conditional expression r0", "r2 = r7 else expression", "$ r3 = org eclipse jdt core dom conditional expression else_expression_property", "r8 = org eclipse jdt core dom conditional expression r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom conditional expression r0", "r11 else expression = r1", "$ r4 = org eclipse jdt core dom conditional expression else_expression_property", "r12 = org eclipse jdt core dom conditional expression r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom continue statement r0", "$ r1 = r2 optional label", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom enhance for statement r0", "r2 = r7 expression", "$ r3 = org eclipse jdt core dom enhance for statement expression_property", "r8 = org eclipse jdt core dom enhance for statement r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom enhance for statement r0", "r11 expression = r1", "$ r4 = org eclipse jdt core dom enhance for statement expression_property", "r12 = org eclipse jdt core dom enhance for statement r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom field access r0", "r2 = r7 field name", "$ r3 = org eclipse jdt core dom field access name_property", "r8 = org eclipse jdt core dom field access r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom field access r0", "r11 field name = r1", "$ r4 = org eclipse jdt core dom field access name_property", "r12 = org eclipse jdt core dom field access r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom if statement r0", "$ r1 = r2 optional else statement", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom if statement r0", "r2 = r5 optional else statement", "$ r3 = org eclipse jdt core dom if statement else_statement_property", "r6 = org eclipse jdt core dom if statement r0", "r7 = org eclipse jdt core dom a s t node r2", "r8 = org eclipse jdt core dom a s t node r1", "r6 pre replace child r7 r8 $ r3", "r9 = org eclipse jdt core dom if statement r0", "r9 optional else statement = r1", "$ r4 = org eclipse jdt core dom if statement else_statement_property", "r10 = org eclipse jdt core dom if statement r0", "r11 = org eclipse jdt core dom a s t node r2", "r12 = org eclipse jdt core dom a s t node r1", "r10 post replace child r11 r12 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jdt core dom import declaration r0", "$ r1 = r4 ast", "$ r2 = $ r1 get bind resolver", "r5 = org eclipse jdt core dom import declaration r0", "$ r3 = $ r2 resolve import r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init >", "throw r5", "if r1 ! = null goto label1", "label $ r2 = org eclipse jdt core dom infix expression operator_property", "r6 = org eclipse jdt core dom infix expression r0", "r6 pre value change $ r2", "r7 = org eclipse jdt core dom infix expression r0", "r7 operator = r1", "$ r3 = org eclipse jdt core dom infix expression operator_property", "r8 = org eclipse jdt core dom infix expression r0", "r8 post value change $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom label statement r0", "r2 = r7 body", "$ r3 = org eclipse jdt core dom label statement body_property", "r8 = org eclipse jdt core dom label statement r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom label statement r0", "r11 body = r1", "$ r4 = org eclipse jdt core dom label statement body_property", "r12 = org eclipse jdt core dom label statement r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom member ref r0", "r2 = r5 optional qualifier", "$ r3 = org eclipse jdt core dom member ref qualifier_property", "r6 = org eclipse jdt core dom member ref r0", "r7 = org eclipse jdt core dom a s t node r2", "r8 = org eclipse jdt core dom a s t node r1", "r6 pre replace child r7 r8 $ r3", "r9 = org eclipse jdt core dom member ref r0", "r9 optional qualifier = r1", "$ r4 = org eclipse jdt core dom member ref qualifier_property", "r10 = org eclipse jdt core dom member ref r0", "r11 = org eclipse jdt core dom a s t node r2", "r12 = org eclipse jdt core dom a s t node r1", "r10 post replace child r11 r12 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom method declaration r0", "r5 unsupported in2_3_4", "r6 = org eclipse jdt core dom method declaration r0", "r2 = r6 optional receiver qualifier", "$ r3 = org eclipse jdt core dom method declaration receiver_qualifier_property", "r7 = org eclipse jdt core dom method declaration r0", "r8 = org eclipse jdt core dom a s t node r2", "r9 = org eclipse jdt core dom a s t node r1", "r7 pre replace child r8 r9 $ r3", "r10 = org eclipse jdt core dom method declaration r0", "r10 optional receiver qualifier = r1", "$ r4 = org eclipse jdt core dom method declaration receiver_qualifier_property", "r11 = org eclipse jdt core dom method declaration r0", "r12 = org eclipse jdt core dom a s t node r2", "r13 = org eclipse jdt core dom a s t node r1", "r11 post replace child r12 r13 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt core dom modifier r0", "$ r2 = r3 modifier keyword", "$ r1 = org eclipse jdt core dom modifier $ modifier keyword protected_keyword", "if $ r2 ! = $ r1 goto label1", "return 1", "if $ r2 ! = $ r1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt core dom modifier r0", "$ r2 = r3 modifier keyword", "$ r1 = org eclipse jdt core dom modifier $ modifier keyword synchronized_keyword", "if $ r2 ! = $ r1 goto label1", "return 1", "if $ r2 ! = $ r1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom module declaration r0", "$ r1 = r2 module statement", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt core dom module modifier r0", "$ r2 = r3 modifier keyword", "$ r1 = org eclipse jdt core dom module modifier $ module modifier keyword transitive_keyword", "if $ r2 ! = $ r1 goto label1", "return 1", "if $ r2 ! = $ r1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt core dom module qualify name r0", "r2 = r5 name", "$ r3 = org eclipse jdt core dom module qualify name name_property", "r6 = org eclipse jdt core dom module qualify name r0", "r7 = org eclipse jdt core dom a s t node r2", "r8 = org eclipse jdt core dom a s t node r1", "r6 pre replace child r7 r8 $ r3", "r9 = org eclipse jdt core dom module qualify name r0", "r9 name = r1", "$ r4 = org eclipse jdt core dom module qualify name name_property", "r10 = org eclipse jdt core dom module qualify name r0", "r11 = org eclipse jdt core dom a s t node r2", "r12 = org eclipse jdt core dom a s t node r1", "r10 post replace child r11 r12 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "$ z0 = r0 instanceof org eclipse jdt core dom qualify name", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom node finder r0", "$ r1 = r2 f cover node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom node finder r0", "$ r1 = r2 f cover node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom parenthesized expression r0", "r2 = r7 expression", "$ r3 = org eclipse jdt core dom parenthesized expression expression_property", "r8 = org eclipse jdt core dom parenthesized expression r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom parenthesized expression r0", "r11 expression = r1", "$ r4 = org eclipse jdt core dom parenthesized expression expression_property", "r12 = org eclipse jdt core dom parenthesized expression r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom prefix expression r0", "r2 = r7 operand", "$ r3 = org eclipse jdt core dom prefix expression operand_property", "r8 = org eclipse jdt core dom prefix expression r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom prefix expression r0", "r11 operand = r1", "$ r4 = org eclipse jdt core dom prefix expression operand_property", "r12 = org eclipse jdt core dom prefix expression r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom record declaration r0", "$ r1 = r2 super interface type", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom single member annotation r0", "r2 = r7 value", "$ r3 = org eclipse jdt core dom single member annotation value_property", "r8 = org eclipse jdt core dom single member annotation r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom single member annotation r0", "r11 value = r1", "$ r4 = org eclipse jdt core dom single member annotation value_property", "r12 = org eclipse jdt core dom single member annotation r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt core dom single variable declaration r0", "$ r1 = r3 varargs annotation", "if $ r1 ! = null goto label1", "r4 = org eclipse jdt core dom single variable declaration r0", "r4 unsupported in2_3_4", "label r5 = org eclipse jdt core dom single variable declaration r0", "$ r2 = r5 varargs annotation", "r6 = java util list $ r2", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom text element r0", "$ r1 = r2 text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ z0 = r0 instanceof org eclipse jdt core dom wildcard type", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom type declaration r0", "$ r1 = r2 internal get superclass", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org eclipse jdt core dom type method reference r0", "r2 = r7 type", "$ r3 = org eclipse jdt core dom type method reference type_property", "r8 = org eclipse jdt core dom type method reference r0", "r9 = org eclipse jdt core dom a s t node r2", "r10 = org eclipse jdt core dom a s t node r1", "r8 pre replace child r9 r10 $ r3", "r11 = org eclipse jdt core dom type method reference r0", "r11 type = r1", "$ r4 = org eclipse jdt core dom type method reference type_property", "r12 = org eclipse jdt core dom type method reference r0", "r13 = org eclipse jdt core dom a s t node r2", "r14 = org eclipse jdt core dom a s t node r1", "r12 post replace child r13 r14 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core dom union type r0", "$ r1 = r2 type", "r3 = java util list $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 16", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 4096", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 64", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse jdt core java convention validate identifier r0 \\ `` 1 3\\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "z0 = @ parameter3", "r2 = @ parameter4", "if z0 == 0 goto label2", "$ i2 = org eclipse jdt core naming convention get field variable kind i0", "r13 = org eclipse jdt internal core internal naming convention get base name $ i2 r0 r1 0", "$ r7 = org eclipse jdt core naming convention getter_bool_name", "i1 = lengthof $ r7", "$ r8 = org eclipse jdt core naming convention getter_bool_name", "$ z1 = org eclipse jdt core compiler char operation prefix equal $ r8 r13", "if $ z1 == 0 goto label1", "$ i3 = lengthof r13", "if $ i3 < = i1 goto label1", "$ c4 = r13 [ i1 ]", "$ z2 = org eclipse jdt internal compiler parser scanner helper be upper case $ c4", "if $ z2 == 0 goto label1", "$ i5 = lengthof r13", "r14 = org eclipse jdt core compiler char operation subarray r13 i1 $ i5", "$ r9 = org eclipse jdt core naming convention setter_name", "$ r10 = org eclipse jdt core naming convention suggest accessor name r0 r14 i0", "$ r11 = org eclipse jdt core compiler char operation concat $ r9 $ r10", "$ r12 = org eclipse jdt core naming convention suggest new name $ r11 r2", "return $ r12", "if $ z2 == 0 goto label1", "label $ r15 = org eclipse jdt core naming convention setter_name", "$ r16 = org eclipse jdt core naming convention suggest accessor name r0 r1 i0", "$ r17 = org eclipse jdt core compiler char operation concat $ r15 $ r16", "$ r18 = org eclipse jdt core naming convention suggest new name $ r17 r2", "return $ r18", "if z0 == 0 goto label2", "label $ r3 = org eclipse jdt core naming convention setter_name", "$ r4 = org eclipse jdt core naming convention suggest accessor name r0 r1 i0", "$ r5 = org eclipse jdt core compiler char operation concat $ r3 $ r4", "$ r6 = org eclipse jdt core naming convention suggest new name $ r5 r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core search search document r0", "$ r1 = r2 document path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "label $ r6 = org eclipse jdt core search search engine $ search pattern adapter r2", "$ r8 = $ r6 pattern", "$ r7 = newarray org eclipse jdt core search search participant [ 1 ]", "$ r9 = org eclipse jdt core search search engine get default search participant", "$ r7 [ 0 ] = $ r9", "r15 = new org eclipse jdt core search search engine $ result collector adapter", "specialinvoke r15 < init > r4", "$ r11 = r4 get progress monitor", "r17 = org eclipse jdt core search search engine r0", "r18 = org eclipse jdt core search search requestor r15", "r17 search $ r8 $ r7 r3 r18 $ r11", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = new org eclipse jdt internal core search match declaration of referenced method pattern", "specialinvoke r9 < init > r2", "r11 = org eclipse jdt core search search engine r0", "$ r7 = r11 basic engine", "r10 = new org eclipse jdt core search search engine $ result collector adapter", "specialinvoke r10 < init > r3", "$ r8 = r3 get progress monitor", "r12 = org eclipse jdt core search search requestor r10", "r13 = org eclipse jdt core search search pattern r9", "$ r7 search declaration r2 r12 r13 $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r7 = org eclipse jdt core search type name match r0", "$ r2 = r7 get type", "r1 = $ r2 get declare type", "if r1 == null goto label1", "$ r6 = r1 get fully qualify name 46", "return $ r6", "if r1 == null goto label1", "label r8 = org eclipse jdt core search type name match r0", "$ r3 = r8 get type", "$ r4 = $ r3 get package fragment", "$ r5 = $ r4 get element name", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 resolve r1", "r2 = org eclipse jdt internal codeassist complete completion javadoc r0", "r3 = org eclipse jdt internal compiler lookup scope r1", "r2 internal resolve r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jdt internal codeassist thrown exception finder r0", "$ r2 = r4 catch exception", "$ i0 = $ r2 element size", "r1 = newarray org eclipse jdt internal compiler lookup reference bind [ $ i0 ]", "r5 = org eclipse jdt internal codeassist thrown exception finder r0", "$ r3 = r5 catch exception", "$ r3 a array r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org eclipse jdt internal compiler lookup reference bind", "if $ z0 == 0 goto label1", "$ r1 = org eclipse jdt internal compiler lookup reference bind r0", "$ z1 = $ r1 have type bit 3", "if $ z1 == 0 goto label1", "return 1", "if $ z1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = r0", "label r7 = org eclipse jdt internal compiler ast fake track variable r6", "$ r3 = r7 bind", "r1 mark a definitely non null $ r3", "r8 = org eclipse jdt internal compiler ast fake track variable r6", "$ i0 = r8 global closing state", "$ i1 = $ i0 | 1", "r9 = org eclipse jdt internal compiler ast fake track variable r6", "r9 global closing state = $ i1", "r10 = org eclipse jdt internal compiler ast fake track variable r6", "$ r4 = r10 bind", "r2 mark finally null status $ r4 4", "r11 = org eclipse jdt internal compiler ast fake track variable r6", "r6 = r11 inner tracker", "if r6 ! = null goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal compiler ast fake track variable r0", "$ i0 = r1 global closing state", "$ i1 = $ i0 | 8", "r2 = org eclipse jdt internal compiler ast fake track variable r0", "r2 global closing state = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal compiler ast do statement r0", "$ r1 = r2 action", "$ z0 = $ r1 continue at outer label", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ z0 = r3 be empty", "if $ z0 == 0 goto label1", "r4 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ l2 = r4 match", "r5 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ i1 = r5 path ptr", "r6 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ r2 = r6 restrict $ l2 $ i1", "r7 = org eclipse jdt internal compiler env i type annotation walker $ r2", "return r7", "if $ z0 == 0 goto label1", "label $ r1 = specialinvoke r0 to next detail i0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r13 = org eclipse jdt internal compiler codegen constant pool r0", "r13 current index = i0", "r14 = org eclipse jdt internal compiler codegen constant pool r0", "r14 current offset = i1", "r15 = org eclipse jdt internal compiler codegen constant pool r0", "$ r2 = r15 u t f8 cache", "$ r1 = org eclipse jdt internal compiler codegen attribute name constant code name", "$ i2 = $ r2 get $ r1", "if $ i2 < i0 goto label1", "r16 = org eclipse jdt internal compiler codegen constant pool r0", "$ r12 = r16 u t f8 cache", "$ r11 = org eclipse jdt internal compiler codegen attribute name constant code name", "$ r12 remove $ r11", "label r17 = org eclipse jdt internal compiler codegen constant pool r0", "$ r4 = r17 u t f8 cache", "$ r3 = org eclipse jdt internal compiler codegen constant pool clinit signature", "$ i3 = $ r4 get $ r3", "if $ i3 < i0 goto label2", "r18 = org eclipse jdt internal compiler codegen constant pool r0", "$ r10 = r18 u t f8 cache", "$ r9 = org eclipse jdt internal compiler codegen constant pool clinit signature", "$ r10 remove $ r9", "label r19 = org eclipse jdt internal compiler codegen constant pool r0", "$ r6 = r19 u t f8 cache", "$ r5 = org eclipse jdt internal compiler codegen constant pool clinit", "$ i4 = $ r6 get $ r5", "if $ i4 < i0 goto label3", "r20 = org eclipse jdt internal compiler codegen constant pool r0", "$ r8 = r20 u t f8 cache", "$ r7 = org eclipse jdt internal compiler codegen constant pool clinit", "$ r8 remove $ r7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 consume package declaration name", "r8 = org eclipse jdt internal compiler document element parser r0", "$ r2 = r8 compilation unit", "r1 = $ r2 current package", "r9 = org eclipse jdt internal compiler document element parser r0", "$ r3 = r9 requestor", "$ i2 = r1 declaration source start", "$ i3 = r1 declaration source end", "r10 = org eclipse jdt internal compiler document element parser r0", "$ r4 = r10 int array stack", "r11 = org eclipse jdt internal compiler document element parser r0", "$ i0 = r11 int array ptr", "$ i1 = $ i0 - 1", "r12 = org eclipse jdt internal compiler document element parser r0", "r12 int array ptr = $ i1", "$ r5 = $ r4 [ $ i0 ]", "$ r6 = r1 get import name", "$ r7 = org eclipse jdt core compiler char operation concat with $ r6 46", "$ i4 = r1 source start", "$ r3 accept package $ i2 $ i3 $ r5 $ r7 $ i4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal compiler env name environment answer r0", "$ r1 = r2 compilation unit", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal compiler env name environment answer r0", "$ r1 = r2 bind", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label i3 = 0", "goto label4", "label if i3 < 3 goto label2", "label r4 = org eclipse jdt internal compiler impl irritant set r0", "$ r2 = r4 bit", "$ i1 = $ r2 [ i3 ]", "$ r3 = r1 bit", "$ i0 = $ r3 [ i3 ]", "$ i2 = $ i1 & $ i0", "if $ i2 == 0 goto label3", "return 1", "if $ i2 == 0 goto label3", "label i3 = i3 + 1"], "adj": [[1], [2], [3], [], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt internal compiler lookup field bind r0", "$ i0 = r3 modifier", "$ i1 = $ i0 & 1073741824", "if $ i1 ! = 0 goto label1", "return null", "if $ i1 ! = 0 goto label1", "label r4 = org eclipse jdt internal compiler lookup field bind r0", "$ r1 = r4 type", "$ r2 = $ r1 generic type signature", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal compiler lookup method bind r0", "$ i0 = r1 modifier", "$ i1 = $ i0 & 16", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal compiler lookup method bind r0", "$ r1 = r2 original", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal compiler lookup variable binding r0", "$ r1 = r2 constant", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r9 = org eclipse jdt internal compiler parser recover block r0", "$ r3 = r9 parent", "if $ r3 == null goto label1", "r10 = org eclipse jdt internal compiler parser recover block r0", "$ r4 = r10 parent", "$ z0 = $ r4 instanceof org eclipse jdt internal compiler parser recover method", "if $ z0 == 0 goto label1", "r11 = org eclipse jdt internal compiler parser recover block r0", "$ r5 = r11 parent", "r2 = org eclipse jdt internal compiler parser recover method $ r5", "$ r6 = r2 method body", "if $ r6 ! = r0 goto label1", "$ r7 = r2 parent", "if $ r7 ! = null goto label1", "r12 = org eclipse jdt internal compiler parser recover block r0", "r12 reset pending modifier", "r13 = org eclipse jdt internal compiler parser recover element r0", "return r13", "if $ r7 ! = null goto label1", "label $ r8 = specialinvoke r0 add r1 i0", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = r0", "goto label3", "label if r2 ! = null goto label1", "label $ z0 = r2 instanceof org eclipse jdt internal compiler parser recover initializer", "if $ z0 == 0 goto label2", "$ r1 = org eclipse jdt internal compiler parser recover initializer r2", "return $ r1", "if $ z0 == 0 goto label2", "label r3 = org eclipse jdt internal compiler parser recover element r2", "r2 = r3 parent", "label if r2 ! = null goto label1", "return null"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt internal core annotatable info r0", "r1 name end = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jdt internal core builder build notifier r0", "$ r1 = r5 monitor", "if $ r1 == null goto label1", "r6 = org eclipse jdt internal core builder build notifier r0", "$ r2 = r6 monitor", "$ z0 = $ r2 be cancel", "if $ z0 == 0 goto label1", "r4 = new org eclipse core runtime operation cancel exception", "specialinvoke r4 < init >", "r7 = java lang throwable r4", "throw r7", "if $ z0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util locale get default", "$ r2 = org eclipse jdt internal core builder problem factory get problem factory $ r1", "r3 = org eclipse jdt internal compiler i problem factory $ r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r21 = org eclipse jdt internal core javadoc content r0", "$ r3 = r21 content", "if $ r3 ! = null goto label01", "return null", "if $ r3 ! = null goto label01", "label r16 = null", "entermonitor r0", "label r22 = org eclipse jdt internal core javadoc content r0", "$ r5 = r22 method doc range", "if $ r5 ! = null goto label03", "r17 = new org eclipse jdt internal compiler util hashtable of object to int array", "specialinvoke r17 < init >", "r23 = org eclipse jdt internal core javadoc content r0", "r23 method doc range = r17", "goto label04", "label if r16 ! = null goto label05", "r25 = org eclipse jdt internal core javadoc content r0", "r16 = r25 compute method range r1", "r26 = org eclipse jdt internal core javadoc content r0", "$ r12 = r26 method doc range", "$ r12 put r1 r16", "label exitmonitor r0", "label goto label09", "label if r16 == null goto label11", "$ r7 = org eclipse jdt internal core javadoc content unknown_format", "if r16 ! = $ r7 goto label10", "r19 = new org eclipse jdt core java model exception", "r18 = new org eclipse jdt internal core java model status", "r27 = org eclipse jdt core i java element r1", "specialinvoke r18 < init > 1009 r27", "r28 = org eclipse jdt core i java model status r18", "specialinvoke r19 < init > r28", "r29 = java lang throwable r19", "throw r29", "if r16 ! = $ r7 goto label10", "label r20 = new java lang string", "r30 = org eclipse jdt internal core javadoc content r0", "$ r9 = r30 content", "$ i3 = r16 [ 0 ]", "$ i1 = r16 [ 1 ]", "$ i0 = r16 [ 0 ]", "$ i2 = $ i1 - $ i0", "specialinvoke r20 < init > $ r9 $ i3 $ i2", "return r20", "label if r16 == null goto label11", "label return null", "if $ r5 ! = null goto label03", "label r24 = org eclipse jdt internal core javadoc content r0", "$ r6 = r24 method doc range", "r16 = $ r6 get r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt internal core jdom d o m builder r0", "$ z0 = r2 f building single member", "if $ z0 == 0 goto label1", "r3 = org eclipse jdt internal core jdom d o m builder r0", "$ z1 = r3 f finish single member", "if $ z1 == 0 goto label1", "return", "if $ z1 == 0 goto label1", "label r4 = org eclipse jdt internal core jdom d o m builder r0", "r4 f abort = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r4 = org eclipse jdt internal core jdom d o m builder r0", "$ r2 = r4 f stack", "$ r3 = $ r2 pop", "r1 = org eclipse jdt internal core jdom d o m method $ r3", "r1 set source range end i1", "$ i2 = i0 + 1", "r1 set body range end $ i2", "r5 = org eclipse jdt internal core jdom d o m builder r0", "r6 = org eclipse jdt internal core jdom d o m node r1", "r5 f node = r6", "r7 = org eclipse jdt internal core jdom d o m builder r0", "$ z0 = r7 f building single member", "if $ z0 == 0 goto label1", "r8 = org eclipse jdt internal core jdom d o m builder r0", "r8 f finish single member = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = org eclipse jdt internal core jdom d o m builder r0", "r1 exit type i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r21 = org eclipse jdt internal core jdom d o m field r0", "$ z0 = r21 be detailed", "if $ z0 ! = 0 goto label8", "r22 = org eclipse jdt internal core jdom d o m field r0", "$ z1 = r22 be variable declarator", "if $ z1 ! = 0 goto label1", "r23 = org eclipse jdt internal core jdom d o m field r0", "$ z2 = r23 have multiple variable declarators", "if $ z2 == 0 goto label7", "label r24 = org eclipse jdt internal core jdom d o m field r0", "r1 = r24 get first field declaration", "r25 = org eclipse jdt internal core jdom d o m field r0", "r2 = r25 get last field declaration", "r15 = r1", "r26 = org eclipse jdt internal core jdom d o m node r1", "r16 = r26 get content", "goto label3", "label if r15 ! = r2 goto label2", "label r27 = org eclipse jdt internal core jdom d o m node r15", "r15 = r27 f next node", "r18 = new java lang string builder", "$ r6 = java lang string value of r16", "specialinvoke r18 < init > $ r6", "r28 = org eclipse jdt internal core jdom d o m node r15", "$ r7 = r28 get content", "$ r8 = r18 append $ r7", "r16 = $ r8 to string", "label if r15 ! = r2 goto label2", "r19 = new org eclipse jdt internal core jdom d o m builder", "specialinvoke r19 < init >", "$ r10 = r16 to char array", "r4 = r19 create field $ r10", "$ i0 = lengthof r4", "if $ i0 ! = 0 goto label4", "r20 = new org eclipse jdt core jdom d o m exception", "$ r14 = org eclipse jdt internal core util message dom_cannot detail", "specialinvoke r20 < init > $ r14", "r29 = java lang throwable r20", "throw r29", "if $ i0 ! = 0 goto label4", "label r17 = r0", "i2 = 0", "goto label6", "label $ i1 = lengthof r4", "if i2 < $ i1 goto label5", "label $ r11 = r4 [ i2 ]", "$ r12 = org eclipse jdt internal core jdom d o m node $ r11", "r30 = org eclipse jdt internal core jdom d o m node r17", "r30 share content $ r12", "r31 = org eclipse jdt internal core jdom d o m node r17", "r17 = r31 f next node", "i2 = i2 + 1", "if i2 < $ i1 goto label5", "goto label8", "label return", "if $ z2 == 0 goto label7", "label specialinvoke r0 become detail"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jdt internal core jdom d o m method r0", "r1 set mask 1024 z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jdt internal core l r u cache enumerator r0", "$ r2 = r5 element queue", "r1 = $ r2 value", "r6 = org eclipse jdt internal core l r u cache enumerator r0", "$ r3 = r6 element queue", "$ r4 = $ r3 next", "r7 = org eclipse jdt internal core l r u cache enumerator r0", "r7 element queue = $ r4", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r21 = new org eclipse jdt internal compiler util simple set", "specialinvoke r21 < init >", "$ z0 = org eclipse jdt internal core search index index manager disable_meta_index", "if $ z0 ! = 0 goto label1", "r22 = new org eclipse core runtime path", "specialinvoke r22 < init > \\ `` meta_index\\ ``", "r24 = org eclipse jdt internal core search index index manager r0", "r25 = org eclipse core runtime i path r22", "$ r16 = r24 compute index location r25", "r21 add $ r16", "label r2 = org eclipse jdt internal core search basic search engine create workspace scope", "r23 = new org eclipse jdt internal core search pattern search job", "$ r8 = org eclipse jdt core search search engine get default search participant", "specialinvoke r23 < init > null $ r8 r2 null", "r4 = r23 get index null", "i3 = 0", "i4 = lengthof r4", "goto label3", "label if i3 < i4 goto label2", "label $ r9 = r4 [ i3 ]", "r18 = $ r9 get index location", "r21 add r18", "i3 = i3 + 1", "label if i3 < i4 goto label2", "r26 = org eclipse jdt internal core search index index manager r0", "$ r11 = r26 index state", "if $ r11 == null goto label7", "r27 = org eclipse jdt internal core search index index manager r0", "$ r12 = r27 index state", "r19 = $ r12 key table", "r28 = org eclipse jdt internal core search index index manager r0", "$ r13 = r28 index state", "$ i1 = $ r13 element size", "r20 = newarray org eclipse jdt internal core index index location [ $ i1 ]", "i5 = 0", "i6 = 0", "i0 = lengthof r19", "goto label6", "label if i6 < i0 goto label4", "label $ r14 = r19 [ i6 ]", "r5 = org eclipse jdt internal core index index location $ r14", "if r5 == null goto label5", "$ z1 = r21 include r5", "if $ z1 ! = 0 goto label5", "$ i2 = i5", "i5 = i5 + 1", "r20 [ $ i2 ] = r5", "label i6 = i6 + 1", "label if i6 < i0 goto label4", "if i5 < = 0 goto label7", "r29 = org eclipse jdt internal core search index index manager r0", "r29 remove index state r20", "label r30 = org eclipse jdt internal core search index index manager r0", "r30 delete index file r21 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt internal core search java search type name match r0", "$ r1 = r3 type", "if $ r1 ! = null goto label1", "r4 = org eclipse jdt internal core search java search type name match r0", "$ i1 = r4 modifier", "return $ i1", "if $ r1 ! = null goto label1", "label r5 = org eclipse jdt internal core search java search type name match r0", "$ r2 = r5 type", "$ i0 = $ r2 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jdt internal core search match possible match r0", "$ r1 = r4 openable", "$ r2 = $ r1 get element name", "$ r3 = $ r2 to char array", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal core single type requestor r0", "r1 element = null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt internal core source field element info r0", "$ r1 = r3 type name", "$ r2 = org eclipse jdt core signature create type signature $ r1 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "$ r1 = newarray char [ 1 ]", "$ r1 [ 0 ] = c0", "r3 = org eclipse jdt internal core util char array buffer r0", "r3 append $ r1 0 1", "r4 = org eclipse jdt internal core util char array buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt internal core util constant pool entry r0", "r1 string index = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = org eclipse jdt internal eval code snippet scope r0", "r4 = r8 find field for code snippet r1 r2 r3", "if r4 ! = null goto label3", "r7 = new org eclipse jdt internal compiler lookup problem field bind", "$ z0 = r1 instanceof org eclipse jdt internal compiler lookup reference bind", "if $ z0 == 0 goto label1", "$ r6 = org eclipse jdt internal compiler lookup reference bind r1", "goto label2", "label specialinvoke r7 < init > $ r6 r2 1", "r9 = org eclipse jdt internal compiler lookup field bind r7", "return r9", "if $ z0 == 0 goto label1", "label $ r6 = null", "if r4 ! = null goto label3", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal eval global variable r0", "$ r1 = r2 type name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core manipulation change correction proposal core r0", "$ r1 = r2 f name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jdt core manipulation change correction proposal core r0", "r1 f relevance = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z0 = @ parameter3", "r3 = @ parameter4", "r4 = @ parameter5", "$ r5 = r0 get java project", "$ r6 = org eclipse jdt internal core manipulation stub utility get method body content z0 $ r5 r1 r2 r3 r4", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core manipulation organize import operation r0", "$ r1 = r2 f parse error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt core refactoring compilation unit change r0", "r2 f descriptor = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jdt core refactoring descriptor extract class descriptor r0", "$ r2 = r3 f argument", "org eclipse jdt internal core refactoring descriptor java refactoring descriptor util set string $ r2 \\ `` package name\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt core refactoring descriptor introduce parameter object descriptor r0", "$ z0 = r1 f delegate", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt core refactoring descriptor introduce parameter object descriptor r0", "$ z0 = r1 f deprecate delegate", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r2 = org eclipse jdt core refactoring descriptor move static member descriptor r0", "r2 f type = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jdt core refactoring descriptor move static member descriptor r0", "r1 f delegate = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r2 = org eclipse jdt core refactoring descriptor move static member descriptor r0", "r2 f member = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core refactoring participant change method signature argument r0", "$ r1 = r2 f new name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt core refactoring participant change method signature participant r0", "$ r1 = r2 f argument", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org eclipse jdt core dom infix expression", "if $ z0 == 0 goto label1", "$ r1 = org eclipse jdt core dom infix expression r0", "$ r2 = $ r1 get operator", "$ i0 = org eclipse jdt internal core manipulation dom operator precedence get operator precedence $ r2", "return $ i0", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof org eclipse jdt core dom assignment", "if $ z1 == 0 goto label2", "return 0", "if $ z1 == 0 goto label2", "label $ z2 = r0 instanceof org eclipse jdt core dom conditional expression", "if $ z2 == 0 goto label3", "return 1", "if $ z2 == 0 goto label3", "label $ z3 = r0 instanceof org eclipse jdt core dom instanceof expression", "if $ z3 == 0 goto label4", "return 8", "if $ z3 == 0 goto label4", "label $ z4 = r0 instanceof org eclipse jdt core dom cast expression", "if $ z4 == 0 goto label5", "return 12", "if $ z4 == 0 goto label5", "label $ z5 = r0 instanceof org eclipse jdt core dom prefix expression", "if $ z5 == 0 goto label6", "return 13", "if $ z5 == 0 goto label6", "label $ z6 = r0 instanceof org eclipse jdt core dom class instance creation", "if $ z6 ! = 0 goto label7", "$ z7 = r0 instanceof org eclipse jdt core dom field access", "if $ z7 ! = 0 goto label7", "$ z8 = r0 instanceof org eclipse jdt core dom method invocation", "if $ z8 ! = 0 goto label7", "$ z9 = r0 instanceof org eclipse jdt core dom array access", "if $ z9 ! = 0 goto label7", "$ z10 = r0 instanceof org eclipse jdt core dom postfix expression", "if $ z10 == 0 goto label8", "label return 14", "if $ z10 == 0 goto label8", "label return 2147483647"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], [13], [14], [], [16], [17], [18], [], [20], [21], [22], [], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get openable", "$ z0 = r1 instanceof org eclipse jdt core i type root", "if $ z0 == 0 goto label1", "r2 = r1 get buffer", "if r2 == null goto label1", "$ r3 = org eclipse jdt core i source reference r0", "$ r4 = $ r3 get source range", "i0 = $ r4 get offset", "$ r5 = r0 get java project", "$ i1 = org eclipse jdt internal core manipulation stub utility get indent use r2 i0 $ r5", "return $ i1", "if r2 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "i1 = @ parameter3", "r2 = @ parameter4", "z0 = @ parameter5", "$ r3 = org eclipse jdt internal core manipulation stub utility remove type argument r1", "$ r4 = org eclipse jdt internal core manipulation stub utility get exclude array r2", "$ r5 = org eclipse jdt core naming convention suggest variable name i0 2 $ r3 r0 i1 $ r4 z0", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["c0 = @ parameter0", "$ c1 = java lang character to lower case c0", "if $ c1 ! = c0 goto label1", "return 1", "if $ c1 ! = c0 goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "$ i1 = org eclipse jdt internal corext util code formatter util get tab width r1", "$ i2 = org eclipse jdt internal corext util code formatter util get indent width r1", "$ r2 = org eclipse jdt core formatter indent manipulation trim indent r0 i0 $ i1 $ i2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jdt internal corext callhierarchy caller method wrapper r0", "r1 f expand with constructor = z0", "r2 = org eclipse jdt internal corext callhierarchy caller method wrapper r0", "r2 f be expand with constructor set = 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jdt internal corext callhierarchy call hierarchy core r0", "r2 default ignore filter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org eclipse jdt internal corext callhierarchy method wrapper r0", "$ r1 = r7 f parent", "$ z0 = $ r1 instanceof org eclipse jdt internal corext callhierarchy real caller", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r8 = org eclipse jdt internal corext callhierarchy method wrapper r0", "r6 = r8 get parent", "goto label4", "label if r6 ! = null goto label2", "label r9 = org eclipse jdt internal corext callhierarchy method wrapper r0", "$ r2 = r9 get member", "$ r3 = $ r2 get handle identifier", "$ r4 = r6 get member", "$ r5 = $ r4 get handle identifier", "$ z1 = $ r3 equal $ r5", "if $ z1 == 0 goto label3", "return 1", "if $ z1 == 0 goto label3", "label r6 = r6 get parent"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org eclipse jdt internal corext callhierarchy method wrapper r0", "$ r5 = r8 get parent", "if $ r5 == null goto label1", "r9 = org eclipse jdt internal corext callhierarchy method wrapper r0", "$ r7 = r9 get parent", "$ z1 = $ r7 be recursive", "if $ z1 == 0 goto label1", "return", "if $ z1 == 0 goto label1", "label r10 = org eclipse jdt internal corext callhierarchy method wrapper r0", "r10 check cancel r2", "r11 = org eclipse jdt internal corext callhierarchy method wrapper r0", "r1 pre visit r11", "r12 = org eclipse jdt internal corext callhierarchy method wrapper r0", "$ z0 = r1 visit r12", "if $ z0 == 0 goto label4", "r13 = org eclipse jdt internal corext callhierarchy method wrapper r0", "$ r6 = r13 get call r2", "i0 = lengthof $ r6", "i1 = 0", "goto label3", "label if i1 < i0 goto label2", "label r3 = $ r6 [ i1 ]", "r3 accept r1 r2", "i1 = i1 + 1", "label if i1 < i0 goto label2", "label r14 = org eclipse jdt internal corext callhierarchy method wrapper r0", "r1 post visit r14", "if r2 == null goto label5", "r2 work 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jdt internal corext callhierarchy method wrapper r0", "r5 f element = null", "r6 = org eclipse jdt internal corext callhierarchy method wrapper r0", "$ r1 = r6 f method cache", "r7 = org eclipse jdt internal corext callhierarchy method wrapper r0", "$ r2 = r7 get method call", "$ r3 = $ r2 get key", "$ r1 remove $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = r1 iterator", "goto label5", "label $ z5 = r4 have next", "if $ z5 ! = 0 goto label1", "label $ r8 = r4 next", "r3 = org eclipse jdt core dom body declaration $ r8", "$ z0 = r3 instanceof org eclipse jdt core dom method declaration", "if $ z0 == 0 goto label5", "r5 = org eclipse jdt core dom method declaration r3", "$ r9 = r5 get name", "$ r10 = $ r9 get identifier", "$ r11 = r2 get name", "$ r12 = $ r11 get identifier", "$ z1 = $ r10 equal $ r12", "if $ z1 == 0 goto label5", "$ r13 = r5 parameter", "$ i0 = $ r13 size", "$ r14 = r2 parameter", "$ i1 = $ r14 size", "if $ i0 ! = $ i1 goto label5", "$ r15 = r2 parameter", "r6 = $ r15 iterator", "$ r16 = r5 parameter", "r7 = $ r16 iterator", "z4 = 1", "goto label3", "label $ z2 = r6 have next", "if $ z2 ! = 0 goto label2", "label $ r17 = r6 next", "$ r18 = org eclipse jdt core dom single variable declaration $ r17", "$ r19 = $ r18 get type", "r24 = new org eclipse jdt core dom a s t matcher", "specialinvoke r24 < init >", "$ r21 = r7 next", "$ r22 = org eclipse jdt core dom single variable declaration $ r21", "$ r23 = $ r22 get type", "$ z3 = $ r19 subtree match r24 $ r23", "if $ z3 ! = 0 goto label3", "z4 = 0", "goto label4", "label if z4 == 0 goto label5", "r25 = org eclipse jdt core dom body declaration r5", "return r25", "if $ z5 ! = 0 goto label1", "return null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [], [47], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "if i0 < 0 goto label1", "if i1 < i0 goto label1", "$ z1 = 1", "goto label2", "label org eclipse core runtime assert be true $ z1", "$ r1 = new org eclipse jdt internal corext dom selection", "specialinvoke $ r1 < init >", "$ r1 f start = i0", "$ i2 = i1 - i0", "$ i3 = $ i2 + 1", "$ r1 f length = $ i3", "$ i4 = $ r1 f start", "$ i5 = $ r1 f length", "$ i6 = $ i4 + $ i5", "$ r1 f exclusive end = $ i6", "return $ r1", "if i1 < i0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 get start position", "$ i2 = r1 get length", "i1 = i0 + $ i2", "r2 = org eclipse jdt internal corext dom selection r0", "$ i3 = r2 f start", "if i1 > $ i3 goto label1", "return 1", "if i1 > $ i3 goto label1", "label r3 = org eclipse jdt internal corext dom selection r0", "$ z0 = r3 cover r1", "if $ z0 == 0 goto label2", "return 2", "if $ z0 == 0 goto label2", "label r4 = org eclipse jdt internal corext dom selection r0", "$ i4 = r4 f exclusive end", "if $ i4 > i0 goto label3", "return 3", "if $ i4 > i0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util collection empty list", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang string [ 0 ]", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org eclipse jdt internal corext fix update property r0", "$ r4 = r5 myfinder", "r6 = org eclipse jdt internal corext fix update property r0", "$ r4 finder r6 r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org eclipse jdt internal corext refactoring delegate delegate creator r0", "r12 f original rewrite = r1", "$ r2 = r1 get cu", "$ r3 = org eclipse jdt internal ui preference java preference setting get code generation setting $ r2", "r13 = org eclipse jdt internal corext refactoring delegate delegate creator r0", "r13 f preference = $ r3", "r11 = new org eclipse jdt internal corext refactoring structure compilation unit rewrite", "$ r5 = r1 get cu", "$ r6 = r1 get root", "specialinvoke r11 < init > $ r5 $ r6", "r14 = org eclipse jdt internal corext refactoring delegate delegate creator r0", "r14 f delegate rewrite = r11", "r15 = org eclipse jdt internal corext refactoring delegate delegate creator r0", "$ r7 = r15 f delegate rewrite", "$ r8 = $ r7 get a s t rewrite", "$ r9 = r1 get a s t rewrite", "$ r10 = $ r9 get extend source range computer", "$ r8 set target source range computer $ r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r2 = org eclipse jdt internal corext refactoring refactoring search engine2 r0", "r2 f requestor = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r32 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ r6 = r32 f possible target", "$ i0 = lengthof $ r6", "if $ i0 == 0 goto label01", "r33 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ r17 = r33 f candidate target", "$ i3 = lengthof $ r17", "if $ i3 ! = 0 goto label15", "label r29 = new java util array list", "specialinvoke r29 < init > 16", "r30 = new java util array list", "specialinvoke r30 < init > 16", "r4 = r1 resolve bind", "if r4 == null goto label14", "r5 = r4 get declare class", "$ r13 = org eclipse jdt internal corext refactoring structure move instance method processor get argument binding r1", "i4 = lengthof $ r13", "i5 = 0", "goto label05", "label if i5 < i4 goto label02", "label r19 = $ r13 [ i5 ]", "r20 = r19 get type", "$ z0 = r20 be class", "if $ z0 ! = 0 goto label03", "$ z1 = r20 be enum", "if $ z1 ! = 0 goto label03", "$ z2 = org eclipse jdt internal corext refactoring structure move instance method processor is18 or high interface r20", "if $ z2 == 0 goto label04", "label $ z9 = r20 be from source", "if $ z9 == 0 goto label04", "r29 add r19", "r30 add r19", "label i5 = i5 + 1", "label if i5 < i4 goto label02", "r31 = new org eclipse jdt internal corext refactoring structure move instance method processor $ ready only field finder", "specialinvoke r31 < init > r5", "r34 = org eclipse jdt core dom a s t visitor r31", "r1 accept r34", "$ r15 = r31 get read only field", "i6 = lengthof $ r15", "i7 = 0", "goto label09", "label if i7 < i6 goto label06", "label r23 = $ r15 [ i7 ]", "r24 = r23 get type", "$ z3 = r24 be class", "if $ z3 ! = 0 goto label07", "$ z5 = org eclipse jdt internal corext refactoring structure move instance method processor is18 or high interface r24", "if $ z5 == 0 goto label08", "label $ z4 = r24 be from source", "if $ z4 == 0 goto label08", "r29 add r23", "label i7 = i7 + 1", "label if i7 < i6 goto label06", "$ r16 = r31 get declare field", "i8 = lengthof $ r16", "i9 = 0", "goto label13", "label if i9 < i8 goto label10", "label r26 = $ r16 [ i9 ]", "r27 = r26 get type", "$ z6 = r27 be class", "if $ z6 ! = 0 goto label11", "$ z8 = org eclipse jdt internal corext refactoring structure move instance method processor is18 or high interface r27", "if $ z8 == 0 goto label12", "label $ z7 = r27 be from source", "if $ z7 == 0 goto label12", "r30 add r26", "label i9 = i9 + 1", "label if i9 < i8 goto label10", "label $ i1 = r29 size", "$ r9 = newarray org eclipse jdt core dom i variable bind [ $ i1 ]", "r35 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "r35 f possible target = $ r9", "r36 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ r10 = r36 f possible target", "r29 to array $ r10", "$ i2 = r30 size", "$ r11 = newarray org eclipse jdt core dom i variable bind [ $ i2 ]", "r37 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "r37 f candidate target = $ r11", "r38 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ r12 = r38 f candidate target", "r30 to array $ r12", "label r39 = org eclipse jdt internal corext refactoring structure move instance method processor r0", "$ r28 = r39 f possible target", "return $ r28"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext refactoring typeconstraints type t type r0", "$ i0 = r1 f flag", "$ i1 = $ i0 & 16", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext refactoring typeconstraints type t type r0", "$ i0 = r1 f flag", "$ i1 = $ i0 & 32", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal corext refactoring typeconstraints type t type r0", "$ i0 = r1 f flag", "$ i1 = $ i0 & 64", "if $ i1 == 0 goto label1", "return 1", "if $ i1 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal corext refactoring typeconstraints type type environment r0", "$ r1 = r2 object_type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = null", "if r1 == null goto label1", "r5 = new org eclipse jdt core source range", "$ i0 = r1 get start position", "$ i1 = r1 get length", "specialinvoke r5 < init > $ i0 $ i1", "r4 = r5", "label r6 = org eclipse jdt core i source range r4", "$ r2 = org eclipse jdt internal corext refactoring util java status context create r0 r6", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org eclipse text edit multi text edit", "if $ z0 ! = 0 goto label1", "return 1", "if $ z0 ! = 0 goto label1", "label $ z1 = r0 have child", "if $ z1 ! = 0 goto label2", "label r1 = r0 get child", "$ i1 = r0 get offset", "$ r4 = r1 [ 0 ]", "$ i2 = $ r4 get offset", "if $ i1 == $ i2 goto label3", "return 0", "if $ i1 == $ i2 goto label3", "label $ i3 = r0 get exclusive end", "$ i4 = lengthof r1", "$ i5 = $ i4 - 1", "$ r5 = r1 [ $ i5 ]", "$ i6 = $ r5 get exclusive end", "if $ i3 == $ i6 goto label4", "label i0 = lengthof r1", "i7 = 0", "goto label7", "label if i7 < i0 goto label5", "label r2 = r1 [ i7 ]", "$ z2 = org eclipse jdt internal corext refactoring util text edit util be pack r2", "if $ z2 ! = 0 goto label6", "label i7 = i7 + 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ i2 = lengthof r0", "if $ i2 > = 1 goto label1", "return r0", "if $ i2 > = 1 goto label1", "label $ i3 = lengthof r0", "if $ i3 ! = 1 goto label2", "$ c10 = r0 [ 0 ]", "if $ c10 ! = 42 goto label2", "label i0 = org eclipse jdt internal corext template java signature util index of r0 43", "if i0 ! = 0 goto label3", "$ r6 = org eclipse jdt internal corext template java signature util null_type_signature_array", "return $ r6", "if i0 ! = 0 goto label3", "label if i0 == -1 goto label5", "$ i9 = i0 + 1", "c11 = r0 [ $ i9 ]", "if c11 == 42 goto label4", "if c11 ! = 43 goto label5", "label $ r5 = org eclipse jdt internal corext template java signature util null_type_signature_array", "return $ r5", "if c11 ! = 43 goto label5", "label $ r2 = org eclipse jdt core signature get type argument r0", "i1 = lengthof $ r2", "i12 = 0", "goto label8", "label if i12 < i1 goto label6", "label r7 = $ r2 [ i12 ]", "$ r3 = org eclipse jdt internal corext template java signature util null_type_signature_array", "$ z0 = java util array equal r7 $ r3", "if $ z0 == 0 goto label7", "$ r4 = org eclipse jdt internal corext template java signature util null_type_signature_array", "return $ r4", "if $ z0 == 0 goto label7", "label i12 = i12 + 1", "label if i12 < i1 goto label6", "$ c4 = r0 [ 0 ]", "if $ c4 ! = 45 goto label9", "$ i5 = lengthof r0", "$ i6 = $ i5 - 1", "r8 = newarray char [ $ i6 ]", "$ i7 = lengthof r0", "$ i8 = $ i7 - 1", "java lang system arraycopy r0 1 r8 0 $ i8", "return r8", "if $ c4 ! = 45 goto label9", "label return r0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = null", "r4 = org eclipse jdt internal corext util method override tester r0", "r3 = r4 find overridden method r1 z0", "goto label2", "label if r3 ! = null goto label1", "label r2 = r3", "r5 = org eclipse jdt internal corext util method override tester r0", "r3 = r5 find overridden method r3 z0", "label if r3 ! = null goto label1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = newarray org eclipse core resource i resource [ 1 ]", "$ r2 [ 0 ] = r0", "$ r3 = org eclipse jdt internal corext util resource make committable $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get location u r i", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ r2 = \\ `` file\\ ``", "$ r3 = r1 get scheme", "$ z0 = $ r2 equal ignore case $ r3", "if $ z0 == 0 goto label2", "$ r4 = new java io file", "specialinvoke $ r4 < init > r1", "$ r5 = $ r4 get absolute path", "goto label3", "label return $ r5", "if $ z0 == 0 goto label2", "label $ r5 = r1 to string"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse jdt internal corext util super type hierarchy cache find type hierarchy in cache r0", "if $ r1 == null goto label1", "return 1", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jdt internal ui dialog status info r0", "$ i0 = r1 f severity", "if $ i0 ! = 1 goto label1", "return 1", "if $ i0 ! = 1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i1 = r2 get offset", "r4 = org eclipse jdt internal ui javaeditor semantic highlighting presenter core r0", "i2 = r4 compute index at offset r1 $ i1", "i0 = r1 size", "goto label3", "label if i2 < i0 goto label1", "label $ r3 = r1 get i2", "if $ r3 ! = r2 goto label2", "return i2", "if $ r3 ! = r2 goto label2", "label i2 = i2 + 1", "label if i2 < i0 goto label1", "return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jdt internal launching environment environment manager r0", "r6 initialize extension", "r7 = org eclipse jdt internal launching environment environment manager r0", "$ r2 = r7 f rule participant", "r8 = org eclipse jdt internal launching environment environment manager r0", "$ r1 = r8 f rule participant", "$ i0 = $ r1 size", "$ r3 = newarray org eclipse jdt launch environment i access rule participant [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = org eclipse jdt launch environment i access rule participant [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org eclipse core runtime status", "$ r2 = org eclipse jdt internal launching launch plugin get unique identifier", "specialinvoke r3 < init > 4 $ r2 4 r0 null", "r4 = org eclipse core runtime i status r3", "org eclipse jdt internal launching launch plugin log r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org eclipse jdt internal launching launch plugin fg x m l parser", "if $ r0 ! = null goto label5", "label $ r1 = javax xml parser document builder factory new instance", "$ r2 = $ r1 new document builder", "org eclipse jdt internal launching launch plugin fg x m l parser = $ r2", "$ r4 = org eclipse jdt internal launching launch plugin fg x m l parser", "$ r3 = new org xml sax helper default handler", "specialinvoke $ r3 < init >", "$ r4 set error handler $ r3", "label goto label5", "label $ r11 = org eclipse jdt internal launching launch plugin fg x m l parser", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal launching library info r0", "$ r1 = r2 f bootpath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt internal launching library info r0", "$ r1 = r2 f endorse dirs", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse debug core debug plugin get default", "if r1 == null goto label1", "$ r2 = newarray org eclipse debug core debug event [ 1 ]", "$ r3 = new org eclipse debug core debug event", "specialinvoke $ r3 < init > r0 32 1001", "$ r2 [ 0 ] = $ r3", "r1 fire debug event set $ r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org eclipse jdt internal launching v m definition container r0", "$ r3 = r8 f v m list", "$ r3 remove r1", "r9 = org eclipse jdt internal launching v m definition container r0", "$ r4 = r9 f invalid v m list", "$ r4 remove r1", "r10 = org eclipse jdt internal launching v m definition container r0", "$ r5 = r10 f v m type to v m map", "$ r6 = r1 get v m install type", "$ r7 = $ r5 get $ r6", "r2 = java util list $ r7", "if r2 == null goto label1", "r2 remove r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt launch abstract v m install r0", "$ r1 = r2 f id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jdt launch abstract v m install r0", "$ r2 = r5 f attribute map", "$ r3 = $ r2 get r1", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r5 = org eclipse jdt launch abstract v m runner quote windows args r4", "$ r3 = org eclipse debug core debug plugin exec r5 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt launch library location r0", "$ r1 = r2 f javadoc location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt launch property change event r0", "$ r1 = r2 new value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jdt launch property change event r0", "$ r1 = r2 old value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jdt launch sourcelookup archive source location r0", "$ r1 = r3 get name", "$ r2 = org eclipse jdt launch sourcelookup archive source location get zip file $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring check condition operation r0", "$ r1 = r2 f status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label3", "$ r2 = r1 get parent", "if $ r2 ! = null goto label1", "$ z2 = 1", "goto label2", "label org eclipse core runtime assert be true $ z2", "r4 = org eclipse ltk core refactoring composite change r0", "$ r3 = r4 f change", "$ r3 add r1", "r1 set parent r0", "label return", "if $ r2 ! = null goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse ltk core refactoring composite change r0", "$ r2 = r6 f change", "r7 = org eclipse ltk core refactoring composite change r0", "$ r1 = r7 f change", "$ i0 = $ r1 size", "$ r3 = newarray org eclipse ltk core refactoring change [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = org eclipse ltk core refactoring change [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse ltk core refactoring history refactoring execution event r0", "$ i0 = r1 f type", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse ltk core refactoring participant move argument r0", "$ z0 = r1 f update reference", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring participant move refactoring r0", "$ r1 = r2 f processor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse ltk core refactoring participant reorg execution log r0", "$ r2 = r3 f new name", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new org eclipse ltk core refactoring participant resource change checker", "specialinvoke $ r5 < init >", "i0 = lengthof r0", "i1 = 0", "goto label2", "label if i1 < i0 goto label1", "label r3 = r0 [ i1 ]", "$ r6 = $ r5 get delta factory", "$ r6 change r3", "i1 = i1 + 1", "label if i1 < i0 goto label1", "$ r7 = $ r5 check r1", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring perform change operation r0", "$ r1 = r2 f validation status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk core refactoring refactoring r0", "r1 = r2 do get refactoring tick provider", "if r1 ! = null goto label1", "r1 = org eclipse ltk core refactoring refactoring tick provider default", "label return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "$ r2 = r1 get full path", "r3 = org eclipse ltk core refactoring resource move rename resource descriptor r0", "r3 f destination path = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse ltk core refactoring text edit base change r0", "$ z0 = r1 f track edit", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse ltk core refactoring multi state text file change r0", "r1 f save mode = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse ltk core refactoring multi state text file change r0", "$ i0 = r1 f save mode", "$ i1 = $ i0 & 2", "if $ i1 ! = 0 goto label2", "r2 = org eclipse ltk core refactoring multi state text file change r0", "$ z0 = r2 f dirty", "if $ z0 ! = 0 goto label1", "r3 = org eclipse ltk core refactoring multi state text file change r0", "$ i2 = r3 f save mode", "$ i3 = $ i2 & 1", "if $ i3 ! = 0 goto label2", "label return 0", "if $ i3 ! = 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["l0 = @ parameter0", "$ r1 = org eclipse ltk internal core refactoring history refactoring history manager fg calendar", "$ r1 set time in millis l0", "r13 = new java lang string builder", "specialinvoke r13 < init > 256", "$ r3 = org eclipse ltk internal core refactoring history refactoring history manager fg calendar", "$ i1 = $ r3 get 1", "r13 append $ i1", "r13 append 47", "$ r6 = org eclipse ltk internal core refactoring history refactoring history manager fg calendar", "$ i2 = $ r6 get 2", "$ i3 = $ i2 + 1", "r13 append $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse ltk internal core refactoring resource move rename resource processor r0", "$ r1 = r2 f new resource name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org eclipse ltk internal core refactoring resource resource modification r0", "$ r2 = r8 f create", "if $ r2 ! = null goto label1", "r6 = new java util array list", "specialinvoke r6 < init > 2", "r9 = org eclipse ltk internal core refactoring resource resource modification r0", "r9 f create = r6", "label r10 = org eclipse ltk internal core refactoring resource resource modification r0", "$ r3 = r10 f create", "$ r3 add r1", "r11 = org eclipse ltk internal core refactoring resource resource modification r0", "$ i0 = r11 f ignore count", "if $ i0 ! = 0 goto label2", "r7 = new org eclipse ltk internal core refactoring resource resource modification $ create description", "specialinvoke r7 < init > r1", "r12 = org eclipse ltk internal core refactoring resource resource modification r0", "r13 = org eclipse ltk internal core refactoring resource resource modification $ delta description r7", "r12 internal add r13", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi container module container r0", "$ r1 = r2 adaptor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse osgi container module container adaptor default executor", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse osgi container module database r0", "r4 read lock", "label r5 = org eclipse osgi container module database r0", "$ r2 = r5 revision time stamp", "l0 = $ r2 get", "label r6 = org eclipse osgi container module database r0", "r6 read unlock", "return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse osgi container module revision r0", "$ r2 = r4 capability", "$ r3 = $ r2 get list r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse osgi container module revision builder r0", "r2 symbolic name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new org eclipse osgi framework eventmgr copy on write identity map $ snapshot", "r5 = org eclipse osgi framework eventmgr copy on write identity map r0", "$ r2 = specialinvoke r5 entry", "specialinvoke r4 < init > $ r2", "$ r3 = r4 value", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang system get security manager", "if $ r2 ! = null goto label1", "$ z1 = r1 be directory", "return $ z1", "if $ r2 ! = null goto label1", "label r7 = new org eclipse osgi framework util secure action $ 12", "r8 = org eclipse osgi framework util secure action r0", "specialinvoke r7 < init > r8 r1", "r9 = org eclipse osgi framework util secure action r0", "$ r4 = r9 control context", "r10 = java security privilege action r7", "$ r5 = java security access controller do privilege r10 $ r4", "$ r6 = java lang boolean $ r5", "$ z0 = $ r6 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse osgi internal cd c d s bundle file r0", "$ z0 = r1 prim", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "return r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi internal debug framework debug trace entry r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi internal debug framework debug trace entry r0", "$ r1 = r2 option path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 to lower case", "$ r3 = org eclipse osgi internal framework alias mapper processor alias table", "r5 = org eclipse osgi internal framework alias mapper r0", "$ r4 = specialinvoke r5 get alias $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse osgi internal hookregistry hook registry r0", "$ r1 = r3 container", "$ r2 = $ r1 get configuration", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse osgi internal loader classpath classpath entry r0", "$ r1 = r2 bundlefile", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r19 = org eclipse osgi internal loader classpath classpath manager r0", "$ r1 = r19 entry", "i0 = lengthof $ r1", "i1 = 0", "goto label6", "label if i1 < i0 goto label1", "label r14 = $ r1 [ i1 ]", "if r14 == null goto label5", "label r14 close", "label goto label5", "label i1 = i1 + 1", "label if i1 < i0 goto label1", "r22 = org eclipse osgi internal loader classpath classpath manager r0", "r16 = r22 get fragment classpaths", "i2 = lengthof r16", "i3 = 0", "goto label8", "label if i3 < i2 goto label7", "label r18 = r16 [ i3 ]", "r18 close", "i3 = i3 + 1", "label if i3 < i2 goto label7", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get action", "$ z0 = $ r2 equal \\ `` import\\ ``", "if $ z0 ! = 0 goto label1", "r5 = new java lang security exception", "specialinvoke r5 < init >", "throw r5", "if $ z0 ! = 0 goto label1", "label r6 = org eclipse osgi internal permadmin bundle permission r0", "$ r3 = r6 woven permission", "r7 = java security permission r1", "$ r3 add r7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse osgi internal serviceregistry filter service listener r0", "$ z0 = r1 remove", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse osgi internal serviceregistry service reference impl r0", "$ r1 = r3 registration", "$ r2 = $ r1 get bundle", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org eclipse osgi internal serviceregistry service registry r0", "$ r5 = r13 service event listener", "entermonitor $ r5", "label r14 = org eclipse osgi internal serviceregistry service registry r0", "$ r6 = r14 service event listener", "$ r7 = $ r6 remove r1", "r2 = java util map $ r7", "exitmonitor $ r5", "label goto label5", "label if r2 == null goto label6", "$ z0 = r2 be empty", "if $ z0 == 0 goto label7", "label return", "if $ z0 == 0 goto label7", "label r12 = r2 value", "r4 = r12 iterator", "goto label9", "label $ z1 = r4 have next", "if $ z1 ! = 0 goto label8", "label $ r8 = r4 next", "r3 = org eclipse osgi internal serviceregistry filter service listener $ r8", "r3 mark remove", "if $ z1 ! = 0 goto label8", "$ r9 = org eclipse osgi internal serviceregistry service registry a listener info r12", "r15 = org eclipse osgi internal serviceregistry service registry r0", "specialinvoke r15 notify listener hook $ r9 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r1 = org osgi framework version empty version", "label r2 = org eclipse osgi service resolver version range r0", "$ z0 = r2 include r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org osgi framework version r0", "$ i0 = r1 micro", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org osgi framework version range r0", "$ r1 = r2 right", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org osgi framework version range r0", "$ z0 = r1 leave closed", "if $ z0 == 0 goto label1", "$ c0 = 91", "goto label2", "label return $ c0", "if $ z0 == 0 goto label1", "label $ c0 = 40"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org osgi framework version range r0", "$ z0 = r1 empty", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 length", "if $ i0 ! = 0 goto label01", "r54 = new java lang illegal argument exception", "r53 = new java lang string builder", "specialinvoke r53 < init > \\ `` invalid attribute name \\\\\\ `` \\ ``", "$ r44 = r53 append r1", "$ r45 = $ r44 append \\ `` \\\\\\ `` \\ ``", "$ r46 = $ r45 to string", "specialinvoke r54 < init > $ r46", "throw r54", "if $ i0 ! = 0 goto label01", "label $ r3 = r1 to char array", "i1 = lengthof $ r3", "i2 = 0", "goto label05", "label if i2 < i1 goto label02", "label c3 = $ r3 [ i2 ]", "if c3 == 61 goto label03", "if c3 == 62 goto label03", "if c3 == 60 goto label03", "if c3 == 126 goto label03", "if c3 == 40 goto label03", "if c3 ! = 41 goto label04", "label r56 = new java lang illegal argument exception", "r55 = new java lang string builder", "specialinvoke r55 < init > \\ `` invalid attribute name \\\\\\ `` \\ ``", "$ r49 = r55 append r1", "$ r50 = $ r49 append \\ `` \\\\\\ `` \\ ``", "$ r51 = $ r50 to string", "specialinvoke r56 < init > $ r51", "throw r56", "if c3 ! = 41 goto label04", "label i2 = i2 + 1", "label if i2 < i1 goto label02", "r57 = new java lang string builder", "specialinvoke r57 < init > 128", "r58 = org osgi framework version range r0", "$ z0 = r58 leave closed", "if $ z0 ! = 0 goto label07", "r59 = org osgi framework version range r0", "$ r41 = r59 right", "if $ r41 == null goto label06", "r60 = org osgi framework version range r0", "$ z3 = r60 right close", "if $ z3 ! = 0 goto label07", "label $ z4 = 1", "goto label08", "label z5 = $ z4", "if $ z4 ! = 0 goto label09", "r61 = org osgi framework version range r0", "$ r40 = r61 right", "if $ r40 ! = null goto label09", "$ z6 = 0", "goto label10", "label z7 = $ z6", "if $ z6 == 0 goto label11", "r57 append \\ `` & \\ ``", "label if z5 == 0 goto label12", "r57 append 40", "r57 append r1", "r57 append \\ `` = * \\ ``", "label r62 = org osgi framework version range r0", "$ z1 = r62 leave closed", "if $ z1 == 0 goto label13", "label r57 append \\ `` ! \\ ``", "if $ r40 ! = null goto label09", "label $ z6 = 1", "if $ z3 ! = 0 goto label07", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r8 = \\ `` org osgi service condpermadmin bundle signer condition\\ ``", "$ r9 = r1 get type", "$ z0 = $ r8 equal $ r9", "if $ z0 ! = 0 goto label01", "$ r23 = new java lang illegal argument exception", "specialinvoke $ r23 < init > \\ `` condition info must be of type \\\\\\ `` org osgi service condpermadmin bundle signer condition\\\\\\ `` \\ ``", "throw $ r23", "if $ z0 ! = 0 goto label01", "label r2 = r1 get args", "$ i0 = lengthof r2", "if $ i0 == 1 goto label02", "$ i3 = lengthof r2", "if $ i3 == 2 goto label02", "$ r19 = new java lang illegal argument exception", "$ r20 = new java lang string builder", "specialinvoke $ r20 < init > \\ `` illegal number of args \\ ``", "$ i4 = lengthof r2", "$ r21 = $ r20 append $ i4", "$ r22 = $ r21 to string", "specialinvoke $ r19 < init > $ r22", "throw $ r19", "if $ i3 == 2 goto label02", "label r3 = r0 get signer certificate 2", "z6 = 0", "$ r10 = r3 value", "r4 = $ r10 iterator", "goto label06", "label $ z1 = r4 have next", "if $ z1 ! = 0 goto label03", "label $ r11 = r4 next", "r24 = java util list $ r11", "$ r12 = new java util array list", "$ i1 = r24 size", "specialinvoke $ r12 < init > $ i1", "r7 = r24 iterator", "goto label05", "label $ z2 = r7 have next", "if $ z2 ! = 0 goto label04", "label $ r13 = r7 next", "r6 = java security cert x509 certificate $ r13", "$ r14 = r6 get subject d n", "$ r15 = $ r14 get name", "$ r12 add $ r15", "if $ z2 ! = 0 goto label04", "$ r16 = r2 [ 0 ]", "$ z4 = org osgi framework framework util match distinguish name chain $ r16 $ r12", "if $ z4 == 0 goto label06", "z6 = 1", "goto label07", "label $ i2 = lengthof r2", "if $ i2 ! = 2 goto label08", "$ r18 = \\ `` ! \\ ``", "$ r17 = r2 [ 1 ]", "$ z7 = $ r18 equal $ r17", "goto label09", "label $ z5 = $ z7 ^ z6", "if $ z5 == 0 goto label10", "$ r25 = org osgi service condpermadmin condition true", "goto label11", "label return $ r25", "if $ z5 == 0 goto label10", "label $ r25 = org osgi service condpermadmin condition false", "if $ i2 ! = 2 goto label08", "label $ z7 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [], [52], [53], [54], [55], [56], [], [58], [59], [60], [], [62], [63], [64], [65], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jface text abstract document r0", "r2 f tracker = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jface text gap text store r0", "$ i0 = r2 get length", "r3 = org eclipse jface text gap text store r0", "r3 replace 0 $ i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if r0 == null goto label01", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label02", "label return null", "if $ i0 ! = 0 goto label02", "label $ r2 = new java util hash set", "specialinvoke $ r2 < init >", "r10 = null", "i2 = lengthof r0", "i3 = 0", "goto label05", "label if i3 < i2 goto label03", "label r12 = r0 [ i3 ]", "$ r3 = org eclipse jface text link link mode manager fg manager", "$ r4 = $ r3 get r12", "r10 = org eclipse jface text link link mode manager $ r4", "if r10 == null goto label04", "$ r2 add r10", "label i3 = i3 + 1", "label if i3 < i2 goto label03", "$ i1 = $ r2 size", "if $ i1 < = 1 goto label09", "if z0 == 0 goto label08", "r13 = $ r2 iterator", "goto label07", "label $ z3 = r13 have next", "if $ z3 ! = 0 goto label06", "label $ r9 = r13 next", "r14 = org eclipse jface text link link mode manager $ r9", "r14 close all environment", "if $ z3 ! = 0 goto label06", "goto label09", "label $ z2 = $ r2 be empty", "if $ z2 == 0 goto label10", "$ r7 = new org eclipse jface text link link mode manager", "specialinvoke $ r7 < init >", "r10 = $ r7", "label i4 = lengthof r0", "i5 = 0", "goto label12", "label if i5 < i4 goto label11", "label r16 = r0 [ i5 ]", "$ r5 = org eclipse jface text link link mode manager fg manager", "$ r5 put r16 r10", "i5 = i5 + 1", "label if i5 < i4 goto label11", "return r10", "if z0 == 0 goto label08", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [], [50], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org eclipse jface text link link mode model r0", "$ r1 = r2 f document listener", "$ r1 f exit = 1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jface text link link mode model r0", "$ r1 = r2 f parent environment", "if $ r1 == null goto label1", "return 1", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jface text link link mode model r0", "$ r1 = r2 f position sequence", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org eclipse jface text link link mode model r0", "$ r4 = r6 f group", "r3 = $ r4 iterator", "goto label2", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label1", "label $ r5 = r3 next", "r2 = org eclipse jface text link link position group $ r5", "$ z1 = r2 contain r1", "if $ z1 == 0 goto label2", "return r2", "if $ z0 ! = 0 goto label1", "return null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org eclipse jface text link link position r0", "$ r2 = r3 f document", "if r1 ! = $ r2 goto label1", "r4 = org eclipse jface text link link position r0", "$ i2 = r4 offset", "if i0 < $ i2 goto label1", "$ i6 = i1 + i0", "r5 = org eclipse jface text link link position r0", "$ i4 = r5 offset", "r6 = org eclipse jface text link link position r0", "$ i3 = r6 length", "$ i5 = $ i4 + $ i3", "if $ i6 > $ i5 goto label1", "return 1", "if $ i6 > $ i5 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jface text link link position r0", "r1 f sequence number = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "$ z1 = 1", "goto label2", "label org eclipse core runtime assert be true $ z1", "r1 = org eclipse jface text position r0", "r1 length = i0", "return", "if i0 < 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jface text projection child document r0", "$ r2 = r5 get document information map", "r1 = $ r2 get coverage", "r4 = new org eclipse jface text projection child document $ visible region", "$ i0 = r1 get offset", "$ i1 = r1 get length", "specialinvoke r4 < init > $ i0 $ i1", "r6 = org eclipse jface text position r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jface text projection projection document r0", "$ r2 = r3 f slave event", "r4 = org eclipse jface text document event $ r2", "specialinvoke r0 fire document change r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jface text projection projection map r0", "r1 f cache segment = null", "r2 = org eclipse jface text projection projection map r0", "r2 f cache fragment = null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org eclipse jface text templates document template context r0", "r2 f original offset = i0", "r3 = org eclipse jface text templates document template context r0", "$ r1 = r3 f position", "$ r1 set offset i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse core runtime assert be not null r1", "r5 = org eclipse jface text templates template context type r0", "$ r2 = r5 f resolvers", "$ r3 = r1 get type", "$ r2 put $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jface text templates template variable resolver r0", "$ r1 = r2 f type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jface text templates template variable type r0", "$ r1 = r2 f name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text edit copy source edit r0", "$ r1 = r2 f target", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse text edit text edit r0", "$ r1 = r3 f child", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org eclipse text edit text edit r0", "$ r2 = r4 f child", "$ i0 = $ r2 size", "return $ i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = new org eclipse text edit text edit copier", "r5 = org eclipse text edit text edit r0", "specialinvoke r4 < init > r5", "$ r3 = r4 perform", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org eclipse text edit copy source edit r0", "$ r4 = r8 f target", "if $ r4 == null goto label1", "$ r5 = r1 get copy r0", "r2 = org eclipse text edit copy source edit $ r5", "r9 = org eclipse text edit copy source edit r0", "$ r6 = r9 f target", "r10 = org eclipse text edit text edit $ r6", "$ r7 = r1 get copy r10", "r3 = org eclipse text edits copy target edit $ r7", "if r2 == null goto label1", "if r3 == null goto label1", "r2 set target edit r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text edit text edit processor r0", "$ r1 = r2 f root", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse text edit text edit visitor r0", "r3 = org eclipse text edit text edit r1", "$ z0 = r2 visit node r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse text edit text edit visitor r0", "r3 = org eclipse text edit text edit r1", "$ z0 = r2 visit node r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse text templates template persistence data r0", "$ z0 = r1 f be delete", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse text templates template store core r0", "$ r1 = r5 f property listener", "if $ r1 ! = null goto label1", "r6 = org eclipse text templates template store core r0", "$ r2 = template store core $ lambda_0__1 bootstrap $ r6", "r7 = org eclipse text templates template store core r0", "r7 f property listener = $ r2", "r8 = org eclipse text templates template store core r0", "$ r4 = r8 f preference store", "r9 = org eclipse text templates template store core r0", "$ r3 = r9 f property listener", "$ r4 add preference change listener $ r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse text templates template store core r0", "$ r1 = r2 get templates null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse text templates template store core r0", "$ r2 = r3 find template r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org eclipse core runtime assert be not null r1", "r10 = org eclipse text templates template store core r0", "$ r6 = r10 f templates", "r4 = $ r6 iterator", "goto label3", "label $ z4 = r4 have next", "if $ z4 ! = 0 goto label1", "label $ r7 = r4 next", "r3 = org eclipse text templates template persistence data $ r7", "r5 = r3 get template", "$ z0 = r3 be enable", "if $ z0 == 0 goto label3", "$ z1 = r3 be delete", "if $ z1 ! = 0 goto label3", "if r2 == null goto label2", "$ r9 = r5 get context type id", "$ z3 = r2 equal $ r9", "if $ z3 == 0 goto label3", "label $ r8 = r5 get name", "$ z2 = r1 equal $ r8", "if $ z2 == 0 goto label3", "return r5", "if $ z4 ! = 0 goto label1", "return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org osgi service permissionadmin permission info r0", "$ r1 = r2 action", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label01", "return 1", "if r1 ! = r0 goto label01", "label $ z0 = r1 instanceof org osgi service permissionadmin permission info", "if $ z0 ! = 0 goto label02", "return 0", "if $ z0 ! = 0 goto label02", "label r2 = org osgi service permissionadmin permission info r1", "r17 = org osgi service permissionadmin permission info r0", "$ r4 = r17 type", "$ r3 = r2 type", "$ z1 = $ r4 equal $ r3", "if $ z1 == 0 goto label11", "r18 = org osgi service permissionadmin permission info r0", "$ r5 = r18 name", "if $ r5 ! = null goto label03", "$ z5 = 1", "goto label04", "label $ r6 = r2 name", "if $ r6 ! = null goto label05", "$ z6 = 1", "goto label06", "label $ z7 = $ z5 ^ $ z6", "if $ z7 ! = 0 goto label11", "r19 = org osgi service permissionadmin permission info r0", "$ r7 = r19 action", "if $ r7 ! = null goto label07", "$ z8 = 1", "goto label08", "label $ r8 = r2 action", "if $ r8 ! = null goto label09", "$ z9 = 1", "goto label10", "label $ z10 = $ z8 ^ $ z9", "if $ z10 == 0 goto label12", "label return 0", "if $ z10 == 0 goto label12", "label r20 = org osgi service permissionadmin permission info r0", "$ r9 = r20 name", "if $ r9 == null goto label16", "r21 = org osgi service permissionadmin permission info r0", "$ r10 = r21 action", "if $ r10 == null goto label15", "r22 = org osgi service permissionadmin permission info r0", "$ r14 = r22 name", "$ r13 = r2 name", "$ z3 = $ r14 equal $ r13", "if $ z3 == 0 goto label13", "r23 = org osgi service permissionadmin permission info r0", "$ r16 = r23 action", "$ r15 = r2 action", "$ z4 = $ r16 equal $ r15", "if $ z4 == 0 goto label13", "$ z11 = 1", "goto label14", "label return $ z11", "if $ z4 == 0 goto label13", "label $ z11 = 0", "if $ r10 == null goto label15", "label r24 = org osgi service permissionadmin permission info r0", "$ r12 = r24 name", "$ r11 = r2 name", "$ z2 = $ r12 equal $ r11", "return $ z2", "if $ r9 == null goto label16", "label return 1", "if $ r8 ! = null goto label09", "label $ z9 = 0", "if $ r7 ! = null goto label07", "label $ z8 = 0", "if $ r6 ! = null goto label05", "label $ z6 = 0", "if $ r5 ! = null goto label03", "label $ z5 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [68], [69], [70], [71], [72], [73], [74], [75], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = specialinvoke r0 hash code r1", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org apache pdfbox contentstream operator color set stroke device r g b color r0", "$ r4 = r9 context", "$ r5 = $ r4 get resource", "$ r6 = org apache pdfbox co c o s name devicergb", "r3 = $ r5 get color space $ r6", "r10 = org apache pdfbox contentstream operator color set stroke device r g b color r0", "$ r7 = r10 context", "$ r8 = $ r7 get graphic state", "$ r8 set stroke color space r3", "specialinvoke r0 process r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox contentstream operator operator r0", "r2 image parameter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox contentstream p d f stream engine r0", "r2 graphic stack = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox co c o s array r0", "$ r1 = r2 object", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox co c o s array r0", "$ r2 = r3 object", "$ r2 add all r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "i3 = i1", "r4 = org apache pdfbox co c o s array r0", "$ i2 = r4 size", "if i0 > = $ i2 goto label1", "r5 = org apache pdfbox co c o s array r0", "$ r2 = r5 object", "r1 = $ r2 get i0", "$ z0 = r1 instanceof org apache pdfbox co c o s number", "if $ z0 == 0 goto label1", "$ r3 = org apache pdfbox co c o s number r1", "i3 = $ r3 int value", "label return i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "if r1 == null goto label1", "r3 = new org apache pdfbox co c o s string", "specialinvoke r3 < init > r1", "r4 = org apache pdfbox co c o s array r0", "r5 = org apache pdfbox co c o s base r3", "r4 set i0 r5", "goto label2", "label return", "if r1 == null goto label1", "label r6 = org apache pdfbox co c o s array r0", "r6 set i0 null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["z0 = @ parameter0", "if z0 == 0 goto label1", "$ r0 = org apache pdfbox co c o s boolean true", "goto label2", "label return $ r0", "if z0 == 0 goto label1", "label $ r0 = org apache pdfbox co c o s boolean false"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox co c o s dictionary r0", "r2 = r4 get dictionary object r1", "$ z0 = r2 instanceof org apache pdfbox co c o s name", "if $ z0 == 0 goto label1", "$ r3 = org apache pdfbox co c o s name r2", "return $ r3", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox co c o s dictionary r0", "r2 = r4 get item r1", "$ z0 = r2 instanceof org apache pdfbox co c o s object", "if $ z0 == 0 goto label1", "$ r3 = org apache pdfbox co c o s object r2", "return $ r3", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox co c o s document r0", "$ r2 = r4 get trailer", "$ r3 = org apache pdfbox co c o s name id", "r5 = org apache pdfbox co c o s base r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r4 = new java io byte array output stream", "specialinvoke $ r4 < init >", "r2 = r0 to char array", "i0 = lengthof r2", "i3 = 0", "label if i3 > = i0 goto label4", "c1 = r2 [ i3 ]", "$ r6 = org apache pdfbox co p d f doc encode uni_to_code", "$ r7 = java lang character value of c1", "$ r8 = $ r6 get $ r7", "r3 = java lang integer $ r8", "if r3 ! = null goto label2", "$ r4 write 0", "goto label3", "label i3 = i3 + 1", "goto label1", "if r3 ! = null goto label2", "label $ i2 = r3 int value", "$ r4 write $ i2", "label if i3 > = i0 goto label4", "label $ r5 = $ r4 to byte array", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox filter decode option r0", "r2 source region = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache pdfbox filter decode option r0", "r1 subsampling x = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox io memory usage set r0", "r2 temp dir = r1", "r3 = org apache pdfbox io memory usage set r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache pdfbox io scratch file buffer", "r3 = org apache pdfbox io scratch file r0", "specialinvoke r2 < init > r3", "r4 = org apache pdfbox io random access r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox multipdf overlay r0", "r2 all page overlay = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox multipdf overlay r0", "r2 odd page overlay = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox multipdf p d f clone utility r0", "$ r1 = r2 destination", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox multipdf p d f merger utility r0", "$ r2 = r3 source", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` start page be small than one\\ ``", "throw r2", "if i0 > 0 goto label1", "label r3 = org apache pdfbox multipdf splitter r0", "r3 start page = i0", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox multipdf splitter r0", "$ r1 = r2 source document", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdfparser c o s parser r0", "$ r1 = r5 document", "if $ r1 ! = null goto label1", "r4 = new java io i o exception", "specialinvoke r4 < init > \\ `` you must parse the document first before call get encryption \\ ``", "throw r4", "if $ r1 ! = null goto label1", "label r6 = org apache pdfbox pdfparser c o s parser r0", "$ r2 = r6 encryption", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = new org apache pdfbox pdmodel p d document", "r8 = org apache pdfbox pdfparser p d f parser r0", "$ r3 = r8 get document", "r9 = org apache pdfbox pdfparser p d f parser r0", "$ r4 = r9 source", "r10 = org apache pdfbox pdfparser p d f parser r0", "$ r5 = r10 get access permission", "specialinvoke r7 < init > $ r3 $ r4 $ r5", "r11 = org apache pdfbox pdfparser p d f parser r0", "$ r6 = r11 get encryption", "r7 set encryption dictionary $ r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r12 = org apache pdfbox pdfparser xref trailer resolver r0", "$ r3 = r12 byte po to xref map", "$ z0 = $ r3 be empty", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label r13 = org apache pdfbox pdfparser xref trailer resolver r0", "$ r4 = r13 byte po to xref map", "r1 = $ r4 key set", "r11 = new java util tree set", "specialinvoke r11 < init > r1", "r14 = org apache pdfbox pdfparser xref trailer resolver r0", "$ r6 = r14 byte po to xref map", "$ r7 = r11 last", "$ r8 = $ r6 get $ r7", "$ r9 = org apache pdfbox pdfparser xref trailer resolver $ xref trailer obj $ r8", "$ r10 = $ r9 trailer", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r16 = org apache pdfbox pdfparser xref trailer resolver r0", "$ r4 = r16 resolve xref trailer", "if $ r4 ! = null goto label1", "return null", "if $ r4 ! = null goto label1", "label r15 = new java util hash set", "specialinvoke r15 < init >", "$ i2 = neg i0", "l1 = long $ i2", "r17 = org apache pdfbox pdfparser xref trailer resolver r0", "$ r6 = r17 resolve xref trailer", "$ r7 = org apache pdfbox pdfparser xref trailer resolver $ xref trailer obj access $ 200 $ r6", "$ r8 = $ r7 entry set", "r2 = $ r8 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r9 = r2 next", "r3 = java util map $ entry $ r9", "$ r10 = r3 get value", "$ r11 = java lang long $ r10", "$ l3 = $ r11 long value", "$ b4 = $ l3 cmp l1", "if $ b4 ! = 0 goto label3", "$ r12 = r3 get key", "$ r13 = org apache pdfbox co c o s object key $ r12", "$ l5 = $ r13 get number", "$ r14 = java lang long value of $ l5", "r15 add $ r14", "label goto label2", "if $ z0 == 0 goto label4", "label return r15"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdfwriter c o s writer r0", "$ r1 = r2 standard output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "$ r3 = r4 f", "$ r2 = org apache pdfbox co c o s name unix", "$ r3 set string $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "r6 = specialinvoke r8 get e f dictionary", "if r6 ! = null goto label1", "if r1 == null goto label1", "r7 = new org apache pdfbox co c o s dictionary", "specialinvoke r7 < init >", "r6 = r7", "r9 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "$ r5 = r9 f", "$ r4 = org apache pdfbox co c o s name ef", "r10 = org apache pdfbox co c o s base r7", "$ r5 set item $ r4 r10", "label if r6 == null goto label2", "$ r2 = org apache pdfbox co c o s name uf", "r11 = org apache pdfbox pdmodel common c o s objectable r1", "r6 set item $ r2 r11", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel common filespecification p d embed file r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name subtype", "$ r2 set name $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel common filespecification p d embed file r0", "$ r1 = r3 get c o s object", "$ r2 = $ r1 get embed date \\ `` params\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = null", "r6 = org apache pdfbox pdmodel common filespecification p d embed file r0", "$ r2 = r6 get c o s object", "$ r3 = org apache pdfbox co c o s name params", "$ r4 = $ r2 get dictionary object $ r3", "r1 = org apache pdfbox co c o s dictionary $ r4", "if r1 == null goto label1", "r5 = r1 get embed string \\ `` mac\\", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel common function p d function type0 r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name bits_per_sample", "$ i0 = $ r1 get int $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel common function p d function type2 r0", "$ r1 = r2 c1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel common function type4 execution context r0", "$ r1 = r4 stack", "$ r2 = $ r1 pop", "$ r3 = java lang number $ r2", "$ f0 = $ r3 float value", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache pdfbox pdmodel common function type4 instruction sequence r0", "$ r1 = r3 instruction", "$ r2 = java lang integer value of i0", "$ r1 add $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel common function type4 instruction sequence builder r0", "$ r1 = r2 main sequence", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel common p d object stream r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name n", "$ i0 = $ r1 get int $ r2 0", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "if i0 > = 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` start page parameter of set label item may not be < 0\\ ``", "throw r6", "if i0 > = 0 goto label1", "label r7 = org apache pdfbox pdmodel common p d page label r0", "$ r2 = r7 label", "$ r3 = java lang integer value of i0", "$ r2 put $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r4 = org apache pdfbox pdmodel common p d rectangle r0", "$ r2 = r4 rect array", "r3 = new org apache pdfbox co c o s float", "specialinvoke r3 < init > f0", "r5 = org apache pdfbox co c o s base r3", "$ r2 set 0 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r4 = org apache pdfbox pdmodel common p d rectangle r0", "$ r2 = r4 rect array", "r3 = new org apache pdfbox co c o s float", "specialinvoke r3 < init > f0", "r5 = org apache pdfbox co c o s base r3", "$ r2 set 1 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org apache pdfbox pdmodel common p d stream r0", "$ r6 = r18 stream", "r15 = $ r6 create raw input stream", "r16 = new java io byte array output stream", "specialinvoke r16 < init >", "r19 = org apache pdfbox pdmodel common p d stream r0", "r3 = r19 get filter", "if r3 == null goto label3", "i1 = 0", "label $ i0 = r3 size", "if i1 > = $ i0 goto label3", "$ r8 = r3 get i1", "r4 = org apache pdfbox co c o s name $ r8", "if r1 == null goto label2", "$ r14 = r4 get name", "$ z0 = r1 contain $ r14", "if $ z0 == 0 goto label2", "goto label3", "label return r15", "if $ z0 == 0 goto label2", "label $ r9 = org apache pdfbox filter filter factory instance", "r5 = $ r9 get filter r4", "r20 = org apache pdfbox pdmodel common p d stream r0", "$ r10 = r20 stream", "r21 = org apache pdfbox co c o s dictionary $ r10", "r5 decode r15 r16 r21 i1", "org apache pdfbox io i o utils close quietly r15", "r17 = new java io byte array input stream", "$ r13 = r16 to byte array", "specialinvoke r17 < init > $ r13", "r15 = r17", "r16 reset", "i1 = i1 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel common p d stream r0", "$ r3 = r4 stream", "$ r2 = org apache pdfbox co c o s name metadata", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel documentinterchange logicalstructure p d attribute object r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name o", "$ r2 set name $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 0 goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` the revision number shall be > -1\\ ``", "throw r4", "if i0 > = 0 goto label1", "label r5 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure element r0", "$ r1 = r5 get c o s object", "$ r2 = org apache pdfbox co c o s name r", "$ r1 set int $ r2 i0", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure tree root r0", "$ r2 = r7 get c o s object", "$ r3 = org apache pdfbox co c o s name id_tree", "r1 = $ r2 get dictionary object $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s dictionary", "if $ z0 == 0 goto label1", "r6 = new org apache pdfbox pdmodel p d structure element name tree node", "$ r5 = org apache pdfbox co c o s dictionary r1", "specialinvoke r6 < init > $ r5", "r8 = org apache pdfbox pdmodel common p d name tree node r6", "return r8", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel documentinterchange markedcontent p d mark content r0", "$ r1 = r5 get property", "if $ r1 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if $ r1 ! = null goto label1", "label r6 = org apache pdfbox pdmodel documentinterchange markedcontent p d mark content r0", "$ r2 = r6 get property", "$ r3 = org apache pdfbox co c o s name alt", "$ r4 = $ r2 get string $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d artifact mark content r0", "$ z0 = specialinvoke r1 be attach \\ `` right\\ ``", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d four colour r0", "specialinvoke r2 set colour by index 2 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "$ r1 = r2 get color \\ `` color\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r2 set color \\ `` color\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r1 set number \\ `` space before\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "$ r1 = r2 get name \\ `` text align\\", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r2 set name \\ `` t border style\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r2 set array of name \\ `` t border style\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r2 set color \\ `` text decoration color\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "$ f0 = r1 get number \\ `` text decoration thickness\\ ``", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r2 set name \\ `` glyph orientation vertical\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0", "r1 set integer \\ `` column count\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r5 = r8 get c o s object", "r3 = $ r5 get dictionary object r1", "r9 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r6 = r9 get c o s object", "$ r6 set string r1 r2", "r10 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r7 = r10 get c o s object", "r4 = $ r7 get dictionary object r1", "r11 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "r11 potentially notify change r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r12 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r7 = r12 get c o s object", "r3 = $ r7 get dictionary object r1", "$ z0 = r3 instanceof org apache pdfbox co c o s array", "if $ z0 == 0 goto label4", "r4 = org apache pdfbox co c o s array r3", "$ i0 = r4 size", "r5 = newarray java lang string [ $ i0 ]", "i2 = 0", "label $ i1 = r4 size", "if i2 > = $ i1 goto label3", "r6 = r4 get object i2", "$ z2 = r6 instanceof org apache pdfbox co c o s name", "if $ z2 == 0 goto label2", "$ r10 = org apache pdfbox co c o s name r6", "$ r11 = $ r10 get name", "r5 [ i2 ] = $ r11", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label3", "label return r5", "if $ z0 == 0 goto label4", "label $ z1 = r3 instanceof org apache pdfbox co c o s name", "if $ z1 == 0 goto label5", "$ r8 = org apache pdfbox co c o s name r3", "$ r9 = $ r8 get name", "return $ r9", "if $ z1 == 0 goto label5", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r5 = r8 get c o s object", "r3 = $ r5 get dictionary object r1", "r9 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r6 = r9 get c o s object", "$ r6 set name r1 r2", "r10 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r7 = r10 get c o s object", "r4 = $ r7 get dictionary object r1", "r11 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "r11 potentially notify change r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0", "$ r3 = r7 get c o s object", "$ r4 = $ r3 get dictionary object r1", "r2 = org apache pdfbox co c o s array $ r4", "if r2 == null goto label1", "r6 = new org apache pdfbox pdmodel graphic color p d gamma", "specialinvoke r6 < init > r2", "return r6", "if r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel encryption access permission r0", "$ z0 = r1 can assemble document", "if $ z0 == 0 goto label1", "r2 = org apache pdfbox pdmodel encryption access permission r0", "$ z1 = r2 can extract content", "if $ z1 == 0 goto label1", "r3 = org apache pdfbox pdmodel encryption access permission r0", "$ z2 = r3 can extract for accessibility", "if $ z2 == 0 goto label1", "r4 = org apache pdfbox pdmodel encryption access permission r0", "$ z3 = r4 can fill in form", "if $ z3 == 0 goto label1", "r5 = org apache pdfbox pdmodel encryption access permission r0", "$ z4 = r5 can modify", "if $ z4 == 0 goto label1", "r6 = org apache pdfbox pdmodel encryption access permission r0", "$ z5 = r6 can modify annotation", "if $ z5 == 0 goto label1", "r7 = org apache pdfbox pdmodel encryption access permission r0", "$ z6 = r7 can print", "if $ z6 == 0 goto label1", "r8 = org apache pdfbox pdmodel encryption access permission r0", "$ z7 = r8 can print degraded", "if $ z7 == 0 goto label1", "$ z8 = 1", "goto label2", "label return $ z8", "if $ z7 == 0 goto label1", "label $ z8 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel encryption access permission r0", "$ z0 = specialinvoke r1 be permission bit on 11", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel encryption p d crypt filter dictionary r0", "$ r1 = r2 crypt filter dictionary", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel encryption p d encryption r0", "$ r2 = r4 dictionary", "$ r1 = org apache pdfbox co c o s name filter", "$ r3 = $ r2 get name a string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel encryption p d encryption r0", "$ r2 = r3 dictionary", "$ r1 = org apache pdfbox co c o s name r", "$ i0 = $ r2 get int $ r1 0", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache pdfbox co c o s name std_cf", "r3 = org apache pdfbox pdmodel encryption p d encryption r0", "r3 set crypt filter dictionary $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel encryption public key protection policy r0", "$ r1 = r2 decryption certificate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = @ parameter1", "r7 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ i2 = r7 b", "$ i3 = $ i2 + 1", "$ i4 = $ i3 % 256", "r8 = org apache pdfbox pdmodel encryption r c4 cipher r0", "r8 b = $ i4", "r9 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ r2 = r9 salt", "r10 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ i5 = r10 b", "$ i7 = $ r2 [ $ i5 ]", "r11 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ i6 = r11 c", "$ i8 = $ i7 + $ i6", "$ i9 = $ i8 % 256", "r12 = org apache pdfbox pdmodel encryption r c4 cipher r0", "r12 c = $ i9", "r13 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ r3 = r13 salt", "r14 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ i11 = r14 b", "r15 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ i10 = r15 c", "org apache pdfbox pdmodel encryption r c4 cipher swap $ r3 $ i11 $ i10", "r16 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ r4 = r16 salt", "r17 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ i12 = r17 b", "$ i15 = $ r4 [ $ i12 ]", "r18 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ r5 = r18 salt", "r19 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ i13 = r19 c", "$ i14 = $ r5 [ $ i13 ]", "$ i16 = $ i15 + $ i14", "i1 = $ i16 % 256", "r20 = org apache pdfbox pdmodel encryption r c4 cipher r0", "$ r6 = r20 salt", "$ i17 = $ r6 [ i1 ]", "$ b18 = byte $ i17", "$ b19 = b0 ^ $ b18", "r1 write $ b19", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r2 = r3 annot", "$ r1 = org apache pdfbox co c o s name f", "$ r2 set flag $ r1 1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r3 = r4 annot", "$ r2 = org apache pdfbox co c o s name nm", "$ r3 set string $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r2 = r5 annot", "$ r1 = org apache pdfbox co c o s name rc", "$ r3 = $ r2 get dictionary object $ r1", "r6 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r4 = r6 get string or stream $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f annotation r0", "$ r3 = r4 annot", "$ r2 = org apache pdfbox co c o s name be", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = new org apache pdfbox co c o s array", "specialinvoke r11 < init >", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r9 = r3 next", "r4 = float [ ] $ r9", "r12 = new org apache pdfbox co c o s array", "specialinvoke r12 < init >", "r12 set float array r4", "r13 = org apache pdfbox co c o s base r12", "r11 add r13", "goto label1", "if $ z0 == 0 goto label2", "label r14 = org apache pdfbox pdmodel fdf f d f annotation ink r0", "$ r8 = r14 annot", "$ r7 = org apache pdfbox co c o s name inklist", "r15 = org apache pdfbox co c o s base r11", "$ r8 set item $ r7 r15", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r3 = org apache pdfbox pdmodel fdf f d f annotation line r0", "$ r2 = r3 annot", "$ r1 = org apache pdfbox co c o s name llo", "$ r2 set float $ r1 f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "f0 = 0 0f", "r6 = org apache pdfbox pdmodel fdf f d f annotation line r0", "$ r3 = r6 annot", "$ r2 = org apache pdfbox co c o s name co", "$ r4 = $ r3 get dictionary object $ r2", "r1 = org apache pdfbox co c o s array $ r4", "if r1 == null goto label1", "$ r5 = r1 to float array", "f0 = $ r5 [ 0 ]", "label return f0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f catalog r0", "$ r3 = r4 catalog", "$ r2 = org apache pdfbox co c o s name fdf", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f dictionary r0", "$ r3 = r4 fdf", "$ r2 = org apache pdfbox co c o s name target", "$ r3 set string $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache pdfbox pdmodel fdf f d f dictionary r0", "$ r2 = r5 fdf", "$ r3 = org apache pdfbox co c o s name embedded_fdfs", "$ r4 = org apache pdfbox pdmodel common c o s array list converter to c o s array r1", "r6 = org apache pdfbox co c o s base $ r4", "$ r2 set item $ r3 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f field r0", "$ r3 = r4 field", "$ r2 = org apache pdfbox co c o s name if", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f field r0", "$ r3 = r4 field", "$ r2 = org apache pdfbox co c o s name rv", "r5 = org apache pdfbox co c o s base r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f name page reference r0", "$ r3 = r4 ref", "$ r2 = org apache pdfbox co c o s name f", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel fdf f d f template r0", "$ r3 = r4 template", "$ r2 = org apache pdfbox co c o s name tref", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache pdfbox co c o s name standard_encoding", "$ z0 = $ r1 equal r0", "if $ z0 == 0 goto label1", "$ r8 = org apache pdfbox pdmodel font encode standard encode instance", "r9 = org apache pdfbox pdmodel font encode encode $ r8", "return r9", "if $ z0 == 0 goto label1", "label $ r2 = org apache pdfbox co c o s name win_ansi_encoding", "$ z1 = $ r2 equal r0", "if $ z1 == 0 goto label2", "$ r7 = org apache pdfbox pdmodel font encode win ansi encode instance", "r10 = org apache pdfbox pdmodel font encode encode $ r7", "return r10", "if $ z1 == 0 goto label2", "label $ r3 = org apache pdfbox co c o s name mac_roman_encoding", "$ z2 = $ r3 equal r0", "if $ z2 == 0 goto label3", "$ r6 = org apache pdfbox pdmodel font encode mac roman encode instance", "r11 = org apache pdfbox pdmodel font encode encode $ r6", "return r11", "if $ z2 == 0 goto label3", "label $ r4 = org apache pdfbox co c o s name mac_expert_encoding", "$ z3 = $ r4 equal r0", "if $ z3 == 0 goto label4", "$ r5 = org apache pdfbox pdmodel font encode mac expert encode instance", "r12 = org apache pdfbox pdmodel font encode encode $ r5", "return r12", "if $ z3 == 0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache pdfbox pdmodel font encode glyph list r0", "$ r3 = r5 unicode to name", "$ r4 = $ r3 get r1", "r2 = java lang string $ r4", "if r2 ! = null goto label1", "return \\ `` notdef\\ ``", "if r2 ! = null goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache pdfbox pdmodel font font cache r0", "$ r3 = r7 cache", "$ r4 = $ r3 get r1", "r2 = java lang ref soft reference $ r4", "if r2 == null goto label1", "$ r5 = r2 get", "$ r6 = org apache fontbox font box font $ r5", "goto label2", "label return $ r6", "if r2 == null goto label1", "label $ r6 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get font info", "r4 = org apache pdfbox pdmodel font font mapper impl r0", "$ r3 = specialinvoke r4 create font info by name $ r2", "r5 = org apache pdfbox pdmodel font font mapper impl r0", "r5 font info by name = $ r3", "r6 = org apache pdfbox pdmodel font font mapper impl r0", "r6 font provider = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = org apache pdfbox pdmodel font p d c i d font r0", "i1 = r6 code to c i d i0", "r7 = org apache pdfbox pdmodel font p d c i d font r0", "$ r1 = r7 vertical displacement y", "$ r2 = java lang integer value of i1", "$ r3 = $ r1 get $ r2", "r5 = java lang float $ r3", "if r5 ! = null goto label1", "r8 = org apache pdfbox pdmodel font p d c i d font r0", "$ r4 = r8 dw2", "$ f1 = $ r4 [ 1 ]", "r5 = java lang float value of $ f1", "label $ f0 = r5 float value", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r8 = org apache pdfbox pdmodel font p d c i d font type0 r0", "$ r1 = r8 cid font", "if $ r1 == null goto label1", "r9 = org apache pdfbox pdmodel font p d c i d font type0 r0", "$ r6 = r9 cid font", "$ r7 = $ r6 get type2 char string i0", "r10 = org apache fontbox cff type2 char string $ r7", "return r10", "if $ r1 == null goto label1", "label r11 = org apache pdfbox pdmodel font p d c i d font type0 r0", "$ r2 = r11 t1 font", "$ z0 = $ r2 instanceof org apache fontbox cff c f f type1 font", "if $ z0 == 0 goto label2", "r12 = org apache pdfbox pdmodel font p d c i d font type0 r0", "$ r3 = r12 t1 font", "$ r4 = org apache fontbox cff c f f type1 font $ r3", "$ r5 = $ r4 get type2 char string i0", "return $ r5", "if $ z0 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r5 = new org apache pdfbox pdmodel font p d c i d font type2", "r6 = org apache pdfbox pdmodel font p d c i d font type2 embedder r0", "$ r4 = r6 cid font", "r7 = org apache pdfbox pdmodel font p d c i d font type2 embedder r0", "$ r3 = r7 parent", "r8 = org apache pdfbox pdmodel font p d c i d font type2 embedder r0", "$ r2 = r8 ttf", "specialinvoke r5 < init > $ r4 $ r3 $ r2", "r9 = org apache pdfbox pdmodel font p d c i d font r5", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel font p d font r0", "$ r2 = r4 dict", "$ r1 = org apache pdfbox co c o s name type", "$ r3 = $ r2 get name a string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = null", "r6 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r3 = r6 dic", "$ r2 = org apache pdfbox co c o s name font_stretch", "$ r4 = $ r3 get dictionary object $ r2", "r1 = org apache pdfbox co c o s name $ r4", "if r1 == null goto label1", "r5 = r1 get name", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel font p d font descriptor r0", "$ i0 = r3 flag", "if $ i0 ! = -1 goto label1", "r4 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r2 = r4 dic", "$ r1 = org apache pdfbox co c o s name flag", "$ i2 = $ r2 get int $ r1 0", "r5 = org apache pdfbox pdmodel font p d font descriptor r0", "r5 flag = $ i2", "label r6 = org apache pdfbox pdmodel font p d font descriptor r0", "$ i1 = r6 flag", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r3 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r2 = r3 dic", "$ r1 = org apache pdfbox co c o s name italic_angle", "$ r2 set float $ r1 f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r3 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r2 = r3 dic", "$ r1 = org apache pdfbox co c o s name cap_height", "$ r2 set float $ r1 f0", "r4 = org apache pdfbox pdmodel font p d font descriptor r0", "r4 cap height = f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r3 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r2 = r3 dic", "$ r1 = org apache pdfbox co c o s name avg_width", "$ r2 set float $ r1 f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r3 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r2 = r3 dic", "$ r1 = org apache pdfbox co c o s name max_width", "$ r2 set float $ r1 f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r3 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r2 = r3 dic", "$ r1 = org apache pdfbox co c o s name missing_width", "$ r2 set float $ r1 f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = null", "r6 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r3 = r6 dic", "$ r2 = org apache pdfbox co c o s name char_set", "$ r4 = $ r3 get dictionary object $ r2", "r1 = org apache pdfbox co c o s string $ r4", "if r1 == null goto label1", "r5 = r1 get string", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel font p d font descriptor r0", "$ r3 = r4 dic", "$ r2 = org apache pdfbox co c o s name cid_set", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel font p d true type font r0", "$ r2 = r4 dict", "$ r1 = org apache pdfbox co c o s name base_font", "$ r3 = $ r2 get name a string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache pdfbox pdmodel font encode glyph list get adobe glyph list", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel font p d type1 font embedder r0", "$ r1 = r2 type1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = org apache pdfbox pdmodel font p d type3 font r0", "$ r3 = r8 dict", "$ r2 = org apache pdfbox co c o s name font_bbox", "r1 = $ r3 get dictionary object $ r2", "r6 = null", "$ z0 = r1 instanceof org apache pdfbox co c o s array", "if $ z0 == 0 goto label1", "r7 = new org apache pdfbox pdmodel common p d rectangle", "$ r5 = org apache pdfbox co c o s array r1", "specialinvoke r7 < init > $ r5", "r6 = r7", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel font p d type3 font r0", "$ r1 = r7 char procs", "if $ r1 ! = null goto label1", "r8 = org apache pdfbox pdmodel font p d type3 font r0", "$ r4 = r8 dict", "$ r3 = org apache pdfbox co c o s name char_procs", "$ r5 = $ r4 get dictionary object $ r3", "$ r6 = org apache pdfbox co c o s dictionary $ r5", "r9 = org apache pdfbox pdmodel font p d type3 font r0", "r9 char procs = $ r6", "label r10 = org apache pdfbox pdmodel font p d type3 font r0", "$ r2 = r10 char procs", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r17 = org apache pdfbox pdmodel graphic color p d cal r g b r0", "$ r2 = r17 dictionary", "$ r1 = org apache pdfbox co c o s name gamma", "$ r3 = $ r2 get dictionary object $ r1", "r11 = org apache pdfbox co c o s array $ r3", "if r11 ! = null goto label1", "r12 = new org apache pdfbox co c o s array", "specialinvoke r12 < init >", "r11 = r12", "r13 = new org apache pdfbox co c o s float", "specialinvoke r13 < init > 1 0f", "r18 = org apache pdfbox co c o s base r13", "r12 add r18", "r14 = new org apache pdfbox co c o s float", "specialinvoke r14 < init > 1 0f", "r19 = org apache pdfbox co c o s base r14", "r12 add r19", "r15 = new org apache pdfbox co c o s float", "specialinvoke r15 < init > 1 0f", "r20 = org apache pdfbox co c o s base r15", "r12 add r20", "r21 = org apache pdfbox pdmodel graphic color p d cal r g b r0", "$ r10 = r21 dictionary", "$ r9 = org apache pdfbox co c o s name gamma", "r22 = org apache pdfbox co c o s base r12", "$ r10 set item $ r9 r22", "label r16 = new org apache pdfbox pdmodel graphic color p d gamma", "specialinvoke r16 < init > r11", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel graphic color p d color r0", "$ r1 = r2 pattern name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = new org apache pdfbox co c o s array", "specialinvoke r6 < init >", "r7 = org apache pdfbox pdmodel graphic color p d color r0", "$ r3 = r7 component", "r6 set float array $ r3", "r8 = org apache pdfbox pdmodel graphic color p d color r0", "$ r4 = r8 pattern name", "if $ r4 == null goto label1", "r9 = org apache pdfbox pdmodel graphic color p d color r0", "$ r5 = r9 pattern name", "r10 = org apache pdfbox co c o s base $ r5", "r6 add r10", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel graphic color p d tristimulus r0", "$ r1 = r4 value", "$ r2 = $ r1 get 0", "$ r3 = org apache pdfbox co c o s number $ r2", "$ f0 = $ r3 float value", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel graphic color p d tristimulus r0", "$ r1 = r4 value", "$ r2 = $ r1 get 2", "$ r3 = org apache pdfbox co c o s number $ r2", "$ f0 = $ r3 float value", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache pdfbox pdmodel graphic image sample image reader get r g b image r0 null", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel graphic pattern p d tile pattern r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name resource", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel graphic shade p d shade type2 r0", "$ r1 = r7 domain", "if $ r1 ! = null goto label1", "r8 = org apache pdfbox pdmodel graphic shade p d shade type2 r0", "$ r3 = r8 get c o s object", "$ r4 = org apache pdfbox co c o s name domain", "$ r5 = $ r3 get dictionary object $ r4", "$ r6 = org apache pdfbox co c o s array $ r5", "r9 = org apache pdfbox pdmodel graphic shade p d shade type2 r0", "r9 domain = $ r6", "label r10 = org apache pdfbox pdmodel graphic shade p d shade type2 r0", "$ r2 = r10 domain", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel graphic shade p d shade type2 r0", "r4 coords = r1", "r5 = org apache pdfbox pdmodel graphic shade p d shade type2 r0", "$ r2 = r5 get c o s object", "$ r3 = org apache pdfbox co c o s name coords", "r6 = org apache pdfbox co c o s base r1", "$ r2 set item $ r3 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache pdfbox pdmodel graphic shade p d shade type4 r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name bits_per_flag", "$ r1 set int $ r2 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache pdfbox co c o s name sm", "r3 = org apache pdfbox pdmodel graphic state p d extend graphic state r0", "$ r2 = specialinvoke r3 get float item $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel graphic state p d extend graphic state r0", "$ r3 = r5 dict", "$ r2 = org apache pdfbox co c o s name tr2", "r1 = $ r3 get dictionary object $ r2", "$ z0 = r1 instanceof org apache pdfbox co c o s array", "if $ z0 == 0 goto label1", "$ r4 = org apache pdfbox co c o s array r1", "$ i0 = $ r4 size", "if $ i0 == 4 goto label1", "return null", "if $ i0 == 4 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel graphic state p d extend graphic state r0", "$ r3 = r4 dict", "$ r2 = org apache pdfbox co c o s name tr2", "$ r3 set item $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache pdfbox pdmodel graphic state p d graphic state r0", "r1 non stroke alpha constant = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox pdmodel graphic state p d graphic state r0", "$ z0 = r1 alpha source", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox pdmodel graphic state p d graphic state r0", "r1 overprint = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache pdfbox pdmodel graphic state p d graphic state r0", "r1 overprint mode = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel graphic state p d graphic state r0", "$ r1 = r2 text state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel graphic state p d graphic state r0", "r2 text state = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel graphic state p d graphic state r0", "$ r1 = r2 stroke color", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel graphic state p d graphic state r0", "$ r1 = r2 clip path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel graphic state p d soft mask r0", "$ r2 = r7 transfer function", "if $ r2 ! = null goto label1", "r8 = org apache pdfbox pdmodel graphic state p d soft mask r0", "$ r3 = r8 get c o s object", "$ r4 = org apache pdfbox co c o s name tr", "r1 = $ r3 get dictionary object $ r4", "if r1 == null goto label1", "$ r5 = org apache pdfbox pdmodel common function p d function create r1", "r9 = org apache pdfbox pdmodel graphic state p d soft mask r0", "r9 transfer function = $ r5", "label r10 = org apache pdfbox pdmodel graphic state p d soft mask r0", "$ r6 = r10 transfer function", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache pdfbox pdmodel graphic state p d text state r0", "r1 font size = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache pdfbox pdmodel interactive documentnavigation destination p d page destination", "if $ z0 == 0 goto label1", "r2 = org apache pdfbox pdmodel interactive documentnavigation destination p d page destination r1", "r3 = r2 get c o s object", "$ i0 = r3 size", "if $ i0 < 1 goto label1", "r4 = r3 get object 0", "$ z1 = r4 instanceof org apache pdfbox co c o s dictionary", "if $ z1 ! = 0 goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` destination of a go to action must be a page dictionary object\\ ``", "throw r8", "if $ z1 ! = 0 goto label1", "label r9 = org apache pdfbox pdmodel interactive action p d action go to r0", "$ r6 = r9 get c o s object", "$ r7 = org apache pdfbox co c o s name d", "r10 = org apache pdfbox pdmodel common c o s objectable r1", "$ r6 set item $ r7 r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive action p d action sound r0", "$ r2 = r3 action", "$ r1 = org apache pdfbox co c o s name repeat", "$ r2 set boolean $ r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive action p d annotation additional action r0", "$ r3 = r4 action", "$ r2 = org apache pdfbox co c o s name d", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive action p d form field additional action r0", "$ r3 = r4 action", "$ r2 = org apache pdfbox co c o s name c", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache pdfbox pdmodel interactive annotation p d annotation line r0", "$ r2 = r5 get c o s object", "$ r3 = org apache pdfbox co c o s name ic", "$ r4 = r1 to c o s array", "r6 = org apache pdfbox co c o s base $ r4", "$ r2 set item $ r3 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive annotation p d annotation link r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name h", "$ r2 set name $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel interactive annotation p d annotation markup r0", "$ r1 = r3 get c o s object", "$ r2 = $ r1 get name a string \\ `` rt\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive annotation p d annotation square circle r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name be", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel interactive annotation p d annotation widget r0", "$ r2 = r7 get c o s object", "$ r3 = org apache pdfbox co c o s name mk", "r1 = $ r2 get dictionary object $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s dictionary", "if $ z0 == 0 goto label1", "r6 = new org apache pdfbox pdmodel interactive annotation p d appearance characteristic dictionary", "$ r5 = org apache pdfbox co c o s dictionary r1", "specialinvoke r6 < init > $ r5", "return r6", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive annotation p d annotation widget r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name a", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel interactive annotation p d appearance characteristic dictionary r0", "$ r1 = r4 get c o s object", "$ r2 = org apache pdfbox co c o s name rc", "$ r3 = $ r1 get string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel interactive annotation p d appearance characteristic dictionary r0", "$ r2 = r7 get c o s object", "$ r3 = org apache pdfbox co c o s name ri", "r1 = $ r2 get dictionary object $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s stream", "if $ z0 == 0 goto label1", "r6 = new org apache pdfbox pdmodel graphic form p d form x object", "$ r5 = org apache pdfbox co c o s stream r1", "specialinvoke r6 < init > $ r5", "return r6", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive annotation p d appearance entry r0", "$ r1 = r2 entry", "$ z0 = $ r1 instanceof org apache pdfbox co c o s stream", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive annotation p d border effect dictionary r0", "$ r2 = r3 get c o s object", "$ r2 set name \\ `` s\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = null", "if r1 == null goto label1", "r3 = r1", "label r4 = org apache pdfbox pdmodel interactive annotation p d border style dictionary r0", "$ r2 = r4 get c o s object", "r5 = org apache pdfbox co c o s base r3", "$ r2 set item \\ `` d\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel interactive digitalsignature p d prop build data dict r0", "$ r2 = r4 dictionary", "$ r1 = org apache pdfbox co c o s name date", "$ r3 = $ r2 get string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name ff", "$ r1 set flag $ r2 1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name ff", "$ r1 set flag $ r2 32 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache pdfbox pdmodel interactive digitalsignature p d seed value r0", "$ r2 = r5 dictionary", "$ r3 = org apache pdfbox co c o s name reason", "$ r4 = org apache pdfbox pdmodel common c o s array list converter to c o s array r1", "r6 = org apache pdfbox co c o s base $ r4", "$ r2 set item $ r3 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value certificate r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name ff", "$ r1 set flag $ r2 4 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org apache pdfbox pdmodel interactive digitalsignature p d seed value certificate r0", "$ r4 = r6 dictionary", "$ r3 = org apache pdfbox co c o s name oid", "r1 = $ r4 get dictionary object $ r3", "$ z0 = r1 instanceof org apache pdfbox co c o s array", "if $ z0 == 0 goto label1", "r2 = org apache pdfbox co c o s array r1", "$ r5 = org apache pdfbox pdmodel interactive digitalsignature p d seed value certificate get list of byte array from c o s array r2", "return $ r5", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value time stamp r0", "$ r2 = r3 dictionary", "$ r1 = org apache pdfbox co c o s name ft", "$ i0 = $ r2 get int $ r1 0", "if $ i0 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive digitalsignature p d signature r0", "$ r3 = r4 dictionary", "$ r2 = org apache pdfbox co c o s name sub_filter", "r5 = org apache pdfbox co c o s base r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = org apache pdfbox pdmodel interactive digitalsignature p d signature r0", "$ r4 = r6 dictionary", "$ r3 = org apache pdfbox co c o s name byterange", "$ r5 = $ r4 get dictionary object $ r3", "r1 = org apache pdfbox co c o s array $ r5", "$ i0 = r1 size", "r2 = newarray int [ $ i0 ]", "i3 = 0", "label $ i1 = lengthof r2", "if i3 > = $ i1 goto label2", "$ i2 = r1 get int i3", "r2 [ i3 ] = $ i2", "i3 = i3 + 1", "goto label1", "if i3 > = $ i1 goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d f template structure r0", "$ r1 = r2 page", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d f template structure r0", "r2 page = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d f template structure r0", "r2 image form = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r2 = \\ `` fit b\\ ``", "r4 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit destination r0", "$ r1 = r4 array", "$ r3 = $ r1 get name 1", "$ z0 = $ r2 equal $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit rectangle destination r0", "$ r1 = r2 array", "$ i0 = $ r1 get int 4", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit rectangle destination r0", "$ r1 = r2 array", "$ i0 = $ r1 get int 5", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive documentnavigation outline p d outline item r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name a", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive documentnavigation outline p d outline item r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name se", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel interactive form p d acro form r0", "$ r2 = r4 dictionary", "$ r1 = org apache pdfbox co c o s name da", "$ r3 = $ r2 get string $ r1 \\ `` \\ ``", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel interactive form p d acro form r0", "$ r2 = r3 dictionary", "$ r1 = org apache pdfbox co c o s name need_appearances", "$ z0 = $ r2 get boolean $ r1 0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive form p d button r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name ff", "$ r1 set flag $ r2 65536 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label5", "if r2 == null goto label5", "$ z0 = r1 be empty", "if $ z0 ! = 0 goto label5", "$ z1 = r2 be empty", "if $ z1 ! = 0 goto label5", "$ i0 = r1 size", "$ i1 = r2 size", "if $ i0 == $ i1 goto label1", "r21 = new java lang illegal argument exception", "specialinvoke r21 < init > \\ `` the number of entry for export value and display value shall be the same \\ ``", "throw r21", "if $ i0 == $ i1 goto label1", "label r3 = org apache pdfbox pdmodel interactive form field utils to key value list r1 r2", "r26 = org apache pdfbox pdmodel interactive form p d choice r0", "$ z2 = r26 be sort", "if $ z2 == 0 goto label2", "org apache pdfbox pdmodel interactive form field utils sort by value r3", "label r22 = new org apache pdfbox co c o s array", "specialinvoke r22 < init >", "i2 = 0", "label $ i3 = r1 size", "if i2 > = $ i3 goto label4", "r23 = new org apache pdfbox co c o s array", "specialinvoke r23 < init >", "r24 = new org apache pdfbox co c o s string", "$ r11 = r3 get i2", "$ r12 = org apache pdfbox pdmodel interactive form field utils $ key value $ r11", "$ r13 = $ r12 get key", "specialinvoke r24 < init > $ r13", "r27 = org apache pdfbox co c o s base r24", "r23 add r27", "r25 = new org apache pdfbox co c o s string", "$ r15 = r3 get i2", "$ r16 = org apache pdfbox pdmodel interactive form field utils $ key value $ r15", "$ r17 = $ r16 get value", "specialinvoke r25 < init > $ r17", "r28 = org apache pdfbox co c o s base r25", "r23 add r28", "r29 = org apache pdfbox co c o s base r23", "r22 add r29", "i2 = i2 + 1", "goto label3", "if i2 > = $ i3 goto label4", "label r30 = org apache pdfbox pdmodel interactive form p d choice r0", "$ r7 = r30 get c o s object", "$ r8 = org apache pdfbox co c o s name opt", "r31 = org apache pdfbox co c o s base r22", "$ r7 set item $ r8 r31", "goto label6", "label return", "if $ z1 ! = 0 goto label5", "label r32 = org apache pdfbox pdmodel interactive form p d choice r0", "$ r19 = r32 get c o s object", "$ r20 = org apache pdfbox co c o s name opt", "$ r19 remove item $ r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel interactive form p d choice r0", "$ r1 = r2 get option", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel interactive form p d non terminal field r0", "$ r1 = r4 get c o s object", "$ r2 = org apache pdfbox co c o s name v", "$ r3 = $ r1 get dictionary object $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r12 = org apache pdfbox pdmodel interactive form p d radio button r0", "r1 = r12 get on value", "r13 = org apache pdfbox pdmodel interactive form p d radio button r0", "r2 = r13 get export value", "r11 = new java util array list", "specialinvoke r11 < init >", "$ z0 = r2 be empty", "if $ z0 == 0 goto label1", "r14 = org apache pdfbox pdmodel interactive form p d radio button r0", "$ r10 = r14 get value", "r11 add $ r10", "return r11", "if $ z0 == 0 goto label1", "label r15 = org apache pdfbox pdmodel interactive form p d radio button r0", "r4 = r15 get value", "r5 = r1 iterator", "label $ z1 = r5 have next", "if $ z1 == 0 goto label4", "$ r8 = r5 next", "r6 = java lang string $ r8", "$ i1 = r6 compare to r4", "if $ i1 ! = 0 goto label3", "$ r9 = r2 get 0", "r11 add $ r9", "label goto label2", "if $ z1 == 0 goto label4", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive form p d signature field r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name dv", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive form p d text field r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name ff", "$ r1 set flag $ r2 16777216 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel interactive form p d text field r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name max_len", "$ i0 = $ r1 get int $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache pdfbox co c o s name dv", "r4 = org apache pdfbox pdmodel interactive form p d text field r0", "$ r2 = r4 get inheritable attribute $ r1", "r5 = org apache pdfbox pdmodel interactive form p d text field r0", "$ r3 = r5 get string or stream $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return \\ `` measure\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r9 = org apache pdfbox pdmodel interactive measurement p d rectlinear measure dictionary r0", "$ r4 = r9 get c o s object", "$ r5 = $ r4 get dictionary object \\ `` x\\ ``", "r1 = org apache pdfbox co c o s array $ r5", "if r1 == null goto label3", "$ i0 = r1 size", "r2 = newarray org apache pdfbox pdmodel interactive measurement p d number format dictionary [ $ i0 ]", "i2 = 0", "label $ i1 = r1 size", "if i2 > = $ i1 goto label2", "$ r6 = r1 get i2", "r3 = org apache pdfbox co c o s dictionary $ r6", "r8 = new org apache pdfbox pdmodel interactive measurement p d number format dictionary", "specialinvoke r8 < init > r3", "r2 [ i2 ] = r8", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r2", "if r1 == null goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive measurement p d viewport dictionary r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name name", "$ r2 set name $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = null", "r8 = org apache pdfbox pdmodel interactive pagenavigation p d thread bead r0", "$ r3 = r8 bead", "$ r2 = org apache pdfbox co c o s name r", "$ r4 = $ r3 get dictionary object $ r2", "r1 = org apache pdfbox co c o s array $ r4", "if r1 == null goto label1", "r7 = new org apache pdfbox pdmodel common p d rectangle", "specialinvoke r7 < init > r1", "r6 = r7", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive pagenavigation p d thread bead r0", "$ r3 = r4 bead", "$ r2 = org apache pdfbox co c o s name r", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0", "$ r2 = r3 prefs", "$ r1 = org apache pdfbox co c o s name hide_toolbar", "$ r2 set boolean $ r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0", "$ r2 = r3 prefs", "$ r1 = org apache pdfbox co c o s name fit_window", "$ r2 set boolean $ r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0", "$ r2 = r6 prefs", "$ r3 = org apache pdfbox co c o s name view_clip", "$ r1 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference $ boundary crop box", "$ r4 = $ r1 to string", "$ r5 = $ r2 get name a string $ r3 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0", "$ r3 = r4 prefs", "$ r2 = org apache pdfbox co c o s name print_area", "$ r3 set name $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org apache pdfbox pdmodel interactive digitalsignature signature option", "specialinvoke r4 < init >", "r5 = org apache pdfbox pdmodel p d document r0", "r5 add signature r1 r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r10 = new java util array list", "specialinvoke r10 < init >", "r11 = org apache pdfbox pdmodel p d document r0", "$ r6 = r11 get document catalog", "r2 = $ r6 get acro form", "if r2 == null goto label3", "$ r7 = r2 get field tree", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r8 = r3 next", "r4 = org apache pdfbox pdmodel interactive form p d field $ r8", "$ z1 = r4 instanceof org apache pdfbox pdmodel interactive form p d signature field", "if $ z1 == 0 goto label2", "$ r9 = org apache pdfbox pdmodel interactive form p d signature field r4", "r10 add $ r9", "label goto label1", "if $ z0 == 0 goto label3", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org apache pdfbox pdmodel p d document r0", "$ z0 = r15 be all security to be remove", "if $ z0 == 0 goto label1", "$ r11 = org apache pdfbox pdmodel p d document log", "$ r11 warn \\ `` do not call set all security to be remove true before call protect a protect implies set all security to be remove false \\ ``", "r16 = org apache pdfbox pdmodel p d document r0", "r16 set all security to be remove 0", "label r17 = org apache pdfbox pdmodel p d document r0", "$ z1 = r17 be encrypt", "if $ z1 ! = 0 goto label2", "r12 = new org apache pdfbox pdmodel encryption p d encryption", "specialinvoke r12 < init >", "r18 = org apache pdfbox pdmodel p d document r0", "r18 encryption = r12", "label $ r3 = org apache pdfbox pdmodel encryption security handler factory instance", "r2 = $ r3 new security handler for policy r1", "if r2 ! = null goto label3", "r14 = new java io i o exception", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r7 = r13 append \\ `` no security handler for policy \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "specialinvoke r14 < init > $ r9", "throw r14", "if r2 ! = null goto label3", "label r19 = org apache pdfbox pdmodel p d document r0", "$ r4 = r19 get encryption", "$ r4 set security handler r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel p d document r0", "r2 resource cache = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache pdfbox pdmodel p d document catalog r0", "$ r3 = r7 root", "$ r2 = org apache pdfbox co c o s name viewer_preferences", "r1 = $ r3 get dictionary object $ r2", "$ z0 = r1 instanceof org apache pdfbox co c o s dictionary", "if $ z0 == 0 goto label1", "r6 = new org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference", "$ r5 = r6", "$ r4 = org apache pdfbox co c o s dictionary r1", "specialinvoke r6 < init > $ r4", "goto label2", "label return $ r5", "if $ z0 == 0 goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel p d document catalog r0", "$ r3 = r4 root", "$ r2 = org apache pdfbox co c o s name names", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache pdfbox pdmodel p d document catalog r0", "$ r2 = r5 root", "$ r3 = org apache pdfbox co c o s name page_mode", "$ r4 = r1 string value", "$ r2 set name $ r3 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel p d document catalog r0", "$ r3 = r4 root", "$ r2 = org apache pdfbox co c o s name page_labels", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r3 set item $ r2 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org apache pdfbox pdmodel p d document information r0", "$ r2 = r4 info", "$ r1 = org apache pdfbox co c o s name trap", "$ r3 = $ r2 get name a string $ r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache pdfbox pdmodel p d page r0", "$ r2 = r5 page", "$ r3 = org apache pdfbox co c o s name b", "$ r4 = org apache pdfbox pdmodel common c o s array list converter to c o s array r1", "r6 = org apache pdfbox co c o s base $ r4", "$ r2 set item $ r3 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r11 = org apache pdfbox pdmodel p d page content stream r0", "$ z0 = r11 in text mode", "if $ z0 == 0 goto label1", "$ r10 = org apache pdfbox pdmodel p d page content stream log", "$ r10 warn \\ `` restore the graphic state be not allow within text object \\ ``", "label r12 = org apache pdfbox pdmodel p d page content stream r0", "$ r1 = r12 font stack", "$ z1 = $ r1 be empty", "if $ z1 ! = 0 goto label2", "r13 = org apache pdfbox pdmodel p d page content stream r0", "$ r8 = r13 font stack", "$ r8 pop", "label r14 = org apache pdfbox pdmodel p d page content stream r0", "$ r2 = r14 stroke color space stack", "$ z2 = $ r2 be empty", "if $ z2 ! = 0 goto label3", "r15 = org apache pdfbox pdmodel p d page content stream r0", "$ r6 = r15 stroke color space stack", "$ r6 pop", "label r16 = org apache pdfbox pdmodel p d page content stream r0", "$ r3 = r16 non stroke color space stack", "$ z3 = $ r3 be empty", "if $ z3 ! = 0 goto label4", "r17 = org apache pdfbox pdmodel p d page content stream r0", "$ r4 = r17 non stroke color space stack", "$ r4 pop", "label r18 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r18 write operator \\ `` q\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel p d page content stream r0", "$ z0 = r3 in text mode", "if $ z0 == 0 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` error fill even odd be not allow within a text block \\ ``", "throw r2", "if $ z0 == 0 goto label1", "label r4 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r4 write operator \\ `` f * \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache pdfbox pdmodel p d page content stream r0", "$ z0 = r6 in text mode", "if $ z0 == 0 goto label1", "r5 = new java lang illegal state exception", "specialinvoke r5 < init > \\ `` error shading fill be not allow within a text block \\ ``", "throw r5", "if $ z0 == 0 goto label1", "label r7 = org apache pdfbox pdmodel p d page content stream r0", "$ r2 = r7 resource", "$ r3 = $ r2 add r1", "r8 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r8 write operand $ r3", "r9 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r9 write operator \\ `` sh\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r2 write operand r1", "r3 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r3 write operator \\ `` bmc\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache pdfbox pdmodel p d page content stream r0", "r1 write operand f0", "r2 = org apache pdfbox pdmodel p d page content stream r0", "specialinvoke r2 write operator \\ `` tc\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r2 get c o s object", "$ r7 = org apache pdfbox co c o s name parent", "$ r8 = r3 get dictionary object $ r7", "r4 = org apache pdfbox co c o s dictionary $ r8", "$ r9 = org apache pdfbox co c o s name kid", "$ r10 = r4 get dictionary object $ r9", "r5 = org apache pdfbox co c o s array $ r10", "z1 = 0", "i1 = 0", "label $ i0 = r5 size", "if i1 > = $ i0 goto label3", "$ r12 = r5 get object i1", "r6 = org apache pdfbox co c o s dictionary $ r12", "$ r13 = r2 get c o s object", "$ z0 = r6 equal $ r13", "if $ z0 == 0 goto label2", "$ r14 = r1 get c o s object", "r18 = org apache pdfbox co c o s base $ r14", "r5 add i1 r18", "$ r15 = r1 get c o s object", "$ r16 = org apache pdfbox co c o s name parent", "r19 = org apache pdfbox co c o s base r4", "$ r15 set item $ r16 r19", "z1 = 1", "goto label3", "label if z1 ! = 0 goto label4", "r17 = new java lang illegal argument exception", "specialinvoke r17 < init > \\ `` attempt to insert before orphan page\\ ``", "throw r17", "label if z1 ! = 0 goto label4", "label r20 = org apache pdfbox pdmodel p d page tree r0", "specialinvoke r20 increase parent r4", "return", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [], [33], [34], [35], [], [37], [38], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache pdfbox co c o s name font", "r3 = org apache pdfbox pdmodel p d resource r0", "$ r2 = specialinvoke r3 get names $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache pdfbox co c o s name shade", "r3 = org apache pdfbox pdmodel p d resource r0", "$ r2 = specialinvoke r3 get names $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache pdfbox co c o s name xobject", "r5 = org apache pdfbox pdmodel p d resource r0", "r6 = org apache pdfbox pdmodel common c o s objectable r1", "$ r4 = specialinvoke r5 add $ r3 r2 r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache pdfbox co c o s name property", "r4 = org apache pdfbox pdmodel p d resource r0", "r5 = org apache pdfbox pdmodel common c o s objectable r2", "specialinvoke r4 put $ r3 r1 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache pdfbox co c o s name property", "r4 = org apache pdfbox pdmodel p d resource r0", "r5 = org apache pdfbox pdmodel common c o s objectable r2", "specialinvoke r4 put $ r3 r1 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache pdfbox co c o s name property", "r4 = org apache pdfbox pdmodel p d resource r0", "r5 = org apache pdfbox pdmodel common c o s objectable r2", "specialinvoke r4 put $ r3 r1 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox render page drawer r0", "$ r1 = r2 graphic", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache pdfbox render p d f renderer r0", "r2 render page to graphic i0 r1 1 0f", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox text p d f text stripper r0", "$ z0 = r1 should separate by bead", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox text p d f text stripper r0", "r1 add more formatting = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox text p d f text stripper r0", "$ f0 = r1 drop threshold", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox text p d f text stripper r0", "$ r1 = r2 paragraph end", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache pdfbox text p d f text stripper r0", "r2 page start = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox text text position r0", "$ i0 = r1 rotation", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox text text position r0", "$ f0 = r1 page width", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache pdfbox util filetypedetector byte trie r0", "r8 = r10 root", "r9 = r8 get value", "i0 = lengthof r1", "i2 = 0", "label if i2 > = i0 goto label4", "b1 = r1 [ i2 ]", "$ r4 = org apache pdfbox util filetypedetector byte trie $ byte trie node access $ 000 r8", "$ r5 = java lang byte value of b1", "$ r6 = $ r4 get $ r5", "r3 = org apache pdfbox util filetypedetector byte trie $ byte trie node $ r6", "if r3 ! = null goto label2", "goto label4", "label return r9", "if r3 ! = null goto label2", "label r8 = r3", "$ r7 = r3 get value", "if $ r7 == null goto label3", "r9 = r3 get value", "label i2 = i2 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["s0 = @ parameter0", "r0 = newarray char [ 4 ]", "$ r1 = org apache pdfbox util hex hex_chars", "$ s1 = s0 > > 12", "$ s2 = $ s1 & 15", "$ c3 = $ r1 [ $ s2 ]", "r0 [ 0 ] = $ c3", "$ r2 = org apache pdfbox util hex hex_chars", "$ s4 = s0 > > 8", "$ s5 = $ s4 & 15", "$ c6 = $ r2 [ $ s5 ]", "r0 [ 1 ] = $ c6", "$ r3 = org apache pdfbox util hex hex_chars", "$ s7 = s0 > > 4", "$ s8 = $ s7 & 15", "$ c9 = $ r3 [ $ s8 ]", "r0 [ 2 ] = $ c9", "$ r4 = org apache pdfbox util hex hex_chars", "$ s10 = s0 & 15", "$ c11 = $ r4 [ $ s10 ]", "r0 [ 3 ] = $ c11", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org apache pdfbox co c o s array", "if $ z0 ! = 0 goto label1", "$ r6 = new org apache pdfbox util matrix", "specialinvoke $ r6 < init >", "return $ r6", "if $ z0 ! = 0 goto label1", "label r1 = org apache pdfbox co c o s array r0", "$ i0 = r1 size", "if $ i0 > = 6 goto label2", "$ r5 = new org apache pdfbox util matrix", "specialinvoke $ r5 < init >", "return $ r5", "if $ i0 > = 6 goto label2", "label i1 = 0", "label if i1 > = 6 goto label5", "$ r3 = r1 get object i1", "$ z1 = $ r3 instanceof org apache pdfbox co c o s number", "if $ z1 ! = 0 goto label4", "$ r4 = new org apache pdfbox util matrix", "specialinvoke $ r4 < init >", "return $ r4", "if $ z1 ! = 0 goto label4", "label i1 = i1 + 1", "goto label3", "label if i1 > = 6 goto label5", "label $ r2 = new org apache pdfbox util matrix", "specialinvoke $ r2 < init > r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache pdfbox util matrix", "specialinvoke r4 < init >", "r5 = org apache pdfbox util matrix r0", "$ r3 = r5 multiply r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache pdfbox util matrix r0", "$ r2 = r10 single", "f0 = $ r2 [ 0 ]", "r11 = org apache pdfbox util matrix r0", "$ r3 = r11 single", "f1 = $ r3 [ 1 ]", "r12 = org apache pdfbox util matrix r0", "$ r4 = r12 single", "f2 = $ r4 [ 3 ]", "r13 = org apache pdfbox util matrix r0", "$ r5 = r13 single", "f3 = $ r5 [ 4 ]", "r14 = org apache pdfbox util matrix r0", "$ r6 = r14 single", "f4 = $ r6 [ 6 ]", "r15 = org apache pdfbox util matrix r0", "$ r7 = r15 single", "f5 = $ r7 [ 7 ]", "f6 = r1 get x", "f7 = r1 get y", "r9 = new org apache pdfbox util vector", "$ f9 = f6 * f0", "$ f8 = f7 * f2", "$ f10 = $ f9 + $ f8", "$ f15 = $ f10 + f4", "$ f12 = f6 * f1", "$ f11 = f7 * f3", "$ f13 = $ f12 + $ f11", "$ f14 = $ f13 + f5", "specialinvoke r9 < init > $ f15 $ f14", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["d0 = @ parameter0", "f0 = @ parameter1", "f1 = @ parameter2", "$ d1 = java lang math co d0", "f2 = float $ d1", "$ d2 = java lang math sin d0", "f3 = float $ d2", "$ r1 = new org apache pdfbox util matrix", "specialinvoke $ r1 < init >", "$ r2 = $ r1 single", "$ r2 [ 0 ] = f2", "$ r3 = $ r1 single", "$ r3 [ 1 ] = f3", "$ r4 = $ r1 single", "$ f4 = neg f3", "$ r4 [ 3 ] = $ f4", "$ r5 = $ r1 single", "$ r5 [ 4 ] = f2", "$ r6 = $ r1 single", "$ r6 [ 6 ] = f0", "$ r7 = $ r1 single", "$ r7 [ 7 ] = f1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = org apache pdfbox tool text to p d f r0", "$ z0 = r1 landscape", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ l4 = long i0", "l2 = $ l4 < < 32", "$ i5 = java lang integer rotate leave i1 1", "$ l6 = long $ i5", "l3 = $ l6 & 4294967295l", "$ l7 = l2 | l3", "$ l8 = java lang long rotate right $ l7 1", "return $ l8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus plexus context default context r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "return r1", "if r2 ! = null goto label1", "label $ r3 = new java lang string buffer", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append r1", "$ r5 = $ r4 append \\ `` \\ ``", "$ r6 = $ r5 append r2", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org codehaus plexus interpolation reflection method map r0", "$ r2 = r5 method by name map", "$ r3 = $ r2 get r1", "$ r4 = java util list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org sonatype plexus component sec dispatcher model config property r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r29 = org codehaus plexus util directory scanner r0", "$ z0 = r29 have slow result", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r30 = org codehaus plexus util directory scanner r0", "$ r3 = r30 dirs exclude", "$ i0 = $ r3 size", "r1 = newarray java lang string [ $ i0 ]", "r31 = org codehaus plexus util directory scanner r0", "$ r4 = r31 dirs exclude", "$ r4 copy into r1", "r32 = org codehaus plexus util directory scanner r0", "$ r5 = r32 dirs not include", "$ i1 = $ r5 size", "r2 = newarray java lang string [ $ i1 ]", "r33 = org codehaus plexus util directory scanner r0", "$ r6 = r33 dirs not include", "$ r6 copy into r2", "i2 = lengthof r1", "i3 = 0", "label if i3 > = i2 goto label4", "r22 = r1 [ i3 ]", "r34 = org codehaus plexus util directory scanner r0", "$ z2 = r34 could hold included r22", "if $ z2 ! = 0 goto label3", "r25 = new java io file", "r35 = org codehaus plexus util directory scanner r0", "$ r15 = r35 basedir", "specialinvoke r25 < init > $ r15 r22", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r17 = r26 append r22", "$ r18 = java io file separator", "$ r19 = $ r17 append $ r18", "$ r20 = $ r19 to string", "r36 = org codehaus plexus util directory scanner r0", "r36 scandir r25 $ r20 0", "label i3 = i3 + 1", "goto label2", "label if i3 > = i2 goto label4", "label i4 = lengthof r2", "i5 = 0", "label if i5 > = i4 goto label7", "r24 = r2 [ i5 ]", "r37 = org codehaus plexus util directory scanner r0", "$ z1 = r37 could hold included r24", "if $ z1 ! = 0 goto label6", "r27 = new java io file", "r38 = org codehaus plexus util directory scanner r0", "$ r8 = r38 basedir", "specialinvoke r27 < init > $ r8 r24", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r10 = r28 append r24", "$ r11 = java io file separator", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 to string", "r39 = org codehaus plexus util directory scanner r0", "r39 scandir r27 $ r13 0", "label i5 = i5 + 1", "goto label5", "label if i5 > = i4 goto label7", "label r40 = org codehaus plexus util directory scanner r0", "r40 have slow result = 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [], [64], [65], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org codehaus plexus util directory walker r0", "$ r2 = r3 listener", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus plexus util exception utils cause_method_names", "$ r2 = org codehaus plexus util exception utils get cause r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java lang system err", "org codehaus plexus util exception utils print root cause stack trace r0 $ r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get method", "$ r5 = new java util array list", "specialinvoke $ r5 < init >", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r1 [ i1 ]", "$ z0 = org codehaus plexus util reflection utils be setter r4", "if $ z0 == 0 goto label2", "$ r5 add r4", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 length", "if $ i0 ! = 4 goto label5", "$ c1 = r0 char at 0", "if $ c1 == 116 goto label1", "$ c8 = r0 char at 0", "if $ c8 ! = 84 goto label5", "label $ c2 = r0 char at 1", "if $ c2 == 114 goto label2", "$ c7 = r0 char at 1", "if $ c7 ! = 82 goto label5", "label $ c3 = r0 char at 2", "if $ c3 == 117 goto label3", "$ c6 = r0 char at 2", "if $ c6 ! = 85 goto label5", "label $ c4 = r0 char at 3", "if $ c4 == 101 goto label4", "$ c5 = r0 char at 3", "if $ c5 ! = 69 goto label5", "label $ z0 = 1", "goto label6", "label return $ z0", "if $ c5 ! = 69 goto label5", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r3 = org codehaus plexus util xml pretty print x m l writer r0", "$ r1 = r3 get line separator", "r4 = org codehaus plexus util xml pretty print x m l writer r0", "specialinvoke r4 write $ r1", "i1 = 0", "label r5 = org codehaus plexus util xml pretty print x m l writer r0", "$ i0 = r5 get depth", "if i1 > = $ i0 goto label2", "r6 = org codehaus plexus util xml pretty print x m l writer r0", "$ r2 = r6 get line indenter", "r7 = org codehaus plexus util xml pretty print x m l writer r0", "specialinvoke r7 write $ r2", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["c0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "org codehaus plexus util xml pull m x serializer add printable $ r1 c0", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus plexus util cli commandline r0", "$ r1 = r2 create argument 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org codehaus plexus util o be family \\ `` windows\\ ``", "if $ z0 == 0 goto label2", "$ r2 = r0 get name", "$ r3 = org codehaus plexus util file utils invalid_characters_for_windows_file_name", "$ i0 = org codehaus plexus util string utils index of any $ r2 $ r3", "if $ i0 == -1 goto label1", "return 0", "if $ i0 == -1 goto label1", "label r1 = r0 get parent file", "if r1 == null goto label2", "$ z1 = org codehaus plexus util file utils be valid window file name r1", "return $ z1", "if r1 == null goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi ddf abstract escher opt record r0", "$ r2 = r3 property", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi ddf abstract escher opt record r0", "$ r1 = r2 property", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi ddf escher bitmap blip r0", "$ b0 = r1 field_2_marker", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ i1 = 0", "goto label2", "label r4 = org apache poi ddf escher blip record r0", "r4 set picture data r1 0 $ i1", "return", "if r1 ! = null goto label1", "label $ i1 = lengthof r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi ddf escher client anchor record r0", "r1 field_4_row1 = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi ddf escher dgg record r0", "$ r1 = r3 field_5_file id cluster", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "$ i1 = 0", "goto label2", "label return $ i1", "if $ z0 == 0 goto label1", "label r4 = org apache poi ddf escher dgg record r0", "$ r2 = r4 field_5_file id cluster", "$ i0 = $ r2 size", "$ i1 = $ i0 + 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi ddf escher dgg record r0", "$ i0 = r1 field_4_drawings save", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi ddf escher pict blip r0", "$ i0 = r1 field_5_cb save", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi ddf escher record f instance", "r2 = org apache poi ddf escher record r0", "$ s0 = r2 _options", "$ s1 = $ r1 get short value $ s0", "return $ s1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi ddf escher split menu color record r0", "$ i0 = r1 field_1_color1", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi ddf escher split menu color record r0", "r1 field_1_color1 = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi ddf escher split menu color record r0", "r1 field_4_color4 = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi ddf escher sp record r0", "$ s0 = r1 get instance", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org apache poi extractor o l e2 extractor factory all prefer event extractor = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi extractor p o i o l e2 text extractor r0", "$ r1 = r3 document", "$ r2 = $ r1 get summary information", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi hpsf custom property r0", "$ r1 = r4 dictionary", "$ r2 = $ r1 value", "$ r3 = java util collection unmodifiable set $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hpsf document summary information r0", "r1 set1st property 4l i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf document summary information r0", "r1 remove1st property 7l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hpsf document summary information r0", "r1 set1st property 9l i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf document summary information r0", "r1 remove1st property 10l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf document summary information r0", "$ i0 = r1 get property int value 23", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf document summary information r0", "r1 remove1st property 28l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf document summary information r0", "r1 remove1st property 29l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf property r0", "$ l0 = r1 id", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org apache poi hpsf section r0", "$ r1 = r6 property", "$ r2 = $ r1 value", "$ r3 = newarray org apache poi hpsf property [ 0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = org apache poi hpsf property [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hpsf summary information r0", "r2 set1st property 6l r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hpsf summary information r0", "r2 set1st property 8l r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hpsf summary information r0", "r1 remove1st property 10l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hpsf summary information r0", "r1 set1st property 15l i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf eventusermodel dummyrecord last cell of row dummy record r0", "$ i0 = r1 last column number", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label r5 = org apache poi hssf eventusermodel h s s f event factory r0", "specialinvoke r5 generic process event r1 r2", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hssf record record factory get all know record s i ds", "i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label2", "s1 = r2 [ i2 ]", "r4 = org apache poi hssf eventusermodel h s s f request r0", "r4 add listener r1 s1", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache poi hssf eventusermodel h s s f request r0", "$ r4 = r9 _records", "$ s0 = r1 get sid", "$ r5 = java lang short value of $ s0", "$ r6 = $ r4 get $ r5", "r2 = java util list $ r6", "s2 = 0", "if r2 == null goto label5", "i3 = 0", "label $ i1 = r2 size", "if i3 > = $ i1 goto label5", "r3 = r2 get i3", "$ z0 = r3 instanceof org apache poi hssf eventusermodel abortable h s s f listener", "if $ z0 == 0 goto label3", "r7 = org apache poi hssf eventusermodel abortable h s s f listener r3", "s2 = r7 abortable process record r1", "if s2 == 0 goto label2", "goto label5", "label return s2", "if s2 == 0 goto label2", "label goto label4", "label i3 = i3 + 1", "goto label1", "if $ z0 == 0 goto label3", "label r8 = org apache poi hssf eventusermodel h s s f listener r3", "r8 process record r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ r4 = org apache poi hssf model internal sheet log", "$ r2 = newarray java lang object [ 1 ]", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r5 = r9 append \\ `` remove value record row \\ ``", "$ r6 = $ r5 append i0", "$ r7 = $ r6 to string", "$ r2 [ 0 ] = $ r7", "$ r4 log 1 $ r2", "r10 = org apache poi hssf model internal sheet r0", "$ r8 = r10 _rows aggregate", "$ r8 remove cell r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi hssf model internal sheet r0", "$ r1 = r2 gridset", "if z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label $ r1 set gridset $ z1", "return", "if z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r3 = org apache poi hssf model internal sheet r0", "$ r2 = r3 _column info", "r1 = $ r2 find column info s0", "if r1 == null goto label1", "$ i1 = r1 get x f index", "$ s2 = short $ i1", "return $ s2", "if r1 == null goto label1", "label return 15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r3 = org apache poi hssf model internal sheet r0", "$ r1 = r3 window two", "if $ r1 == null goto label1", "r4 = org apache poi hssf model internal sheet r0", "$ r2 = r4 window two", "$ r2 set leave col s0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org apache poi hssf record aggregate value record aggregate r0", "$ r2 = r5 record", "$ i1 = lengthof $ r2", "if i0 < $ i1 goto label1", "return 0", "if i0 < $ i1 goto label1", "label r6 = org apache poi hssf record aggregate value record aggregate r0", "$ r3 = r6 record", "r1 = $ r3 [ i0 ]", "if r1 ! = null goto label2", "label i3 = 0", "label $ i2 = lengthof r1", "if i3 > = $ i2 goto label5", "$ r4 = r1 [ i3 ]", "if $ r4 == null goto label4", "return 1", "if $ r4 == null goto label4", "label i3 = i3 + 1", "goto label3", "if i3 > = $ i2 goto label5", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record b o f record r0", "$ i0 = r1 field_3_build", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record bound sheet record r0", "r1 field_1_position_of_ b o f = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record cf border formatting bord leave line style", "r2 = org apache poi hssf record cf border format r0", "$ i0 = r2 field_13_border_styles1", "$ i1 = $ r1 get value $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org apache poi hssf record cf border format bord diag line style", "r2 = org apache poi hssf record cf border format r0", "$ i1 = r2 field_14_border_styles2", "$ i2 = $ r1 set value $ i1 i0", "r3 = org apache poi hssf record cf border format r0", "r3 field_14_border_styles2 = $ i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org apache poi hssf record cf border formatting bord right line color", "r2 = org apache poi hssf record cf border format r0", "$ i1 = r2 field_13_border_styles1", "$ i2 = $ r1 set value $ i1 i0", "r3 = org apache poi hssf record cf border format r0", "r3 field_13_border_styles1 = $ i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "$ s0 = 700", "goto label2", "label r2 = org apache poi hssf record cf font format r0", "specialinvoke r2 set font weight $ s0", "return", "if z0 == 0 goto label1", "label $ s0 = 400"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` cell range must not be null\\ ``", "throw r8", "if r1 ! = null goto label1", "label r9 = new org apache poi s util cell range address list", "specialinvoke r9 < init >", "r7 = null", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r1 [ i1 ]", "r7 = org apache poi s util cell range util create enclose cell range r4 r7", "r9 add cell range address r4", "i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label3", "label r10 = org apache poi hssf record c f header base r0", "r10 field_3_enclosing_cell_range = r7", "r11 = org apache poi hssf record c f header base r0", "r11 field_4_cell_ranges = r9", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache poi hssf record c f rule12 record parse formula r1 r0", "$ r3 = new org apache poi hssf record c f rule12 record", "specialinvoke $ r3 < init > 2 0 r2 null null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r2 = r1 get workbook", "r6 = org apache poi ss usermodel sheet r1", "i0 = $ r2 get sheet index r6", "$ r3 = r1 get workbook", "$ r4 = org apache poi s formula formula type cell", "$ r5 = org apache poi hssf model h s s f formula parser parse r0 $ r3 $ r4 i0", "return $ r5"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart area format record r0", "r1 field_3_pattern = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart axis option record r0", "$ s0 = r1 field_2_maximum category", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart axis option record r0", "$ s0 = r1 field_5_minor unit value", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart axis option record r0", "r1 field_5_minor unit value = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record chart axis option record default minimum", "r2 = org apache poi hssf record chart axis option record r0", "$ s0 = r2 field_9_options", "$ s1 = $ r1 set short boolean $ s0 z0", "r3 = org apache poi hssf record chart axis option record r0", "r3 field_9_options = $ s1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart axis option record default cross", "r2 = org apache poi hssf record chart axis option record r0", "$ s0 = r2 field_9_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart bar record r0", "$ s0 = r1 field_1_bar space", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart bar record r0", "$ s0 = r1 field_3_format flag", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart data format record r0", "r1 field_1_point number = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart dat record show series key", "r2 = org apache poi hssf record chart dat record r0", "$ s0 = r2 field_1_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart font basis record r0", "$ s0 = r1 field_3_height basis", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart frame record r0", "r1 field_2_options = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart legend record vertical", "r2 = org apache poi hssf record chart legend record r0", "$ s0 = r2 field_7_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart legend record data table", "r2 = org apache poi hssf record chart legend record r0", "$ s0 = r2 field_7_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart line format record r0", "r1 field_2_line pattern = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart line format record r0", "$ s0 = r1 field_5_colour palette index", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart link data record r0", "$ b0 = r1 field_2_reference type", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart link data record r0", "$ s0 = r1 field_3_options", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart link data record r0", "r1 field_3_options = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart number format index record r0", "r1 field_1_format index = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart series label record show actual", "r2 = org apache poi hssf record chart series label record r0", "$ s0 = r2 field_1_format flag", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart series record r0", "$ s0 = r1 field_1_category data type", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart series record r0", "r1 field_1_category data type = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart series record r0", "$ s0 = r1 field_4_num value", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart series record r0", "r1 field_4_num value = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart series record r0", "r1 field_5_bubble series type = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart series text record r0", "$ i0 = r1 field_1_id", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org apache poi hssf record chart sheet property record r0", "r1 field_2_empty = b0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record chart sheet property record plot visible only", "r2 = org apache poi hssf record chart sheet property record r0", "$ i0 = r2 field_1_flags", "$ i1 = $ r1 set boolean $ i0 z0", "r3 = org apache poi hssf record chart sheet property record r0", "r3 field_1_flags = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r1 = org apache poi hssf record chart text record r0", "r1 field_9_options1 = s0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record chart text record r0", "$ s0 = r1 field_12_text rotation", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record chart tick record r0", "r1 field_6_zero1 = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart tick record autorotate", "r2 = org apache poi hssf record chart tick record r0", "$ s0 = r2 field_10_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record chart value range record automatic category cross", "r2 = org apache poi hssf record chart value range record r0", "$ s0 = r2 field_6_options", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record common object data sub record lock", "r2 = org apache poi hssf record common object data sub record r0", "$ s0 = r2 field_3_option", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record cont unknown length record output r0", "$ i0 = r1 _size", "$ i1 = 4 + $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache poi hssf record escher aggregate r0", "$ r3 = r5 shape to obj", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf record font record italic", "r2 = org apache poi hssf record font record r0", "$ s0 = r2 field_2_attributes", "$ z0 = $ r1 be set $ s0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record font record r0", "$ b0 = r1 field_8_charset", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf record font record r0", "$ r1 = r2 field_11_font_name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache poi hssf record formula record r0", "r1 field_4_value = d0", "r2 = org apache poi hssf record formula record r0", "r2 special cache value = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record hyperlink record r0", "$ i0 = r1 _link opts", "$ i1 = $ i0 & 1", "if $ i1 < = 0 goto label1", "r2 = org apache poi hssf record hyperlink record r0", "$ i2 = r2 _link opts", "$ i3 = $ i2 & 2", "if $ i3 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i3 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record hyperlink record r0", "$ i0 = r1 _link opts", "$ i1 = $ i0 & 1", "if $ i1 < = 0 goto label1", "r2 = org apache poi hssf record hyperlink record r0", "$ i2 = r2 _link opts", "$ i3 = $ i2 & 2", "if $ i3 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i3 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record iteration record iteration on", "r2 = org apache poi hssf record iteration record r0", "$ i0 = r2 _flags", "$ i1 = $ r1 set boolean $ i0 z0", "r3 = org apache poi hssf record iteration record r0", "r3 _flags = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache poi util record format exception", "specialinvoke r3 < init > \\ `` label record be support read only convert to label s s t\\ ``", "r4 = java lang throwable r3", "throw r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache poi hssf record mul r k record r0", "$ r1 = r3 field_3_rks", "$ r2 = $ r1 [ i0 ]", "$ i1 = $ r2 rk", "$ d0 = org apache poi hssf util r k util decode number $ i1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r8 = org apache poi hssf record name record r0", "$ r3 = r8 field_13_name_definition", "r1 = $ r3 get token", "$ i0 = lengthof r1", "if $ i0 ! = 0 goto label1", "return 0", "if $ i0 ! = 0 goto label1", "label r2 = r1 [ 0 ]", "$ r4 = r2 get class", "if $ r4 ! = class \\ `` lorg apache poi s formula ptg area3 d ptg \\ `` goto label2", "$ r7 = org apache poi s formula ptg area3 d ptg r2", "$ i2 = $ r7 get extern sheet index", "return $ i2", "if $ r4 ! = class \\ `` lorg apache poi s formula ptg area3 d ptg \\ `` goto label2", "label $ r5 = r2 get class", "if $ r5 ! = class \\ `` lorg apache poi s formula ptg ref3 d ptg \\ `` goto label3", "$ r6 = org apache poi s formula ptg ref3 d ptg r2", "$ i1 = $ r6 get extern sheet index", "return $ i1", "if $ r5 ! = class \\ `` lorg apache poi s formula ptg ref3 d ptg \\ `` goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache poi hssf record number record r0", "r1 field_4_value = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hssf record protection rev4 record protect flag", "r2 = org apache poi hssf record protection rev4 record r0", "$ i0 = r2 _options", "$ i1 = $ r1 set boolean $ i0 z0", "r3 = org apache poi hssf record protection rev4 record r0", "r3 _options = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf record record input stream r0", "specialinvoke r2 check record position 2", "r3 = org apache poi hssf record record input stream r0", "$ i0 = r3 _current data offset", "$ i1 = $ i0 + 2", "r4 = org apache poi hssf record record input stream r0", "r4 _current data offset = $ i1", "r5 = org apache poi hssf record record input stream r0", "$ r1 = r5 _data input", "$ i2 = $ r1 read u short", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hssf record record input stream r0", "i0 = r3 remain", "if i0 ! = 0 goto label1", "$ r2 = org apache poi hssf record record input stream empty_byte_array", "return $ r2", "if i0 ! = 0 goto label1", "label $ l1 = long i0", "r1 = org apache poi util i o utils safely allocate $ l1 100000", "r4 = org apache poi hssf record record input stream r0", "r4 read fully r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "$ r1 = org apache poi hssf record row record outline level", "r2 = org apache poi hssf record row record r0", "$ i1 = r2 field_7_option_flags", "$ i2 = $ r1 set value $ i1 s0", "r3 = org apache poi hssf record row record r0", "r3 field_7_option_flags = $ i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hssf record row record r0", "$ i0 = r1 field_3_last_col", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hssf record selection record r0", "r1 field_2_row_active_cell = i0", "r2 = org apache poi hssf record selection record r0", "specialinvoke r2 reset field6", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache poi hssf record s s t record r0", "$ r1 = r4 field_3_strings", "$ r2 = $ r1 get i0", "$ r3 = org apache poi hssf record common unicode string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r4 = org apache poi hssf usermodel escher graphics2d r0", "$ r3 = r4 _escher graphic", "$ r3 fill polygon r1 r2 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hssf usermodel h s s f cell style get data format string cache", "$ r2 = $ r1 get", "if $ r2 == null goto label1", "$ r3 = org apache poi hssf usermodel h s s f cell style last date format", "$ r4 = $ r3 get", "$ r5 = java lang short $ r4", "$ s0 = $ r5 short value", "r24 = org apache poi hssf usermodel h s s f cell style r0", "$ s1 = r24 get data format", "if $ s0 ! = $ s1 goto label1", "r25 = org apache poi hssf usermodel h s s f cell style r0", "$ r6 = r25 _workbook", "$ r7 = $ r6 get format", "$ r8 = org apache poi hssf usermodel h s s f cell style last format", "$ r9 = $ r8 get", "$ z0 = $ r7 equal $ r9", "if $ z0 == 0 goto label1", "$ r10 = org apache poi hssf usermodel h s s f cell style get data format string cache", "$ r11 = $ r10 get", "$ r12 = java lang string $ r11", "return $ r12", "if $ z0 == 0 goto label1", "label $ r13 = org apache poi hssf usermodel h s s f cell style last format", "r26 = org apache poi hssf usermodel h s s f cell style r0", "$ r14 = r26 _workbook", "$ r15 = $ r14 get format", "$ r13 set $ r15", "$ r16 = org apache poi hssf usermodel h s s f cell style last date format", "r27 = org apache poi hssf usermodel h s s f cell style r0", "$ s2 = r27 get data format", "$ r17 = java lang short value of $ s2", "$ r16 set $ r17", "$ r18 = org apache poi hssf usermodel h s s f cell style get data format string cache", "r28 = org apache poi hssf usermodel h s s f cell style r0", "$ r19 = r28 _workbook", "r29 = org apache poi hssf usermodel h s s f cell style r0", "$ r20 = r29 get data format string $ r19", "$ r18 set $ r20", "$ r21 = org apache poi hssf usermodel h s s f cell style get data format string cache", "$ r22 = $ r21 get", "$ r23 = java lang string $ r22", "return $ r23"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f cell style r0", "$ r1 = r2 _format", "$ z0 = $ r1 get123 prefix", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f cell style r0", "$ r1 = r2 _format", "$ s0 = $ r1 get read order", "return $ s0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache poi hssf usermodel h s s f conditional formatting r0", "$ r2 = r4 cf aggregate", "$ r3 = r1 get cf rule record", "$ r2 add rule $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ i0 = org apache poi s usermodel date util absolute day r0 z0", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org apache poi hssf usermodel h s s f evaluation workbook r0", "i0 = specialinvoke r7 get sheet ext ix r2", "r8 = org apache poi hssf usermodel h s s f evaluation workbook r0", "$ r4 = r8 _i book", "r9 = org apache poi hssf usermodel h s s f evaluation workbook r0", "$ r3 = r9 _u book", "$ r5 = $ r3 get u d f finder", "$ r6 = $ r4 get name x ptg r1 i0 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r3 = org apache poi hssf usermodel h s s f font r0", "$ r2 = r3 font", "$ r2 set bold weight 700", "goto label2", "label return", "if z0 == 0 goto label1", "label r4 = org apache poi hssf usermodel h s s f font r0", "$ r1 = r4 font", "$ r1 set bold weight 400"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache poi hssf usermodel h s s f formula evaluator r0", "$ r3 = r5 _book evaluator", "r4 = new org apache poi hssf usermodel h s s f evaluation cell", "specialinvoke r4 < init > r1", "r6 = org apache poi s formula evaluation cell r4", "$ r3 notify delete cell r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r28 = org apache poi hssf usermodel h s s f formula evaluator r0", "$ r5 = r28 _book evaluator", "r23 = new org apache poi hssf usermodel h s s f evaluation cell", "$ r4 = org apache poi hssf usermodel h s s f cell r1", "specialinvoke r23 < init > $ r4", "r29 = org apache poi s formula evaluation cell r23", "r2 = $ r5 evaluate r29", "$ z0 = r2 instanceof org apache poi s formula eval bool eval", "if $ z0 == 0 goto label1", "r20 = org apache poi s formula eval bool eval r2", "$ z4 = r20 get boolean value", "$ r19 = org apache poi s usermodel cell value value of $ z4", "return $ r19", "if $ z0 == 0 goto label1", "label $ z1 = r2 instanceof org apache poi s formula eval numeric value eval", "if $ z1 == 0 goto label2", "r21 = org apache poi s formula eval numeric value eval r2", "r24 = new org apache poi s usermodel cell value", "$ d0 = r21 get number value", "specialinvoke r24 < init > $ d0", "return r24", "if $ z1 == 0 goto label2", "label $ z2 = r2 instanceof org apache poi s formula eval string value eval", "if $ z2 == 0 goto label3", "r22 = org apache poi s formula eval string value eval r2", "r25 = new org apache poi s usermodel cell value", "$ r17 = r22 get string value", "specialinvoke r25 < init > $ r17", "return r25", "if $ z2 == 0 goto label3", "label $ z3 = r2 instanceof org apache poi s formula eval error eval", "if $ z3 == 0 goto label4", "$ r14 = org apache poi s formula eval error eval r2", "$ i0 = $ r14 get error code", "$ r15 = org apache poi s usermodel cell value get error $ i0", "return $ r15", "if $ z3 == 0 goto label4", "label r27 = new java lang runtime exception", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r8 = r26 append \\ `` unexpected eval class \\ ``", "$ r9 = r2 get class", "$ r10 = $ r9 get name", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 append \\ `` \\ ``", "$ r13 = $ r12 to string", "specialinvoke r27 < init > $ r13", "throw r27"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi hssf usermodel h s s f print setup r0", "$ r1 = r2 print setup record", "$ r1 set no color z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r2 = org apache poi hssf usermodel h s s f print setup r0", "$ r1 = r2 print setup record", "$ r1 set copy s0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f print setup r0", "$ r1 = r2 print setup record", "$ s0 = $ r1 get page start", "return $ s0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f print setup r0", "$ r1 = r2 print setup record", "$ z0 = $ r1 get no color", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f print setup r0", "$ r1 = r2 print setup record", "$ z0 = $ r1 get no orientation", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f print setup r0", "$ r1 = r2 print setup record", "$ s0 = $ r1 get v resolution", "return $ s0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hssf usermodel h s s f rich text string r0", "$ r1 = specialinvoke r3 clone string if require", "r4 = org apache poi hssf usermodel h s s f rich text string r0", "r4 _string = $ r1", "r5 = org apache poi hssf usermodel h s s f rich text string r0", "$ r2 = r5 _string", "$ r2 clear format", "r6 = org apache poi hssf usermodel h s s f rich text string r0", "specialinvoke r6 add to s s t if require", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org apache poi hssf usermodel h s s f rich text string r0", "$ r2 = r5 _string", "i1 = $ r2 get format run count", "r4 = null", "i4 = 0", "label if i4 > = i1 goto label3", "r6 = org apache poi hssf usermodel h s s f rich text string r0", "$ r3 = r6 _string", "r1 = $ r3 get format run i4", "$ s3 = r1 get character po", "if $ s3 < = i0 goto label2", "goto label3", "label if r4 ! = null goto label4", "return 0", "label if r4 ! = null goto label4", "label $ s2 = r4 get font index", "return $ s2", "if $ s3 < = i0 goto label2", "label r4 = r1", "i4 = i4 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [], [17], [18], [], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi hssf usermodel h s s f shape r0", "$ r2 = r4 _opt record", "$ r3 = $ r2 lookup 448", "r1 = org apache poi ddf escher r g b property $ r3", "if r1 ! = null goto label1", "$ i0 = 134217792", "goto label2", "label return $ i0", "if r1 ! = null goto label1", "label $ i0 = r1 get rgb color"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi hssf usermodel h s s f shape r0", "$ r2 = r4 _opt record", "$ r3 = $ r2 lookup 385", "r1 = org apache poi ddf escher r g b property $ r3", "if r1 ! = null goto label1", "$ i0 = 134217737", "goto label2", "label return $ i0", "if r1 ! = null goto label1", "label $ i0 = r1 get rgb color"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = new org apache poi ddf escher simple property", "specialinvoke r2 < init > 129 i0", "r3 = org apache poi hssf usermodel h s s f textbox r0", "r4 = org apache poi ddf escher property r2", "r3 set property value r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hssf usermodel h s s f textbox r0", "$ r1 = r2 get text object record", "$ i0 = $ r1 get horizontal text alignment", "$ s1 = short $ i0", "return $ s1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new org apache poi hssf usermodel h s s f workbook", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r16 = new java lang string builder", "specialinvoke r16 < init >", "r17 = org apache poi hssf util h s s f color r0", "$ r2 = r17 color", "$ i0 = $ r2 get red", "$ i1 = $ i0 * 257", "$ r3 = java lang integer to hex string $ i1", "$ r4 = r16 append $ r3", "$ r5 = $ r4 append \\ `` \\ ``", "r18 = org apache poi hssf util h s s f color r0", "$ r6 = r18 color", "$ i2 = $ r6 get green", "$ i3 = $ i2 * 257", "$ r7 = java lang integer to hex string $ i3", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 append \\ `` \\ ``", "r19 = org apache poi hssf util h s s f color r0", "$ r10 = r19 color", "$ i4 = $ r10 get blue", "$ i5 = $ i4 * 257", "$ r11 = java lang integer to hex string $ i5", "$ r12 = $ r9 append $ r11", "$ r13 = $ r12 to string", "$ r14 = java util locale root", "$ r15 = $ r13 to upper case $ r14", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "r3 = org apache poi ss usermodel sheet r1", "org apache poi s util region util set top border color i0 r0 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = org apache poi poifs crypt crypto function get block x r0 i0 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = org apache poi poifs crypt crypto function create xor verifier2 r0", "$ r2 = java util locale root", "$ r1 = newarray java lang object [ 1 ]", "$ r3 = java lang integer value of i0", "$ r1 [ 0 ] = $ r3", "$ r4 = java lang string format $ r2 \\ `` % 1 $ 08x\\", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r7 = new org apache poi poifs filesystem filter directory node", "$ r4 = r0 get root", "r9 = org apache poi poifs filesystem directory entry $ r4", "specialinvoke r7 < init > r9 r2", "r8 = new org apache poi poifs filesystem filter directory node", "$ r6 = r1 get root", "r10 = org apache poi poifs filesystem directory entry $ r6", "specialinvoke r8 < init > r10 r2", "r11 = org apache poi poifs filesystem directory entry r7", "r12 = org apache poi poifs filesystem directory entry r8", "org apache poi poifs filesystem entry utils copy node r11 r12", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r5 = org apache poi poifs filesystem p o i f s file system r0", "$ r3 = r5 get root", "$ r4 = $ r3 create document r1 i0 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ z0 = specialinvoke r0 should use small block", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi poifs property property r0", "$ r1 = r2 _storage_clsid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache poi poifs property property r0", "$ r2 = r3 _size", "r4 = org apache poi poifs property property r0", "$ r1 = r4 _raw_data", "$ r2 set i0 $ r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t adj point2 d r0", "r2 y = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t color r0", "r2 scrgb clr = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t color r0", "r2 srgb clr = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t color r0", "r2 prst clr = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t custom geometry2 d r0", "$ r1 = r2 gd lst", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t custom geometry2 d r0", "$ r1 = r2 ah lst", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t custom geometry2 d r0", "$ r1 = r2 cxn lst", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t embed w a v audio file r0", "$ r1 = r2 embed", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t group transform2 d r0", "$ r1 = r2 ch ext", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi sl draw bind c t group transform2 d r0", "$ r1 = r3 rot", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org apache poi sl draw bind c t group transform2 d r0", "$ r2 = r4 rot", "$ i0 = $ r2 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org apache poi sl draw bind c t group transform2 d r0", "r2 flip v = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi sl draw bind c t path2 d r0", "$ r1 = r3 h", "if $ r1 ! = null goto label1", "return 0l", "if $ r1 ! = null goto label1", "label r4 = org apache poi sl draw bind c t path2 d r0", "$ r2 = r4 h", "$ l0 = $ r2 long value", "return $ l0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi sl draw bind c t point3 d r0", "$ l0 = r1 z", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t polar adjust handle r0", "r2 min ang = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi sl draw bind c t scale2 d r0", "$ r1 = r2 sx", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi sl draw bind c t scale2 d r0", "r2 sx = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache poi sl draw bind c t vector3 d r0", "r1 dy = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r2 = org apache poi sl draw s l graphic r0", "$ r1 = r2 _transform", "$ r1 shear d0 d1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = org apache poi sl draw s l graphic log", "$ z0 = $ r4 check 5", "if $ z0 == 0 goto label1", "$ r6 = org apache poi sl draw s l graphic log", "$ r5 = newarray java lang object [ 1 ]", "$ r5 [ 0 ] = \\ `` not implemented\\ ``", "$ r6 log 5 $ r5", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "label $ r2 = r0 clone", "$ r3 = java awt graphic $ r2", "label return $ r3"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r5 = org apache poi s formula atp analysis tool pak instance", "r0 = org apache poi s formula atp analysis tool pak $ r5", "$ r6 = new java util tree set", "specialinvoke $ r6 < init >", "$ r7 = r0 _functions by name", "$ r8 = $ r7 entry set", "r2 = $ r8 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r10 = r2 next", "r3 = java util map $ entry $ r10", "$ r11 = r3 get value", "r4 = org apache poi s formula function free ref function $ r11", "$ z1 = r4 instanceof org apache poi s formula atp analysis tool pak $ not implement", "if $ z1 == 0 goto label2", "$ r12 = r3 get key", "$ r6 add $ r12", "label goto label1", "if $ z0 == 0 goto label3", "label $ r9 = java util collection unmodifiable collection $ r6", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i3 = lengthof r1", "if $ i3 < 2 goto label1", "$ i4 = lengthof r1", "if $ i4 < = 3 goto label2", "label $ r4 = org apache poi s formula eval error eval value_invalid", "r19 = org apache poi s formula eval value eval $ r4", "return r19", "if $ i4 < = 3 goto label2", "label i0 = r2 get row index", "i1 = r2 get column index", "label r20 = org apache poi s formula atp workday function r0", "$ r6 = r20 evaluator", "$ r5 = r1 [ 0 ]", "d0 = $ r6 evaluate date arg $ r5 i0 i1", "r21 = org apache poi s formula atp workday function r0", "$ r8 = r21 evaluator", "$ r7 = r1 [ 1 ]", "$ d1 = $ r8 evaluate number arg $ r7 i0 i1", "$ d2 = java lang math floor $ d1", "i2 = int $ d2", "$ i5 = lengthof r1", "if $ i5 ! = 3 goto label4", "$ r15 = r1 [ 2 ]", "goto label5", "label r22 = org apache poi s formula atp workday function r0", "$ r9 = r22 evaluator", "r3 = $ r9 evaluate date arg $ r15 i0 i1", "r18 = new org apache poi s formula eval number eval", "$ r11 = org apache poi s formula atp workday calculator instance", "$ r12 = $ r11 calculate workday d0 i2 r3", "$ d3 = org apache poi s usermodel date util get excel date $ r12", "specialinvoke r18 < init > $ d3", "label r23 = org apache poi s formula eval value eval r18", "return r23", "if $ i5 ! = 3 goto label4", "label $ r15 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get cell type", "if r2 == r1 goto label1", "$ r3 = org apache poi s usermodel cell type formula", "if r2 ! = $ r3 goto label2", "$ r4 = r0 get cache formula result type", "if $ r4 ! = r1 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ r4 ! = r1 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = org apache poi s formula evaluation cache r0", "$ r1 = r5 _evaluation listener", "if $ r1 == null goto label1", "r6 = org apache poi s formula evaluation cache r0", "$ r4 = r6 _evaluation listener", "$ r4 on clear whole cache", "label r7 = org apache poi s formula evaluation cache r0", "$ r2 = r7 _plain cell cache", "$ r2 clear", "r8 = org apache poi s formula evaluation cache r0", "$ r3 = r8 _formula cell cache", "$ r3 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["d0 = @ parameter0", "i0 = @ parameter1", "d1 = @ parameter2", "$ d2 = org apache poi s formula function finance pmt d0 i0 d1 0 0", "return $ d2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ i2 = lengthof r1", "if $ i2 == 2 goto label1", "$ r5 = org apache poi s formula eval error eval value_invalid", "r6 = org apache poi s formula eval value eval $ r5", "return r6", "if $ i2 == 2 goto label1", "label $ r3 = r1 [ 0 ]", "$ r2 = r1 [ 1 ]", "r7 = org apache poi s formula function fixed2 arg function r0", "$ r4 = r7 evaluate i0 i1 $ r3 $ r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ i2 = lengthof r1", "if $ i2 == 4 goto label1", "$ r7 = org apache poi s formula eval error eval value_invalid", "r8 = org apache poi s formula eval value eval $ r7", "return r8", "if $ i2 == 4 goto label1", "label $ r5 = r1 [ 0 ]", "$ r4 = r1 [ 1 ]", "$ r3 = r1 [ 2 ]", "$ r2 = r1 [ 3 ]", "r9 = org apache poi s formula function fixed4 arg function r0", "$ r6 = r9 evaluate i0 i1 $ r5 $ r4 $ r3 $ r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["d0 = @ parameter0", "i0 = @ parameter1", "$ r0 = java math round mode half_up", "$ d1 = org apache poi s formula function math x round d0 i0 $ r0", "return $ d1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "d3 = 0 0", "i2 = 0", "i0 = lengthof r0", "label if i2 > = i0 goto label2", "$ d1 = r0 [ i2 ]", "d3 = d3 + $ d1", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label $ i1 = lengthof r0", "$ d0 = double $ i1", "d4 = d3 $ d0", "return d4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "d3 = 0 0", "i1 = 0", "i0 = lengthof r0", "label if i1 > = i0 goto label2", "$ d1 = r0 [ i1 ]", "$ d0 = r0 [ i1 ]", "$ d2 = $ d1 * $ d0", "d3 = d3 + $ d2", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "d1 = 0 0", "if r0 == null goto label2", "$ i1 = lengthof r0", "if $ i1 < = 0 goto label2", "d1 = 1 0", "i2 = 0", "i0 = lengthof r0", "label if i2 > = i0 goto label2", "$ d0 = r0 [ i2 ]", "d1 = d1 * $ d0", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label return d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "d1 = #infinity", "i1 = 0", "i0 = lengthof r0", "label if i1 > = i0 goto label2", "$ d0 = r0 [ i1 ]", "d1 = java lang math min d1 $ d0", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["d0 = @ parameter0", "$ d1 = java lang math pow d0 2 0", "$ d2 = $ d1 - 1 0", "$ d3 = java lang math sqrt $ d2", "$ d4 = $ d3 + d0", "$ d5 = java lang math log $ d4", "return $ d5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = lengthof r1", "r8 = org apache poi s formula function multi operand numeric function r0", "$ i2 = r8 get max num operands", "if $ i1 < = $ i2 goto label1", "$ r6 = org apache poi s formula eval evaluation exception invalid value", "r9 = java lang throwable $ r6", "throw r9", "if $ i1 < = $ i2 goto label1", "label r7 = new org apache poi s formula function multi operand numeric function $ double list", "specialinvoke r7 < init >", "i3 = 0", "i0 = lengthof r1", "label if i3 > = i0 goto label3", "$ r5 = r1 [ i3 ]", "r10 = org apache poi s formula function multi operand numeric function r0", "specialinvoke r10 collect value $ r5 r7", "i3 = i3 + 1", "goto label2", "label if i3 > = i0 goto label3", "label $ r4 = r7 to array", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util locale root", "$ r2 = r0 to upper case $ r1", "s0 = org apache poi s formula function function metadata registry lookup index by name $ r2", "if s0 > = 0 goto label1", "return 255", "if s0 > = 0 goto label1", "label return s0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi s usermodel font charset r0", "$ i0 = r1 charset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r7 = new org apache poi s util cell reference", "$ r4 = r2 get sheet", "$ r5 = $ r4 get sheet name", "$ i0 = r2 get row index", "$ i1 = r2 get column index", "specialinvoke r7 < init > $ r5 $ i0 $ i1 1 1", "r8 = org apache poi s usermodel table style type r0", "$ r6 = r8 applies to r1 r7", "return $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi s util area reference r0", "$ r1 = r2 _last cell", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "label $ i0 = r0 size", "if $ i0 < = 1 goto label10", "z0 = 0", "i5 = 0", "label $ i1 = r0 size", "if i5 > = $ i1 goto label08", "$ r3 = r0 get i5", "r9 = org apache poi s util cell range address $ r3", "i6 = i5 + 1", "label $ i2 = r0 size", "if i6 > = $ i2 goto label07", "$ r4 = r0 get i6", "r1 = org apache poi s util cell range address $ r4", "r2 = org apache poi s util cell range util merge range r9 r1", "if r2 ! = null goto label04", "goto label06", "label i6 = i6 + 1", "goto label03", "if r2 ! = null goto label04", "label z0 = 1", "r9 = r2 [ 0 ]", "$ r5 = r2 [ 0 ]", "r0 set i5 $ r5", "$ i3 = i6", "i6 = i6 + -1", "r0 remove $ i3", "i7 = 1", "label $ i4 = lengthof r2", "if i7 > = $ i4 goto label06", "i6 = i6 + 1", "$ r8 = r2 [ i7 ]", "r0 add i6 $ r8", "i7 = i7 + 1", "goto label05", "if i6 > = $ i2 goto label07", "label i5 = i5 + 1", "goto label02", "if i5 > = $ i1 goto label08", "label if z0 ! = 0 goto label09", "goto label10", "label return r0", "label if z0 ! = 0 goto label09", "label goto label01"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [], [39], [40], [], [42], [43], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r1 ! = null goto label1", "$ r3 = r0 copy", "return $ r3", "if r1 ! = null goto label1", "label $ i4 = r1 get first row", "$ i5 = r0 get first row", "$ z0 = org apache poi s util cell range util lt $ i4 $ i5", "if $ z0 == 0 goto label2", "$ i12 = r1 get first row", "goto label3", "label i0 = $ i12", "$ i6 = r1 get last row", "$ i7 = r0 get last row", "$ z1 = org apache poi s util cell range util gt $ i6 $ i7", "if $ z1 == 0 goto label4", "$ i13 = r1 get last row", "goto label5", "label i1 = $ i13", "$ i8 = r1 get first column", "$ i9 = r0 get first column", "$ z2 = org apache poi s util cell range util lt $ i8 $ i9", "if $ z2 == 0 goto label6", "$ i14 = r1 get first column", "goto label7", "label i2 = $ i14", "$ i10 = r1 get last column", "$ i11 = r0 get last column", "$ z3 = org apache poi s util cell range util gt $ i10 $ i11", "if $ z3 == 0 goto label8", "$ i15 = r1 get last column", "goto label9", "label $ r2 = new org apache poi s util cell range address", "specialinvoke $ r2 < init > i0 i1 i2 $ i15", "return $ r2", "if $ z3 == 0 goto label8", "label $ i15 = r0 get last column", "if $ z2 == 0 goto label6", "label $ i14 = r0 get first column", "if $ z1 == 0 goto label4", "label $ i13 = r0 get last row", "if $ z0 == 0 goto label2", "label $ i12 = r0 get first row"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache poi s util cell util set cell style property r0 \\ `` alignment\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache poi s util cell util set cell style property r0 \\ `` vertical alignment\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "i1 = r0 get first column", "i2 = r0 get last column", "i3 = r0 get last row", "$ r4 = new org apache poi s util region util $ cell property setter", "specialinvoke $ r4 < init > \\ `` bottom border color\\", "r3 = org apache poi s util cell util get row i3 r1", "i4 = i1", "label if i4 > i2 goto label2", "$ r4 set property r3 i4", "i4 = i4 + 1", "goto label1", "label if i4 > i2 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = lengthof r1", "$ i1 = org apache poi util i o utils read fully r0 r1 0 $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 get parent file", "$ z0 = r2 exist", "if $ z0 ! = 0 goto label01", "$ z1 = r2 mkdirs", "if $ z1 ! = 0 goto label01", "$ r8 = new java lang runtime exception", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` can\\'t create destination directory \\ ``", "$ r11 = $ r10 append r2", "$ r12 = $ r11 to string", "specialinvoke $ r8 < init > $ r12", "throw $ r8", "if $ z1 ! = 0 goto label01", "label $ r7 = new java io file output stream", "specialinvoke $ r7 < init > r1", "r17 = null", "label l0 = org apache poi util i o utils copy r0 $ r7", "label if $ r7 == null goto label05", "goto label04", "label $ r7 close", "label return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util zip crc32", "specialinvoke $ r2 < init >", "$ i0 = lengthof r0", "$ r2 update r0 0 $ i0", "$ l1 = $ r2 get value", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = java lang system get property \\ `` java version\\ ``", "$ r2 = java lang system get property \\ `` os name\\ ``", "$ r3 = java util locale root", "r1 = $ r2 to low case $ r3", "z0 = java lang boolean get boolean \\ `` org apache poi jvm bug line break measurer ignore\\ ``", "if z0 ! = 0 goto label2", "$ z2 = r1 contain \\ `` win\\ ``", "if $ z2 == 0 goto label2", "$ r6 = \\ `` 1 6 0_45\\ ``", "$ z3 = $ r6 equal r0", "if $ z3 ! = 0 goto label1", "$ r7 = \\ `` 1 7 0_21\\ ``", "$ z4 = $ r7 equal r0", "if $ z4 == 0 goto label2", "label $ z5 = 1", "goto label3", "label z1 = $ z5", "if $ z5 == 0 goto label4", "$ r5 = org apache poi util jvm bug log", "$ r4 = newarray java lang object [ 1 ]", "$ r4 [ 0 ] = \\ `` jvm have line break measurer bug - see poi bug #54904 - caller code might default to lucida sans\\ ``", "$ r5 log 5 $ r4", "label return z1", "if $ z4 == 0 goto label2", "label $ z5 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = org apache poi util little endian get long r0 0", "$ d0 = java lang double long bit to double $ l0", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ b0 = r0 [ 0 ]", "$ s1 = $ b0 & 255", "$ s2 = short $ s1", "return $ s2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = org apache poi util little endian get u int r0 0", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "f0 = @ parameter2", "$ i1 = java lang float float to int bit f0", "org apache poi util little endian put int r0 i0 $ i1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i9 = i0 + 1", "$ i2 = i1 > > > 0", "$ i3 = $ i2 & 255", "$ b4 = byte $ i3", "r0 [ i0 ] = $ b4", "$ i5 = i1 > > > 8", "$ i6 = $ i5 & 255", "$ b7 = byte $ i6", "r0 [ i9 ] = $ b7", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["z0 = @ parameter0", "r0 = @ parameter1", "if z0 ! = 0 goto label1", "r2 = new org apache poi util record format exception", "specialinvoke r2 < init > r0", "r3 = java lang throwable r2", "throw r3", "if z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["i0 = @ parameter0", "i1 = i0 > > 16", "i2 = i0 & 65535", "$ d2 = double i1", "$ d0 = double i2", "$ d1 = $ d0 65536 0", "$ d3 = $ d2 + $ d1", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get relation class", "label r8 = org apache poi ooxml p o i x m l factory r0", "$ r4 = r8 create document part r2 null null", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi ooxml p o i x m l relation r0", "$ r1 = r2 _type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi ooxml p o i x m l relation r0", "$ r1 = r2 _relation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache poi ooxml p o i x m l relation r0", "$ r3 = r9 _default name", "r2 = $ r3 replace \\ `` #\\", "$ r4 = r1 get package part", "$ r5 = $ r4 get part name", "$ r6 = $ r5 get name", "$ r7 = $ r6 replace all r2 \\ `` $ 1\\ ``", "$ r8 = java lang integer value of $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r9 = org apache poi openxml4j opc internal content type r0", "$ r1 = r9 parameter", "if $ r1 ! = null goto label1", "$ r8 = newarray java lang string [ 0 ]", "return $ r8", "if $ r1 ! = null goto label1", "label r10 = org apache poi openxml4j opc internal content type r0", "$ r2 = r10 parameter", "$ r3 = $ r2 key set", "r11 = org apache poi openxml4j opc internal content type r0", "$ r4 = r11 parameter", "$ i0 = $ r4 size", "$ r5 = newarray java lang string [ $ i0 ]", "$ r6 = $ r3 to array $ r5", "$ r7 = java lang string [ ] $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r11 = new java io file input stream", "specialinvoke $ r11 < init > r0", "r29 = null", "label $ r12 = new java io file output stream", "specialinvoke $ r12 < init > r1", "r31 = null", "label r32 = $ r11 get channel", "r33 = null", "label r34 = $ r12 get channel", "r35 = null", "label $ l0 = r32 size", "r32 transfer to 0l $ l0 r34", "r32 close", "label if r34 == null goto label15", "goto label06", "label r34 close", "goto label15", "label if r32 == null goto label25", "goto label16", "label r32 close", "goto label25", "label if $ r12 == null goto label35", "goto label26", "label $ r12 close", "goto label35", "label if $ r11 == null goto label45", "goto label36", "label $ r11 close", "goto label45", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [], [20], [], [22], [], [24], [], [26], [], [28], [], [30], [], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi openxml4j opc internal package property part r0", "$ r1 = r2 last printed", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ z0 = r0 exist", "if $ z0 == 0 goto label2", "$ z2 = r0 be directory", "if $ z2 == 0 goto label2", "label r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` file\\ ``", "throw r6", "if $ z2 == 0 goto label2", "label $ z1 = r0 exist", "if $ z1 == 0 goto label3", "r7 = new org apache poi openxml4j exception invalid operation exception", "specialinvoke r7 < init > \\ `` this package or file already exist use the open method or delete the file \\ ``", "r9 = java lang throwable r7", "throw r9", "if $ z1 == 0 goto label3", "label r8 = new org apache poi openxml4j opc zip package", "specialinvoke r8 < init >", "$ r4 = r0 get absolute path", "r10 = org apache poi openxml4j opc o p c package r8", "r10 original package path = $ r4", "r11 = org apache poi openxml4j opc o p c package r8", "org apache poi openxml4j opc o p c package configure package r11", "r12 = org apache poi openxml4j opc o p c package r8", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache poi openxml4j opc o p c package r0", "r10 throw exception if write only", "if r1 ! = null goto label1", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init > \\ `` part name\\ ``", "throw r9", "if r1 ! = null goto label1", "label r11 = org apache poi openxml4j opc o p c package r0", "$ r3 = r11 part list", "if $ r3 ! = null goto label5", "label r12 = org apache poi openxml4j opc o p c package r0", "r12 get part", "label goto label5", "label r13 = org apache poi openxml4j opc o p c package r0", "$ r4 = r13 part list", "$ r5 = $ r4 get r1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi openxml4j opc o p c package r0", "$ r2 = r3 get part r1", "if $ r2 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi openxml4j opc o p c package r0", "$ r1 = r2 package access", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi openxml4j opc package part r0", "$ r1 = specialinvoke r2 get relationship core null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = org apache poi openxml4j opc package part r0", "r1 = r11 get input stream impl", "if r1 ! = null goto label1", "r10 = new java io i o exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r4 = r9 append \\ `` can\\'t obtain the input stream from \\ ``", "r12 = org apache poi openxml4j opc package part r0", "$ r5 = r12 _part name", "$ r6 = $ r5 get name", "$ r7 = $ r4 append $ r6", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if r1 ! = null goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 length", "if i0 ! = 0 goto label1", "return r0", "if i0 ! = 0 goto label1", "label $ r3 = java nio charset standard charsets utf_8", "$ r4 = r0 get bytes $ r3", "r1 = java nio byte buffer wrap $ r4", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "label $ z0 = r1 have remain", "if $ z0 == 0 goto label5", "$ b2 = r1 get", "s1 = $ b2 & 255", "$ z1 = org apache poi openxml4j opc package u r i helper be unsafe s1", "if $ z1 == 0 goto label3", "$ r5 append 37", "$ r9 = org apache poi openxml4j opc package u r i helper hex digit", "$ s4 = s1 > > 4", "$ s5 = $ s4 & 15", "$ c6 = $ r9 [ $ s5 ]", "$ r5 append $ c6", "$ r11 = org apache poi openxml4j opc package u r i helper hex digit", "$ s7 = s1 > > 0", "$ s8 = $ s7 & 15", "$ c9 = $ r11 [ $ s8 ]", "$ r5 append $ c9", "goto label4", "label goto label2", "if $ z1 == 0 goto label3", "label $ c3 = char s1", "$ r5 append $ c3", "if $ z0 == 0 goto label5", "label $ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi openxml4j opc zip package r0", "$ r1 = r2 zip archive", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = org apache poi poifs crypt temp encrypt temp data r0", "$ r5 = r11 skey spec", "$ r4 = org apache poi poifs crypt temp encrypt temp data cipher algorithm", "$ r3 = org apache poi poifs crypt chain mode cbc", "r12 = org apache poi poifs crypt temp encrypt temp data r0", "$ r2 = r12 iv bytes", "r1 = org apache poi poifs crypt crypto function get cipher $ r5 $ r4 $ r3 $ r2 1 \\ `` p k c s5 padding\\ ``", "r10 = new javax crypto cipher output stream", "r9 = new java io file output stream", "r13 = org apache poi poifs crypt temp encrypt temp data r0", "$ r8 = r13 temp file", "specialinvoke r9 < init > $ r8", "specialinvoke r10 < init > r9 r1", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xddf usermodel chart x d d f manual layout r0", "$ r1 = r2 layout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r3 = r4 _p", "$ z0 = $ r3 be set p pr", "if $ z0 == 0 goto label2", "label r5 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r2 = specialinvoke r5 get or create property", "$ r2 set indentation r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r3 = r4 _p", "$ z0 = $ r3 be set p pr", "if $ z0 == 0 goto label2", "label r5 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r2 = specialinvoke r5 get or create property", "$ r2 set margin leave r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "$ r1 = x d d f text paragraph $ lambda_get space before_21__16 bootstrap $", "$ r2 = x d d f text paragraph $ lambda_get space before_22__18 bootstrap $", "r8 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r3 = r8 find define paragraph property $ r1 $ r2", "r9 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r4 = x d d f text paragraph $ lambda_get space before_23__27 bootstrap $ r9", "$ r5 = $ r3 map $ r4", "$ r6 = $ r5 or else null", "$ r7 = org apache poi xddf usermodel text x d d f space $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xddf usermodel text x d d f text paragraph r0", "$ r1 = r2 get or create bullet property", "$ r1 set bullet font follow text", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xddf usermodel text x d d f text run r0", "$ r2 = specialinvoke r3 get or create property", "$ r2 set bold r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r5 = org apache poi xddf usermodel text x d d f text run r0", "$ r4 = specialinvoke r5 get or create property", "$ r4 set baseline null", "goto label2", "label return", "if r1 ! = null goto label1", "label r6 = org apache poi xddf usermodel text x d d f text run r0", "$ r2 = specialinvoke r6 get or create property", "$ d0 = r1 double value", "$ d1 = $ d0 * 1000 0", "$ i0 = int $ d1", "$ r3 = java lang integer value of $ i0", "$ r2 set baseline $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ r3 = null", "goto label2", "label r4 = org apache poi xddf usermodel text x d d f text run r0", "r4 set baseline $ r3", "return", "if r1 ! = null goto label1", "label $ d0 = r1 double value", "$ d1 = java lang math ab $ d0", "$ r3 = java lang double value of $ d1"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi xdgf usermodel x d g f connection r0", "$ r1 = r4 _connect", "$ z0 = $ r1 be set to part", "if $ z0 == 0 goto label1", "r5 = org apache poi xdgf usermodel x d g f connection r0", "$ r2 = r5 _connect", "$ i0 = $ r2 get to part", "$ r3 = java lang integer value of $ i0", "return $ r3", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "r2 = org apache poi xslf extractor x s l f power point extractor r0", "$ z3 = r2 comment by default", "r3 = org apache poi xslf extractor x s l f power point extractor r0", "$ z2 = r3 master by default", "r4 = org apache poi xslf extractor x s l f power point extractor r0", "$ r1 = r4 get text z0 z1 $ z3 $ z2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "$ r4 = org apache poi openxml4j opc package access read", "goto label2", "label r1 = org apache poi openxml4j opc o p c package open r0 $ r4", "$ r2 = org apache poi xslf usermodel x s l f slide show factory create slide show r1", "return $ r2", "if z0 == 0 goto label1", "label $ r4 = org apache poi openxml4j opc package access read_write"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xslf usermodel x s l f text run r0", "$ r1 = r2 _r", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xslf usermodel x s l f theme r0", "$ r2 = r3 _theme", "$ r2 set name r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache poi xslf usermodel x s l f theme r0", "$ r2 = r5 _scheme color", "$ r3 = $ r2 get r1", "$ r4 = org openxmlformats schemas drawingml x2006 main c t color $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r16 = org apache poi xssf eventusermodel x s s f b reader r0", "$ r6 = r16 workbook part", "r1 = $ r6 get input stream", "r12 = null", "label r15 = new org apache poi xssf eventusermodel x s s f b reader $ path extractor", "specialinvoke r15 < init > r1", "r15 parse", "r2 = r15 get path", "label if r1 == null goto label04", "goto label03", "label r1 close", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r75 = org apache poi xssf extractor x s s f export to xml r0", "$ r18 = r75 map", "r3 = $ r18 get relate single x m l cell", "r76 = org apache poi xssf extractor x s s f export to xml r0", "$ r19 = r76 map", "r4 = $ r19 get related table", "r77 = org apache poi xssf extractor x s s f export to xml r0", "$ r20 = r77 map", "$ r21 = $ r20 get ct map", "r5 = $ r21 get root element", "r6 = org apache poi ooxml util document helper create document", "r78 = org apache poi xssf extractor x s s f export to xml r0", "$ z1 = specialinvoke r78 be namespace declare", "if $ z1 == 0 goto label01", "r79 = org apache poi xssf extractor x s s f export to xml r0", "$ r51 = specialinvoke r79 get namespace", "r52 = r6 create element n s $ r51 r5", "goto label02", "label r6 append child r52", "r70 = new java util vector", "specialinvoke r70 < init >", "r71 = new java util hash map", "specialinvoke r71 < init >", "r72 = new java util hash map", "specialinvoke r72 < init >", "r53 = r3 iterator", "label $ z9 = r53 have next", "if $ z9 == 0 goto label04", "$ r47 = r53 next", "r54 = org apache poi xssf usermodel helper x s s f single xml cell $ r47", "$ r48 = r54 get xpath", "r70 add $ r48", "$ r49 = r54 get xpath", "r71 put $ r49 r54", "goto label03", "if $ z9 == 0 goto label04", "label r55 = r4 iterator", "label $ z2 = r55 have next", "if $ z2 == 0 goto label06", "$ r45 = r55 next", "r56 = org apache poi xssf usermodel x s s f table $ r45", "r57 = r56 get common xpath", "r70 add r57", "r72 put r57 r56", "goto label05", "if $ z2 == 0 goto label06", "label r80 = org apache poi xssf extractor x s s f export to xml r0", "$ r26 = r80 index map", "$ r26 clear", "r70 sort r0", "r81 = org apache poi xssf extractor x s s f export to xml r0", "$ r27 = r81 index map", "$ r27 clear", "r58 = r70 iterator", "label $ z3 = r58 have next", "if $ z3 == 0 goto label14", "$ r30 = r58 next", "r59 = java lang string $ r30", "$ r31 = r71 get r59", "r60 = org apache poi xssf usermodel helper x s s f single xml cell $ r31", "$ r32 = r72 get r59", "r61 = org apache poi xssf usermodel x s s f table $ r32", "$ z4 = r59 match \\ `` * \\\\ [ * \\ ``", "if $ z4 ! = 0 goto label13", "if r60 == null goto label08", "r62 = r60 get reference cell", "if r62 == null goto label08", "$ r39 = r6 get first child", "r82 = org apache poi xssf extractor x s s f export to xml r0", "r63 = specialinvoke r82 get node by x path r59 $ r39 r6 0", "r83 = org apache poi xssf extractor x s s f export to xml r0", "specialinvoke r83 map cell on node r62 r63", "$ r40 = \\ `` \\ ``", "$ r41 = r63 get text content", "$ z6 = $ r40 equal $ r41", "if $ z6 == 0 goto label08", "$ r42 = r63 get parent node", "if $ r42 == null goto label08", "$ r43 = r63 get parent node", "$ r43 remove child r63", "label if r61 == null goto label13", "r64 = r61 get columns", "r65 = r61 get x s s f sheet", "$ r33 = r61 get start cell reference", "$ i3 = $ r33 get row", "$ i4 = r61 get header row count", "i0 = $ i3 + $ i4", "$ r34 = r61 get end cell reference", "i1 = $ r34 get row", "i7 = i0", "label if i7 > i1 goto label13", "r10 = r65 get row i7", "$ r35 = r61 get common xpath", "$ r36 = r6 get first child", "r84 = org apache poi xssf extractor x s s f export to xml r0", "r11 = specialinvoke r84 get node by x path $ r35 $ r36 r6 1", "$ r37 = r61 get start cell reference", "s2 = $ r37 get col", "r12 = r64 iterator", "label $ z5 = r12 have next", "if $ z5 == 0 goto label12", "$ r38 = r12 next", "r13 = org apache poi xssf usermodel x s s f table column $ r38", "$ i5 = r13 get column index", "$ i6 = s2 + $ i5", "r14 = r10 get cell $ i6", "if r14 == null goto label11", "r15 = r13 get xml column pr", "if r15 == null goto label11", "r16 = r15 get local x path", "r85 = org apache poi xssf extractor x s s f export to xml r0", "r17 = specialinvoke r85 get node by x path r16 r11 r6 0", "r86 = org apache poi xssf extractor x s s f export to xml r0", "specialinvoke r86 map cell on node r14 r17", "label goto label10", "if $ z5 == 0 goto label12", "label i7 = i7 + 1", "goto label09", "label if i7 > i1 goto label13", "label goto label07", "if $ z3 == 0 goto label14", "label z10 = 1", "if z0 == 0 goto label15", "r87 = org apache poi xssf extractor x s s f export to xml r0", "z10 = specialinvoke r87 be valid r6", "label if z10 == 0 goto label16", "r66 = javax xml transform transformer factory new instance", "r67 = r66 new transformer", "r67 set output property \\ `` omit-xml-declaration\\", "r67 set output property \\ `` indent\\", "r67 set output property \\ `` encoding\\", "r73 = new javax xml transform stream stream result", "specialinvoke r73 < init > r1", "r74 = new javax xml transform dom d o m source", "specialinvoke r74 < init > r6", "r67 transform r74 r73", "label return", "if $ z1 == 0 goto label01", "label r52 = r6 create element n s \\ `` \\"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [], [123], [124], [125], [126], [127], [128], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], [142], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xssf model comment table r0", "$ r1 = r2 comment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xssf stream auto size column tracker r0", "r2 track all columns = 1", "r3 = org apache poi xssf stream auto size column tracker r0", "$ r1 = r3 untracked columns", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xssf stream auto size column tracker r0", "r3 track all columns = 0", "r4 = org apache poi xssf stream auto size column tracker r0", "$ r1 = r4 max column width", "$ r1 clear", "r5 = org apache poi xssf stream auto size column tracker r0", "$ r2 = r5 untracked columns", "$ r2 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r3 = r2 next", "$ r4 = java lang integer $ r3", "i0 = $ r4 int value", "r5 = org apache poi xssf stream auto size column tracker r0", "r5 track column i0", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xssf stream s x s s f picture r0", "$ r1 = r3 _picture", "$ r2 = $ r1 get c t picture", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = org apache poi xssf stream s x s s f sheet r0", "$ r1 = r7 _writer", "$ i0 = $ r1 get number of flushed row", "if $ i0 < = 0 goto label1", "r8 = org apache poi xssf stream s x s s f sheet r0", "$ r6 = r8 _writer", "$ i2 = $ r6 get low index of flush row", "return $ i2", "if $ i0 < = 0 goto label1", "label r9 = org apache poi xssf stream s x s s f sheet r0", "$ r2 = r9 _rows", "$ i1 = $ r2 size", "if $ i1 ! = 0 goto label2", "$ i3 = 0", "goto label3", "label return $ i3", "if $ i1 ! = 0 goto label2", "label r10 = org apache poi xssf stream s x s s f sheet r0", "$ r3 = r10 _rows", "$ r4 = $ r3 first key", "$ r5 = java lang integer $ r4", "$ i3 = $ r5 int value"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache poi xssf stream s x s s f sheet r0", "$ r1 = r2 _sh", "$ f0 = $ r1 get column width in pixel i0", "return $ f0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache poi xssf stream s x s s f sheet r0", "$ r1 = specialinvoke r2 safe get protection field", "$ r1 set auto filter z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache poi xssf stream s x s s f workbook r0", "r1 _compress tmp file = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi xssf usermodel extension x s s f cell border r0", "r2 _theme = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "$ l1 = l0 + 1l", "r2 = org apache poi xssf usermodel helper column helper r0", "$ z0 = specialinvoke r2 column exists1 base r1 $ l1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label $ r2 = r0 get name", "org apache poi xssf usermodel x s s f builtin table style value of $ r2", "label return 1"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r7 = org apache poi xssf usermodel x s s f chart r0", "$ r3 = r7 chart", "$ z0 = $ r3 be set title", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r8 = org apache poi xssf usermodel x s s f chart r0", "$ r4 = r8 chart", "r1 = $ r4 get title", "$ z1 = r1 be set tx", "if $ z1 ! = 0 goto label2", "label r2 = r1 get tx", "$ z2 = r2 be set str ref", "if $ z2 ! = 0 goto label3", "label $ r5 = r2 get str ref", "$ r6 = $ r5 get f", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi xssf usermodel x s s f color r0", "$ r1 = r2 ct color", "$ l0 = $ r1 get theme", "$ i1 = int $ l0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi xssf usermodel x s s f graphic frame r0", "$ r1 = r4 graphic frame", "$ r2 = $ r1 get nv graphic frame pr", "$ r3 = $ r2 get c nv pr", "$ l0 = $ r3 get id", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xssf usermodel x s s f hyperlink r0", "$ r2 = r3 _type", "$ r1 = org apache poi common usermodel hyperlink type document", "if $ r2 == $ r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 == $ r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xssf usermodel x s s f hyperlink r0", "$ r1 = r3 _ct hyperlink", "$ r2 = $ r1 get location", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang illegal state exception", "specialinvoke $ r2 < init > \\ `` you can not change text of a line break it be always \\'\\\\n\\'\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi xssf usermodel x s s f name r0", "$ r2 = r3 _ct name", "$ r2 set comment r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache poi xssf usermodel x s s f picture r0", "$ r2 = r6 ct picture", "$ r3 = $ r2 get blip fill", "$ r4 = $ r3 get blip", "$ r5 = r1 get id", "$ r4 set embed $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r17 = org apache poi xssf usermodel x s s f pivot table r0", "specialinvoke r17 check column index i0", "r18 = org apache poi xssf usermodel x s s f pivot table r0", "r1 = r18 get pivot area", "$ r5 = r1 get last cell", "$ i2 = $ r5 get row", "$ r6 = r1 get first cell", "$ i3 = $ r6 get row", "i1 = $ i2 - $ i3", "r19 = org apache poi xssf usermodel x s s f pivot table r0", "$ r7 = r19 pivot table definition", "r2 = $ r7 get pivot field", "r3 = org openxmlformats schemas spreadsheetml x2006 main c t pivot field $ factory new instance", "r4 = r3 add new item", "$ r8 = org openxmlformats schemas spreadsheetml x2006 main s t axis axis_row", "r3 set axis $ r8", "r3 set show all 0", "i8 = 0", "label if i8 > i1 goto label2", "$ r14 = r4 add new item", "$ r15 = org openxmlformats schemas spreadsheetml x2006 main s t item type default", "$ r14 set t $ r15", "i8 = i8 + 1", "goto label1", "label if i8 > i1 goto label2", "label $ i4 = r4 size of item array", "$ l5 = long $ i4", "r4 set count $ l5", "r2 set pivot field array i0 r3", "r20 = org apache poi xssf usermodel x s s f pivot table r0", "$ r9 = r20 pivot table definition", "$ r10 = $ r9 get row field", "if $ r10 == null goto label3", "r21 = org apache poi xssf usermodel x s s f pivot table r0", "$ r13 = r21 pivot table definition", "r16 = $ r13 get row field", "goto label4", "label $ r12 = r16 add new field", "$ r12 set x i0", "$ i6 = r16 size of field array", "$ l7 = long $ i6", "r16 set count $ l7", "return", "if $ r10 == null goto label3", "label r22 = org apache poi xssf usermodel x s s f pivot table r0", "$ r11 = r22 pivot table definition", "r16 = $ r11 add new row field"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r6 = org apache poi xssf usermodel x s s f print setup r0", "$ r1 = r6 page setup", "$ r2 = $ r1 get page order", "if $ r2 ! = null goto label1", "$ r5 = null", "goto label2", "label return $ r5", "if $ r2 ! = null goto label1", "label r7 = org apache poi xssf usermodel x s s f print setup r0", "$ r3 = r7 page setup", "$ r4 = $ r3 get page order", "$ i0 = $ r4 int value", "$ r5 = org apache poi s usermodel page order value of $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["$ r9 = org apache poi xssf usermodel x s s f shape group prototype", "if $ r9 ! = null goto label1", "r0 = org openxmlformats schemas drawingml x2006 spreadsheet draw c t group shape $ factory new instance", "r1 = r0 add new nv grp sp pr", "r2 = r1 add new c nv pr", "r2 set id 0l", "r2 set name \\ `` group 0\\ ``", "r1 add new c nv grp sp pr", "r3 = r0 add new grp sp pr", "r4 = r3 add new xfrm", "r5 = r4 add new ext", "r5 set cx 0l", "r5 set cy 0l", "r6 = r4 add new off", "r6 set x 0l", "r6 set y 0l", "r7 = r4 add new ch ext", "r7 set cx 0l", "r7 set cy 0l", "r8 = r4 add new ch off", "r8 set x 0l", "r8 set y 0l", "org apache poi xssf usermodel x s s f shape group prototype = r0", "label $ r10 = org apache poi xssf usermodel x s s f shape group prototype", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi xssf usermodel x s s f text run r0", "r2 set font family r1 -1 -1 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache poi xwpf extractor x w p f word extractor r0", "r1 concatenate phonetic run = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 1 goto label1", "r6 = org apache poi xwpf model x w p f header footer policy r0", "$ r4 = r6 first page footer", "if $ r4 == null goto label1", "r7 = org apache poi xwpf model x w p f header footer policy r0", "$ r5 = r7 first page footer", "return $ r5", "if $ r4 == null goto label1", "label $ i1 = i0 % 2", "if $ i1 ! = 0 goto label2", "r8 = org apache poi xwpf model x w p f header footer policy r0", "$ r2 = r8 even page footer", "if $ r2 == null goto label2", "r9 = org apache poi xwpf model x w p f header footer policy r0", "$ r3 = r9 even page footer", "return $ r3", "if $ r2 == null goto label2", "label r10 = org apache poi xwpf model x w p f header footer policy r0", "$ r1 = r10 default footer", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 1 goto label1", "r6 = org apache poi xwpf model x w p f header footer policy r0", "$ r4 = r6 first page footer", "if $ r4 == null goto label1", "r7 = org apache poi xwpf model x w p f header footer policy r0", "$ r5 = r7 first page footer", "return $ r5", "if $ r4 == null goto label1", "label $ i1 = i0 % 2", "if $ i1 ! = 0 goto label2", "r8 = org apache poi xwpf model x w p f header footer policy r0", "$ r2 = r8 even page footer", "if $ r2 == null goto label2", "r9 = org apache poi xwpf model x w p f header footer policy r0", "$ r3 = r9 even page footer", "return $ r3", "if $ r2 == null goto label2", "label r10 = org apache poi xwpf model x w p f header footer policy r0", "$ r1 = r10 default footer", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "l2 = @ parameter2", "l3 = @ parameter3", "r1 = org apache poi xwpf usermodel x w p f chart r0", "r1 set chart bottom margin l2", "r2 = org apache poi xwpf usermodel x w p f chart r0", "r2 set chart right margin l1", "r3 = org apache poi xwpf usermodel x w p f chart r0", "r3 set chart leave margin l3", "r4 = org apache poi xwpf usermodel x w p f chart r0", "r4 set chart right margin l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi xwpf usermodel x w p f document r0", "r3 = org apache poi xwpf usermodel i body element r1", "$ i0 = specialinvoke r2 get po of body element r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r8 = new org apache poi xwpf usermodel x w p f table", "r9 = org apache poi xwpf usermodel x w p f document r0", "$ r3 = r9 ct document", "$ r4 = $ r3 get body", "$ r5 = $ r4 add new tbl", "specialinvoke r8 < init > $ r5 r0 i0 i1", "r10 = org apache poi xwpf usermodel x w p f document r0", "$ r6 = r10 body element", "$ r6 add r8", "r11 = org apache poi xwpf usermodel x w p f document r0", "$ r7 = r11 table", "$ r7 add r8", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "$ r4 = org apache poi xwpf usermodel x w p f relation chart", "r13 = org apache poi xwpf usermodel x w p f document r0", "$ r3 = r13 chart", "$ i3 = $ r3 size", "$ i4 = $ i3 + 1", "r14 = org apache poi xwpf usermodel x w p f document r0", "r15 = org apache poi ooxml p o i x m l relation $ r4", "i2 = r14 get next part number r15 $ i4", "$ r5 = org apache poi xwpf usermodel x w p f relation chart", "$ r6 = org apache poi xwpf usermodel x w p f factory get instance", "r16 = org apache poi xwpf usermodel x w p f document r0", "r17 = org apache poi ooxml p o i x m l relation $ r5", "r18 = org apache poi ooxml p o i x m l factory $ r6", "r1 = r16 create relationship r17 r18 i2 0", "$ r7 = r1 get document part", "r2 = org apache poi xwpf usermodel x w p f chart $ r7", "r2 set chart index i2", "$ r8 = r1 get relationship", "$ r9 = $ r8 get id", "r19 = org apache poi xwpf usermodel x w p f document r0", "$ r10 = r19 create paragraph", "$ r11 = $ r10 create run", "r2 attach $ r9 $ r11", "$ l6 = long i0", "$ l5 = long i1", "r2 set chart bound box $ l6 $ l5", "r20 = org apache poi xwpf usermodel x w p f document r0", "$ r12 = r20 chart", "$ r12 add r2", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache poi xwpf usermodel x w p f endnotes r0", "$ r1 = r2 get footnote by id i0", "r3 = org apache poi xwpf usermodel x w p f abstract footnote endnote $ r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xwpf usermodel x w p f header footer r0", "$ r1 = r3 document", "$ r2 = $ r1 get all package picture", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = org apache poi xwpf usermodel x w p f header footer r0", "$ r2 = r6 header footer", "r1 = $ r2 new cursor", "r1 remove xml content", "r1 dispose", "r7 = org apache poi xwpf usermodel x w p f header footer r0", "$ r3 = r7 paragraph", "$ r3 clear", "r8 = org apache poi xwpf usermodel x w p f header footer r0", "$ r4 = r8 table", "$ r4 clear", "r9 = org apache poi xwpf usermodel x w p f header footer r0", "$ r5 = r9 body element", "$ r5 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi xwpf usermodel x w p f hyperlink run r0", "$ r1 = r3 hyperlink", "$ r2 = $ r1 get id", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache poi xwpf usermodel x w p f number r0", "$ r4 = r8 nums", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = org apache poi xwpf usermodel x w p f num $ r5", "$ r6 = r3 get c t num", "$ r7 = $ r6 get num id", "$ z1 = $ r7 equal r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r6 = org apache poi xwpf usermodel x w p f style r0", "$ r1 = r6 ct style", "$ r2 = $ r1 get link", "if $ r2 == null goto label1", "r7 = org apache poi xwpf usermodel x w p f style r0", "$ r3 = r7 ct style", "$ r4 = $ r3 get link", "$ r5 = $ r4 get val", "return $ r5", "if $ r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache poi xwpf usermodel x w p f table cell r0", "r2 = r6 get tc pr", "$ z0 = r2 be set shd", "if $ z0 == 0 goto label1", "$ r5 = r2 get shd", "goto label2", "label $ r5 set color \\ `` auto\\ ``", "$ r4 = org openxmlformats schemas wordprocessingml x2006 main s t shd clear", "$ r5 set val $ r4", "$ r5 set fill r1", "return", "if $ z0 == 0 goto label1", "label $ r5 = r2 add new shd"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r5 = org apache poi xwpf usermodel x w p f table cell r0", "$ r1 = r5 ct tc", "$ z0 = $ r1 be set tc pr", "if $ z0 == 0 goto label1", "r6 = org apache poi xwpf usermodel x w p f table cell r0", "$ r3 = r6 ct tc", "$ r4 = $ r3 get tc pr", "goto label2", "label return $ r4", "if $ z0 == 0 goto label1", "label r7 = org apache poi xwpf usermodel x w p f table cell r0", "$ r2 = r7 ct tc", "$ r4 = $ r2 add new tc pr"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hdgf h d g f diagram r0", "$ r1 = r3 trailer", "$ r2 = $ r1 get point to stream", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 18"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hmef attachment r0", "$ r1 = r2 attribute", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hsmf datatypes m a p i property attach_extension", "r3 = org apache poi hmef attachment r0", "$ r2 = specialinvoke r3 get string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hmef attribute m a p i rtf attribute r0", "$ r1 = r2 decompress", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi sl usermodel placeholder slide_number", "r2 = org apache poi hslf model header footer r0", "$ z0 = specialinvoke r2 be visible 8 $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "i0 = @ parameter1", "r4 = org apache poi hslf model textproperties bite mask text prop r0", "$ r1 = r4 sub prop match", "$ r1 [ i0 ] = 1", "i4 = specialinvoke r0 get value", "if z0 == 0 goto label1", "r5 = org apache poi hslf model textproperties bite mask text prop r0", "$ r3 = r5 sub prop mask", "$ i3 = $ r3 [ i0 ]", "i5 = i4 | $ i3", "goto label2", "label specialinvoke r0 set value i5", "return", "if z0 == 0 goto label1", "label r6 = org apache poi hslf model textproperties bite mask text prop r0", "$ r2 = r6 sub prop mask", "$ i1 = $ r2 [ i0 ]", "$ i2 = $ i1 ^ -1", "i5 = i4 & $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hslf record binary tag data blob r0", "$ l0 = r1 _type", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hslf record color scheme atom r0", "r1 accent and hyperlink colour r g b = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["b0 = @ parameter0", "b1 = @ parameter1", "b2 = @ parameter2", "$ r0 = newarray byte [ 3 ]", "$ r0 [ 0 ] = b0", "$ r0 [ 1 ] = b1", "$ r0 [ 2 ] = b2", "$ i3 = org apache poi hslf record color scheme atom join r g b $ r0", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record comment2000 r0", "$ r1 = r2 comment atom", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi hslf record comment2000 r0", "$ r2 = r3 comment record", "$ r2 set text r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache poi hslf record comment2000 atom r0", "$ r2 = r3 _data", "org apache poi hslf util system time utils store date r1 $ r2 4", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hslf record document atom r0", "$ b0 = r1 omit title place", "if $ b0 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hslf record document atom r0", "$ b0 = r1 show comment", "if $ b0 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hslf record record type ex avi movie", "$ s0 = $ r1 type i d", "$ l1 = long $ s0", "return $ l1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record ex embed atom r0", "$ r1 = r2 _data", "$ b0 = $ r1 [ 5 ]", "if $ b0 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi hslf record ex hyperlink r0", "$ r1 = r4 link detail a", "if $ r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r5 = org apache poi hslf record ex hyperlink r0", "$ r2 = r5 link detail a", "$ r3 = $ r2 get text"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record ex medium atom r0", "$ r1 = r2 _recdata", "$ i0 = org apache poi util little endian get int $ r1 0", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record ex obj list r0", "$ r1 = r2 ex obj list atom", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache poi hslf record ex ole obj atom r0", "$ r1 = r2 _data", "org apache poi util little endian put int $ r1 4 i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache poi hslf record font entity atom r0", "$ r1 = r2 _recdata", "$ b1 = byte i0", "$ r1 [ 66 ] = $ b1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ l0 = org apache poi hslf record note atom _type", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org apache poi hslf record o e placeholder atom r0", "r1 placeholder id = b0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hslf record outline text ref atom r0", "$ i0 = r1 _index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hslf record persist ptr holder r0", "$ l0 = r1 _type", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record p p draw r0", "$ r1 = r2 child record", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = null", "r10 = new java util array list", "specialinvoke r10 < init >", "r11 = org apache poi hslf record record container r0", "r3 = r11 _children", "i0 = lengthof r3", "i2 = 0", "label if i2 > = i0 goto label4", "r4 = r3 [ i2 ]", "if r4 == r1 goto label2", "r10 add r4", "goto label3", "label i2 = i2 + 1", "goto label1", "if r4 == r1 goto label2", "label r9 = r4", "label if i2 > = i0 goto label4", "label $ i1 = r10 size", "$ r6 = newarray org apache poi hslf record record [ $ i1 ]", "$ r7 = r10 to array $ r6", "$ r8 = org apache poi hslf record record [ ] $ r7", "r12 = org apache poi hslf record record container r0", "r12 _children = $ r8", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record slide list with text r0", "$ r1 = r2 slide atom set", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf record style text prop atom r0", "$ r1 = r2 char style", "r3 = org apache poi hslf record style text prop atom r0", "$ i0 = specialinvoke r3 get character cover $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache poi hslf usermodel h s l f fill r0", "$ r4 = r8 shape", "r2 = $ r4 get escher opt record", "if r1 ! = null goto label1", "$ i4 = 0", "goto label2", "label org apache poi hslf usermodel h s l f shape set escher property r2 16774 $ i4", "if r1 == null goto label3", "r9 = org apache poi hslf usermodel h s l f fill r0", "$ r5 = r9 shape", "$ r6 = $ r5 get sheet", "if $ r6 == null goto label3", "$ i1 = r1 get index", "r10 = org apache poi hslf usermodel h s l f fill r0", "r3 = r10 get escher b s e record $ i1", "if r3 == null goto label3", "$ i2 = r3 get ref", "$ i3 = $ i2 + 1", "r3 set ref $ i3", "label return", "if r1 ! = null goto label1", "label $ i4 = r1 get index"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache poi hslf usermodel h s l f group shape r0", "$ r3 = r5 get sp container", "$ r4 = r1 get sp container", "r6 = org apache poi ddf escher record $ r4", "$ r3 add child record r6", "r7 = org apache poi hslf usermodel h s l f group shape r0", "r2 = r7 get sheet", "r1 set sheet r2", "$ i0 = r2 allocate shape id", "r1 set shape id $ i0", "r1 after insert r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache poi hslf usermodel h s l f group shape r0", "r2 = r10 get anchor", "$ d6 = r2 get width", "$ b0 = $ d6 cmpl 0 0", "if $ b0 ! = 0 goto label1", "$ d24 = 0 0", "goto label2", "label d0 = $ d24", "$ d9 = r2 get height", "$ b1 = $ d9 cmpl 0 0", "if $ b1 ! = 0 goto label3", "$ d25 = 0 0", "goto label4", "label d1 = $ d25", "r11 = org apache poi hslf usermodel h s l f group shape r0", "r11 set exterior anchor r1", "r12 = org apache poi hslf usermodel h s l f group shape r0", "$ r6 = r12 get shape", "r3 = $ r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label6", "$ r7 = r3 next", "r4 = org apache poi hslf usermodel h s l f shape $ r7", "r5 = r4 get anchor", "$ d12 = r1 get x", "$ d13 = r5 get x", "$ d14 = r2 get x", "$ d15 = $ d13 - $ d14", "$ d16 = $ d15 * d0", "d2 = $ d12 + $ d16", "$ d17 = r1 get y", "$ d18 = r5 get y", "$ d19 = r2 get y", "$ d20 = $ d18 - $ d19", "$ d21 = $ d20 * d1", "d3 = $ d17 + $ d21", "$ d22 = r5 get width", "d4 = $ d22 * d0", "$ d23 = r5 get height", "d5 = $ d23 * d1", "r9 = new java awt geom rectangle2 d $ double", "specialinvoke r9 < init > d2 d3 d4 d5", "r4 set anchor r9", "goto label5", "if $ z0 == 0 goto label6", "label return", "if $ b1 ! = 0 goto label3", "label $ d10 = r1 get height", "$ d11 = r2 get height", "$ d25 = $ d10 $ d11", "if $ b0 ! = 0 goto label1", "label $ d7 = r1 get width", "$ d8 = r2 get width", "$ d24 = $ d7 $ d8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [50], [51], [52], [53], [54], [55], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hslf usermodel h s l f object shape r0", "r1 = r3 get ex embed", "if r1 ! = null goto label1", "$ r2 = null", "goto label2", "label return $ r2", "if r1 ! = null goto label1", "label $ r2 = r1 get menu name"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r6 = org apache poi hslf usermodel h s l f shape r0", "$ r1 = r6 _escher container", "if $ r1 ! = null goto label1", "r5 = new org apache poi ddf escher container record", "specialinvoke r5 < init >", "r7 = org apache poi hslf usermodel h s l f shape r0", "r7 _escher container = r5", "r8 = org apache poi hslf usermodel h s l f shape r0", "$ r4 = r8 _escher container", "$ r4 set option 15", "label r9 = org apache poi hslf usermodel h s l f shape r0", "$ r2 = r9 _escher container", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hslf usermodel h s l f shape r0", "r2 _sheet = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r6 = org apache poi hslf usermodel h s l f shape r0", "$ r1 = r6 get escher child -4079", "r4 = org apache poi hslf record h s l f escher client data record $ r1", "if r4 ! = null goto label1", "if z0 == 0 goto label1", "r5 = new org apache poi hslf record h s l f escher client data record", "specialinvoke r5 < init >", "r4 = r5", "r5 set option 15", "r5 set record id -4079", "r7 = org apache poi hslf usermodel h s l f shape r0", "$ r3 = r7 get sp container", "r8 = org apache poi ddf escher record r5", "$ r3 add child before r8 -4083", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hslf usermodel h s l f sheet r0", "$ r1 = r3 _container", "$ r2 = $ r1 get p p draw", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache poi hslf usermodel h s l f sheet r0", "$ r5 = r9 _slide show", "if $ r5 == null goto label1", "r8 = new org apache poi hslf exception h s l f exception", "specialinvoke r8 < init > \\ `` can\\'t change exist slideshow reference\\ ``", "r10 = java lang throwable r8", "throw r10", "if $ r5 == null goto label1", "label r11 = org apache poi hslf usermodel h s l f sheet r0", "r11 _slide show = r1", "r12 = org apache poi hslf usermodel h s l f sheet r0", "r2 = r12 get text paragraph", "if r2 ! = null goto label2", "return", "if r2 ! = null goto label2", "label r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label4", "$ r6 = r3 next", "r4 = java util list $ r6", "r13 = org apache poi hslf usermodel h s l f sheet r0", "org apache poi hslf usermodel h s l f text paragraph supply sheet r4 r13", "org apache poi hslf usermodel h s l f text paragraph apply hyperlink r4", "goto label3", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hslf usermodel h s l f slide show impl r0", "$ r1 = r2 _docstream", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache poi hslf util system time utils store date r0 r1 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache poi hsmf m a p i message r0", "$ r2 = r5 main chunk", "$ r3 = $ r2 get message header", "r6 = org apache poi hsmf m a p i message r0", "r1 = r6 get string from chunk $ r3", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ r4 = r1 split \\ `` \\\\r ? \\\\n\\ ``", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org apache poi hsmf m a p i message r0", "$ r1 = r4 main chunk", "$ r2 = $ r1 get conversation topic", "r5 = org apache poi hsmf m a p i message r0", "$ r3 = r5 get string from chunk $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r21 = org apache poi hsmf m a p i message r0", "$ r2 = r21 main chunk", "$ r3 = $ r2 get message class", "r22 = org apache poi hsmf m a p i message r0", "r1 = r22 get string from chunk $ r3", "if r1 == null goto label1", "$ r5 = r1 trim", "$ i0 = $ r5 length", "if $ i0 ! = 0 goto label2", "label $ r4 = org apache poi hsmf m a p i message $ message_class unspecified", "return $ r4", "if $ i0 ! = 0 goto label2", "label $ z0 = r1 equal ignore case \\ `` ipm note\\ ``", "if $ z0 == 0 goto label3", "$ r19 = org apache poi hsmf m a p i message $ message_class note", "return $ r19", "if $ z0 == 0 goto label3", "label $ z1 = r1 equal ignore case \\ `` ipm contact\\ ``", "if $ z1 == 0 goto label4", "$ r18 = org apache poi hsmf m a p i message $ message_class contact", "return $ r18", "if $ z1 == 0 goto label4", "label $ z2 = r1 equal ignore case \\ `` ipm appointment\\ ``", "if $ z2 == 0 goto label5", "$ r17 = org apache poi hsmf m a p i message $ message_class appointment", "return $ r17", "if $ z2 == 0 goto label5", "label $ z3 = r1 equal ignore case \\ `` ipm sticky note\\ ``", "if $ z3 == 0 goto label6", "$ r16 = org apache poi hsmf m a p i message $ message_class sticky_note", "return $ r16", "if $ z3 == 0 goto label6", "label $ z4 = r1 equal ignore case \\ `` ipm task\\ ``", "if $ z4 == 0 goto label7", "$ r15 = org apache poi hsmf m a p i message $ message_class task", "return $ r15", "if $ z4 == 0 goto label7", "label $ z5 = r1 equal ignore case \\ `` ipm post\\ ``", "if $ z5 == 0 goto label8", "$ r14 = org apache poi hsmf m a p i message $ message_class post", "return $ r14", "if $ z5 == 0 goto label8", "label r23 = org apache poi hsmf m a p i message r0", "$ r8 = r23 logger", "$ r6 = newarray java lang object [ 1 ]", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r9 = r20 append \\ `` i don\\'t recognize message class \\'\\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 append \\ `` \\ ' please open an issue on poi\\ 's bugzilla\\ ``", "$ r12 = $ r11 to string", "$ r6 [ 0 ] = $ r12", "$ r8 log 5 $ r6", "$ r13 = org apache poi hsmf m a p i message $ message_class unknown", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [19], [20], [21], [], [23], [24], [25], [26], [], [28], [29], [30], [31], [], [33], [34], [35], [36], [], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache poi hwmf draw hwmf draw property r0", "r2 palette = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r5 = org apache poi hwpf model picture table r0", "$ z1 = r5 have picture r1", "if $ z1 == 0 goto label1", "r4 = new org apache poi hwpf usermodel picture", "$ i0 = r1 get pic offset", "r6 = org apache poi hwpf model picture table r0", "$ r3 = r6 _data stream", "specialinvoke r4 < init > $ i0 $ r3 z0", "return r4", "if $ z1 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = null", "if i0 < 0 goto label1", "r4 = org apache poi hwpf model revision mark author table r0", "$ r1 = r4 entry", "$ i1 = lengthof $ r1", "if i0 > = $ i1 goto label1", "r5 = org apache poi hwpf model revision mark author table r0", "$ r2 = r5 entry", "r3 = $ r2 [ i0 ]", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache poi hwpf model style sheet r0", "$ r1 = r3 _style description", "$ r2 = $ r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model text piece r0", "$ i0 = r1 get end", "r2 = org apache poi hwpf model text piece r0", "$ i1 = r2 get start", "$ i2 = $ i0 - $ i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type b k f abstract type r0", "$ s0 = r1 field_2_bkf_flags", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hwpf model type f l d abstract type f result dirty", "r2 = org apache poi hwpf model type f l d abstract type r0", "$ b0 = r2 field_2_flt", "$ i1 = $ r1 set boolean $ b0 z0", "$ b2 = byte $ i1", "r3 = org apache poi hwpf model type f l d abstract type r0", "r3 field_2_flt = $ b2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type s e p abstract type r0", "$ b0 = r1 field_9_lnc", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hwpf model type s e p abstract type r0", "r1 field_12_dxa lnn = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type s e p abstract type r0", "$ i0 = r1 field_18_dm bin other", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hwpf model type s e p abstract type r0", "r1 field_27_dxt char space = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type s e p abstract type r0", "$ s0 = r1 field_36_unused3", "return $ s0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type s e p abstract type r0", "$ i0 = r1 field_42_ya page n up", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache poi hwpf model type s e p abstract type r0", "r1 field_42_ya page n up = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache poi hwpf model type s e p abstract type r0", "$ b0 = r1 field_52_unused5", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache poi hwpf model type s e p abstract type r0", "$ r1 = r2 field_59_olst anm", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org apache poi hwpf model type t l p abstract type f last row", "r2 = org apache poi hwpf model type t l p abstract type r0", "$ b0 = r2 field_2_tlp_flags", "$ i1 = $ r1 set boolean $ b0 z0", "$ b2 = byte $ i1", "r3 = org apache poi hwpf model type t l p abstract type r0", "r3 field_2_tlp_flags = $ b2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hwpf usermodel border code _f shadow", "r2 = org apache poi hwpf usermodel border code r0", "$ s0 = r2 _info2", "$ i1 = $ r1 get value $ s0", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache poi hwpf usermodel border code _f frame", "r2 = org apache poi hwpf usermodel border code r0", "$ s0 = r2 _info2", "$ i1 = $ r1 get value $ s0", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache poi hwpf usermodel range r0", "$ r1 = r3 _text", "r4 = org apache poi hwpf usermodel range r0", "$ i1 = r4 _start", "r5 = org apache poi hwpf usermodel range r0", "$ i0 = r5 _end", "$ r2 = $ r1 substring $ i1 $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = org apache poi hwpf usermodel range r0", "r16 init all", "r17 = org apache poi hwpf usermodel range r0", "$ r2 = r17 _text", "r18 = org apache poi hwpf usermodel range r0", "$ i0 = r18 _end", "$ r2 insert $ i0 r1", "r19 = org apache poi hwpf usermodel range r0", "$ r4 = r19 _doc", "$ r5 = $ r4 get character table", "r20 = org apache poi hwpf usermodel range r0", "$ i1 = r20 _char end", "$ i2 = $ i1 - 1", "$ i3 = r1 length", "$ r5 adjust for insert $ i2 $ i3", "r21 = org apache poi hwpf usermodel range r0", "$ r6 = r21 _doc", "$ r7 = $ r6 get paragraph table", "r22 = org apache poi hwpf usermodel range r0", "$ i4 = r22 _par end", "$ i5 = $ i4 - 1", "$ i6 = r1 length", "$ r7 adjust for insert $ i5 $ i6", "r23 = org apache poi hwpf usermodel range r0", "$ r8 = r23 _doc", "$ r9 = $ r8 get section table", "r24 = org apache poi hwpf usermodel range r0", "$ i7 = r24 _section end", "$ i8 = $ i7 - 1", "$ i9 = r1 length", "$ r9 adjust for insert $ i8 $ i9", "r25 = org apache poi hwpf usermodel range r0", "$ r10 = r25 _doc", "$ z0 = $ r10 instanceof org apache poi hwpf h w p f document", "if $ z0 == 0 goto label1", "r26 = org apache poi hwpf usermodel range r0", "$ r12 = r26 _doc", "$ r13 = org apache poi hwpf h w p f document $ r12", "$ r14 = $ r13 get bookmark", "$ r15 = org apache poi hwpf usermodel bookmarks impl $ r14", "r27 = org apache poi hwpf usermodel range r0", "$ i13 = r27 _end", "$ i14 = r1 length", "$ r15 after insert $ i13 $ i14", "label $ i10 = r1 length", "r28 = org apache poi hwpf usermodel range r0", "specialinvoke r28 adjust for insert $ i10", "r29 = org apache poi hwpf usermodel range r0", "r29 sanity check", "r30 = org apache poi hwpf usermodel range r0", "$ i11 = r30 num character run", "$ i12 = $ i11 - 1", "r31 = org apache poi hwpf usermodel range r0", "$ r11 = r31 get character run $ i12", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r19 = org apache poi hwpf usermodel range r0", "specialinvoke r19 init paragraph", "r20 = org apache poi hwpf usermodel range r0", "$ i1 = r20 _par start", "$ i3 = i0 + $ i1", "r21 = org apache poi hwpf usermodel range r0", "$ i2 = r21 _par end", "if $ i3 < $ i2 goto label1", "r18 = new java lang index out of bound exception", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r7 = r17 append \\ `` paragraph #\\ ``", "$ r8 = $ r7 append i0", "$ r9 = $ r8 append \\ `` \\ ``", "r22 = org apache poi hwpf usermodel range r0", "$ i6 = r22 _par start", "$ i7 = i0 + $ i6", "$ r10 = $ r9 append $ i7", "$ r11 = $ r10 append \\ `` not in range [ \\ ``", "r23 = org apache poi hwpf usermodel range r0", "$ i8 = r23 _par start", "$ r12 = $ r11 append $ i8", "$ r13 = $ r12 append \\ `` \\ ``", "r24 = org apache poi hwpf usermodel range r0", "$ i9 = r24 _par end", "$ r14 = $ r13 append $ i9", "$ r15 = $ r14 append \\ `` \\ ``", "$ r16 = $ r15 to string", "specialinvoke r18 < init > $ r16", "throw r18", "if $ i3 < $ i2 goto label1", "label r25 = org apache poi hwpf usermodel range r0", "$ r2 = r25 _paragraphs", "r26 = org apache poi hwpf usermodel range r0", "$ i4 = r26 _par start", "$ i5 = i0 + $ i4", "$ r3 = $ r2 get $ i5", "r1 = org apache poi hwpf model papx $ r3", "r27 = org apache poi hwpf usermodel range r0", "$ r4 = org apache poi hwpf usermodel paragraph new paragraph r27 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ i2 = i0 + i1", "r2 = com google protobuf byte string r0", "$ i3 = r2 size", "com google protobuf byte string check range i0 $ i2 $ i3", "if i1 < = 0 goto label1", "r3 = com google protobuf byte string r0", "r3 write to internal r1 i0 i1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ i2 = com google protobuf cod output stream compute tag size i0", "$ i3 = com google protobuf cod output stream compute int32 size no tag i1", "$ i4 = $ i2 + $ i3", "return $ i4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ i2 = com google protobuf cod output stream compute tag size i0", "$ i3 = com google protobuf cod output stream compute enum size no tag i1", "$ i4 = $ i2 + $ i3", "return $ i4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = com google protobuf cod output stream compute u int32 size no tag i0", "return $ i1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = com google protobuf extension $ message type proto2", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r5 = com google protobuf field r0", "r1 = r5 json name_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google protobuf field r0", "r6 json name_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string", "$ r2 = com google protobuf internal utf_8", "specialinvoke $ r1 < init > r0 $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com google protobuf method r0", "$ z0 = r1 request streaming_", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google protobuf method r0", "$ r1 = r2 options_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google protobuf method r0", "$ i0 = r1 syntax_", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = com google protobuf repeat field builder r0", "$ r1 = specialinvoke r2 get message i0 0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r5 = com google protobuf text format parse info tree r0", "$ r2 = r5 get location r1", "$ r3 = com google protobuf text format parse info tree get from list $ r2 i0 r1", "$ r4 = com google protobuf text format parse location $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = com google protobuf unknown field set r0", "$ r2 = r6 field", "$ r3 = java lang integer value of i0", "$ r4 = $ r2 get $ r3", "r1 = com google protobuf unknown field set $ field $ r4", "if r1 ! = null goto label1", "$ r5 = com google protobuf unknown field set $ field get default instance", "goto label2", "label return $ r5", "if r1 ! = null goto label1", "label $ r5 = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io quarkus bootstrap model app artifact r0", "r2 path = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io quarkus bootstrap model app artifact r0", "$ r1 = r3 path", "if $ r1 == null goto label1", "r4 = io quarkus bootstrap model app artifact r0", "$ r2 = r4 path", "$ z0 = $ r2 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = io quarkus bootstrap model app model r0", "$ r1 = r2 deployment deps", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io quarkus bootstrap resolver maven bootstrap maven context config r0", "r2 remote repos = r1", "r3 = io quarkus bootstrap resolver maven bootstrap maven context config r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = new io quarkus builder item id", "specialinvoke r9 < init > r1", "r11 = io quarkus builder build result r0", "$ r5 = r11 multi item", "$ r6 = $ r5 get r9", "r3 = java util list $ r6", "if r3 ! = null goto label1", "$ r8 = java util collection empty list", "return $ r8", "if r3 ! = null goto label1", "label r10 = new java util array list", "specialinvoke r10 < init > r3", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = io quarkus deployment builditem run time configuration default build item r0", "$ r1 = r2 key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 replace 92 47", "r2 = java util regex pattern compile \\ `` ^ \\\\w ? $ | ? * \\ ``", "r3 = r2 matcher r1", "$ z0 = r3 match", "if $ z0 == 0 goto label1", "$ r6 = r3 group 2", "$ r7 = java util optional of nullable $ r6", "$ r8 = $ r7 or else \\ `` \\ ``", "r4 = java lang string $ r8", "$ r9 = r3 group 3", "$ r10 = java util optional of nullable $ r9", "$ r11 = $ r10 or else \\ `` \\ ``", "r5 = java lang string $ r11", "$ r12 = new java lang string builder", "specialinvoke $ r12 < init >", "$ r13 = $ r12 append \\ `` \\ ``", "$ r14 = r3 group 1", "$ r15 = $ r14 to lower case", "$ r16 = $ r13 append $ r15", "$ r17 = $ r16 append r4", "$ r18 = $ r17 append r5", "$ r19 = $ r18 to string", "return $ r19", "if $ z0 == 0 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io quarkus hibernate orm panache runtime jpa operation implementation injection miss", "throw $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = io quarkus hibernate orm panache runtime jpa operation implementation injection miss", "throw $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io quarkus hibernate orm panache runtime jpa operation implementation injection miss", "throw $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = new io quarkus panache common page", "specialinvoke $ r0 < init > i0", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = io quarkus panache common sort $ direction descend", "r3 = io quarkus panache common sort r0", "$ r2 = r3 direction $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = io quarkus panache common sort r0", "$ r4 = r7 column", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = io quarkus panache common sort $ column $ r5", "io quarkus panache common sort $ column access $ 002 r3 r1", "goto label1", "if $ z0 == 0 goto label2", "label r8 = io quarkus panache common sort r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = io quarkus panache common sort r0", "$ r4 = r6 column", "r5 = new io quarkus panache common sort $ column", "r7 = io quarkus panache common sort r0", "specialinvoke r5 < init > r7 r1 r2", "$ r4 add r5", "r8 = io quarkus panache common sort r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = r0 user", "r2 = io quarkus vertx http runtime security quarkus http user $ r4", "if r2 == null goto label1", "$ r14 = r2 get security identity", "return $ r14", "if r2 == null goto label1", "label $ r5 = r0 get \\ `` io quarkus vertx http deferred-identity\\ ``", "r3 = io smallrye mutiny uni $ r5", "if r3 == null goto label2", "$ r11 = r3 await", "$ r12 = $ r11 indefinitely", "$ r13 = io quarkus security identity security identity $ r12", "return $ r13", "if r3 == null goto label2", "label if r1 == null goto label3", "$ r6 = io quarkus security identity request anonymous authentication request instance", "r15 = io quarkus security identity request authentication request $ r6", "$ r7 = r1 authenticate r15", "$ r8 = $ r7 await", "$ r9 = $ r8 indefinitely", "$ r10 = io quarkus security identity security identity $ r9", "return $ r10", "label if r1 == null goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` reactive stream subscriber\\ ``", "$ z0 = r0 instanceof org reactivestreams flow adapter $ reactive to flow subscriber", "if $ z0 == 0 goto label1", "$ r3 = org reactivestreams flow adapter $ reactive to flow subscriber r0", "r4 = $ r3 flow", "goto label3", "label r6 = java util concurrent flow $ subscriber r4", "return r6", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof java util concurrent flow $ subscriber", "if $ z1 == 0 goto label2", "r4 = java util concurrent flow $ subscriber r0", "if $ z1 == 0 goto label2", "label r5 = new org reactivestreams flow adapter $ flow to reactive subscriber", "specialinvoke r5 < init > r0", "r4 = r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = new reactor core publisher mono ignore element", "r4 = reactor core publisher mono r0", "specialinvoke r3 < init > r4", "r5 = reactor core publisher mono r3", "$ r2 = reactor core publisher mono on assembly r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r1 get class", "$ r4 = mono $ be instance__32 bootstrap $ r1", "r6 = reactor core publisher mono r0", "$ r5 = r6 on error continue $ r4 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = reactor core scheduler scheduler parallel", "r4 = reactor core publisher mono r0", "$ r3 = r4 take r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new reactor core publisher operator $ scalar subscription", "specialinvoke r3 < init > r0 r1", "r4 = org reactivestreams subscription r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1 \\ `` on next\\ ``", "r4 = reactor core publisher parallel flux r0", "$ r3 = reactor core publisher parallel flux do on signal r4 r1 null null null null null null null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ i0 = reactor util concurrent queue small_buffer_size", "r2 = reactor core publisher parallel flux r0", "$ r1 = r2 sequential $ i0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = reactor core publisher queue drain subscriber r0", "$ r1 = r2 wip", "$ i1 = $ r1 add and get i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 - 1", "$ i2 = java lang integer number of lead zeros $ i1", "$ i3 = 32 - $ i2", "$ i4 = 1 < < $ i3", "return $ i4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init > \\ `` not yet implemented\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = byte buf mono $ retain__1 bootstrap $", "r4 = reactor netty byte buf mono r0", "$ r2 = r4 do on next $ r1", "$ r3 = reactor netty byte buf mono maybe fuse $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = reactor netty channel channel operation outbound_close", "$ r2 = $ r1 get r0", "$ r3 = reactor core publisher operator cancel subscription", "if $ r2 ! = $ r3 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 ! = $ r3 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r6 = reactor netty tcp tcp client r0", "$ r2 = r6 duplicate", "r1 = reactor netty tcp tcp client $ r2", "$ r3 = r1 configuration", "$ r4 = reactor netty tcp tcp client config $ r3", "$ r5 = reactor netty tcp ssl provider default client provider", "$ r4 ssl provider = $ r5", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` inet socket address\\ ``", "$ z0 = r0 be unresolved", "if $ z0 ! = 0 goto label1", "return r0", "if $ z0 ! = 0 goto label1", "label $ r3 = r0 get host string", "$ i0 = r0 get port", "r1 = reactor netty transport address utils create for ip string $ r3 $ i0", "if r1 == null goto label2", "return r1", "if r1 == null goto label2", "label return r0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r9 = reactor netty transport log reactor netty log handler r0", "$ r2 = r9 byte buf format", "$ r1 = reactor netty transport log advanced byte buf format simple", "if $ r2 ! = $ r1 goto label1", "$ r7 = io netty handler log byte buf format simple", "return $ r7", "if $ r2 ! = $ r1 goto label1", "label r10 = reactor netty transport log reactor netty log handler r0", "$ r4 = r10 byte buf format", "$ r3 = reactor netty transport log advanced byte buf format hex_dump", "if $ r4 ! = $ r3 goto label2", "$ r6 = io netty handler log byte buf format hex_dump", "return $ r6", "if $ r4 ! = $ r3 goto label2", "label r8 = new java lang unsupported operation exception", "specialinvoke r8 < init > \\ `` reactor netty log handler isn\\'t use the classic byte buf format \\ ``", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = reactor netty transport name resolver provider r0", "$ r1 = r2 query timeout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = reactor netty http client http client config r0", "$ z0 = r1 accept gzip", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = reactor netty http client http client config r0", "$ r1 = r2 redirect request consumer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = new reactor netty http cooky", "$ r3 = io netty handler codec http http header name set_cookie", "r5 = java lang char sequence $ r3", "r6 = io netty handler codec http cookie cookie decoder r1", "specialinvoke r4 < init > r0 r5 1 r6", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = reactor netty http http decoder spec r0", "$ i0 = r1 max chunk size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = reactor netty http http operation http_state", "$ z0 = $ r1 compare and set r0 1 2", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = reactor netty http server http server config r0", "$ r1 = r2 idle timeout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "io restassured internal common assertion assert parameter not null r1 \\ `` first additional field name\\ ``", "io restassured internal common assertion assert parameter not null r2 \\ `` second additional field name\\ ``", "r17 = new java util array list", "r19 = io restassured authentication form auth config r0", "$ r8 = r19 additional input field names", "specialinvoke r17 < init > $ r8", "r17 add r1", "r17 add r2", "if r3 == null goto label1", "$ i0 = lengthof r3", "if $ i0 < = 0 goto label1", "$ r9 = java util array a list r3", "r17 add all $ r9", "label r18 = new io restassured authentication form auth config", "r20 = io restassured authentication form auth config r0", "$ r11 = r20 form action", "r21 = io restassured authentication form auth config r0", "$ r12 = r21 user input tag name", "r22 = io restassured authentication form auth config r0", "$ r13 = r22 password input tag name", "r23 = io restassured authentication form auth config r0", "$ r14 = r23 log detail", "r24 = io restassured authentication form auth config r0", "$ r15 = r24 log config", "r25 = io restassured authentication form auth config r0", "$ r16 = r25 csrf field name", "r26 = io restassured authentication form auth config r0", "$ z3 = r26 auto detect csrf field name", "r27 = io restassured authentication form auth config r0", "$ z4 = r27 send csrf token a form param", "specialinvoke r18 < init > $ r11 $ r12 $ r13 $ r14 $ r15 $ r16 $ z3 $ z4 r17", "return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r2 = io restassured builder multi part spec builder r0", "$ r1 = r2 file name null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io restassured builder request spec builder r0", "$ r2 = r4 spec", "$ r2 cookie r1", "r5 = io restassured builder request spec builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io restassured builder request spec builder r0", "$ r4 = r6 spec", "$ r4 multi part r1 r2 r3", "r7 = io restassured builder request spec builder r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io restassured builder request spec builder r0", "$ r2 = r3 spec", "$ r2 set authentication scheme r1", "r4 = io restassured builder request spec builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io restassured builder request spec builder r0", "$ r1 = r3 spec", "$ r1 port i0", "r4 = io restassured builder request spec builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r34 = io restassured builder response builder r0", "$ z0 = specialinvoke r34 be rest assure response r1", "if $ z0 == 0 goto label1", "r35 = io restassured builder response builder r0", "r2 = specialinvoke r35 ra response r1", "r36 = io restassured builder response builder r0", "$ r15 = r36 rest assure response", "$ r16 = r2 get content", "$ r15 set content $ r16", "r37 = io restassured builder response builder r0", "$ r17 = r37 rest assure response", "$ z1 = r2 get have expectation", "$ r17 set have expectation $ z1", "r38 = io restassured builder response builder r0", "$ r18 = r38 rest assure response", "$ r19 = r2 get default content type", "$ r18 set default content type $ r19", "r39 = io restassured builder response builder r0", "$ r20 = r39 rest assure response", "$ r21 = r2 get decoder config", "$ r20 set decoder config $ r21", "r40 = io restassured builder response builder r0", "$ r22 = r40 rest assure response", "$ r23 = r2 get session id name", "$ r22 set session id name $ r23", "r41 = io restassured builder response builder r0", "$ r24 = r41 rest assure response", "$ r25 = r2 get connection manager", "$ r24 set connection manager $ r25", "r42 = io restassured builder response builder r0", "$ r26 = r42 rest assure response", "$ r27 = r2 get config", "$ r26 set config $ r27", "r43 = io restassured builder response builder r0", "$ r28 = r43 rest assure response", "$ r29 = r2 get rpr", "$ r28 set rpr $ r29", "r44 = io restassured builder response builder r0", "$ r30 = r44 rest assure response", "$ r31 = r2 get log repository", "$ r30 set log repository $ r31", "r45 = io restassured builder response builder r0", "$ r32 = r45 rest assure response", "$ r33 = r2 get filter context property", "$ r32 set filter context property $ r33", "goto label2", "label r47 = io restassured builder response builder r0", "$ r5 = r47 rest assure response", "$ r6 = r1 get content type", "$ r5 set content type $ r6", "r48 = io restassured builder response builder r0", "$ r7 = r48 rest assure response", "$ r8 = r1 get detailed cooky", "$ r7 set cooky $ r8", "r49 = io restassured builder response builder r0", "$ r9 = r49 rest assure response", "$ r10 = r1 get header", "$ r9 set response header $ r10", "r50 = io restassured builder response builder r0", "$ r11 = r50 rest assure response", "$ i0 = r1 get status code", "$ r12 = java lang integer value of $ i0", "$ r11 set status code $ r12", "r51 = io restassured builder response builder r0", "$ r13 = r51 rest assure response", "$ r14 = r1 get status line", "$ r13 set status line $ r14", "r52 = io restassured builder response builder r0", "return r52", "if $ z0 == 0 goto label1", "label r46 = io restassured builder response builder r0", "$ r3 = r46 rest assure response", "$ r4 = r1 a input stream", "$ r3 set content $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [], [72], [73], [74], [75], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "io restassured internal common assertion assert parameter not null r1 \\ `` status line\\ ``", "r4 = io restassured builder response builder r0", "$ r3 = r4 rest assure response", "$ r3 set status line r1", "r5 = io restassured builder response builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io restassured builder response builder r0", "$ r1 = r3 rest assure response", "$ r2 = java lang integer value of i0", "$ r1 set status code $ r2", "r4 = io restassured builder response builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io restassured builder response spec builder r0", "$ r1 = r3 spec", "$ r1 status code i0", "r4 = io restassured builder response spec builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io restassured builder response spec builder r0", "$ r3 = r5 spec", "$ r3 header r1 r2", "r6 = io restassured builder response spec builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new io restassured config encoder config", "r7 = io restassured config encoder config r0", "$ r5 = r7 default query parameter charset", "r8 = io restassured config encoder config r0", "$ z0 = r8 should append default content charset to content type if undefined", "r9 = io restassured config encoder config r0", "$ r4 = r9 content encoders", "r10 = io restassured config encoder config r0", "$ r3 = r10 content type to default charset", "specialinvoke r6 < init > r1 $ r5 $ z0 $ r4 $ r3 1", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new io restassured config encoder config", "r7 = io restassured config encoder config r0", "$ r5 = r7 default content charset", "r8 = io restassured config encoder config r0", "$ z0 = r8 should append default content charset to content type if undefined", "r9 = io restassured config encoder config r0", "$ r4 = r9 content encoders", "r10 = io restassured config encoder config r0", "$ r3 = r10 content type to default charset", "specialinvoke r6 < init > $ r5 r1 $ z0 $ r4 $ r3 1", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "io restassured internal common assertion assert parameter not null r1 \\ `` content- type to encode\\ ``", "io restassured internal common assertion assert parameter not null r2 class \\ `` lio restassured http content type \\ ``", "r13 = new java util hash map", "r15 = io restassured config encoder config r0", "$ r7 = r15 content encoders", "specialinvoke r13 < init > $ r7", "r13 put r1 r2", "r14 = new io restassured config encoder config", "r16 = io restassured config encoder config r0", "$ r12 = r16 default content charset", "r17 = io restassured config encoder config r0", "$ r11 = r17 default query parameter charset", "r18 = io restassured config encoder config r0", "$ z0 = r18 should append default content charset to content type if undefined", "r19 = io restassured config encoder config r0", "$ r10 = r19 content type to default charset", "specialinvoke r14 < init > $ r12 $ r11 $ z0 r13 $ r10 1", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new io restassured config json config", "specialinvoke $ r2 < init > r1 1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new io restassured config multi part config", "r8 = io restassured config multi part config r0", "$ r6 = r8 default control name", "r9 = io restassured config multi part config r0", "$ r5 = r9 default file name", "r10 = io restassured config multi part config r0", "$ r4 = r10 default boundary", "r11 = io restassured config multi part config r0", "$ r3 = r11 default charset", "specialinvoke r7 < init > $ r6 $ r5 r1 $ r4 $ r3 1", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "io restassured internal common assertion assert parameter not null r1 \\ `` log config\\ ``", "r36 = new io restassured config rest assure config", "r37 = io restassured config rest assure config r0", "$ r4 = specialinvoke r37 conf class \\ `` lio restassured config redirect config \\ ``", "$ r5 = io restassured config redirect config $ r4", "r38 = io restassured config rest assure config r0", "$ r6 = specialinvoke r38 conf class \\ `` lio restassured config http client config \\ ``", "$ r7 = io restassured config http client config $ r6", "r39 = io restassured config rest assure config r0", "$ r8 = specialinvoke r39 conf class \\ `` lio restassured config encoder config \\ ``", "$ r9 = io restassured config encoder config $ r8", "r40 = io restassured config rest assure config r0", "$ r10 = specialinvoke r40 conf class \\ `` lio restassured config decoder config \\ ``", "$ r11 = io restassured config decoder config $ r10", "r41 = io restassured config rest assure config r0", "$ r12 = specialinvoke r41 conf class \\ `` lio restassured config session config \\ ``", "$ r13 = io restassured config session config $ r12", "r42 = io restassured config rest assure config r0", "$ r14 = specialinvoke r42 conf class \\ `` lio restassured config object mapper config \\ ``", "$ r15 = io restassured config object mapper config $ r14", "r43 = io restassured config rest assure config r0", "$ r16 = specialinvoke r43 conf class \\ `` lio restassured config connection config \\ ``", "$ r17 = io restassured config connection config $ r16", "r44 = io restassured config rest assure config r0", "$ r18 = specialinvoke r44 conf class \\ `` lio restassured config json config \\ ``", "$ r19 = io restassured config json config $ r18", "r45 = io restassured config rest assure config r0", "$ r20 = specialinvoke r45 conf class \\ `` lio restassured config xml config \\ ``", "$ r21 = io restassured config xml config $ r20", "r46 = io restassured config rest assure config r0", "$ r22 = specialinvoke r46 conf class \\ `` lio restassured config s s l config \\ ``", "$ r23 = io restassured config s s l config $ r22", "r47 = io restassured config rest assure config r0", "$ r24 = specialinvoke r47 conf class \\ `` lio restassured config matcher config \\ ``", "$ r25 = io restassured config matcher config $ r24", "r48 = io restassured config rest assure config r0", "$ r26 = specialinvoke r48 conf class \\ `` lio restassured config header config \\ ``", "$ r27 = io restassured config header config $ r26", "r49 = io restassured config rest assure config r0", "$ r28 = specialinvoke r49 conf class \\ `` lio restassured config multi part config \\ ``", "$ r29 = io restassured config multi part config $ r28", "r50 = io restassured config rest assure config r0", "$ r30 = specialinvoke r50 conf class \\ `` lio restassured config param config \\ ``", "$ r31 = io restassured config param config $ r30", "r51 = io restassured config rest assure config r0", "$ r32 = specialinvoke r51 conf class \\ `` lio restassured config o auth config \\ ``", "$ r33 = io restassured config o auth config $ r32", "r52 = io restassured config rest assure config r0", "$ r34 = specialinvoke r52 conf class \\ `` lio restassured config failure config \\ ``", "$ r35 = io restassured config failure config $ r34", "specialinvoke r36 < init > $ r5 $ r7 r1 $ r9 $ r11 $ r13 $ r15 $ r17 $ r19 $ r21 $ r23 $ r25 $ r27 $ r29 $ r31 $ r33 $ r35", "return r36"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray java lang object [ 0 ]", "org apache common lang3 validate not empty r1 \\ `` password can not be empty\\", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r5 = java lang system get property \\ `` user home\\ ``", "$ r6 = r11 append $ r5", "$ c0 = java io file separator char", "$ r7 = $ r6 append $ c0", "$ r8 = $ r7 append \\ `` keystore\\ ``", "$ r9 = $ r8 to string", "r12 = io restassured config s s l config r0", "$ r10 = r12 key store $ r9 r1", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "r4 = @ parameter4", "$ r5 = io restassured internal http u r i builder convert to u r i r1", "r7 = io restassured internal http h t t p builder r0", "$ r6 = r7 do request $ r5 r2 r3 z0 r4", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = io restassured internal http h t t p builder r0", "$ r1 = r3 client", "$ r2 = $ r1 get connection manager", "$ r2 shutdown", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io restassured internal http u r i builder r0", "$ r1 = r3 base", "$ r2 = $ r1 to u r l", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = class \\ `` ljava net uri \\ `` goto label1", "r12 = io restassured internal http u r i builder r0", "$ r9 = r12 to u r i", "return $ r9", "if r1 ! = class \\ `` ljava net uri \\ `` goto label1", "label if r1 ! = class \\ `` ljava net url \\ `` goto label2", "r13 = io restassured internal http u r i builder r0", "$ r8 = r13 to u r l", "return $ r8", "label if r1 ! = class \\ `` ljava net url \\ `` goto label2", "label if r1 ! = class \\ `` ljava lang string \\ `` goto label3", "r14 = io restassured internal http u r i builder r0", "$ r7 = r14 to string", "return $ r7", "label if r1 ! = class \\ `` ljava lang string \\ `` goto label3", "label r11 = new java lang class cast exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r4 = r10 append \\ `` can not cast instance of u r i builder to class \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "specialinvoke r11 < init > $ r6", "throw r11"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "io restassured internal common assertion assert parameter not null r1 \\ `` entity name\\ ``", "r11 = new java util array list", "specialinvoke r11 < init >", "r12 = io restassured internal multi value entity r0", "$ r7 = r12 entity", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r9 = r3 next", "r4 = io restassured internal name and value $ r9", "$ r10 = r4 get name", "$ z1 = $ r10 equal ignore case r1", "if $ z1 == 0 goto label2", "r11 add r4", "label goto label1", "if $ z0 == 0 goto label3", "label $ r8 = java util collection unmodifiable list r11", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache common lang3 string utils be blank r0", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label $ r1 = new java net uri", "specialinvoke $ r1 < init > r0", "$ r2 = $ r1 get scheme", "if $ r2 == null goto label2", "$ r3 = $ r1 get host", "if $ r3 == null goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ r3 == null goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org hamcrest matcher equal to r1", "r4 = io restassured matcher detailed cookie matcher r0", "$ r3 = r4 same site $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io restassured internal matcher xml xml dtd matcher match dtd r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = io restassured rest assure create test specification", "$ r1 = $ r0 get request specification", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r9 = r1 get header", "r3 = $ r9 a map", "$ r10 = r3 entry set", "r4 = $ r10 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label4", "$ r11 = r4 next", "r5 = java util map $ entry $ r11", "$ r12 = r5 get value", "r6 = java util list $ r12", "r7 = r6 iterator", "label $ z1 = r7 have next", "if $ z1 == 0 goto label3", "$ r13 = r7 next", "r8 = java lang string $ r13", "$ r14 = r5 get key", "$ r15 = java lang string $ r14", "r2 add request property $ r15 r8", "goto label2", "if $ z1 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["$ i0 = org jboss resteasy util port provider get port", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = org jboss resteasy core providerfactory resteasy provider factory impl r0", "$ r1 = r3 provider instance", "r4 = java util set $ r1", "$ r2 = java util collection unmodifiable set r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org jboss resteasy mock mock http request r0", "$ r3 = r8 decode form parameter", "if $ r3 ! = null goto label1", "r7 = new org jboss resteasy specimpl multivalued map impl", "specialinvoke r7 < init >", "r9 = org jboss resteasy mock mock http request r0", "r10 = javax w r core multivalued map r7", "r9 decode form parameter = r10", "r11 = org jboss resteasy mock mock http request r0", "r11 content type \\ `` application x-www-form-urlencoded\\ ``", "label r12 = org jboss resteasy mock mock http request r0", "$ r4 = r12 decode form parameter", "$ r4 add r1 r2", "r13 = org jboss resteasy mock mock http request r0", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["$ r0 = org jboss resteasy spi resteasy provider factory instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util hash map", "specialinvoke $ r2 < init >", "$ r3 = r0 get declare class", "r12 = $ r3 get annotation", "i1 = lengthof r12", "i2 = 0", "label if i2 > = i1 goto label2", "r13 = r12 [ i2 ]", "$ r10 = r13 get class", "$ r2 put $ r10 r13", "i2 = i2 + 1", "goto label1", "label if i2 > = i1 goto label2", "label r14 = r0 get annotation", "i3 = lengthof r14", "i4 = 0", "label if i4 > = i3 goto label4", "r15 = r14 [ i4 ]", "$ r8 = r15 get class", "$ r2 put $ r8 r15", "i4 = i4 + 1", "goto label3", "label if i4 > = i3 goto label4", "label $ r4 = $ r2 value", "$ i0 = $ r2 size", "$ r5 = newarray java lang annotation annotation [ $ i0 ]", "$ r6 = $ r4 to array $ r5", "$ r7 = java lang annotation annotation [ ] $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r3 = org mozilla javascript ast array literal r0", "$ r1 = r3 element", "if $ r1 == null goto label1", "r4 = org mozilla javascript ast array literal r0", "$ r2 = r4 element", "goto label2", "label return $ r2", "if $ r1 == null goto label1", "label $ r2 = org mozilla javascript ast array literal no_elems"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org mozilla javascript ast array literal r0", "r1 destructuring length = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast array literal r0", "$ i0 = r1 skip count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast comment r0", "r2 comment type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast comment r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast continue statement r0", "$ r1 = r2 target", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast element get r0", "r2 assert not null r1", "r3 = org mozilla javascript ast element get r0", "r3 target = r1", "r1 set parent r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast expression statement r0", "r1 type = 134", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast for in loop r0", "$ r1 = r2 iterate object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org mozilla javascript ast for in loop r0", "r1 be for each = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast for in loop r0", "$ i0 = r1 in position", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast function node r0", "$ r1 = r2 function name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast function node r0", "r2 function name = r1", "if r1 == null goto label1", "r3 = org mozilla javascript ast ast node r0", "r1 set parent r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org mozilla javascript ast function node r0", "r1 be expression closure = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast if statement r0", "r2 assert not null r1", "r3 = org mozilla javascript ast if statement r0", "r3 condition = r1", "r1 set parent r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast if statement r0", "$ i0 = r1 lp", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast new expression r0", "r2 initializer = r1", "if r1 == null goto label1", "r3 = org mozilla javascript ast ast node r0", "r1 set parent r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast object property r0", "r1 type = 152", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast script node r0", "r2 source name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org mozilla javascript ast script node r0", "$ i0 = r1 encode source end", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast let node r0", "r2 assert not null r1", "r3 = org mozilla javascript ast let node r0", "r3 variable = r1", "r4 = org mozilla javascript ast ast node r0", "r1 set parent r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 == 122 goto label1", "if i0 == 154 goto label1", "if i0 == 153 goto label1", "$ r1 = new java lang illegal argument exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` invalid decl type \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "specialinvoke $ r1 < init > $ r5", "throw $ r1", "if i0 == 153 goto label1", "label $ r6 = specialinvoke r0 set type i0", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast with statement r0", "r2 assert not null r1", "r3 = org mozilla javascript ast with statement r0", "r3 expression = r1", "r1 set parent r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript ast with statement r0", "r2 assert not null r1", "r3 = org mozilla javascript ast with statement r0", "r3 statement = r1", "r1 set parent r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org mozilla javascript ast xml literal r0", "r6 assert not null r1", "r7 = org mozilla javascript ast xml literal r0", "$ r4 = r7 fragment", "$ r4 clear", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = org mozilla javascript ast xml fragment $ r5", "r8 = org mozilla javascript ast xml literal r0", "r8 add fragment r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org mozilla javascript ast xml string r0", "$ r1 = r2 xml", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new org mozilla javascript commonjs module require", "r8 = org mozilla javascript commonjs module require builder r0", "$ r6 = r8 module script provider", "r9 = org mozilla javascript commonjs module require builder r0", "$ r5 = r9 pre exec", "r10 = org mozilla javascript commonjs module require builder r0", "$ r4 = r10 post exec", "r11 = org mozilla javascript commonjs module require builder r0", "$ z0 = r11 sandboxed", "specialinvoke r7 < init > r1 r2 $ r6 $ r5 $ r4 $ z0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org mozilla javascript compiler environs r0", "r1 allow sharp comment = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = org mozilla javascript rhino security manager r0", "r1 = r6 get class context", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label5", "r3 = r1 [ i1 ]", "if r3 == class \\ `` lorg mozilla javascript interpret function \\ `` goto label2", "$ r5 = class \\ `` lorg mozilla javascript native function \\ ``", "$ z1 = $ r5 be assignable from r3", "if $ z1 ! = 0 goto label3", "label $ r4 = class \\ `` lorg mozilla javascript policy security controller $ secure caller \\ ``", "$ z0 = $ r4 be assignable from r3", "if $ z0 == 0 goto label4", "label return r3", "if $ z0 == 0 goto label4", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label5", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "z0 = @ parameter2", "r8 = org mozilla javascript scriptable object r0", "$ r3 = specialinvoke r8 get slot r1 i0 1", "r2 = org mozilla javascript scriptable object unwrap slot $ r3", "$ z1 = r2 instanceof org mozilla javascript scriptable object $ getter slot", "if $ z1 == 0 goto label2", "if z0 == 0 goto label1", "$ r6 = org mozilla javascript scriptable object $ getter slot r2", "$ r7 = $ r6 setter", "if $ r7 == null goto label1", "return 1", "if $ r7 == null goto label1", "label if z0 ! = 0 goto label2", "$ r4 = org mozilla javascript scriptable object $ getter slot r2", "$ r5 = $ r4 getter", "if $ r5 == null goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript scriptable object r0", "r2 parent scope object = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "r5 = org mozilla javascript scriptable object get property r0 i0", "$ r2 = org mozilla javascript scriptable not_found", "if r5 ! = $ r2 goto label1", "r5 = null", "label $ r3 = org mozilla javascript context j to java r5 r1", "$ r4 = r1 cast $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mozilla javascript tool debugger dim r0", "r2 scope provider = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org mozilla javascript tool debugger dim r0", "$ r2 = r5 url to source info", "$ r3 = $ r2 get r1", "$ r4 = org mozilla javascript tool debugger dim $ source info $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r12 = new org mozilla javascript tool debugger main", "specialinvoke r12 < init > \\ `` rhino java script debugger\\ ``", "r12 do break", "r13 = new org mozilla javascript tool debugger main $ i proxy", "specialinvoke r13 < init > 1", "r14 = java lang runnable r13", "r12 set exit action r14", "$ r5 = r12 get in", "java lang system set in $ r5", "$ r6 = r12 get out", "java lang system set out $ r6", "$ r7 = r12 get err", "java lang system set err $ r7", "r2 = org mozilla javascript tool shell main get global", "$ r8 = r12 get in", "r2 set in $ r8", "$ r9 = r12 get out", "r2 set out $ r9", "$ r10 = r12 get err", "r2 set err $ r10", "$ r11 = org mozilla javascript tool shell main shell context factory", "r15 = org mozilla javascript context factory $ r11", "r12 attach to r15", "r16 = org mozilla javascript scriptable r2", "r12 set scope r16", "r12 pack", "r12 set size 600 460", "r12 set visible 1", "org mozilla javascript tool shell main exec r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r8 = org mozilla javascript tool debugger swing gui r0", "r7 = r8 awt event queue", "if r7 ! = null goto label1", "$ r6 = java awt toolkit get default toolkit", "r7 = $ r6 get system event queue", "r9 = org mozilla javascript tool debugger swing gui r0", "r9 awt event queue = r7", "label r1 = r7 get next event", "$ z0 = r1 instanceof java awt active event", "if $ z0 == 0 goto label2", "$ r5 = java awt active event r1", "$ r5 dispatch", "goto label4", "label return", "if $ z0 == 0 goto label2", "label r2 = r1 get source", "$ z1 = r2 instanceof java awt component", "if $ z1 == 0 goto label3", "r3 = java awt component r2", "r3 dispatch event r1", "if $ z1 == 0 goto label3", "label $ z2 = r2 instanceof java awt menu component", "if $ z2 == 0 goto label4", "$ r4 = java awt menu component r2", "$ r4 dispatch event r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get action command", "b6 = -1", "$ z0 = r2 equal \\ `` cut\\ ``", "if $ z0 ! = 0 goto label01", "$ z2 = r2 equal \\ `` copy\\ ``", "if $ z2 ! = 0 goto label01", "$ z3 = r2 equal \\ `` paste\\ ``", "if $ z3 == 0 goto label03", "label r62 = org mozilla javascript tool debugger swing gui r0", "r37 = specialinvoke r62 get select frame", "if r37 == null goto label02", "$ z1 = r37 instanceof java awt event action listener", "if $ z1 == 0 goto label02", "$ r6 = java awt event action listener r37", "$ r6 action perform r1", "label goto label44", "label if b6 == -1 goto label45", "r92 = org mozilla javascript tool debugger swing gui r0", "specialinvoke r92 update enable 0", "r93 = org mozilla javascript tool debugger swing gui r0", "$ r5 = r93 dim", "$ r5 set return value b6", "label return", "if $ z3 == 0 goto label03", "label $ z4 = r2 equal \\ `` step over\\ ``", "if $ z4 == 0 goto label04", "b6 = 0", "goto label44", "if $ z4 == 0 goto label04", "label $ z5 = r2 equal \\ `` step into\\ ``", "if $ z5 == 0 goto label05", "b6 = 1", "if $ z5 == 0 goto label05", "label $ z6 = r2 equal \\ `` step out\\ ``", "if $ z6 == 0 goto label06", "b6 = 2", "if $ z6 == 0 goto label06", "label $ z7 = r2 equal \\ `` go\\ ``", "if $ z7 == 0 goto label07", "b6 = 3", "if $ z7 == 0 goto label07", "label $ z8 = r2 equal \\ `` break\\ ``", "if $ z8 == 0 goto label08", "r63 = org mozilla javascript tool debugger swing gui r0", "$ r33 = r63 dim", "$ r33 set break", "if $ z8 == 0 goto label08", "label $ z9 = r2 equal \\ `` exit\\ ``", "if $ z9 == 0 goto label09", "r64 = org mozilla javascript tool debugger swing gui r0", "specialinvoke r64 exit", "if $ z9 == 0 goto label09", "label $ z10 = r2 equal \\ `` open\\ ``", "if $ z10 == 0 goto label11", "r65 = org mozilla javascript tool debugger swing gui r0", "r38 = specialinvoke r65 choose file \\ `` select a file to compile\\ ``", "if r38 == null goto label10", "r66 = org mozilla javascript tool debugger swing gui r0", "r39 = specialinvoke r66 read file r38", "if r39 == null goto label10", "r56 = new org mozilla javascript tool debugger run proxy", "r67 = org mozilla javascript tool debugger swing gui r0", "specialinvoke r56 < init > r67 1", "r56 file name = r38", "r56 text = r39", "r57 = new java lang thread", "r68 = java lang runnable r56", "specialinvoke r57 < init > r68", "r57 start", "label goto label44", "if $ z10 == 0 goto label11", "label $ z11 = r2 equal \\ `` load\\ ``", "if $ z11 == 0 goto label13", "r69 = org mozilla javascript tool debugger swing gui r0", "r41 = specialinvoke r69 choose file \\ `` select a file to execute\\ ``", "if r41 == null goto label12", "r70 = org mozilla javascript tool debugger swing gui r0", "r42 = specialinvoke r70 read file r41", "if r42 == null goto label12", "r58 = new org mozilla javascript tool debugger run proxy", "r71 = org mozilla javascript tool debugger swing gui r0", "specialinvoke r58 < init > r71 2", "r58 file name = r41", "r58 text = r42", "r59 = new java lang thread", "r72 = java lang runnable r58", "specialinvoke r59 < init > r72", "r59 start", "label goto label44", "if $ z11 == 0 goto label13", "label $ z12 = r2 equal \\ `` more window \\ ``", "if $ z12 == 0 goto label14", "r60 = new org mozilla javascript tool debugger more window", "r73 = org mozilla javascript tool debugger swing gui r0", "$ r27 = r73 file windows", "r74 = org mozilla javascript tool debugger swing gui r0", "specialinvoke r60 < init > r74 $ r27 \\ `` window\\", "r60 show dialog r0", "if $ z12 == 0 goto label14", "label $ z13 = r2 equal \\ `` console\\ ``", "if $ z13 == 0 goto label16", "r75 = org mozilla javascript tool debugger swing gui r0", "$ r16 = r75 console", "$ z21 = $ r16 be icon", "if $ z21 == 0 goto label15", "r76 = org mozilla javascript tool debugger swing gui r0", "$ r23 = r76 desk", "$ r24 = $ r23 get desktop manager", "r77 = org mozilla javascript tool debugger swing gui r0", "$ r25 = r77 console", "r78 = javax swing j internal frame $ r25", "$ r24 deiconify frame r78", "label r79 = org mozilla javascript tool debugger swing gui r0", "$ r17 = r79 console", "$ r17 show", "r80 = org mozilla javascript tool debugger swing gui r0", "$ r18 = r80 desk", "$ r19 = $ r18 get desktop manager", "r81 = org mozilla javascript tool debugger swing gui r0", "$ r20 = r81 console", "r82 = javax swing j internal frame $ r20", "$ r19 activate frame r82", "r83 = org mozilla javascript tool debugger swing gui r0", "$ r21 = r83 console", "$ r22 = $ r21 console text area", "$ r22 request focus", "if $ z13 == 0 goto label16", "label $ z14 = r2 equal \\ `` cut\\ ``", "if $ z14 == 0 goto label17", "label $ z15 = r2 equal \\ `` copy\\ ``", "if $ z15 == 0 goto label18", "label $ z16 = r2 equal \\ `` paste\\ ``", "if $ z16 == 0 goto label19", "label $ z17 = r2 equal \\ `` go to function \\ ``", "if $ z17 == 0 goto label20", "r61 = new org mozilla javascript tool debugger find function", "r84 = org mozilla javascript tool debugger swing gui r0", "specialinvoke r61 < init > r84 \\ `` go to function\\", "r61 show dialog r0", "if $ z17 == 0 goto label20", "label $ z18 = r2 equal \\ `` tile\\ ``", "if $ z18 == 0 goto label31", "r85 = org mozilla javascript tool debugger swing gui r0", "$ r11 = r85 desk", "r46 = $ r11 get all frame", "i7 = lengthof r46", "$ d0 = double i7", "$ d1 = java lang math sqrt $ d0", "$ i1 = int $ d1", "i8 = $ i1", "i9 = $ i1", "$ i2 = $ i1 * $ i1", "if $ i2 > = i7 goto label21", "i8 = $ i1 + 1", "$ i5 = $ i1 * i8", "if $ i5 > = i7 goto label21", "i9 = $ i1 + 1", "label r86 = org mozilla javascript tool debugger swing gui r0", "$ r47 = r86 desk", "r48 = $ r47 get size", "$ i10 = r48 width", "i11 = $ i10 i8", "$ i12 = r48 height", "i13 = $ i12 i9", "i14 = 0", "i15 = 0", "i16 = 0", "label if i16 > = i9 goto label30", "i17 = 0", "label if i17 > = i8 goto label29", "$ i3 = i16 * i8", "i0 = $ i3 + i17", "$ i4 = lengthof r46", "if i0 < $ i4 goto label24", "goto label29", "label i15 = i15 + i13", "if i0 < $ i4 goto label24", "label r3 = r46 [ i0 ]", "label r3 set icon 0", "r3 set maximum 0", "label goto label28", "label r87 = org mozilla javascript tool debugger swing gui r0", "$ r12 = r87 desk", "$ r13 = $ r12 get desktop manager", "$ r13 set bound for frame r3 i14 i15 i11 i13", "i14 = i14 + i11", "i17 = i17 + 1", "goto label23", "label if i16 > = i9 goto label30", "label goto label44", "if $ z18 == 0 goto label31", "label $ z19 = r2 equal \\ `` cascade\\ ``", "if $ z19 == 0 goto label39", "r88 = org mozilla javascript tool debugger swing gui r0", "$ r7 = r88 desk", "r49 = $ r7 get all frame", "i18 = lengthof r49", "i19 = 0", "i20 = 0", "r89 = org mozilla javascript tool debugger swing gui r0", "$ r8 = r89 desk", "i21 = $ r8 get height", "i22 = i21 i18", "if i22 < = 30 goto label32", "i22 = 30", "label i23 = i18 - 1", "label if i23 < 0 goto label38", "r50 = r49 [ i23 ]", "label r50 set icon 0", "r50 set maximum 0", "label goto label37", "label r52 = r50 get preferred size", "i24 = r52 width", "i25 = r52 height", "r90 = org mozilla javascript tool debugger swing gui r0", "$ r9 = r90 desk", "$ r10 = $ r9 get desktop manager", "$ r10 set bound for frame r50 i20 i19 i24 i25", "i23 = i23 + -1", "i20 = i20 + i22", "i19 = i19 + i22", "goto label33", "label if i23 < 0 goto label38", "label goto label44", "if $ z19 == 0 goto label39", "label r91 = org mozilla javascript tool debugger swing gui r0", "r53 = r91 get file window r2", "if r53 == null goto label44", "r54 = org mozilla javascript tool debugger file window r53", "label $ z20 = r54 be icon", "if $ z20 == 0 goto label41", "r54 set icon 0", "label r54 set visible 1", "r54 move to front", "r54 set select 1", "label goto label44"], "adj}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org mozilla javascript top level r0", "r2 = r6 get builtin ctor r1", "if r2 == null goto label1", "$ r4 = r2 get prototype property", "goto label2", "label $ z0 = $ r4 instanceof org mozilla javascript scriptable", "if $ z0 == 0 goto label3", "$ r5 = org mozilla javascript scriptable $ r4", "goto label4", "label return $ r5", "if $ z0 == 0 goto label3", "label $ r5 = null", "if r2 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = new org fife ui rsyntaxtextarea abstract j flex c token maker $ c style insert break action", "r3 = org fife ui rsyntaxtextarea abstract j flex c token maker r0", "specialinvoke r2 < init > r3", "r4 = javax swing action r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r1 = org fife ui rsyntaxtextarea abstract j flex token maker r0", "r1 yybegin i0", "r2 = org fife ui rsyntaxtextarea abstract j flex token maker r0", "r2 set language index i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org fife ui rsyntaxtextarea abstract token maker r0", "$ r1 = r4 previous token", "if $ r1 ! = null goto label1", "r5 = org fife ui rsyntaxtextarea abstract token maker r0", "r5 current token = null", "r6 = org fife ui rsyntaxtextarea abstract token maker r0", "r6 first token = null", "goto label2", "label return", "if $ r1 ! = null goto label1", "label r7 = org fife ui rsyntaxtextarea abstract token maker r0", "$ r2 = r7 previous token", "r8 = org fife ui rsyntaxtextarea abstract token maker r0", "r8 current token = $ r2", "r9 = org fife ui rsyntaxtextarea abstract token maker r0", "$ r3 = r9 current token", "$ r3 set next token null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof org fife ui rsyntaxtextarea document range", "if $ z0 == 0 goto label4", "$ r2 = org fife ui rsyntaxtextarea document range r1", "r3 = org fife ui rsyntaxtextarea document range r0", "$ i0 = r3 compare to $ r2", "if $ i0 ! = 0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ i0 ! = 0 goto label2", "label $ z1 = 0", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org fife ui rsyntaxtextarea document range r0", "$ i1 = r1 start offs", "$ i2 = $ i1 + i0", "r2 = org fife ui rsyntaxtextarea document range r0", "r2 start offs = $ i2", "r3 = org fife ui rsyntaxtextarea document range r0", "$ i3 = r3 end offs", "$ i4 = $ i3 + i0", "r4 = org fife ui rsyntaxtextarea document range r0", "r4 end offs = $ i4", "r5 = org fife ui rsyntaxtextarea document range r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rsyntaxtextarea error strip r0", "$ r1 = r2 level threshold", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea file location r0", "$ z0 = r1 be local", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be right curly", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org fife ui rsyntaxtextarea fold fold parser manager r0", "$ r3 = r5 fold parser map", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org fife ui rsyntaxtextarea mark occurrences support r0", "$ r1 = r4 p", "$ r2 = $ r1 get paint", "$ r3 = java awt color $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rsyntaxtextarea mark occurrences support r0", "$ r1 = r2 p", "$ z0 = $ r1 get paint border", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org fife ui rsyntaxtextarea parser default parse result r0", "r1 parse time = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org fife ui rsyntaxtextarea parser task tag parser r0", "$ r1 = r4 task pattern", "if $ r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r5 = org fife ui rsyntaxtextarea parser task tag parser r0", "$ r2 = r5 task pattern", "$ r3 = $ r2 pattern"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org fife ui rsyntaxtextarea parser xml parser r0", "$ r1 = r2 spf", "$ r1 set validate z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = r1", "goto label2", "label r4 = org fife ui rsyntaxtextarea r syntax document r0", "r4 token maker factory = $ r3", "return", "if r1 == null goto label1", "label $ r3 = org fife ui rsyntaxtextarea token maker factory get default instance"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = specialinvoke r0 create popup menu", "r2 = org fife ui rsyntaxtextarea r syntax text area r0", "r2 append fold menu r1", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org fife ui rsyntaxtextarea r syntax text area default_bracket_match_bg_color", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z0 = r1 eol marker visible", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r1 = r2 fold manager", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z0 = r1 paint tab line", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r1 = r3 parser manager", "if $ r1 ! = null goto label1", "$ i0 = 0", "goto label2", "label return $ i0", "if $ r1 ! = null goto label1", "label r4 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r2 = r4 parser manager", "$ i0 = $ r2 get parser count"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z0 = r6 get hyperlink enable", "if $ z0 == 0 goto label1", "$ z1 = r1 be hyperlink", "if $ z1 ! = 0 goto label2", "r7 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r2 = r7 link generator result", "if $ r2 == null goto label1", "r8 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r3 = r8 link generator result", "$ i0 = $ r3 get source offset", "$ i1 = r1 get offset", "if $ i0 == $ i1 goto label2", "label r9 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r4 = r9 syntax scheme", "$ i2 = r1 get type", "$ r5 = $ r4 get style $ i2", "$ z2 = $ r5 underline", "if $ z2 == 0 goto label3", "label $ z3 = 1", "goto label4", "label return $ z3", "if $ z2 == 0 goto label3", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = i0 & 960", "if i1 ! = 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` mask argument should be some combination of input event * _down_mask fields\\ ``", "throw r2", "if i1 ! = 0 goto label1", "label r3 = org fife ui rsyntaxtextarea r syntax text area r0", "r3 link scan mask = i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org fife ui rsyntaxtextarea r syntax text area r0", "r3 paint mark occurrence border = z0", "r4 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r1 = r4 mark occurrences support", "if $ r1 == null goto label1", "r5 = org fife ui rsyntaxtextarea r syntax text area r0", "$ r2 = r5 mark occurrences support", "$ r2 set paint border z0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r7 = org fife ui rsyntaxtextarea r syntax text area r0", "$ z1 = r7 whitespace visible", "if $ z1 == z0 goto label5", "r8 = org fife ui rsyntaxtextarea r syntax text area r0", "r8 whitespace visible = z0", "if z0 == 0 goto label1", "r5 = new org fife ui rsyntaxtextarea visible whitespace token painter", "$ r4 = r5", "specialinvoke r5 < init >", "goto label2", "label r9 = org fife ui rsyntaxtextarea r syntax text area r0", "r10 = org fife ui rsyntaxtextarea token painter $ r4", "r9 token painter = r10", "r11 = org fife ui rsyntaxtextarea r syntax text area r0", "r11 repaint", "if z0 ! = 0 goto label3", "$ z2 = 1", "goto label4", "label r12 = org fife ui rsyntaxtextarea r syntax text area r0", "r12 fire property change \\ `` rsta visible whitespace\\", "label return", "if z0 ! = 0 goto label3", "label $ z2 = 0", "if z0 == 0 goto label1", "label r6 = new org fife ui rsyntaxtextarea default token painter", "$ r4 = r6", "specialinvoke r6 < init >"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "return \\ `` r syntax text area u i action map\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = org fife ui rsyntaxtextarea r syntax text area u i r0", "r1 = r6 get visible editor rect", "if r1 == null goto label1", "r7 = org fife ui rsyntaxtextarea r syntax text area u i r0", "$ r3 = r7 text area", "r8 = org fife ui rsyntaxtextarea r syntax text area u i r0", "r9 = javax swing text j text component $ r3", "$ r4 = r8 get root view r9", "$ r5 = $ r4 get view 0", "r2 = org fife ui rsyntaxtextarea r s t a view $ r5", "$ i1 = r2 y for line r1 i0", "return $ i1", "if r1 == null goto label1", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rsyntaxtextarea template abstract code template r0", "$ r1 = r2 id", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` id can not be null\\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = org fife ui rsyntaxtextarea template abstract code template r0", "r4 id = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rsyntaxtextarea templates static code template r0", "$ r1 = r2 after caret", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rsyntaxtextarea text editor pane r0", "$ r1 = r2 loc", "$ z0 = $ r1 be local and exist", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org fife ui rsyntaxtextarea text editor pane r0", "$ z1 = r3 read only", "if $ z1 == z0 goto label3", "r4 = org fife ui rsyntaxtextarea text editor pane r0", "r4 read only = z0", "if z0 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label r5 = org fife ui rsyntaxtextarea text editor pane r0", "r5 fire property change \\ `` text editor pane read only\\", "label return", "if z0 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "i0 = @ parameter1", "r1 = org fife ui rsyntaxtextarea wrap syntax view r0", "$ i2 = r1 tab size", "if $ i2 ! = 0 goto label1", "return f0", "if $ i2 ! = 0 goto label1", "label $ i4 = int f0", "r2 = org fife ui rsyntaxtextarea wrap syntax view r0", "$ i3 = r2 tab base", "$ i6 = $ i4 - $ i3", "r3 = org fife ui rsyntaxtextarea wrap syntax view r0", "$ i5 = r3 tab size", "i1 = $ i6 $ i5", "r4 = org fife ui rsyntaxtextarea wrap syntax view r0", "$ i7 = r4 tab base", "$ f5 = float $ i7", "$ f1 = float i1", "$ f3 = $ f1 + 1 0f", "r5 = org fife ui rsyntaxtextarea wrap syntax view r0", "$ i8 = r5 tab size", "$ f2 = float $ i8", "$ f4 = $ f3 * $ f2", "$ f6 = $ f5 + $ f4", "return $ f6"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["$ r0 = org fife ui rtextarea clipboard history instance", "if $ r0 ! = null goto label1", "$ r2 = new org fife ui rtextarea clipboard history", "specialinvoke $ r2 < init >", "org fife ui rtextarea clipboard history instance = $ r2", "label $ r1 = org fife ui rtextarea clipboard history instance", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = new java util array list", "r5 = org fife ui rtextarea clipboard history r0", "$ r3 = r5 history", "specialinvoke r4 < init > $ r3", "java util collection reverse r4", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rtextarea gutter r0", "$ r1 = r2 line number font", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org fife ui rtextarea gutter r0", "$ z1 = r3 icon row header inherits gutter background", "if z0 == $ z1 goto label1", "r4 = org fife ui rtextarea gutter r0", "r4 icon row header inherits gutter background = z0", "r5 = org fife ui rtextarea gutter r0", "$ r1 = r5 icon area", "if $ r1 == null goto label1", "r6 = org fife ui rtextarea gutter r0", "$ r2 = r6 icon area", "$ r2 set inherits gutter background z0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rtextarea image background painter strategy r0", "$ r1 = r2 text area", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org fife ui rtextarea r document r0", "$ r1 = r3 get content", "$ r2 = org fife ui rtextarea r document $ r gap content $ r1", "$ c1 = $ r2 char at i0", "return $ c1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org fife ui rtextarea recordable text action r0", "$ r1 = r3 get value \\ `` name\\ ``", "$ r2 = java lang string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org fife ui rtextarea recordable text action r0", "r2 put value \\ `` accelerator key\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org fife ui rtextarea recordable text action r0", "r1 be recordable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rtextarea r text area base r0", "$ i0 = r1 margin size in char", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org fife ui rtextarea r text area base r0", "r3 margin line color = r1", "r4 = org fife ui rtextarea r text area base r0", "$ z0 = r4 margin line enable", "if $ z0 == 0 goto label1", "r5 = org fife ui rtextarea r text area base r0", "r2 = r5 get visible rect", "r6 = org fife ui rtextarea r text area base r0", "$ i2 = r6 margin line x", "$ i1 = r2 y", "$ i0 = r2 height", "r7 = org fife ui rtextarea r text area base r0", "r7 repaint $ i2 $ i1 1 $ i0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org fife ui rtextarea r text area u i", "specialinvoke r2 < init > r0", "r3 = javax swing plaf component u i r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org fife ui rtextarea r text area u i r0", "$ r1 = r2 text area", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rtextarea search context r0", "$ z0 = r1 match case", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org fife ui rtextarea search context r0", "$ z0 = r1 selection only", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = org fife ui rtextarea search context r0", "$ z1 = r5 selection only", "if z0 == $ z1 goto label3", "r6 = org fife ui rtextarea search context r0", "r6 selection only = z0", "if z0 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label r7 = org fife ui rtextarea search context r0", "r7 fire property change \\ `` search selection only\\", "if z0 == 0 goto label3", "r4 = new java lang unsupported operation exception", "specialinvoke r4 < init > \\ `` search in selection be not currently supported\\ ``", "throw r4", "if z0 == 0 goto label3", "label return", "if z0 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i3 = 0", "label r2 = org fife util dynamic int array r0", "$ i1 = r2 size", "if i3 > = $ i1 goto label3", "r3 = org fife util dynamic int array r0", "$ r1 = r3 data", "$ i2 = $ r1 [ i3 ]", "if $ i2 ! = i0 goto label2", "return 1", "if $ i2 ! = i0 goto label2", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i1 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org fife util dynamic int array r0", "$ i2 = r4 size", "if i0 < $ i2 goto label1", "r5 = org fife util dynamic int array r0", "specialinvoke r5 throw exception i0", "label r6 = org fife util dynamic int array r0", "$ i3 = r6 size", "$ i4 = $ i3 - i0", "i1 = $ i4 - 1", "if i1 < = 0 goto label2", "r7 = org fife util dynamic int array r0", "$ r2 = r7 data", "$ i7 = i0 + 1", "r8 = org fife util dynamic int array r0", "$ r1 = r8 data", "java lang system arraycopy $ r2 $ i7 $ r1 i0 i1", "label r9 = org fife util dynamic int array r0", "$ i5 = r9 size", "$ i6 = $ i5 - 1", "r10 = org fife util dynamic int array r0", "r10 size = $ i6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "io reactivex internal function object helper require non null r0 \\ `` run be null\\ ``", "r3 = new io reactivex disposables runnable disposable", "specialinvoke r3 < init > r0", "r4 = io reactivex disposables disposable r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io reactivex flowables connectable flowable r0", "$ r1 = r2 auto connect 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "label r5 = io reactivex internal disposable array composite disposable r0", "$ r3 = r5 get i0", "r2 = io reactivex disposables disposable $ r3", "$ r4 = io reactivex internal disposable disposable helper dispose", "if r2 ! = $ r4 goto label2", "r1 dispose", "return 0", "if r2 ! = $ r4 goto label2", "label r6 = io reactivex internal disposable array composite disposable r0", "$ z0 = r6 compare and set i0 r2 r1", "if $ z0 == 0 goto label4", "if r2 == null goto label3", "r2 dispose", "label return 1", "if $ z0 == 0 goto label4", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r7 = io reactivex internal observer block multi observer r0", "$ l0 = r7 get count", "$ b1 = $ l0 cmp 0l", "if $ b1 == 0 goto label4", "label io reactivex internal util block helper verify non block", "r8 = io reactivex internal observer block multi observer r0", "r8 await", "label goto label4", "label r10 = io reactivex internal observer block multi observer r0", "r6 = r10 error", "if r6 == null goto label5", "$ r2 = io reactivex internal util exception helper wrap or throw r6", "throw $ r2", "if r6 == null goto label5", "label r11 = io reactivex internal observer block multi observer r0", "$ r1 = r11 value", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io reactivex internal subscriber single post complete subscriber r0", "l0 = r4 produce", "$ b2 = l0 cmp 0l", "if $ b2 == 0 goto label1", "io reactivex internal util backpressure helper produce r0 l0", "label r5 = io reactivex internal subscriber single post complete subscriber r0", "l1 = r5 get", "$ l6 = l1 & -9223372036854775808l", "$ b7 = $ l6 cmp 0l", "if $ b7 == 0 goto label2", "r6 = io reactivex internal subscriber single post complete subscriber r0", "r6 on drop r1", "return", "if $ b7 == 0 goto label2", "label $ l3 = l1 & 9223372036854775807l", "$ b4 = $ l3 cmp 0l", "if $ b4 == 0 goto label3", "r7 = io reactivex internal subscriber single post complete subscriber r0", "r7 lazy set -9223372036854775807l", "r8 = io reactivex internal subscriber single post complete subscriber r0", "$ r2 = r8 actual", "$ r2 on next r1", "r9 = io reactivex internal subscriber single post complete subscriber r0", "$ r3 = r9 actual", "$ r3 on complete", "if $ b4 == 0 goto label3", "label r10 = io reactivex internal subscriber single post complete subscriber r0", "r10 value = r1", "r11 = io reactivex internal subscriber single post complete subscriber r0", "$ z0 = r11 compare and set 0l -9223372036854775808l", "if $ z0 == 0 goto label4", "label r12 = io reactivex internal subscriber single post complete subscriber r0", "r12 value = null", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io reactivex internal subscription empty subscription instance", "r3 = org reactivestreams subscription $ r2", "r1 on subscribe r3", "r1 on error r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io reactivex internal util append only link array list r0", "i0 = r5 capacity", "r6 = io reactivex internal util append only link array list r0", "i3 = r6 offset", "if i3 ! = i0 goto label1", "$ i2 = i0 + 1", "r2 = newarray java lang object [ $ i2 ]", "r7 = io reactivex internal util append only link array list r0", "$ r4 = r7 tail", "$ r4 [ i0 ] = r2", "r8 = io reactivex internal util append only link array list r0", "r8 tail = r2", "i3 = 0", "label r9 = io reactivex internal util append only link array list r0", "$ r3 = r9 tail", "$ r3 [ i3 ] = r1", "$ i1 = i3 + 1", "r10 = io reactivex internal util append only link array list r0", "r10 offset = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io reactivex internal util append only link array list r0", "r5 = r6 head", "r7 = io reactivex internal util append only link array list r0", "i0 = r7 capacity", "label if r5 == null goto label6", "i1 = 0", "label if i1 > = i0 goto label5", "r2 = r5 [ i1 ]", "if r2 ! = null goto label3", "goto label5", "label $ r3 = r5 [ i0 ]", "$ r4 = java lang object [ ] $ r3", "r5 = java lang object [ ] $ r4", "goto label1", "if r2 ! = null goto label3", "label $ z0 = io reactivex internal util notification lite accept full r2 r1", "if $ z0 == 0 goto label4", "return 1", "if $ z0 == 0 goto label4", "label i1 = i1 + 1", "goto label2", "label if r5 == null goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [], [17], [18], [19], [], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "label l1 = r0 get", "$ b3 = l1 cmp -9223372036854775808l", "if $ b3 ! = 0 goto label2", "return -9223372036854775808l", "if $ b3 ! = 0 goto label2", "label $ b4 = l1 cmp 9223372036854775807l", "if $ b4 ! = 0 goto label3", "return 9223372036854775807l", "if $ b4 ! = 0 goto label3", "label l2 = io reactivex internal util backpressure helper add cap l1 l0", "$ z0 = r0 compare and set l1 l2", "if $ z0 == 0 goto label4", "return l1", "if $ z0 == 0 goto label4", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "io reactivex internal function object helper require non null r1 \\ `` next be null\\ ``", "$ z0 = r0 compare and set null r1", "if $ z0 ! = 0 goto label2", "r1 dispose", "$ r4 = r0 get", "$ r5 = io reactivex internal disposable disposable helper dispose", "if $ r4 == $ r5 goto label1", "io reactivex internal util end consumer helper report double subscription r2", "label return 0", "if $ z0 ! = 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new io reactivex internal util notification lite $ error notification", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io reactivex observer base test consumer r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = io reactivex observer base test consumer r0", "$ r5 = r13 error", "i0 = $ r5 size", "if i0 ! = 0 goto label01", "r14 = io reactivex observer base test consumer r0", "$ r10 = r14 fail \\ `` no errors\\ ``", "throw $ r10", "if i0 ! = 0 goto label01", "label z2 = 0", "r15 = io reactivex observer base test consumer r0", "$ r6 = r15 error", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label08", "$ r9 = r2 next", "r3 = java lang throwable $ r9", "label $ z1 = r1 test r3", "if $ z1 == 0 goto label05", "z2 = 1", "label goto label08", "label if z2 == 0 goto label09", "if i0 == 1 goto label10", "r16 = io reactivex observer base test consumer r0", "$ r8 = r16 fail \\ `` error present but other error a well\\ ``", "throw $ r8", "if i0 == 1 goto label10", "label r18 = io reactivex observer base test consumer r0", "return r18", "label if z2 == 0 goto label09", "label r17 = io reactivex observer base test consumer r0", "$ r7 = r17 fail \\ `` error not present\\ ``", "throw $ r7", "if $ z1 == 0 goto label05", "label goto label07", "label goto label02"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [], [31], [32], [33], [], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = io reactivex observer base test consumer r0", "$ r4 = r18 value", "i0 = $ r4 size", "i1 = 0", "label if i1 > = i0 goto label6", "r19 = io reactivex observer base test consumer r0", "$ r5 = r19 value", "r2 = $ r5 get i1", "label $ z0 = r1 test r2", "if $ z0 == 0 goto label3", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r7 = r17 append \\ `` value at position \\ ``", "$ r8 = $ r7 append i1", "$ r9 = $ r8 append \\ `` match predicate \\ ``", "$ r10 = r1 to string", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 append \\", "$ r13 = $ r12 to string", "r20 = io reactivex observer base test consumer r0", "$ r14 = r20 fail $ r13", "throw $ r14", "if $ z0 == 0 goto label3", "label goto label5", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label6", "label r21 = io reactivex observer base test consumer r0", "return r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io reactivex observer base test consumer r0", "r5 assert value at 0 r1", "r6 = io reactivex observer base test consumer r0", "$ r3 = r6 value", "$ i0 = $ r3 size", "if $ i0 < = 1 goto label1", "r7 = io reactivex observer base test consumer r0", "$ r4 = r7 fail \\ `` value present but other value a well\\ ``", "throw $ r4", "if $ i0 < = 1 goto label1", "label r8 = io reactivex observer base test consumer r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r10 = io reactivex observer base test consumer r0", "$ r1 = r10 value", "i1 = $ r1 size", "if i1 == i0 goto label1", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r3 = r9 append \\ `` value count differ expect \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 append \\", "$ r6 = $ r5 append i1", "$ r7 = $ r6 to string", "r11 = io reactivex observer base test consumer r0", "$ r8 = r11 fail $ r7", "throw $ r8", "if i1 == i0 goto label1", "label r12 = io reactivex observer base test consumer r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = io reactivex observer base test consumer r0", "$ r1 = r3 do", "$ l0 = $ r1 get count", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label1", "r4 = io reactivex observer base test consumer r0", "$ r2 = r4 fail \\ `` subscriber terminate ! \\ ``", "throw $ r2", "if $ b1 ! = 0 goto label1", "label r5 = io reactivex observer base test consumer r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r17 = io reactivex observer base test consumer r0", "$ r4 = r17 error", "i0 = $ r4 size", "if i0 ! = 0 goto label1", "r18 = io reactivex observer base test consumer r0", "$ r15 = r18 fail \\ `` no errors\\ ``", "throw $ r15", "if i0 ! = 0 goto label1", "label if i0 ! = 1 goto label3", "r19 = io reactivex observer base test consumer r0", "$ r6 = r19 error", "$ r7 = $ r6 get 0", "r2 = java lang throwable $ r7", "r3 = r2 get message", "$ z0 = io reactivex internal function object helper equal r1 r3", "if $ z0 ! = 0 goto label2", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r9 = r16 append \\ `` error message differs expect \\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 append \\", "$ r12 = $ r11 append r3", "$ r13 = $ r12 to string", "r20 = io reactivex observer base test consumer r0", "$ r14 = r20 fail $ r13", "throw $ r14", "if $ z0 ! = 0 goto label2", "label goto label4", "label r22 = io reactivex observer base test consumer r0", "return r22", "label if i0 ! = 1 goto label3", "label r21 = io reactivex observer base test consumer r0", "$ r5 = r21 fail \\ `` multiple errors\\ ``", "throw $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r8 = new java util array list", "specialinvoke r8 < init >", "r10 = io reactivex observer base test consumer r0", "$ r4 = r10 value", "r8 add $ r4", "r11 = io reactivex observer base test consumer r0", "$ r5 = r11 error", "r8 add $ r5", "r9 = new java util array list", "specialinvoke r9 < init >", "l2 = 0l", "label r12 = io reactivex observer base test consumer r0", "$ l0 = r12 completion", "$ b1 = l2 cmp $ l0", "if $ b1 > = 0 goto label2", "$ r7 = io reactivex notification create on complete", "r9 add $ r7", "l2 = l2 + 1l", "goto label1", "if $ b1 > = 0 goto label2", "label r8 add r9", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io reactivex observer base test consumer r0", "$ r2 = r6 assert subscribe", "$ r3 = $ r2 assert value r1", "$ r4 = $ r3 assert no error", "$ r5 = $ r4 assert complete", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io reactivex observer base test consumer r0", "r2 tag = r1", "r3 = io reactivex observer base test consumer r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "l1 = @ parameter2", "l2 = java lang system current time millis", "label $ b3 = l1 cmp 0l", "if $ b3 < = 0 goto label2", "$ l7 = java lang system current time millis", "$ l8 = $ l7 - l2", "$ b9 = $ l8 cmp l1", "if $ b9 < 0 goto label2", "r4 = io reactivex observer base test consumer r0", "r4 timeout = 1", "goto label5", "label r7 = io reactivex observer base test consumer r0", "return r7", "if $ b9 < 0 goto label2", "label r5 = io reactivex observer base test consumer r0", "$ r2 = r5 do", "$ l4 = $ r2 get count", "$ b5 = $ l4 cmp 0l", "if $ b5 ! = 0 goto label3", "label r6 = io reactivex observer base test consumer r0", "$ r3 = r6 value", "$ i6 = $ r3 size", "if $ i6 < i0 goto label4", "label r1 run", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["z0 = @ parameter0", "$ z1 = io reactivex plugins rx java plugins lockdown", "if $ z1 == 0 goto label1", "$ r0 = new java lang illegal state exception", "specialinvoke $ r0 < init > \\ `` plugins can\\'t be change anymore\\ ``", "throw $ r0", "if $ z1 == 0 goto label1", "label io reactivex plugins rx java plugins fail non block scheduler = z0", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = io reactivex scheduler time r0", "$ l0 = r1 time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io reactivex scheduler time r0", "$ l0 = r1 time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = io reactivex internal function function empty consumer", "$ r2 = io reactivex internal function function on_error_missing", "r4 = io reactivex single r0", "$ r3 = r4 subscribe $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = io reactivex subject completable subject r0", "$ r1 = r5 observer", "$ r2 = $ r1 get", "$ r3 = io reactivex subject completable subject terminate", "if $ r2 ! = $ r3 goto label1", "r6 = io reactivex subject completable subject r0", "$ r4 = r6 error", "return $ r4", "if $ r2 ! = $ r3 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r5 = io reactivex subject maybe subject r0", "$ r1 = r5 observer", "$ r2 = $ r1 get", "$ r3 = io reactivex subject maybe subject terminate", "if $ r2 ! = $ r3 goto label1", "r6 = io reactivex subject maybe subject r0", "$ r4 = r6 value", "return $ r4", "if $ r2 ! = $ r3 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = io reactivex subscriber default subscriber r0", "r1 = r2 s", "if r1 == null goto label1", "r1 request l0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r2 = new java lang null pointer exception", "specialinvoke $ r2 < init > r1", "throw $ r2", "if r0 ! = null goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be empty", "if $ z0 == 0 goto label1", "r13 = io reactivex observer base test consumer r0", "r13 assert no value", "r14 = io reactivex observer base test consumer r0", "return r14", "if $ z0 == 0 goto label1", "label r15 = io reactivex observer base test consumer r0", "$ r4 = r15 value", "r2 = $ r4 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label4", "r3 = r2 next", "$ z2 = r1 contain r3", "if $ z2 ! = 0 goto label3", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r6 = r12 append \\ `` value not in the expected collection \\ ``", "$ r7 = io reactivex observer base test consumer value and class r3", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "r16 = io reactivex observer base test consumer r0", "$ r10 = r16 fail $ r9", "throw $ r10", "if $ z2 ! = 0 goto label3", "label goto label2", "if $ z1 == 0 goto label4", "label r17 = io reactivex observer base test consumer r0", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "io reactivex internal function object helper require non null r1 \\ `` predicate\\ ``", "io reactivex internal function object helper require non null r2 \\ `` error handler be null\\ ``", "r7 = new io reactivex internal operator parallel parallel filter try", "r8 = io reactivex parallel parallel flowable r0", "specialinvoke r7 < init > r8 r1 r2", "r9 = io reactivex parallel parallel flowable r7", "$ r6 = io reactivex plugins rx java plugins on assembly r9", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = io reactivex processor multicast processor r0", "$ r2 = r5 upstream", "$ r1 = io reactivex internal subscription empty subscription instance", "r6 = org reactivestreams subscription $ r1", "$ z0 = io reactivex internal subscription subscription helper set once $ r2 r6", "if $ z0 == 0 goto label1", "r4 = new io reactivex internal queue spsc array queue", "r7 = io reactivex processor multicast processor r0", "$ i0 = r7 buffer size", "specialinvoke r4 < init > $ i0", "r8 = io reactivex processor multicast processor r0", "r9 = io reactivex internal fuseable simple queue r4", "r8 queue = r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = io reactivex processor replay processor r0", "$ r1 = r2 buffer", "$ r1 trim head", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = scala jdk javaapi stream converter a java seq double stream r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new io sentry breadcrumb", "specialinvoke $ r3 < init >", "$ r3 set type \\ `` http\\ ``", "$ r3 set category \\ `` http\\ ``", "$ r3 set data \\ `` url\\", "$ r4 = java util locale root", "$ r5 = r1 to upper case $ r4", "$ r3 set data \\ `` method\\", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = io sentry breadcrumb r0", "$ r1 = r4 timestamp", "$ r2 = $ r1 clone", "$ r3 = java util date $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry breadcrumb r0", "$ r1 = r2 level", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry dsn r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io sentry exception exception mechanism exception r0", "$ z0 = r1 snapshot", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io sentry protocol sentry exception r0", "r2 thread id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = new java util hash map", "specialinvoke r6 < init >", "r6 put \\ `` value\\", "r7 = io sentry scope r0", "r7 set context r1 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io sentry diagnostic logger r0", "$ r3 = r5 option", "r2 = $ r3 get diagnostic level", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r6 = io sentry diagnostic logger r0", "$ r4 = r6 option", "$ z0 = $ r4 be debug", "if $ z0 == 0 goto label2", "$ i0 = r1 ordinal", "$ i1 = r2 ordinal", "if $ i0 < $ i1 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if $ i0 < $ i1 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io sentry sentry get current hub", "$ r2 add breadcrumb r0 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = io sentry sentry get current hub", "$ r2 = $ r1 start transaction r0 z0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry sentry option r0", "$ r1 = r2 environment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io sentry sentry option r0", "$ r2 = r3 in app include", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry sentry option r0", "$ r1 = r2 envelope disk cache", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry sentry option r0", "$ r1 = r2 proguard uuid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = io sentry date utils get current date time", "r2 = io sentry session r0", "r2 end $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry user feedback r0", "$ r1 = r2 event id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry user feedback r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io sentry user feedback r0", "r2 email = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io sentry user feedback r0", "$ r1 = r2 comment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org ehcache sizeof impl jvm information r0", "$ r1 = r2 parent", "$ i0 = $ r1 get object alignment", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` key can not be null\\ ``", "throw r10", "if r1 ! = null goto label1", "label r12 = org slf4j helper basic m d c adapter r0", "$ r3 = r12 inheritable thread local", "$ r4 = $ r3 get", "r9 = java util hash map $ r4", "if r9 ! = null goto label2", "r11 = new java util hash map", "specialinvoke r11 < init >", "r9 = r11", "r13 = org slf4j helper basic m d c adapter r0", "$ r7 = r13 inheritable thread local", "$ r7 set r11", "label r9 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org slf4j marker factory marker factory", "$ r2 = $ r1 get detach marker r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r5 = new java lang illegal argument exception", "specialinvoke $ r5 < init > \\ `` key parameter can not be null\\ ``", "throw $ r5", "if r0 ! = null goto label1", "label $ r2 = org slf4j mdc mdc adapter", "if $ r2 ! = null goto label2", "$ r4 = new java lang illegal state exception", "specialinvoke $ r4 < init > \\ `` m d c adapter can not be null see also http www slf4j org code html #null_ m d c a\\ ``", "throw $ r4", "if $ r2 ! = null goto label2", "label $ r3 = org slf4j mdc mdc adapter", "$ r3 put r0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["$ r0 = org slf4j mdc mdc adapter", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org slf4j impl simple logger r0", "specialinvoke r3 format and log 20 r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org slf4j impl simple logger r0", "specialinvoke r3 format and log 30 r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = org slf4j impl simple logger r0", "specialinvoke r4 format and log 40 r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r1 = io vertx core buffer buffer buffer", "r0 = io vertx axle core buffer buffer new instance $ r1", "return r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core buffer buffer r0", "$ r2 = r3 delegate", "r1 = $ r2 to string", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = io vertx axle core buffer buffer r0", "$ r1 = r2 delegate", "b1 = $ r1 get byte i0", "return b1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = io vertx axle core buffer buffer r0", "$ r1 = r2 delegate", "l1 = $ r1 get unsigned int i0", "return l1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "l1 = @ parameter1", "r3 = io vertx axle core buffer buffer r0", "$ r1 = r3 delegate", "$ r1 set long l e i0 l1", "r4 = io vertx axle core buffer buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "f0 = @ parameter1", "r3 = io vertx axle core buffer buffer r0", "$ r1 = r3 delegate", "$ r1 set float i0 f0", "r4 = io vertx axle core buffer buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core buffer buffer r0", "$ r2 = r3 delegate", "r1 = $ r2 get byte buf", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx axle core cli cli r0", "$ r1 = r3 delegate", "$ r1 set priority i0", "r4 = io vertx axle core cli cli r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core cli command line r0", "$ r3 = r4 delegate", "r2 = $ r3 get raw value for argument r1", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx axle core cli command line r0", "$ r2 = r3 delegate", "z0 = $ r2 accept more value r1", "return z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core context r0", "$ r2 = r3 delegate", "r1 = $ r2 config", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core context r0", "$ r1 = r2 delegate", "z0 = $ r1 be worker context", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core context r0", "$ r3 = r4 delegate", "r2 = $ r3 get r1", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r6 = io vertx axle core datagram datagram socket r0", "$ r3 = r6 delegate", "$ r4 = $ r3 sender i0 r1", "$ r5 = io vertx axle core datagram datagram socket type_arg_1", "r2 = io vertx axle core stream write stream new instance $ r4 $ r5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core dns srv record r0", "$ r2 = r3 delegate", "r1 = $ r2 protocol", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core dns srv record r0", "$ r2 = r3 delegate", "r1 = $ r2 service", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx axle core eventbus event bus r0", "$ r3 = r6 delegate", "$ r4 = $ r3 sender r1", "$ r5 = io vertx lang axle type arg unknown", "r2 = io vertx axle core eventbus message producer new instance $ r4 $ r5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core eventbus message producer r0", "$ r1 = message producer $ lambda_end_4__6 bootstrap $ r3", "$ r2 = io vertx axle async result completion stage to completion stage $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core file file prop r0", "$ r1 = r2 delegate", "l0 = $ r1 last access time", "return l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core file file prop r0", "$ r1 = r2 delegate", "z0 = $ r1 be other", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core file file prop r0", "$ r1 = r2 delegate", "l0 = $ r1 size", "return l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx axle core file file system r0", "$ r4 = file system $ lambda_chmod recursive_8__8 bootstrap $ r6 r1 r2 r3", "$ r5 = io vertx axle async result completion stage to completion stage $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx axle core file file system r0", "$ r3 = file system $ lambda_link_12__12 bootstrap $ r5 r1 r2", "$ r4 = io vertx axle async result completion stage to completion stage $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core file file system r0", "$ r2 = file system $ lambda_unlink_14__14 bootstrap $ r4 r1", "$ r3 = io vertx axle async result completion stage to completion stage $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core file file system r0", "$ r2 = file system $ lambda_read symlink_15__15 bootstrap $ r4 r1", "$ r3 = io vertx axle async result completion stage to completion stage $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r1 = io vertx core future succeed future", "$ r2 = io vertx lang axle type arg unknown", "r0 = io vertx axle core future new instance $ r1 $ r2", "return r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = io vertx axle core composite future r0", "$ r4 = r8 delegate", "r7 = new io vertx axle core composite future $ 5", "r9 = io vertx axle core composite future r0", "specialinvoke r7 < init > r9 r1", "r10 = java util function function r7", "$ r5 = $ r4 map r10", "$ r6 = io vertx lang axle type arg unknown", "r2 = io vertx axle core future new instance $ r5 $ r6", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core http cookie r0", "$ r2 = r4 delegate", "$ r2 set path r1", "r5 = io vertx axle core http cookie r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx axle core http cookie r0", "$ r1 = r3 delegate", "$ r1 set secure z0", "r4 = io vertx axle core http cookie r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = io vertx axle core http http client r0", "$ r4 = r6 delegate", "$ r5 = $ r4 request r1 r2", "r3 = io vertx axle core http http client request new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx axle core http http client r0", "$ r3 = r5 delegate", "$ r4 = $ r3 get r1", "r2 = io vertx axle core http http client request new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx axle core http http client r0", "$ r3 = r5 delegate", "$ r4 = $ r3 get abs r1", "r2 = io vertx axle core http http client request new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx axle core http http client r0", "$ r3 = r5 delegate", "$ r4 = $ r3 post ab r1", "r2 = io vertx axle core http http client request new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx axle core http http client r0", "$ r2 = http client $ lambda_web socket_4__87 bootstrap $ r4 r1", "$ r3 = io vertx axle async result completion stage to completion stage $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r10 = io vertx axle core http http client r0", "$ r6 = r10 delegate", "$ r7 = r3 get delegate", "$ r8 = $ r6 websocket stream i0 r1 r2 $ r7 r4", "$ r9 = io vertx axle core http http client type_arg_7", "r5 = io vertx axle core stream read stream new instance $ r8 $ r9", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r7 = io vertx axle core http http client r0", "$ r4 = r7 delegate", "$ r5 = $ r4 websocket stream i0 r1 r2", "$ r6 = io vertx axle core http http client type_arg_1", "r3 = io vertx axle core stream read stream new instance $ r5 $ r6", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r1 = @ parameter2", "r5 = io vertx axle core http http connection r0", "$ r2 = r5 delegate", "$ r3 = r1 get delegate", "$ r2 go away l0 i1 $ r3", "r6 = io vertx axle core http http connection r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx axle core http http server request r0", "$ r1 = r3 delegate", "$ r1 set expect multipart z0", "r4 = io vertx axle core http http server request r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core http server web socket r0", "$ r2 = r3 delegate", "r1 = $ r2 binary handler i d", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core json pointer json pointer r0", "$ r1 = r2 delegate", "z0 = $ r1 be local pointer", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx axle core json pointer json pointer r0", "$ r1 = r3 delegate", "$ r1 append i0", "r4 = io vertx axle core json pointer json pointer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx axle core json pointer json pointer r0", "$ r2 = r4 delegate", "$ r3 = $ r2 copy", "r1 = io vertx axle core json pointer json pointer new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx axle core multi map r0", "$ r2 = r3 delegate", "z0 = $ r2 contain r1", "return z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core net net socket r0", "$ r2 = r3 delegate", "r1 = $ r2 write handler i d", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx axle core net self sign certificate r0", "$ r1 = r2 delegate", "$ r1 delete", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core parsetools json parser r0", "$ r1 = r3 delegate", "$ r1 object event mode", "r4 = io vertx axle core parsetools json parser r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core shareddata async map r0", "$ r1 = async map $ lambda_clear_10__11 bootstrap $ r3", "$ r2 = io vertx axle async result completion stage to completion stage $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core shareddata async map r0", "$ r1 = async map $ lambda_size_11__11 bootstrap $ r3", "$ r2 = io vertx axle async result completion stage to completion stage $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core shareddata counter r0", "$ r1 = counter $ lambda_increment and get_2__5 bootstrap $ r3", "$ r2 = io vertx axle async result completion stage to completion stage $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = io vertx axle core shareddata counter r0", "$ r1 = counter $ lambda_add and get_5__2 bootstrap $ r3 l0", "$ r2 = io vertx axle async result completion stage to completion stage $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "r3 = io vertx axle core shareddata counter r0", "$ r1 = counter $ lambda_compare and set_7__6 bootstrap $ r3 l0 l1", "$ r2 = io vertx axle async result completion stage to completion stage $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core stream pump r0", "$ r1 = r3 delegate", "$ r1 start", "r4 = io vertx axle core stream pump r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core stream pump r0", "$ r1 = r3 delegate", "$ r1 stop", "r4 = io vertx axle core stream pump r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx axle core vertx r0", "$ r2 = r4 delegate", "$ r3 = $ r2 get or create context", "r1 = io vertx axle core context new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx axle core vertx r0", "$ r2 = r4 delegate", "$ r3 = $ r2 create http client", "r1 = io vertx axle core http http client new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = io vertx axle core vertx r0", "$ r2 = r6 cached_0", "if $ r2 == null goto label1", "r7 = io vertx axle core vertx r0", "$ r5 = r7 cached_0", "return $ r5", "if $ r2 == null goto label1", "label r8 = io vertx axle core vertx r0", "$ r3 = r8 delegate", "$ r4 = $ r3 file system", "r1 = io vertx axle core file file system new instance $ r4", "r9 = io vertx axle core vertx r0", "r9 cached_0 = r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r4 = io vertx axle core vertx r0", "$ r2 = r4 delegate", "$ r3 = $ r2 timer stream l0", "r1 = io vertx axle core timeout stream new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx axle core vertx r0", "$ r2 = r3 delegate", "r1 = $ r2 verticle factory", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["c0 = @ parameter0", "$ r0 = io smallrye common constraint message log", "$ r1 = java lang character value of c0", "$ r2 = $ r0 impossible switch case $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io smallrye config small rye config r0", "r2 = r5 get config value r1", "if r2 == null goto label1", "$ r3 = r2 get value", "if $ r3 == null goto label1", "$ r4 = r2 get value", "goto label2", "label return $ r4", "if $ r3 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx mutiny core http http client r0", "$ r2 = http client $ lambda_web socket_38__87 bootstrap $ r4 r1", "$ r3 = io smallrye mutiny vertx async result uni to uni $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < = 1024 goto label1", "r2 = new org yaml snakeyaml error y a m l exception", "specialinvoke r2 < init > \\ `` the simple key must not span more than 1024 stream character see https yaml org spec 1 1 #id934537\\ ``", "r3 = java lang throwable r2", "throw r3", "if i0 < = 1024 goto label1", "label r4 = org yaml snakeyaml dumper option r0", "r4 max simple key length = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org yaml snakeyaml dumper option r0", "r2 non printable style = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org yaml snakeyaml event document start event r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org yaml snakeyaml loader option r0", "r1 allow duplicate key = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org yaml snakeyaml node node r0", "$ r1 = r2 tag", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org yaml snakeyaml node node r0", "$ z0 = r1 resolve", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org yaml snakeyaml parser parser impl r0", "r3 peek event", "r4 = org yaml snakeyaml parser parser impl r0", "r1 = r4 current event", "r5 = org yaml snakeyaml parser parser impl r0", "r5 current event = null", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org yaml snakeyaml reader stream reader r0", "$ z0 = specialinvoke r2 ensure enough data", "if $ z0 == 0 goto label1", "r3 = org yaml snakeyaml reader stream reader r0", "$ r1 = r3 data window", "r4 = org yaml snakeyaml reader stream reader r0", "$ i0 = r4 pointer", "$ i1 = $ r1 [ $ i0 ]", "goto label2", "label return $ i1", "if $ z0 == 0 goto label1", "label $ i1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = 0 goto label1", "return \\ `` \\ ``", "if i0 ! = 0 goto label1", "label r7 = org yaml snakeyaml reader stream reader r0", "$ z0 = specialinvoke r7 ensure enough data i0", "if $ z0 == 0 goto label2", "r5 = new java lang string", "r8 = org yaml snakeyaml reader stream reader r0", "$ r4 = r8 data window", "r9 = org yaml snakeyaml reader stream reader r0", "$ i6 = r9 pointer", "specialinvoke r5 < init > $ r4 $ i6 i0", "return r5", "if $ z0 == 0 goto label2", "label r6 = new java lang string", "r10 = org yaml snakeyaml reader stream reader r0", "$ r2 = r10 data window", "r11 = org yaml snakeyaml reader stream reader r0", "$ i4 = r11 pointer", "r12 = org yaml snakeyaml reader stream reader r0", "$ i2 = r12 data length", "r13 = org yaml snakeyaml reader stream reader r0", "$ i1 = r13 pointer", "$ i3 = $ i2 - $ i1", "$ i5 = java lang math min i0 $ i3", "specialinvoke r6 < init > $ r2 $ i4 $ i5", "return r6"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "label r4 = org yaml snakeyaml scanner scanner impl r0", "$ z0 = specialinvoke r4 need more token", "if $ z0 == 0 goto label2", "r5 = org yaml snakeyaml scanner scanner impl r0", "specialinvoke r5 fetch more token", "goto label1", "if $ z0 == 0 goto label2", "label r6 = org yaml snakeyaml scanner scanner impl r0", "$ r1 = r6 token", "$ r2 = $ r1 get 0", "$ r3 = org yaml snakeyaml tokens token $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org yaml snakeyaml type description r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org yaml snakeyaml type description r0", "$ r4 = r7 property", "$ z0 = $ r4 contain key r1", "if $ z0 ! = 0 goto label1", "r8 = org yaml snakeyaml type description r0", "r8 substitute property r1 null null null r2", "goto label2", "label return", "if $ z0 ! = 0 goto label1", "label r9 = org yaml snakeyaml type description r0", "$ r5 = r9 property", "$ r6 = $ r5 get r1", "r3 = org yaml snakeyaml introspector property substitute $ r6", "r3 set actual type argument r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new java io string writer", "specialinvoke r5 < init >", "r6 = org yaml snakeyaml yaml r0", "specialinvoke r6 dump all r1 r5 null", "$ r4 = r5 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org yaml snakeyaml reader unicode reader", "specialinvoke r4 < init > r1", "r5 = org yaml snakeyaml yaml r0", "r6 = java io reader r4", "$ r3 = r5 load all r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org yaml snakeyaml loader option r0", "r1 max alias for collection = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r13 = new org yaml snakeyaml serializer serializer", "r12 = new org yaml snakeyaml emitter emitter", "r15 = org yaml snakeyaml yaml r0", "$ r7 = r15 dumper option", "specialinvoke r12 < init > r2 $ r7", "r16 = org yaml snakeyaml yaml r0", "$ r9 = r16 resolver", "r17 = org yaml snakeyaml yaml r0", "$ r8 = r17 dumper option", "r18 = org yaml snakeyaml emitter emitable r12", "specialinvoke r13 < init > r18 $ r9 $ r8 null", "label r13 open", "r13 serialize r1", "r13 close", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ i1 = lengthof r0", "$ i2 = $ i1 4", "r1 = newarray int [ $ i2 ]", "$ r2 = org xerial snappy bit shuffle impl", "$ i3 = lengthof r0", "i0 = $ r2 unshuffle r0 0 4 $ i3 r1 0", "$ z0 = org xerial snappy bit shuffle $ assertion disable", "if $ z0 ! = 0 goto label1", "$ i4 = lengthof r0", "if i0 == $ i4 goto label1", "$ r3 = new java lang assertion error", "specialinvoke $ r3 < init >", "throw $ r3", "if i0 == $ i4 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ i1 = lengthof r0", "$ i2 = $ i1 4", "r1 = newarray float [ $ i2 ]", "$ r2 = org xerial snappy bit shuffle impl", "$ i3 = lengthof r0", "i0 = $ r2 unshuffle r0 0 4 $ i3 r1 0", "$ z0 = org xerial snappy bit shuffle $ assertion disable", "if $ z0 ! = 0 goto label1", "$ i4 = lengthof r0", "if i0 == $ i4 goto label1", "$ r3 = new java lang assertion error", "specialinvoke $ r3 < init >", "throw $ r3", "if i0 == $ i4 goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` pool be null\\ ``", "throw $ r1", "if r0 ! = null goto label1", "label org xerial snappy pool default pool factory default pool = r0", "return"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sonar orchestrator build build r0", "r2 additional argument = r1", "r3 = com sonar orchestrator build build r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r25 = com sonar orchestrator orchestrator r0", "$ r4 = r25 start", "$ z0 = $ r4 get and set 1", "if $ z0 == 0 goto label1", "r21 = new java lang illegal state exception", "specialinvoke r21 < init > \\ `` orchestrator be already started\\ ``", "throw r21", "if $ z0 == 0 goto label1", "label r26 = com sonar orchestrator orchestrator r0", "r26 install", "r27 = com sonar orchestrator orchestrator r0", "$ r6 = r27 config", "r1 = $ r6 file system", "r23 = new com sonar orchestrator server server process impl", "r22 = new com sonar orchestrator server server command line factory", "specialinvoke r22 < init > r1", "r28 = com sonar orchestrator orchestrator r0", "$ r10 = r28 server", "r29 = com sonar orchestrator orchestrator r0", "$ r9 = r29 startup log watcher", "specialinvoke r23 < init > r22 $ r10 $ r9", "r30 = com sonar orchestrator orchestrator r0", "r31 = com sonar orchestrator server server process r23", "r30 process = r31", "r32 = com sonar orchestrator orchestrator r0", "$ r11 = r32 process", "$ r11 start", "r33 = com sonar orchestrator orchestrator r0", "$ r12 = r33 distribution", "$ r13 = $ r12 get profile backup", "r2 = $ r13 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label3", "$ r17 = r2 next", "r3 = com sonar orchestrator locator location $ r17", "r34 = com sonar orchestrator orchestrator r0", "$ r18 = r34 server", "$ r18 restore profile r3", "goto label2", "if $ z1 == 0 goto label3", "label r35 = com sonar orchestrator orchestrator r0", "$ r14 = r35 distribution", "$ z2 = $ r14 be activate license", "if $ z2 == 0 goto label4", "r36 = com sonar orchestrator orchestrator r0", "r36 activate license", "label r24 = new com sonar orchestrator build build runner", "r37 = com sonar orchestrator orchestrator r0", "$ r16 = r37 config", "specialinvoke r24 < init > $ r16", "r38 = com sonar orchestrator orchestrator r0", "r38 build runner = r24", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], []]}
{"nodes": ["r0 = @ this", "r1 = com sonar orchestrator orchestrator r0", "specialinvoke r1 configure license null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com sonar orchestrator orchestrator builder r0", "$ r2 = r6 distribution", "$ r3 = java util object require non null r1", "$ r4 = com sonar orchestrator locator location $ r3", "$ r2 add plugin location $ r4", "r7 = com sonar orchestrator orchestrator builder r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ z0 = r1 be empty", "if $ z0 == 0 goto label2", "label r7 = spoon compiler builder source option r0", "$ r2 = r7 myself", "$ r3 = spoon compiler builder source option $ r2", "return $ r3", "if $ z0 == 0 goto label2", "label $ r4 = java io file path separator", "$ r5 = r1 split $ r4", "r8 = spoon compiler builder source option r0", "$ r6 = r8 source $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r15 = spoon contract verifier r0", "$ r5 = r15 _root package", "r13 = new spoon reflect visitor filter type filter", "specialinvoke r13 < init > class \\ `` lspoon reflect code ct assignment \\ ``", "r16 = spoon reflect visitor filter r13", "$ r6 = $ r5 get element r16", "r1 = $ r6 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r7 = r1 next", "r2 = spoon reflect code ct assignment $ r7", "r3 = r2 get assign", "$ z1 = r3 instanceof spoon reflect code ct field write", "if $ z1 ! = 0 goto label2", "$ z2 = r3 instanceof spoon reflect code ct variable write", "if $ z2 ! = 0 goto label2", "$ z3 = r3 instanceof spoon reflect code ct array write", "if $ z3 ! = 0 goto label2", "r14 = new java lang assertion error", "$ r9 = r2 get position", "$ r10 = r2 to string", "$ r11 = r3 get class", "$ r12 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string spoon reflect cu source position java lang string java lang class > $ r9 $ r10 $ r11 java lang invoke string concat factory make concat with constant \\ `` assignment contract error\\u0001\\n\\u0001\\n assign be \\u0001\\ ``", "specialinvoke r14 < init > $ r12", "throw r14", "if $ z3 ! = 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = spoon contract verifier r0", "$ r1 = r2 _root package", "r3 = spoon contract verifier r0", "r4 = spoon reflect declaration ct element $ r1", "r3 check parent consistency r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = spoon metamodel metamodel property r0", "$ r1 = r4 item value type", "if $ r1 ! = null goto label1", "r5 = spoon metamodel metamodel property r0", "r5 get type of field", "label r6 = spoon metamodel metamodel property r0", "$ r2 = r6 item value type", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = spoon pattern internal default generator r0", "$ r4 = r5 factory", "r1 get value a $ r4 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r10 = @ parameter0", "r1 = @ parameter1", "if r10 ! = null goto label1", "return", "if r10 ! = null goto label1", "label $ r3 = r10 get class", "$ z0 = $ r3 be array", "if $ z0 == 0 goto label2", "$ r9 = java lang object [ ] r10", "r10 = java util array a list $ r9", "label r11 = new spoon pattern internal matcher match scanner", "r12 = spoon pattern pattern r0", "$ r5 = r12 model value resolver", "specialinvoke r11 < init > $ r5 r1", "$ z1 = r10 instanceof java util collection", "if $ z1 == 0 goto label3", "$ r8 = java util collection r10", "r11 scan null $ r8", "goto label5", "label return", "if $ z1 == 0 goto label3", "label $ z2 = r10 instanceof java util map", "if $ z2 == 0 goto label4", "$ r7 = java util map r10", "r11 scan null $ r7", "if $ z2 == 0 goto label4", "label $ r6 = spoon reflect declaration ct element r10", "r11 scan null $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new spoon pattern inlined statement configurator", "r5 = spoon pattern pattern builder r0", "specialinvoke r4 < init > r5", "r1 accept r4", "r6 = spoon pattern pattern builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = spoon pattern pattern parameter configurator r0", "r2 = r7 get current parameter", "r8 = spoon pattern pattern parameter configurator r0", "$ r3 = r8 query model", "$ r4 = pattern parameter configurator $ lambda_by name element_18__17 bootstrap $ r1", "$ r5 = $ r3 filter child $ r4", "r9 = spoon pattern pattern parameter configurator r0", "$ r6 = pattern parameter configurator $ lambda_by name element_19__22 bootstrap $ r9 r2", "$ r5 for each $ r6", "r10 = spoon pattern pattern parameter configurator r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = spoon processing abstract annotation processor r0", "$ r2 = r5 process annotation type", "$ r3 = r1 get name", "$ r2 remove $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new spoon refactoring refactoring exception", "$ r4 = r1 get simple name", "$ r5 = r2 get position", "$ r6 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string java lang string spoon reflect cu source position > $ r4 $ r5 java lang invoke string concat factory make concat with constant \\ `` the parameter \\u0001 can not be remove because it be use \\u0001 \\ ``", "specialinvoke r7 < init > $ r6", "r8 = java lang throwable r7", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = spoon refactoring method call state r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = spoon reflect factory class factory r0", "$ i0 = r12 have inner type r1", "if $ i0 < = 0 goto label1", "r13 = spoon reflect factory class factory r0", "$ r9 = r13 get declare type name r1", "r14 = spoon reflect factory class factory r0", "r2 = r14 create $ r9", "r15 = spoon reflect factory class factory r0", "$ r10 = r15 get simple name r1", "r16 = spoon reflect factory class factory r0", "$ r11 = r16 create r2 $ r10", "return $ r11", "if $ i0 < = 0 goto label1", "label r17 = spoon reflect factory class factory r0", "$ r3 = r17 factory", "$ r4 = $ r3 package", "r18 = spoon reflect factory class factory r0", "$ r5 = r18 get package name r1", "$ r6 = $ r4 get or create $ r5", "r19 = spoon reflect factory class factory r0", "$ r7 = r19 get simple name r1", "r20 = spoon reflect factory class factory r0", "$ r8 = r20 create $ r6 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = spoon reflect factory code factory r0", "$ r3 = r13 factory", "$ r4 = $ r3 core", "r2 = $ r4 create local variable reference", "$ r5 = r1 get type", "if $ r5 ! = null goto label1", "$ r12 = null", "goto label2", "label r2 set type $ r12", "$ r8 = r1 get simple name", "r2 set simple name $ r8", "r14 = spoon reflect declaration ct element r1", "r2 set parent r14", "return r2", "if $ r5 ! = null goto label1", "label $ r6 = r1 get type", "$ r12 = $ r6 clone"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = spoon reflect factory compilation unit factory r0", "$ r2 = r8 cache compilation unit", "$ r3 = r1 get position", "$ r4 = $ r3 get compilation unit", "$ r5 = $ r4 get file", "$ r6 = $ r5 get absolute path", "$ r2 remove $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = spoon reflect factory compilation unit factory r0", "$ r2 = r5 cache compilation unit", "$ r3 = $ r2 remove r1", "$ r4 = spoon reflect cu compilation unit $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r12 = spoon reflect factory constructor factory r0", "$ r6 = r12 factory", "$ r7 = $ r6 core", "r5 = $ r7 create constructor", "r5 set modifier r2", "r5 set parameter r3", "r5 set thrown type r4", "r1 add constructor r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r8 = spoon reflect factory constructor factory r0", "r6 = r8 create r1 r2 r3 r4", "r9 = spoon reflect code ct statement r5", "r6 set body r9", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = spoon reflect factory enum factory r0", "$ r2 = r8 factory", "$ r3 = $ r2 package", "r9 = spoon reflect factory enum factory r0", "$ r4 = r9 get package name r1", "$ r5 = $ r3 get or create $ r4", "r10 = spoon reflect factory enum factory r0", "$ r6 = r10 get simple name r1", "r11 = spoon reflect factory enum factory r0", "$ r7 = r11 create $ r5 $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "r4 = spoon reflect factory package factory r0", "$ r3 = r4 create reference $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = spoon reflect factory type factory r0", "$ r1 = r3 boolean_primitive", "$ r2 = $ r1 clone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = spoon reflect factory type factory r0", "$ r1 = r3 long", "$ r2 = $ r1 clone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = spoon reflect factory type factory r0", "$ r1 = r3 long_primitive", "$ r2 = $ r1 clone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = spoon reflect factory type factory r0", "r2 = r5 create reference r1", "$ r3 = r2 get package", "$ r3 set implicit 1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = spoon reflect visitor chain ct query impl r0", "r1 log = z0", "r2 = spoon reflect visitor chain ct query impl r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = spoon reflect visitor chain ct query impl r0", "r1 terminate = 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = spoon reflect visitor ct deque scanner r0", "$ r3 = r7 element deque", "$ r4 = $ r3 pop", "r2 = spoon reflect declaration ct element $ r4", "if r2 == r1 goto label1", "r6 = new java lang runtime exception", "specialinvoke r6 < init > \\ `` inconsistent stack\\ ``", "throw r6", "if r2 == r1 goto label1", "label specialinvoke r0 exit r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = spoon reflect visitor filter super inheritance hierarchy function r0", "$ r2 = r5 listener", "if $ r2 == null goto label1", "r4 = new spoon spoon exception", "specialinvoke r4 < init > \\ `` can not register listener on instance create with constructor which accept the set < string > use the no parameter constructor if listener have to be registered\\ ``", "r6 = java lang throwable r4", "throw r6", "if $ r2 == null goto label1", "label r7 = spoon reflect visitor filter super inheritance hierarchy function r0", "r7 listener = r1", "r8 = spoon reflect visitor filter super inheritance hierarchy function r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 filter child r1", "$ r3 = $ r2 list", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r6 = new spoon reflect visitor filter type filter", "specialinvoke r6 < init > class \\ `` lspoon reflect reference ct reference \\ ``", "r7 = spoon reflect visitor filter r6", "$ r3 = r0 filter child r7", "$ r4 = $ r3 filter child r1", "$ r5 = $ r4 list", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = spoon support compiler spoon pom r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = spoon support modelobs action delete action r0", "$ r1 = r2 old value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 get factory", "$ r4 = $ r3 core", "r2 = $ r4 create statement list", "r2 add statement r1", "spoon support reflect code ct statement impl insert before r0 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r8 = spoon support reflect cu position source position impl r0", "r1 = r8 get line separator position", "if r1 ! = null goto label1", "return -1", "if r1 ! = null goto label1", "label i1 = lengthof r1", "if i1 ! = 0 goto label2", "return i0", "if i1 ! = 0 goto label2", "label $ i2 = r1 [ 0 ]", "if $ i2 < = i0 goto label3", "label i16 = 0", "label $ i3 = lengthof r1", "$ i4 = $ i3 - 1", "if i16 > = $ i4 goto label6", "$ i11 = r1 [ i16 ]", "if $ i11 > = i0 goto label5", "$ i12 = i16 + 1", "$ i13 = r1 [ $ i12 ]", "if $ i13 < = i0 goto label5", "$ i14 = r1 [ i16 ]", "$ i15 = i0 - $ i14", "return $ i15", "if $ i13 < = i0 goto label5", "label i16 = i16 + 1", "goto label4", "if i16 > = $ i4 goto label6", "label i17 = 0", "i18 = 0", "r9 = spoon support reflect cu position source position impl r0", "$ r3 = r9 get compilation unit", "if $ r3 == null goto label9", "r10 = spoon support reflect cu position source position impl r0", "$ r4 = r10 get compilation unit", "$ r5 = $ r4 get factory", "$ r6 = $ r5 get environment", "i18 = $ r6 get tabulation size", "r11 = spoon support reflect cu position source position impl r0", "$ r7 = r11 get compilation unit", "r2 = $ r7 get original source code", "i19 = r1 [ i16 ]", "label if i19 > = i0 goto label9", "$ c10 = r2 char at i19", "if $ c10 ! = 9 goto label8", "i17 = i17 + 1", "label i19 = i19 + 1", "goto label7", "label if i19 > = i0 goto label9", "label $ i5 = r1 [ i16 ]", "$ i6 = i0 - $ i5", "$ i8 = $ i6 - i17", "$ i7 = i17 * i18", "$ i9 = $ i8 + $ i7", "return $ i9"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof spoon reflect code ct expression", "if $ z0 == 0 goto label1", "$ r4 = spoon reflect code ct expression r0", "$ r5 = $ r4 partially evaluate", "r1 = spoon reflect code ct expression $ r5", "$ r6 = spoon support reflect eval eval helper get correspond runtime object r1", "return $ r6", "if $ z0 == 0 goto label1", "label r7 = new spoon spoon exception", "$ r3 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string spoon reflect declaration ct element > r0 java lang invoke string concat factory make concat with constant \\ `` not possible to convert to runtime object \\u0001\\ ``", "specialinvoke r7 < init > $ r3", "r8 = java lang throwable r7", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = spoon support reflect reference ct field reference impl r0", "$ z0 = r1 stat", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new java util array list", "specialinvoke $ r3 < init >", "r8 = r0 get declare method", "i0 = lengthof r8", "i1 = 0", "label if i1 > = i0 goto label2", "r9 = r8 [ i1 ]", "$ r6 = r1 method", "$ r7 = $ r6 create reference r9", "$ r3 add $ r7", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r10 = r0 get declare constructor", "i2 = lengthof r10", "i3 = 0", "label if i3 > = i2 goto label4", "r11 = r10 [ i3 ]", "$ r4 = r1 constructor", "$ r5 = $ r4 create reference r11", "$ r3 add $ r5", "i3 = i3 + 1", "goto label3", "label if i3 > = i2 goto label4", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get generic parameter type", "i0 = lengthof $ r1", "$ r2 = r0 get parameter type", "i1 = lengthof $ r2", "if i0 ! = i1 goto label1", "r11 = newarray spoon support visitor java reflect rt parameter [ i1 ]", "b5 = 0", "goto label4", "label i6 = 0", "label $ r12 = r0 get generic parameter type", "$ i7 = lengthof $ r12", "if i6 > = $ i7 goto label6", "r14 = new spoon support visitor java reflect rt parameter", "$ r7 = r0 get parameter type", "$ i4 = i6 + b5", "$ r8 = $ r7 [ $ i4 ]", "$ r9 = r0 get generic parameter type", "$ r10 = $ r9 [ i6 ]", "specialinvoke r14 < init > null $ r8 $ r10 null r0 i6", "r11 [ i6 ] = r14", "i6 = i6 + 1", "goto label5", "if i6 > = $ i7 goto label6", "label return r11", "if i0 ! = i1 goto label1", "label $ i2 = i1 - 1", "if i0 ! = $ i2 goto label2", "r11 = newarray spoon support visitor java reflect rt parameter [ i0 ]", "b5 = 1", "if i0 ! = $ i2 goto label2", "label $ r3 = r0 get declare class", "$ z0 = $ r3 be enum", "if $ z0 == 0 goto label3", "$ i3 = i1 - 2", "if i0 ! = $ i3 goto label3", "label r13 = new spoon spoon exception", "$ r5 = dynamicinvoke \\ `` make concat with constants\\ `` < java lang string java lang reflect constructor int int > r0 i1 i0 java lang invoke string concat factory make concat with constant \\ `` error while analyze parameter of constructor \\u0001 #of parameter \\u0001 - #of generic parameter type \\u0001\\ ``", "specialinvoke r13 < init > $ r5", "r15 = java lang throwable r13", "throw r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = spoon support visitor sub inheritance hierarchy resolver r0", "$ r2 = r4 target super type", "$ r3 = r1 get qualify name", "$ r2 add $ r3", "r5 = spoon support visitor sub inheritance hierarchy resolver r0", "$ z1 = r5 have super interface", "if $ z1 ! = 0 goto label1", "$ z2 = r1 be interface", "r6 = spoon support visitor sub inheritance hierarchy resolver r0", "r6 have super interface = $ z2", "label r7 = spoon support visitor sub inheritance hierarchy resolver r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org springframework aop aspectj abstract aspect j advice r0", "$ r4 = r7 get join point", "r8 = org springframework aop aspectj abstract aspect j advice r0", "$ r5 = r8 arg bind $ r4 r1 r2 r3", "r9 = org springframework aop aspectj abstract aspect j advice r0", "$ r6 = r9 invoke advice method with give args $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework aop aspectj annotation instantiation model aware pointcut advisor impl r0", "$ r1 = r2 pointcut", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework aop config simple bean factory aware aspect instance factory r0", "r2 aspect bean name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org springframework aop target singleton target source", "specialinvoke r3 < init > r1", "r4 = org springframework aop framework advise support r0", "r5 = org springframework aop target source r3", "r4 set target source r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` interface must not be null\\ ``", "r5 = org springframework aop framework advise support r0", "$ r4 = r5 interface", "$ r4 clear", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r6 = org springframework aop framework advise support r0", "r6 add interface r3", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == r1 goto label1", "$ z0 = org springframework aop framework aop proxy utils equal proxied interface r0 r1", "if $ z0 == 0 goto label2", "$ z1 = org springframework aop framework aop proxy utils equal advisor r0 r1", "if $ z1 == 0 goto label2", "$ r2 = r0 get target source", "$ r3 = r1 get target source", "$ z2 = $ r2 equal $ r3", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 get proxied interface", "$ r3 = r1 get proxied interface", "$ z0 = java util array equal $ r2 $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework aop framework autoproxy default advisor auto proxy creator r0", "$ r1 = r2 advisor bean name prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = class \\ `` lorg springframework aop framework jdk dynamic aop proxy \\ ``", "$ i0 = $ r1 hash code", "$ i1 = $ i0 * 13", "r4 = org springframework aop framework jdk dynamic aop proxy r0", "$ r2 = r4 advise", "$ r3 = $ r2 get target source", "$ i2 = $ r3 hash code", "$ i3 = $ i1 + $ i2", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework aop framework proxy config r0", "$ z0 = r1 expose proxy", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework aop framework proxy config r0", "$ z0 = r1 frozen", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` aop proxy factory must not be null\\ ``", "r2 = org springframework aop framework proxy creator support r0", "r2 aop proxy factory = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework aop framework abstract singleton proxy factory bean r0", "$ r1 = r5 proxy", "if $ r1 ! = null goto label1", "r4 = new org springframework bean factory factory bean not initialize exception", "specialinvoke r4 < init >", "r6 = java lang throwable r4", "throw r6", "if $ r1 ! = null goto label1", "label r7 = org springframework aop framework abstract singleton proxy factory bean r0", "$ r2 = r7 proxy", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have text r1 \\ `` \\'exit message\\ ' must not be empty\\ ``", "r2 = org springframework aop interceptor customizable trace interceptor r0", "specialinvoke r2 check for invalid placeholder r1", "org springframework util assert do not contain r1 \\ `` $ [ exception ] \\", "r3 = org springframework aop interceptor customizable trace interceptor r0", "r3 exit message = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have text r1 \\ `` \\'exception message\\ ' must not be empty\\ ``", "r2 = org springframework aop interceptor customizable trace interceptor r0", "specialinvoke r2 check for invalid placeholder r1", "org springframework util assert do not contain r1 \\ `` $ [ return value ] \\", "org springframework util assert do not contain r1 \\ `` $ [ invocation time ] \\", "r3 = org springframework aop interceptor customizable trace interceptor r0", "r3 exception message = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["$ r0 = org springframework aop interceptor expose invocation interceptor current invocation", "$ r1 = org springframework aop interceptor expose bean name advisor get bean name $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not empty r1 \\ `` \\'excluded patterns\\ ' must not be empty\\ ``", "$ i0 = lengthof r1", "$ r2 = newarray java lang string [ $ i0 ]", "r7 = org springframework aop support abstract regexp method pointcut r0", "r7 exclude pattern = $ r2", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r8 = org springframework aop support abstract regexp method pointcut r0", "$ r5 = r8 exclude pattern", "$ r4 = r1 [ i2 ]", "$ r6 = org springframework util string utils trim whitespace $ r4", "$ r5 [ i2 ] = $ r6", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label r9 = org springframework aop support abstract regexp method pointcut r0", "$ r3 = r9 exclude pattern", "r10 = org springframework aop support abstract regexp method pointcut r0", "r10 init exclude pattern representation $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org springframework util reflection utils be hash code method r0", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org springframework aop support aop utils can apply r0 r1 0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util assert not empty r0 \\ `` class filter array must not be empty\\ ``", "r2 = new org springframework aop support class filter $ union class filter", "specialinvoke r2 < init > r0", "r3 = org springframework aop class filter r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework aop support composable pointcut r0", "$ r2 = r4 class filter", "$ r3 = org springframework aop support class filter intersection $ r2 r1", "r5 = org springframework aop support composable pointcut r0", "r5 class filter = $ r3", "r6 = org springframework aop support composable pointcut r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new java util link list", "specialinvoke r5 < init >", "r6 = org springframework aop support name match method pointcut r0", "r6 map name = r5", "if r1 == null goto label1", "r7 = org springframework aop support name match method pointcut r0", "$ r3 = r7 map names", "$ r4 = java util array a list r1", "$ r3 add all $ r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework aop support name match method pointcut r0", "$ r2 = r3 map names", "$ r2 add r1", "r4 = org springframework aop support name match method pointcut r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 target bean name", "r5 = org springframework aop target abstract bean factory base target source r0", "r5 target bean name = $ r2", "$ r3 = r1 target class", "r6 = org springframework aop target abstract bean factory base target source r0", "r6 target class = $ r3", "$ r4 = r1 bean factory", "r7 = org springframework aop target abstract bean factory base target source r0", "r7 bean factory = $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework aop target common pool2 target source r0", "r1 max idle = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework aop target common pool2 target source r0", "$ l0 = r1 max wait", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework aop target common pool2 target source r0", "r1 block when exhaust = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework aop aspectj aspect j pointcut advisor r0", "$ r1 = r3 advice", "$ r2 = $ r1 get aspect name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = r0 goto label1", "return r2", "if r1 ! = r0 goto label1", "label $ i0 = org springframework bean property accessor utils get last nested property separator index r2", "$ i1 = $ i0 + 1", "$ r3 = r2 substring $ i1", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "specialinvoke r0 set attribute $ r2 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert be assignable r1 r0", "$ r2 = org springframework bean bean utils instantiate class r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org springframework bean factory annotation autowire by_name", "if r0 == $ r1 goto label1", "$ r2 = org springframework bean factory annotation autowire by_type", "if r0 ! = $ r2 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if r0 ! = $ r2 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework bean factory annotation autowired annotation bean post processor r0", "r1 require parameter value = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory annotation custom autowire configurer r0", "r2 custom qualifier type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework bean factory annotation qualifier annotation autowire candidate resolver r0", "$ r4 = r6 qualifier type", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r5 = r2 next", "r3 = java lang class $ r5", "$ z1 = r1 equal r3", "if $ z1 ! = 0 goto label2", "$ z2 = r1 be annotation present r3", "if $ z2 == 0 goto label3", "label return 1", "if $ z2 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r7 = org springframework bean factory bean creation exception r0", "$ r1 = r7 related cause", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label r8 = org springframework bean factory bean creation exception r0", "$ r3 = r8 related cause", "r9 = org springframework bean factory bean creation exception r0", "$ r2 = r9 related cause", "$ i0 = $ r2 size", "$ r4 = newarray java lang throwable [ $ i0 ]", "$ r5 = $ r3 to array $ r4", "$ r6 = java lang throwable [ ] $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory can not load bean class exception r0", "$ r1 = r2 resource description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org springframework bean factory config abstract factory bean r0", "r1 = r6 get bean factory", "$ z0 = r1 instanceof org springframework bean factory config configurable bean factory", "if $ z0 == 0 goto label1", "$ r3 = org springframework bean factory config configurable bean factory r1", "$ r4 = $ r3 get type converter", "return $ r4", "if $ z0 == 0 goto label1", "label r5 = new org springframework bean simple type converter", "specialinvoke r5 < init >", "r7 = org springframework bean type converter r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory config abstract factory bean r0", "$ z0 = r2 be singleton", "if $ z0 == 0 goto label1", "r3 = org springframework bean factory config abstract factory bean r0", "$ r1 = r3 singleton instance", "r4 = org springframework bean factory config abstract factory bean r0", "r4 destroy instance $ r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = new org springframework bean factory config constructor argument value $ value holder", "specialinvoke r3 < init > r1", "r4 = org springframework bean factory config constructor argument value r0", "r4 add indexed argument value i0 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org springframework bean factory config constructor argument value r0", "$ r1 = r3 indexed argument value", "$ r2 = java lang integer value of i0", "$ z0 = $ r1 contain key $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory config dependency descriptor r0", "$ r1 = r2 field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework bean factory config dependency descriptor r0", "$ i0 = r3 nest level", "$ i1 = $ i0 + 1", "r4 = org springframework bean factory config dependency descriptor r0", "r4 nest level = $ i1", "r5 = org springframework bean factory config dependency descriptor r0", "$ r1 = r5 method parameter", "if $ r1 == null goto label1", "r6 = org springframework bean factory config dependency descriptor r0", "$ r2 = r6 method parameter", "$ r2 increase nest level", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = new org springframework bean factory config dependency descriptor $ 1", "r3 = org springframework bean factory config dependency descriptor r0", "r4 = org springframework bean factory config dependency descriptor r0", "specialinvoke r2 < init > r3 r4", "r5 = org springframework bean factory config dependency descriptor r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework bean factory config deprecate bean warner r0", "$ r2 = r3 logger", "$ r2 warn r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework util string utils trim all whitespace r1", "r3 = org springframework bean factory config field retrieve factory bean r0", "r3 target field = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory config placeholder configurer support r0", "r2 bean name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = null", "r6 = r1", "i0 = r1 last index of 47", "if i0 == -1 goto label1", "r5 = r1 substring 0 i0", "$ i1 = i0 + 1", "r6 = r1 substring $ i1", "label r8 = org springframework bean factory config preference placeholder configurer r0", "$ r3 = r8 user prefs", "r9 = org springframework bean factory config preference placeholder configurer r0", "r7 = r9 resolve placeholder r5 r6 $ r3", "if r7 ! = null goto label2", "r10 = org springframework bean factory config preference placeholder configurer r0", "$ r4 = r10 system prefs", "r11 = org springframework bean factory config preference placeholder configurer r0", "r7 = r11 resolve placeholder r5 r6 $ r4", "if r7 ! = null goto label2", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework util string utils trim all whitespace r1", "r3 = org springframework bean factory config property path factory bean r0", "r3 target bean name = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework bean factory config property resource configurer r0", "r1 order = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory config service locator factory bean r0", "r2 service locator interface = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = class \\ `` ljava lang exception \\ ``", "$ z0 = $ r3 be assignable from r1", "if $ z0 ! = 0 goto label1", "r12 = new java lang illegal argument exception", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r6 = r11 append \\ `` service locator exception [ \\ ``", "$ r7 = r1 get name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` ] be not a subclass of exception\\ ``", "$ r10 = $ r9 to string", "specialinvoke r12 < init > $ r10", "throw r12", "if $ z0 ! = 0 goto label1", "label r13 = org springframework bean factory config service locator factory bean r0", "$ r2 = r13 determine service locator exception constructor r1", "r14 = org springframework bean factory config service locator factory bean r0", "r14 service locator exception constructor = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory config type string value r0", "$ r1 = r2 target type", "$ z0 = $ r1 instanceof java lang class", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework bean factory config yaml processor r0", "r1 match default = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory groovy groovy bean definition reader r0", "r2 bind = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 set delegate r0", "r1 call", "r3 = org springframework bean factory groovy groovy bean definition reader r0", "specialinvoke r3 finalize deferred property", "r4 = org springframework bean factory groovy groovy bean definition reader r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = org springframework bean factory parse composite component definition r0", "$ r2 = r6 nest component", "r7 = org springframework bean factory parse composite component definition r0", "$ r1 = r7 nest component", "$ i0 = $ r1 size", "$ r3 = newarray org springframework bean factory parse component definition [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = org springframework bean factory parse component definition [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean factory support abstract bean definition r0", "$ i0 = r1 dependency check", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework bean factory support abstract bean definition r0", "r1 primary = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean factory support abstract bean definition r0", "$ z0 = r1 primary", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new java util link hash set", "r5 = org springframework bean factory support abstract bean definition r0", "$ r2 = r5 qualifier", "$ r3 = $ r2 value", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory support abstract bean factory r0", "$ r1 = r2 bean post processor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework bean factory support abstract bean factory r0", "$ r3 = r5 prototype currently in creation", "r2 = $ r3 get", "if r2 == null goto label2", "$ z0 = r2 equal r1", "if $ z0 ! = 0 goto label1", "$ z1 = r2 instanceof java util set", "if $ z1 == 0 goto label2", "$ r4 = java util set r2", "$ z2 = $ r4 contain r1", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org springframework bean property editor registry support", "if $ z0 == 0 goto label01", "$ r31 = org springframework bean property editor registry support r1", "goto label02", "label if $ r31 == null goto label03", "$ r31 use config value editor", "label r41 = org springframework bean factory support abstract bean factory r0", "$ r4 = r41 property editor registrars", "$ z1 = $ r4 be empty", "if $ z1 ! = 0 goto label11", "r42 = org springframework bean factory support abstract bean factory r0", "$ r13 = r42 property editor registrars", "r32 = $ r13 iterator", "label $ z7 = r32 have next", "if $ z7 == 0 goto label11", "$ r14 = r32 next", "r33 = org springframework bean property editor registrar $ r14", "label r33 register custom editor r1", "label goto label10", "label goto label04", "if $ z7 == 0 goto label11", "label r51 = org springframework bean factory support abstract bean factory r0", "$ r5 = r51 custom editor", "$ z2 = $ r5 be empty", "if $ z2 ! = 0 goto label13", "r52 = org springframework bean factory support abstract bean factory r0", "$ r6 = r52 custom editor", "$ r7 = $ r6 entry set", "r36 = $ r7 iterator", "label $ z3 = r36 have next", "if $ z3 == 0 goto label13", "$ r8 = r36 next", "r37 = java util map $ entry $ r8", "$ r9 = r37 get key", "r38 = java lang class $ r9", "$ r10 = r37 get value", "r39 = java lang class $ r10", "$ r11 = org springframework bean bean utils instantiate class r39", "$ r12 = java bean property editor $ r11", "r1 register custom editor r38 $ r12", "goto label12", "if $ z3 == 0 goto label13", "label return", "if $ z0 == 0 goto label01", "label $ r31 = null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework bean factory support abstract bean factory r0", "$ r2 = r4 merge bean definition", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework bean factory support bean definition builder r0", "$ r2 = r3 bean definition", "$ r2 set scope r1", "r4 = org springframework bean factory support bean definition builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == r0 goto label1", "$ z0 = r1 instanceof org springframework bean factory support bean definition resource", "if $ z0 == 0 goto label2", "$ r2 = org springframework bean factory support bean definition resource r1", "$ r4 = $ r2 bean definition", "r5 = org springframework bean factory support bean definition resource r0", "$ r3 = r5 bean definition", "$ z1 = $ r4 equal $ r3", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 have target type", "if $ z0 == 0 goto label1", "$ r5 = r1 get target type", "return $ r5", "if $ z0 == 0 goto label1", "label r6 = org springframework bean factory support bean definition value resolver r0", "$ r2 = r6 bean factory", "$ r3 = $ r2 get bean class loader", "$ r4 = r1 resolve target type $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r7 = org springframework bean factory support default listable bean factory serializable factory", "r9 = new java lang ref weak reference", "specialinvoke r9 < init > r0", "$ r7 put r1 r9", "goto label2", "label r12 = org springframework bean factory support default listable bean factory r0", "r12 serialization id = r1", "return", "if r1 == null goto label1", "label r10 = org springframework bean factory support default listable bean factory r0", "$ r2 = r10 serialization id", "if $ r2 == null goto label2", "$ r4 = org springframework bean factory support default listable bean factory serializable factory", "r11 = org springframework bean factory support default listable bean factory r0", "$ r3 = r11 serialization id", "$ r4 remove $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework bean factory support default listable bean factory r0", "r2 = r5 get dependency comparator", "$ z0 = r2 instanceof org springframework core order comparator", "if $ z0 == 0 goto label1", "$ r3 = org springframework core order comparator r2", "$ r4 = $ r3 get priority r1", "return $ r4", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org springframework bean factory support default singleton bean registry r0", "$ r4 = r13 singleton object", "entermonitor $ r4", "label r14 = org springframework bean factory support default singleton bean registry r0", "$ r5 = r14 singleton object", "$ r5 remove r1", "r15 = org springframework bean factory support default singleton bean registry r0", "$ r7 = r15 singleton factory", "$ r7 remove r1", "r16 = org springframework bean factory support default singleton bean registry r0", "$ r9 = r16 early singleton object", "$ r9 remove r1", "r17 = org springframework bean factory support default singleton bean registry r0", "$ r11 = r17 register singleton", "$ r11 remove r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework bean factory support default singleton bean registry r0", "$ r2 = r3 dependent bean map", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org springframework bean factory support default singleton bean registry r0", "$ r3 = r7 dependent bean map", "$ r4 = $ r3 get r1", "r2 = java util set $ r4", "if r2 ! = null goto label1", "$ r6 = newarray java lang string [ 0 ]", "return $ r6", "if r2 ! = null goto label1", "label $ r5 = org springframework util string utils to string array r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework bean factory support factory bean registry support r0", "$ r3 = r6 factory bean object cache", "r2 = $ r3 get r1", "$ r4 = org springframework bean factory support factory bean registry support null_object", "if r2 == $ r4 goto label1", "$ r5 = r2", "goto label2", "label return $ r5", "if r2 == $ r4 goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 instanceof org springframework bean factory factory bean", "if $ z0 ! = 0 goto label1", "r12 = new org springframework bean factory bean creation exception", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r6 = r11 append \\ `` bean instance of type [ \\ ``", "$ r7 = r2 get class", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` ] be not a factory bean\\ ``", "$ r10 = $ r9 to string", "specialinvoke r12 < init > r1 $ r10", "r13 = java lang throwable r12", "throw r13", "if $ z0 ! = 0 goto label1", "label $ r3 = org springframework bean factory factory bean r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "$ r1 = java security access controller get context", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory support manage list r0", "r2 element type name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean factory support method override r0", "$ z0 = r1 overload", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory support method override r0", "$ r1 = r2 override", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r34 = @ parameter1", "r2 = @ parameter2", "if r34 ! = null goto label01", "r34 = \\ `` \\ ``", "label i2 = 0", "$ r8 = r1 key set", "r3 = $ r8 iterator", "label $ z5 = r3 have next", "if $ z5 == 0 goto label10", "r4 = r3 next", "$ z0 = r4 instanceof java lang string", "if $ z0 ! = 0 goto label03", "r36 = new java lang illegal argument exception", "r35 = new java lang string builder", "specialinvoke r35 < init >", "$ r30 = r35 append \\ `` illegal key [ \\ ``", "$ r31 = $ r30 append r4", "$ r32 = $ r31 append \\ `` ] only string allowed\\ ``", "$ r33 = $ r32 to string", "specialinvoke r36 < init > $ r33", "throw r36", "if $ z0 ! = 0 goto label03", "label r5 = java lang string r4", "$ z1 = r5 start with r34", "if $ z1 == 0 goto label09", "$ i1 = r34 length", "r6 = r5 substring $ i1", "i0 = r6 index of \\ `` [ \\ ``", "if i0 == -1 goto label04", "i4 = r6 last index of \\ `` \\", "goto label05", "label if i4 == -1 goto label08", "r7 = r6 substring 0 i4", "r40 = org springframework bean factory support property bean definition reader r0", "$ r16 = r40 logger", "$ z3 = $ r16 be debug enabled", "if $ z3 == 0 goto label06", "r41 = org springframework bean factory support property bean definition reader r0", "$ r23 = r41 logger", "r37 = new java lang string builder", "specialinvoke r37 < init >", "$ r24 = r37 append \\ `` found bean name \\'\\ ``", "$ r25 = $ r24 append r7", "$ r26 = $ r25 append \\ `` \\'\\ ``", "$ r27 = $ r26 to string", "$ r23 debug $ r27", "label r42 = org springframework bean factory support property bean definition reader r0", "$ r17 = r42 get registry", "$ z4 = $ r17 contain bean definition r7", "if $ z4 ! = 0 goto label07", "r38 = new java lang string builder", "specialinvoke r38 < init >", "$ r19 = r38 append r34", "$ r20 = $ r19 append r7", "$ r21 = $ r20 to string", "r43 = org springframework bean factory support property bean definition reader r0", "r43 register bean definition r7 r1 $ r21 r2", "i2 = i2 + 1", "label goto label09", "label goto label02", "label if i4 == -1 goto label08", "label r44 = org springframework bean factory support property bean definition reader r0", "$ r9 = r44 logger", "$ z2 = $ r9 be debug enabled", "if $ z2 == 0 goto label09", "r45 = org springframework bean factory support property bean definition reader r0", "$ r11 = r45 logger", "r39 = new java lang string builder", "specialinvoke r39 < init >", "$ r12 = r39 append \\ `` invalid bean name and property [ \\ ``", "$ r13 = $ r12 append r6", "$ r14 = $ r13 append \\ `` ] \\ ``", "$ r15 = $ r14 to string", "$ r11 debug $ r15", "if i0 == -1 goto label04", "label i4 = r6 last index of \\ `` \\ ``", "if $ z5 == 0 goto label10", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org springframework bean factory support static listable bean factory r0", "$ r3 = r5 bean", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework core convention attribute name to property name r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get child node", "i1 = 0", "label $ i0 = r3 get length", "if i1 > = $ i0 goto label3", "r4 = r3 item i1", "r6 = org springframework bean factory xml bean definition parser delegate r0", "$ z0 = specialinvoke r6 be candidate element r4", "if $ z0 == 0 goto label2", "r7 = org springframework bean factory xml bean definition parser delegate r0", "$ z1 = r7 node name equal r4 \\ `` constructor-arg\\ ``", "if $ z1 == 0 goto label2", "$ r5 = org w3c dom element r4", "r8 = org springframework bean factory xml bean definition parser delegate r0", "r8 parse constructor arg element $ r5 r2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get child node", "i1 = 0", "label $ i0 = r3 get length", "if i1 > = $ i0 goto label3", "r4 = r3 item i1", "r6 = org springframework bean factory xml bean definition parser delegate r0", "$ z0 = specialinvoke r6 be candidate element r4", "if $ z0 == 0 goto label2", "r7 = org springframework bean factory xml bean definition parser delegate r0", "$ z1 = r7 node name equal r4 \\ `` property\\ ``", "if $ z1 == 0 goto label2", "$ r5 = org w3c dom element r4", "r8 = org springframework bean factory xml bean definition parser delegate r0", "r8 parse property element $ r5 r2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get child node", "i1 = 0", "label $ i0 = r3 get length", "if i1 > = $ i0 goto label3", "r4 = r3 item i1", "r6 = org springframework bean factory xml bean definition parser delegate r0", "$ z0 = specialinvoke r6 be candidate element r4", "if $ z0 == 0 goto label2", "r7 = org springframework bean factory xml bean definition parser delegate r0", "$ z1 = r7 node name equal r4 \\ `` qualifier\\ ``", "if $ z1 == 0 goto label2", "$ r5 = org w3c dom element r4", "r8 = org springframework bean factory xml bean definition parser delegate r0", "r8 parse qualifier element $ r5 r2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get child node", "i1 = 0", "label $ i0 = r3 get length", "if i1 > = $ i0 goto label3", "r4 = r3 item i1", "r12 = org springframework bean factory xml bean definition parser delegate r0", "$ z0 = specialinvoke r12 be candidate element r4", "if $ z0 == 0 goto label2", "r13 = org springframework bean factory xml bean definition parser delegate r0", "$ z1 = r13 node name equal r4 \\ `` lookup-method\\ ``", "if $ z1 == 0 goto label2", "r5 = org w3c dom element r4", "r6 = r5 get attribute \\ `` name\\ ``", "r7 = r5 get attribute \\ `` bean\\ ``", "r11 = new org springframework bean factory support lookup override", "specialinvoke r11 < init > r6 r7", "r14 = org springframework bean factory xml bean definition parser delegate r0", "$ r10 = r14 extract source r5", "r11 set source $ r10", "r15 = org springframework bean factory support method override r11", "r2 add override r15", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean factory xml document default definition r0", "r2 merge = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory xml document default definition r0", "$ r1 = r2 dependency check", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory xml document default definition r0", "$ r1 = r2 init method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory xml document default definition r0", "$ r1 = r2 destroy method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org springframework core io support encode resource", "specialinvoke r3 < init > r1", "r4 = org springframework bean factory xml xml bean definition reader r0", "$ i0 = r4 load bean definition r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org springframework bean factory xml xml bean definition reader r0", "$ r3 = r7 document loader", "r8 = org springframework bean factory xml xml bean definition reader r0", "$ r4 = r8 get entity resolver", "r9 = org springframework bean factory xml xml bean definition reader r0", "$ r5 = r9 error handler", "r10 = org springframework bean factory xml xml bean definition reader r0", "$ i0 = r10 get validation mode for resource r2", "r11 = org springframework bean factory xml xml bean definition reader r0", "$ z0 = r11 be namespace aware", "$ r6 = $ r3 load document r1 $ r4 $ r5 $ i0 $ z0", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework bean factory xml xml bean definition reader r0", "$ r1 = r4 namespace handler resolver", "if $ r1 ! = null goto label1", "r5 = org springframework bean factory xml xml bean definition reader r0", "$ r3 = r5 create default namespace handler resolver", "r6 = org springframework bean factory xml xml bean definition reader r0", "r6 namespace handler resolver = $ r3", "label r7 = org springframework bean factory xml xml bean definition reader r0", "$ r2 = r7 namespace handler resolver", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean invalid property exception r0", "$ r1 = r2 property name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label2", "$ r4 = r1 entry set", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = java util map $ entry $ r5", "r11 = new org springframework bean property value", "$ r7 = r3 get key", "$ r8 = $ r7 to string", "$ r9 = r3 get value", "specialinvoke r11 < init > $ r8 $ r9", "r12 = org springframework bean mutable property value r0", "r12 add property value r11", "goto label1", "if $ z0 == 0 goto label2", "label r13 = org springframework bean mutable property value r0", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean mutable property value r0", "r1 convert = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "r1 = newarray java lang string [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r0", "if i2 > = $ i1 goto label3", "$ r2 = r0 [ i2 ]", "$ r3 = org springframework bean property accessor utils canonical property name $ r2", "r1 [ i2 ] = $ r3", "i2 = i2 + 1", "goto label2", "if i2 > = $ i1 goto label3", "label return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r2 == null goto label01", "$ r26 = org springframework bean property accessor utils get property name r2", "goto label02", "label r3 = $ r26", "r31 = org springframework bean property editor registry support r0", "$ r8 = r31 custom editor", "if $ r8 == null goto label04", "r32 = org springframework bean property editor registry support r0", "$ r19 = r32 custom editor", "$ r20 = $ r19 entry set", "r27 = $ r20 iterator", "label $ z3 = r27 have next", "if $ z3 == 0 goto label04", "$ r21 = r27 next", "r28 = java util map $ entry $ r21", "$ r22 = r28 get key", "$ r23 = java lang class $ r22", "$ r24 = r28 get value", "$ r25 = java bean property editor $ r24", "r1 register custom editor $ r23 $ r25", "goto label03", "if $ z3 == 0 goto label04", "label r33 = org springframework bean property editor registry support r0", "$ r9 = r33 custom editor for path", "if $ r9 == null goto label10", "r34 = org springframework bean property editor registry support r0", "$ r10 = r34 custom editor for path", "$ r11 = $ r10 entry set", "r29 = $ r11 iterator", "label $ z0 = r29 have next", "if $ z0 == 0 goto label10", "$ r12 = r29 next", "r30 = java util map $ entry $ r12", "$ r13 = r30 get key", "r4 = java lang string $ r13", "$ r14 = r30 get value", "r5 = org springframework bean property editor registry support $ custom editor holder $ r14", "if r2 == null goto label08", "i0 = org springframework bean property accessor utils get first nest property separator index r4", "if i0 == -1 goto label07", "r6 = r4 substring 0 i0", "$ i1 = i0 + 1", "r7 = r4 substring $ i1", "$ z1 = r6 equal r2", "if $ z1 ! = 0 goto label06", "$ z2 = r6 equal r3", "if $ z2 == 0 goto label07", "label $ r17 = org springframework bean property editor registry support $ custom editor holder access $ 200 r5", "$ r18 = org springframework bean property editor registry support $ custom editor holder access $ 300 r5", "r1 register custom editor $ r17 r7 $ r18", "label goto label09", "label goto label05", "if r2 == null goto label08", "label $ r15 = org springframework bean property editor registry support $ custom editor holder access $ 200 r5", "$ r16 = org springframework bean property editor registry support $ custom editor holder access $ 300 r5", "r1 register custom editor $ r15 r4 $ r16", "if $ z0 == 0 goto label10", "label return", "if r2 == null goto label01", "label $ r26 = null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework bean propertyeditors custom date editor r0", "$ r2 = r5 get value", "r1 = java util date $ r2", "if r1 == null goto label1", "r6 = org springframework bean propertyeditors custom date editor r0", "$ r3 = r6 date format", "$ r4 = $ r3 format r1", "goto label2", "label return $ r4", "if r1 == null goto label1", "label $ r4 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework bean propertyeditors custom map editor r0", "r2 set value r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof java lang number", "if $ z0 == 0 goto label1", "$ r3 = java lang number r1", "r5 = org springframework bean propertyeditors custom number editor r0", "$ r2 = r5 number class", "$ r4 = org springframework util number utils convert number to target class $ r3 $ r2", "specialinvoke r0 set value $ r4", "goto label2", "label return", "if $ z0 == 0 goto label1", "label specialinvoke r0 set value r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org springframework bean property match for field r0 r1 2", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean support paged list holder r0", "$ r1 = r2 sort", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework bean support paged list holder r0", "$ i1 = r1 page size", "if i0 == $ i1 goto label1", "r2 = org springframework bean support paged list holder r0", "r2 page size = i0", "r3 = org springframework bean support paged list holder r0", "$ z0 = r3 new page set", "if $ z0 ! = 0 goto label1", "r4 = org springframework bean support paged list holder r0", "r4 page = 0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean support paged list holder r0", "$ i0 = r1 max link page", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean support paged list holder r0", "$ i0 = r1 get page", "r2 = org springframework bean support paged list holder r0", "$ i1 = r2 get page count", "$ i2 = $ i1 - 1", "if $ i0 ! = $ i2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = $ i2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "if class \\ `` ljava lang void \\ `` == r0 goto label2", "$ r1 = java lang void type", "if $ r1 == r0 goto label2", "$ z0 = org springframework util class utils be primitive or wrapper r0", "if $ z0 ! = 0 goto label1", "$ r2 = class \\ `` ljava lang enum \\ ``", "$ z1 = $ r2 be assignable from r0", "if $ z1 ! = 0 goto label1", "$ r3 = class \\ `` ljava lang char sequence \\ ``", "$ z2 = $ r3 be assignable from r0", "if $ z2 ! = 0 goto label1", "$ r4 = class \\ `` ljava lang number \\ ``", "$ z3 = $ r4 be assignable from r0", "if $ z3 ! = 0 goto label1", "$ r5 = class \\ `` ljava util date \\ ``", "$ z4 = $ r5 be assignable from r0", "if $ z4 ! = 0 goto label1", "$ r6 = class \\ `` ljava time temporal temporal \\ ``", "$ z5 = $ r6 be assignable from r0", "if $ z5 ! = 0 goto label1", "if class \\ `` ljava net uri \\ `` == r0 goto label1", "if class \\ `` ljava net url \\ `` == r0 goto label1", "if class \\ `` ljava util locale \\ `` == r0 goto label1", "if class \\ `` ljava lang class \\ `` ! = r0 goto label2", "label $ z6 = 1", "goto label3", "label return $ z6", "if class \\ `` ljava lang class \\ `` ! = r0 goto label2", "label $ z6 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory config name bean holder r0", "$ r1 = r2 bean instance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework bean factory injection point r0", "$ r1 = r5 field", "if $ r1 == null goto label1", "r6 = org springframework bean factory injection point r0", "$ r3 = r6 field", "$ r4 = $ r3 get type", "goto label2", "label return $ r4", "if $ r1 == null goto label1", "label r7 = org springframework bean factory injection point r0", "$ r2 = r7 obtain method parameter", "$ r4 = $ r2 get parameter type"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework bean factory parse reader context r0", "$ r2 = r3 event listener", "$ r2 component register r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org springframework bean factory support abstract autowire capable bean factory r0", "$ r7 = r9 get bean post processor", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r8 = r3 next", "r4 = org springframework bean factory config bean post processor $ r8", "$ z1 = r4 instanceof org springframework bean factory config instantiation aware bean post processor", "if $ z1 == 0 goto label2", "r5 = org springframework bean factory config instantiation aware bean post processor r4", "r6 = r5 post process before instantiation r1 r2", "if r6 == null goto label2", "return r6", "if r6 == null goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory support bean definition default r0", "$ r1 = r2 init method name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework util string utils have text r1", "if $ z0 == 0 goto label1", "$ r3 = r1", "goto label2", "label r4 = org springframework bean factory support bean definition default r0", "r4 destroy method name = $ r3", "return", "if $ z0 == 0 goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory support bean definition default r0", "$ r1 = r2 destroy method name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory support bean definition override exception r0", "$ r1 = r2 bean definition", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework bean factory xml bean definition parser delegate r0", "$ r1 = r2 default", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework bean property value r0", "$ z0 = r1 optional", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util assert not null r0 \\ `` class must not be null\\ ``", "$ z0 = org springframework core kotlin detector be kotlin reflect present", "if $ z0 == 0 goto label1", "$ z1 = org springframework core kotlin detector be kotlin type r0", "if $ z1 == 0 goto label1", "$ r1 = org springframework bean bean utils $ kotlin delegate find primary constructor r0", "return $ r1", "if $ z1 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org springframework bean factory support root bean definition r0", "$ r4 = r8 post processing lock", "entermonitor $ r4", "label r9 = org springframework bean factory support root bean definition r0", "$ r5 = r9 externally manage config member", "if $ r5 == null goto label2", "r10 = org springframework bean factory support root bean definition r0", "$ r6 = r10 externally manage config member", "$ z0 = $ r6 contain r1", "if $ z0 == 0 goto label2", "$ z1 = 1", "goto label3", "label exitmonitor $ r4", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org springframework bean factory support root bean definition r0", "$ r4 = r8 post processing lock", "entermonitor $ r4", "label r9 = org springframework bean factory support root bean definition r0", "$ r5 = r9 externally manage init method", "if $ r5 == null goto label2", "r10 = org springframework bean factory support root bean definition r0", "$ r6 = r10 externally manage init method", "$ z0 = $ r6 contain r1", "if $ z0 == 0 goto label2", "$ z1 = 1", "goto label3", "label exitmonitor $ r4", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework boot builder spring application builder r0", "$ r2 = r3 application", "$ r2 set application context class r1", "r4 = org springframework boot builder spring application builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org springframework boot builder spring application builder r0", "$ r1 = r2 application", "$ r1 set log startup info z0", "r3 = org springframework boot builder spring application builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org springframework boot builder spring application builder r0", "$ r1 = r2 application", "$ r1 set headless z0", "r3 = org springframework boot builder spring application builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework boot builder spring application builder r0", "$ r2 = r3 application", "$ r2 set main application class r1", "r4 = org springframework boot builder spring application builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework boot builder spring application builder r0", "$ r2 = r3 application", "$ r2 set bean name generator r1", "r4 = org springframework boot builder spring application builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot context property bind bind exception r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot context property source invalid configuration property value exception r0", "$ r1 = r2 reason", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org springframework boot convert application conversion service add delimit string converter r0", "r14 = new org springframework boot convert string to duration converter", "specialinvoke r14 < init >", "r27 = org springframework core convert converter generic converter r14", "r0 add converter r27", "r15 = new org springframework boot convert duration to string converter", "specialinvoke r15 < init >", "r28 = org springframework core convert converter generic converter r15", "r0 add converter r28", "r16 = new org springframework boot convert number to duration converter", "specialinvoke r16 < init >", "r29 = org springframework core convert converter generic converter r16", "r0 add converter r29", "r17 = new org springframework boot convert duration to number converter", "specialinvoke r17 < init >", "r30 = org springframework core convert converter generic converter r17", "r0 add converter r30", "r18 = new org springframework boot convert string to period converter", "specialinvoke r18 < init >", "r31 = org springframework core convert converter generic converter r18", "r0 add converter r31", "r19 = new org springframework boot convert period to string converter", "specialinvoke r19 < init >", "r32 = org springframework core convert converter generic converter r19", "r0 add converter r32", "r20 = new org springframework boot convert number to period converter", "specialinvoke r20 < init >", "r33 = org springframework core convert converter generic converter r20", "r0 add converter r33", "r21 = new org springframework boot convert string to data size converter", "specialinvoke r21 < init >", "r34 = org springframework core convert converter generic converter r21", "r0 add converter r34", "r22 = new org springframework boot convert number to data size converter", "specialinvoke r22 < init >", "r35 = org springframework core convert converter generic converter r22", "r0 add converter r35", "r23 = new org springframework boot convert string to file converter", "specialinvoke r23 < init >", "r36 = org springframework core convert converter converter r23", "r0 add converter r36", "r24 = new org springframework boot convert input stream source to byte array converter", "specialinvoke r24 < init >", "r37 = org springframework core convert converter converter r24", "r0 add converter r37", "r25 = new org springframework boot convert lenient string to enum converter factory", "specialinvoke r25 < init >", "r38 = org springframework core convert converter converter factory r25", "r0 add converter factory r38", "r26 = new org springframework boot convert lenient boolean to enum converter factory", "specialinvoke r26 < init >", "r39 = org springframework core convert converter converter factory r26", "r0 add converter factory r39", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 get class", "$ r2 = org springframework core resolvable type for class class \\ `` lorg springframework boot diagnostics abstract failure analyzer \\", "$ r3 = newarray int [ 0 ]", "$ r4 = $ r2 resolve generic $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot diagnostics failure analysis r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org springframework boot jta atomikos atomikos property r0", "r1 default max wait time on shutdown = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework boot log abstract log system r0", "$ r1 = r3 get spring config location", "r4 = org springframework boot log abstract log system r0", "$ r2 = specialinvoke r4 find config $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = lengthof r1", "if $ i0 > = 1 goto label1", "$ r12 = org springframework boot log log4j2 color converter logger", "$ i2 = lengthof r1", "$ r13 = java lang integer value of $ i2", "$ r12 error \\ `` incorrect number of option on style expect at least 1 receive { } \\", "return null", "if $ i0 > = 1 goto label1", "label $ r5 = r1 [ 0 ]", "if $ r5 ! = null goto label2", "$ r11 = org springframework boot log log4j2 color converter logger", "$ r11 error \\ `` no pattern supply on style\\ ``", "if $ r5 ! = null goto label2", "label r2 = org apache log log4j core layout pattern layout create pattern parser r0", "$ r6 = r1 [ 0 ]", "r3 = r2 parse $ r6", "$ i1 = lengthof r1", "if $ i1 == 1 goto label3", "$ r9 = org springframework boot log log4j2 color converter element", "$ r8 = r1 [ 1 ]", "$ r10 = $ r9 get $ r8", "$ r14 = org springframework boot ansi ansi element $ r10", "goto label4", "label $ r7 = new org springframework boot log log4j2 color converter", "specialinvoke $ r7 < init > r3 $ r14", "return $ r7", "if $ i1 == 1 goto label3", "label $ r14 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot system application home r0", "$ r1 = r2 source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r1 \\ `` name must not be null\\ ``", "org springframework util assert not null r2 \\ `` value must not be null\\ ``", "r16 = new org springframework boot web client rest template builder", "r17 = org springframework boot web client rest template builder r0", "$ r5 = r17 request factory customizer", "r18 = org springframework boot web client rest template builder r0", "$ z0 = r18 detect request factory", "r19 = org springframework boot web client rest template builder r0", "$ r6 = r19 root uri", "r20 = org springframework boot web client rest template builder r0", "$ r7 = r20 message converter", "r21 = org springframework boot web client rest template builder r0", "$ r8 = r21 interceptor", "r22 = org springframework boot web client rest template builder r0", "$ r9 = r22 request factory", "r23 = org springframework boot web client rest template builder r0", "$ r10 = r23 uri template handler", "r24 = org springframework boot web client rest template builder r0", "$ r11 = r24 error handler", "r25 = org springframework boot web client rest template builder r0", "$ r12 = r25 basic authentication", "r26 = org springframework boot web client rest template builder r0", "$ r4 = r26 default header", "$ r13 = org springframework boot web client rest template builder append $ r4 r1 r2", "r27 = org springframework boot web client rest template builder r0", "$ r15 = r27 customizers", "r28 = org springframework boot web client rest template builder r0", "$ r14 = r28 request customizers", "specialinvoke r16 < init > $ r5 $ z0 $ r6 $ r7 $ r8 $ r9 $ r10 $ r11 $ r12 $ r13 $ r15 $ r14", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot web embed tomcat tomcat servlet web server factory r0", "$ r1 = r2 tld skip pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` pattern must not be null\\ ``", "r3 = new java util link hash set", "specialinvoke r3 < init > r1", "r4 = org springframework boot web embed tomcat tomcat servlet web server factory r0", "r4 tld skip pattern = r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot web embed tomcat tomcat web server r0", "$ r1 = r2 tomcat", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework boot web embed undertow undertow servlet web server factory r0", "r1 eager init filter = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework boot web reactive result view mustache view r0", "r2 charset = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework boot web server compression r0", "$ z0 = r1 enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework boot web server mime mapping r0", "$ r3 = r6 map", "$ r4 = $ r3 remove r1", "r2 = org springframework boot web server mime mapping $ map $ r4", "if r2 == null goto label1", "$ r5 = r2 get mime type", "goto label2", "label return $ r5", "if r2 == null goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework boot web server port in use exception r0", "$ i0 = r1 port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = r0", "label if r4 == null goto label3", "$ z0 = r1 be instance r4", "if $ z0 == 0 goto label2", "$ r3 = java lang exception r4", "r2 accept $ r3", "return", "if $ z0 == 0 goto label2", "label r4 = r4 get cause", "goto label1", "label if r4 == null goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot web server ssl r0", "$ r1 = r2 key store password", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` servlet name must not be null\\ ``", "r4 = org springframework boot web servlet abstract filter registration bean r0", "$ r2 = r4 servlet name", "$ r3 = java util array a list r1", "$ r2 add all $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework boot web servlet abstract filter registration bean r0", "$ z0 = r1 match after", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework boot web servlet dynamic registration bean r0", "$ r2 = r4 name", "if $ r2 == null goto label1", "r5 = org springframework boot web servlet dynamic registration bean r0", "$ r3 = r5 name", "goto label2", "label return $ r3", "if $ r2 == null goto label1", "label $ r3 = org springframework core convention get variable name r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework boot web servlet multipart config factory r0", "r2 location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot web servlet server session r0", "$ r1 = r2 store dir", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework boot context config profile r0", "$ r1 = r3 active profile", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "r4 = org springframework boot context config profile r0", "$ r2 = r4 active profile", "goto label2", "label return $ r2", "if $ z0 ! = 0 goto label1", "label r5 = org springframework boot context config profile r0", "$ r2 = r5 default profile"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework boot spring application r0", "r2 = r3 get spring boot exception handler", "if r2 == null goto label1", "r2 register log exception r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot spring application r0", "$ r1 = r2 main application class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework boot spring application r0", "r2 main application class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot spring application r0", "$ r1 = r2 source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework boot builder spring application builder r0", "$ r2 = r3 application", "$ r2 set environment prefix r1", "r4 = org springframework boot builder spring application builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework boot spring application r0", "r2 environment prefix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new org springframework boot sql init abstract script database initializer $ script location resolver", "r5 = org springframework boot sql init abstract script database initializer r0", "$ r3 = r5 resource loader", "specialinvoke r4 < init > $ r3", "r6 = org springframework boot sql init abstract script database initializer r0", "z0 = specialinvoke r6 apply schema script r4", "r7 = org springframework boot sql init abstract script database initializer r0", "$ z1 = specialinvoke r7 apply data script r4", "if $ z1 ! = 0 goto label1", "if z0 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if z0 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework boot sql init database initialization setting r0", "r2 schema location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework boot sql init database initialization setting r0", "r2 data location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r9 = r3 next", "r4 = java lang string $ r9", "$ r10 = $ r5 append \\ `` \\t- \\ ``", "$ r11 = $ r10 append r4", "$ r12 = newarray java lang object [ 0 ]", "$ r13 = java lang string format \\ `` % n\\", "$ r11 append $ r13", "goto label1", "if $ z0 == 0 goto label2", "label $ r6 = new java lang illegal state exception", "$ r7 = newarray java lang object [ 1 ]", "$ r7 [ 0 ] = $ r5", "$ r8 = java lang string format \\ `` the following class could not be exclude because they be not auto-configuration class % n % s\\", "specialinvoke $ r6 < init > $ r8", "throw $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org springframework boot autoconfigure condition condition outcome", "$ z0 = r0 be match", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label $ r2 = r0 get condition message", "specialinvoke $ r1 < init > $ z1 $ r2", "return $ r1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework boot autoconfigure mustache mustache resource template loader r0", "r2 resource loader = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework boot autoconfigure r2dbc r2dbc property r0", "$ r1 = r5 unique name", "if $ r1 ! = null goto label1", "$ r3 = java util uuid random u u i d", "$ r4 = $ r3 to string", "r6 = org springframework boot autoconfigure r2dbc r2dbc property r0", "r6 unique name = $ r4", "label r7 = org springframework boot autoconfigure r2dbc r2dbc property r0", "$ r2 = r7 unique name", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` resolver must not be null\\ ``", "r6 = org springframework boot autoconfigure template template location r0", "$ r3 = r6 path", "$ r4 = r1 get resource $ r3", "$ z0 = $ r4 exist", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label r7 = org springframework boot autoconfigure template template location r0", "$ z1 = specialinvoke r7 any exists r1", "label return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework boot configurationprocessor metadata configuration metadata r0", "$ r2 = r4 hint", "$ r3 = r1 get name", "r5 = org springframework boot configurationprocessor metadata configuration metadata r0", "specialinvoke r5 add $ r2 $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ z0 = org springframework boot devtools restart agent reloader be active null", "if $ z0 ! = 0 goto label1", "$ r0 = class \\ `` lorg springframework boot devtools restart agent reloader \\ ``", "$ r1 = $ r0 get class loader", "$ z1 = org springframework boot devtools restart agent reloader be active $ r1", "if $ z1 ! = 0 goto label1", "$ r2 = java lang class loader get system class loader", "$ z2 = org springframework boot devtools restart agent reloader be active $ r2", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "r7 = org springframework boot devtools restart classloader class loader file r0", "$ r3 = r7 source directory", "$ r4 = $ r3 value", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = org springframework boot devtools restart classloader class loader file $ source directory $ r5", "$ r6 = r2 get file", "$ i0 = $ r6 size", "i1 = i1 + $ i0", "goto label1", "if $ z0 == 0 goto label2", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r11 = org springframework boot devtools tunnel payload http tunnel payload r0", "$ r3 = r11 data", "r1 = $ r3 array", "r12 = org springframework boot devtools tunnel payload http tunnel payload r0", "$ r4 = r12 data", "$ i1 = $ r4 remain", "$ i2 = $ i1 * 2", "r2 = newarray char [ $ i2 ]", "r13 = org springframework boot devtools tunnel payload http tunnel payload r0", "$ r5 = r13 data", "i12 = $ r5 position", "label r14 = org springframework boot devtools tunnel payload http tunnel payload r0", "$ r6 = r14 data", "$ i3 = $ r6 remain", "if i12 > = $ i3 goto label2", "$ b4 = r1 [ i12 ]", "s0 = $ b4 & 255", "$ i7 = i12 * 2", "$ r8 = org springframework boot devtools tunnel payload http tunnel payload hex_chars", "$ s5 = s0 > > > 4", "$ c6 = $ r8 [ $ s5 ]", "r2 [ $ i7 ] = $ c6", "$ i8 = i12 * 2", "$ i11 = $ i8 + 1", "$ r9 = org springframework boot devtools tunnel payload http tunnel payload hex_chars", "$ s9 = s0 & 15", "$ c10 = $ r9 [ $ s9 ]", "r2 [ $ i11 ] = $ c10", "i12 = i12 + 1", "goto label1", "if i12 > = $ i3 goto label2", "label r10 = new java lang string", "specialinvoke r10 < init > r2", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "r6 = new org apache common compress archivers jar jar archive entry", "specialinvoke r6 < init > r1", "$ r5 = abstract jar writer $ lambda_write index file_1__3 bootstrap $ r2", "r7 = org springframework boot loader tool abstract jar writer r0", "specialinvoke r7 write entry r6 $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = main class finder $ get name__2 bootstrap $", "$ r2 = org springframework boot loader tool main class finder do with main class r0 $ r1", "$ r3 = java lang string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r7 = new org springframework boot loader tool main class finder $ single main class callback", "specialinvoke r7 < init > r2 null", "r8 = org springframework boot loader tool main class finder $ main class callback r7", "org springframework boot loader tool main class finder do with main class r0 r1 r8", "$ r6 = org springframework boot loader tool main class finder $ single main class callback access $ 100 r7", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org springframework boot loader tool repackager r0", "r3 repackage r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework boot test context assertj application context assert $ scope include_ancestors", "r4 = org springframework boot test context assertj application context assert r0", "$ r3 = r4 do not have bean r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org springframework util assert not null r2 \\ `` scope must not be null\\ ``", "r13 = org springframework boot test context assertj application context assert r0", "$ r3 = r13 startup failure", "if $ r3 == null goto label1", "$ r11 = newarray java lang object [ 1 ]", "$ r11 [ 0 ] = r1", "r14 = org springframework boot test context assertj application context assert r0", "$ r12 = specialinvoke r14 context fail to start when expect \\ `` to get bean of type % n < % s > \\", "r15 = org springframework boot test context assertj application context assert r0", "r16 = org assertj core error error message factory $ r12", "r15 throw assertion error r16", "label r17 = org springframework boot test context assertj application context assert r0", "$ r4 = r17 get application context", "$ r5 = r2 get bean of type $ r4 r1", "$ r6 = org assertj core api assertion assert that $ r5", "$ r7 = newarray java lang object [ 2 ]", "$ r7 [ 0 ] = r1", "r18 = org springframework boot test context assertj application context assert r0", "$ r8 = r18 get application context", "$ r7 [ 1 ] = $ r8", "$ r9 = $ r6 a \\ `` bean of type < % s > from < % s > \\", "$ r10 = org assertj core api map assert $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org springframework boot test json abstract json marshal tester r0", "$ r3 = r5 resource load class", "if $ r3 ! = null goto label1", "r6 = org springframework boot test json abstract json marshal tester r0", "$ r4 = r6 type", "if $ r4 ! = null goto label1", "r7 = org springframework boot test json abstract json marshal tester r0", "r7 resource load class = r1", "r8 = org springframework boot test json abstract json marshal tester r0", "r8 type = r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot test json abstract json marshal tester r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org springframework boot test json json content assert $ json path value", "r5 = org springframework boot test json json content assert r0", "specialinvoke r4 < init > r5 r1 r2", "r4 assert have value class \\ `` ljava util list \\", "r6 = org springframework boot test json json content assert r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework boot test json object content r0", "$ r1 = r2 object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array stream r1", "$ r3 = test property value $ parse__1 bootstrap $", "$ r4 = $ r2 map $ r3", "r6 = org springframework boot test util test property value r0", "$ r5 = specialinvoke r6 and $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get environment", "r3 = org springframework boot test util test property value r0", "r3 apply to $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org springframework boot test web client test rest template r0", "$ r3 = r6 rest template", "r7 = org springframework boot test web client test rest template r0", "$ r4 = specialinvoke r7 apply root uri if necessary r1", "$ r5 = $ r3 get for object $ r4 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org springframework boot test web client test rest template r0", "$ r3 = r6 rest template", "r7 = org springframework boot test web client test rest template r0", "$ r4 = specialinvoke r7 apply root uri if necessary r1", "$ r5 = $ r3 get for entity $ r4 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework boot test autoconfigure orm jpa test entity manager r0", "$ r2 = r5 entity manager factory", "$ r3 = $ r2 get persistence unit util", "$ r4 = $ r3 get identifier r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org springframework cache concurrent concurrent map cache", "r4 = org springframework cache concurrent concurrent map cache manager r0", "$ z0 = r4 be allow null value", "specialinvoke r3 < init > r1 $ z0", "r5 = org springframework cache cache r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r25 = org springframework cache interceptor abstract fallback cache operation source r0", "r3 = r25 get cache key r1 r2", "r26 = org springframework cache interceptor abstract fallback cache operation source r0", "$ r6 = r26 attribute cache", "$ r7 = $ r6 get r3", "r4 = java util collection $ r7", "if r4 == null goto label3", "$ r22 = org springframework cache interceptor abstract fallback cache operation source null_caching_attribute", "if r4 == $ r22 goto label1", "$ r23 = r4", "goto label2", "label return $ r23", "if r4 == $ r22 goto label1", "label $ r23 = null", "if r4 == null goto label3", "label r27 = org springframework cache interceptor abstract fallback cache operation source r0", "r5 = specialinvoke r27 compute cache operation r1 r2", "if r5 == null goto label5", "r28 = org springframework cache interceptor abstract fallback cache operation source r0", "$ r11 = r28 logger", "$ z0 = $ r11 be debug enabled", "if $ z0 == 0 goto label4", "r29 = org springframework cache interceptor abstract fallback cache operation source r0", "$ r15 = r29 logger", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r16 = r24 append \\ `` add cacheable method \\'\\ ``", "$ r17 = r1 get name", "$ r18 = $ r16 append $ r17", "$ r19 = $ r18 append \\ `` \\ ' with attribute \\ ``", "$ r20 = $ r19 append r5", "$ r21 = $ r20 to string", "$ r15 debug $ r21", "label r30 = org springframework cache interceptor abstract fallback cache operation source r0", "$ r12 = r30 attribute cache", "$ r12 put r3 r5", "goto label6", "label return r5", "if r5 == null goto label5", "label r31 = org springframework cache interceptor abstract fallback cache operation source r0", "$ r9 = r31 attribute cache", "$ r8 = org springframework cache interceptor abstract fallback cache operation source null_caching_attribute", "$ r9 put r3 $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework cache interceptor bean factory cache operation source advisor r0", "r2 cache operation source = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework cache support composite cache manager r0", "$ r2 = r3 cache manager", "$ r2 add all r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r6 = r0 get class", "r2 = org springframework core generic type resolver resolve type argument $ r6 class \\ `` lorg springframework context annotation advice mode import selector \\ ``", "r19 = org springframework core type annotate type metadata r1", "r3 = org springframework context annotation annotation config utils attribute for r19 r2", "if r3 ! = null goto label1", "r17 = new java lang illegal argument exception", "$ r13 = newarray java lang object [ 2 ]", "$ r14 = r2 get simple name", "$ r13 [ 0 ] = $ r14", "$ r15 = r1 get class name", "$ r13 [ 1 ] = $ r15", "$ r16 = java lang string format \\ `` @ % s be not present on import class \\ ' % s\\ ' a expected\\", "specialinvoke r17 < init > $ r16", "throw r17", "if r3 ! = null goto label1", "label r20 = org springframework context annotation advice mode import selector r0", "$ r7 = r20 get advice mode attribute name", "$ r8 = r3 get enum $ r7", "r4 = org springframework context annotation advice mode $ r8", "r21 = org springframework context annotation advice mode import selector r0", "r5 = r21 select import r4", "if r5 ! = null goto label2", "r18 = new java lang illegal argument exception", "$ r10 = newarray java lang object [ 1 ]", "$ r10 [ 0 ] = r4", "$ r11 = java lang string format \\ `` unknown advice mode \\ ' % s\\'\\", "specialinvoke r18 < init > $ r11", "throw r18", "if r5 ! = null goto label2", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework context annotation configuration class r0", "$ r1 = r2 import by", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = class \\ `` lorg springframework context annotation configuration class enhancer $ enhanced configuration \\ ``", "$ z0 = $ r4 be assignable from r1", "if $ z0 == 0 goto label2", "$ r12 = org springframework context annotation configuration class enhancer logger", "$ z2 = $ r12 be debug enabled", "if $ z2 == 0 goto label1", "$ r14 = org springframework context annotation configuration class enhancer logger", "$ r13 = newarray java lang object [ 1 ]", "$ r15 = r1 get name", "$ r13 [ 0 ] = $ r15", "$ r16 = java lang string format \\ `` ignore request to enhance % s a it have already be enhance this usually indicate that more than one configuration class post processor have be register e g via < contextannotation-config > this be harmless but you may want check your configuration and remove one ccpp if possible\\", "$ r14 debug $ r16", "label return r1", "if $ z0 == 0 goto label2", "label r17 = org springframework context annotation configuration class enhancer r0", "$ r5 = specialinvoke r17 new enhancer r1 r2", "r18 = org springframework context annotation configuration class enhancer r0", "r3 = specialinvoke r18 create class $ r5", "$ r6 = org springframework context annotation configuration class enhancer logger", "$ z1 = $ r6 be debug enabled", "if $ z1 == 0 goto label3", "$ r8 = org springframework context annotation configuration class enhancer logger", "$ r7 = newarray java lang object [ 2 ]", "$ r9 = r1 get name", "$ r7 [ 0 ] = $ r9", "$ r10 = r3 get name", "$ r7 [ 1 ] = $ r10", "$ r11 = java lang string format \\ `` successfully enhance % s enhance class name be % s\\", "$ r8 debug $ r11", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have length r1 \\ `` display name must not be empty\\ ``", "r2 = org springframework context support abstract application context r0", "r2 display name = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework context support abstract application context r0", "$ r1 = r2 get bean factory", "r3 = org springframework bean factory config autowire capable bean factory $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework context support abstract application context r0", "$ l0 = r1 startup date", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework context support abstract application context r0", "$ r1 = r2 bean factory post processor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework context support abstract message source r0", "$ z0 = r1 use code a default message", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r11 = org springframework context support application object support r0", "$ r1 = r11 message source accessor", "if $ r1 ! = null goto label1", "r12 = org springframework context support application object support r0", "$ z0 = r12 be context require", "if $ z0 == 0 goto label1", "r10 = new java lang illegal state exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r5 = r9 append \\ `` application object support instance [ \\ ``", "$ r6 = $ r5 append r0", "$ r7 = $ r6 append \\ `` ] do not run in an application context\\ ``", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if $ z0 == 0 goto label1", "label r13 = org springframework context support application object support r0", "$ r2 = r13 message source accessor", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework context support generic application context r0", "r2 resource loader = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework context support property source placeholder configurer r0", "$ r1 = r3 apply property source", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert state $ z0 \\ `` property source have not get be applied\\ ``", "r4 = org springframework context support property source placeholder configurer r0", "$ r2 = r4 apply property source", "return $ r2", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ i1 = i0 * 1000", "$ l2 = long $ i1", "r1 = org springframework context support reloadable resource bundle message source r0", "r1 cache millis = $ l2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 get input stream", "r46 = org springframework context support reloadable resource bundle message source r0", "r4 = r46 new property", "label $ r6 = r1 get filename", "$ z0 = $ r6 end with \\ `` xml\\ ``", "if $ z0 == 0 goto label03", "r47 = org springframework context support reloadable resource bundle message source r0", "$ r30 = r47 logger", "$ z3 = $ r30 be debug enabled", "if $ z3 == 0 goto label02", "r48 = org springframework context support reloadable resource bundle message source r0", "$ r33 = r48 logger", "r42 = new java lang string builder", "specialinvoke r42 < init >", "$ r34 = r42 append \\ `` load property [ \\ ``", "$ r35 = r1 get filename", "$ r36 = $ r34 append $ r35", "$ r37 = $ r36 append \\ `` ] \\ ``", "$ r38 = $ r37 to string", "$ r33 debug $ r38", "label r49 = org springframework context support reloadable resource bundle message source r0", "$ r31 = r49 property persister", "$ r31 load from xml r4 r3", "goto label09", "label r3 close", "return r4", "if $ z0 == 0 goto label03", "label r40 = null", "r50 = org springframework context support reloadable resource bundle message source r0", "$ r7 = r50 file encoding", "if $ r7 == null goto label04", "r51 = org springframework context support reloadable resource bundle message source r0", "$ r29 = r51 file encoding", "r40 = $ r29 get property r2", "label if r40 ! = null goto label05", "r52 = org springframework context support reloadable resource bundle message source r0", "r40 = r52 default encode", "label if r40 == null goto label07", "r53 = org springframework context support reloadable resource bundle message source r0", "$ r17 = r53 logger", "$ z2 = $ r17 be debug enabled", "if $ z2 == 0 goto label06", "r54 = org springframework context support reloadable resource bundle message source r0", "$ r21 = r54 logger", "r43 = new java lang string builder", "specialinvoke r43 < init >", "$ r22 = r43 append \\ `` load property [ \\ ``", "$ r23 = r1 get filename", "$ r24 = $ r22 append $ r23", "$ r25 = $ r24 append \\ `` ] with encode \\'\\ ``", "$ r26 = $ r25 append r40", "$ r27 = $ r26 append \\ `` \\'\\ ``", "$ r28 = $ r27 to string", "$ r21 debug $ r28", "label r55 = org springframework context support reloadable resource bundle message source r0", "$ r19 = r55 property persister", "r44 = new java io input stream reader", "specialinvoke r44 < init > r3 r40", "$ r19 load r4 r44", "label if r40 == null goto label07", "label r56 = org springframework context support reloadable resource bundle message source r0", "$ r8 = r56 logger", "$ z1 = $ r8 be debug enabled", "if $ z1 == 0 goto label08", "r57 = org springframework context support reloadable resource bundle message source r0", "$ r11 = r57 logger", "r45 = new java lang string builder", "specialinvoke r45 < init >", "$ r12 = r45 append \\ `` load property [ \\ ``", "$ r13 = r1 get filename", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` ] \\ ``", "$ r16 = $ r15 to string", "$ r11 debug $ r16", "label r58 = org springframework context support reloadable resource bundle message source r0", "$ r9 = r58 property persister", "$ r9 load r4 r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r14 = org springframework ejb access abstract remote slsb invoker interceptor r0", "r14 refresh home", "label goto label4", "label r17 = org springframework ejb access abstract remote slsb invoker interceptor r0", "$ r3 = r17 do invoke r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org springframework bean factory annotation autowired annotation bean post processor", "specialinvoke r5 < init >", "r6 = org springframework ejb interceptor spring bean autowiring interceptor r0", "r6 configure bean post processor r5 r1", "r7 = org springframework ejb interceptor spring bean autowiring interceptor r0", "$ r4 = r7 get bean factory r1", "r5 set bean factory $ r4", "r5 process injection r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org springframework ejb interceptor spring bean autowiring interceptor r0", "r2 = r7 get bean factory locator key r1", "r8 = org springframework ejb interceptor spring bean autowiring interceptor r0", "$ r4 = r8 get bean factory locator r1", "r3 = $ r4 use bean factory r2", "r9 = org springframework ejb interceptor spring bean autowiring interceptor r0", "$ r5 = r9 bean factory reference", "$ r5 put r1 r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework format datetime date formatter r0", "r2 time zone = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework format datetime date formatter r0", "r1 lenient = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` date formatter must not be null\\ ``", "r2 = org springframework format datetime date formatter registrar r0", "r2 date formatter = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework format datetime joda joda time formatter registrar r0", "$ r3 = r5 formatters", "$ r2 = org springframework format datetime joda joda time formatter registrar $ type date", "$ r3 put $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org springframework format datetime standard date time context holder date time context holder", "$ r1 = $ r0 get", "$ r2 = org springframework format datetime standard date time context $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework format support format conversion service factory bean r0", "r1 register default formatters = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework instrument classloading shadow class loader r0", "$ z0 = r2 be exclude r1", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` transformer must not be null\\ ``", "throw r4", "if r1 ! = null goto label1", "label r5 = org springframework instrument classloading weave transformer r0", "$ r2 = r5 transformer", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework jmx export annotation annotation m bean exporter r0", "$ r2 = r3 metadata name strategy", "$ r2 set default domain r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util hash set", "$ r3 = java util array a list r1", "specialinvoke r4 < init > $ r3", "r5 = org springframework jmx export assembler method name base m bean info assembler r0", "r5 manage method = r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "$ b0 = 3", "goto label2", "label $ r1 = java lang integer value of $ b0", "r3 = org springframework jmx export m bean exporter r0", "r3 autodetect mode = $ r1", "return", "if z0 == 0 goto label1", "label $ b0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jmx export m bean exporter r0", "r1 allow eager init = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework jmx export m bean exporter r0", "$ r2 = r5 exclude bean", "$ r2 clear", "if r1 == null goto label1", "r6 = org springframework jmx export m bean exporter r0", "$ r3 = r6 exclude bean", "$ r4 = java util array a list r1", "$ r3 add all $ r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jmx export metadata abstract jmx attribute r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jmx export metadata abstract jmx attribute r0", "$ i0 = r1 currency time limit", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jmx export metadata manage attribute r0", "r2 default value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jmx export metadata manage metric r0", "r2 category = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jmx export metadata manage notification r0", "r2 notification type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jmx export metadata manage notification r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jndi jndi locator support r0", "$ z0 = r1 resource ref", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework jndi jndi template r0", "r2 = r6 get context", "label r3 = r1 do in context r2", "label r7 = org springframework jndi jndi template r0", "r7 release context r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org springframework jndi jndi template r0", "$ r2 = r13 logger", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label1", "r14 = org springframework jndi jndi template r0", "$ r6 = r14 logger", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r7 = r11 append \\ `` look up jndi object with name [ \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string", "$ r6 debug $ r10", "label r12 = new org springframework jndi jndi template $ 1", "r15 = org springframework jndi jndi template r0", "specialinvoke r12 < init > r15 r1", "r16 = org springframework jndi jndi template r0", "r17 = org springframework jndi jndi callback r12", "$ r4 = r16 execute r17", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jndi type mismatch name exception r0", "$ r1 = r2 actual type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework remoting rmi jndi rmi client interceptor r0", "r1 cache stub = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework remoting rmi rmi registry factory bean r0", "r1 always create = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 get class", "$ r2 = org springframework util class utils get short name $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting support remote invocation base exporter r0", "r2 remote invocation executor = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r2 = java lang thread current thread", "$ r2 set context class loader r1", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` \\'async annotation type\\ ' must not be null\\ ``", "r5 = new java util hash set", "specialinvoke r5 < init >", "r5 add r1", "r6 = org springframework schedule annotation async annotation advisor r0", "$ r4 = r6 build pointcut r5", "r7 = org springframework schedule annotation async annotation advisor r0", "r7 pointcut = $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` \\'async annotation type\\ ' must not be null\\ ``", "r2 = org springframework schedule annotation async annotation bean post processor r0", "r2 async annotation type = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r4 = new org springframework schedule annotation async result", "$ z0 = r0 instanceof java util concurrent execution exception", "if $ z0 == 0 goto label1", "$ r2 = java util concurrent execution exception r0", "goto label2", "label specialinvoke r4 < init > null $ r2", "r5 = org springframework util concurrent listenable future r4", "return r5", "if $ z0 == 0 goto label1", "label r3 = new java util concurrent execution exception", "$ r2 = r3", "specialinvoke r3 < init > r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework schedule concurrent schedule executor task r0", "$ r1 = r2 time unit", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework schedule concurrent schedule executor task r0", "$ z0 = r1 fix rate", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r3 = new org springframework schedule config interval task", "specialinvoke r3 < init > r1 l0 0l", "r4 = org springframework schedule config schedule task registrar r0", "r4 add fix delay task r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r2 = r10 append \\ `` invocation of method \\'\\ ``", "r11 = org springframework schedule support method invoke runnable r0", "$ r3 = r11 get target method", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` \\ ' on target class [ \\ ``", "r12 = org springframework schedule support method invoke runnable r0", "$ r6 = r12 get target class", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` ] failed\\ ``", "$ r9 = $ r8 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework validation data binder r0", "$ r1 = r2 object name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org springframework bean mutable property value", "if $ z0 == 0 goto label1", "$ r3 = org springframework bean mutable property value r1", "goto label2", "label r5 = org springframework validation data binder r0", "r5 do bind $ r3", "return", "if $ z0 == 0 goto label1", "label r4 = new org springframework bean mutable property value", "$ r3 = r4", "specialinvoke r4 < init > r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 invoke", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org springframework context i18n locale context holder default time zone = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework context support property source placeholder configurer r0", "$ r1 = r3 apply property source", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert state $ z0 \\ `` property source have not yet be applied\\ ``", "r4 = org springframework context support property source placeholder configurer r0", "$ r2 = r4 apply property source", "return $ r2", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jndi jndi locator support r0", "r1 resource ref = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "if $ i0 < = 1 goto label1", "$ r1 = org springframework core annotation annotation aware order comparator instance", "r2 = java util comparator $ r1", "java util array sort r0 r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = org springframework core collection factory create collection r0 null i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org springframework core constant r0", "r2 = r7 a object r1", "$ z0 = r2 instanceof java lang number", "if $ z0 ! = 0 goto label1", "r6 = new org springframework core constant exception", "r8 = org springframework core constant r0", "$ r5 = r8 class name", "specialinvoke r6 < init > $ r5 r1 \\ `` not a number\\ ``", "r9 = java lang throwable r6", "throw r9", "if $ z0 ! = 0 goto label1", "label $ r3 = java lang number r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core convert converter not find exception r0", "$ r1 = r2 target type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get object type", "r12 = org springframework core convert type descriptor r0", "$ r3 = r12 get object type", "z0 = $ r2 be assignable from $ r3", "if z0 ! = 0 goto label1", "return 0", "if z0 ! = 0 goto label1", "label r13 = org springframework core convert type descriptor r0", "$ z1 = r13 be array", "if $ z1 == 0 goto label2", "$ z9 = r1 be array", "if $ z9 == 0 goto label2", "r14 = org springframework core convert type descriptor r0", "$ r10 = r14 get element type descriptor", "$ r11 = r1 get element type descriptor", "$ z10 = $ r10 be assignable to $ r11", "return $ z10", "if $ z9 == 0 goto label2", "label r15 = org springframework core convert type descriptor r0", "$ z2 = r15 be collection", "if $ z2 == 0 goto label3", "$ z7 = r1 be collection", "if $ z7 == 0 goto label3", "r16 = org springframework core convert type descriptor r0", "$ r8 = r16 get element type descriptor", "$ r9 = r1 get element type descriptor", "r17 = org springframework core convert type descriptor r0", "$ z8 = specialinvoke r17 be nest assignable $ r8 $ r9", "return $ z8", "if $ z7 == 0 goto label3", "label r18 = org springframework core convert type descriptor r0", "$ z3 = r18 be map", "if $ z3 == 0 goto label6", "$ z4 = r1 be map", "if $ z4 == 0 goto label6", "r19 = org springframework core convert type descriptor r0", "$ r4 = r19 get map key type descriptor", "$ r5 = r1 get map key type descriptor", "r20 = org springframework core convert type descriptor r0", "$ z5 = specialinvoke r20 be nest assignable $ r4 $ r5", "if $ z5 == 0 goto label4", "r21 = org springframework core convert type descriptor r0", "$ r6 = r21 get map value type descriptor", "$ r7 = r1 get map value type descriptor", "r22 = org springframework core convert type descriptor r0", "$ z6 = specialinvoke r22 be nest assignable $ r6 $ r7", "if $ z6 == 0 goto label4", "$ z11 = 1", "goto label5", "label return $ z11", "if $ z6 == 0 goto label4", "label $ z11 = 0", "if $ z4 == 0 goto label6", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [], [52], [53], [54], [55], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` package name must not be null\\ ``", "r7 = org springframework core decorate class loader r0", "$ r4 = r7 exclusion monitor", "entermonitor $ r4", "label r8 = org springframework core decorate class loader r0", "$ r5 = r8 exclude package", "$ r5 add r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r11 = org springframework core env abstract environment r0", "$ r4 = r11 default profile", "entermonitor $ r4", "label r12 = org springframework core env abstract environment r0", "$ r5 = r12 default profile", "r13 = org springframework core env abstract environment r0", "$ r6 = r13 get reserve default profile", "$ z0 = $ r5 equal $ r6", "if $ z0 == 0 goto label2", "r14 = org springframework core env abstract environment r0", "r2 = r14 get property \\ `` spring profile default\\ ``", "$ z1 = org springframework util string utils have text r2", "if $ z1 == 0 goto label2", "$ r7 = org springframework util string utils trim all whitespace r2", "$ r8 = org springframework util string utils comma delimited list to string array $ r7", "r15 = org springframework core env abstract environment r0", "r15 set default profile $ r8", "label r16 = org springframework core env abstract environment r0", "$ r10 = r16 default profile", "exitmonitor $ r4", "label return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework core env abstract property resolver r0", "r2 value separator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org springframework core env mutable property source r0", "$ r3 = r10 logger", "$ z0 = $ r3 be debug enabled", "if $ z0 == 0 goto label1", "r11 = org springframework core env mutable property source r0", "$ r7 = r11 logger", "$ r6 = newarray java lang object [ 2 ]", "$ r6 [ 0 ] = r1", "$ r8 = r2 get name", "$ r6 [ 1 ] = $ r8", "$ r9 = java lang string format \\ `` replace [ % s ] property source with [ % s ] \\", "$ r7 debug $ r9", "label r12 = org springframework core env mutable property source r0", "i0 = specialinvoke r12 assert present and get index r1", "r13 = org springframework core env mutable property source r0", "$ r4 = r13 property source list", "$ r4 set i0 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org springframework core resolvable type for class r0", "$ r2 = $ r1 a collection", "$ r3 = newarray int [ 0 ]", "$ r4 = $ r2 resolve generic $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r10 = org springframework core io abstract resource r0", "$ r1 = r10 get file for last modified check", "l0 = $ r1 last modified", "$ b1 = l0 cmp 0l", "if $ b1 ! = 0 goto label1", "r9 = new java io file not find exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r11 = org springframework core io abstract resource r0", "$ r4 = r11 get description", "$ r5 = r8 append $ r4", "$ r6 = $ r5 append \\ `` can not be resolve in the file system for resolve it last-modified timestamp\\ ``", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "throw r9", "if $ b1 ! = 0 goto label1", "label return l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r10 = org springframework core io class path resource r0", "r1 = r10 resolve u r l", "if r1 ! = null goto label1", "r9 = new java io file not find exception", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r11 = org springframework core io class path resource r0", "$ r4 = r11 get description", "$ r5 = r8 append $ r4", "$ r6 = $ r5 append \\ `` can not be resolve to url because it do not exist\\ ``", "$ r7 = $ r6 to string", "specialinvoke r9 < init > $ r7", "throw r9", "if r1 ! = null goto label1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core io file system resource r0", "$ r1 = r2 file", "$ z0 = $ r1 exist", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core io file system resource r0", "$ r1 = r2 file", "$ l0 = $ r1 length", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework core io file system resource r0", "$ r1 = r3 file", "$ r2 = $ r1 get name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string builder", "specialinvoke r8 < init >", "$ r2 = r8 append \\ `` file [ \\ ``", "r9 = org springframework core io file system resource r0", "$ r3 = r9 file", "$ r4 = $ r3 get absolute path", "$ r5 = $ r2 append $ r4", "$ r6 = $ r5 append \\ `` ] \\ ``", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == r0 goto label1", "$ z0 = r1 instanceof org springframework core io file system resource", "if $ z0 == 0 goto label2", "r5 = org springframework core io file system resource r0", "$ r4 = r5 path", "$ r2 = org springframework core io file system resource r1", "$ r3 = $ r2 path", "$ z1 = $ r4 equal $ r3", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core io file system resource r0", "$ r1 = r2 path", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r17 = org springframework core io class path resource r0", "$ r1 = r17 clazz", "if $ r1 == null goto label1", "r18 = org springframework core io class path resource r0", "$ r13 = r18 clazz", "r19 = org springframework core io class path resource r0", "$ r12 = r19 path", "r14 = $ r13 get resource a stream $ r12", "goto label3", "label if r14 ! = null goto label4", "r16 = new java io file not find exception", "r15 = new java lang string builder", "specialinvoke r15 < init >", "r24 = org springframework core io class path resource r0", "$ r6 = r24 get description", "$ r7 = r15 append $ r6", "$ r8 = $ r7 append \\ `` can not be open because it do not exist\\ ``", "$ r9 = $ r8 to string", "specialinvoke r16 < init > $ r9", "throw r16", "label if r14 ! = null goto label4", "label return r14", "if $ r1 == null goto label1", "label r20 = org springframework core io class path resource r0", "$ r2 = r20 class loader", "if $ r2 == null goto label2", "r21 = org springframework core io class path resource r0", "$ r11 = r21 class loader", "r22 = org springframework core io class path resource r0", "$ r10 = r22 path", "r14 = $ r11 get resource a stream $ r10", "if $ r2 == null goto label2", "label r23 = org springframework core io class path resource r0", "$ r3 = r23 path", "r14 = java lang class loader get system resource a stream $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label1", "return 1", "if r1 ! = r0 goto label1", "label $ z0 = r1 instanceof org springframework core io class path resource", "if $ z0 == 0 goto label4", "r2 = org springframework core io class path resource r1", "r9 = org springframework core io class path resource r0", "$ r4 = r9 path", "$ r3 = r2 path", "$ z1 = $ r4 equal $ r3", "if $ z1 == 0 goto label2", "r10 = org springframework core io class path resource r0", "$ r6 = r10 class loader", "$ r5 = r2 class loader", "$ z2 = org springframework util object utils null safe equal $ r6 $ r5", "if $ z2 == 0 goto label2", "r11 = org springframework core io class path resource r0", "$ r8 = r11 clazz", "$ r7 = r2 clazz", "$ z3 = org springframework util object utils null safe equal $ r8 $ r7", "if $ z3 == 0 goto label2", "$ z4 = 1", "goto label3", "label return $ z4", "if $ z3 == 0 goto label2", "label $ z4 = 0", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org springframework core io resource editor r0", "$ r2 = r8 property resolver", "if $ r2 ! = null goto label1", "r7 = new org springframework core env standard environment", "specialinvoke r7 < init >", "r9 = org springframework core io resource editor r0", "r10 = org springframework core env property resolver r7", "r9 property resolver = r10", "label r11 = org springframework core io resource editor r0", "$ z0 = r11 ignore unresolvable placeholder", "if $ z0 == 0 goto label2", "r12 = org springframework core io resource editor r0", "$ r4 = r12 property resolver", "$ r6 = $ r4 resolve placeholder r1", "goto label3", "label return $ r6", "if $ z0 == 0 goto label2", "label r13 = org springframework core io resource editor r0", "$ r3 = r13 property resolver", "$ r6 = $ r3 resolve require placeholder r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get u r l", "$ z0 = org springframework util resource utils be jar u r l $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework core io support property loader support r0", "r1 local override = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` resource name must not be null\\ ``", "r11 = r1", "if r1 ! = null goto label01", "r11 = org springframework util class utils get default class loader", "label if r11 == null goto label02", "$ r12 = r11 get resource r0", "goto label03", "label r2 = $ r12", "$ r8 = new java util property", "specialinvoke $ r8 < init >", "label $ z1 = r2 have more element", "if $ z1 == 0 goto label11", "$ r9 = r2 next element", "r4 = java net url $ r9", "r5 = r4 open connection", "org springframework util resource utils use cache if necessary r5", "r6 = r5 get input stream", "label $ z0 = r0 end with \\ `` xml\\ ``", "if $ z0 == 0 goto label06", "$ r8 load from x m l r6", "goto label07", "label r6 close", "goto label10", "label goto label04", "if $ z0 == 0 goto label06", "label $ r8 load r6", "if $ z1 == 0 goto label11", "label return $ r8", "label if r11 == null goto label02", "label $ r12 = java lang class loader get system resource r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get name", "label if r1 == null goto label2", "$ r22 = r1 get resource \\ `` meta-inf spring factories\\ ``", "goto label3", "label r23 = $ r22", "r25 = new java util array list", "specialinvoke r25 < init >", "label $ z1 = r23 have more element", "if $ z1 == 0 goto label5", "$ r8 = r23 next element", "r4 = java net url $ r8", "r26 = new org springframework core io url resource", "specialinvoke r26 < init > r4", "r29 = org springframework core io resource r26", "r5 = org springframework core io support property loader utils load property r29", "r6 = r5 get property r2", "$ r10 = org springframework util string utils comma delimited list to string array r6", "$ r11 = java util array a list $ r10", "r25 add all $ r11", "goto label4", "if $ z1 == 0 goto label5", "label return r25", "label if r1 == null goto label2", "label $ r22 = java lang class loader get system resource \\ `` meta-inf spring factories\\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core io url resource r0", "$ r1 = r2 clean url", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core method parameter r0", "$ r1 = r2 constructor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework core method parameter r0", "$ i0 = r1 nest level", "$ i1 = $ i0 + 1", "r2 = org springframework core method parameter r0", "r2 nest level = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework core order comparator r0", "r2 = r3 find order r1", "if r2 == null goto label1", "$ i0 = r2 int value", "goto label2", "label return $ i0", "if r2 == null goto label1", "label $ i0 = 2147483647"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org springframework core order", "if $ z0 == 0 goto label1", "$ r2 = org springframework core order r1", "$ i0 = $ r2 get order", "$ r3 = java lang integer value of $ i0", "goto label2", "label return $ r3", "if $ z0 == 0 goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework core override class loader r0", "$ z0 = r2 be exclude r1", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework core prioritize parameter name discoverer r0", "$ r2 = r3 parameter name discoverer", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org springframework core spring property get property r0", "$ z0 = java lang boolean parse boolean $ r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core style default to string styler r0", "$ r1 = r2 value styler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "$ r2 = java lang boolean value of z0", "r4 = org springframework core style to string creator r0", "$ r3 = r4 append r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework core task simple async task executor r0", "r2 execute r1 9223372036854775807l", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core type standard method metadata r0", "$ r1 = r2 introspect method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework util ant path matcher r0", "r1 trim tokens = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r17 = org springframework util ant path matcher r0", "$ r7 = r17 path separator", "r18 = org springframework util ant path matcher r0", "$ z0 = r18 trim tokens", "r3 = org springframework util string utils tokenize to string array r1 $ r7 $ z0 1", "r19 = org springframework util ant path matcher r0", "$ r8 = r19 path separator", "r20 = org springframework util ant path matcher r0", "$ z1 = r20 trim tokens", "r4 = org springframework util string utils tokenize to string array r2 $ r8 $ z1 1", "r16 = new java lang string builder", "specialinvoke r16 < init >", "z3 = 0", "i3 = 0", "label $ i0 = lengthof r3", "if i3 > = $ i0 goto label6", "r6 = r3 [ i3 ]", "$ i1 = r6 index of 42", "if $ i1 > -1 goto label2", "$ i2 = r6 index of 63", "if $ i2 < = -1 goto label5", "label $ i4 = lengthof r4", "if i3 > = $ i4 goto label5", "if z3 ! = 0 goto label3", "if i3 ! = 0 goto label4", "r21 = org springframework util ant path matcher r0", "$ r14 = r21 path separator", "$ z2 = r1 start with $ r14", "if $ z2 ! = 0 goto label4", "label r22 = org springframework util ant path matcher r0", "$ r11 = r22 path separator", "r16 append $ r11", "label $ r15 = r4 [ i3 ]", "r16 append $ r15", "z3 = 1", "i3 = i3 + 1", "goto label2", "if i3 > = $ i4 goto label5", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label6", "label $ r10 = r16 to string", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [], [44], [45], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org springframework util backoff exponential back off r0", "r1 initial interval = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util base64 utils assert delegate available", "$ r2 = org springframework util base64 utils delegate", "$ r1 = org springframework util base64 utils default_charset", "$ r3 = r0 get bytes $ r1", "$ r4 = $ r2 decode url safe $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util assert not null r0 \\ `` class must not be null\\ ``", "r1 = r0 get name", "i0 = r1 last index of 46", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ i1 = i0 + 1", "$ r3 = r1 substring $ i1", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` class\\ ``", "$ r6 = $ r5 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` type must not be null\\ ``", "if r1 == null goto label1", "$ r2 = r1 get class", "$ z1 = org springframework util class utils be assignable r0 $ r2", "goto label3", "label return $ z1", "if r1 == null goto label1", "label $ z0 = r0 be primitive", "if $ z0 ! = 0 goto label2", "$ z1 = 1", "if $ z0 ! = 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util assert not null r0 \\ `` resource path must not be null\\ ``", "$ r1 = r0 replace 47 46", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework util comparator invertible comparator r0", "$ z0 = r2 ascend", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label r3 = org springframework util comparator invertible comparator r0", "r3 ascend = $ z1", "return", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework util customizable thread creator r0", "r1 thread priority = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org springframework util digest utils digest \\ `` md5\\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework util fast byte array output stream r0", "$ r4 = r6 buffer", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r5 = r2 next", "r3 = byte [ ] $ r5", "$ z1 = r2 have next", "if $ z1 == 0 goto label2", "$ i1 = lengthof r3", "r1 write r3 0 $ i1", "goto label3", "label goto label1", "if $ z1 == 0 goto label2", "label r7 = org springframework util fast byte array output stream r0", "$ i0 = r7 index", "r1 write r3 0 $ i0", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org springframework util system property utils resolve placeholder r0", "r2 = org springframework util resource utils get u r l r1", "$ r3 = \\ `` file\\ ``", "$ r4 = r2 get protocol", "$ z0 = $ r3 equal $ r4", "if $ z0 == 0 goto label1", "$ r6 = org springframework util resource utils get file r2", "$ z2 = $ r6 exist", "if $ z2 ! = 0 goto label1", "$ r7 = new java io file not find exception", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r9 = $ r8 append \\ `` log4j config file [ \\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 append \\ `` ] not found\\ ``", "$ r12 = $ r11 to string", "specialinvoke $ r7 < init > $ r12", "throw $ r7", "if $ z2 ! = 0 goto label1", "label $ r5 = r1 to lower case", "$ z1 = $ r5 end with \\ `` xml\\ ``", "if $ z1 == 0 goto label2", "org apache log4j xml d o m configurator configure r2", "goto label3", "label return", "if $ z1 == 0 goto label2", "label org apache log4j property configurator configure r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework util method invoker r0", "$ r1 = r2 target object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 1", "if r0 ! = null goto label1", "label $ r1 = r0 get class", "$ z0 = $ r1 be array", "if $ z0 == 0 goto label4", "$ i1 = java lang reflect array get length r0", "if $ i1 ! = 0 goto label2", "$ z6 = 1", "goto label3", "label return $ z6", "if $ i1 ! = 0 goto label2", "label $ z6 = 0", "if $ z0 == 0 goto label4", "label $ z1 = r0 instanceof java lang char sequence", "if $ z1 == 0 goto label7", "$ r4 = java lang char sequence r0", "$ i0 = $ r4 length", "if $ i0 ! = 0 goto label5", "$ z7 = 1", "goto label6", "label return $ z7", "if $ i0 ! = 0 goto label5", "label $ z7 = 0", "if $ z1 == 0 goto label7", "label $ z2 = r0 instanceof java util collection", "if $ z2 == 0 goto label8", "$ r3 = java util collection r0", "$ z5 = $ r3 be empty", "return $ z5", "if $ z2 == 0 goto label8", "label $ z3 = r0 instanceof java util map", "if $ z3 == 0 goto label9", "$ r2 = java util map r0", "$ z4 = $ r2 be empty", "return $ z4", "if $ z3 == 0 goto label9", "label return 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get modifier", "$ z0 = java lang reflect modifier be public $ i0", "if $ z0 == 0 goto label1", "$ r1 = r0 get declare class", "$ i1 = $ r1 get modifier", "$ z2 = java lang reflect modifier be public $ i1", "if $ z2 ! = 0 goto label2", "label $ z1 = r0 be accessible", "if $ z1 ! = 0 goto label2", "r0 set accessible 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r7 = new java util array list", "specialinvoke r7 < init > 32", "r8 = new org springframework util reflection utils $ 1", "specialinvoke r8 < init > r7", "r9 = org springframework util reflection utils $ method callback r8", "org springframework util reflection utils do with method r0 r9", "$ i0 = r7 size", "$ r4 = newarray java lang reflect method [ $ i0 ]", "$ r5 = r7 to array $ r4", "$ r6 = java lang reflect method [ ] $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get protocol", "$ r2 = \\ `` file\\ ``", "$ z0 = $ r2 equal r1", "if $ z0 ! = 0 goto label1", "$ r3 = \\ `` vfsfile\\ ``", "$ z1 = $ r3 equal r1", "if $ z1 ! = 0 goto label1", "$ r4 = \\ `` vfs\\ ``", "$ z2 = $ r4 equal r1", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r2 = org springframework util update message digest input stream r0", "$ i1 = r2 read", "if $ i1 == -1 goto label2", "$ b2 = byte $ i1", "r1 update $ b2", "goto label1", "if $ i1 == -1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["$ r0 = org springframework core annotation merge annotation selector first_directly_declared", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ z0 = r0 instanceof java lang reflect method", "if $ z0 == 0 goto label1", "$ r8 = new org springframework core annotation synthesize method parameter", "$ r9 = java lang reflect method r0", "specialinvoke $ r8 < init > $ r9 i0", "return $ r8", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof java lang reflect constructor", "if $ z1 == 0 goto label2", "$ r6 = new org springframework core annotation synthesize method parameter", "$ r7 = java lang reflect constructor r0", "specialinvoke $ r6 < init > $ r7 i0", "return $ r6", "if $ z1 == 0 goto label2", "label $ r1 = new java lang illegal argument exception", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` not a method constructor \\ ``", "$ r4 = $ r3 append r0", "$ r5 = $ r4 to string", "specialinvoke $ r1 < init > $ r5", "throw $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework core codec abstract data buffer decoder r0", "r1 max in memory size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework core codec abstract decoder r0", "r2 logger = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework core codec abstract decoder r0", "$ r1 = r2 logger", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org springframework core convert conversion service r0", "r16 = new org springframework core convert support array to collection converter", "specialinvoke r16 < init > r1", "r30 = org springframework core convert converter generic converter r16", "r0 add converter r30", "r17 = new org springframework core convert support collection to array converter", "specialinvoke r17 < init > r1", "r31 = org springframework core convert converter generic converter r17", "r0 add converter r31", "r18 = new org springframework core convert support array to array converter", "specialinvoke r18 < init > r1", "r32 = org springframework core convert converter generic converter r18", "r0 add converter r32", "r19 = new org springframework core convert support collection to collection converter", "specialinvoke r19 < init > r1", "r33 = org springframework core convert converter generic converter r19", "r0 add converter r33", "r20 = new org springframework core convert support map to map converter", "specialinvoke r20 < init > r1", "r34 = org springframework core convert converter generic converter r20", "r0 add converter r34", "r21 = new org springframework core convert support array to string converter", "specialinvoke r21 < init > r1", "r35 = org springframework core convert converter generic converter r21", "r0 add converter r35", "r22 = new org springframework core convert support string to array converter", "specialinvoke r22 < init > r1", "r36 = org springframework core convert converter generic converter r22", "r0 add converter r36", "r23 = new org springframework core convert support array to object converter", "specialinvoke r23 < init > r1", "r37 = org springframework core convert converter generic converter r23", "r0 add converter r37", "r24 = new org springframework core convert support object to array converter", "specialinvoke r24 < init > r1", "r38 = org springframework core convert converter generic converter r24", "r0 add converter r38", "r25 = new org springframework core convert support collection to string converter", "specialinvoke r25 < init > r1", "r39 = org springframework core convert converter generic converter r25", "r0 add converter r39", "r26 = new org springframework core convert support string to collection converter", "specialinvoke r26 < init > r1", "r40 = org springframework core convert converter generic converter r26", "r0 add converter r40", "r27 = new org springframework core convert support collection to object converter", "specialinvoke r27 < init > r1", "r41 = org springframework core convert converter generic converter r27", "r0 add converter r41", "r28 = new org springframework core convert support object to collection converter", "specialinvoke r28 < init > r1", "r42 = org springframework core convert converter generic converter r28", "r0 add converter r42", "r29 = new org springframework core convert support stream converter", "specialinvoke r29 < init > r1", "r43 = org springframework core convert converter generic converter r29", "r0 add converter r43", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org springframework core io class path resource r0", "$ r3 = r10 path", "r2 = org springframework util string utils apply relative path $ r3 r1", "r11 = org springframework core io class path resource r0", "$ r4 = r11 clazz", "if $ r4 == null goto label1", "r8 = new org springframework core io class path resource", "$ r7 = r8", "r12 = org springframework core io class path resource r0", "$ r6 = r12 clazz", "specialinvoke r8 < init > r2 $ r6", "goto label2", "label r14 = org springframework core io resource $ r7", "return r14", "if $ r4 == null goto label1", "label r9 = new org springframework core io class path resource", "$ r7 = r9", "r13 = org springframework core io class path resource r0", "$ r5 = r13 class loader", "specialinvoke r9 < init > r2 $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework core log log accessor r0", "$ r2 = r3 log", "$ r2 trace r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org springframework core log log accessor r0", "$ r3 = r4 log", "$ r3 trace r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework core log log message r0", "$ r1 = r4 result", "if $ r1 ! = null goto label1", "r5 = org springframework core log log message r0", "$ r3 = r5 build string", "r6 = org springframework core log log message r0", "r6 result = $ r3", "label r7 = org springframework core log log message r0", "$ r2 = r7 result", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework core reactive adapter r0", "$ r2 = r4 from publisher function", "$ r3 = $ r2 apply r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org springframework core reactive type descriptor", "specialinvoke $ r2 < init > r0 0 0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org springframework util string utils have text r0", "if $ z0 ! = 0 goto label1", "$ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > r1", "throw $ r2", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["$ r0 = org springframework util comparator null safe comparator nulls_high", "r1 = java util comparator $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r6 = org springframework util mime type r0", "$ r3 = r6 type", "$ r2 = r1 type", "$ z0 = $ r3 equal ignore case $ r2", "if $ z0 == 0 goto label2", "r7 = org springframework util mime type r0", "$ r5 = r7 subtype", "$ r4 = r1 subtype", "$ z1 = $ r5 equal ignore case $ r4", "if $ z1 == 0 goto label2", "$ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org springframework util reflection utils get declare field r0", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label6", "r3 = r2 [ i1 ]", "label r1 do with r3", "label goto label5", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework util stop watch r0", "r1 start \\ `` \\ ``", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework util stop watch r0", "$ r1 = r5 last task info", "if $ r1 ! = null goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` no task run can\\'t get last task interval\\ ``", "throw r4", "if $ r1 ! = null goto label1", "label r6 = org springframework util stop watch r0", "$ r2 = r6 last task info", "$ l0 = $ r2 get time millis", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r23 = new java lang string builder", "r24 = org springframework util stop watch r0", "$ r7 = r24 short summary", "specialinvoke r23 < init > $ r7", "r23 append 10", "r25 = org springframework util stop watch r0", "$ z0 = r25 keep task list", "if $ z0 ! = 0 goto label1", "r23 append \\ `` no task info kept\\ ``", "goto label3", "label $ r12 = r23 to string", "return $ r12", "if $ z0 ! = 0 goto label1", "label r23 append \\ `` -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -\\n\\ ``", "r23 append \\ `` ns % task name\\n\\ ``", "r23 append \\ `` -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -\\n\\ ``", "r2 = java text number format get number instance", "r2 set minimum integer digits 9", "r2 set grouping use 0", "r3 = java text number format get percent instance", "r3 set minimum integer digits 3", "r3 set grouping use 0", "r26 = org springframework util stop watch r0", "r4 = r26 get task info", "i0 = lengthof r4", "i4 = 0", "label if i4 > = i0 goto label3", "r5 = r4 [ i4 ]", "$ l1 = r5 get time nanos", "$ r13 = r2 format $ l1", "$ r14 = r23 append $ r13", "$ r14 append \\ `` \\ ``", "$ l2 = r5 get time nanos", "$ d0 = double $ l2", "r27 = org springframework util stop watch r0", "$ l3 = r27 get total time nanos", "$ d1 = double $ l3", "$ d2 = $ d0 $ d1", "$ r16 = r3 format $ d2", "$ r17 = r23 append $ r16", "$ r17 append \\ `` \\ ``", "$ r19 = r5 get task name", "$ r20 = r23 append $ r19", "$ r20 append \\ `` \\n\\ ``", "i4 = i4 + 1", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "l0 = @ parameter2", "l1 = @ parameter3", "org springframework util assert not null r0 \\ `` no input stream specified\\ ``", "org springframework util assert not null r1 \\ `` no output stream specified\\ ``", "l2 = r0 skip l0", "$ b4 = l2 cmp l0", "if $ b4 > = 0 goto label1", "$ r3 = new java io i o exception", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` skip only \\ ``", "$ r6 = $ r5 append l2", "$ r7 = $ r6 append \\ `` bytes out of \\ ``", "$ r8 = $ r7 append l0", "$ r9 = $ r8 append \\ `` required\\ ``", "$ r10 = $ r9 to string", "specialinvoke $ r3 < init > $ r10", "throw $ r3", "if $ b4 > = 0 goto label1", "label $ l5 = l1 - l0", "l16 = $ l5 + 1l", "$ l6 = java lang math min 4096l l16", "$ i7 = int $ l6", "r2 = newarray byte [ $ i7 ]", "label $ b8 = l16 cmp 0l", "if $ b8 < = 0 goto label6", "i3 = r0 read r2", "if i3 ! = -1 goto label3", "goto label6", "label $ l9 = l1 - l0", "$ l10 = $ l9 + 1l", "$ l11 = $ l10 - l16", "return $ l11", "if i3 ! = -1 goto label3", "label $ l12 = long i3", "$ b13 = $ l12 cmp l16", "if $ b13 > 0 goto label4", "r1 write r2 0 i3", "$ l15 = long i3", "l16 = l16 - $ l15", "goto label5", "label goto label2", "if $ b13 > 0 goto label4", "label $ i14 = int l16", "r1 write r2 0 $ i14", "l16 = 0l"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework util unit data size r0", "$ l0 = r1 bytes", "$ l1 = $ l0 1048576l", "return $ l1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get value", "$ r3 = r1 get type descriptor", "$ r4 = org springframework core convert type descriptor value of class \\ `` ljava lang byte \\ ``", "$ r5 = r0 convert value $ r2 $ r3 $ r4", "$ r6 = java lang byte $ r5", "$ b0 = $ r6 byte value", "return $ b0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` null\\ ``", "if r0 ! = null goto label1", "label $ z0 = r0 be array", "if $ z0 == 0 goto label6", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "i0 = 1", "r8 = r0 get component type", "label $ z1 = r8 be array", "if $ z1 == 0 goto label3", "r8 = r8 get component type", "i0 = i0 + 1", "goto label2", "if $ z1 == 0 goto label3", "label $ r4 = r8 get name", "$ r3 append $ r4", "i1 = 0", "label if i1 > = i0 goto label5", "$ r3 append \\ `` [ ] \\ ``", "i1 = i1 + 1", "goto label4", "label if i1 > = i0 goto label5", "label $ r6 = $ r3 to string", "return $ r6", "if $ z0 == 0 goto label6", "label $ r2 = r0 get name", "return $ r2"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r21 = org springframework expression spel ast operator between r0", "$ r9 = r21 get leave operand", "$ r10 = $ r9 get value internal r1", "r2 = $ r10 get value", "r22 = org springframework expression spel ast operator between r0", "$ r11 = r22 get right operand", "$ r12 = $ r11 get value internal r1", "r3 = $ r12 get value", "$ z0 = r3 instanceof java util list", "if $ z0 == 0 goto label1", "$ r17 = java util list r3", "$ i1 = $ r17 size", "if $ i1 == 2 goto label2", "label r20 = new org springframework expression spel spel evaluation exception", "r23 = org springframework expression spel ast operator between r0", "$ r14 = r23 get right operand", "$ i0 = $ r14 get start position", "$ r16 = org springframework expression spel spel message between_right_operand_must_be_two_element_list", "$ r15 = newarray java lang object [ 0 ]", "specialinvoke r20 < init > $ i0 $ r16 $ r15", "r24 = java lang throwable r20", "throw r24", "if $ i1 == 2 goto label2", "label r4 = java util list r3", "r5 = r4 get 0", "r6 = r4 get 1", "r7 = r1 get type comparator", "label $ i2 = r7 compare r2 r5", "if $ i2 < 0 goto label4", "$ i3 = r7 compare r2 r6", "if $ i3 > 0 goto label4", "$ z1 = 1", "goto label5", "label $ r19 = org springframework expression spel support boolean type value for value $ z1", "label return $ r19", "if $ i3 > 0 goto label4", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get method", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r6 = org springframework expression spel support reflective property accessor r0", "$ r3 = r6 get property method suffix r1", "$ r4 = org springframework expression spel support reflective property accessor any_types", "r7 = org springframework expression spel support reflective property accessor r0", "$ r5 = specialinvoke r7 find method for property $ r3 \\ `` set\\", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org springframework expression spel support reflective property accessor r0", "r2 = r6 get property method suffix r1", "$ i0 = r2 length", "if $ i0 < = 0 goto label1", "$ c1 = r2 char at 0", "$ z0 = java lang character be upper case $ c1", "if $ z0 == 0 goto label1", "$ r5 = newarray java lang string [ 1 ]", "$ r5 [ 0 ] = r2", "return $ r5", "if $ z0 == 0 goto label1", "label $ r3 = newarray java lang string [ 2 ]", "$ r3 [ 0 ] = r2", "$ r4 = org springframework util string utils capitalize r2", "$ r3 [ 1 ] = $ r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework expression spel spel evaluation exception r0", "$ r1 = r2 insert", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org springframework expression spel support data bind property accessor", "specialinvoke $ r0 < init > 0", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org springframework expression spel standard spel expression", "if $ z0 == 0 goto label1", "$ r1 = org springframework expression spel standard spel expression r0", "$ z1 = $ r1 compile expression", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = io spring javaformat eclipse jdt core dom instanceof expression r0", "r7 support only in15", "r8 = io spring javaformat eclipse jdt core dom instanceof expression r0", "r8 unsupported without preview error", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r9 = io spring javaformat eclipse jdt core dom instanceof expression r0", "r2 = r9 pattern variable", "$ r3 = io spring javaformat eclipse jdt core dom instanceof expression pattern_variable_property", "r10 = io spring javaformat eclipse jdt core dom instanceof expression r0", "r11 = io spring javaformat eclipse jdt core dom a s t node r2", "r12 = io spring javaformat eclipse jdt core dom a s t node r1", "r10 pre replace child r11 r12 $ r3", "r13 = io spring javaformat eclipse jdt core dom instanceof expression r0", "r13 pattern variable = r1", "$ r4 = io spring javaformat eclipse jdt core dom instanceof expression pattern_variable_property", "r14 = io spring javaformat eclipse jdt core dom instanceof expression r0", "r15 = io spring javaformat eclipse jdt core dom a s t node r2", "r16 = io spring javaformat eclipse jdt core dom a s t node r1", "r14 post replace child r15 r16 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io spring javaformat eclipse jdt internal core default work copy owner primary", "r3 = io spring javaformat eclipse jdt core work copy owner $ r1", "$ r2 = io spring javaformat eclipse jdt core java core create r0 r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io spring javaformat eclipse jdt internal core java model manager get java model manager", "$ r2 = $ r1 resolve variable entry r0 0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io spring javaformat eclipse jdt internal core java model manager get java model manager", "$ r2 = $ r1 get resolve variable path r0 0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = io spring javaformat eclipse jdt internal core nd db chunk r0", "$ r2 = r3 f database", "r4 = io spring javaformat eclipse jdt internal core nd db chunk r0", "$ i0 = r4 f sequence number", "$ l1 = long $ i0", "$ l2 = $ l1 * 4096l", "r1 = $ r2 get chunk $ l2", "r1 make dirty", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["i0 = @ parameter0", "$ l1 = long i0", "$ l4 = 4096l * $ l1", "$ i2 = io spring javaformat eclipse jdt internal core nd db large block header_size", "$ l3 = long $ i2", "$ l7 = $ l4 - $ l3", "$ i5 = io spring javaformat eclipse jdt internal core nd db large block footer_size", "$ l6 = long $ i5", "$ l8 = $ l7 - $ l6", "$ l9 = $ l8 - 2l", "return $ l9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io spring javaformat eclipse jdt internal core nd index exception builder r0", "$ r4 = r6 related address", "r3 = $ r4 iterator", "goto label2", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label1", "label $ r5 = r3 next", "r2 = io spring javaformat eclipse jdt internal core nd db related address $ r5", "r1 add related address r2", "if $ z0 ! = 0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "$ r1 = io spring javaformat eclipse jdt internal core nd java nd complex type signature declaring_type", "r5 = io spring javaformat eclipse jdt internal core nd java nd complex type signature r0", "$ r2 = r5 get nd", "r6 = io spring javaformat eclipse jdt internal core nd java nd complex type signature r0", "$ l0 = r6 address", "$ r3 = $ r1 get $ r2 $ l0", "$ r4 = io spring javaformat eclipse jdt internal core nd java nd complex type signature $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ i2 = io spring javaformat eclipse jdt internal core nd raw growable array array_header_bytes", "r1 = io spring javaformat eclipse jdt internal core nd raw growable array r0", "$ i0 = r1 inline size", "$ i1 = 4 * $ i0", "$ i3 = $ i2 + $ i1", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ i2 = i0 + i1", "$ i3 = $ i2 - 1", "$ i4 = $ i3 i1", "$ i5 = $ i4 * i1", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io spring javaformat eclipse jdt internal eval evaluation context r0", "r2 line separator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework security config annotation authentication configurers provision jdbc user detail manager configurer r0", "$ r2 = r3 get user detail service", "$ r2 set authority by username query r1", "r4 = org springframework security config annotation authentication configurers provision jdbc user detail manager configurer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework security config annotation authentication configurers provision jdbc user detail manager configurer r0", "$ r1 = r3 init script", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "r4 = org springframework security config annotation authentication configurers provision jdbc user detail manager configurer r0", "$ r2 = specialinvoke r4 get data source init", "$ r2 after property set", "label specialinvoke r0 init user detail service", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org springframework security config annotation web configurers exception handle configurer", "specialinvoke r4 < init >", "r5 = org springframework security config annotation web builder http security r0", "r6 = org springframework security config annotation security configurer adapter r4", "$ r3 = specialinvoke r5 get or apply r6", "r1 customize $ r3", "r7 = org springframework security config annotation web builder http security r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org springframework security config annotation web configurers saml2 saml2 login configurer", "specialinvoke r4 < init >", "r5 = org springframework security config annotation web builder http security r0", "r6 = org springframework security config annotation security configurer adapter r4", "$ r3 = specialinvoke r5 get or apply r6", "r1 customize $ r3", "r7 = org springframework security config annotation web builder http security r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework security config annotation web builder web security r0", "r1 debug enable = z0", "r2 = org springframework security config annotation web builder web security r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r33 = org springframework security config annotation web configuration web security configuration r0", "$ r3 = r33 web security configurers", "if $ r3 == null goto label01", "r34 = org springframework security config annotation web configuration web security configuration r0", "$ r24 = r34 web security configurers", "$ z5 = $ r24 be empty", "if $ z5 ! = 0 goto label01", "$ z6 = 1", "goto label02", "label z0 = $ z6", "r35 = org springframework security config annotation web configuration web security configuration r0", "$ r25 = r35 security filter chain", "$ z7 = $ r25 be empty", "if $ z7 ! = 0 goto label03", "$ z8 = 1", "goto label04", "label z1 = $ z8", "if z0 == 0 goto label05", "if $ z8 ! = 0 goto label06", "label $ z9 = 1", "goto label07", "label org springframework util assert state $ z9 \\ `` found web security configurer adapter as well a security filter chain please select just one \\ ``", "if z0 ! = 0 goto label08", "if z1 ! = 0 goto label08", "r36 = org springframework security config annotation web configuration web security configuration r0", "$ r20 = r36 object object post processor", "r32 = new org springframework security config annotation web configuration web security configuration $ 1", "r37 = org springframework security config annotation web configuration web security configuration r0", "specialinvoke r32 < init > r37", "$ r21 = $ r20 post process r32", "r26 = org springframework security config annotation web configuration web security configurer adapter $ r21", "r38 = org springframework security config annotation web configuration web security configuration r0", "$ r22 = r38 web security", "r39 = org springframework security config annotation security configurer r26", "$ r22 apply r39", "label r40 = org springframework security config annotation web configuration web security configuration r0", "$ r27 = r40 security filter chain", "r28 = $ r27 iterator", "label $ z10 = r28 have next", "if $ z10 == 0 goto label13", "$ r10 = r28 next", "r29 = org springframework security web security filter chain $ r10", "r41 = org springframework security config annotation web configuration web security configuration r0", "$ r11 = r41 web security", "$ r12 = web security configuration $ lambda_spring security filter chain_0__1 bootstrap $ r29", "$ r11 add security filter chain builder $ r12", "$ r14 = r29 get filter", "r1 = $ r14 iterator", "label $ z3 = r1 have next", "if $ z3 == 0 goto label12", "$ r15 = r1 next", "r2 = javax servlet filter $ r15", "$ z4 = r2 instanceof org springframework security web access intercept filter security interceptor", "if $ z4 == 0 goto label11", "r42 = org springframework security config annotation web configuration web security configuration r0", "$ r17 = r42 web security", "$ r16 = org springframework security web access intercept filter security interceptor r2", "$ r17 security interceptor $ r16", "goto label12", "label goto label09", "if $ z4 == 0 goto label11", "label goto label10", "if $ z10 == 0 goto label13", "label r43 = org springframework security config annotation web configuration web security configuration r0", "$ r4 = r43 web security customizers", "r30 = $ r4 iterator", "label $ z2 = r30 have next", "if $ z2 == 0 goto label15", "$ r8 = r30 next", "r31 = org springframework security config annotation web configuration web security customizer $ r8", "r44 = org springframework security config annotation web configuration web security configuration r0", "$ r9 = r44 web security", "r31 customize $ r9", "goto label14", "if $ z2 == 0 goto label15", "label r45 = org springframework security config annotation web configuration web security configuration r0", "$ r5 = r45 web security", "$ r6 = $ r5 build", "$ r7 = javax servlet filter $ r6", "return $ r7", "if $ z8 ! = 0 goto label06", "label $ z9 = 0", "if $ z7 ! = 0 goto label03", "label $ z8 = 0", "if $ z5 ! = 0 goto label01", "label $ z6 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [], [76], [77], [78], [79], [80], [], [82], [83], [84], [85], [86], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "specialinvoke r3 set login page r1", "r4 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "r4 update authentication default", "r5 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "r5 custom login page = 1", "r6 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "$ r2 = specialinvoke r6 get self", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "r2 auth filter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "$ r1 = r2 login process url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r23 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "$ r2 = r23 login process url", "if $ r2 ! = null goto label1", "r24 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "$ r19 = r24 login page", "r25 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "r25 login process url $ r19", "label r26 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "$ r3 = r26 failure handler", "if $ r3 ! = null goto label2", "r21 = new java lang string builder", "specialinvoke r21 < init >", "r27 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "$ r14 = r27 login page", "$ r15 = r21 append $ r14", "$ r16 = $ r15 append \\ `` ? error\\ ``", "$ r17 = $ r16 to string", "r28 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "r28 failure url $ r17", "label r29 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "$ r4 = r29 get builder", "$ r5 = org springframework security config annotation web http security builder $ r4", "$ r6 = $ r5 get configurer class \\ `` lorg springframework security config annotation web configurers logout configurer \\ ``", "r1 = org springframework security config annotation web configurers logout configurer $ r6", "if r1 == null goto label3", "$ z0 = r1 be custom logout success", "if $ z0 ! = 0 goto label3", "r22 = new java lang string builder", "specialinvoke r22 < init >", "r30 = org springframework security config annotation web configurers abstract authentication filter configurer r0", "$ r8 = r30 login page", "$ r9 = r22 append $ r8", "$ r10 = $ r9 append \\ `` ? logout\\ ``", "$ r11 = $ r10 to string", "r1 logout success url $ r11", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework security config annotation web configurers header configurer r0", "$ r2 = r4 x protection", "$ r3 = org springframework security config annotation web configurers header configurer $ x x config access $ 1000 $ r2", "r1 customize $ r3", "r5 = org springframework security config annotation web configurers header configurer r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security config annotation web configurers logout configurer r0", "r2 custom logout success = 1", "r3 = org springframework security config annotation web configurers logout configurer r0", "r3 logout success url = r1", "r4 = org springframework security config annotation web configurers logout configurer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework security config annotation web configurers oauth2 client o auth2 client configurer r0", "$ r2 = r3 authorization code grant configurer", "r1 customize $ r2", "r4 = org springframework security config annotation web configurers oauth2 client o auth2 client configurer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r6 = new org springframework security access intercept aspectj method invocation adapter", "specialinvoke $ r6 < init > r1", "r3 = specialinvoke r0 before invocation $ r6", "label r4 = r2 proceed with object", "label specialinvoke r0 finally invocation r3", "goto label5", "label $ r7 = specialinvoke r0 after invocation r3 r4", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 instanceof javax security auth callback password callback", "if $ z0 == 0 goto label1", "$ r3 = javax security auth callback password callback r1", "$ r4 = r2 get credential", "$ r5 = $ r4 to string", "$ r6 = $ r5 to char array", "$ r3 set password $ r6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r0 = org springframework security core context security context holder strategy", "$ r0 clear context", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org springframework security core userdetails jdbc jdbc dao impl r0", "$ r2 = r7 get jdbc template", "r8 = org springframework security core userdetails jdbc jdbc dao impl r0", "$ r4 = r8 group authority by username query", "$ r3 = newarray java lang string [ 1 ]", "$ r3 [ 0 ] = r1", "r9 = org springframework security core userdetails jdbc jdbc dao impl r0", "$ r5 = jdbc dao impl $ lambda_load group authorities_2__3 bootstrap $ r9", "$ r6 = $ r2 query $ r4 $ r3 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = org springframework security crypto codec utf8 charset", "$ r3 = $ r2 new encoder", "$ r4 = java nio char buffer wrap r0", "r8 = $ r3 encode $ r4", "$ i0 = r8 limit", "r1 = newarray byte [ $ i0 ]", "$ r5 = r8 array", "$ i1 = r8 limit", "java lang system arraycopy $ r5 0 r1 0 $ i1", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security oauth2 client registration client registration r0", "$ r1 = r2 client secret", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` request cache can not be null\\ ``", "r2 = org springframework security oauth2 client web server o auth2 authorization request redirect web filter r0", "r2 request cache = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security oauth2 core abstract o auth2 token r0", "$ r1 = r2 issue at", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "org springframework util assert have text r1 \\ `` target url parameter can not be empty\\ ``", "label r2 = org springframework security web authentication abstract authentication target url request handler r0", "r2 target url parameter = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security web authentication abstract authentication target url request handler r0", "r2 redirect strategy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "org springframework util assert not null r1 \\ `` http servlet request required\\ ``", "r10 = org springframework security web authentication logout security context logout handler r0", "$ z0 = r10 invalidate http session", "if $ z0 == 0 goto label1", "r8 = r1 get session 0", "if r8 == null goto label1", "r8 invalidate", "r11 = org springframework security web authentication logout security context logout handler r0", "$ r4 = r11 logger", "$ z1 = $ r4 be debug enabled", "if $ z1 == 0 goto label1", "r12 = org springframework security web authentication logout security context logout handler r0", "$ r5 = r12 logger", "$ r6 = r8 get id", "$ r7 = org springframework core log log message format \\ `` invalidated session % s\\", "$ r5 debug $ r7", "label r13 = org springframework security web authentication logout security context logout handler r0", "$ z2 = r13 clear authentication", "if $ z2 == 0 goto label2", "r9 = org springframework security core context security context holder get context", "r9 set authentication null", "label org springframework security core context security context holder clear context", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework security web authentication preauth request header authentication filter r0", "r1 exception if header miss = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r38 = org springframework security web authentication rememberme abstract remember me service r0", "r3 = r38 extract remember me cookie r1", "if r3 ! = null goto label1", "return null", "if r3 ! = null goto label1", "label r39 = org springframework security web authentication rememberme abstract remember me service r0", "$ r5 = r39 logger", "$ r5 debug \\ `` remember-me cookie detected\\ ``", "$ i0 = r3 length", "if $ i0 ! = 0 goto label2", "r40 = org springframework security web authentication rememberme abstract remember me service r0", "$ r9 = r40 logger", "$ r9 debug \\ `` cookie be empty\\ ``", "r41 = org springframework security web authentication rememberme abstract remember me service r0", "r41 cancel cookie r1 r2", "if $ i0 ! = 0 goto label2", "label r42 = org springframework security web authentication rememberme abstract remember me service r0", "r30 = r42 decode cookie r3", "r43 = org springframework security web authentication rememberme abstract remember me service r0", "r4 = r43 process auto login cookie r30 r1 r2", "r44 = org springframework security web authentication rememberme abstract remember me service r0", "$ r6 = r44 user detail checker", "$ r6 check r4", "r45 = org springframework security web authentication rememberme abstract remember me service r0", "$ r7 = r45 logger", "$ r7 debug \\ `` remember-me cookie accepted\\ ``", "r46 = org springframework security web authentication rememberme abstract remember me service r0", "$ r8 = r46 create successful authentication r1 r4", "label return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security web authentication session session fixation protection event r0", "$ r1 = r2 old session id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework security web authentication simple url authentication failure handler r0", "r1 forward to destination = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` exit user matcher can not be null\\ ``", "r2 = org springframework security web authentication switchuser switch user filter r0", "r2 exit user matcher = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework security web authentication switchuser switch user grant authority r0", "$ r1 = r2 source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have text r1 \\ `` password parameter must not be empty or null\\ ``", "r2 = org springframework security web authentication username password authentication filter r0", "r2 password parameter = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework security web filter invocation r0", "$ r1 = r3 request", "$ r2 = org springframework security web util url utils build full request url $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "$ r2 = org springframework security web firewall strict http firewall forbidden_backslash", "r3 = org springframework security web firewall strict http firewall r0", "specialinvoke r3 url blocklists remove all $ r2", "goto label2", "label return", "if z0 == 0 goto label1", "label $ r1 = org springframework security web firewall strict http firewall forbidden_backslash", "r4 = org springframework security web firewall strict http firewall r0", "specialinvoke r4 url blocklists add all $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = specialinvoke r0 get parameter r1", "if r2 == null goto label1", "return r2", "if r2 == null goto label1", "label r6 = org springframework security web savedrequest save request aware wrapper r0", "$ r4 = r6 save request", "r3 = $ r4 get parameter value r1", "if r3 == null goto label2", "$ i0 = lengthof r3", "if $ i0 ! = 0 goto label3", "label return null", "if $ i0 ! = 0 goto label3", "label $ r5 = r3 [ 0 ]", "return $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` authentication failure handler can not be null\\ ``", "r2 = org springframework security web server authentication authentication web filter r0", "r2 authentication failure handler = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have length r1 \\ `` parameter name can\\'t be null\\ ``", "r2 = org springframework security web server csrf cookie server csrf token repository r0", "r2 parameter name = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have length r1 \\ `` header name can\\'t be null\\ ``", "r2 = org springframework security web server csrf cookie server csrf token repository r0", "r2 header name = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework security web server csrf cookie server csrf token repository r0", "r2 cookie domain = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org springframework expression spel support standard evaluation context", "r4 = new org springframework security web util matcher e l request matcher context", "specialinvoke r4 < init > r1", "specialinvoke r5 < init > r4", "r6 = org springframework expression evaluation context r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework mock http mock http output message r0", "$ r1 = r2 header", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework mock web mock http servlet request r0", "$ z0 = r1 active", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework mock web mock http servlet request r0", "r1 close", "r2 = org springframework mock web mock http servlet request r0", "r2 clear attribute", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = org springframework mock web mock http servlet request r0", "$ r1 = r8 session", "if $ r1 == null goto label1", "$ z1 = 1", "goto label2", "label org springframework util assert be true $ z1 \\ `` the request do not have a session\\ ``", "r9 = org springframework mock web mock http servlet request r0", "$ r2 = r9 session", "$ z0 = $ r2 instanceof org springframework mock web mock http session", "if $ z0 == 0 goto label3", "r10 = org springframework mock web mock http servlet request r0", "$ r5 = r10 session", "$ r6 = org springframework mock web mock http session $ r5", "$ r7 = $ r6 change session id", "return $ r7", "if $ z0 == 0 goto label3", "label r11 = org springframework mock web mock http servlet request r0", "$ r3 = r11 session", "$ r4 = $ r3 get id", "return $ r4", "if $ r1 == null goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework mock web mock jsp writer r0", "$ r1 = r5 target writer", "if $ r1 ! = null goto label1", "r6 = org springframework mock web mock jsp writer r0", "$ r3 = r6 response", "$ r4 = $ r3 get writer", "r7 = org springframework mock web mock jsp writer r0", "r7 target writer = $ r4", "label r8 = org springframework mock web mock jsp writer r0", "$ r2 = r8 target writer", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework test context context configuration attribute r0", "$ r1 = r2 location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org springframework test context junit4 abstract transactional j unit4 spring context test r0", "$ r3 = r4 jdbc template", "$ i0 = org springframework test jdbc jdbc test utils count row in table where $ r3 r1 r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework test context junit4 abstract transactional j unit4 spring context test r0", "$ r2 = r3 jdbc template", "$ i0 = org springframework test jdbc jdbc test utils delete from table $ r2 r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org springframework test context junit4 abstract transactional j unit4 spring context test r0", "$ r4 = r5 jdbc template", "$ i0 = org springframework test jdbc jdbc test utils delete from table where $ r4 r1 r2 r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework test context junit4 spring j unit4 class runner r0", "$ r2 = r5 get test class", "$ r3 = $ r2 get java class", "$ z0 = org springframework test annotation profile value utils be test enable in this environment $ r3", "if $ z0 ! = 0 goto label1", "r6 = org springframework test context junit4 spring j unit4 class runner r0", "$ r4 = r6 get description", "r1 fire test ignore $ r4", "return", "if $ z0 ! = 0 goto label1", "label specialinvoke r0 run r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` class must not be null\\ ``", "r38 = org springframework test context support abstract context loader r0", "r2 = r38 get resource suffix", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label5", "r4 = r2 [ i1 ]", "org springframework util assert have text r4 \\ `` resource suffix must not be empty\\ ``", "r35 = new java lang string builder", "specialinvoke r35 < init >", "$ r16 = r1 get name", "$ r17 = org springframework util class utils convert class name to resource path $ r16", "$ r18 = r35 append $ r17", "$ r19 = $ r18 append r4", "r5 = $ r19 to string", "r36 = new org springframework core io class path resource", "specialinvoke r36 < init > r5", "$ z1 = r36 exist", "if $ z1 == 0 goto label3", "r37 = new java lang string builder", "specialinvoke r37 < init >", "$ r27 = r37 append \\ `` classpath\\ ``", "$ r28 = $ r27 append r5", "r7 = $ r28 to string", "$ r29 = org springframework test context support abstract context loader logger", "$ z3 = $ r29 be info enabled", "if $ z3 == 0 goto label2", "$ r32 = org springframework test context support abstract context loader logger", "$ r31 = newarray java lang object [ 2 ]", "$ r31 [ 0 ] = r7", "$ r33 = r1 get name", "$ r31 [ 1 ] = $ r33", "$ r34 = java lang string format \\ `` detect default resource location \\\\\\ `` % s\\\\\\ `` for test class [ % s ] \\", "$ r32 info $ r34", "label $ r30 = newarray java lang string [ 1 ]", "$ r30 [ 0 ] = r7", "return $ r30", "if $ z1 == 0 goto label3", "label $ r21 = org springframework test context support abstract context loader logger", "$ z2 = $ r21 be debug enabled", "if $ z2 == 0 goto label4", "$ r23 = org springframework test context support abstract context loader logger", "$ r22 = newarray java lang object [ 2 ]", "$ r24 = r1 get name", "$ r22 [ 0 ] = $ r24", "$ r22 [ 1 ] = r36", "$ r25 = java lang string format \\ `` do not detect default resource location for test class [ % s ] % s do not exist\\", "$ r23 debug $ r25", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label5", "label $ r8 = org springframework test context support abstract context loader logger", "$ z0 = $ r8 be info enabled", "if $ z0 == 0 goto label6", "$ r11 = org springframework test context support abstract context loader logger", "$ r10 = newarray java lang object [ 2 ]", "$ r12 = r1 get name", "$ r10 [ 0 ] = $ r12", "$ r13 = org springframework util object utils null safe to string r2", "$ r10 [ 1 ] = $ r13", "$ r14 = java lang string format \\ `` could not detect default resource location for test class [ % s ] no resource find for suffix % s \\", "$ r11 info $ r14", "label $ r9 = org springframework test context support abstract context loader empty_string_array", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], []]}
{"nodes": ["$ r0 = org springframework test context transaction test transaction require current transaction context", "$ z0 = $ r0 be flag for rollback", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = org springframework test context transaction transactional test execution listener r0", "z3 = r16 be default rollback r1", "$ r3 = r1 get test method", "$ r4 = org springframework core annotation annotate element utils find merge annotation $ r3 class \\ `` lorg springframework test annotation rollback \\ ``", "r2 = org springframework test annotation rollback $ r4", "if r2 == null goto label2", "z0 = r2 value", "$ r10 = org springframework test context transaction transactional test execution listener logger", "$ z2 = $ r10 be debug enabled", "if $ z2 == 0 goto label1", "$ r12 = org springframework test context transaction transactional test execution listener logger", "$ r11 = newarray java lang object [ 3 ]", "$ r13 = java lang boolean value of z0", "$ r11 [ 0 ] = $ r13", "$ r14 = java lang boolean value of z3", "$ r11 [ 1 ] = $ r14", "$ r11 [ 2 ] = r1", "$ r15 = java lang string format \\ `` method-level @ rollback % s override default rollback [ % s ] for test context % s \\", "$ r12 debug $ r15", "label z3 = z0", "goto label3", "label return z3", "if r2 == null goto label2", "label $ r5 = org springframework test context transaction transactional test execution listener logger", "$ z1 = $ r5 be debug enabled", "if $ z1 == 0 goto label3", "$ r7 = org springframework test context transaction transactional test execution listener logger", "$ r6 = newarray java lang object [ 2 ]", "$ r8 = java lang boolean value of z3", "$ r6 [ 0 ] = $ r8", "$ r6 [ 1 ] = r1", "$ r9 = java lang string format \\ `` no method-level @ rollback override use default rollback [ % s ] for test context % s \\", "$ r7 debug $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org springframework test web client match content request matcher $ 2", "r4 = org springframework test web client match content request matcher r0", "specialinvoke r3 < init > r4 r1", "r5 = org springframework test web client request matcher r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = new org springframework test web client match json path request matcher $ 5", "r3 = org springframework test web client match json path request matcher r0", "specialinvoke r2 < init > r3", "r4 = org springframework test web client request matcher r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = mock rest request matcher $ lambda_query param_6__9 bootstrap $ r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org springframework test web client match content request matcher", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org springframework test web client match xpath request matcher r0", "$ r1 = xpath request matcher $ lambda_node count_4__5 bootstrap $ r2 i0", "r3 = org springframework test web client request matcher $ r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework test web client match xpath request matcher r0", "$ r2 = xpath request matcher $ lambda_number_8__5 bootstrap $ r3 r1", "r4 = org springframework test web client request matcher $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = org springframework test web model and view assert assert and return model attribute of type r0 r1 class \\ `` ljava util list \\ ``", "r3 = java util list $ r4", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` size of model list be \\'\\ ``", "$ i0 = r3 size", "$ r7 = $ r6 append $ i0", "$ r8 = $ r7 append \\ `` \\ ' while size of expect list be \\'\\ ``", "$ i1 = r2 size", "$ r9 = $ r8 append $ i1", "$ r10 = $ r9 append \\ `` \\'\\ ``", "$ r11 = $ r10 to string", "$ i2 = r2 size", "$ i3 = r3 size", "if $ i2 ! = $ i3 goto label1", "$ z1 = 1", "goto label2", "label org springframework test util assertion error assert true $ r11 $ z1", "$ r12 = new java lang string builder", "specialinvoke $ r12 < init >", "$ r13 = $ r12 append \\ `` list in model under name \\'\\ ``", "$ r14 = $ r13 append r1", "$ r15 = $ r14 append \\ `` \\ ' be not equal to the expected list \\ ``", "$ r16 = $ r15 to string", "$ z0 = r2 equal r3", "org springframework test util assertion error assert true $ r16 $ z0", "return", "if $ i2 ! = $ i3 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ r1 = java lang long value of l0", "r5 = org springframework test web reactive server header assertion r0", "$ r2 = specialinvoke r5 get header", "$ l1 = $ r2 get last modified", "$ r3 = java lang long value of $ l1", "r6 = org springframework test web reactive server header assertion r0", "$ r4 = specialinvoke r6 assert header \\ `` last- modified\\", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org springframework test web reactive server json path assertion r0", "$ r5 = r7 path helper", "r8 = org springframework test web reactive server json path assertion r0", "$ r4 = r8 content", "r3 = $ r5 evaluate json path $ r4 r2", "r1 accept r3", "r9 = org springframework test web reactive server json path assertion r0", "$ r6 = r9 body spec", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework http http status $ series server_error", "r3 = org springframework test web reactive server status assertion r0", "$ r2 = specialinvoke r3 assert series and return r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org springframework test web reactive server status assertion r0", "$ r2 = r7 exchange result", "$ r3 = $ r2 get status", "i0 = $ r3 value", "r8 = org springframework test web reactive server status assertion r0", "$ r4 = r8 exchange result", "$ r5 = status assertion $ lambda_value_3__5 bootstrap $ r1 i0", "$ r4 assert with diagnostics $ r5", "r9 = org springframework test web reactive server status assertion r0", "$ r6 = r9 response spec", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org springframework util string utils have text r1", "if $ z0 == 0 goto label3", "$ z1 = r1 start with \\ `` \\ ``", "org springframework util assert be true $ z1 \\ `` servlet path must start with a \\ ' \\'\\ ``", "$ z2 = r1 end with \\ `` \\ ``", "if $ z2 ! = 0 goto label1", "$ z3 = 1", "goto label2", "label org springframework util assert be true $ z3 \\ `` servlet path must not end with a \\ ' \\'\\ ``", "label r2 = org springframework test web servlet request mock http servlet request builder r0", "r2 servlet path = r1", "r3 = org springframework test web servlet request mock http servlet request builder r0", "return r3", "if $ z2 ! = 0 goto label1", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org springframework test web servlet request mock http servlet request builder r0", "$ r3 = r4 session attribute", "org springframework test web servlet request mock http servlet request builder add to map $ r3 r1 r2", "r5 = org springframework test web servlet request mock http servlet request builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework http medium type parse medium type r1", "r4 = org springframework test web servlet result content result matcher r0", "$ r3 = r4 content type $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework http medium type parse medium type r1", "r4 = org springframework test web servlet result content result matcher r0", "$ r3 = r4 content type compatible with $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = cookie result matcher $ lambda_exists_2__4 bootstrap $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ r2 = cookie result matcher $ lambda_max age_5__14 bootstrap $ r1 i0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = header result matcher $ lambda_does not exist_5__5 bootstrap $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "$ r2 = header result matcher $ lambda_date value_7__4 bootstrap $ r1 l0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework test web servlet result json path result matcher r0", "$ r2 = json path result matcher $ lambda_value_2__8 bootstrap $ r3 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework test web servlet result json path result matcher r0", "$ r2 = json path result matcher $ lambda_value_2__7 bootstrap $ r3 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = mock mvc result matcher $ lambda_forwarded url_0__3 bootstrap $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org springframework web util uri component builder from uri string r0", "$ r4 = $ r3 build and expand r1", "$ r5 = $ r4 encode", "r2 = $ r5 to uri string", "$ r6 = org springframework test web servlet result mock mvc result matcher forward url r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org springframework web util uri component builder from uri string r0", "$ r4 = $ r3 build and expand r1", "$ r5 = $ r4 encode", "r2 = $ r5 to uri string", "$ r6 = org springframework test web servlet result mock mvc result matcher redirect url r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r0 = new org springframework test web servlet result content result matcher", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework test web servlet result model result matcher r0", "$ r1 = model result matcher $ lambda_has no errors_12__6 bootstrap $ r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r3 = org springframework test web servlet setup standalone mock mvc builder r0", "r3 message converter = $ r2", "r4 = org springframework test web servlet setup standalone mock mvc builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework test web servlet setup standalone mock mvc builder r0", "r2 conversion service = r1", "r3 = org springframework test web servlet setup standalone mock mvc builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework test web servlet setup standalone mock mvc builder r0", "r1 use suffix pattern match = z0", "r2 = org springframework test web servlet setup standalone mock mvc builder r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r5 = org springframework test context test context manager logger", "$ z0 = $ r5 be trace enabled", "if $ z0 == 0 goto label1", "$ r11 = org springframework test context test context manager logger", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r12 = r26 append \\ `` prepare test instance instance [ \\ ``", "$ r13 = $ r12 append r1", "$ r14 = $ r13 append \\ `` ] \\ ``", "$ r15 = $ r14 to string", "$ r11 trace $ r15", "label r28 = org springframework test context test context manager r0", "$ r6 = r28 get test context", "$ r6 update state r1 null null", "r29 = org springframework test context test context manager r0", "$ r7 = r29 get test execution listener", "r2 = $ r7 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label8", "$ r8 = r2 next", "r3 = org springframework test context test execution listener $ r8", "label r30 = org springframework test context test context manager r0", "$ r9 = r30 get test context", "r3 prepare test instance $ r9", "label goto label7", "label goto label2", "if $ z2 == 0 goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework test web reactive server cookie assertion r0", "specialinvoke r4 get cookie r1", "r5 = org springframework test web reactive server cookie assertion r0", "$ r3 = r5 response spec", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java util array a list r2", "r7 = org springframework test web reactive server header assertion r0", "$ r4 = specialinvoke r7 get header", "$ r5 = $ r4 get or empty r1", "r8 = org springframework test web reactive server header assertion r0", "$ r6 = specialinvoke r8 assert header r1 $ r3 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["$ r1 = new org springframework http cache control", "specialinvoke $ r1 < init >", "$ r1 no cache = 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org springframework http client multipart body builder r0", "$ r3 = r4 part r1 r2 null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework http client support http accessor r0", "$ r1 = r2 request factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework http client support http accessor r0", "$ r1 = r2 client http request initializers", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework http client support intercept http accessor r0", "$ r1 = r2 interceptor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework http codec form http message reader r0", "r1 max in memory size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org springframework http codec support base default codecs r0", "specialinvoke r3 init codec r2", "r1 add r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new org springframework http content disposition", "specialinvoke $ r0 < init > \\ `` \\", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` \\'part converter\\ ' must not be null\\ ``", "r3 = org springframework http converter form http message converter r0", "$ r2 = r3 part converter", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org springframework http converter json jackson2 object mapper builder r0", "r2 default use wrapper = $ r1", "r3 = org springframework http converter json jackson2 object mapper builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r7 = org springframework http converter json jackson2 object mapper builder r0", "$ r5 = r7 feature", "$ r4 = java lang boolean true", "$ r5 put r3 $ r4", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r8 = org springframework http converter json jackson2 object mapper builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ r1 = java lang long to string l0", "r2 = org springframework http http header r0", "r2 set \\ `` content- length\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org springframework util string utils have length r0", "if $ z0 ! = 0 goto label1", "$ r8 = java util collection empty list", "return $ r8", "if $ z0 ! = 0 goto label1", "label r1 = org springframework util mime type utils tokenize r0", "$ r5 = new java util array list", "$ i0 = r1 size", "specialinvoke $ r5 < init > $ i0", "r3 = r1 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label4", "$ r6 = r3 next", "r4 = java lang string $ r6", "$ z2 = org springframework util string utils have text r4", "if $ z2 == 0 goto label3", "$ r7 = org springframework http medium type parse medium type r4", "$ r5 add $ r7", "label goto label2", "if $ z1 == 0 goto label4", "label return $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org springframework http http method put", "$ r2 = org springframework http request entity method $ r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org springframework remoting caucho hessian client interceptor r0", "$ r1 = r2 proxy factory", "$ r1 set read timeout l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new org springframework remoting rmi codebase aware object input stream", "r6 = org springframework remoting httpinvoker abstract http invoker request executor r0", "$ r4 = r6 get bean class loader", "specialinvoke r5 < init > r1 $ r4 r2", "r7 = java io object input stream r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting httpinvoker http invoker client interceptor r0", "r2 codebase url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework remoting jaxws abstract jax w service exporter r0", "r2 bind type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org springframework remoting jaxws abstract jax w service exporter r0", "$ r3 = r5 publish endpoint", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r4 = r1 next", "r2 = javax xml ws endpoint $ r4", "r2 stop", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework remoting jaxws jax w port client interceptor r0", "$ r1 = r2 soap action uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework remoting jaxws jax w port client interceptor r0", "$ r1 = r2 service interface", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework remoting jaxws jax w port client interceptor r0", "$ r1 = r2 bean class loader", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r15 = org springframework remoting jaxws jax w port client interceptor r0", "r1 = r15 get service interface", "org springframework util assert not null r1 \\ `` property \\'service interface\\ ' be required\\ ``", "$ r4 = r1 get annotation class \\ `` ljavax jws web service \\ ``", "r2 = javax jws web service $ r4", "if r2 == null goto label1", "r16 = org springframework remoting jaxws jax w port client interceptor r0", "r16 apply default from annotation r2", "label r17 = org springframework remoting jaxws jax w port client interceptor r0", "r12 = r17 get jax w service", "if r12 ! = null goto label2", "r18 = org springframework remoting jaxws jax w port client interceptor r0", "r12 = r18 create jax ws service", "label r19 = org springframework remoting jaxws jax w port client interceptor r0", "$ r5 = r19 get port name", "if $ r5 == null goto label3", "r20 = org springframework remoting jaxws jax w port client interceptor r0", "$ r13 = r20 get port name", "goto label4", "label r21 = org springframework remoting jaxws jax w port client interceptor r0", "$ r6 = r21 get q name $ r13", "r22 = org springframework remoting jaxws jax w port client interceptor r0", "r22 port q name = $ r6", "$ r8 = r12", "r23 = org springframework remoting jaxws jax w port client interceptor r0", "$ r7 = r23 get port name", "if $ r7 == null goto label5", "r24 = org springframework remoting jaxws jax w port client interceptor r0", "$ r14 = r24 port q name", "goto label6", "label r25 = org springframework remoting jaxws jax w port client interceptor r0", "r3 = r25 get port stub $ r8 $ r14", "r26 = org springframework remoting jaxws jax w port client interceptor r0", "r26 prepare port stub r3", "r27 = org springframework remoting jaxws jax w port client interceptor r0", "r27 port stub = r3", "return", "if $ r7 == null goto label5", "label $ r14 = null", "if $ r5 == null goto label3", "label $ r13 = r1 get name"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework remoting jaxws local jax w service factory r0", "$ r1 = r2 wsdl document url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web accept content negotiation manager factory bean r0", "r2 servlet context = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web bind miss matrix variable exception r0", "$ r1 = r2 parameter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "d0 = @ parameter2", "$ r3 = r0 get parameter r1", "if $ r3 ! = null goto label1", "return d0", "if $ r3 ! = null goto label1", "label $ d1 = org springframework web bind servlet request utils get require double parameter r0 r1", "label return $ d1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r9 = org springframework web bind support default session attribute store r0", "$ r4 = r9 attribute name prefix", "$ r5 = r8 append $ r4", "$ r6 = $ r5 append r2", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web bind web data binder r0", "r2 field marker prefix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web bind web data binder r0", "r1 bind empty multipart file = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org springframework web context request async web async task r0", "$ r1 = r9 executor", "if $ r1 == null goto label1", "r10 = org springframework web context request async web async task r0", "$ r8 = r10 executor", "return $ r8", "if $ r1 == null goto label1", "label r11 = org springframework web context request async web async task r0", "$ r2 = r11 executor name", "if $ r2 == null goto label4", "r12 = org springframework web context request async web async task r0", "$ r3 = r12 bean factory", "if $ r3 == null goto label2", "$ z0 = 1", "goto label3", "label org springframework util assert state $ z0 \\ `` bean factory be require to look up an executor bean by name\\ ``", "r13 = org springframework web context request async web async task r0", "$ r5 = r13 bean factory", "r14 = org springframework web context request async web async task r0", "$ r4 = r14 executor name", "$ r6 = $ r5 get bean $ r4 class \\ `` lorg springframework core task async task executor \\ ``", "$ r7 = org springframework core task async task executor $ r6", "return $ r7", "if $ r3 == null goto label2", "label $ z0 = 0", "if $ r2 == null goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["$ r0 = org springframework web context request request context holder request attribute holder", "$ r1 = $ r0 get", "r4 = org springframework web context request request attribute $ r1", "if r4 ! = null goto label1", "$ r2 = org springframework web context request request context holder inheritable request attribute holder", "$ r3 = $ r2 get", "r4 = org springframework web context request request attribute $ r3", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web context support generic web application context r0", "r2 servlet context = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org springframework web context support groovy web application context r0", "r2 = r5 get config location", "if r2 == null goto label2", "i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label2", "r4 = r2 [ i2 ]", "r1 load bean definition r4", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web context support servlet context resource r0", "$ r1 = r2 servlet context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org springframework web context support servlet context resource", "r5 = org springframework web context support servlet context resource loader r0", "$ r3 = r5 servlet context", "specialinvoke r4 < init > $ r3 r1", "r6 = org springframework core io resource r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web filter abstract request log filter r0", "r1 include payload = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web filter abstract request log filter r0", "r2 after message prefix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r39 = new java lang string builder", "specialinvoke r39 < init >", "r39 append r2", "$ r7 = r1 get method", "$ r8 = r39 append $ r7", "$ r8 append \\ `` \\ ``", "$ r10 = r1 get request u r i", "r39 append $ r10", "r41 = org springframework web filter abstract request log filter r0", "$ z0 = r41 be include query string", "if $ z0 == 0 goto label1", "r30 = r1 get query string", "if r30 == null goto label1", "$ r28 = r39 append 63", "$ r28 append r30", "label r42 = org springframework web filter abstract request log filter r0", "$ z4 = r42 be include client info", "if $ z4 == 0 goto label4", "r31 = r1 get remote addr", "$ z3 = org springframework util string utils have length r31", "if $ z3 == 0 goto label2", "$ r26 = r39 append \\", "$ r26 append r31", "label r32 = r1 get session 0", "if r32 == null goto label3", "$ r23 = r39 append \\", "$ r24 = r32 get id", "$ r23 append $ r24", "label r33 = r1 get remote user", "if r33 == null goto label4", "$ r21 = r39 append \\", "$ r21 append r33", "label r43 = org springframework web filter abstract request log filter r0", "$ z5 = r43 be include header", "if $ z5 == 0 goto label8", "r40 = new org springframework http server servlet server http request", "specialinvoke r40 < init > r1", "r34 = r40 get header", "r44 = org springframework web filter abstract request log filter r0", "$ r16 = r44 get header predicate", "if $ r16 == null goto label7", "r35 = r1 get header name", "label $ z1 = r35 have more element", "if $ z1 == 0 goto label7", "$ r19 = r35 next element", "r36 = java lang string $ r19", "r45 = org springframework web filter abstract request log filter r0", "$ r20 = r45 get header predicate", "$ z2 = $ r20 test r36", "if $ z2 ! = 0 goto label6", "r34 set r36 \\ `` masked\\ ``", "label goto label5", "if $ z1 == 0 goto label7", "label $ r17 = r39 append \\", "$ r17 append r34", "label r46 = org springframework web filter abstract request log filter r0", "$ z6 = r46 be include payload", "if $ z6 == 0 goto label9", "r47 = org springframework web filter abstract request log filter r0", "r37 = r47 get message payload r1", "if r37 == null goto label9", "$ r13 = r39 append \\", "$ r13 append r37", "label r39 append r3", "$ r38 = r39 to string", "return $ r38"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web filter generic filter bean r0", "r2 servlet context = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web http medium type exception r0", "$ r1 = r2 support medium type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web jsf delegate navigation handler proxy r0", "$ r2 = r3 get web application context r1", "r4 = org springframework bean factory bean factory $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework web jsf face context utils get require web application context r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web method handler method r0", "$ r1 = r2 bean type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web method handler method r0", "$ r1 = r2 resolve from handler method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web method support model and view container r0", "r1 ignore default model on redirect = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web method support model and view container r0", "r2 view = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = org springframework web method support model and view container r0", "$ z0 = specialinvoke r6 use default model", "if $ z0 == 0 goto label1", "r7 = org springframework web method support model and view container r0", "$ r4 = r7 default model", "return $ r4", "if $ z0 == 0 goto label1", "label r8 = org springframework web method support model and view container r0", "$ r1 = r8 redirect model", "if $ r1 ! = null goto label2", "r5 = new org springframework ui model map", "specialinvoke r5 < init >", "r9 = org springframework web method support model and view container r0", "r9 redirect model = r5", "label r10 = org springframework web method support model and view container r0", "$ r2 = r10 redirect model", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web method support model and view container r0", "$ r1 = r2 status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web method support model and view container r0", "$ r2 = r3 bind disabled", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web method support model and view container r0", "$ z0 = r1 request handle", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web multipart common common file upload support r0", "$ r2 = r3 file upload", "$ r2 set header encode r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang illegal state exception", "specialinvoke $ r1 < init > \\ `` multipart request not initialized\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web multipart support multipart filter r0", "r2 multipart resolver bean name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org springframework context configurable application context", "if $ z0 == 0 goto label1", "r2 = org springframework context configurable application context r1", "$ z1 = r2 be active", "if $ z1 ! = 0 goto label1", "r2 refresh", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get header", "$ r5 = org springframework web server adapter forward header transformer forwarded_header_names", "r3 = $ r5 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r6 = r3 next", "r4 = java lang string $ r6", "$ z1 = r2 contain key r4", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org springframework web server response status exception", "if $ z0 == 0 goto label1", "$ r2 = org springframework web server response status exception r1", "$ r3 = $ r2 get status", "return $ r3", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework web server i18n accept header locale context resolver r0", "$ r2 = r4 support locale", "$ r2 clear", "r5 = org springframework web server i18n accept header locale context resolver r0", "$ r3 = r5 support locale", "$ r3 add all r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web server session in memory web session store r0", "$ i0 = r1 max session", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` http servlet response must not be null\\ ``", "r12 = org springframework web util cookie generator r0", "r2 = r12 create cookie \\ `` \\ ``", "r2 set max age 0", "r13 = org springframework web util cookie generator r0", "$ z0 = r13 be cookie secure", "if $ z0 == 0 goto label1", "r2 set secure 1", "label r14 = org springframework web util cookie generator r0", "$ z1 = r14 be cookie http only", "if $ z1 == 0 goto label2", "r2 set http only 1", "label r1 add cookie r2", "r15 = org springframework web util cookie generator r0", "$ r3 = r15 logger", "$ z2 = $ r3 be trace enabled", "if $ z2 == 0 goto label3", "r16 = org springframework web util cookie generator r0", "$ r5 = r16 logger", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r6 = r11 append \\ `` remove cookie \\'\\ ``", "r17 = org springframework web util cookie generator r0", "$ r7 = r17 get cookie name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` \\'\\ ``", "$ r10 = $ r9 to string", "$ r5 trace $ r10", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web util pattern path pattern parser r0", "r1 case sensitive = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "org springframework util assert not null r0 \\ `` http url must not be null\\ ``", "$ r7 = org springframework web util uri component builder http_url_pattern", "r1 = $ r7 matcher r0", "$ z0 = r1 match", "if $ z0 == 0 goto label6", "$ r14 = new org springframework web util uri component builder", "specialinvoke $ r14 < init >", "r3 = r1 group 1", "if r3 == null goto label1", "$ r32 = r3 to lower case", "goto label2", "label $ r14 scheme $ r32", "$ r16 = r1 group 4", "$ r14 user info $ r16", "r4 = r1 group 5", "$ z1 = org springframework util string utils have length r3", "if $ z1 == 0 goto label3", "$ z4 = org springframework util string utils have length r4", "if $ z4 ! = 0 goto label3", "$ r25 = new java lang illegal argument exception", "$ r26 = new java lang string builder", "specialinvoke $ r26 < init >", "$ r27 = $ r26 append \\ `` [ \\ ``", "$ r28 = $ r27 append r0", "$ r29 = $ r28 append \\ `` ] be not a valid http url\\ ``", "$ r30 = $ r29 to string", "specialinvoke $ r25 < init > $ r30", "throw $ r25", "if $ z4 ! = 0 goto label3", "label $ r14 host r4", "r5 = r1 group 7", "$ z2 = org springframework util string utils have length r5", "if $ z2 == 0 goto label4", "$ r14 port r5", "label $ r19 = r1 group 8", "$ r14 path $ r19", "$ r21 = r1 group 10", "$ r14 query $ r21", "r6 = r1 group 12", "$ z3 = org springframework util string utils have text r6", "if $ z3 == 0 goto label5", "$ r14 fragment r6", "label return $ r14", "if r3 == null goto label1", "label $ r32 = null", "if $ z0 == 0 goto label6", "label $ r8 = new java lang illegal argument exception", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` [ \\ ``", "$ r11 = $ r10 append r0", "$ r12 = $ r11 append \\ `` ] be not a valid http url\\ ``", "$ r13 = $ r12 to string", "specialinvoke $ r8 < init > $ r13", "throw $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` uri component must not be null\\ ``", "r2 = org springframework web util uri component builder r0", "r1 copy to uri component builder r2", "r3 = org springframework web util uri component builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web util uri template r0", "$ r1 = r2 variable name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org springframework util assert not null r0 \\ `` request must not be null\\ ``", "$ r4 = r0 get parameter r1", "if $ r4 == null goto label1", "return 1", "if $ r4 == null goto label1", "label r2 = org springframework web util web utils submit_image_suffixes", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label4", "r3 = r2 [ i1 ]", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append r3", "$ r8 = $ r7 to string", "$ r9 = r0 get parameter $ r8", "if $ r9 == null goto label3", "label i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = r0 read position", "$ i3 = i0 - i1", "i2 = $ i3 + 1", "$ r1 = r0 retain slice i1 i2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 write position", "$ i3 = $ i2 - i0", "i1 = $ i3 - 1", "$ i4 = i0 + 1", "$ r1 = r0 retain slice $ i4 i1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework http codec support base default codecs r0", "r1 init type writer", "r2 = org springframework http codec support base default codecs r0", "r2 init object writer", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r6 = null", "r1 = org springframework util string utils get filename extension r0", "if r1 == null goto label1", "$ r3 = org springframework http medium type factory file extension to medium type", "$ r2 = java util locale english", "$ r4 = r1 to low case $ r2", "$ r5 = $ r3 get $ r4", "r6 = java util list $ r5", "label if r6 == null goto label2", "$ r7 = r6", "goto label3", "label return $ r7", "label if r6 == null goto label2", "label $ r7 = java util collection empty list"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org springframework http http method get", "$ r3 = org springframework http request entity method $ r2 r0 r1", "r4 = org springframework http request entity $ header builder $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org springframework http http method delete", "$ r3 = org springframework http request entity method $ r2 r0 r1", "r4 = org springframework http request entity $ header builder $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` the provided resource resolver should not be null\\ ``", "r3 = org springframework web reactive config resource chain registration r0", "$ r2 = r3 resolvers", "$ r2 add r1", "$ z1 = r1 instanceof org springframework web reactive resource version resource resolver", "if $ z1 == 0 goto label1", "r4 = org springframework web reactive config resource chain registration r0", "r4 have version resolver = 1", "goto label3", "label r7 = org springframework web reactive config resource chain registration r0", "return r7", "if $ z1 == 0 goto label1", "label $ z2 = r1 instanceof org springframework web reactive resource path resource resolver", "if $ z2 == 0 goto label2", "r5 = org springframework web reactive config resource chain registration r0", "r5 have path resolver = 1", "if $ z2 == 0 goto label2", "label $ z3 = r1 instanceof org springframework web reactive resource web jar resource resolver", "if $ z3 == 0 goto label3", "r6 = org springframework web reactive config resource chain registration r0", "r6 have webjars resolver = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework web reactive config view resolver registry r0", "$ r2 = r4 default view", "$ r3 = java util array a list r1", "$ r2 add all $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework web reactive function server support server response result handler r0", "r1 order = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web reactive handler abstract url handler mapping r0", "r1 lazy init handler = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = new java util link hash set", "r4 = org springframework web reactive result condition produce request condition r0", "$ r2 = r4 expression", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = new java util link hash set", "specialinvoke r8 < init >", "r9 = org springframework web reactive result condition produce request condition r0", "$ r5 = r9 expression", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = org springframework web reactive result condition produce request condition $ produce medium type expression $ r6", "$ z1 = r3 be negate", "if $ z1 ! = 0 goto label2", "$ r7 = r3 get medium type", "r8 add $ r7", "label goto label1", "if $ z0 == 0 goto label3", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r53 = new java util array list", "specialinvoke r53 < init >", "r58 = org springframework web reactive result method abstract handler method map r0", "$ r9 = r58 map registry", "r3 = $ r9 get mapping by direct path r1", "if r3 == null goto label1", "r59 = org springframework web reactive result method abstract handler method map r0", "specialinvoke r59 add matching mapping r3 r53 r1", "label $ z0 = r53 be empty", "if $ z0 == 0 goto label2", "r60 = org springframework web reactive result method abstract handler method map r0", "$ r43 = r60 map registry", "$ r44 = $ r43 get registration", "$ r45 = $ r44 key set", "r61 = org springframework web reactive result method abstract handler method map r0", "specialinvoke r61 add match mapping $ r45 r53 r1", "label $ z1 = r53 be empty", "if $ z1 ! = 0 goto label9", "r54 = new org springframework web reactive result method abstract handler method map $ match comparator", "r62 = org springframework web reactive result method abstract handler method map r0", "$ r15 = r62 get map comparator r1", "r63 = org springframework web reactive result method abstract handler method map r0", "specialinvoke r54 < init > r63 $ r15", "r64 = java util comparator r54", "r53 sort r64", "$ r16 = r53 get 0", "r5 = org springframework web reactive result method abstract handler method map $ match $ r16", "$ i0 = r53 size", "if $ i0 < = 1 goto label8", "r65 = org springframework web reactive result method abstract handler method map r0", "$ r17 = r65 logger", "$ z2 = $ r17 be trace enabled", "if $ z2 == 0 goto label3", "r66 = org springframework web reactive result method abstract handler method map r0", "$ r36 = r66 logger", "r55 = new java lang string builder", "specialinvoke r55 < init >", "$ r37 = r1 get log prefix", "$ r38 = r55 append $ r37", "$ i2 = r53 size", "$ r39 = $ r38 append $ i2", "$ r40 = $ r39 append \\ `` matching mapping \\ ``", "$ r41 = $ r40 append r53", "$ r42 = $ r41 to string", "$ r36 trace $ r42", "label $ r18 = r1 get request", "$ z3 = org springframework web cors reactive cors utils be pre flight request $ r18", "if $ z3 == 0 goto label7", "r46 = r53 iterator", "label $ z4 = r46 have next", "if $ z4 == 0 goto label6", "$ r33 = r46 next", "r47 = org springframework web reactive result method abstract handler method map $ match $ r33", "$ z5 = r47 have cors config", "if $ z5 == 0 goto label5", "$ r34 = org springframework web reactive result method abstract handler method map preflight_ambiguous_match", "return $ r34", "if $ z5 == 0 goto label5", "label goto label4", "if $ z4 == 0 goto label6", "label goto label8", "label $ r50 = org springframework web reactive result method abstract handler method map $ match access $ 100 r5", "$ r51 = r5 get handler method", "r68 = org springframework web reactive result method abstract handler method map r0", "r68 handle match $ r50 $ r51 r1", "$ r52 = r5 get handler method", "return $ r52", "if $ z3 == 0 goto label7", "label $ r19 = r53 get 1", "r48 = org springframework web reactive result method abstract handler method map $ match $ r19", "r67 = java util comparator r54", "$ i1 = r67 compare r5 r48", "if $ i1 ! = 0 goto label8", "$ r20 = r5 get handler method", "r49 = $ r20 get method", "$ r21 = r48 get handler method", "r6 = $ r21 get method", "$ r22 = r1 get request", "r7 = $ r22 get path", "r57 = new java lang illegal state exception", "r56 = new java lang string builder", "specialinvoke r56 < init >", "$ r25 = r56 append \\ `` ambiguous handler method map for \\'\\ ``", "$ r26 = $ r25 append r7", "$ r27 = $ r26 append \\ `` \\ ' { \\ ``", "$ r28 = $ r27 append r49", "$ r29 = $ r28 append \\", "$ r30 = $ r29 append r6", "$ r31 = $ r30 append \\ `` } \\ ``", "$ r32 = $ r31 to string", "specialinvoke r57 < init > $ r32", "throw r57", "if $ z1 ! = 0 goto label9", "label r69 = org springframework web reactive result method abstract handler method map r0", "$ r10 = r69 map registry", "$ r11 = $ r10 get registration", "$ r12 = $ r11 key set", "r70 = org springframework web reactive result method abstract handler method map r0", "$ r13 = r70 handle no match $ r12 r1", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [], [60], [61], [62], [63], [64], [65], [66], [67], [68], [], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [], [95], [96], [97], [98], [99], [100], [101], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web reactive result method annotation request map handler adapter r0", "r2 reactive adapter registry = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive result view bind status r0", "$ r1 = specialinvoke r2 init error message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework web reactive result view bind status r0", "$ r2 = specialinvoke r4 init error message", "$ r3 = org springframework util string utils array to delimit string $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive result view bind status r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web reactive result view freemarker free marker configurer r0", "r2 configuration = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new freemarker cache class template loader", "specialinvoke $ r2 < init > class \\ `` lorg springframework web reactive result view freemarker free marker configurer \\", "r1 add $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web reactive result view redirect view r0", "$ z0 = r1 propagate query", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java lang string builder", "specialinvoke r10 < init >", "r11 = org springframework web reactive result view request context r0", "$ r4 = r11 get context path", "$ r5 = r10 append $ r4", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 to string", "r2 = org springframework util string utils apply relative path $ r7 r1", "r12 = org springframework web reactive result view request context r0", "$ r8 = r12 get exchange", "$ r9 = $ r8 transform url r2", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web reactive result view request context r0", "$ z0 = r3 be default html escape", "r4 = org springframework web reactive result view request context r0", "$ r2 = r4 get error r1 $ z0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r3 = new org springframework web reactive result view bind status", "r4 = org springframework web reactive result view request context r0", "specialinvoke r3 < init > r4 r1 z0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework web reactive result view view resolver support r0", "r1 order = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web reactive socket adapter reactor netty web socket session r0", "$ r1 = r2 channel id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework web servlet config annotation cors registration r0", "$ r2 = r4 config", "$ r3 = java util array a list r1", "$ r2 set allow origin $ r3", "r5 = org springframework web servlet config annotation cors registration r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web servlet config annotation default servlet handler configurer r0", "r1 enable null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet config annotation interceptor registration r0", "r2 path matcher = r1", "r3 = org springframework web servlet config annotation interceptor registration r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework web servlet config annotation interceptor registration r0", "r1 order = i0", "r2 = org springframework web servlet config annotation interceptor registration r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet config annotation resource handler registration r0", "r2 cache period = r1", "r3 = org springframework web servlet config annotation resource handler registration r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new org springframework web servlet config annotation redirect view controller registration", "specialinvoke r7 < init > r1 r2", "r8 = org springframework web servlet config annotation view controller registry r0", "$ r5 = r8 application context", "r7 set application context $ r5", "r9 = org springframework web servlet config annotation view controller registry r0", "$ r6 = r9 redirect registration", "$ r6 add r7", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r1 = new org springframework web servlet mvc method annotation request map handler mapping", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet dispatcher servlet r0", "specialinvoke r2 init multipart resolver r1", "r3 = org springframework web servlet dispatcher servlet r0", "specialinvoke r3 init locale resolver r1", "r4 = org springframework web servlet dispatcher servlet r0", "specialinvoke r4 init theme resolver r1", "r5 = org springframework web servlet dispatcher servlet r0", "specialinvoke r5 init handler mapping r1", "r6 = org springframework web servlet dispatcher servlet r0", "specialinvoke r6 init handler adapter r1", "r7 = org springframework web servlet dispatcher servlet r0", "specialinvoke r7 init handler exception resolvers r1", "r8 = org springframework web servlet dispatcher servlet r0", "specialinvoke r8 init request to view name translator r1", "r9 = org springframework web servlet dispatcher servlet r0", "specialinvoke r9 init view resolvers r1", "r10 = org springframework web servlet dispatcher servlet r0", "specialinvoke r10 init flash map manager r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r14 = org springframework web servlet dispatcher servlet r0", "r3 = r14 get default strategy r1 r2", "$ i0 = r3 size", "if $ i0 == 1 goto label1", "r13 = new org springframework bean factory bean initialization exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r7 = r12 append \\ `` dispatcher servlet need exactly 1 strategy for interface [ \\ ``", "$ r8 = r2 get name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` ] \\ ``", "$ r11 = $ r10 to string", "specialinvoke r13 < init > $ r11", "r15 = java lang throwable r13", "throw r15", "if $ i0 == 1 goto label1", "label $ r4 = r3 get 0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org springframework web servlet dispatcher servlet page not find logger", "$ z0 = $ r3 be warn enabled", "if $ z0 == 0 goto label1", "$ r10 = org springframework web servlet dispatcher servlet page not find logger", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r11 = r18 append \\ `` no mapping for \\ ``", "$ r12 = r1 get method", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 append \\ `` \\ ``", "$ r15 = org springframework web servlet dispatcher servlet get request uri r1", "$ r16 = $ r14 append $ r15", "$ r17 = $ r16 to string", "$ r10 warn $ r17", "label r21 = org springframework web servlet dispatcher servlet r0", "$ z1 = r21 throw exception if no handler find", "if $ z1 == 0 goto label2", "r20 = new org springframework web servlet no handler find exception", "$ r5 = r1 get method", "$ r6 = org springframework web servlet dispatcher servlet get request uri r1", "r19 = new org springframework http server servlet server http request", "specialinvoke r19 < init > r1", "$ r8 = r19 get header", "specialinvoke r20 < init > $ r5 $ r6 $ r8", "r22 = java lang throwable r20", "throw r22", "if $ z1 == 0 goto label2", "label r2 send error 404", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = org springframework util string utils have text r1", "if $ z0 == 0 goto label1", "$ z1 = org springframework util string utils have text r2", "if $ z1 == 0 goto label1", "r4 = org springframework web servlet flash map r0", "$ r3 = r4 target request params", "$ r3 add r1 r2", "label r5 = org springframework web servlet flash map r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet framework servlet r0", "r2 context config location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet framework servlet r0", "r1 publish event = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r20 = org springframework web servlet framework servlet r0", "r2 = r20 get context class", "$ r5 = class \\ `` lorg springframework web context configurable web application context \\ ``", "$ z0 = $ r5 be assignable from r2", "if $ z0 ! = 0 goto label1", "r19 = new org springframework context application context exception", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r10 = r18 append \\ `` fatal initialization error in servlet with name \\'\\ ``", "r21 = org springframework web servlet framework servlet r0", "$ r11 = r21 get servlet name", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 append \\ `` \\ ' custom web application context class [ \\ ``", "$ r14 = r2 get name", "$ r15 = $ r13 append $ r14", "$ r16 = $ r15 append \\ `` ] be not of type configurable web application context\\ ``", "$ r17 = $ r16 to string", "specialinvoke r19 < init > $ r17", "r22 = java lang throwable r19", "throw r22", "if $ z0 ! = 0 goto label1", "label $ r6 = org springframework bean bean utils instantiate class r2", "r3 = org springframework web context configurable web application context $ r6", "r23 = org springframework web servlet framework servlet r0", "$ r7 = r23 get environment", "r3 set environment $ r7", "r3 set parent r1", "r24 = org springframework web servlet framework servlet r0", "r4 = r24 get context config location", "if r4 == null goto label2", "r3 set config location r4", "label r25 = org springframework web servlet framework servlet r0", "r25 configure and refresh web application context r3", "r26 = org springframework web context web application context r3", "return r26"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` resolve [ \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 append \\ `` ] \\ ``", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 add header \\ `` cache- control\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet handler abstract handler mapping r0", "$ r1 = r2 default handler", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework web servlet handler abstract handler method map r0", "$ r2 = r4 map registry", "$ r3 = $ r2 get handler method by map name r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet handler simple mapping exception resolver r0", "r2 exception attribute = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r2 get class", "r4 = org springframework web servlet handler simple mapping exception resolver r0", "$ i0 = specialinvoke r4 get depth r1 $ r3 0", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org springframework web servlet handler simple mapping exception resolver r0", "$ r3 = r8 status code", "$ z0 = $ r3 contain key r2", "if $ z0 == 0 goto label1", "r9 = org springframework web servlet handler simple mapping exception resolver r0", "$ r5 = r9 status code", "$ r6 = $ r5 get r2", "$ r7 = java lang integer $ r6", "return $ r7", "if $ z0 == 0 goto label1", "label r10 = org springframework web servlet handler simple mapping exception resolver r0", "$ r4 = r10 default status code", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org springframework web servlet handler simple mapping exception resolver r0", "$ r4 = r5 get model and view r1 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework web servlet i18n cookie locale resolver r0", "$ z0 = r1 reject invalid cooky", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web servlet i18n session locale resolver r0", "r2 = r3 get default locale", "if r2 ! = null goto label1", "r2 = r1 get locale", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web servlet i18n session locale resolver r0", "$ r2 = r3 get default time zone", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet model and view r0", "r2 status = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework web servlet model and view r0", "$ r1 = r3 view", "if $ r1 ! = null goto label1", "r4 = org springframework web servlet model and view r0", "$ r2 = r4 model", "r5 = java util map $ r2", "$ z0 = org springframework util collection utils be empty r5", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org springframework web servlet mvc method annotation servlet model attribute method processor r0", "r3 = r7 get uri template variable r2", "$ r6 = r3 get r1", "r4 = java lang string $ r6", "$ z0 = org springframework util string utils have text r4", "if $ z0 == 0 goto label1", "return r4", "if $ z0 == 0 goto label1", "label r5 = r2 get parameter r1", "$ z1 = org springframework util string utils have text r5", "if $ z1 == 0 goto label2", "return r5", "if $ z1 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet mvc parameterizable view controller r0", "r2 view = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet mvc parameterizable view controller r0", "r2 view = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework web servlet mvc servlet wrap controller r0", "$ r1 = r3 servlet instance", "if $ r1 == null goto label1", "r4 = org springframework web servlet mvc servlet wrap controller r0", "$ r2 = r4 servlet instance", "$ r2 destroy", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet support request context r0", "$ r1 = r2 request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ z0 = org springframework web servlet support jsp aware request context jstl present", "if $ z0 == 0 goto label1", "r5 = org springframework web servlet support jsp aware request context r0", "$ r4 = r5 get page context", "r1 = org springframework web servlet support jsp aware request context $ jstl page locale resolver get jstl locale $ r4", "if r1 == null goto label1", "return r1", "if r1 == null goto label1", "label r6 = org springframework web servlet support jsp aware request context r0", "$ r2 = r6 get request", "$ r3 = $ r2 get locale", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org springframework web servlet dispatcher servlet theme_source_attribute", "$ r2 = r0 get attribute $ r1", "$ r3 = org springframework ui context theme source $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org springframework web servlet support request context utils get theme resolver r0", "r2 = org springframework web servlet support request context utils get theme source r0", "if r1 == null goto label1", "if r2 == null goto label1", "r3 = r1 resolve theme name r0", "$ r4 = r2 get theme r3", "return $ r4", "if r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org springframework web servlet support servlet uri component builder init from request r0", "$ r2 = r0 get context path", "r1 replace path $ r2", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org springframework web servlet support web content generator r0", "r1 cache second = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet tag bind error tag r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet tag bind tag r0", "r1 ignore nested path = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework web servlet tag escape body tag r0", "$ r1 = r4 body content", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label org springframework util assert state $ z0 \\ `` no body content set\\ ``", "r5 = org springframework web servlet tag escape body tag r0", "$ r2 = r5 body content", "$ r3 = $ r2 get string", "return $ r3", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label $ r3 = r1 get enclose writer", "r7 = java io writer $ r3", "r1 write out r7", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert have text r1 \\ `` \\'element\\ ' can not be null or blank\\ ``", "r2 = org springframework web servlet tag form abstract multi check element tag r0", "r2 element = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet tag form error tag r0", "$ r1 = r2 delimiter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework web servlet tag form form tag r0", "$ r1 = r4 get css class", "r5 = org springframework web servlet tag form form tag r0", "$ r2 = r5 evaluate \\ `` css class\\", "$ r3 = org springframework util object utils get display string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet tags message tag r0", "r2 argument separator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = @ parameter0", "if r4 ! = null goto label1", "r4 = \\ `` \\ ``", "label $ i0 = r4 length", "if $ i0 < = 0 goto label2", "$ z0 = r4 end with \\ `` \\ ``", "if $ z0 ! = 0 goto label2", "r5 = new java lang string builder", "specialinvoke r5 < init >", "$ r2 = r5 append r4", "$ r3 = $ r2 append \\ `` \\ ``", "r4 = $ r3 to string", "label r6 = org springframework web servlet tag nest path tag r0", "r6 path = r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet tag param r0", "r2 value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` cache filter must not be null\\ ``", "r2 = org springframework web servlet view abstract cache view resolver r0", "r2 cache filter = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append r1", "$ r5 = $ r4 append 95", "$ r6 = $ r5 append r2", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet view abstract template view r0", "r1 expose spring macro helper = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet view abstract view r0", "r2 request context attribute = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework web servlet view abstract view r0", "$ r2 = r3 static attribute", "org springframework util collection utils merge property into map r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet view default request to view name translator r0", "r1 strip trail slash = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework web servlet view freemarker free marker view r0", "$ r1 = r2 encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org springframework web servlet view freemarker free marker view r0", "$ r3 = r8 get encode", "if $ r3 == null goto label1", "r9 = org springframework web servlet view freemarker free marker view r0", "$ r5 = r9 obtain configuration", "r10 = org springframework web servlet view freemarker free marker view r0", "$ r6 = r10 get encode", "$ r7 = $ r5 get template r1 r2 $ r6", "goto label2", "label return $ r7", "if $ r3 == null goto label1", "label r11 = org springframework web servlet view freemarker free marker view r0", "$ r4 = r11 obtain configuration", "$ r7 = $ r4 get template r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set locale r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet view internal resource view r0", "r1 always include = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework web servlet view internal resource view r0", "r1 prevent dispatch loop = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org springframework web servlet view jstl view r0", "$ r2 = r7 message source", "if $ r2 == null goto label1", "r8 = org springframework web servlet view jstl view r0", "$ r5 = r8 message source", "org springframework web servlet support jstl utils expose localization context r1 $ r5", "goto label2", "label return", "if $ r2 == null goto label1", "label r6 = new org springframework web servlet support request context", "r9 = org springframework web servlet view jstl view r0", "$ r4 = r9 get servlet context", "specialinvoke r6 < init > r1 $ r4", "org springframework web servlet support jstl utils expose localization context r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r8 = org springframework web servlet view resource bundle view resolver r0", "$ r3 = r8 bundle cache", "$ r4 = $ r3 value", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r7 = r1 next", "r2 = org springframework context configurable application context $ r7", "r2 close", "goto label1", "if $ z0 == 0 goto label2", "label r9 = org springframework web servlet view resource bundle view resolver r0", "$ r5 = r9 locale cache", "$ r5 clear", "r10 = org springframework web servlet view resource bundle view resolver r0", "$ r6 = r10 bundle cache", "$ r6 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet view url base view resolver r0", "r2 expose path variable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org springframework web servlet view view resolver composite r0", "$ r2 = r4 view resolvers", "$ r2 clear", "$ z0 = org springframework util collection utils be empty r1", "if $ z0 ! = 0 goto label1", "r5 = org springframework web servlet view view resolver composite r0", "$ r3 = r5 view resolvers", "$ r3 add all r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework web servlet view view resolver composite r0", "$ r1 = r3 view resolvers", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework web servlet view xml view resolver r0", "r2 location = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework web servlet view xml view resolver r0", "$ r1 = r3 cache factory", "if $ r1 == null goto label1", "r4 = org springframework web servlet view xml view resolver r0", "$ r2 = r4 cache factory", "$ r2 close", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org sqlite function r0", "specialinvoke r2 check context", "r3 = org sqlite function r0", "$ r1 = r3 db", "r4 = org sqlite function r0", "$ l0 = r4 context", "$ r1 result_null $ l0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org sqlite function r0", "specialinvoke r3 check context", "r4 = org sqlite function r0", "$ r2 = r4 db", "r5 = org sqlite function r0", "$ l0 = r5 context", "$ r2 result_error $ l0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org sqlite s q lite config r0", "$ r4 = r6 pragma table", "$ r3 = r1 pragma name", "$ r4 put $ r3 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = javax xml stream event character r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus stax2 ri evt stax2 event reader adapter r0", "$ r1 = r2 m reader", "$ r1 remove", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r4 = new org codehaus stax2 ri type value decoder factory $ int array decoder", "r5 = org codehaus stax2 ri type value decoder factory r0", "$ r3 = r5 get int decoder", "specialinvoke r4 < init > r1 i0 i1 $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus stax2 type typed x m l stream exception r0", "$ r1 = r2 m lexical", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org ccil cowan tagsoup element r0", "$ r1 = r2 the next", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org ccil cowan tagsoup element r0", "$ r1 = r3 the type", "$ r2 = $ r1 namespace", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org ccil cowan tagsoup element r0", "$ r1 = r2 the type", "$ i0 = $ r1 member of", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org ccil cowan tagsoup element type r0", "$ r1 = r2 the namespace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org ccil cowan tagsoup element type r0", "r1 the member of = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org ccil cowan tagsoup element type r0", "r2 the parent = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r6 = org ccil cowan tagsoup schema r0", "$ r3 = r6 the entity", "r5 = new java lang integer", "specialinvoke r5 < init > i0", "$ r3 put r1 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org objectweb fractal task deployment lib abstract binding setter task r0", "$ r2 = r6 bind provider task", "if $ r2 == null goto label1", "r7 = org objectweb fractal task deployment lib abstract binding setter task r0", "$ r5 = r7 bind provider task", "r8 = org objectweb fractal task deployment lib abstract binding setter task r0", "r8 remove previous task $ r5", "label r9 = org objectweb fractal task deployment lib abstract binding setter task r0", "r9 bind provider task = r1", "r10 = org objectweb fractal task deployment lib abstract binding setter task r0", "$ r3 = r10 bind provider task", "if $ r3 == null goto label2", "r11 = org objectweb fractal task deployment lib abstract binding setter task r0", "$ r4 = r11 bind provider task", "r12 = org objectweb fractal task deployment lib abstract binding setter task r0", "r12 add previous task $ r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org testcontainers container docker compose container r0", "r2 build = z0", "r3 = org testcontainers container docker compose container r0", "$ r1 = specialinvoke r3 self", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org testcontainers container wait http wait strategy r0", "$ r2 = r4 delegate strategy", "$ r2 for response predicate r1", "r5 = org testcontainers container wait http wait strategy r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org testcontainers container wait strategy abstract wait strategy r0", "r2 rate limiter = r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org testcontainers container wait strategy wait for listen port", "r1 = org testcontainers container wait strategy wait strategy $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org testcontainers container wait strategy wait for http r0", "$ r2 = $ r1 use tls", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r39 = org testcontainers utility docker image name r0", "$ r1 = r39 registry", "org testcontainers shade com google common net host and port from string $ r1", "$ r4 = org testcontainers utility docker image name repo_name", "r40 = org testcontainers utility docker image name r0", "$ r3 = r40 repo", "$ r5 = $ r4 matcher $ r3", "$ z0 = $ r5 match", "if $ z0 ! = 0 goto label1", "r34 = new java lang illegal argument exception", "r33 = new java lang string builder", "specialinvoke r33 < init >", "r41 = org testcontainers utility docker image name r0", "$ r26 = r41 repo", "$ r27 = r33 append $ r26", "$ r28 = $ r27 append \\ `` be not a valid docker image name in \\ ``", "r42 = org testcontainers utility docker image name r0", "$ r29 = r42 raw name", "$ r30 = $ r28 append $ r29", "$ r31 = $ r30 append \\ `` \\ ``", "$ r32 = $ r31 to string", "specialinvoke r34 < init > $ r32", "throw r34", "if $ z0 ! = 0 goto label1", "label r43 = org testcontainers utility docker image name r0", "$ r6 = r43 versioning", "if $ r6 ! = null goto label2", "r36 = new java lang illegal argument exception", "r35 = new java lang string builder", "specialinvoke r35 < init >", "$ r19 = r35 append \\ `` no image tag be specify in docker image name \\ ``", "r44 = org testcontainers utility docker image name r0", "$ r20 = r44 raw name", "$ r21 = $ r19 append $ r20", "$ r22 = $ r21 append \\ `` please provide a tag this may be \\'latest\\ ' or a specific version\\ ``", "$ r23 = $ r22 to string", "specialinvoke r36 < init > $ r23", "throw r36", "if $ r6 ! = null goto label2", "label r45 = org testcontainers utility docker image name r0", "$ r7 = r45 versioning", "$ z1 = $ r7 be valid", "if $ z1 ! = 0 goto label3", "r38 = new java lang illegal argument exception", "r37 = new java lang string builder", "specialinvoke r37 < init >", "r46 = org testcontainers utility docker image name r0", "$ r10 = r46 versioning", "$ r11 = r37 append $ r10", "$ r12 = $ r11 append \\ `` be not a valid image versioning identifier in \\ ``", "r47 = org testcontainers utility docker image name r0", "$ r13 = r47 raw name", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` \\ ``", "$ r16 = $ r15 to string", "specialinvoke r38 < init > $ r16", "throw r38", "if $ z1 ! = 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [], [59], []]}
{"nodes": ["$ r0 = org testcontainers utility docker machine client instance", "if $ r0 ! = null goto label1", "$ r2 = new org testcontainers utility docker machine client", "specialinvoke $ r2 < init >", "org testcontainers utility docker machine client instance = $ r2", "label $ r1 = org testcontainers utility docker machine client instance", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika config tika config r0", "$ r1 = r2 encode detector", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tika fork fork parser r0", "r1 max file process per client = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = org apache tika io endian utils get u int l e r0 0", "return $ l0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = lengthof r0", "$ r2 = java lang integer to string $ i0", "r1 set \\ `` content- length\\", "$ r3 = new org apache tika io tika input stream", "$ r4 = new java io byte array input stream", "specialinvoke $ r4 < init > r0", "$ r5 = new org apache tika io temporary resource", "specialinvoke $ r5 < init >", "$ i1 = lengthof r0", "$ l2 = long $ i1", "specialinvoke $ r3 < init > $ r4 $ r5 $ l2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache tika metadata metadata", "specialinvoke $ r1 < init >", "$ r2 = org apache tika io tika input stream get r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika io tika input stream r0", "$ l0 = r1 position", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tika language detect language handler r0", "$ r1 = r3 writer", "$ r2 = $ r1 get language", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 split \\ `` \\\\-\\ ``", "r7 = org apache tika language detect language result r0", "$ r4 = r7 language", "r3 = $ r4 split \\ `` \\\\-\\ ``", "$ i2 = lengthof r2", "$ i1 = lengthof r3", "i0 = java lang math min $ i2 $ i1", "i3 = 0", "label if i3 > = i0 goto label3", "$ r6 = r2 [ i3 ]", "$ r5 = r3 [ i3 ]", "$ z0 = $ r6 equal ignore case $ r5", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["org apache tika language language identifier clear profile", "org apache tika language language identifier error = \\ `` \\ ``", "$ r3 = class \\ `` lorg apache tika language language identifier \\ ``", "r34 = $ r3 get resource a stream \\ `` tika language override properties\\ ``", "if r34 ! = null goto label01", "$ r11 = class \\ `` lorg apache tika language language identifier \\ ``", "r34 = $ r11 get resource a stream \\ `` tika language properties\\ ``", "label if r34 == null goto label05", "label $ r9 = new java util property", "specialinvoke $ r9 < init >", "org apache tika language language identifier prop = $ r9", "$ r10 = org apache tika language language identifier prop", "$ r10 load r34", "label goto label05", "label $ r36 = org apache tika language language identifier prop", "$ r37 = $ r36 get property \\ `` languages\\ ``", "r38 = $ r37 split \\", "i0 = lengthof r38", "i1 = 0", "label if i1 > = i0 goto label11", "r39 = r38 [ i1 ]", "r40 = r39 trim", "$ r5 = org apache tika language language identifier prop", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r6 = $ r4 append \\ `` name \\ ``", "$ r7 = $ r6 append r40", "$ r8 = $ r7 to string", "r1 = $ r5 get property $ r8 \\ `` unknown\\ ``", "label org apache tika language language identifier add profile r40", "label goto label10", "label i1 = i1 + 1", "goto label06", "label if i1 > = i0 goto label11", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], []]}
{"nodes": ["$ r0 = org apache tika language language identifier profile", "$ r0 clear", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get primary property", "$ r4 = $ r3 get property type", "$ r5 = org apache tika metadata property $ property type simple", "if $ r4 == $ r5 goto label1", "return null", "if $ r4 == $ r5 goto label1", "label $ r6 = r1 get primary property", "$ r7 = $ r6 get value type", "$ r8 = org apache tika metadata property $ value type date", "if $ r7 == $ r8 goto label2", "label r10 = org apache tika metadata metadata r0", "r2 = r10 get r1", "if r2 == null goto label3", "$ r9 = org apache tika metadata metadata parse date r2", "return $ r9", "if r2 == null goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = org apache tika mime hex co dec decode r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika mime medium type r0", "$ r1 = r2 parameter", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = new java util tree set", "r5 = org apache tika mime medium type registry r0", "$ r2 = r5 registry", "$ r3 = $ r2 value", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = new java util tree set", "specialinvoke r14 < init >", "r15 = org apache tika mime medium type registry r0", "$ r6 = r15 registry", "$ r7 = $ r6 entry set", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r8 = r3 next", "r4 = java util map $ entry $ r8", "$ r9 = r4 get value", "$ r10 = org apache tika mime medium type $ r9", "$ z1 = $ r10 equal r1", "if $ z1 == 0 goto label2", "$ r11 = r4 get key", "$ r12 = org apache tika mime medium type $ r11", "$ z2 = $ r12 equal r1", "if $ z2 ! = 0 goto label2", "$ r13 = r4 get key", "r14 add $ r13", "label goto label1", "if $ z0 == 0 goto label3", "label return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache tika mime mime type r0", "r3 add pattern r1 r2 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika parser external external parser r0", "$ r1 = r2 ignore line consumer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tika parser external external parser r0", "r2 ignore line consumer = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache tika parser parse context r0", "$ r2 = r4 get class \\ `` ljavax xml stream x m l input factory \\ ``", "r1 = javax xml stream x m l input factory $ r2", "if r1 == null goto label1", "return r1", "if r1 == null goto label1", "label $ r3 = org apache tika utils x m l reader utils get x m l input factory", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tika parser recursive parser wrapper r0", "$ r1 = r9 last parse state", "if $ r1 == null goto label1", "r7 = new org apache tika parser recursive parser wrapper $ parser state", "r6 = new org apache tika sax recursive parser wrapper handler", "r10 = org apache tika parser recursive parser wrapper r0", "$ r5 = r10 content handler factory", "r11 = org apache tika parser recursive parser wrapper r0", "$ i0 = r11 max embed resource", "specialinvoke r6 < init > $ r5 $ i0", "r12 = org apache tika parser recursive parser wrapper r0", "r13 = org apache tika sax abstract recursive parser wrapper handler r6", "specialinvoke r7 < init > r12 r13 null", "r14 = org apache tika parser recursive parser wrapper r0", "r14 last parse state = r7", "goto label2", "label return", "if $ r1 == null goto label1", "label r8 = new java lang illegal state exception", "specialinvoke r8 < init > \\ `` this be deprecated please use a recursive parser wrapper handler instead\\ ``", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tika sax secure content handler r0", "r1 threshold = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika sax secure content handler r0", "$ i0 = r1 max package entry depth", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika sax standard extract content handler r0", "$ d0 = r1 threshold", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "$ r1 = newarray char [ 1 ]", "$ r1 [ 0 ] = c0", "specialinvoke r0 character $ r1 0 1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika sax x m p content handler r0", "r1 end element \\ `` http www w3 org 1999 02 22-rdf-syntax-ns #\\", "r2 = org apache tika sax x m p content handler r0", "r2 end prefix mapping \\ `` xmp\\ ``", "r3 = org apache tika sax x m p content handler r0", "r3 end prefix mapping \\ `` rdf\\ ``", "specialinvoke r0 end document", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r11 = org apache tika io tika input stream get r1", "r12 = null", "label r17 = org apache tika tika r0", "r18 = java io input stream r11", "r13 = r17 detect r18", "label if r11 == null goto label05", "goto label04", "label r20 = java io input stream r11", "r20 close", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika tika r0", "$ r1 = r2 detector", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser chm accessor chm itsf header r0", "$ i0 = r1 unknown_000c", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tika parser chm accessor chm itsf header r0", "r1 unknown_len = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser chm accessor chm itsf header r0", "$ l0 = r1 dir_len", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tika parser chm accessor chm itsf header r0", "r1 data_offset = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser chm accessor chm itsp header r0", "$ l0 = r1 lang_id", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser chm accessor chm lzxc control data r0", "$ l0 = r1 window size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser chm accessor chm lzxc control data r0", "$ l0 = r1 unknown_18", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tika parser chm accessor chm pmgi header r0", "r2 signature = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache tika parser chm accessor chm pmgi header r0", "r1 free_space = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tika parser ctakes c t a k e s config r0", "$ r1 = r2 ae descriptor path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tika parser ctakes c t a k e s config r0", "r2 u m l s pas = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tika parser ctakes c t a k e s config r0", "r1 text = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache tika parser html default html mapper instance", "$ r3 = $ r2 map safe element r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = null", "label r3 = org apache tika parser mp3 mpeg stream r0", "$ z2 = r3 end of stream", "if $ z2 ! = 0 goto label3", "if r2 ! = null goto label3", "r4 = org apache tika parser mp3 mpeg stream r0", "specialinvoke r4 find frame sync byte", "r5 = org apache tika parser mp3 mpeg stream r0", "$ z0 = r5 end of stream", "if $ z0 ! = 0 goto label1", "r6 = org apache tika parser mp3 mpeg stream r0", "r1 = specialinvoke r6 create header field", "r7 = org apache tika parser mp3 mpeg stream r0", "$ z1 = r7 end of stream", "if $ z1 ! = 0 goto label2", "r8 = org apache tika parser mp3 mpeg stream r0", "r2 = specialinvoke r8 create header r1", "if r2 ! = null goto label2", "r9 = org apache tika parser mp3 mpeg stream r0", "specialinvoke r9 push back r1", "label goto label1", "if r2 ! = null goto label3", "label r10 = org apache tika parser mp3 mpeg stream r0", "r10 current header = r2", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache tika parser ner corenlp core n l p n e recogniser entity_types", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 match \\ `` [ a-z a- z ] { 3 } _ [ a-z a- z ] { 3,4 } ? \\\\+ ? +\\ ``", "if $ z0 == 0 goto label1", "$ z1 = r1 end with \\ `` +\\ ``", "if $ z1 == 0 goto label2", "label r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` invalid language code\\ ``", "throw r3", "if $ z1 == 0 goto label2", "label r4 = org apache tika parser ocr tesseract o c r config r0", "r4 language = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org apache tika parser ocr tesseract o c r config allowable_page_separators_pattern", "r2 = $ r3 matcher r1", "$ z0 = r2 find", "if $ z0 ! = 0 goto label1", "r10 = new java lang illegal argument exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append r1", "$ r7 = $ r6 append \\ `` contains illegal character \\n if you trust this value set it with set trusted page separator\\ ``", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if $ z0 ! = 0 goto label1", "label r11 = org apache tika parser ocr tesseract o c r config r0", "r11 set trust page separator r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org apache tika parser pdf access checker r0", "$ z0 = r12 need to check", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label $ r3 = \\ `` false\\ ``", "$ r2 = org apache tika metadata access permission extract_content", "$ r4 = r1 get $ r2", "$ z1 = $ r3 equal $ r4", "if $ z1 == 0 goto label4", "r13 = org apache tika parser pdf access checker r0", "$ z2 = r13 allow accessibility", "if $ z2 == 0 goto label3", "$ r7 = \\ `` true\\ ``", "$ r6 = org apache tika metadata access permission extract_for_accessibility", "$ r8 = r1 get $ r6", "$ z3 = $ r7 equal $ r8", "if $ z3 == 0 goto label2", "label r10 = new org apache tika exception access permission exception", "specialinvoke r10 < init > \\ `` content extraction for accessibility be not allow \\ ``", "r14 = java lang throwable r10", "throw r14", "if $ z2 == 0 goto label3", "label r11 = new org apache tika exception access permission exception", "specialinvoke r11 < init > \\ `` content extraction be not allow \\ ``", "r15 = java lang throwable r11", "throw r15", "if $ z1 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tika parser pdf p d f parser config r0", "r1 if x f a extract only x f a = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser pdf p d f parser config r0", "$ l0 = r1 max main memory byte", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache tika parser pot pool time series parser supported_types", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r15 = new java util array list", "$ r4 = org apache tika parser txt charset detector all_cs_recognizers", "$ i0 = $ r4 size", "specialinvoke r15 < init > $ i0", "i3 = 0", "label $ r5 = org apache tika parser txt charset detector all_cs_recognizers", "$ i1 = $ r5 size", "if i3 > = $ i1 goto label5", "$ r9 = org apache tika parser txt charset detector all_cs_recognizers", "$ r10 = $ r9 get i3", "r2 = org apache tika parser txt charset detector $ c s recognizer info $ r10", "r16 = org apache tika parser txt charset detector r0", "$ r11 = r16 f enable recognizers", "if $ r11 ! = null goto label2", "$ z2 = r2 be default enabled", "goto label3", "label if $ z2 == 0 goto label4", "$ r13 = r2 recognizer", "$ r14 = $ r13 get name", "r15 add $ r14", "label i3 = i3 + 1", "goto label1", "if $ r11 ! = null goto label2", "label r17 = org apache tika parser txt charset detector r0", "$ r12 = r17 f enable recognizers", "$ z2 = $ r12 [ i3 ]", "if i3 > = $ i1 goto label5", "label $ i2 = r15 size", "$ r6 = newarray java lang string [ $ i2 ]", "$ r7 = r15 to array $ r6", "$ r8 = java lang string [ ] $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tika parser txt charset match r0", "$ i0 = r1 f confidence", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tika parser txt icu4j encode detector r0", "r1 strip markup = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = javax servlet generic servlet r0", "$ r1 = r3 config", "$ r2 = $ r1 get servlet name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina authenticator authenticator base r0", "r2 secure random algorithm = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache catalina authenticator single sign on entry r0", "$ r1 = r3 session key", "$ r2 = $ r1 key set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache catalina connector connector r0", "r2 max save post size = i0", "$ r1 = java lang string value of i0", "r3 = org apache catalina connector connector r0", "r3 set property \\ `` max save post size\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache catalina connector connector r0", "r2 redirect port = i0", "$ r1 = java lang string value of i0", "r3 = org apache catalina connector connector r0", "r3 set property \\ `` redirect port\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina connector connector r0", "$ z0 = r1 xpowered by", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache catalina connector connector r0", "r2 use i p v host = z0", "$ r1 = java lang string value of z0", "r3 = org apache catalina connector connector r0", "r3 set property \\ `` use i p v hosts\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get request session id", "if $ r3 ! = null goto label1", "$ r4 = org apache catalina connector coyote adapter ssl_only", "$ r5 = r1 get servlet context", "$ r6 = $ r5 get effective session track mode", "$ z0 = $ r4 equal $ r6", "if $ z0 == 0 goto label1", "$ r7 = r1 connector", "$ z1 = $ r7 secure", "if $ z1 == 0 goto label1", "$ r8 = r1 get attribute \\ `` javax servlet request ssl_session_id\\ ``", "r2 = java lang string $ r8", "if r2 == null goto label1", "r1 set request session id r2", "r1 set request session s s l 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina connector input buffer r0", "r2 coyote request = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina connector request r0", "r2 response = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache catalina connector request r0", "$ r2 = r3 locales", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org apache catalina connector request r0", "r1 = r4 get context", "if r1 == null goto label1", "$ z0 = r1 get swallow abort uploads", "if $ z0 ! = 0 goto label1", "r5 = org apache catalina connector request r0", "$ r3 = r5 coyote request", "$ r2 = org apache coyote action code disable_swallow_input", "$ r3 action $ r2 null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina connector response r0", "$ r1 = r2 output buffer", "$ r1 flush", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r2 = r13 append \\ `` container event [ \\'\\ ``", "r14 = org apache catalina container event r0", "$ r3 = r14 get container", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` \\ ' \\'\\ ``", "r15 = org apache catalina container event r0", "$ r6 = r15 get type", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` \\ ' \\'\\ ``", "r16 = org apache catalina container event r0", "$ r9 = r16 get data", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 append \\ `` \\ ' ] \\ ``", "$ r12 = $ r11 to string", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i1 = 0", "label r8 = org apache catalina core application filter chain r0", "$ i0 = r8 n", "if i1 > = $ i0 goto label3", "r9 = org apache catalina core application filter chain r0", "$ r3 = r9 filter", "r2 = $ r3 [ i1 ]", "$ r4 = \\ `` false\\ ``", "$ r5 = r2 get filter def", "$ r6 = $ r5 get async support", "$ z0 = $ r4 equal ignore case $ r6", "if $ z0 == 0 goto label2", "$ r7 = r2 get filter class", "r1 add $ r7", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina core application http request r0", "$ r1 = r2 request u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina core container base r0", "$ i0 = r1 background processor delay", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org apache catalina core container base r0", "z1 = r2 start child", "r3 = org apache catalina core container base r0", "r3 start child = z0", "r4 = org apache catalina core container base r0", "$ r1 = r4 support", "r5 = org apache catalina core container base r0", "$ z2 = r5 start child", "$ r1 fire property change \\ `` start children\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = org apache catalina core container base r0", "$ r1 = r7 parent class loader", "if $ r1 == null goto label1", "r8 = org apache catalina core container base r0", "$ r6 = r8 parent class loader", "return $ r6", "if $ r1 == null goto label1", "label r9 = org apache catalina core container base r0", "$ r2 = r9 parent", "if $ r2 == null goto label2", "r10 = org apache catalina core container base r0", "$ r4 = r10 parent", "$ r5 = $ r4 get parent class loader", "return $ r5", "if $ r2 == null goto label2", "label $ r3 = java lang class loader get system class loader", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache catalina globals is_security_enabled", "if $ z0 == 0 goto label1", "r5 = new org apache catalina core container base $ privilege add child", "r6 = org apache catalina core container base r0", "specialinvoke r5 < init > r6 r1", "r7 = java security privilege action r5", "java security access controller do privilege r7", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r8 = org apache catalina core container base r0", "specialinvoke r8 add child internal r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache catalina core container base r0", "$ r2 = r3 pipeline", "$ r2 add valve r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina core default instance manager r0", "$ r1 = r2 annotation cache", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina core jre memory leak prevention listener r0", "$ z0 = r1 xml parsing protection", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina core standard context r0", "$ z0 = r1 delegate", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina core standard context r0", "$ r1 = r2 session cookie path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina core standard context r0", "r1 clear reference http client keep alive thread = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache catalina core standard context r0", "$ r4 = r9 filter defs", "entermonitor $ r4", "label r10 = org apache catalina core standard context r0", "$ r5 = r10 filter defs", "$ r6 = $ r5 get r1", "$ r7 = org apache tomcat util descriptor web filter def $ r6", "exitmonitor $ r4", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache catalina core standard context r0", "$ r2 = r4 parameter", "$ r2 remove r1", "r5 = org apache catalina core standard context r0", "r5 fire container event \\ `` remove parameter\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l2 = 0l", "r5 = org apache catalina core standard context r0", "r1 = r5 find child", "if r1 == null goto label2", "i0 = lengthof r1", "i3 = 0", "label if i3 > = i0 goto label2", "r3 = r1 [ i3 ]", "$ r4 = org apache catalina core standard wrapper r3", "$ l1 = $ r4 get processing time", "l2 = l2 + $ l1", "i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label2", "label return l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "l4 = -1l", "r5 = org apache catalina core standard context r0", "r1 = r5 find child", "if r1 == null goto label4", "i1 = lengthof r1", "i5 = 0", "label if i5 > = i1 goto label4", "r3 = r1 [ i5 ]", "$ r4 = org apache catalina core standard wrapper r3", "l0 = $ r4 get min time", "$ b2 = l4 cmp 0l", "if $ b2 < 0 goto label2", "$ b3 = l0 cmp l4", "if $ b3 > = 0 goto label3", "label l4 = l0", "label i5 = i5 + 1", "goto label1", "label if i5 > = i1 goto label4", "label return l4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "$ r2 = \\ `` - sun microsystems inc dtd web application 2 2 en\\ ``", "r3 = org apache catalina core standard context r0", "$ r1 = r3 public id", "$ z0 = $ r2 equal $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina core standard engine r0", "r2 jvm route id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina core standard host r0", "r1 deploy x m l = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina core standard wrapper r0", "$ l0 = r1 available", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina filter remote ip filter r0", "r2 host header = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina filter remote ip filter r0", "r1 request attribute enable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina filter set character encode filter r0", "r2 encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina loader webapp class loader base r0", "r1 clear reference stop timer thread = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina loader webapp loader r0", "$ z0 = r1 reloadable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina loader webapp loader r0", "$ r1 = r2 classpath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = newarray java lang string [ 1 ]", "$ r4 [ 0 ] = r1", "$ r5 = newarray java lang string [ 1 ]", "$ r5 [ 0 ] = \\ `` java lang string\\ ``", "r9 = org apache catalina manager manager servlet r0", "$ r7 = r9 m bean server", "r10 = org apache catalina manager manager servlet r0", "$ r6 = r10 oname", "$ r7 invoke $ r6 \\ `` check\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r7 = org apache catalina mbeans container m bean new instance r1", "r3 = org apache catalina container $ r7", "r3 set name r2", "$ z0 = r3 instanceof org apache catalina core standard host", "if $ z0 == 0 goto label1", "r16 = new org apache catalina startup host config", "specialinvoke r16 < init >", "r19 = org apache catalina lifecycle listener r16", "r3 add lifecycle listener r19", "goto label2", "label z2 = 1", "r21 = org apache catalina mbeans container m bean r0", "$ r15 = r21 do get manage resource", "r4 = org apache catalina core container base $ r15", "label z2 = r4 get start child", "r4 set start child 0", "r4 add child r3", "r3 init", "label if r4 == null goto label9", "r4 set start child z2", "goto label9", "label return", "if $ z0 == 0 goto label1", "label $ z1 = r3 instanceof org apache catalina core standard context", "if $ z1 == 0 goto label2", "r17 = new org apache catalina startup context config", "specialinvoke r17 < init >", "r20 = org apache catalina lifecycle listener r17", "r3 add lifecycle listener r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = org apache catalina mbeans container m bean new instance r1", "r2 = org apache catalina lifecycle listener $ r4", "r6 = org apache catalina mbeans container m bean r0", "$ r5 = r6 do get manage resource", "r3 = org apache catalina container $ r5", "r3 add lifecycle listener r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache catalina mbeans container m bean r0", "$ r6 = r9 do get manage resource", "r2 = org apache catalina container $ r6", "r3 = r2 find lifecycle listener", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label3", "r5 = r3 [ i1 ]", "$ r7 = r5 get class", "$ r8 = $ r7 get name", "$ z0 = $ r8 equal r1", "if $ z0 == 0 goto label2", "r2 remove lifecycle listener r5", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina mbeans jmx remote lifecycle listener r0", "$ r1 = r2 rmi bind address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina mbeans jmx remote lifecycle listener r0", "$ z0 = r1 use local port", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r4 = org apache catalina mbeans m bean factory r0", "$ r3 = specialinvoke r4 create connector r1 r2 i0 0 0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r17 = org apache catalina mbeans memory user database m bean r0", "$ r7 = r17 resource", "r3 = org apache catalina user database $ r7", "r4 = r3 create role r1 r2", "label org apache catalina mbeans m bean utils create m bean r4", "label goto label4", "label r18 = org apache catalina mbeans memory user database m bean r0", "$ r9 = r18 find role r1", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = org apache catalina mbeans memory user database m bean r0", "$ r6 = r14 resource", "r2 = org apache catalina user database $ r6", "r3 = r2 find role r1", "if r3 ! = null goto label1", "return", "if r3 ! = null goto label1", "label org apache catalina mbeans m bean utils destroy m bean r3", "r2 remove role r3", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r27 = null", "r28 = org apache catalina realm combine realm r0", "$ r4 = r28 realm", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "$ r5 = r2 next", "r3 = org apache catalina realm $ r5", "$ r6 = org apache catalina realm combine realm log", "$ z1 = $ r6 be debug enabled", "if $ z1 == 0 goto label2", "$ r22 = org apache catalina realm combine realm log", "$ r23 = org apache catalina realm combine realm sm", "$ r21 = newarray java lang object [ 2 ]", "$ r21 [ 0 ] = r1", "$ r24 = r3 get class", "$ r25 = $ r24 get name", "$ r21 [ 1 ] = $ r25", "$ r26 = $ r23 get string \\ `` combine realm auth start\\", "$ r22 debug $ r26", "label r27 = r3 authenticate r1", "if r27 ! = null goto label3", "$ r14 = org apache catalina realm combine realm log", "$ z3 = $ r14 be debug enabled", "if $ z3 == 0 goto label4", "$ r16 = org apache catalina realm combine realm log", "$ r17 = org apache catalina realm combine realm sm", "$ r15 = newarray java lang object [ 2 ]", "$ r15 [ 0 ] = r1", "$ r18 = r3 get class", "$ r19 = $ r18 get name", "$ r15 [ 1 ] = $ r19", "$ r20 = $ r17 get string \\ `` combine realm auth fail\\", "$ r16 debug $ r20", "goto label4", "label goto label1", "if r27 ! = null goto label3", "label $ r7 = org apache catalina realm combine realm log", "$ z2 = $ r7 be debug enabled", "if $ z2 == 0 goto label5", "$ r9 = org apache catalina realm combine realm log", "$ r10 = org apache catalina realm combine realm sm", "$ r8 = newarray java lang object [ 2 ]", "$ r8 [ 0 ] = r1", "$ r11 = r3 get class", "$ r12 = $ r11 get name", "$ r8 [ 1 ] = $ r12", "$ r13 = $ r10 get string \\ `` combine realm auth success\\", "$ r9 debug $ r13", "goto label5", "label return r27"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache catalina realm data source realm r0", "r1 local data source = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r21 = null", "label r33 = org apache catalina realm data source realm r0", "$ r7 = r33 prepare credential", "r22 = r1 prepare statement $ r7", "r23 = null", "label r22 set string 1 r2", "r24 = r22 execute query", "r25 = null", "label $ z0 = r24 next", "if $ z0 == 0 goto label04", "r21 = r24 get string 1", "label if r21 == null goto label05", "$ r26 = r21 trim", "goto label06", "label r27 = $ r26", "label if r24 == null goto label09", "goto label08", "label r24 close", "label if r22 == null goto label11", "goto label10", "label r22 close", "label return r27", "label if r21 == null goto label05", "label $ r26 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina realm j d b c realm r0", "r2 connection u r l = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache catalina realm lock out realm r0", "r1 cache size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache catalina session file store r0", "r2 = r5 directory", "r6 = org apache catalina session file store r0", "r6 directory = r1", "r7 = org apache catalina session file store r0", "r7 directory file = null", "r8 = org apache catalina session file store r0", "$ r4 = r8 support", "r9 = org apache catalina session file store r0", "$ r3 = r9 directory", "$ r4 fire property change \\ `` directory\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "return \\ `` file store\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache catalina session j d b c store r0", "$ r2 = r3 data source", "if $ r2 == null goto label1", "r4 = org apache catalina session j d b c store r0", "r4 close r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 ! = 0 goto label2", "label r3 = org apache catalina session manager base r0", "r3 session attribute name pattern = null", "goto label3", "label return", "if $ i0 ! = 0 goto label2", "label $ r2 = java util regex pattern compile r1", "r4 = org apache catalina session manager base r0", "r4 session attribute name pattern = $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina session manager base r0", "$ z0 = r1 warn on session attribute filter failure", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache catalina session manager base r0", "i1 = r4 max active session", "r5 = org apache catalina session manager base r0", "r5 max active session = i0", "r6 = org apache catalina session manager base r0", "$ r1 = r6 support", "$ r2 = java lang integer value of i1", "r7 = org apache catalina session manager base r0", "$ i2 = r7 max active session", "$ r3 = java lang integer value of $ i2", "$ r1 fire property change \\ `` max active sessions\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache catalina session persistent manager base r0", "$ r2 = r4 store", "if $ r2 == null goto label1", "$ z0 = r1 be valid", "if $ z0 ! = 0 goto label2", "label return", "if $ z0 ! = 0 goto label2", "label $ r3 = org apache catalina session standard session r1", "$ r3 passivate", "r5 = org apache catalina session persistent manager base r0", "r5 write session r1", "specialinvoke r0 remove r1 1", "r1 recycle", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r14 = org apache catalina session standard manager r0", "$ r4 = r14 pathname", "if $ r4 == null goto label1", "r15 = org apache catalina session standard manager r0", "$ r5 = r15 pathname", "$ i0 = $ r5 length", "if $ i0 ! = 0 goto label2", "label return null", "if $ i0 ! = 0 goto label2", "label r12 = new java io file", "r16 = org apache catalina session standard manager r0", "$ r7 = r16 pathname", "specialinvoke r12 < init > $ r7", "r11 = r12", "$ z0 = r12 be absolute", "if $ z0 ! = 0 goto label3", "r17 = org apache catalina session standard manager r0", "r1 = r17 get context", "r2 = r1 get servlet context", "$ r8 = r2 get attribute \\ `` javax servlet context tempdir\\ ``", "r3 = java io file $ r8", "if r3 == null goto label3", "r13 = new java io file", "r18 = org apache catalina session standard manager r0", "$ r10 = r18 pathname", "specialinvoke r13 < init > r3 $ r10", "r11 = r13", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina session standard session r0", "r2 manager = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina session too many active session exception r0", "$ i0 = r1 max active session", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = java lang system out", "$ r1 = org apache catalina startup catalina sm", "$ r3 = $ r1 get string \\ `` catalina usage\\ ``", "$ r2 println $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina startup tomcat r0", "r2 basedir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org apache catalina startup tomcat r0", "$ r3 = r10 user role", "$ r4 = $ r3 get r1", "r8 = java util list $ r4", "if r8 ! = null goto label1", "r9 = new java util array list", "specialinvoke r9 < init >", "r8 = r9", "r11 = org apache catalina startup tomcat r0", "$ r6 = r11 user role", "$ r6 put r1 r9", "label r8 add r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache catalina startup tomcat r0", "$ r3 = r5 get host", "r2 = $ r3 find child r1", "$ r4 = org apache catalina context r2", "org apache catalina startup tomcat init webapp default $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina user abstract group r0", "$ r1 = r2 get groupname", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get parameter type", "$ i0 = lengthof $ r1", "if $ i0 ! = 0 goto label1", "$ i1 = r0 get modifier", "$ z0 = java lang reflect modifier be static $ i1", "if $ z0 ! = 0 goto label1", "$ r2 = r0 get exception type", "$ i2 = lengthof $ r2", "if $ i2 > 0 goto label1", "$ r3 = r0 get return type", "$ r4 = $ r3 get name", "$ z1 = $ r4 equal \\ `` void\\ ``", "if $ z1 ! = 0 goto label2", "label return 0", "if $ z1 ! = 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache catalina util lifecycle m bean base r0", "$ r1 = r2 oname", "r3 = org apache catalina util lifecycle m bean base r0", "r3 unregister $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache catalina util session config get configure session cookie name r0", "if r1 ! = null goto label1", "r1 = \\ `` jsessionid\\ ``", "label return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina util session id generator base r0", "$ i0 = r1 session id length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina valve access log valve r0", "$ z0 = r1 rotatable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache catalina valve access log valve r0", "$ z0 = r1 rename on rotate", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 open", "r17 = org apache catalina valve extend access log valve r0", "$ r1 = r17 current log file", "$ l0 = $ r1 length", "$ b1 = $ l0 cmp 0l", "if $ b1 ! = 0 goto label1", "r18 = org apache catalina valve extend access log valve r0", "$ r3 = r18 writer", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r4 = r15 append \\ `` #field \\ ``", "r19 = org apache catalina valve extend access log valve r0", "$ r5 = r19 pattern", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "$ r3 println $ r7", "r20 = org apache catalina valve extend access log valve r0", "$ r8 = r20 writer", "$ r8 println \\ `` #version 2 0\\ ``", "r21 = org apache catalina valve extend access log valve r0", "$ r10 = r21 writer", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r11 = r16 append \\ `` #software \\ ``", "$ r12 = org apache catalina util server info get server info", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 to string", "$ r10 println $ r14", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina valve j d b c access log valve r0", "r2 remote host field = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina valve j d b c access log valve r0", "r2 virtual host field = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = java lang boolean parse boolean r1", "r2 = org apache catalina valve j d b c access log valve r0", "r2 resolve host = $ z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina valve load balancer drain valve r0", "r2 _ignore cookie value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` \\ ``", "if r0 ! = null goto label1", "label $ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "r3 = r2 next", "if r3 == null goto label3", "$ r4 append r3", "$ z1 = r2 have next", "if $ z1 == 0 goto label3", "$ r4 append \\", "label goto label2", "if $ z0 == 0 goto label4", "label $ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina valve remote ip valve r0", "r2 host header = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache catalina valve remote ip valve r0", "r2 protocol header http value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache coyote abstract protocol r0", "$ r2 = r4 endpoint", "$ r3 = $ r2 get property r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache coyote ajp ajp message r0", "$ r1 = r2 buf", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache coyote ajp ajp message r0", "$ r1 = r2 buf", "r3 = org apache coyote ajp ajp message r0", "$ i1 = r3 po", "$ i2 = $ i1 + 1", "r4 = org apache coyote ajp ajp message r0", "r4 po = $ i2", "$ b3 = byte i0", "$ r1 [ $ i1 ] = $ b3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache coyote ajp ajp message r0", "$ r1 = r3 buf", "r4 = org apache coyote ajp ajp message r0", "$ i2 = r4 po", "$ i3 = $ i2 + 1", "r5 = org apache coyote ajp ajp message r0", "r5 po = $ i3", "$ b4 = $ r1 [ $ i2 ]", "s0 = $ b4 & 255", "r6 = org apache coyote ajp ajp message r0", "$ r2 = r6 buf", "r7 = org apache coyote ajp ajp message r0", "$ i5 = r7 po", "$ i6 = $ i5 + 1", "r8 = org apache coyote ajp ajp message r0", "r8 po = $ i6", "$ b7 = $ r2 [ $ i5 ]", "s1 = $ b7 & 255", "r9 = org apache coyote ajp ajp message r0", "$ i8 = r9 po", "r10 = org apache coyote ajp ajp message r0", "specialinvoke r10 validate pos $ i8", "$ i9 = s0 < < 8", "$ i10 = $ i9 + s1", "return $ i10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = r1 severity", "r2 = org apache coyote error state r0", "$ i0 = r2 severity", "if $ i1 < = $ i0 goto label1", "return r1", "if $ i1 < = $ i0 goto label1", "label r3 = org apache coyote error state r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache coyote http11 abstract http11 protocol r0", "r1 max save post size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache coyote http11 abstract http11 protocol r0", "$ z0 = r1 disable upload timeout", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache coyote http11 filter save request input filter r0", "$ r2 = r3 input", "$ i0 = $ r2 get length", "$ l1 = long $ i0", "r1 set content length $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "return 0l"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache coyote request r0", "$ r1 = r2 server name m b", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache juli file handler r0", "r1 open writer", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append r2", "$ r5 = $ r4 append \\ `` \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tomcat jni error r0", "$ i0 = r1 error", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "b1 = @ parameter1", "r22 = org apache tomcat util bcel classfile constant pool r0", "r1 = r22 get constant i0", "if r1 ! = null goto label1", "r19 = new org apache tomcat util bcel classfile class format exception", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r14 = r18 append \\ `` constant pool at index \\ ``", "$ r15 = $ r14 append i0", "$ r16 = $ r15 append \\ `` be null \\ ``", "$ r17 = $ r16 to string", "specialinvoke r19 < init > $ r17", "r23 = java lang throwable r19", "throw r23", "if r1 ! = null goto label1", "label $ b2 = r1 get tag", "if $ b2 == b1 goto label2", "r21 = new org apache tomcat util bcel classfile class format exception", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r4 = r20 append \\ `` expected class ` \\ ``", "$ r5 = org apache tomcat util bcel const get constant name b1", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` \\ ' at index \\ ``", "$ r8 = $ r7 append i0", "$ r9 = $ r8 append \\ `` and get \\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 to string", "specialinvoke r21 < init > $ r11", "r24 = java lang throwable r21", "throw r24", "if $ b2 == b1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache tomcat util buf abstract chunk r0", "r1 limit = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tomcat util buf byte chunk r0", "r2 in = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r2 = org apache tomcat util buf char chunk r0", "r2 buff = r1", "r3 = org apache tomcat util buf char chunk r0", "r3 start = i0", "r4 = org apache tomcat util buf char chunk r0", "$ i2 = r4 start", "$ i3 = $ i2 + i1", "r5 = org apache tomcat util buf char chunk r0", "r5 end = $ i3", "r6 = org apache tomcat util buf char chunk r0", "r6 be set = 1", "r7 = org apache tomcat util buf char chunk r0", "r7 have hash code = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get char", "$ i0 = r1 get start", "$ i1 = r1 get length", "r3 = org apache tomcat util buf byte chunk r0", "$ z0 = r3 equal $ r2 $ i0 $ i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "b13 = 0", "r2 = r0 get buffer", "i0 = r0 get start", "i1 = r0 get end", "i14 = lengthof r1", "$ i2 = i1 - i0", "if $ i2 > = i14 goto label1", "i14 = i1 - i0", "label i15 = 0", "label if i15 > = i14 goto label5", "if b13 ! = 0 goto label5", "$ i7 = i15 + i0", "$ b9 = r2 [ $ i7 ]", "$ b8 = r1 [ i15 ]", "if $ b9 < = $ b8 goto label3", "b13 = 1", "goto label4", "label i15 = i15 + 1", "goto label2", "if $ b9 < = $ b8 goto label3", "label $ i10 = i15 + i0", "$ b12 = r2 [ $ i10 ]", "$ b11 = r1 [ i15 ]", "if $ b12 > = $ b11 goto label4", "b13 = -1", "if b13 ! = 0 goto label5", "label if b13 ! = 0 goto label7", "$ i4 = lengthof r1", "$ i3 = i1 - i0", "if $ i4 < = $ i3 goto label6", "label $ i6 = lengthof r1", "$ i5 = i1 - i0", "if $ i6 > = $ i5 goto label7", "label return b13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org apache tomcat util buf string cache bc cache", "$ r1 = org apache tomcat util buf string cache bc cache", "$ i1 = lengthof $ r1", "i0 = org apache tomcat util buf string cache find close r0 $ r2 $ i1", "if i0 < 0 goto label1", "$ r3 = org apache tomcat util buf string cache bc cache", "$ r4 = $ r3 [ i0 ]", "$ r5 = org apache tomcat util buf string cache $ byte entry access $ 000 $ r4", "$ i2 = org apache tomcat util buf string cache compare r0 $ r5", "if $ i2 ! = 0 goto label1", "$ r6 = r0 get charset", "$ r7 = org apache tomcat util buf string cache bc cache", "$ r8 = $ r7 [ i0 ]", "$ r9 = org apache tomcat util buf string cache $ byte entry access $ 300 $ r8", "$ z0 = $ r6 equal $ r9", "if $ z0 ! = 0 goto label2", "label return null", "if $ z0 ! = 0 goto label2", "label $ r10 = org apache tomcat util buf string cache bc cache", "$ r11 = $ r10 [ i0 ]", "$ r12 = org apache tomcat util buf string cache $ byte entry access $ 200 $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 length", "i2 = 0", "label if i2 > = i0 goto label6", "c1 = r0 char at i2", "if c1 ! = 58 goto label4", "if i2 < = 0 goto label2", "$ z1 = 1", "goto label3", "label return $ z1", "if i2 < = 0 goto label2", "label $ z1 = 0", "if c1 ! = 58 goto label4", "label $ z0 = org apache tomcat util buf uri util be scheme char c1", "if $ z0 ! = 0 goto label5", "return 0", "if $ z0 ! = 0 goto label5", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label i5 = -1", "i6 = 0", "label r10 = org apache tomcat util descriptor web security collection r0", "$ r3 = r10 pattern", "$ i0 = lengthof $ r3", "if i6 > = $ i0 goto label4", "r11 = org apache tomcat util descriptor web security collection r0", "$ r8 = r11 pattern", "$ r9 = $ r8 [ i6 ]", "$ z0 = $ r9 equal r1", "if $ z0 == 0 goto label3", "i5 = i6", "goto label4", "label if i5 < 0 goto label8", "i7 = 0", "r12 = org apache tomcat util descriptor web security collection r0", "$ r4 = r12 pattern", "$ i1 = lengthof $ r4", "$ i2 = $ i1 - 1", "r2 = newarray java lang string [ $ i2 ]", "i8 = 0", "label r13 = org apache tomcat util descriptor web security collection r0", "$ r5 = r13 pattern", "$ i3 = lengthof $ r5", "if i8 > = $ i3 goto label7", "if i8 == i5 goto label6", "$ i4 = i7", "i7 = i7 + 1", "r14 = org apache tomcat util descriptor web security collection r0", "$ r6 = r14 pattern", "$ r7 = $ r6 [ i8 ]", "r2 [ $ i4 ] = $ r7", "label i8 = i8 + 1", "goto label5", "if i8 > = $ i3 goto label7", "label r15 = org apache tomcat util descriptor web security collection r0", "r15 pattern = r2", "label return", "if $ z0 == 0 goto label3", "label i6 = i6 + 1", "goto label2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tomcat util descriptor web security constraint r0", "$ z0 = r1 authenticate user", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util descriptor web security constraint r0", "$ r1 = r2 auth role", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label i5 = -1", "i6 = 0", "label r10 = org apache tomcat util descriptor web security constraint r0", "$ r3 = r10 collection", "$ i0 = lengthof $ r3", "if i6 > = $ i0 goto label4", "r11 = org apache tomcat util descriptor web security constraint r0", "$ r8 = r11 collection", "$ r9 = $ r8 [ i6 ]", "$ z0 = $ r9 equal r1", "if $ z0 == 0 goto label3", "i5 = i6", "goto label4", "label if i5 < 0 goto label8", "i7 = 0", "r12 = org apache tomcat util descriptor web security constraint r0", "$ r4 = r12 collection", "$ i1 = lengthof $ r4", "$ i2 = $ i1 - 1", "r2 = newarray org apache tomcat util descriptor web security collection [ $ i2 ]", "i8 = 0", "label r13 = org apache tomcat util descriptor web security constraint r0", "$ r5 = r13 collection", "$ i3 = lengthof $ r5", "if i8 > = $ i3 goto label7", "if i8 == i5 goto label6", "$ i4 = i7", "i7 = i7 + 1", "r14 = org apache tomcat util descriptor web security constraint r0", "$ r6 = r14 collection", "$ r7 = $ r6 [ i8 ]", "r2 [ $ i4 ] = $ r7", "label i8 = i8 + 1", "goto label5", "if i8 > = $ i3 goto label7", "label r15 = org apache tomcat util descriptor web security constraint r0", "r15 collection = r2", "label return", "if $ z0 == 0 goto label3", "label i6 = i6 + 1", "goto label2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["z0 = @ parameter0", "$ r0 = org apache tomcat util diagnostics class load m x bean", "$ r0 set verbose z0", "$ r1 = org apache tomcat util diagnostics class load m x bean", "z1 = $ r1 be verbose", "if z0 == z1 goto label1", "$ r3 = org apache tomcat util diagnostics log", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r4 = $ r2 append \\ `` could not set verbose class load to \\ ``", "$ r5 = $ r4 append z0", "$ r6 = $ r5 append \\", "$ r7 = $ r6 append z1", "$ r8 = $ r7 append \\ `` instead\\ ``", "$ r9 = $ r8 to string", "$ r3 error $ r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["$ r0 = org apache tomcat util diagnostics sm", "$ r1 = org apache tomcat util diagnostics get thread dump $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util digester digester r0", "$ r1 = r2 root", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "label r8 = org apache tomcat util digester digester r0", "$ r2 = r8 params", "$ r3 = $ r2 peek", "label return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache tomcat util file config file loader get source", "$ r2 = $ r1 get resource r0", "$ r3 = $ r2 get input stream", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r4 = r7 append \\ `` conf \\ ``", "$ r5 = $ r4 append r1", "r2 = $ r5 to string", "r8 = org apache tomcat util file configuration source r0", "$ r6 = r8 get resource r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util http fileupload disk disk file item r0", "$ r1 = r2 content type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tomcat util http fileupload disk disk file item r0", "r1 = r9 get", "r10 = org apache tomcat util http fileupload disk disk file item r0", "r6 = r10 get char set", "if r6 ! = null goto label1", "r11 = org apache tomcat util http fileupload disk disk file item r0", "r6 = r11 default charset", "label r7 = new java lang string", "specialinvoke r7 < init > r1 r6", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tomcat util http fileupload impl file item stream impl r0", "$ r1 = r3 name", "$ r2 = org apache tomcat util http fileupload util stream check file name $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util http fileupload impl file item stream impl r0", "$ r1 = r2 stream", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util http fileupload invalid file name exception r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache tomcat util http fileupload multipart stream r0", "r2 header encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z2 = 0", "z3 = 0", "label r2 = org apache tomcat util http parser http parser read token r0", "if r2 ! = null goto label2", "z2 = 1", "org apache tomcat util http parser http parser skip until r0 0 44", "goto label1", "if r2 ! = null goto label2", "label $ i0 = r2 length", "if $ i0 ! = 0 goto label3", "goto label6", "label if z3 == 0 goto label7", "if z2 ! = 0 goto label7", "$ z4 = 1", "goto label8", "label return $ z4", "if z2 ! = 0 goto label7", "label $ z4 = 0", "if $ i0 ! = 0 goto label3", "label r3 = org apache tomcat util http parser http parser skip constant r0 \\", "$ r4 = org apache tomcat util http parser skip result eof", "if r3 ! = $ r4 goto label4", "z3 = 1", "$ r9 = java util locale english", "$ r10 = r2 to low case $ r9", "r1 add $ r10", "if r3 ! = $ r4 goto label4", "label $ r5 = org apache tomcat util http parser skip result find", "if r3 ! = $ r5 goto label5", "label z2 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache tomcat util http request util normalize r0 1", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache tomcat util log system log handler reuse", "$ z0 = $ r0 be empty", "if $ z0 ! = 0 goto label4", "label $ r4 = org apache tomcat util log system log handler reuse", "$ r5 = $ r4 pop", "r8 = org apache tomcat util log capture log $ r5", "label goto label5", "label $ r9 = org apache tomcat util log system log handler logs", "$ r10 = $ r9 get", "r11 = java util stack $ r10", "if r11 ! = null goto label6", "$ r2 = new java util stack", "specialinvoke $ r2 < init >", "r11 = $ r2", "$ r3 = org apache tomcat util log system log handler logs", "$ r3 set $ r2", "label r11 push r8", "return", "if $ z0 ! = 0 goto label4", "label $ r1 = new org apache tomcat util log capture log", "specialinvoke $ r1 < init >", "r8 = $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache tomcat util modeler base attribute filter r0", "$ r4 = r7 name", "entermonitor $ r4", "label r8 = org apache tomcat util modeler base attribute filter r0", "$ r5 = r8 name", "$ r5 add r1", "exitmonitor $ r4", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r9 = org apache tomcat util modeler base attribute filter r0", "$ r3 = r9 name", "entermonitor $ r3", "label r10 = org apache tomcat util modeler base attribute filter r0", "$ r5 = r10 name", "$ r4 = newarray java lang string [ 0 ]", "$ r6 = $ r5 to array $ r4", "$ r7 = java lang string [ ] $ r6", "exitmonitor $ r3", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org apache tomcat util modeler manage bean r0", "$ r4 = r15 m bean info lock", "$ r5 = $ r4 write lock", "$ r5 lock", "label r16 = org apache tomcat util modeler manage bean r0", "$ r6 = r16 notification", "$ i0 = lengthof $ r6", "$ i1 = $ i0 + 1", "r2 = newarray org apache tomcat util modeler notification info [ $ i1 ]", "r17 = org apache tomcat util modeler manage bean r0", "$ r8 = r17 notification", "r18 = org apache tomcat util modeler manage bean r0", "$ r7 = r18 notification", "$ i2 = lengthof $ r7", "java lang system arraycopy $ r8 0 r2 0 $ i2", "r19 = org apache tomcat util modeler manage bean r0", "$ r9 = r19 notification", "$ i3 = lengthof $ r9", "r2 [ $ i3 ] = r1", "r20 = org apache tomcat util modeler manage bean r0", "r20 notification = r2", "r21 = org apache tomcat util modeler manage bean r0", "r21 info = null", "label r22 = org apache tomcat util modeler manage bean r0", "$ r10 = r22 m bean info lock", "$ r11 = $ r10 write lock", "$ r11 unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org apache tomcat util modeler notification info r0", "$ r5 = r11 notif type lock", "r2 = $ r5 write lock", "r2 lock", "label r12 = org apache tomcat util modeler notification info r0", "$ r6 = r12 notif type", "$ i0 = lengthof $ r6", "$ i1 = $ i0 + 1", "r3 = newarray java lang string [ $ i1 ]", "r13 = org apache tomcat util modeler notification info r0", "$ r8 = r13 notif type", "r14 = org apache tomcat util modeler notification info r0", "$ r7 = r14 notif type", "$ i2 = lengthof $ r7", "java lang system arraycopy $ r8 0 r3 0 $ i2", "r15 = org apache tomcat util modeler notification info r0", "$ r9 = r15 notif type", "$ i3 = lengthof $ r9", "r3 [ $ i3 ] = r1", "r16 = org apache tomcat util modeler notification info r0", "r16 notif type = r3", "r17 = org apache tomcat util modeler notification info r0", "r17 info = null", "label r2 unlock", "goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], []]}
{"nodes": ["r0 = @ this", "r27 = org apache tomcat util modeler registry r0", "$ r3 = r27 server", "if $ r3 ! = null goto label7", "r28 = org apache tomcat util modeler registry r0", "$ r5 = r28 server lock", "entermonitor $ r5", "label r29 = org apache tomcat util modeler registry r0", "$ r6 = r29 server", "if $ r6 ! = null goto label3", "l0 = java lang system current time millis", "$ r7 = javax management m bean server factory find m bean server null", "$ i1 = $ r7 size", "if $ i1 < = 0 goto label2", "$ r15 = javax management m bean server factory find m bean server null", "$ r16 = $ r15 get 0", "$ r17 = javax management m bean server $ r16", "r30 = org apache tomcat util modeler registry r0", "r30 server = $ r17", "$ r18 = org apache tomcat util modeler registry log", "$ z1 = $ r18 be debug enabled", "if $ z1 == 0 goto label3", "$ r20 = org apache tomcat util modeler registry log", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r21 = r25 append \\ `` use exist m bean server \\ ``", "$ l4 = java lang system current time millis", "$ l5 = $ l4 - l0", "$ r22 = $ r21 append $ l5", "$ r23 = $ r22 to string", "$ r20 debug $ r23", "goto label3", "label exitmonitor $ r5", "label goto label7", "label r32 = org apache tomcat util modeler registry r0", "$ r4 = r32 server", "return $ r4", "if $ i1 < = 0 goto label2", "label $ r8 = java lang management management factory get platform m bean server", "r31 = org apache tomcat util modeler registry r0", "r31 server = $ r8", "$ r9 = org apache tomcat util modeler registry log", "$ z0 = $ r9 be debug enabled", "if $ z0 == 0 goto label3", "$ r11 = org apache tomcat util modeler registry log", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r12 = r26 append \\ `` create m bean server\\ ``", "$ l2 = java lang system current time millis", "$ l3 = $ l2 - l0", "$ r13 = $ r12 append $ l3", "$ r14 = $ r13 to string", "$ r11 debug $ r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], []]}
{"nodes": ["r0 = @ this", "r1 = org apache tomcat util net abstract endpoint r0", "$ z0 = r1 bind on init", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 ! = -1 goto label1", "$ r7 = org apache tomcat util net apr endpoint log", "$ r8 = org apache tomcat util net apr endpoint sm", "$ r6 = newarray java lang object [ 1 ]", "r11 = org apache tomcat util net apr endpoint r0", "$ i2 = r11 get max connection", "$ r9 = java lang integer value of $ i2", "$ r6 [ 0 ] = $ r9", "$ r10 = $ r8 get string \\ `` endpoint apr max connection unlimited\\", "$ r7 warn $ r10", "return", "if i0 ! = -1 goto label1", "label r12 = org apache tomcat util net apr endpoint r0", "$ z0 = r12 run", "if $ z0 == 0 goto label2", "$ r2 = org apache tomcat util net apr endpoint log", "$ r3 = org apache tomcat util net apr endpoint sm", "$ r1 = newarray java lang object [ 1 ]", "r13 = org apache tomcat util net apr endpoint r0", "$ i1 = r13 get max connection", "$ r4 = java lang integer value of $ i1", "$ r1 [ 0 ] = $ r4", "$ r5 = $ r3 get string \\ `` endpoint apr max connection running\\", "$ r2 warn $ r5", "if $ z0 == 0 goto label2", "label specialinvoke r0 set max connection i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r12 = org apache tomcat util net apr endpoint r0", "$ r3 = r12 connection", "$ r4 = java lang long value of l0", "$ r5 = $ r3 get $ r4", "r2 = org apache tomcat util net socket wrapper base $ r5", "$ r6 = org apache tomcat util net socket event open_read", "if r1 ! = $ r6 goto label1", "$ r10 = r2 read operation", "if $ r10 == null goto label1", "$ r11 = r2 read operation", "$ z2 = $ r11 process", "return $ z2", "if $ r10 == null goto label1", "label $ r7 = org apache tomcat util net socket event open_write", "if r1 ! = $ r7 goto label2", "$ r8 = r2 write operation", "if $ r8 == null goto label2", "$ r9 = r2 write operation", "$ z1 = $ r9 process", "return $ z1", "if $ r8 == null goto label2", "label r13 = org apache tomcat util net apr endpoint r0", "$ z0 = r13 process socket r2 r1 1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = org apache tomcat util net jsse j s s e key manager r0", "$ r4 = r8 server key alias", "if $ r4 == null goto label1", "r9 = org apache tomcat util net jsse j s s e key manager r0", "$ r7 = r9 server key alias", "return $ r7", "if $ r4 == null goto label1", "label r10 = org apache tomcat util net jsse j s s e key manager r0", "$ r5 = r10 delegate", "$ r6 = $ r5 choose server alias r1 r2 r3", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tomcat util net nio2 channel r0", "$ r1 = r2 sc", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache tomcat util net nio endpoint r0", "r1 use inherited channel = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache tomcat util net openssl cipher open s s l cipher configuration parser parse r0", "$ r2 = org apache tomcat util net openssl cipher open s s l cipher configuration parser convert for j s s e $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com github fge uritemplate var value list value $ builder", "specialinvoke $ r1 < init > null", "$ r2 = $ r1 add all r0", "$ r3 = $ r2 build", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com github fge uritemplate var variable map r0", "$ r2 = r5 var", "$ r3 = $ r2 get r1", "$ r4 = com github fge uritemplate var value variable value $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r4 = org codehaus httpcache4j uri u r i builder r0", "$ r3 = r4 with path $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r9 = org apache velocity app event event cartridge r0", "$ r6 = r9 method exception handler", "if $ r6 == null goto label1", "r10 = org apache velocity app event event cartridge r0", "$ r7 = r10 method exception handler", "$ r8 = $ r7 method exception r1 r2 r3 r4 r5", "return $ r8", "if $ r6 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r10 = null", "r11 = org apache velocity app event event cartridge r0", "$ r8 = r11 invalid reference handler", "r6 = $ r8 iterator", "label $ z0 = r6 have next", "if $ z0 == 0 goto label3", "$ r9 = r6 next", "r7 = org apache velocity app event invalid reference event handler $ r9", "r10 = r7 invalid get method r1 r2 r3 r4 r5", "if r10 == null goto label2", "goto label3", "label return r10", "if r10 == null goto label2", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity app event implement invalid reference info r0", "$ r1 = r2 invalid reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity app event implement report invalid reference r0", "$ r1 = r2 invalid reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "org apache velocity runtime runtime singleton set property r0 r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org apache velocity runtime runtime singleton load directive r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r3 = org apache velocity context abstract context r0", "$ r2 = r3 internal remove r1", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity exception template init exception r0", "$ r1 = r2 template name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity runtime directive block macro r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = org apache velocity runtime directive define r0", "$ r5 = r8 key", "r7 = new org apache velocity runtime directive block $ reference", "specialinvoke r7 < init > r1 r0", "r1 put $ r5 r7", "return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org apache velocity runtime directive block macro r0", "$ r5 = r7 macro", "r6 = new org apache velocity runtime directive block $ reference", "specialinvoke r6 < init > r1 r0", "r8 = org apache velocity runtime renderable r6", "$ z0 = $ r5 render r1 r2 r3 r8", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache velocity runtime directive scope r0", "$ r1 = r3 parent", "if $ r1 ! = null goto label1", "return 1", "if $ r1 ! = null goto label1", "label r4 = org apache velocity runtime directive scope r0", "$ r2 = r4 parent", "$ i0 = $ r2 get depth", "$ i1 = $ i0 + 1", "return $ i1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache velocity runtime directive velocimacro proxy r0", "r2 macro name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "r7 = r0 special token", "label $ r4 = r7 special token", "if $ r4 == null goto label02", "r7 = r7 special token", "goto label01", "if $ r4 == null goto label02", "label if r7 == null goto label13", "r2 = r7 image", "i2 = 0", "i0 = r2 length", "label if i2 > = i0 goto label12", "c1 = r2 char at i2", "if c1 == 35 goto label04", "if c1 ! = 36 goto label05", "label $ r3 append c1", "label if c1 ! = 92 goto label11", "z1 = 0", "i3 = i2", "z2 = 1", "label if z2 == 0 goto label10", "if i3 > = i0 goto label10", "c4 = r2 char at i3", "if c4 ! = 92 goto label07", "goto label09", "label i3 = i3 + 1", "goto label06", "if c4 ! = 92 goto label07", "label if c4 ! = 36 goto label08", "z1 = 1", "z2 = 0", "label if c4 ! = 36 goto label08", "label z2 = 0", "if i3 > = i0 goto label10", "label if z1 == 0 goto label11", "r8 = r2 substring i2 i3", "$ r3 append r8", "i2 = i3", "label i2 = i2 + 1", "goto label03", "label if i2 > = i0 goto label12", "label r7 = r7 next", "goto label02", "label if r7 == null goto label13", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [], [46], []]}
{"nodes": ["r0 = @ this", "i35 = @ parameter0", "i0 = @ parameter1", "r15 = org apache velocity runtime parser velocity char stream r0", "i36 = r15 token begin", "r16 = org apache velocity runtime parser velocity char stream r0", "$ i2 = r16 bufpos", "r17 = org apache velocity runtime parser velocity char stream r0", "$ i1 = r17 token begin", "if $ i2 < $ i1 goto label1", "r18 = org apache velocity runtime parser velocity char stream r0", "$ i31 = r18 bufpos", "r19 = org apache velocity runtime parser velocity char stream r0", "$ i30 = r19 token begin", "$ i33 = $ i31 - $ i30", "r20 = org apache velocity runtime parser velocity char stream r0", "$ i32 = r20 in buf", "$ i34 = $ i33 + $ i32", "i37 = $ i34 + 1", "goto label2", "label i38 = 0", "i39 = 0", "i40 = 0", "label if i38 > = i37 goto label4", "r25 = org apache velocity runtime parser velocity char stream r0", "$ r9 = r25 bufline", "r26 = org apache velocity runtime parser velocity char stream r0", "$ i20 = r26 bufsize", "$ i21 = i36 % $ i20", "i39 = $ i21", "$ i25 = $ r9 [ $ i21 ]", "r27 = org apache velocity runtime parser velocity char stream r0", "$ r10 = r27 bufline", "i36 = i36 + 1", "r28 = org apache velocity runtime parser velocity char stream r0", "$ i22 = r28 bufsize", "$ i23 = i36 % $ i22", "$ i24 = $ r10 [ $ i23 ]", "if $ i25 ! = $ i24 goto label4", "r29 = org apache velocity runtime parser velocity char stream r0", "$ r11 = r29 bufline", "$ r11 [ $ i21 ] = i35", "r30 = org apache velocity runtime parser velocity char stream r0", "$ r12 = r30 bufcolumn", "$ i26 = $ r12 [ $ i23 ]", "$ i28 = i40 + $ i26", "r31 = org apache velocity runtime parser velocity char stream r0", "$ r13 = r31 bufcolumn", "$ i27 = $ r13 [ $ i21 ]", "i42 = $ i28 - $ i27", "r32 = org apache velocity runtime parser velocity char stream r0", "$ r14 = r32 bufcolumn", "$ i29 = i0 + i40", "$ r14 [ $ i21 ] = $ i29", "i40 = i42", "i38 = i38 + 1", "goto label3", "if $ i25 ! = $ i24 goto label4", "label if i38 > = i37 goto label7", "r33 = org apache velocity runtime parser velocity char stream r0", "$ r3 = r33 bufline", "i43 = i35 + 1", "$ r3 [ i39 ] = i35", "r34 = org apache velocity runtime parser velocity char stream r0", "$ r4 = r34 bufcolumn", "$ i12 = i0 + i40", "$ r4 [ i39 ] = $ i12", "label $ i44 = i38", "label if i38 > = i37 goto label7", "label r41 = org apache velocity runtime parser velocity char stream r0", "$ r1 = r41 bufline", "$ i10 = $ r1 [ i39 ]", "r42 = org apache velocity runtime parser velocity char stream r0", "r42 line = $ i10", "r43 = org apache velocity runtime parser velocity char stream r0", "$ r2 = r43 bufcolumn", "$ i11 = $ r2 [ i39 ]", "r44 = org apache velocity runtime parser velocity char stream r0", "r44 column = $ i11", "return", "if $ i2 < $ i1 goto label1", "label r21 = org apache velocity runtime parser velocity char stream r0", "$ i4 = r21 bufsize", "r22 = org apache velocity runtime parser velocity char stream r0", "$ i3 = r22 token begin", "$ i6 = $ i4 - $ i3", "r23 = org apache velocity runtime parser velocity char stream r0", "$ i5 = r23 bufpos", "$ i7 = $ i6 + $ i5", "$ i9 = $ i7 + 1", "r24 = org apache velocity runtime parser velocity char stream r0", "$ i8 = r24 in buf", "i37 = $ i9 + $ i8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], []]}
{"nodes": ["r0 = @ this", "r4 = org apache velocity runtime parser pool impl r0", "$ r1 = r4 pool", "$ r2 = $ r1 get", "$ r3 = org apache velocity runtime parser parser $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache velocity runtime resource loader data source resource loader r0", "r2 data source = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache velocity runtime resource loader resource loader r0", "$ r1 = r2 class name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache velocity runtime resource loader u r l resource loader r0", "$ i0 = r1 timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ l0 = java lang system current time millis", "r1 = org apache velocity runtime resource resource r0", "$ l1 = r1 modification check interval", "$ l2 = 1000l * $ l1", "$ l3 = $ l0 + $ l2", "r2 = org apache velocity runtime resource resource r0", "r2 next check = $ l3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache velocity runtime resource resource manager impl r0", "r2 = specialinvoke r5 get loader for resource r1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label $ r3 = r2 get class", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache velocity runtime runtime instance r0", "$ r2 = r5 configuration", "$ r3 = $ r2 get string r1", "$ r4 = org apache common lang3 string utils trim $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r17 = org apache velocity runtime velocimacro manager r0", "$ z0 = r17 inline replaces global", "if $ z0 == 0 goto label1", "if r2 == null goto label1", "$ r9 = r2 get macros", "$ r10 = $ r9 get r1", "r12 = org apache velocity runtime velocimacro manager $ macro entry $ r10", "if r12 == null goto label1", "$ r11 = r12 get proxy", "return $ r11", "if r12 == null goto label1", "label r18 = org apache velocity runtime velocimacro manager r0", "$ z1 = specialinvoke r18 use namespaces", "if $ z1 == 0 goto label2", "if r3 == null goto label2", "$ r5 = r3 get macros", "$ r6 = $ r5 get r1", "r13 = org apache velocity runtime velocimacro manager $ macro entry $ r6", "$ r7 = r3 get macros", "$ i0 = $ r7 size", "if $ i0 < = 0 goto label2", "if r13 == null goto label2", "$ r8 = r13 get proxy", "return $ r8", "if r13 == null goto label2", "label r19 = org apache velocity runtime velocimacro manager r0", "$ r14 = r19 global namespace", "$ r15 = $ r14 get r1", "r16 = org apache velocity runtime velocimacro manager $ macro entry $ r15", "if r16 == null goto label3", "$ r4 = r16 get proxy", "return $ r4", "if r16 == null goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [], [37], []]}
{"nodes": ["r0 = @ this", "r3 = org apache velocity util introspection info r0", "$ r1 = r3 get template name", "r4 = org apache velocity util introspection info r0", "$ i0 = r4 get line", "r5 = org apache velocity util introspection info r0", "$ i1 = r5 get column", "$ r2 = org apache velocity util string utils format file string $ r1 $ i0 $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = new org apache velocity util introspection class map", "r21 = org apache velocity util introspection introspector cache r0", "$ r8 = r21 log", "r22 = org apache velocity util introspection introspector cache r0", "$ r7 = r22 conversion handler", "specialinvoke r19 < init > r1 $ r8 $ r7", "r20 = new org apache velocity util introspection class field map", "r23 = org apache velocity util introspection introspector cache r0", "$ r10 = r23 log", "specialinvoke r20 < init > r1 $ r10", "r24 = org apache velocity util introspection introspector cache r0", "$ r11 = r24 class map cache", "entermonitor $ r11", "label r25 = org apache velocity util introspection introspector cache r0", "$ r12 = r25 class map cache", "$ r12 put r1 r19", "r26 = org apache velocity util introspection introspector cache r0", "$ r14 = r26 class field map cache", "$ r14 put r1 r20", "r27 = org apache velocity util introspection introspector cache r0", "$ r16 = r27 class name cache", "$ r17 = r1 get name", "$ r16 add $ r17", "exitmonitor $ r11", "label goto label5", "label return r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get template name", "$ i0 = r0 get line", "$ i1 = r0 get column", "$ r2 = org apache velocity util string utils format file string $ r1 $ i0 $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return \\ `` 2 0\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r5 append \\ `` $ { \\ ``", "$ r5 append r1", "$ r5 append \\ `` \\ ``", "$ r5 append r2", "$ r5 append \\ `` \\ ``", "$ i0 = lengthof r3", "if $ i0 == 0 goto label3", "i3 = 0", "label $ i1 = lengthof r3", "$ i2 = $ i1 - 1", "if i3 > = $ i2 goto label2", "$ r16 = $ r5 append \\ `` $ \\ ``", "$ r17 = r3 [ i3 ]", "$ r16 append $ r17", "$ r5 append \\", "i3 = i3 + 1", "goto label1", "if i3 > = $ i2 goto label2", "label $ r13 = $ r5 append \\ `` $ \\ ``", "$ r14 = r3 [ i3 ]", "$ r13 append $ r14", "label $ r5 append \\ `` } \\ ``", "$ r12 = $ r5 to string", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache velocity script velocity script engine", "specialinvoke r2 < init > r0", "r3 = javax script script engine r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx ext bridge bridge option r0", "r2 outbound permit = r1", "r3 = io vertx ext bridge bridge option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx core abstract verticle r0", "$ r1 = r3 context", "$ r2 = $ r1 deployment i d", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core cli argument r0", "r1 multi value = z0", "r2 = io vertx core cli argument r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core cli option r0", "r2 short name = r1", "r3 = io vertx core cli option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx core cli option r0", "$ r2 = r3 choice", "$ r2 add r1", "r4 = io vertx core cli option r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core cli type argument r0", "r2 converter = r1", "r3 = io vertx core cli type argument r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = io vertx core cli usage message formatter r0", "r3 build wrap r1 0 r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx core deployment option r0", "$ r1 = r2 config", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core dns impl decoder start of authority record r0", "$ i0 = r1 refresh time", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core eventbus event bus option r0", "r1 cluster = z0", "r2 = io vertx core eventbus event bus option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core eventbus event bus option r0", "$ i0 = r1 cluster public port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core eventbus reply exception r0", "$ i0 = r1 failure code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core file open option r0", "$ z0 = r1 sync", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core file open option r0", "$ z0 = r1 dsync", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core http http client option r0", "r1 keep alive = z0", "r2 = io vertx core http http client option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core http http client option r0", "$ i0 = r1 max wait queue size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = io vertx core http http client option r0", "r1 pool clean period = i0", "r2 = io vertx core http http client option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core http http server option r0", "r2 initial setting = r1", "r3 = io vertx core http http server option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core http http server option r0", "r1 per frame web socket compression support = z0", "r2 = io vertx core http http server option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core http impl vertx http2 connection handler r0", "r2 remove handler = r1", "r3 = io vertx core http impl vertx http2 connection handler r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx core http request option r0", "$ r1 = r2 host", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = io vertx core http stream priority r0", "r1 dependency = i0", "r2 = io vertx core http stream priority r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx core http web socket connect option r0", "$ r2 = r6 sub protocols", "if $ r2 ! = null goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = io vertx core http web socket connect option r0", "r7 sub protocol = r5", "label r8 = io vertx core http web socket connect option r0", "$ r3 = r8 sub protocols", "$ r3 add r1", "r9 = io vertx core http web socket connect option r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx core impl future impl r0", "$ r1 = r2 throwable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core impl launcher command bare command r0", "r1 run null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r8 = io vertx core impl launcher command vertx isolated deployer r0", "r8 vertx = r2", "$ z0 = r3 be worker", "if $ z0 == 0 goto label1", "$ r7 = \\ `` deploy worker verticle\\ ``", "goto label2", "label r9 = io vertx core impl launcher command vertx isolated deployer r0", "$ r6 = specialinvoke r9 create handler $ r7 r4", "r2 deploy verticle r1 r3 $ r6", "return", "if $ z0 == 0 goto label1", "label $ r7 = \\ `` deploy verticle\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r12 = io vertx core impl task queue r0", "$ r5 = r12 task", "entermonitor $ r5", "label r13 = io vertx core impl task queue r0", "$ r7 = r13 task", "r11 = new io vertx core impl task queue $ task", "specialinvoke r11 < init > r1 r2", "$ r7 add r11", "r14 = io vertx core impl task queue r0", "$ r8 = r14 current", "if $ r8 ! = null goto label2", "r15 = io vertx core impl task queue r0", "r15 current = r2", "r16 = io vertx core impl task queue r0", "$ r9 = r16 runner", "r2 execute $ r9", "label exitmonitor $ r5", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx core json json array r0", "$ r2 = r5 list", "if r1 == null goto label1", "$ r3 = java util base64 get encoder", "$ r4 = $ r3 encode to string r1", "goto label2", "label $ r2 add $ r4", "r6 = io vertx core json json array r0", "return r6", "if r1 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "java util object require non null r1", "r9 = io vertx core json json object r0", "$ r4 = r9 map", "if r2 ! = null goto label1", "$ r8 = null", "goto label2", "label $ r4 put r1 $ r8", "r10 = io vertx core json json object r0", "return r10", "if r2 ! = null goto label1", "label $ r5 = java util base64 get encoder", "$ r8 = $ r5 encode to string r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "java util object require non null r1", "r9 = io vertx core json json object r0", "$ r4 = r9 map", "if r2 ! = null goto label1", "$ r8 = null", "goto label2", "label $ r4 put r1 $ r8", "r10 = io vertx core json json object r0", "return r10", "if r2 ! = null goto label1", "label $ r5 = java util base64 get encoder", "$ r8 = $ r5 encode to string r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx core json json object r0", "$ r2 = r4 map", "$ r3 = $ r2 remove r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new io vertx core launcher", "specialinvoke $ r2 < init >", "$ r2 execute r0 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core metric metric option r0", "r1 enable = z0", "r2 = io vertx core metric metric option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core net client option base r0", "r2 proxy option = r1", "r3 = io vertx core net client option base r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core net net server option r0", "r1 sni = z0", "r2 = io vertx core net net server option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core net network option r0", "$ i0 = r1 send buffer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io vertx core net open s s l engine option r0", "$ z0 = r1 session cache enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core net pfx option r0", "r2 path = r1", "r3 = io vertx core net pfx option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "java util object require non null r1 \\ `` proxy host may not be null\\ ``", "r3 = io vertx core net proxy option r0", "r3 host = r1", "r4 = io vertx core net proxy option r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io vertx core net proxy option r0", "r2 password = r1", "r3 = io vertx core net proxy option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx core net t c p s s l option r0", "$ r1 = r2 crl value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx core vertx option r0", "$ r1 = r3 event bus option", "$ r1 set cluster z0", "r4 = io vertx core vertx option r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io vertx core vertx option r0", "r1 ha enable = z0", "r2 = io vertx core vertx option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex amqp amqp connection r0", "$ r2 = r4 delegate", "$ r2 exception handler r1", "r5 = io vertx reactivex amqp amqp connection r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx reactivex amqp amqp sender r0", "$ r2 = r3 delegate", "$ r2 close r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 get delegate", "$ r4 = io vertx amqpbridge amqp bridge create $ r3 r1", "r2 = io vertx reactivex amqpbridge amqp bridge new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = io vertx reactivex cassandra mapper r0", "$ r3 = r4 delegate", "$ r3 delete r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = io vertx reactivex cassandra mapper r0", "$ r4 = r6 delegate", "r5 = new io vertx reactivex cassandra mapper $ 1", "r7 = io vertx reactivex cassandra mapper r0", "specialinvoke r5 < init > r7 r2", "r8 = io vertx core handler r5", "$ r4 get r1 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex circuitbreaker circuit breaker r0", "$ r2 = r4 delegate", "$ r2 open handler r1", "r5 = io vertx reactivex circuitbreaker circuit breaker r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex core eventbus event bus r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex core eventbus event bus $ 9", "r7 = io vertx reactivex core eventbus event bus r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 add inbound interceptor r8", "r9 = io vertx reactivex core eventbus event bus r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = io vertx reactivex core http http client r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex core http http client $ 1", "r10 = io vertx reactivex core http http client r0", "specialinvoke r8 < init > r10 r3", "r11 = io vertx core handler r8", "$ r7 = $ r6 request r1 r2 r11", "r4 = io vertx reactivex core http http client request new instance $ r7", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 13", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r2", "r10 = io vertx core handler r7", "$ r6 = $ r5 get abs r1 r10", "r3 = io vertx reactivex core http http client request new instance $ r6", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 22", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r2", "r10 = io vertx core handler r7", "$ r6 = $ r5 post ab r1 r10", "r3 = io vertx reactivex core http http client request new instance $ r6", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r6 = io vertx reactivex core http http client r0", "$ r4 = r6 delegate", "$ r5 = $ r4 head i0 r1 r2", "r3 = io vertx reactivex core http http client request new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 39", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r3", "r10 = io vertx core handler r7", "$ r5 option now r1 r2 r10", "r11 = io vertx reactivex core http http client r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 41", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r2", "r10 = io vertx core handler r7", "$ r6 = $ r5 put r1 r10", "r3 = io vertx reactivex core http http client request new instance $ r6", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 50", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r2", "r10 = io vertx core handler r7", "$ r6 = $ r5 delete ab r1 r10", "r3 = io vertx reactivex core http http client request new instance $ r6", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = io vertx reactivex core http http client r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex core http http client $ 53", "r9 = io vertx reactivex core http http client r0", "specialinvoke r7 < init > r9 r2", "r10 = io vertx core handler r7", "$ r5 websocket r1 r10 r3", "r11 = io vertx reactivex core http http client r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r11 = io vertx reactivex core http http client r0", "$ r6 = r11 delegate", "$ r7 = r3 get delegate", "r10 = new io vertx reactivex core http http client $ 60", "r12 = io vertx reactivex core http http client r0", "specialinvoke r10 < init > r12 r4", "r13 = io vertx core handler r10", "$ r6 websocket i0 r1 r2 $ r7 r13 r5", "r14 = io vertx reactivex core http http client r0", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex core http http server request r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex core http http server request $ 4", "r7 = io vertx reactivex core http http server request r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 custom frame handler r8", "r9 = io vertx reactivex core http http server request r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex core http http server request r0", "$ r2 = r4 delegate", "$ r2 stream priority handler r1", "r5 = io vertx reactivex core http http server request r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex core http http server response r0", "$ r2 = r4 delegate", "$ r2 close handler r1", "r5 = io vertx reactivex core http http server response r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex core stream pipe r0", "$ r2 = pipe $ lambda_rx to_1__1 bootstrap $ r4 r1", "$ r3 = io vertx reactivex impl async result completable to completable $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext auth chain auth r0", "$ r2 = r4 delegate", "$ r3 = r1 get delegate", "z0 = $ r2 remove $ r3", "return z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext auth mongo hash strategy r0", "$ r3 = r5 delegate", "$ r4 = r1 get delegate", "r2 = $ r3 get store pwd $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext auth mongo mongo auth r0", "$ r2 = r5 delegate", "$ r3 = r1 get delegate", "$ r2 set hash strategy $ r3", "r6 = io vertx reactivex ext auth mongo mongo auth r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r5 = io vertx reactivex ext auth oauth2 access token r0", "$ r2 = r5 cached_1", "if $ r2 == null goto label1", "r6 = io vertx reactivex ext auth oauth2 access token r0", "$ r4 = r6 cached_1", "return $ r4", "if $ r2 == null goto label1", "label r7 = io vertx reactivex ext auth oauth2 access token r0", "$ r3 = r7 delegate", "r1 = $ r3 refresh token", "r8 = io vertx reactivex ext auth oauth2 access token r0", "r8 cached_1 = r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = io vertx ext auth oauth2 keycloak helper raw id token r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = io vertx reactivex ext auth oauth2 o auth2 auth r0", "$ r4 = r6 delegate", "r5 = new io vertx reactivex ext auth oauth2 o auth2 auth $ 1", "r7 = io vertx reactivex ext auth oauth2 o auth2 auth r0", "specialinvoke r5 < init > r7 r2", "r8 = io vertx core handler r5", "$ r4 get token r1 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex ext auth oauth2 o auth2 auth r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex ext auth oauth2 o auth2 auth $ 3", "r8 = io vertx reactivex ext auth oauth2 o auth2 auth r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 introspect token r1 r9", "r10 = io vertx reactivex ext auth oauth2 o auth2 auth r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx reactivex ext auth oauth2 o auth2 response r0", "$ r2 = r4 delegate", "$ r3 = $ r2 body", "r1 = io vertx reactivex core buffer buffer new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 get delegate", "$ r5 = io vertx ext auth oauth2 provider box auth create $ r4 r1 r2", "r3 = io vertx reactivex ext auth oauth2 o auth2 auth new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r5 = r0 get delegate", "$ r6 = io vertx ext auth oauth2 provider shopify auth create $ r5 r1 r2 r3", "r4 = io vertx reactivex ext auth oauth2 o auth2 auth new instance $ r6", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r1 = io vertx ext auth vertx context p r n g current", "r0 = io vertx reactivex ext auth vertx context p r n g new instance $ r1", "return r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx ext consul consul client create $ r2", "r1 = io vertx reactivex ext consul consul client new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext consul consul client r0", "$ r3 = r5 delegate", "$ r3 create acl token r1 r2", "r6 = io vertx reactivex ext consul consul client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext consul consul client r0", "$ r3 = r5 delegate", "$ r3 register service r1 r2", "r6 = io vertx reactivex ext consul consul client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext consul consul client r0", "$ r3 = r5 delegate", "$ r3 maintenance service r1 r2", "r6 = io vertx reactivex ext consul consul client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext consul consul client r0", "$ r3 = r5 delegate", "$ r3 fail check r1 r2", "r6 = io vertx reactivex ext consul consul client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext consul consul client r0", "$ r2 = r4 delegate", "$ r2 list session r1", "r5 = io vertx reactivex ext consul consul client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 get delegate", "$ r5 = io vertx ext mongo mongo client create share $ r4 r1 r2", "r3 = io vertx reactivex ext mongo mongo client new instance $ r5", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r8 = io vertx reactivex ext mongo mongo client r0", "$ r6 = r8 delegate", "$ r6 replace with option r1 r2 r3 r4 r5", "r9 = io vertx reactivex ext mongo mongo client r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex ext mongo mongo client r0", "$ r4 = r6 delegate", "$ r4 bulk write r1 r2 r3", "r7 = io vertx reactivex ext mongo mongo client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = io vertx reactivex ext mongo mongo client r0", "$ r5 = r7 delegate", "$ r5 find one r1 r2 r3 r4", "r8 = io vertx reactivex ext mongo mongo client r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext mongo mongo client r0", "$ r3 = r5 delegate", "$ r3 create collection r1 r2", "r6 = io vertx reactivex ext mongo mongo client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx reactivex ext shell cli completion r0", "$ r2 = r3 delegate", "$ r2 complete r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx ext shell command command builder command $ r2", "r1 = io vertx reactivex ext shell command command builder new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext shell command command builder r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext shell command command builder $ 2", "r7 = io vertx reactivex ext shell command command builder r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 completion handler r8", "r9 = io vertx reactivex ext shell command command builder r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext shell command command process r0", "$ r2 = r4 delegate", "$ r2 write r1", "r5 = io vertx reactivex ext shell command command process r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext shell session session r0", "$ r3 = r4 delegate", "r2 = $ r3 get r1", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx ext shell shell server create $ r2", "r1 = io vertx reactivex ext shell shell server new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext shell system job r0", "$ r2 = r5 delegate", "$ r3 = r1 get delegate", "$ r2 set session $ r3", "r6 = io vertx reactivex ext shell system job r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext shell term term r0", "$ r2 = r4 delegate", "$ r2 echo r1", "r5 = io vertx reactivex ext shell term term r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext shell term term r0", "$ r2 = r4 delegate", "$ r2 close handler r1", "r5 = io vertx reactivex ext shell term term r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext sql s q l connection r0", "$ r3 = r5 delegate", "$ r3 query r1 r2", "r6 = io vertx reactivex ext sql s q l connection r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext stomp stomp client r0", "$ r2 = r4 delegate", "$ r2 write frame handler r1", "r5 = io vertx reactivex ext stomp stomp client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext stomp stomp client r0", "$ r2 = r4 delegate", "$ r2 exception handler r1", "r5 = io vertx reactivex ext stomp stomp client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext stomp stomp client connection r0", "$ r2 = r4 delegate", "$ r2 send r1", "r5 = io vertx reactivex ext stomp stomp client connection r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext stomp stomp client connection r0", "$ r4 = r5 delegate", "r3 = $ r4 subscribe r1 r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext stomp stomp server handler r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext stomp stomp server handler $ 5", "r7 = io vertx reactivex ext stomp stomp server handler r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 unsubscribe handler r8", "r9 = io vertx reactivex ext stomp stomp server handler r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext stomp stomp server handler r0", "$ r2 = r4 delegate", "$ r3 = r1 get delegate", "$ r2 on close $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext stomp stomp server handler r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext stomp stomp server handler $ 9", "r7 = io vertx reactivex ext stomp stomp server handler r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 abort handler r8", "r9 = io vertx reactivex ext stomp stomp server handler r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext stomp stomp server handler r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext stomp stomp server handler $ 10", "r7 = io vertx reactivex ext stomp stomp server handler r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 begin handler r8", "r9 = io vertx reactivex ext stomp stomp server handler r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext stomp stomp server handler r0", "$ r2 = r4 delegate", "$ r2 bridge r1", "r5 = io vertx reactivex ext stomp stomp server handler r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext unit collect event bus collector r0", "$ r3 = r5 delegate", "$ r4 = $ r3 register r1", "r2 = io vertx reactivex core eventbus message consumer new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext unit completion r0", "$ r1 = r2 delegate", "$ r1 await", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext unit report test case report r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext unit report test case report $ 1", "r7 = io vertx reactivex ext unit report test case report r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 end handler r8", "r9 = io vertx reactivex ext unit report test case report r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex ext unit test context r0", "$ r2 = r3 delegate", "r1 = $ r2 async assert success", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext unit test suite r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext unit test suite $ 4", "r7 = io vertx reactivex ext unit test suite r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 after each r8", "r9 = io vertx reactivex ext unit test suite r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext web api contract openapi3 open a p i3 router factory r0", "$ r3 = r5 delegate", "$ r3 mount service from tag r1 r2", "r6 = io vertx reactivex ext web api contract openapi3 open a p i3 router factory r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx reactivex ext web api request parameter r0", "$ r2 = r3 delegate", "$ r2 set name r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex ext web api request parameter r0", "$ r2 = r3 delegate", "r1 = $ r2 get long", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext web api request parameter r0", "$ r1 = r2 delegate", "z0 = $ r1 be double", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext web api request parameter r0", "$ r3 = r5 delegate", "$ r4 = $ r3 path parameter r1", "r2 = io vertx reactivex ext web api request parameter new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext web api request parameter r0", "$ r3 = r5 delegate", "$ r4 = $ r3 header parameter r1", "r2 = io vertx reactivex ext web api request parameter new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r5 = io vertx reactivex ext web api validation h t t p request validation handler r0", "$ r3 = r5 delegate", "$ r3 add query param r1 r2 z0", "r6 = io vertx reactivex ext web api validation h t t p request validation handler r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r5 = io vertx reactivex ext web api validation h t t p request validation handler r0", "$ r3 = r5 delegate", "$ r3 add header param r1 r2 z0", "r6 = io vertx reactivex ext web api validation h t t p request validation handler r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web api validation h t t p request validation handler r0", "$ r2 = r4 delegate", "$ r2 add x m l body schema r1", "r5 = io vertx reactivex ext web api validation h t t p request validation handler r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext web api validation h t t p request validation handler r0", "$ r3 = r5 delegate", "$ r3 add multipart require file r1 r2", "r6 = io vertx reactivex ext web api validation h t t p request validation handler r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext web api validation parameter type validator r0", "$ r3 = r5 delegate", "$ r4 = $ r3 be valid collection r1", "r2 = io vertx reactivex ext web api request parameter new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext web api validation parameter type validator r0", "$ r1 = r2 delegate", "z0 = $ r1 have default", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx ext web api validation parameter type validator create array type validator $ r2", "r1 = io vertx reactivex ext web api validation parameter type validator new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web client http request r0", "$ r2 = r4 delegate", "$ r2 method r1", "r5 = io vertx reactivex ext web client http request r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx reactivex ext web client http request r0", "$ r2 = r4 delegate", "$ r3 = $ r2 query params", "r1 = io vertx reactivex core multi map new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = new io vertx reactivex ext web client predicate response predicate", "specialinvoke $ r1 < init > r0", "goto label2", "label return $ r1", "if r0 == null goto label1", "label $ r1 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext web client predicate response predicate result r0", "$ r1 = r2 delegate", "z0 = $ r1 succeed", "return z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx ext web client web client create $ r2", "r1 = io vertx reactivex ext web client web client new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex ext web client web client r0", "$ r3 = r6 delegate", "$ r4 = $ r3 patch ab r1", "$ r5 = io vertx reactivex ext web client web client type_arg_29", "r2 = io vertx reactivex ext web client http request new instance $ r4 $ r5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex ext web handler basic auth handler r0", "$ r3 = r5 delegate", "$ r4 = r1 get delegate", "$ r3 authorize $ r4 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = new io vertx reactivex ext web handler basic auth handler", "specialinvoke $ r1 < init > r0", "goto label2", "label return $ r1", "if r0 == null goto label1", "label $ r1 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex ext web handler body handler r0", "$ r1 = r3 delegate", "$ r1 set merge form attribute z0", "r4 = io vertx reactivex ext web handler body handler r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web handler cors handler r0", "$ r2 = r4 delegate", "$ r2 allow method r1", "r5 = io vertx reactivex ext web handler cors handler r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web handler cors handler r0", "$ r2 = r4 delegate", "$ r2 expose header r1", "r5 = io vertx reactivex ext web handler cors handler r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = io vertx reactivex ext web handler c s r f handler r0", "$ r1 = r3 delegate", "$ r1 set nag http z0", "r4 = io vertx reactivex ext web handler c s r f handler r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ r2 = r0 get delegate", "$ r3 = io vertx ext web handler digest auth handler create $ r2 l0", "r1 = io vertx reactivex ext web handler digest auth handler new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = new io vertx reactivex ext web handler form login handler", "specialinvoke $ r1 < init > r0", "goto label2", "label return $ r1", "if r0 == null goto label1", "label $ r1 = null"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = new io vertx reactivex ext web handler multi tenant handler $ 2", "specialinvoke r5 < init > r0", "r6 = java util function function r5", "$ r4 = io vertx ext web handler multi tenant handler create r6 r1", "r2 = io vertx reactivex ext web handler multi tenant handler new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 get delegate", "$ r4 = io vertx ext web handler o auth2 auth handler create $ r3 r1", "r2 = io vertx reactivex ext web handler o auth2 auth handler new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = io vertx reactivex ext web handler session handler r0", "$ r1 = r3 delegate", "$ r1 set session timeout l0", "r4 = io vertx reactivex ext web handler session handler r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = io vertx reactivex ext web handler sockjs sock j s handler r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex ext web handler sockjs sock j s handler $ 1", "r8 = io vertx reactivex ext web handler sockjs sock j s handler r0", "specialinvoke r6 < init > r8 r1", "r9 = io vertx core handler r6", "$ r5 = $ r4 socket handler r9", "r2 = io vertx reactivex ext web router new instance $ r5", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex ext web handler sockjs sock j s socket r0", "$ r2 = r3 delegate", "r1 = $ r2 uri", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web handler static handler r0", "$ r2 = r4 delegate", "$ r2 set directory template r1", "r5 = io vertx reactivex ext web handler static handler r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext web language header r0", "$ r1 = r2 delegate", "i0 = $ r1 weight order", "return i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex ext web m i m e header r0", "$ r2 = r3 delegate", "r1 = $ r2 component", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex ext web route r0", "$ r2 = r4 delegate", "$ r2 produce r1", "r5 = io vertx reactivex ext web route r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext web router r0", "$ r3 = r5 delegate", "$ r4 = $ r3 option with regex r1", "r2 = io vertx reactivex ext web route new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex ext web router r0", "$ r3 = r5 delegate", "$ r4 = $ r3 put with regex r1", "r2 = io vertx reactivex ext web route new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = io vertx reactivex ext web router r0", "$ r2 = r4 delegate", "$ r3 = $ r2 delete", "r1 = io vertx reactivex ext web route new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = io vertx reactivex ext web router r0", "$ r3 = r6 delegate", "$ r4 = r2 get delegate", "$ r3 mount sub router r1 $ r4", "r7 = io vertx reactivex ext web router r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r6 = io vertx reactivex ext web router r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex ext web router $ 1", "r7 = io vertx reactivex ext web router r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 error handler i0 r8", "r9 = io vertx reactivex ext web router r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = io vertx reactivex ext web rout context r0", "$ r2 = r3 delegate", "$ r2 fail i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex ext web rout context r0", "$ r1 = r2 delegate", "$ r1 clear user", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = io vertx reactivex ext web sstore session store r0", "$ r3 = r6 delegate", "$ r4 = r1 get delegate", "$ r3 init $ r4 r2", "r7 = io vertx reactivex ext web sstore session store r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r4 = io vertx reactivex ext web sstore session store r0", "$ r2 = r4 delegate", "$ r3 = $ r2 create session l0", "r1 = io vertx reactivex ext web session new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx reactivex ext web templ freemarker free marker template engine r0", "$ r1 = r3 delegate", "$ r1 set max cache size i0", "r4 = io vertx reactivex ext web templ freemarker free marker template engine r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex kafka client consumer kafka consumer r0", "$ r1 = kafka consumer $ lambda_rx assignment_8__10 bootstrap $ r3", "$ r2 = io vertx reactivex impl async result single to single $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io vertx reactivex kafka client consumer kafka consumer r0", "$ r2 = r3 delegate", "$ r2 pause r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex kafka client consumer kafka consumer r0", "$ r2 = kafka consumer $ lambda_rx partition for_23__25 bootstrap $ r4 r1", "$ r3 = io vertx reactivex impl async result single to single $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx mqtt mqtt client create $ r2", "r1 = io vertx reactivex mqtt mqtt client new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "z1 = @ parameter4", "r7 = io vertx reactivex mqtt mqtt client r0", "$ r4 = r7 delegate", "$ r5 = r2 get delegate", "$ r4 publish r1 $ r5 r3 z0 z1", "r8 = io vertx reactivex mqtt mqtt client r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r4 = io vertx reactivex mqtt mqtt client r0", "$ r2 = r4 delegate", "$ r2 subscribe r1 i0", "r5 = io vertx reactivex mqtt mqtt client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex mqtt mqtt endpoint r0", "$ r2 = r4 delegate", "$ r2 publish acknowledge handler r1", "r5 = io vertx reactivex mqtt mqtt endpoint r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx reactivex mqtt mqtt endpoint r0", "$ r1 = r3 delegate", "$ r1 publish acknowledge i0", "r4 = io vertx reactivex mqtt mqtt endpoint r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex mqtt mqtt server r0", "$ r1 = r3 delegate", "$ r1 listen", "r4 = io vertx reactivex mqtt mqtt server r0", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex mysqlclient my s q l connection r0", "$ r2 = r4 delegate", "$ r2 reset connection r1", "r5 = io vertx reactivex mysqlclient my s q l connection r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r6 = io vertx reactivex rabbitmq rabbit m q client r0", "$ r5 = r6 delegate", "$ r5 basic publish r1 r2 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r3 = io vertx reactivex rabbitmq rabbit m q client r0", "$ r2 = r3 delegate", "$ r2 wait for confirms l0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = io vertx reactivex rabbitmq rabbit m q client r0", "$ r2 = r3 delegate", "$ r2 basic qos i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get delegate", "$ r3 = io vertx redis client redis create client $ r2", "r1 = io vertx reactivex redis client redis new instance $ r3", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 18", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 config r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 33", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 flushall r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 39", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 georadius r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 40", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 georadius ro r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = io vertx reactivex redis client redis a p i r0", "$ r5 = r8 delegate", "r7 = new io vertx reactivex redis client redis a p i $ 48", "r9 = io vertx reactivex redis client redis a p i r0", "specialinvoke r7 < init > r9 r3", "r10 = io vertx core handler r7", "$ r5 hexists r1 r2 r10", "r11 = io vertx reactivex redis client redis a p i r0", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 74", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 lpop r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 76", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 lpushx r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 77", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 lrange r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 78", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 lrem r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 96", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 pfdebug r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = io vertx reactivex redis client redis a p i r0", "$ r3 = r6 delegate", "r5 = new io vertx reactivex redis client redis a p i $ 98", "r7 = io vertx reactivex redis client redis a p i r0", "specialinvoke r5 < init > r7 r1", "r8 = io vertx core handler r5", "$ r3 pfselftest r8", "r9 = io vertx reactivex redis client redis a p i r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 106", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 pubsub r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 134", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 setrange r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 145", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 srandmember r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 163", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 watch r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r9 = io vertx reactivex redis client redis a p i r0", "$ r6 = r9 delegate", "r8 = new io vertx reactivex redis client redis a p i $ 180", "r10 = io vertx reactivex redis client redis a p i r0", "specialinvoke r8 < init > r10 r4", "r11 = io vertx core handler r8", "$ r6 zcount r1 r2 r3 r11", "r12 = io vertx reactivex redis client redis a p i r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = io vertx reactivex redis client redis a p i r0", "$ r4 = r7 delegate", "r6 = new io vertx reactivex redis client redis a p i $ 195", "r8 = io vertx reactivex redis client redis a p i r0", "specialinvoke r6 < init > r8 r2", "r9 = io vertx core handler r6", "$ r4 zrevrangebylex r1 r9", "r10 = io vertx reactivex redis client redis a p i r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex redis client response r0", "$ r2 = r3 delegate", "r1 = $ r2 to long", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io vertx reactivex redis client response r0", "$ r1 = r2 delegate", "i0 = $ r1 size", "return i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex redis client response r0", "$ r2 = r3 delegate", "r1 = $ r2 to string", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 blpop many r1 i0 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 client list r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 command getkeys r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 del r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 hget r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 hmget r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 incr r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 lastsave r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 llen r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 psubscribe r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 pubsub numpat r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 sdiff r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis redis client r0", "$ r2 = r4 delegate", "$ r2 time r1", "r5 = io vertx reactivex redis redis client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r8 = io vertx reactivex redis redis client r0", "$ r6 = r8 delegate", "$ r6 zrangebyscore r1 r2 r3 r4 r5", "r9 = io vertx reactivex redis redis client r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 zrem many r1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "l1 = @ parameter2", "r2 = @ parameter3", "r3 = @ parameter4", "r6 = io vertx reactivex redis redis client r0", "$ r4 = r6 delegate", "$ r4 zrevrange r1 l0 l1 r2 r3", "r7 = io vertx reactivex redis redis client r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r5 = @ parameter4", "r8 = io vertx reactivex redis redis client r0", "$ r6 = r8 delegate", "$ r6 zrevrangebyscore r1 r2 r3 r4 r5", "r9 = io vertx reactivex redis redis client r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = io vertx reactivex redis redis client r0", "$ r5 = r7 delegate", "$ r5 hscan r1 r2 r3 r4", "r8 = io vertx reactivex redis redis client r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = io vertx reactivex redis redis client r0", "$ r3 = r5 delegate", "$ r3 touch r1 r2", "r6 = io vertx reactivex redis redis client r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex redis sentinel redis sentinel r0", "$ r2 = r4 delegate", "$ r2 flush config r1", "r5 = io vertx reactivex redis sentinel redis sentinel r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = io vertx servicediscovery type mongo data source create record r0 r1 r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = io vertx servicediscovery type redis data source create record r0 r1 r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = io vertx reactivex sqlclient row r0", "$ r2 = r3 delegate", "r1 = $ r2 get column name i0", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex sqlclient row r0", "$ r3 = r4 delegate", "r2 = $ r3 get long r1", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex sqlclient row r0", "$ r3 = r4 delegate", "r2 = $ r3 get double r1", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex sqlclient row r0", "$ r3 = r5 delegate", "$ r4 = $ r3 get buffer r1", "r2 = io vertx reactivex core buffer buffer new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = io vertx reactivex sqlclient sql result r0", "$ r2 = r3 delegate", "r1 = $ r2 column name", "return r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io vertx reactivex sqlclient tuple r0", "$ r2 = r4 delegate", "$ r2 add float r1", "r5 = io vertx reactivex sqlclient tuple r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io vertx reactivex sqlclient tuple r0", "$ r3 = r5 delegate", "$ r4 = $ r3 add integer array r1", "r2 = io vertx reactivex sqlclient tuple new instance $ r4", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = org rnorth visibleassertions visible assertion in quote if not null r1", "r5 = org rnorth visibleassertions visible assertion in quote if not null r2", "$ z0 = org rnorth visibleassertions visible assertion be both null r1 r2", "if $ z0 == 0 goto label1", "org rnorth visibleassertions visible assertion pass r0", "goto label3", "label return", "if $ z0 == 0 goto label1", "label $ d0 = r2 double value", "$ d1 = r1 double value", "$ d2 = $ d0 - $ d1", "$ d3 = java lang math ab $ d2", "$ d4 = r3 double value", "$ b0 = $ d3 cmpg $ d4", "if $ b0 > = 0 goto label2", "label $ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append r5", "$ r8 = $ r7 append \\ `` differs from expect \\ ``", "$ r9 = $ r8 append r4", "$ r10 = $ r9 append \\ `` by more than allow amount \\ ``", "$ r11 = $ r10 append r3", "$ r12 = $ r11 append \\ `` \\ ``", "$ r13 = $ r12 to string", "org rnorth visibleassertions visible assertion fail r0 $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache maven wagon event transfer event support r0", "$ r2 = r3 listener", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache maven wagon event wagon event r0", "r1 timestamp = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven wagon repository repository permission r0", "$ r1 = r2 file mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b3 = l0 cmp 0l", "if $ b3 > 0 goto label1", "return 4096", "if $ b3 > 0 goto label1", "label l1 = l0 409600l", "l2 = l1 * 4096l", "$ b4 = l2 cmp 2147483647l", "if $ b4 < = 0 goto label2", "return 524288", "if $ b4 < = 0 goto label2", "label $ i5 = int l2", "$ i6 = java lang math max 4096 $ i5", "$ i7 = java lang math min 524288 $ i6", "return $ i7"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org eclipse jetty util string util truncate r0 123", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "r6 = org eclipse jetty websocket client client upgrade request r0", "$ r4 = r6 extension", "$ r5 = org eclipse jetty websocket api extension config parse r3", "$ r4 add $ r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new java util array list", "specialinvoke r5 < init >", "r5 add r2", "r6 = org eclipse jetty websocket client client upgrade request r0", "r6 set header r1 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty websocket servlet servlet upgrade request r0", "$ r1 = r2 request", "r3 = javax servlet http http servlet request $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "i1 = @ parameter3", "i2 = @ parameter4", "if i0 < 0 goto label1", "$ i4 = i0 + i2", "$ i3 = lengthof r0", "if $ i4 < = $ i3 goto label2", "label return 0", "if $ i4 < = $ i3 goto label2", "label if i1 < 0 goto label3", "$ i6 = i1 + i2", "$ i5 = lengthof r1", "if $ i6 < = $ i5 goto label4", "label return 0", "if $ i6 < = $ i5 goto label4", "label i11 = 0", "label if i11 > = i2 goto label7", "$ i7 = i11 + i0", "$ b10 = r0 [ $ i7 ]", "$ i8 = i11 + i1", "$ b9 = r1 [ $ i8 ]", "if $ b10 == $ b9 goto label6", "return 0", "if $ b10 == $ b9 goto label6", "label i11 = i11 + 1", "goto label5", "label if i11 > = i2 goto label7", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "i7 = 0", "label if i7 > = i2 goto label3", "$ i3 = i1 + i7", "$ b5 = r0 [ $ i3 ]", "$ b4 = byte i0", "if $ b5 ! = $ b4 goto label2", "$ i6 = i1 + i7", "return $ i6", "if $ b5 ! = $ b4 goto label2", "label i7 = i7 + 1", "goto label1", "label if i7 > = i2 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return \\ `` null\\ ``", "if r0 ! = null goto label1", "label $ z0 = r0 instanceof java lang object [ ]", "if $ z0 == 0 goto label2", "$ r12 = java lang object [ ] r0", "$ r13 = java util array deep to string $ r12", "return $ r13", "if $ z0 == 0 goto label2", "label $ r2 = r0 get class", "$ z1 = $ r2 be array", "if $ z1 == 0 goto label6", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r4 append 91", "i1 = 0", "label $ i0 = java lang reflect array get length r0", "if i1 > = $ i0 goto label5", "if i1 == 0 goto label4", "$ r4 append \\", "label $ r8 = java lang reflect array get r0 i1", "$ r9 = java lang string value of $ r8", "$ r4 append $ r9", "i1 = i1 + 1", "goto label3", "if i1 > = $ i0 goto label5", "label $ r4 append 93", "$ r7 = $ r4 to string", "return $ r7", "if $ z1 == 0 goto label6", "label $ r3 = r0 to string", "return $ r3"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = org wildfly common context context permission parse action r1", "r3 = org wildfly common context context permission r0", "$ r2 = r3 with action bit $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i2 = 2147483647", "r0 = org wildfly common cpu cache info cache level", "i0 = lengthof r0", "i3 = 0", "label if i3 > = i0 goto label3", "r1 = r0 [ i3 ]", "$ r2 = r1 get cache type", "$ z0 = $ r2 be data", "if $ z0 == 0 goto label2", "i1 = r1 get cache line size", "if i1 == 0 goto label2", "if i1 > = i2 goto label2", "i2 = i1", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label3", "label if i2 ! = 2147483647 goto label4", "$ i4 = 0", "goto label5", "label return $ i4", "label if i2 ! = 2147483647 goto label4", "label $ i4 = i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org wildfly common cpu cache level info r0", "$ i0 = r1 cache line size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org wildfly common expression expression r0", "$ r1 = r2 reference string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org wildfly common flag flag r0", "$ z0 = r3 contain r1", "if $ z0 ! = 0 goto label1", "r4 = org wildfly common flag flag r0", "$ z1 = r4 contain r2", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r4 = new java io byte array output stream", "specialinvoke r4 < init >", "r5 = org wildfly common iteration byte iterator r0", "$ r2 = r5 drain to r4", "$ r3 = $ r2 to byte array", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = lengthof r1", "if $ i0 == 0 goto label1", "r5 = org wildfly common iteration code point iterator r0", "$ z0 = r5 have next", "if $ z0 ! = 0 goto label2", "label $ r3 = org wildfly common iteration code point iterator empty", "return $ r3", "if $ z0 ! = 0 goto label2", "label r4 = new org wildfly common iteration delimit code point iterator", "r6 = org wildfly common iteration code point iterator r0", "specialinvoke r4 < init > r6 r1", "r7 = org wildfly common iteration code point iterator r4", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = org wildfly common iteration code point iterator of utf8 byte r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = code point iterator $ lambda_skip cr lf_0__1 bootstrap $", "r3 = org wildfly common iteration code point iterator r0", "$ r2 = r3 skip $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org wildfly common lock spin lock r0", "r1 = r5 owner", "$ r2 = java lang thread current thread", "if r1 ! = $ r2 goto label1", "r6 = org wildfly common lock spin lock r0", "$ i1 = r6 level", "$ i2 = $ i1 + 1", "r7 = org wildfly common lock spin lock r0", "r7 level = $ i2", "return 1", "if r1 ! = $ r2 goto label1", "label if r1 ! = null goto label2", "$ r3 = org wildfly common lock j d k specific unsafe", "$ l0 = org wildfly common lock spin lock owner offset", "$ r4 = java lang thread current thread", "$ z0 = $ r3 compare and swap object r0 $ l0 null $ r4", "if $ z0 == 0 goto label2", "r8 = org wildfly common lock spin lock r0", "r8 level = 1", "if $ z0 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["i0 = @ parameter0", "org wildfly common assert check minimum parameter \\ `` value\\", "org wildfly common assert check maximum parameter \\ `` value\\", "if i0 > 1 goto label1", "$ i3 = i0", "goto label2", "label return $ i3", "if i0 > 1 goto label1", "label $ i1 = i0 - 1", "$ i2 = java lang integer high one bit $ i1", "$ i3 = $ i2 < < 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org wildfly common net cidr address r0", "$ i0 = r1 netmask bit", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org wildfly common net inet parse inet6 address to byte r0", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r3 = r0 get user info", "if r3 ! = null goto label2", "$ r1 = \\ `` domain\\ ``", "$ r2 = r0 get scheme", "$ z0 = $ r1 equal $ r2", "if $ z0 == 0 goto label2", "r4 = r0 get scheme specific part", "i0 = r4 last index of 64", "if i0 ! = -1 goto label1", "return null", "if i0 ! = -1 goto label1", "label r3 = r4 substring 0 i0", "label if r3 == null goto label3", "i1 = r3 index of 58", "if i1 == -1 goto label3", "r3 = r3 substring 0 i1", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r35 = new java lang string builder", "specialinvoke r35 < init >", "$ r3 = r35 append \\ `` map length = \\ ``", "r36 = org wildfly common rpc identity int map r0", "$ r4 = r36 key", "$ i1 = lengthof $ r4", "$ r5 = $ r3 append $ i1", "$ r6 = $ r5 append \\", "r37 = org wildfly common rpc identity int map r0", "$ i2 = r37 count", "$ r7 = $ r6 append $ i2", "$ r8 = $ r7 append \\", "r38 = org wildfly common rpc identity int map r0", "$ i3 = r38 resize count", "$ r9 = $ r8 append $ i3", "$ r9 append 10", "i8 = 0", "label r39 = org wildfly common rpc identity int map r0", "$ r11 = r39 key", "$ i4 = lengthof $ r11", "if i8 > = $ i4 goto label4", "$ r13 = r35 append 91", "$ r14 = $ r13 append i8", "$ r14 append \\ `` ] = \\ ``", "r40 = org wildfly common rpc identity int map r0", "$ r16 = r40 key", "$ r17 = $ r16 [ i8 ]", "if $ r17 == null goto label2", "r41 = org wildfly common rpc identity int map r0", "$ r20 = r41 key", "$ r21 = $ r20 [ i8 ]", "i0 = java lang system identity hash code $ r21", "$ r22 = r35 append \\ `` { \\ ``", "r42 = org wildfly common rpc identity int map r0", "$ r23 = r42 key", "$ r24 = $ r23 [ i8 ]", "$ r25 = $ r22 append $ r24", "$ r26 = $ r25 append \\ `` hash \\ ``", "$ r27 = $ r26 append i0", "$ r28 = $ r27 append \\", "r43 = org wildfly common rpc identity int map r0", "$ r29 = r43 key", "$ i5 = lengthof $ r29", "$ i6 = i0 % $ i5", "$ r30 = $ r28 append $ i6", "$ r31 = $ r30 append \\ `` = > \\ ``", "r44 = org wildfly common rpc identity int map r0", "$ r32 = r44 value", "$ i7 = $ r32 [ i8 ]", "$ r33 = $ r31 append $ i7", "$ r33 append \\ `` } \\ ``", "goto label3", "label r35 append 10", "i8 = i8 + 1", "goto label1", "if $ r17 == null goto label2", "label r35 append \\ `` blank \\ ``", "if i8 > = $ i4 goto label4", "label $ r12 = r35 to string", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org wildfly common assert check not null param \\ `` output\\", "r5 = new org wildfly common rpc identity int map", "specialinvoke r5 < init >", "r6 = new java util hash map", "specialinvoke r6 < init >", "r7 = org wildfly common rpc remote exception cause r0", "specialinvoke r7 write to stream r1 r5 r6 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com ctc wstx dtd d t d validator base r0", "r1 m norm attrs = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "r3 = com ctc wstx dtd d t d validator base r0", "i0 = r3 m attr count", "label if i1 > = i0 goto label3", "r4 = com ctc wstx dtd d t d validator base r0", "$ r1 = r4 m attr spec", "$ r2 = $ r1 [ i1 ]", "$ z0 = $ r2 type be notation", "if $ z0 == 0 goto label2", "return i1", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com ctc wstx dtd token model null_token", "if r0 == $ r2 goto label1", "i0 = r1 size", "r3 = com ctc wstx dtd token model r0", "r3 m token index = i0", "r1 add r0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = com ctc wstx io wstx input source r0", "r2 m scope id = i0", "r3 = com ctc wstx io wstx input source r0", "r3 do init input location r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = com ctc wstx sr attribute collector r0", "$ i0 = r3 m n count", "if $ i0 < = 0 goto label1", "r4 = com ctc wstx sr attribute collector r0", "$ r2 = r4 m namespace builder", "$ r2 reset", "r5 = com ctc wstx sr attribute collector r0", "r5 m default ns declare = 0", "r6 = com ctc wstx sr attribute collector r0", "r6 m n count = 0", "label r7 = com ctc wstx sr attribute collector r0", "$ i1 = r7 m attr count", "if $ i1 < = 0 goto label2", "r8 = com ctc wstx sr attribute collector r0", "$ r1 = r8 m value builder", "$ r1 reset", "r9 = com ctc wstx sr attribute collector r0", "r9 m attr count = 0", "r10 = com ctc wstx sr attribute collector r0", "$ i2 = r10 m xml id attr index", "if $ i2 < 0 goto label2", "r11 = com ctc wstx sr attribute collector r0", "r11 m xml id attr index = -1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 create validator r0", "r4 = com ctc wstx sr input element stack r0", "$ r3 = r4 add validator $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com ctc wstx util element id map r0", "$ r1 = r2 m head", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io restassured path xml xml path r0", "r2 = r5 get r1", "r6 = io restassured path xml xml path r0", "$ r3 = specialinvoke r6 convert object to r2 class \\ `` ljava lang float \\ ``", "$ r4 = java lang float $ r3", "$ f0 = $ r4 float value", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io restassured path xml xml path r0", "r2 = r5 get r1", "r6 = io restassured path xml xml path r0", "$ r3 = specialinvoke r6 convert object to r2 class \\ `` ljava lang long \\ ``", "$ r4 = java lang long $ r3", "$ l0 = $ r4 long value", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache xmlbeans g duration builder r0", "r1 _d = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache xmlbeans g duration builder r0", "$ i0 = r1 _cy", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache xmlbeans impl common name util be java common class name r0", "if $ z0 == 0 goto label1", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` x\\ ``", "$ r3 = $ r2 append r0", "$ r4 = $ r3 to string", "return $ r4", "if $ z0 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 65536 goto label1", "$ r0 = org apache xmlbeans impl common x m l char char", "$ b1 = $ r0 [ i0 ]", "$ b2 = $ b1 & 8", "if $ b2 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b2 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r24 = org apache xmlbeans impl config name set r0", "$ z0 = r24 _is finite", "if $ z0 == 0 goto label2", "$ z4 = r1 _is finite", "if $ z4 == 0 goto label1", "r21 = new java util hash set", "specialinvoke r21 < init >", "r25 = org apache xmlbeans impl config name set r0", "$ r15 = r25 _finite set", "r21 add all $ r15", "$ r16 = r1 _finite set", "r21 add all $ r16", "$ r17 = org apache xmlbeans impl config name set new instance 1 r21", "return $ r17", "if $ z4 == 0 goto label1", "label r22 = new java util hash set", "specialinvoke r22 < init >", "$ r11 = r1 _finite set", "r22 add all $ r11", "r26 = org apache xmlbeans impl config name set r0", "$ r12 = r26 _finite set", "r22 remove all $ r12", "$ r13 = org apache xmlbeans impl config name set new instance 0 r22", "return $ r13", "if $ z0 == 0 goto label2", "label $ z1 = r1 _is finite", "if $ z1 == 0 goto label3", "r23 = new java util hash set", "specialinvoke r23 < init >", "r27 = org apache xmlbeans impl config name set r0", "$ r7 = r27 _finite set", "r23 add all $ r7", "$ r8 = r1 _finite set", "r23 remove all $ r8", "$ r9 = org apache xmlbeans impl config name set new instance 0 r23", "return $ r9", "if $ z1 == 0 goto label3", "label r28 = org apache xmlbeans impl config name set r0", "$ r3 = r28 _finite set", "$ r2 = r1 _finite set", "$ r4 = org apache xmlbeans impl config name set intersect finite set $ r3 $ r2", "$ r5 = org apache xmlbeans impl config name set new instance 0 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r2 = org apache xmlbeans impl soap mime header r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = new java util vector", "specialinvoke r12 < init >", "i3 = 0", "label r13 = org apache xmlbeans impl soap mime header r0", "$ r5 = r13 header", "$ i0 = $ r5 size", "if i3 > = $ i0 goto label3", "r14 = org apache xmlbeans impl soap mime header r0", "$ r6 = r14 header", "$ r7 = $ r6 element at i3", "r3 = org apache xmlbeans impl soap mime header $ r7", "$ r8 = r3 get name", "$ z0 = $ r8 equal ignore case r1", "if $ z0 == 0 goto label2", "$ r9 = r3 get value", "if $ r9 == null goto label2", "$ r10 = r3 get value", "r12 add element $ r10", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label3", "label $ i1 = r12 size", "if $ i1 ! = 0 goto label4", "return null", "if $ i1 ! = 0 goto label4", "label $ i2 = r12 size", "r11 = newarray java lang string [ $ i2 ]", "r12 copy into r11", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache xmlbeans impl soap s o a p part r0", "r2 set mime header \\ `` content- location\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = org apache xmlbeans impl store xobj r0", "$ r1 = r11 _first child", "if $ r1 ! = null goto label1", "r12 = org apache xmlbeans impl store xobj r0", "$ r7 = r12 _src value", "if $ r7 ! = null goto label1", "r13 = org apache xmlbeans impl store xobj r0", "$ r8 = r13 _char nod value", "if $ r8 ! = null goto label1", "return 1", "if $ r8 ! = null goto label1", "label r14 = org apache xmlbeans impl store xobj r0", "$ r9 = r14 _first child", "if $ r9 == null goto label3", "r15 = org apache xmlbeans impl store xobj r0", "$ r2 = r15 _first child", "$ z0 = $ r2 be attr", "if $ z0 ! = 0 goto label3", "r16 = org apache xmlbeans impl store xobj r0", "$ r3 = r16 _src value", "if $ r3 ! = null goto label3", "r17 = org apache xmlbeans impl store xobj r0", "$ r4 = r17 _char nod value", "if $ r4 ! = null goto label3", "$ z1 = org apache xmlbeans impl store xobj $ assertion disable", "if $ z1 ! = 0 goto label2", "r18 = org apache xmlbeans impl store xobj r0", "$ r5 = r18 _first child", "$ z2 = $ r5 instanceof org apache xmlbeans impl store xobj $ node xobj", "if $ z2 ! = 0 goto label2", "r10 = new java lang assertion error", "specialinvoke r10 < init > \\ `` wrong node type\\ ``", "throw r10", "if $ z2 ! = 0 goto label2", "label return 1", "if $ r4 ! = null goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache xmlbeans impl tool base schema resource manager $ schema resource r1", "r4 = r3 get namespace", "if r4 == null goto label1", "r12 = org apache xmlbeans impl tool base schema resource manager r0", "$ r7 = r12 _resource for namespace", "$ r8 = $ r7 get r4", "if $ r8 ! = r3 goto label1", "r13 = org apache xmlbeans impl tool base schema resource manager r0", "$ r9 = r13 _resource for namespace", "$ r9 remove r4", "label r14 = org apache xmlbeans impl tool base schema resource manager r0", "$ r11 = r14 _resource for namespace", "$ z0 = $ r11 contain key r2", "if $ z0 ! = 0 goto label2", "r15 = org apache xmlbeans impl tool base schema resource manager r0", "$ r5 = r15 _resource for namespace", "$ r5 put r2 r3", "label r3 set namespace r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = new java io file", "r11 = org apache xmlbeans impl tool schema resource manager r0", "$ r7 = r11 _directory", "specialinvoke r9 < init > $ r7 r2", "r4 = r9 get parent file", "$ z0 = r4 exist", "if $ z0 ! = 0 goto label1", "r4 mkdirs", "label r10 = new java io file output stream", "specialinvoke r10 < init > r9", "org apache xmlbeans impl common i o util copy completely r1 r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache xmlbeans impl tool x m l bean r0", "r1 verbose = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache xmlbeans impl tool x m l bean r0", "r2 fork executable = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache xmlbeans impl tool extension", "specialinvoke r4 < init >", "r5 = org apache xmlbeans impl tool x m l bean r0", "$ r3 = r5 extension", "$ r3 add r4", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r1 = new java lang string", "$ r2 = org apache xmlbeans impl util hex bin encode r0", "specialinvoke $ r1 < init > $ r2", "return $ r1"], "adj": [[1], [2], [], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get bytes", "$ r2 = org apache xmlbeans impl util hex bin decode $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache xmlbeans q name set builder r0", "$ z0 = r2 _inverted", "if $ z0 == 0 goto label1", "r3 = org apache xmlbeans q name set builder r0", "specialinvoke r3 add namespace impl r1", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r4 = org apache xmlbeans q name set builder r0", "specialinvoke r4 remove namespace impl r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache xmlbeans q name set builder r0", "$ z0 = r10 _inverted", "if $ z0 == 0 goto label1", "$ r6 = r1 include u r be", "$ r7 = r1 exclude u r be", "$ r8 = r1 include q name in excluded u r be", "$ r9 = r1 exclude q name in included u r be", "r11 = org apache xmlbeans q name set builder r0", "specialinvoke r11 add all impl $ r6 $ r7 $ r8 $ r9", "goto label2", "label return", "if $ z0 == 0 goto label1", "label $ r2 = r1 include u r be", "$ r3 = r1 exclude u r be", "$ r4 = r1 include q name in excluded u r be", "$ r5 = r1 exclude q name in included u r be", "r12 = org apache xmlbeans q name set builder r0", "specialinvoke r12 remove all impl $ r2 $ r3 $ r4 $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = org apache xmlbeans schema type loader exception r0", "$ i0 = r1 _code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r3 = @ parameter0", "r4 = org apache xmlbeans impl common xml whitespace collapse r3 3", "$ z0 = r4 start with \\ `` [ \\ ``", "if $ z0 == 0 goto label1", "$ z1 = r4 end with \\ `` ] \\ ``", "if $ z1 ! = 0 goto label2", "label $ r0 = new java lang illegal argument exception", "specialinvoke $ r0 < init > \\ `` misformed soap 1 1 index must be contain in brace [ ] \\ ``", "throw $ r0", "if $ z1 ! = 0 goto label2", "label $ i0 = r4 length", "$ i1 = $ i0 - 1", "$ r1 = r4 substring 1 $ i1", "$ r2 = org apache xmlbeans soap s o a p array type internal parse comma int string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r4 = org apache xmlbeans soap s o a p array type r0", "$ r2 = r4 _ranks", "$ i0 = lengthof $ r2", "r1 = newarray int [ $ i0 ]", "r5 = org apache xmlbeans soap s o a p array type r0", "$ r3 = r5 _ranks", "$ i1 = lengthof r1", "java lang system arraycopy $ r3 0 r1 0 $ i1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = org apache xmlbeans soap s o a p array type r0", "$ r1 = r3 _dimensions", "r4 = org apache xmlbeans soap s o a p array type r0", "$ r2 = r4 soap11 dimension string $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache xmlbeans string enum abstract base r0", "$ i0 = r1 _int", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache xmlbeans xml document property message_digest", "r4 = org apache xmlbeans xml document property r0", "r4 put $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache xmlbeans xml option r0", "$ r1 = specialinvoke r2 set \\ `` save_pretty_print_offset\\", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache xmlbeans xml option r0", "$ r1 = specialinvoke r2 set \\ `` save_aggressive_namespaces\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache xmlbeans xml option r0", "$ r2 = r4 _map", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r11 = \\ `` \\ ``", "r14 = org xmlresolver catalog r0", "$ r3 = r14 catalog list", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r4 = r1 next", "r2 = org xmlresolver catalog source $ r4", "$ i0 = r11 length", "if $ i0 < = 0 goto label2", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r9 = r12 append r11", "$ r10 = $ r9 append \\ `` \\ ``", "r11 = $ r10 to string", "label r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r6 = r13 append r11", "$ r7 = $ r6 append r2", "r11 = $ r7 to string", "goto label1", "if $ z0 == 0 goto label3", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "$ r1 = org xmlresolver catalog logger", "$ r1 trace \\ `` lookup document \\ ``", "r4 = new org xmlresolver catalog $ 5", "r5 = org xmlresolver catalog r0", "specialinvoke r4 < init > r5", "r6 = org xmlresolver catalog r0", "r7 = org xmlresolver catalog $ lookup function r4", "$ r3 = specialinvoke r6 lookup in doc only r7", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org xmlresolver catalog result r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org xmlresolver resource r0", "$ r1 = r2 stream", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org xmlresolver resource r0", "$ r1 = r2 content type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = org xmlresolver tool resolve x m l filter r0", "r4 process x m l catalog p i = 0", "specialinvoke r0 notation decl r1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org xmlunit builder diff builder r0", "r1 ignore whitespace = 1", "r2 = org xmlunit builder diff builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org xmlunit builder diff builder check_for_identical", "r2 = org xmlunit builder diff builder r0", "r2 comparison result to check = $ r1", "r3 = org xmlunit builder diff builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r6 = r1 get control detail", "r2 = $ r6 get value", "$ r7 = r1 get test detail", "r3 = $ r7 get value", "if r2 ! = null goto label2", "if r3 ! = null goto label1", "$ z2 = 1", "goto label3", "label if $ z2 == 0 goto label4", "$ r14 = org xmlunit diff comparison result equal", "goto label5", "label r19 = org xmlunit diff abstract difference engine r0", "$ r8 = r19 get difference evaluator", "r5 = $ r8 evaluate r1 $ r14", "r20 = org xmlunit diff abstract difference engine r0", "$ r9 = r20 listener", "$ r9 fire comparison perform r1 r5", "$ r10 = org xmlunit diff comparison result equal", "if r5 == $ r10 goto label6", "r21 = org xmlunit diff abstract difference engine r0", "$ r11 = r21 get comparison controller", "r16 = new org xmlunit diff difference", "specialinvoke r16 < init > r1 r5", "$ z1 = $ r11 stop diffing r16", "if $ z1 == 0 goto label6", "r17 = new org xmlunit diff abstract difference engine $ finish comparison state", "$ r15 = r17", "r22 = org xmlunit diff abstract difference engine r0", "specialinvoke r17 < init > r22 r5", "goto label7", "label r24 = org xmlunit diff abstract difference engine $ comparison state $ r15", "return r24", "if $ z1 == 0 goto label6", "label r18 = new org xmlunit diff abstract difference engine $ ongoing comparison state", "$ r15 = r18", "r23 = org xmlunit diff abstract difference engine r0", "specialinvoke r18 < init > r23 r5", "label if $ z2 == 0 goto label4", "label $ r14 = org xmlunit diff comparison result different", "if r3 ! = null goto label1", "label $ z2 = 0", "if r2 ! = null goto label2", "label $ z2 = r2 equal r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org xmlunit diff comparison listener support r0", "$ r3 = r7 comp listener", "org xmlunit diff comparison listener support fire r1 r2 $ r3", "$ r4 = org xmlunit diff comparison result equal", "if r2 ! = $ r4 goto label1", "r8 = org xmlunit diff comparison listener support r0", "$ r6 = r8 match listener", "org xmlunit diff comparison listener support fire r1 r2 $ r6", "goto label2", "label return", "if r2 ! = $ r4 goto label1", "label r9 = org xmlunit diff comparison listener support r0", "$ r5 = r9 diff listener", "org xmlunit diff comparison listener support fire r1 r2 $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` selector must not be null\\ ``", "throw r6", "if r0 ! = null goto label1", "label r1 = java util array a list r0", "r7 = new org xmlunit util be null predicate", "specialinvoke r7 < init >", "r10 = org xmlunit util predicate r7", "$ z0 = org xmlunit util linqy any r1 r10", "if $ z0 == 0 goto label2", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` selector must not contain null values\\ ``", "throw r8", "if $ z0 == 0 goto label2", "label r9 = new org xmlunit diff element selector $ 9", "specialinvoke r9 < init > r1", "r11 = org xmlunit diff element selector r9", "return r11"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org xmlunit util convert try extract node from d o m source r0", "if r1 == null goto label1", "$ r5 = r1", "goto label2", "label return $ r5", "if r1 == null goto label1", "label $ r2 = org xmlunit util document builder factory configurer default", "$ r3 = javax xml parser document builder factory new instance", "$ r4 = $ r2 configure $ r3", "$ r5 = org xmlunit util convert to document r0 $ r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org xmlunit validation j a x p validator r0", "r2 schema = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org xmlunit validation parse validator r0", "r2 schema u r i = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org xmlunit validation validation problem r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get constructor", "i3 = 0", "label $ i0 = lengthof r2", "if i3 > = $ i0 goto label3", "r3 = r2 [ i3 ]", "$ r4 = r3 get parameter type", "$ i1 = lengthof $ r4", "if $ i1 ! = 0 goto label2", "$ i2 = r3 get modifier", "$ z0 = java lang reflect modifier be public $ i2", "if $ z0 == 0 goto label2", "return r3", "if $ z0 == 0 goto label2", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [], [18], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 1 goto label1", "$ r0 = new java lang illegal argument exception", "specialinvoke $ r0 < init > \\ `` java version range start with at least 1 \\ ``", "throw $ r0", "if i0 > = 1 goto label1", "label $ f1 = com thoughtworks xstream core jvm major java version", "$ b1 = $ f1 cmpg 9 0f", "if $ b1 > = 0 goto label2", "$ f3 = float i0", "$ f4 = $ f3 * 0 1f", "$ f5 = 1 0f + $ f4", "goto label3", "label $ f2 = com thoughtworks xstream core jvm major java version", "$ b2 = $ f2 cmpl $ f5", "if $ b2 < 0 goto label4", "$ z0 = 1", "goto label5", "label return $ z0", "if $ b2 < 0 goto label4", "label $ z0 = 0", "if $ b1 > = 0 goto label2", "label $ f5 = float i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["$ z0 = com thoughtworks xstream core jvm be s q l available", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = com thoughtworks xstream core util primitive representing_char", "$ r3 = $ r2 get r0", "r1 = java lang character $ r3", "if r1 ! = null goto label1", "$ c0 = 0", "goto label2", "label return $ c0", "if r1 ! = null goto label1", "label $ c0 = r1 char value"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r7 = new java io output stream writer", "specialinvoke r7 < init > r1 \\ `` utf-8\\ ``", "r9 = com thoughtworks xstream io json json hierarchical stream driver r0", "$ r4 = r9 create writer r7", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r2 = new org jdom2 input s a x builder", "specialinvoke $ r2 < init >", "$ r2 set feature \\ `` http apache org xml feature disallow-doctype-decl\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com thoughtworks xstream mapper attribute mapper r0", "$ r2 = r3 type set", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = new java io string writer", "specialinvoke r11 < init >", "label r13 = com thoughtworks xstream x streamer r0", "r13 to x m l r1 r2 r11", "label goto label5", "label $ r5 = r11 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal jsonb config property r0", "$ r1 = r2 property order", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse yasson internal jsonb config property r0", "$ z0 = r1 zero time default", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal jsonb context r0", "$ r1 = r2 component matcher", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model customization class customization builder r0", "$ r1 = r2 date formatter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model customization customization builder r0", "$ r1 = r2 property order", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model customization property customization builder r0", "$ r1 = r2 deserialize number formatter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model customization property customization builder r0", "$ r1 = r2 serialize date formatter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model customization property customization builder r0", "$ r1 = r2 deserialize date formatter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse yasson internal model jsonb property info r0", "r2 runtime type = r1", "r3 = org eclipse yasson internal model jsonb property info r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model property r0", "$ r1 = r2 declare class element", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model property r0", "$ r1 = r2 setter element", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model property model r0", "$ r1 = r2 read name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal model property value propagation r0", "$ r1 = r2 field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java lang reflect parameterized type", "if $ z0 == 0 goto label4", "$ r3 = java lang reflect parameterized type r0", "r1 = $ r3 get actual type argument", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r1 [ i1 ]", "$ z2 = org eclipse yasson internal reflection utils be resolve type r2", "if $ z2 ! = 0 goto label2", "return 0", "if $ z2 ! = 0 goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return 1", "if $ z0 == 0 goto label4", "label $ z1 = r0 instanceof java lang class", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal serializer abstract serializer builder r0", "$ r1 = r2 class model", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse yasson internal serializer abstract value type deserializer r0", "$ r1 = r2 customization", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r3 = org eclipse yasson yasson config r0", "r3 set property \\ `` jsonb fail-on-unknown-properties\\", "r4 = org eclipse yasson yasson config r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org elasticsearch search aggregation matrix stats matrix stats result r0", "$ r2 = r8 result", "$ r3 = $ r2 count", "$ z0 = $ r3 contain key r1", "if $ z0 ! = 0 goto label1", "return 0l", "if $ z0 ! = 0 goto label1", "label r9 = org elasticsearch search aggregation matrix stats matrix stats result r0", "$ r4 = r9 result", "$ r5 = $ r4 count", "$ r6 = $ r5 get r1", "$ r7 = java lang long $ r6", "$ l0 = $ r7 long value", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = new java lang string builder", "specialinvoke r7 < init >", "r8 = io airlift command command group usage r0", "r8 usage r1 r2 r7", "$ r5 = java lang system out", "$ r6 = r7 to string", "$ r5 println $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r8 = r3 append \\ `` name\\ ``", "$ r8 newline", "$ r10 = r3 new indented printer 8", "$ r11 = r1 get name", "$ r12 = $ r10 append $ r11", "$ r13 = r2 get name", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` -\\ ``", "$ r16 = r2 get description", "$ r17 = $ r15 append $ r16", "$ r18 = $ r17 newline", "$ r18 newline", "$ r20 = r3 append \\ `` synopsis\\ ``", "$ r20 newline", "$ r22 = r3 new indented printer 8", "r4 = $ r22 new printer with hang indent 8", "$ r23 = r2 get command", "r5 = com google common collect list new array list $ r23", "r114 = io airlift command command group usage r0", "$ r24 = r114 command comparator", "java util collection sort r5 $ r24", "$ r25 = r2 get default command", "if $ r25 == null goto label02", "r89 = r2 get default command", "if r1 == null goto label01", "$ r84 = r1 get name", "r4 append $ r84", "r115 = io airlift command command group usage r0", "$ z6 = r115 hide global option", "if $ z6 ! = 0 goto label01", "$ r86 = r89 get global option", "$ r87 = io airlift command usage helper to synopsis usage $ r86", "r4 append word $ r87", "label $ r90 = r2 get name", "$ r91 = r4 append $ r90", "$ r92 = r89 get group option", "$ r93 = io airlift command usage helper to synopsis usage $ r92", "$ r91 append word $ r93", "r4 newline", "label r94 = r5 iterator", "label $ z7 = r94 have next", "if $ z7 == 0 goto label05", "$ r73 = r94 next", "r95 = io airlift command model command metadata $ r73", "if r1 == null goto label04", "$ r77 = r1 get name", "r4 append $ r77", "r116 = io airlift command command group usage r0", "$ z5 = r116 hide global option", "if $ z5 ! = 0 goto label04", "$ r79 = r95 get global option", "$ r80 = io airlift command usage helper to synopsis usage $ r79", "r4 append word $ r80", "label $ r96 = r2 get name", "$ r97 = r4 append $ r96", "$ r98 = r95 get group option", "$ r99 = io airlift command usage helper to synopsis usage $ r98", "$ r97 append word $ r99", "$ r100 = r95 get name", "$ r101 = r4 append $ r100", "$ r102 = r95 get command option", "$ r103 = io airlift command usage helper to synopsis usage $ r102", "$ r101 append word $ r103", "if $ z7 == 0 goto label05", "label r4 newline", "r104 = com google common collect list new array list", "$ r27 = r2 get option", "r104 add all $ r27", "if r1 == null goto label06", "r117 = io airlift command command group usage r0", "$ z3 = r117 hide global option", "if $ z3 ! = 0 goto label06", "$ r72 = r1 get option", "r104 add all $ r72", "label $ i1 = r104 size", "if $ i1 < = 0 goto label09", "r118 = io airlift command command group usage r0", "$ r60 = r118 option comparator", "if $ r60 == null goto label07", "r119 = io airlift command command group usage r0", "$ r71 = r119 option comparator", "java util collection sort r104 $ r71", "label $ r61 = r3 append \\ `` options\\ ``", "$ r61 newline", "r105 = r104 iterator", "label $ z8 = r105 have next", "if $ z8 == 0 goto label09", "$ r63 = r105 next", "r106 = io airlift command model option metadata $ r63", "r107 = r3 new indented printer 8", "$ r64 = io airlift command usage helper to description r106", "$ r65 = r107 append $ r64", "$ r65 newline", "r108 = r107 new indented printer 4", "$ r67 = r106 get description", "$ r68 = r108 append $ r67", "$ r68 newline", "r108 newline", "goto label08", "if $ z8 == 0 goto label09", "label $ i0 = r5 size", "if $ i0 > 0 goto label10", "$ r59 = r2 get default command", "if $ r59 == null goto label16", "label $ r28 = r3 append \\ `` commands\\ ``", "$ r28 newline", "r109 = r3 new indented printer 8", "$ r30 = r2 get default command", "if $ r30 == null goto label11", "$ r51 = r2 get default command", "$ r52 = $ r51 get description", "if $ r52 == null goto label11", "$ r53 = r109 append \\ `` with no argument \\ ``", "$ r54 = r2 get default command", "$ r55 = $ r54 get description", "$ r56 = $ r53 append $ r55", "$ r57 = $ r56 newline", "$ r57 newline", "label $ r110 = r2 get command", "r111 = $ r110 iterator", "label $ z9 = r111 have next", "if $ z9 == 0 goto label16", "$ r31 = r111 next", "r112 = io airlift command model command metadata $ r31", "$ r32 = r112 get name", "$ r33 = r109 append $ r32", "$ r33 newline", "r113 = r109 new indented printer 4", "$ r35 = r112 get description", "$ r36 = r113 append $ r35", "$ r37 = $ r36 newline", "$ r37 newline", "$ r39 = r112 get command option", "r6 = $ r39 iterator", "label $ z1 = r6 have next", "if $ z1 == 0 goto label15", "$ r40 = r6 next", "r7 = io airlift command model option metadata $ r40", "$ z2 = r7 be hidden", "if $ z2 ! = 0 goto label14", "$ r41 = r7 get description", "if $ r41 == null goto label14", "$ r42 = r113 append \\ `` with\\ ``", "$ r43 = r7 get option", "$ r44 = io airlift command command group usage long $ r43", "$ r45 = $ r42 append $ r44", "$ r46 = $ r45 append \\ `` option \\ ``", "$ r47 = r7 get description", "$ r48 = $ r46 append $ r47", "$ r49 = $ r48 newline", "$ r49 newline", "label goto label13", "if $ z1 == 0 goto label15", "label goto label12", "if $ z9 == 0 goto label16", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], [142], [143], [144], [145], [146], [147], [148], [149], [150], [151], [152], [153], [154], [155], [156], [157], [158], [159], []]}
{"nodes": ["r0 = @ this", "r2 = org antlr analysis dfa r0", "$ r1 = r2 state", "$ i0 = $ r1 size", "$ i1 = $ i0 - 1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org antlr analysis dfa r0", "$ r1 = r2 unreachable alt", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = org antlr analysis d f a state r0", "$ r4 = r7 transition", "r6 = new org antlr analysis transition", "r8 = org antlr analysis state r1", "specialinvoke r6 < init > r2 r8", "$ r4 add r6", "r9 = org antlr analysis d f a state r0", "$ r5 = r9 transition", "$ i0 = $ r5 size", "$ i1 = $ i0 - 1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "$ r3 = r0 nfa configuration", "i1 = $ r3 size", "i4 = 0", "label if i4 > = i1 goto label4", "$ r4 = r0 nfa configuration", "$ r5 = $ r4 get i4", "r2 = org antlr analysis n f a configuration $ r5", "$ i2 = r2 alt", "if $ i2 == i0 goto label3", "if r1 == null goto label2", "$ i3 = r2 alt", "$ r6 = org antlr misc utils integer $ i3", "$ z0 = r1 contain $ r6", "if $ z0 == 0 goto label3", "label r2 resolve = 1", "label i4 = i4 + 1", "goto label1", "label if i4 > = i1 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r5 = org antlr misc interval set r0", "$ z0 = r5 be nil", "if $ z0 == 0 goto label1", "return -7", "if $ z0 == 0 goto label1", "label r6 = org antlr misc interval set r0", "$ r2 = r6 interval", "i0 = $ r2 size", "i3 = 0", "label if i3 > = i0 goto label6", "r7 = org antlr misc interval set r0", "$ r3 = r7 interval", "$ r4 = $ r3 get i3", "r1 = org antlr misc interval $ r4", "i1 = r1 a", "i2 = r1 b", "i4 = i1", "label if i4 > i2 goto label5", "if i4 < 0 goto label4", "return i4", "if i4 < 0 goto label4", "label i4 = i4 + 1", "goto label3", "label if i4 > i2 goto label5", "label i3 = i3 + 1", "goto label2", "label if i3 > = i0 goto label6", "label return -7"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org antlr misc multi map r0", "$ r3 = r8 get r1", "r6 = java util list $ r3", "if r6 ! = null goto label1", "r7 = new java util array list", "specialinvoke r7 < init >", "r6 = r7", "specialinvoke r0 put r1 r7", "label r6 add r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org antlr misc order hash set r0", "$ r1 = r2 element", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org antlr tool error manager thread to listener map", "$ r2 = java lang thread current thread", "$ r1 put $ r2 r0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "label r8 = org antlr tool grammar serializer foo r0", "$ r4 = r8 out", "r9 = org antlr tool grammar serializer foo r0", "$ r3 = r9 g", "$ r5 = $ r3 get rule", "$ i1 = $ r5 size", "$ r4 write short $ i1", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r6 = org antlr tool n f a factory r0", "r1 = r6 new state", "r7 = org antlr tool n f a factory r0", "r2 = r7 new state", "r8 = org antlr tool n f a factory r0", "specialinvoke r8 transition between state r1 r2 -5", "r5 = new org antlr analysis state cluster", "specialinvoke r5 < init > r1 r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org antlr tool r0", "r1 force relative output = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org antlr tool r0", "$ z0 = r1 depend", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ i0 = org antlr tool error manager get num error", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org antlr tool r0", "r1 generate_ d f a_dot = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org antlr tool r0", "r1 depend = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org antlr runtime base recognizer r0", "$ r1 = r2 state", "$ z0 = $ r1 fail", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r14 = org antlr runtime base recognizer r0", "$ r2 = r14 state", "$ r3 = $ r2 rule memo", "$ r4 = $ r3 [ i0 ]", "if $ r4 ! = null goto label1", "r15 = org antlr runtime base recognizer r0", "$ r10 = r15 state", "$ r12 = $ r10 rule memo", "r13 = new java util hash map", "specialinvoke r13 < init >", "$ r12 [ i0 ] = r13", "label r16 = org antlr runtime base recognizer r0", "$ r5 = r16 state", "$ r6 = $ r5 rule memo", "$ r7 = $ r6 [ i0 ]", "$ r8 = java lang integer value of i1", "$ r9 = $ r7 get $ r8", "r1 = java lang integer $ r9", "if r1 ! = null goto label2", "return -1", "if r1 ! = null goto label2", "label $ i2 = r1 int value", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = org antlr runtime misc int array r0", "$ i0 = r1 p", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = org antlr runtime recognition exception r0", "$ r3 = r8 input", "$ z0 = $ r3 instanceof org antlr runtime token stream", "if $ z0 == 0 goto label1", "r9 = org antlr runtime recognition exception r0", "$ r7 = r9 token", "$ i2 = $ r7 get type", "return $ i2", "if $ z0 == 0 goto label1", "label r10 = org antlr runtime recognition exception r0", "$ r4 = r10 input", "$ z1 = $ r4 instanceof org antlr runtime tree tree node stream", "if $ z1 == 0 goto label2", "r11 = org antlr runtime recognition exception r0", "$ r5 = r11 input", "r1 = org antlr runtime tree tree node stream $ r5", "r2 = r1 get tree adaptor", "r12 = org antlr runtime recognition exception r0", "$ r6 = r12 node", "$ i1 = r2 get type $ r6", "return $ i1", "if $ z1 == 0 goto label2", "label r13 = org antlr runtime recognition exception r0", "$ i0 = r13 c", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "r3 = @ parameter4", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r8 = org antlr runtime tree tree wizard r0", "$ r5 = r8 adaptor", "$ i3 = $ r5 get type r1", "if $ i3 ! = i1 goto label2", "r3 visit r1 r2 i0 null", "label r9 = org antlr runtime tree tree wizard r0", "$ r6 = r9 adaptor", "i2 = $ r6 get child count r1", "i4 = 0", "label if i4 > = i2 goto label4", "r10 = org antlr runtime tree tree wizard r0", "$ r7 = r10 adaptor", "r4 = $ r7 get child r1 i4", "r11 = org antlr runtime tree tree wizard r0", "r11 _visit r4 r1 i4 i1 r3", "i4 = i4 + 1", "goto label3", "label if i4 > = i2 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ parameter0", "r1 = java nio byte buffer wrap r0", "$ r2 = org apache directory server kerberos share keytab keytab read keytab r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache directory server kerberos share store principal store entry r0", "$ r1 = r2 valid start", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory server kerberos share store principal store entry modifier r0", "r2 expiration = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org apache directory share kerberos codec ad and or ad and or state enum last_ad_and_or_state", "$ i1 = $ r1 ordinal", "if i0 ! = $ i1 goto label1", "$ r2 = \\ `` ad_and_or_end_state\\ ``", "goto label2", "label return $ r2", "if i0 ! = $ i1 goto label1", "label r3 = org apache directory share kerberos codec ad and or ad and or state enum r0", "$ r2 = r3 name"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos codec ap rep ap rep container r0", "r2 ap rep = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos codec krb priv krb priv container r0", "r2 krb priv = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos codec method data method data container r0", "r2 method data = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r1 = org apache directory share kerberos codec option option r0", "$ i1 = r1 size", "if i0 < $ i1 goto label2", "label return", "if i0 < $ i1 goto label2", "label r2 = org apache directory share kerberos codec option option r0", "r2 clear bit i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache directory share kerberos codec pa enc t enc pa enc t enc container r0", "r2 pa enc t enc = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org apache directory share kerberos codec type encryption type encryption type by name", "$ r1 = $ r0 value", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "r0 = org apache directory share kerberos codec type last req type value", "i1 = lengthof r0", "i3 = 0", "label if i3 > = i1 goto label3", "r1 = r0 [ i3 ]", "$ i2 = r1 get value", "if i0 ! = $ i2 goto label2", "return r1", "if i0 ! = $ i2 goto label2", "label i3 = i3 + 1", "goto label1", "label if i3 > = i1 goto label3", "label $ r2 = org apache directory share kerberos codec type last req type none", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache directory share kerberos component authorization data r0", "$ r2 = r3 current a d", "$ r2 set ad data r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org apache directory share kerberos codec type host addr type get type by ordinal i0", "r2 = org apache directory share kerberos component host address r0", "r2 addr type = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache directory share kerberos exception kerberos exception r0", "$ i0 = r1 error code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = 31 - i0", "r1 = org apache directory share kerberos flag abstract kerberos flag r0", "r1 set bit i0", "r2 = org apache directory share kerberos flag abstract kerberos flag r0", "$ i3 = r2 value", "$ i2 = 1 < < i1", "$ i4 = $ i3 | $ i2", "r3 = org apache directory share kerberos flag abstract kerberos flag r0", "r3 value = $ i4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache directory share kerberos flag ticket flag ok_as_delegate", "r2 = org apache directory share kerberos flag ticket flag r0", "r3 = org apache directory share kerberos flag kerberos flag $ r1", "$ z0 = r2 be flag set r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` null ticket can not be added\\ ``", "throw r6", "if r1 ! = null goto label1", "label r8 = org apache directory share kerberos message krb cred r0", "$ r2 = r8 ticket", "if $ r2 ! = null goto label2", "r7 = new java util array list", "specialinvoke r7 < init >", "r9 = org apache directory share kerberos message krb cred r0", "r9 ticket = r7", "label r10 = org apache directory share kerberos message krb cred r0", "$ r3 = r10 ticket", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org apache directory share kerberos message tgs req r0", "r1 kdc req length = 0", "r2 = org apache directory share kerberos message tgs req r0", "r2 tgs req length = 0", "$ i0 = specialinvoke r0 compute length", "r3 = org apache directory share kerberos message tgs req r0", "r3 kdc req length = $ i0", "r4 = org apache directory share kerberos message tgs req r0", "$ i1 = r4 kdc req length", "$ i2 = org apache directory api asn1 ber tlv tlv get nb byte $ i1", "$ i4 = 1 + $ i2", "r5 = org apache directory share kerberos message tgs req r0", "$ i3 = r5 kdc req length", "$ i5 = $ i4 + $ i3", "r6 = org apache directory share kerberos message tgs req r0", "r6 tgs req length = $ i5", "r7 = org apache directory share kerberos message tgs req r0", "$ i6 = r7 tgs req length", "return $ i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r4 = org apache directory api util byte buffer r0", "$ i2 = r4 po", "r5 = org apache directory api util byte buffer r0", "$ r1 = r5 buf", "$ i1 = lengthof $ r1", "if $ i2 < $ i1 goto label1", "r6 = org apache directory api util byte buffer r0", "specialinvoke r6 grow buffer", "label r7 = org apache directory api util byte buffer r0", "$ r2 = r7 buf", "r8 = org apache directory api util byte buffer r0", "$ i3 = r8 po", "$ r2 [ $ i3 ] = b0", "r9 = org apache directory api util byte buffer r0", "$ i4 = r9 po", "$ i5 = $ i4 + 1", "r10 = org apache directory api util byte buffer r0", "r10 po = $ i5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label i1 = r0 length", "if i1 == 0 goto label2", "if i0 < 0 goto label2", "if i0 < i1 goto label3", "label return 0", "if i0 < i1 goto label3", "label c2 = r0 char at i0", "if c2 == 48 goto label4", "if c2 ! = 49 goto label5", "label $ z0 = 1", "goto label6", "label return $ z0", "if c2 ! = 49 goto label5", "label $ z0 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache directory api util exception runtime multi exception r0", "$ r1 = r2 nest exception", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache directory api util synchronize l r u map r0", "$ z0 = r4 contain key r1", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r5 = org apache directory api util synchronize l r u map r0", "r2 = r5 remove r1", "specialinvoke r0 put r1 r2", "return r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label r13 = r1 poll 1 null", "$ r3 = r13 get check point", "r19 = com netflix config abstract poll scheduler r0", "r19 check point = $ r3", "$ r4 = com netflix config poll listener $ event type poll_success", "r20 = com netflix config abstract poll scheduler r0", "specialinvoke r20 fire event $ r4 r13 null", "label goto label4", "label r21 = com netflix config abstract poll scheduler r0", "r21 populate property r13 r2", "label goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = com netflix config configuration base deployment context r0", "r1 = specialinvoke r3 get value from config \\ `` archaius deployment stack\\ ``", "if r1 == null goto label1", "return r1", "if r1 == null goto label1", "label $ r2 = specialinvoke r0 get deployment stack", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r35 = new java lang string builder", "specialinvoke r35 < init >", "$ r8 = r35 append r0", "$ r9 = $ r8 append \\ `` properties\\ ``", "r1 = $ r9 to string", "$ r10 = com netflix config configuration manager instance", "if $ r10 ! = null goto label1", "$ r29 = com netflix config configuration manager get config instance", "com netflix config configuration manager instance = $ r29", "label $ r11 = java lang thread current thread", "r2 = $ r11 get context class loader", "r30 = r2 get resource r1", "if r30 ! = null goto label2", "r37 = new java io i o exception", "r36 = new java lang string builder", "specialinvoke r36 < init >", "$ r25 = r36 append \\ `` can not locate \\ ``", "$ r26 = $ r25 append r1", "$ r27 = $ r26 append \\ `` a a classpath resource \\ ``", "$ r28 = $ r27 to string", "specialinvoke r37 < init > $ r28", "throw r37", "if r30 ! = null goto label2", "label r38 = new java util property", "specialinvoke r38 < init >", "r4 = r30 open stream", "r38 load r4", "r4 close", "$ r13 = com netflix config configuration manager get deployment context", "r5 = $ r13 get deployment environment", "if r5 == null goto label3", "$ i0 = r5 length", "if $ i0 < = 0 goto label3", "r39 = new java lang string builder", "specialinvoke r39 < init >", "$ r19 = r39 append r0", "$ r20 = $ r19 append \\ `` -\\ ``", "$ r21 = $ r20 append r5", "$ r22 = $ r21 append \\ `` properties\\ ``", "r31 = $ r22 to string", "r32 = r2 get resource r31", "if r32 == null goto label3", "r6 = r32 open stream", "r38 load r6", "r6 close", "label $ r33 = com netflix config configuration manager instance", "$ z0 = $ r33 instanceof com netflix config aggregate configuration", "if $ z0 == 0 goto label4", "r40 = new com netflix config concurrent map configuration", "specialinvoke r40 < init >", "r40 load property r38", "$ r16 = com netflix config configuration manager instance", "$ r17 = com netflix config aggregate configuration $ r16", "r41 = org apache common configuration abstract configuration r40", "$ r17 add configuration r41 r0", "goto label5", "label return", "if $ z0 == 0 goto label4", "label $ r14 = com netflix config configuration manager instance", "r42 = org apache common configuration configuration $ r14", "com netflix config util configuration utils load property r38 r42"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = com netflix config dynamic list property r0", "$ r2 = r3 delegate", "$ r2 add callback r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = @ parameter2", "com netflix config dynamic property factory check and warn r1", "r5 = new com netflix config dynamic boolean property", "specialinvoke r5 < init > r1 z0", "r6 = com netflix config property wrapper r5", "com netflix config dynamic property factory add callback r2 r6", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r3 = com netflix config dynamic property factory r0", "$ r2 = r3 get double property r1 d0 null", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = com netflix config jmx base config m bean r0", "$ r3 = r7 config", "$ z0 = $ r3 instanceof com netflix config concurrent composite configuration", "if $ z0 == 0 goto label1", "r8 = com netflix config jmx base config m bean r0", "$ r5 = r8 config", "$ r6 = com netflix config concurrent composite configuration $ r5", "$ r6 set override property r1 r2", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r9 = com netflix config jmx base config m bean r0", "$ r4 = r9 config", "$ r4 add property r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r8 = com netflix config poll result r0", "$ z0 = r8 incremental", "if $ z0 == 0 goto label6", "r9 = com netflix config poll result r0", "$ r2 = r9 add", "if $ r2 == null goto label1", "r10 = com netflix config poll result r0", "$ r7 = r10 add", "$ i2 = $ r7 size", "if $ i2 > 0 goto label3", "label r11 = com netflix config poll result r0", "$ r3 = r11 change", "if $ r3 == null goto label2", "r12 = com netflix config poll result r0", "$ r6 = r12 change", "$ i1 = $ r6 size", "if $ i1 > 0 goto label3", "label r13 = com netflix config poll result r0", "$ r4 = r13 delete", "if $ r4 == null goto label4", "r14 = com netflix config poll result r0", "$ r5 = r14 delete", "$ i0 = $ r5 size", "if $ i0 < = 0 goto label4", "label $ z1 = 1", "goto label5", "label return $ z1", "if $ i0 < = 0 goto label4", "label $ z1 = 0", "if $ z0 == 0 goto label6", "label r15 = com netflix config poll result r0", "$ r1 = r15 complete", "if $ r1 == null goto label7", "$ z2 = 1", "goto label8", "label return $ z2", "if $ r1 == null goto label7", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "com netflix config web application property app conf folder = r0", "com netflix config web application property base config file name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven archetype catalog archetype r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven archetype catalog archetype r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = org apache maven archetype common util list scanner r0", "r3 exclude = null", "goto label2", "label return", "if r1 ! = null goto label1", "label $ r2 = org codehaus plexus util string utils split r1 \\", "r4 = org apache maven archetype common util list scanner r0", "specialinvoke r4 set exclude $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven archetype model archetype model r0", "r2 test source = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven archetype model resource r0", "r2 encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven archetype model source r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache maven archetype metadata archetype descriptor r0", "r1 partial = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache maven archetype metadata file set r0", "r1 package = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven archetype metadata module descriptor r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven archetype metadata require property r0", "r2 default value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z4 = 1", "if r0 == null goto label6", "$ r3 = r0 get description", "$ z0 = $ r3 testable", "if $ z0 == 0 goto label1", "$ z5 = 0", "goto label2", "label $ z1 = r0 be deploy", "if $ z1 == 0 goto label3", "$ z7 = $ z5", "goto label4", "label z4 = $ z7", "$ z2 = r2 be annotation present class \\ `` lorg jboss arquillian container test api run a client \\ ``", "if $ z2 == 0 goto label5", "label $ z3 = r1 be annotation present class \\ `` lorg jboss arquillian container test api run a client \\ ``", "if $ z3 == 0 goto label6", "label return z4", "if $ z1 == 0 goto label3", "label $ z7 = 1", "if $ z0 == 0 goto label1", "label $ z5 = 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r1 = r0 get deployable container", "if $ r1 == null goto label1", "$ r2 = r0 get deployable container", "$ r3 = $ r2 get default protocol", "if $ r3 ! = null goto label2", "label return 0", "if $ r3 ! = null goto label2", "label $ r4 = \\ `` local\\ ``", "$ r5 = r0 get deployable container", "$ r6 = $ r5 get default protocol", "$ r7 = $ r6 get name", "$ z0 = $ r4 equal $ r7", "if $ z0 == 0 goto label3", "return 1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r3 = ru yandex qatools ashot comparison image diff r0", "$ r1 = r3 diff markup policy", "$ r2 = $ r1 get mark image", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = ru yandex qatools ashot comparison image diff r0", "$ r1 = r2 diff markup policy", "$ z0 = $ r1 have diff", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj lang reflect no such pointcut exception r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r5 = org aspectj ajdt internal compiler lookup eclipse factory r0", "$ r4 = r5 internal make method bind r1 r2 r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj ajdt internal core builder aj build config r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj ajdt internal core builder aj build config r0", "$ r1 = r2 classpath", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj ajdt internal core builder aj build config r0", "$ z0 = r1 should proceed", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj ajdt internal core builder aj build config r0", "$ i0 = r1 change", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if null == r0 goto label1", "$ z0 = 1", "goto label2", "label org aspectj ajdt internal core builder aj build manager do_runtime_version_check = $ z0", "return", "if null == r0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org aspectj ajdt internal core builder aj state r0", "$ r2 = r3 aspect class file", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj apache bcel classfile annotation runtime param annos r0", "$ z0 = r2 inflate", "if $ z0 ! = 0 goto label1", "r3 = org aspectj apache bcel classfile annotation runtime param annos r0", "specialinvoke r3 inflate", "label r4 = org aspectj apache bcel classfile annotation runtime param annos r0", "$ r1 = r4 parameter annotation", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = org aspectj apache bcel classfile field r0", "$ r1 = r5 field type", "if $ r1 ! = null goto label1", "r6 = org aspectj apache bcel classfile field r0", "$ r3 = r6 get signature", "$ r4 = org aspectj apache bcel generic type get return type $ r3", "r7 = org aspectj apache bcel classfile field r0", "r7 field type = $ r4", "label r8 = org aspectj apache bcel classfile field r0", "$ r2 = r8 field type", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 write int -889275714", "r15 = org aspectj apache bcel classfile java class r0", "$ i0 = r15 minor", "r1 write short $ i0", "r16 = org aspectj apache bcel classfile java class r0", "$ i1 = r16 major", "r1 write short $ i1", "r17 = org aspectj apache bcel classfile java class r0", "$ r2 = r17 cpool", "$ r2 dump r1", "r18 = org aspectj apache bcel classfile java class r0", "$ i2 = r18 modifier", "r1 write short $ i2", "r19 = org aspectj apache bcel classfile java class r0", "$ i3 = r19 classname idx", "r1 write short $ i3", "r20 = org aspectj apache bcel classfile java class r0", "$ i4 = r20 superclassname idx", "r1 write short $ i4", "r21 = org aspectj apache bcel classfile java class r0", "$ r3 = r21 interface", "$ i5 = lengthof $ r3", "r1 write short $ i5", "i12 = 0", "goto label2", "label r23 = org aspectj apache bcel classfile java class r0", "$ r4 = r23 interface", "$ i6 = lengthof $ r4", "if i12 < $ i6 goto label1", "label r22 = org aspectj apache bcel classfile java class r0", "$ r5 = r22 interface", "$ i7 = $ r5 [ i12 ]", "r1 write short $ i7", "i12 = i12 + 1", "if i12 < $ i6 goto label1", "r24 = org aspectj apache bcel classfile java class r0", "$ r6 = r24 field", "$ i8 = lengthof $ r6", "r1 write short $ i8", "i13 = 0", "goto label4", "label r26 = org aspectj apache bcel classfile java class r0", "$ r7 = r26 field", "$ i9 = lengthof $ r7", "if i13 < $ i9 goto label3", "label r25 = org aspectj apache bcel classfile java class r0", "$ r8 = r25 field", "$ r9 = $ r8 [ i13 ]", "$ r9 dump r1", "i13 = i13 + 1", "if i13 < $ i9 goto label3", "r27 = org aspectj apache bcel classfile java class r0", "$ r10 = r27 method", "$ i10 = lengthof $ r10", "r1 write short $ i10", "i14 = 0", "goto label6", "label r29 = org aspectj apache bcel classfile java class r0", "$ r11 = r29 method", "$ i11 = lengthof $ r11", "if i14 < $ i11 goto label5", "label r28 = org aspectj apache bcel classfile java class r0", "$ r12 = r28 method", "$ r13 = $ r12 [ i14 ]", "$ r13 dump r1", "i14 = i14 + 1", "if i14 < $ i11 goto label5", "r30 = org aspectj apache bcel classfile java class r0", "$ r14 = r30 attribute", "org aspectj apache bcel classfile attribute utils write attribute $ r14 r1", "r1 close", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], []]}
{"nodes": ["r0 = @ this", "r3 = org aspectj apache bcel classfile method r0", "r1 = r3 get code", "if r1 == null goto label1", "$ r2 = r1 get local variable table", "return $ r2", "if r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = org aspectj apache bcel generic branch handle r0", "$ r1 = r3 bi", "i2 = $ r1 update position i0 i1", "r4 = org aspectj apache bcel generic branch handle r0", "$ r2 = r4 bi", "$ i3 = $ r2 position of this instruction", "r5 = org aspectj apache bcel generic branch handle r0", "r5 po = $ i3", "return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org aspectj apache bcel generic code exception gen r0", "$ r2 = r3 start_pc", "org aspectj apache bcel generic instruction branch notify target $ r2 r1 r0", "r4 = org aspectj apache bcel generic code exception gen r0", "r4 start_pc = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj apache bcel generic method gen r0", "r1 set max local 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "label $ r1 = org aspectj apache bcel repository get repository", "r5 = $ r1 find class r0", "if r5 == null goto label3", "label return r5", "if r5 == null goto label3", "label $ r2 = org aspectj apache bcel repository get repository", "$ r3 = $ r2 load class r0", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org aspectj apache bcel util class loader repository use share cache", "if $ z0 == 0 goto label1", "$ r6 = org aspectj apache bcel util class loader repository share cache", "$ r7 = r1 get class name", "r10 = org aspectj apache bcel util class loader repository r0", "$ r8 = specialinvoke r10 to u r l $ r7", "$ r6 remove $ r8", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r11 = org aspectj apache bcel util class loader repository r0", "$ r2 = r11 local cache", "$ r3 = r1 get class name", "r12 = org aspectj apache bcel util class loader repository r0", "$ r4 = specialinvoke r12 to u r l $ r3", "$ r2 remove $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r8 = org aspectj asm internal aspect j element hierarchy r0", "$ r3 = r8 asm", "$ r4 = r1 get source file", "$ r5 = $ r3 get canonical file path $ r4", "$ i0 = r1 get line", "r9 = org aspectj asm internal aspect j element hierarchy r0", "$ r6 = r9 find element for source line $ r5 $ i0", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "z1 = @ parameter3", "$ z2 = org aspectj util lang util be empty r0", "if $ z2 == 0 goto label1", "$ r10 = org aspectj bridge i message r a_ i message", "return $ r10", "if $ z2 == 0 goto label1", "label org aspectj util lang util throw iax if null r1 \\ `` visitor\\ ``", "if z0 == 0 goto label2", "$ r11 = new java util array list", "specialinvoke $ r11 < init >", "goto label3", "label r2 = $ r11", "r3 = r0 iterator", "label $ z5 = r3 have next", "if $ z5 == 0 goto label7", "$ r9 = r3 next", "r4 = org aspectj bridge i message $ r9", "$ z3 = r1 handle message r4", "if $ z3 == 0 goto label5", "if z0 == 0 goto label6", "r2 add r4", "goto label6", "label goto label4", "if $ z3 == 0 goto label5", "label if z1 == 0 goto label6", "goto label7", "label if z0 == 0 goto label8", "$ i0 = r2 size", "if 0 ! = $ i0 goto label9", "label $ r5 = org aspectj bridge i message r a_ i message", "return $ r5", "if 0 ! = $ i0 goto label9", "label $ r6 = org aspectj bridge i message r a_ i message", "$ r7 = r2 to array $ r6", "$ r8 = org aspectj bridge i message [ ] $ r7", "return $ r8", "if z0 == 0 goto label2", "label $ r11 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [], [30], [31], [32], [33], [], [35], [36], [37], [38], [], [40], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if null ! = r0 goto label1", "return \\ `` i message null \\ ``", "if null ! = r0 goto label1", "label r1 = r0 get source location", "if null ! = r1 goto label2", "$ r26 = \\ `` \\ ``", "goto label3", "label $ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = r0 get kind", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append $ r26", "$ r11 = $ r10 append \\ `` \\ ``", "$ r12 = r0 get message", "$ r13 = $ r11 append $ r12", "r27 = $ r13 to string", "r3 = r0 get throw", "if r3 == null goto label4", "$ r16 = new java lang string builder", "specialinvoke $ r16 < init >", "$ r17 = $ r16 append r27", "$ r18 = $ r17 append \\ `` -- \\ ``", "$ r19 = org aspectj util lang util render exception short r3", "$ r20 = $ r18 append $ r19", "r28 = $ r20 to string", "$ r21 = new java lang string builder", "specialinvoke $ r21 < init >", "$ r22 = $ r21 append r28", "$ r23 = $ r22 append \\ `` \\n\\ ``", "$ r24 = org aspectj util lang util render exception r3 z0", "$ r25 = $ r23 append $ r24", "r27 = $ r25 to string", "label $ r14 = r0 get extra source location", "$ z1 = $ r14 be empty", "if $ z1 == 0 goto label5", "return r27", "if $ z1 == 0 goto label5", "label $ r15 = org aspectj bridge message util add extra source location r0 r27", "return $ r15", "if null ! = r1 goto label2", "label $ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` at \\ ``", "$ r6 = $ r5 append r1", "$ r26 = $ r6 to string"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "org aspectj util lang util throw iax if null r0 \\ `` handler\\ ``", "org aspectj util lang util throw iax if null r1 \\ `` kind\\ ``", "r5 = new org aspectj bridge message util $ 1 handler print stream", "specialinvoke r5 < init > r2 r3 r1 r0", "r6 = java io print stream r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["i0 = @ parameter0", "if i0 == 2 goto label1", "if i0 == 3 goto label1", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init >", "throw $ r1", "if i0 == 3 goto label1", "label $ r0 = new org aspectj org eclipse jdt core dom aj a s t", "specialinvoke $ r0 < init > i0", "return $ r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "$ r2 = new org aspectj org eclipse jdt core dom after throw advice declaration", "specialinvoke $ r2 < init > r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = new org aspectj org eclipse jdt core dom cflow pointcut", "specialinvoke $ r2 < init > r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = new org aspectj org eclipse jdt core dom default type pattern", "specialinvoke $ r2 < init > r0 \\ `` \\ ``", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = org aspectj org eclipse jdt core dom aspect declaration privileged_property", "r3 = org aspectj org eclipse jdt core dom aspect declaration r0", "r3 pre value change $ r1", "r4 = org aspectj org eclipse jdt core dom aspect declaration r0", "r4 be privilege = z0", "$ r2 = org aspectj org eclipse jdt core dom aspect declaration privileged_property", "r5 = org aspectj org eclipse jdt core dom aspect declaration r0", "r5 post value change $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj org eclipse jdt core dom compilation unit r0", "$ r1 = r2 type root", "r3 = org aspectj org eclipse jdt core i java element $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj org eclipse jdt internal compiler apt util many to many r0", "r1 _dirty = 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj org eclipse jdt internal compiler apt util many to many r0", "$ z0 = r1 _dirty", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj org eclipse jdt internal core nd db d b property r0", "r2 clear", "r3 = org aspectj org eclipse jdt internal core nd db d b property r0", "$ r1 = r3 db", "r4 = org aspectj org eclipse jdt internal core nd db d b property r0", "$ l0 = r4 record", "$ r1 free $ l0 2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj org eclipse jdt internal core nd nd link list r0", "$ r1 = r2 raw list", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i3 = 0", "r2 = org aspectj org eclipse jdt internal core nd nd raw link list r0", "r1 = specialinvoke r2 get d b", "r3 = org aspectj org eclipse jdt internal core nd nd raw link list r0", "i4 = r3 first block record count", "r4 = org aspectj org eclipse jdt internal core nd nd raw link list r0", "l5 = r4 address", "label $ l1 = l5 + 0l", "l0 = r1 get rec ptr $ l1", "r5 = org aspectj org eclipse jdt internal core nd nd raw link list r0", "$ i2 = specialinvoke r5 get element in block l5 l0 i4", "i3 = i3 + $ i2", "r6 = org aspectj org eclipse jdt internal core nd nd raw link list r0", "$ z0 = specialinvoke r6 be last block l5 l0", "if $ z0 == 0 goto label2", "goto label3", "label return i3", "if $ z0 == 0 goto label2", "label r7 = org aspectj org eclipse jdt internal core nd nd raw link list r0", "i4 = r7 record count", "l5 = l0", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "org aspectj org eclipse jdt internal core nd util char array map check boundary r1 i0 i1", "r5 = org aspectj org eclipse jdt internal core nd util char array map r0", "$ r3 = r5 map", "r4 = new org aspectj org eclipse jdt internal core nd util char array map $ key", "specialinvoke r4 < init > r1 i0 i1", "$ z0 = $ r3 contain key r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org aspectj org eclipse jdt internal core nd util path map r0", "$ r3 = r5 root", "r2 = $ r3 get most specific node r1", "$ z0 = r2 exist", "if $ z0 == 0 goto label1", "$ i0 = r2 depth", "$ i1 = r1 segment count", "if $ i0 > = $ i1 goto label2", "label return null", "if $ i0 > = $ i1 goto label2", "label $ r4 = r2 value", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "r1 = @ parameter2", "r2 = @ parameter3", "r3 = @ parameter4", "r4 = @ parameter5", "r20 = new org aspectj tool ajc main", "specialinvoke r20 < init >", "r21 = new org aspectj bridge message handler", "specialinvoke r21 < init >", "r22 = org aspectj bridge i message holder r21", "r20 set holder r22", "label r20 run main r0 z0", "label $ r10 = org aspectj bridge i message fail", "r23 = org aspectj bridge i message holder r21", "org aspectj tool ajc main read message r23 $ r10 1 r1", "$ r11 = org aspectj bridge i message error", "r24 = org aspectj bridge i message holder r21", "org aspectj tool ajc main read message r24 $ r11 0 r2", "$ r12 = org aspectj bridge i message warn", "r25 = org aspectj bridge i message holder r21", "org aspectj tool ajc main read message r25 $ r12 0 r3", "$ r13 = org aspectj bridge i message info", "r26 = org aspectj bridge i message holder r21", "org aspectj tool ajc main read message r26 $ r13 0 r4", "goto label5", "label $ r14 = org aspectj bridge i message error", "$ i0 = r21 num message $ r14 1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org aspectj tool ajc main r0", "r2 client holder = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r5 = new org aspectj bridge message", "$ r4 = org aspectj bridge i message fail", "specialinvoke r5 < init > r1 $ r4 r2 null", "r6 = org aspectj bridge i message r5", "r0 handle message r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj tool ant taskdefs ajc2 r0", "$ z0 = r1 nocomments", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org aspectj tool ant taskdefs ajc2 r0", "r2 workingdir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new java util string tokenizer", "specialinvoke r8 < init > r1 \\", "label $ z0 = r8 have more token", "if $ z0 == 0 goto label3", "r9 = org aspectj tool ant taskdefs ajc2 r0", "$ r5 = r9 project", "$ r6 = r8 next token", "r3 = $ r5 resolve file $ r6", "if r3 == null goto label2", "$ z1 = r3 exist", "if $ z1 == 0 goto label2", "$ z2 = r3 be directory", "if $ z2 ! = 0 goto label2", "r10 = org aspectj tool ant taskdefs ajc2 r0", "$ r7 = r10 create argfile", "$ r7 set file r3", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj tool ant taskdefs ajc2 r0", "r2 have exclude = 1", "$ r1 = specialinvoke r0 create exclude", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org aspectj tool ant taskdefs ajc task r0", "$ r2 = r4 cmd", "$ r3 = r1 get absolute path", "$ r2 add flag \\ `` - xlintfile\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org aspectj tool ant taskdefs ajc task r0", "$ r4 = r5 cmd", "$ r3 = org aspectj tool ant taskdefs ajc task source_inputs", "r2 = $ r4 add option \\ `` -source\\", "if null == r2 goto label1", "r6 = org aspectj tool ant taskdefs ajc task r0", "r6 ignore r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj tool ant taskdefs ajc task r0", "$ z0 = r2 execute in other v m", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r3 = org aspectj tool ant taskdefs ajc task r0", "r1 = r3 main", "if null == r1 goto label2", "r1 quit", "label return 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = org aspectj tool ant taskdefs ajc task r0", "$ z0 = r7 execute", "if $ z0 ! = 0 goto label1", "r6 = new java lang illegal state exception", "specialinvoke r6 < init > \\ `` should be executing\\ ``", "throw r6", "if $ z0 ! = 0 goto label1", "label r8 = org aspectj tool ant taskdefs ajc task r0", "$ r1 = r8 outjar", "if null == $ r1 goto label2", "r9 = org aspectj tool ant taskdefs ajc task r0", "specialinvoke r9 complete outjar", "goto label3", "label r11 = org aspectj tool ant taskdefs ajc task r0", "$ r2 = r11 xdone signal", "if null == $ r2 goto label4", "r12 = org aspectj tool ant taskdefs ajc task r0", "$ r4 = r12 message holder", "r13 = org aspectj tool ant taskdefs ajc task r0", "$ r3 = r13 xdone signal", "r14 = org aspectj bridge i message handler $ r4", "org aspectj bridge message util info r14 $ r3", "label return", "if null == $ r1 goto label2", "label r10 = org aspectj tool ant taskdefs ajc task r0", "specialinvoke r10 complete destdir"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "if null ! = r0 goto label01", "$ r7 = new java lang illegal argument exception", "specialinvoke $ r7 < init > \\ `` null dir\\ ``", "throw $ r7", "if null ! = r0 goto label01", "label $ z1 = r0 exist", "if $ z1 == 0 goto label02", "$ z2 = r0 can write", "if $ z2 ! = 0 goto label03", "label return 0", "if $ z2 ! = 0 goto label03", "label $ z3 = r0 be directory", "if $ z3 ! = 0 goto label04", "r0 delete", "return 1", "if $ z3 ! = 0 goto label04", "label r2 = r0 list", "if r2 ! = null goto label05", "return 0", "if r2 ! = null goto label05", "label i3 = 0", "i4 = 0", "label $ i0 = lengthof r2", "if i4 > = $ i0 goto label11", "r3 = r2 [ i4 ]", "$ r6 = new java io file", "specialinvoke $ r6 < init > r0 r3", "if null == r1 goto label07", "$ z7 = r1 accept $ r6", "if $ z7 == 0 goto label10", "label $ z4 = $ r6 be directory", "if $ z4 == 0 goto label09", "$ i1 = org aspectj util file util delete content $ r6 r1 z0", "i3 = i3 + $ i1", "r5 = $ r6 list", "if z0 == 0 goto label08", "if r5 == null goto label08", "$ i2 = lengthof r5", "if 0 ! = $ i2 goto label08", "$ r6 delete", "label goto label10", "label i4 = i4 + 1", "goto label06", "if $ z4 == 0 goto label09", "label $ r6 delete", "i3 = i3 + 1", "if i4 > = $ i0 goto label11", "label return i3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "if null == r0 goto label1", "$ z0 = r0 can read", "if $ z0 == 0 goto label1", "org aspectj util file util list file r0 null $ r2", "label $ r3 = newarray java lang string [ 0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new java io file input stream", "specialinvoke $ r3 < init > r0", "r2 = org aspectj util file util read a byte array $ r3", "$ r3 close", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org aspectj util lang util any split r0 \\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["l0 = @ parameter0", "i4 = @ parameter1", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` \\ ``", "$ r3 = $ r2 append l0", "r10 = $ r3 to string", "i1 = r10 length", "if i4 < = i1 goto label2", "$ r4 = \\ `` \\ ``", "i2 = $ r4 length", "if i4 < = i2 goto label1", "i4 = i2", "label i3 = i4 - i1", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = \\ `` \\ ``", "$ r7 = $ r6 substring 0 i3", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 append r10", "r10 = $ r9 to string", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "r2 = r1 get declare type", "if z0 == 0 goto label3", "$ i1 = r1 get modifier", "$ z2 = java lang reflect modifier be static $ i1", "if $ z2 == 0 goto label1", "$ r28 = newarray org aspectj weaver unresolved type [ 1 ]", "$ r29 = r1 get type", "$ r28 [ 0 ] = $ r29", "r30 = $ r28", "goto label2", "label r34 = new java lang string buffer", "specialinvoke r34 < init > \\ `` ajc $ set $ \\ ``", "$ r23 = r1 get name", "r34 append $ r23", "r35 = new org aspectj weaver resolve member impl", "$ r25 = org aspectj weaver member method", "$ r26 = org aspectj weaver unresolved type void", "$ r27 = r34 to string", "specialinvoke r35 < init > $ r25 r2 9 $ r26 $ r27 r30", "r39 = org aspectj weaver resolve member r35", "return r39", "if $ z2 == 0 goto label1", "label $ r20 = newarray org aspectj weaver unresolved type [ 2 ]", "$ r20 [ 0 ] = r2", "$ r21 = r1 get type", "$ r20 [ 1 ] = $ r21", "r30 = $ r20", "if z0 == 0 goto label3", "label $ r3 = r1 get name", "r32 = org aspectj weaver name mangler privilege access method for field set $ r3 r2 r0", "$ i0 = r1 get modifier", "$ z1 = java lang reflect modifier be static $ i0", "if $ z1 == 0 goto label4", "r36 = new java lang string builder", "specialinvoke r36 < init >", "$ r15 = r36 append \\ `` \\ ``", "$ r16 = r1 get return type", "$ r17 = $ r16 get signature", "$ r18 = $ r15 append $ r17", "$ r19 = $ r18 append \\ `` v\\ ``", "r33 = $ r19 to string", "goto label5", "label r38 = new org aspectj weaver resolve member impl", "$ r13 = org aspectj weaver member method", "specialinvoke r38 < init > $ r13 r2 9 r32 r33", "r40 = org aspectj weaver resolve member r38", "return r40", "if $ z1 == 0 goto label4", "label r37 = new java lang string builder", "specialinvoke r37 < init >", "$ r5 = r37 append \\ `` \\ ``", "$ r6 = r2 get signature", "$ r7 = $ r5 append $ r6", "$ r8 = r1 get return type", "$ r9 = $ r8 get signature", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 append \\ `` v\\ ``", "r33 = $ r11 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r15 = new org aspectj weaver resolve member impl", "$ r4 = org aspectj weaver member method", "$ r5 = org aspectj weaver unresolved type void", "$ r6 = r0 get declare type", "$ r7 = r0 get name", "$ r8 = org aspectj weaver name mangler inter field set dispatcher r1 $ r6 $ r7", "$ i1 = r0 get modifier", "$ z0 = java lang reflect modifier be static $ i1", "if $ z0 == 0 goto label1", "$ r14 = newarray org aspectj weaver unresolved type [ 1 ]", "$ r12 = r0 get return type", "$ r14 [ 0 ] = $ r12", "goto label2", "label specialinvoke r15 < init > $ r4 r1 9 $ r5 $ r8 $ r14", "$ r11 = r0 get type variable", "r16 = org aspectj weaver resolve member r15", "r16 set type variable $ r11", "r17 = org aspectj weaver resolve member r15", "return r17", "if $ z0 == 0 goto label1", "label $ r14 = newarray org aspectj weaver unresolved type [ 2 ]", "$ r9 = r0 get declare type", "$ r14 [ 0 ] = $ r9", "$ r10 = r0 get return type", "$ r14 [ 1 ] = $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org aspectj weaver bcel annotation access field var", "r5 = org aspectj weaver bcel annotation access var r0", "specialinvoke r4 < init > r5 r1 r2", "r6 = org aspectj weaver ast var r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "b1 = 0", "i2 = 0", "label $ i0 = lengthof r0", "if i2 > = $ i0 goto label6", "$ r1 = org aspectj weaver ajc member maker typex_joinpoint", "$ r2 = $ r1 get signature", "$ r3 = r0 [ i2 ]", "$ z0 = $ r2 equal $ r3", "if $ z0 == 0 goto label2", "b1 = b1 | 2", "goto label5", "label i2 = i2 + 1", "goto label1", "if $ z0 == 0 goto label2", "label $ r4 = org aspectj weaver ajc member maker typex_proceedingjoinpoint", "$ r5 = $ r4 get signature", "$ r6 = r0 [ i2 ]", "$ z1 = $ r5 equal $ r6", "if $ z1 == 0 goto label3", "label $ r7 = org aspectj weaver ajc member maker typex_staticjoinpoint", "$ r8 = $ r7 get signature", "$ r9 = r0 [ i2 ]", "$ z2 = $ r8 equal $ r9", "if $ z2 == 0 goto label4", "b1 = b1 | 4", "if $ z2 == 0 goto label4", "label $ r10 = org aspectj weaver ajc member maker typex_enclosingstaticjoinpoint", "$ r11 = $ r10 get signature", "$ r12 = r0 [ i2 ]", "$ z3 = $ r11 equal $ r12", "if $ z3 == 0 goto label5", "b1 = b1 | 8", "if i2 > = $ i0 goto label6", "label return b1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org aspectj weaver iterators $ 8", "specialinvoke r2 < init > r0", "r3 = java util iterator r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = r0 get name a identifier", "$ r4 = r1 get name a identifier", "$ r5 = org aspectj weaver name mangler make name \\ `` inter field init\\", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org aspectj weaver pattern if pointcut r0", "$ i0 = r1 extra parameter flag", "$ i1 = $ i0 | 16", "r2 = org aspectj weaver pattern if pointcut r0", "r2 extra parameter flag = $ i1", "if z0 == 0 goto label1", "r3 = org aspectj weaver pattern if pointcut r0", "$ i2 = r3 extra parameter flag", "$ i3 = $ i2 | 32", "r4 = org aspectj weaver pattern if pointcut r0", "r4 extra parameter flag = $ i3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org aspectj weaver pattern pattern parser r0", "r3 pointcut designator handler = r1", "r4 = org aspectj weaver pattern pattern parser r0", "r4 world = r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org aspectj util fuzzy boolean no", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org aspectj weaver pattern wild type pattern r0", "$ i0 = r1 dim", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 instanceof java lang reflect method", "if $ z0 == 0 goto label1", "$ r6 = java lang reflect method r0", "$ r7 = org aspectj weaver reflect reflection base reference type delegate factory create resolve method $ r6 r1", "return $ r7", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof java lang reflect constructor", "if $ z1 == 0 goto label2", "$ r4 = java lang reflect constructor r0", "$ r5 = org aspectj weaver reflect reflection base reference type delegate factory create resolve constructor $ r4 r1", "return $ r5", "if $ z1 == 0 goto label2", "label $ r2 = java lang reflect field r0", "$ r3 = org aspectj weaver reflect reflection base reference type delegate factory create resolve field $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "z1 = @ parameter1", "z2 = @ parameter2", "r5 = new java util array list", "specialinvoke r5 < init >", "r6 = new java util hash set", "specialinvoke r6 < init >", "r7 = org aspectj weaver resolve type r0", "r8 = org aspectj weaver resolve type r0", "specialinvoke r7 recurse hierarchy r6 r5 r8 z0 z1 z2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org aspectj weaver shadow r0", "$ r1 = r2 kind", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org aspectj weaver tool cache weaved class cache r0", "$ r2 = r3 back", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org aspectj weaver tool pointcut parser r0", "$ r5 = r9 class loader reference", "$ r6 = $ r5 get class loader", "r2 = $ r6 get resource r1", "r3 = r2 open stream", "r8 = new java util property", "specialinvoke r8 < init >", "r8 load r3", "r10 = org aspectj weaver tool pointcut parser r0", "r10 set lint property r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r15 = new org aspectj weaver pattern pattern parser", "specialinvoke r15 < init > r1", "r12 = r15 parse type pattern", "r19 = org aspectj weaver tool pointcut parser r0", "$ r3 = r19 world", "r20 = org aspectj weaver world $ r3", "r12 resolve r20", "r16 = new org aspectj weaver internal tool type pattern matcher impl", "r21 = org aspectj weaver tool pointcut parser r0", "$ r5 = r21 world", "r22 = org aspectj weaver world $ r5", "specialinvoke r16 < init > r12 r22", "label r23 = org aspectj weaver tool type pattern matcher r16", "return r23"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org aspectj weaver world r0", "$ r3 = r4 precedence calculator", "$ i0 = $ r3 compare by precedence r1 r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "if r3 == null goto label1", "r14 = org aspectj weaver world r0", "$ r8 = r14 message handler", "r11 = new org aspectj bridge message", "specialinvoke r11 < init > r2 r1 null r3", "r15 = org aspectj bridge i message r11", "$ r8 handle message r15", "if r4 == null goto label2", "r16 = org aspectj weaver world r0", "$ r10 = r16 message handler", "r12 = new org aspectj bridge message", "specialinvoke r12 < init > r2 r1 null r4", "r17 = org aspectj bridge i message r12", "$ r10 handle message r17", "goto label2", "label return", "if r3 == null goto label1", "label r18 = org aspectj weaver world r0", "$ r6 = r18 message handler", "r13 = new org aspectj bridge message", "specialinvoke r13 < init > r2 r1 null r4", "r19 = org aspectj bridge i message r13", "$ r6 handle message r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = r2 get name a identifier", "$ r4 = r1 get name a identifier", "$ r5 = org aspectj weaver name mangler make name \\ `` priv field set\\", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "return r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = com netflix astyanax map map util r0", "$ r2 = r8 cache", "if $ r2 == null goto label1", "r9 = com netflix astyanax map map util r0", "$ r5 = r9 cache", "r10 = com netflix astyanax map map util r0", "$ r4 = r10 annotation set", "$ r6 = $ r5 get mapping r1 $ r4", "goto label2", "label return $ r6", "if $ r2 == null goto label1", "label r7 = new com netflix astyanax map map", "$ r6 = r7", "r11 = com netflix astyanax map map util r0", "$ r3 = r11 annotation set", "specialinvoke r7 < init > r1 $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = java nio byte buffer $ r5", "$ i0 = r3 limit", "r3 position $ i0", "goto label1", "if $ z0 == 0 goto label2", "label r7 = com netflix astyanax serializers byte buffer output stream r0", "$ r4 = r7 buffer", "$ r4 add all 0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com netflix astyanax util write ahead mutation batch executor r0", "$ r3 = r5 wal", "r2 = $ r3 create entry", "r2 write mutation r1", "r6 = com netflix astyanax util write ahead mutation batch executor r0", "$ r4 = specialinvoke r6 execute wal entry r2 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = com netflix astyanax recipes lock column prefix distribute row lock r0", "r2 timeout = l0", "r3 = com netflix astyanax recipes lock column prefix distribute row lock r0", "r3 timeout unit = r1", "r4 = com netflix astyanax recipes lock column prefix distribute row lock r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com netflix astyanax recipes lock column prefix distribute row lock r0", "r2 release with mutation r1 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache avro data record builder base r0", "$ r2 = r7 data", "$ r3 = r1 schema", "r8 = org apache avro data record builder base r0", "$ r4 = r8 data", "$ r5 = $ r4 get default value r1", "$ r6 = $ r2 deep copy $ r3 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache avro file codec factory register", "$ r3 = $ r2 put r0 r1", "$ r4 = org apache avro file codec factory $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache avro file data file reader12 r0", "$ r2 = r5 meta", "$ r3 = $ r2 get r1", "$ r4 = byte [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache avro file data file reader12 r0", "$ r1 = r2 schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache avro file data file writer r0", "r1 flush on every block = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r5 = org apache avro generic generic record builder r0", "$ r2 = r5 field", "$ r3 = $ r2 [ i0 ]", "r6 = org apache avro generic generic record builder r0", "$ r4 = specialinvoke r6 set $ r3 i0 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 32 goto label1", "i0 = 32", "label if i0 < = 16777216 goto label2", "i0 = 16777216", "label r1 = org apache avro io encoder factory r0", "r1 binary buffer size = i0", "r2 = org apache avro io encoder factory r0", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache avro io encoder factory r0", "$ i0 = r1 binary buffer size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if null ! = r1 goto label1", "r8 = new java lang null pointer exception", "specialinvoke r8 < init > \\ `` input stream to read from can not be null ! \\ ``", "throw r8", "if null ! = r1 goto label1", "label r9 = org apache avro io json decoder r0", "$ r2 = r9 parser", "$ r2 reset", "$ r3 = org apache avro io json decoder json factory", "$ r4 = $ r3 create json parser r1", "r10 = org apache avro io json decoder r0", "r10 in = $ r4", "r11 = org apache avro io json decoder r0", "$ r5 = r11 in", "$ r5 next token", "r12 = org apache avro io json decoder r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 production", "label r5 = org apache avro io parse parser r0", "$ i1 = r5 po", "$ i0 = lengthof r2", "$ i3 = $ i1 + $ i0", "r6 = org apache avro io parse parser r0", "$ r3 = r6 stack", "$ i2 = lengthof $ r3", "if $ i3 < = $ i2 goto label2", "r7 = org apache avro io parse parser r0", "specialinvoke r7 expand stack", "goto label1", "if $ i3 < = $ i2 goto label2", "label r8 = org apache avro io parse parser r0", "$ r4 = r8 stack", "r9 = org apache avro io parse parser r0", "$ i5 = r9 po", "$ i4 = lengthof r2", "java lang system arraycopy r2 0 $ r4 $ i5 $ i4", "r10 = org apache avro io parse parser r0", "$ i7 = r10 po", "$ i6 = lengthof r2", "$ i8 = $ i7 + $ i6", "r11 = org apache avro io parse parser r0", "r11 po = $ i8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache avro io parse parser r0", "$ i1 = r5 po", "r6 = org apache avro io parse parser r0", "$ r2 = r6 stack", "$ i0 = lengthof $ r2", "if $ i1 ! = $ i0 goto label1", "r7 = org apache avro io parse parser r0", "specialinvoke r7 expand stack", "label r8 = org apache avro io parse parser r0", "$ r3 = r8 stack", "r9 = org apache avro io parse parser r0", "$ i2 = r9 po", "$ i3 = $ i2 + 1", "r10 = org apache avro io parse parser r0", "r10 po = $ i3", "$ r3 [ $ i2 ] = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache avro io parse skip parser r0", "i0 = r2 po", "r3 = org apache avro io parse skip parser r0", "r3 push symbol r1", "r4 = org apache avro io parse skip parser r0", "r4 skip to i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache avro io resolve decoder r0", "$ r1 = r2 parser", "$ r1 process implicit action", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init > r0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r4 = r1 [ i1 ]", "$ r5 append r4", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label $ r6 = $ r5 to string", "$ r7 = org apache avro protocol parse $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache avro validate can be read", "specialinvoke r2 < init >", "r3 = org apache avro schema validator builder r0", "r4 = org apache avro schema validation strategy r2", "r3 strategy = r4", "r5 = org apache avro schema validator builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache avro ipc call future r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache avro ipc responder r0", "$ r2 = r3 rpc meta plugins", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache avro ipc r p c context r0", "$ r1 = r2 handshake request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache avro ipc r p c context r0", "$ r1 = r2 response", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = r1 span", "$ r6 = $ r5 event", "r3 = $ r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r7 = r3 next", "r4 = org apache avro ipc trace timestamped event $ r7", "$ r8 = r4 event", "$ z1 = $ r8 instanceof org apache avro ipc trace span event", "if $ z1 == 0 goto label2", "$ r9 = r4 event", "$ r10 = org apache avro ipc trace span event $ r9", "if $ r10 ! = r2 goto label2", "$ l0 = r4 time stamp", "return $ l0", "if $ r10 ! = r2 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return -1l"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r10 = org apache avro ipc netty transceiver r0", "$ r2 = r10 state lock", "$ r3 = $ r2 read lock", "$ r3 lock", "label r11 = org apache avro ipc netty transceiver r0", "$ r4 = r11 remote", "if $ r4 == null goto label2", "$ z1 = 1", "goto label3", "label r12 = org apache avro ipc netty transceiver r0", "$ r5 = r12 state lock", "$ r6 = $ r5 read lock", "$ r6 unlock", "return $ z1", "if $ r4 == null goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r7 = new org awaitility duration $ plus", "specialinvoke r7 < init > null", "r9 = org awaitility duration r0", "$ r2 = r9 unit", "if $ r2 ! = null goto label1", "$ r6 = org awaitility duration forever", "goto label2", "label r11 = org awaitility duration r0", "$ r4 = r7 apply r11 $ r6", "return $ r4", "if $ r2 ! = null goto label1", "label r8 = new org awaitility duration", "$ r6 = r8", "r10 = org awaitility duration r0", "$ r3 = r10 unit", "specialinvoke r8 < init > l0 $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r5 = com amazonaws amazon service exception r0", "$ r1 = r5 raw response", "if $ r1 ! = null goto label1", "$ r4 = null", "goto label2", "label return $ r4", "if $ r1 ! = null goto label1", "label r6 = com amazonaws amazon service exception r0", "$ r2 = r6 raw response", "$ r3 = $ r2 clone", "$ r4 = byte [ ] $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws amazon web service request r0", "$ r1 = r2 credential provider", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java lang integer value of i0", "r2 = com amazonaws amazon web service request r0", "r2 sdk client execution timeout = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = com amazonaws auth a w s4 signer r0", "$ r1 = r5 overridden date", "if $ r1 ! = null goto label1", "$ r3 = null", "goto label2", "label return $ r3", "if $ r1 ! = null goto label1", "label r4 = new java util date", "$ r3 = r4", "r6 = com amazonaws auth a w s4 signer r0", "$ r2 = r6 overridden date", "$ l0 = $ r2 get time", "specialinvoke r4 < init > $ l0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r23 = com amazonaws auth policy internal json policy writer r0", "$ z0 = specialinvoke r23 be not null r1", "if $ z0 ! = 0 goto label01", "r20 = new java lang illegal argument exception", "specialinvoke r20 < init > \\ `` policy can not be null\\ ``", "throw r20", "if $ z0 ! = 0 goto label01", "label r24 = com amazonaws auth policy internal json policy writer r0", "r16 = specialinvoke r24 json string of r1", "label r25 = com amazonaws auth policy internal json policy writer r0", "$ r4 = r25 writer", "$ r4 close", "label goto label05", "label return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r3 = com amazonaws auth policy policy r0", "r3 set statement $ r2", "r4 = com amazonaws auth policy policy r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new com amazonaws auth policy internal json policy reader", "specialinvoke $ r2 < init > r1", "$ r3 = $ r2 create policy from json string r0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws auth policy principal r0", "$ r1 = r2 provider", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws auth policy statement r0", "$ r1 = r2 principal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws auth process credential provider r0", "$ r1 = r2 credential expiration time", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws auth profile internal securitytoken role info r0", "r2 role arn = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com amazonaws auth profile profile credential provider r0", "r1 refresh force interval nanos = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = com amazonaws auth profile profile config file r0", "$ r1 = r6 profile file", "$ l0 = $ r1 last modified", "r7 = com amazonaws auth profile profile config file r0", "$ l1 = r7 profile file last modified", "$ b2 = $ l0 cmp $ l1", "if $ b2 < = 0 goto label1", "r8 = com amazonaws auth profile profile config file r0", "$ r3 = r8 profile file", "$ l3 = $ r3 last modified", "r9 = com amazonaws auth profile profile config file r0", "r9 profile file last modify = $ l3", "r10 = com amazonaws auth profile profile config file r0", "$ r4 = r10 profile file", "$ r5 = com amazonaws auth profile profile config file load profile $ r4", "r11 = com amazonaws auth profile profile config file r0", "r11 all profile = $ r5", "label r12 = com amazonaws auth profile profile config file r0", "$ r2 = r12 credential provider cache", "$ r2 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws client builder aws async client builder r0", "r2 executor factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws client builder aws client builder r0", "r2 metric collector = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws client builder aws client builder r0", "$ r1 = r2 endpoint configuration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws client configuration r0", "r2 set protocol r1", "r3 = com amazonaws client configuration r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws client configuration r0", "r2 user agent suffix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws client configuration r0", "$ r1 = r2 local address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws client configuration r0", "r2 proxy password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws client configuration r0", "$ r1 = r2 proxy domain", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com amazonaws client configuration r0", "r1 set connection timeout i0", "r2 = com amazonaws client configuration r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws client configuration r0", "r2 signer override = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws client configuration r0", "$ z0 = r1 preemptive basic proxy auth", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com amazonaws client configuration r0", "r1 connection t t l = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com amazonaws client configuration r0", "r1 connection max idle millis = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com amazonaws client configuration r0", "r1 validate after inactivity millis = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = com amazonaws event request progress support r0", "$ l0 = r1 response content length", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com amazonaws event s d k progress publisher $ lazy holder access $ 000", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get status line", "i0 = $ r1 get status code", "$ i1 = i0 100", "if $ i1 ! = 2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 ! = 2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws http http response r0", "$ r1 = r2 http request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = com amazonaws http http response r0", "$ r3 = r5 header", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com amazonaws internal config internal config r0", "$ r2 = r3 get signer config r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = com amazonaws internal e c2 metadata client r0", "r8 = r11 read resource \\ `` late meta-data iam security-credentials \\ ``", "r9 = r8 trim", "r1 = r9 split \\ `` \\n\\ ``", "$ i0 = lengthof r1", "if $ i0 ! = 0 goto label1", "return null", "if $ i0 ! = 0 goto label1", "label r2 = r1 [ 0 ]", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r4 = r10 append \\ `` late meta-data iam security-credentials \\ ``", "$ r5 = $ r4 append r2", "$ r6 = $ r5 to string", "r12 = com amazonaws internal e c2 metadata client r0", "$ r7 = r12 read resource $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = com amazonaws internal f i f o cache r0", "$ r4 = r9 rlock", "$ r4 lock", "label r10 = com amazonaws internal f i f o cache r0", "$ r5 = r10 map", "r2 = $ r5 get r1", "label r11 = com amazonaws internal f i f o cache r0", "$ r6 = r11 rlock", "$ r6 unlock", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["$ z0 = com amazonaws metric aws sdk metric per host metric include", "return $ z0"], "adj": [[1], []]}
{"nodes": ["$ r0 = com amazonaws metric aws sdk metric registry", "$ r1 = $ r0 predefined metric", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 to string", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws partition model endpoint r0", "$ r1 = r2 credential scope", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws partition model endpoint r0", "$ r1 = r2 ssl common name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws partition model partition r0", "$ r1 = r2 dns suffix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws partition model partition r0", "r2 region regex = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com amazonaws partition model partition r0", "$ r2 = r3 region", "$ z0 = $ r2 contain key r1", "if $ z0 ! = 0 goto label1", "r4 = com amazonaws partition model partition r0", "$ z1 = specialinvoke r4 match region regex r1", "if $ z1 ! = 0 goto label1", "r5 = com amazonaws partition model partition r0", "$ z2 = specialinvoke r5 have service endpoint r1", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com amazonaws partition partition region impl r0", "$ z0 = r3 be service support r1", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r4 = com amazonaws partition partition region impl r0", "$ r2 = specialinvoke r4 get endpoint r1", "$ z1 = $ r2 have http support", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = com amazonaws protocol json internal marshaller registry r0", "return r6", "if r1 ! = null goto label1", "label r2 = com amazonaws protocol json internal marshaller registry builder", "r7 = com amazonaws protocol json internal marshaller registry r0", "$ r3 = r7 marshallers", "com amazonaws protocol json internal marshaller registry $ builder access $ 200 r2 $ r3", "$ r4 = com amazonaws protocol json internal marshaller registry $ builder access $ 000 r1", "com amazonaws protocol json internal marshaller registry $ builder access $ 200 r2 $ r4", "$ r5 = r2 build", "return $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws region region r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com amazonaws region region metadata factory create", "com amazonaws region region utils region metadata = $ r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = com amazonaws sdk base exception r0", "$ z0 = com amazonaws retry retry utils be request entity too large exception r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "com amazonaws s d k global time global time offset = i0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 name", "r3 = com amazonaws util a w s request metric full support r0", "r3 increment counter $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 name", "r4 = com amazonaws util a w s request metric full support r0", "r4 add property $ r3 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ r2 = r0", "goto label3", "label return $ r2", "if $ i0 ! = 0 goto label2", "label $ r1 = com amazonaws util base16 codec", "$ r2 = $ r1 encode r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = \\ `` \\ ``", "goto label3", "label return $ r3", "if $ i0 ! = 0 goto label2", "label $ r1 = com amazonaws util base32 codec", "$ r2 = $ r1 encode r0", "$ r3 = com amazonaws util codec utils to string direct $ r2"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ r2 = r0", "goto label3", "label return $ r2", "if $ i0 ! = 0 goto label2", "label $ r1 = com amazonaws util base32 codec", "$ i1 = lengthof r0", "$ r2 = $ r1 decode r0 $ i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ r2 = r0", "goto label3", "label return $ r2", "if $ i0 ! = 0 goto label2", "label $ r1 = com amazonaws util base64 codec", "$ i1 = lengthof r0", "$ r2 = $ r1 decode r0 $ i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ z0 = r0 have array", "if $ z0 == 0 goto label2", "$ r4 = r0 array", "$ i1 = r0 array offset", "$ i2 = r0 position", "$ i3 = $ i1 + $ i2", "$ i4 = r0 array offset", "$ i5 = r0 limit", "$ i6 = $ i4 + $ i5", "$ r5 = java util array copy of range $ r4 $ i3 $ i6", "return $ r5", "if $ z0 == 0 goto label2", "label $ i0 = r0 remain", "r1 = newarray byte [ $ i0 ]", "$ r2 = r0 a read only buffer", "$ r2 get r1", "return r1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com amazonaws util class loader helper get resource a stream r0 0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label r12 = new java math big decimal", "specialinvoke r12 < init > r0", "r13 = new java util date", "$ r3 = r12 scale by power of ten 3", "$ l0 = $ r3 long value", "specialinvoke r13 < init > $ l0", "label return r13"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["l0 = @ parameter0", "$ r0 = java util concurrent time unit milliseconds", "$ l1 = $ r0 to day l0", "return $ l1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com amazonaws util e c2 metadata utils fetch data \\ `` late meta-data local-ipv4\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["$ r0 = com amazonaws util e c2 metadata utils fetch data \\ `` late meta-data public-keys 0 openssh-key\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "r7 = @ parameter7", "r8 = @ parameter8", "r9 = @ parameter9", "$ r11 = new java util hash map", "specialinvoke $ r11 < init >", "com amazonaws util immutable map parameter put and warn duplicate key $ r11 r0 r1", "com amazonaws util immutable map parameter put and warn duplicate key $ r11 r2 r3", "com amazonaws util immutable map parameter put and warn duplicate key $ r11 r4 r5", "com amazonaws util immutable map parameter put and warn duplicate key $ r11 r6 r7", "com amazonaws util immutable map parameter put and warn duplicate key $ r11 r8 r9", "$ r12 = new com amazonaws util immutable map parameter", "specialinvoke $ r12 < init > $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws util string input stream r0", "$ r1 = r2 string", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r1 = r0 trim", "return $ r1"], "adj": [[1], [2], [], [4], [5], []]}
{"nodes": ["r2 = new com amazonaws util timing info full support", "$ l0 = java lang system current time millis", "$ r1 = java lang long value of $ l0", "$ l1 = java lang system nano time", "specialinvoke r2 < init > $ r1 $ l1 null", "r3 = com amazonaws util time info r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r10 = com amazonaws util x m l writer r0", "$ r2 = r10 element stack", "$ r3 = $ r2 pop", "r1 = java lang string $ r3", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r5 = r9 append \\ `` < \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` > \\ ``", "$ r8 = $ r7 to string", "r11 = com amazonaws util x m l writer r0", "specialinvoke r11 append $ r8", "r12 = com amazonaws util x m l writer r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 to string", "r4 = com amazonaws util x m l writer r0", "$ r3 = specialinvoke r4 escape x m l entity $ r2", "r5 = com amazonaws util x m l writer r0", "specialinvoke r5 append $ r3", "r6 = com amazonaws util x m l writer r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com amazonaws util xpath utils xpath", "$ r3 = com amazonaws util xpath utils a float r0 r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ i0 = 0", "goto label2", "label return $ i0", "if r0 ! = null goto label1", "label $ i0 = r0 get length"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r1 be null", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label $ z1 = r1 be array", "if $ z1 ! = 0 goto label2", "$ r5 = new java lang runtime exception", "specialinvoke $ r5 < init > \\ `` expect an array\\ ``", "throw $ r5", "if $ z1 ! = 0 goto label2", "label r2 = r1 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label5", "$ r4 = r2 next", "r3 = com fasterxml jackson databind json node $ r4", "$ z3 = r3 equal r0", "if $ z3 == 0 goto label4", "return 1", "if $ z3 == 0 goto label4", "label goto label3", "if $ z2 == 0 goto label5", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = com amazonaws service sqs amazon s q s async client r0", "$ r1 = r2 executor service", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "r5 = com amazonaws service sqs amazon s q s client r0", "r6 = com amazonaws amazon web service request r3", "$ r1 = r5 before client execution r6", "r4 = com amazonaws service sqs model delete message request $ r1", "r7 = com amazonaws service sqs amazon s q s client r0", "$ r2 = r7 execute delete message r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "r5 = com amazonaws service sqs amazon s q s client r0", "r6 = com amazonaws amazon web service request r3", "$ r1 = r5 before client execution r6", "r4 = com amazonaws service sqs model delete message batch request $ r1", "r7 = com amazonaws service sqs amazon s q s client r0", "$ r2 = r7 execute delete message batch r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "r5 = com amazonaws service sqs amazon s q s client r0", "r6 = com amazonaws amazon web service request r3", "$ r1 = r5 before client execution r6", "r4 = com amazonaws service sqs model list dead letter source queue request $ r1", "r7 = com amazonaws service sqs amazon s q s client r0", "$ r2 = r7 execute list dead letter source queue r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = @ parameter0", "r5 = com amazonaws service sqs amazon s q s client r0", "r6 = com amazonaws amazon web service request r3", "$ r1 = r5 before client execution r6", "r4 = com amazonaws service sqs model send message batch request $ r1", "r7 = com amazonaws service sqs amazon s q s client r0", "$ r2 = r7 execute send message batch r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com amazonaws service sqs buffer queue buffer r0", "r2 = r5 send message r1 null", "r6 = com amazonaws service sqs buffer queue buffer r0", "$ r3 = specialinvoke r6 wait for future r2", "$ r4 = com amazonaws service sqs model send message result $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com amazonaws service sqs buffer queue buffer r0", "r2 = r5 receive message r1 null", "r6 = com amazonaws service sqs buffer queue buffer r0", "$ r3 = specialinvoke r6 wait for future r2", "$ r4 = com amazonaws service sqs model receive message result $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model add permission request r0", "r2 label = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model batch result error entry r0", "r2 message = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model change message visibility batch result entry r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model change message visibility request r0", "r2 visibility timeout = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model create queue result r0", "r2 queue url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = com amazonaws service sqs model delete message batch result r0", "$ r1 = r5 successful", "if $ r1 ! = null goto label1", "r4 = new com amazonaws internal sdk internal list", "specialinvoke r4 < init >", "r6 = com amazonaws service sqs model delete message batch result r0", "r6 successful = r4", "label r7 = com amazonaws service sqs model delete message batch result r0", "$ r2 = r7 successful", "r8 = java util list $ r2", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model send message batch request entry r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com amazonaws service sqs model send message request r0", "r2 message body = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache axis attachment attachment part r0", "$ r3 = r6 mime header", "$ r4 = r1 to lower case", "r2 = $ r3 get header $ r4", "if r2 == null goto label1", "$ i0 = lengthof r2", "if $ i0 < = 0 goto label1", "$ r5 = r2 [ 0 ]", "return $ r5", "if $ i0 < = 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = org apache axis attachment attachment impl r0", "$ i1 = r19 sendtype", "if $ i1 ! = 1 goto label01", "$ i3 = 2", "goto label02", "label r21 = org apache axis attachment attachment impl r0", "specialinvoke r21 mergein attachment", "if $ i3 == 2 goto label03", "if $ i3 ! = 4 goto label09", "label r22 = org apache axis attachment attachment impl r0", "$ r5 = r22 multipart", "if $ r5 == null goto label04", "r23 = org apache axis attachment attachment impl r0", "$ r16 = r23 multipart", "goto label05", "label org apache axis attachment mime utils write to multi part stream r1 $ r16", "r28 = org apache axis attachment attachment impl r0", "$ r9 = r28 order attachment", "r17 = $ r9 iterator", "label $ z2 = r17 have next", "if $ z2 == 0 goto label08", "$ r10 = r17 next", "r2 = org apache axis attachment attachment part $ r10", "r29 = org apache axis part r2", "r3 = org apache axis attachment attachment utils get activation data handler r29", "r4 = r3 get data source", "if r4 == null goto label07", "$ z0 = r4 instanceof org apache axis attachment manage memory data source", "if $ z0 == 0 goto label07", "$ r11 = org apache axis attachment manage memory data source r4", "$ r11 delete", "label goto label06", "if $ z2 == 0 goto label08", "label goto label10", "label goto label12", "label return", "if $ r5 == null goto label04", "label r24 = org apache axis attachment attachment impl r0", "$ r6 = r24 soap part", "$ r7 = $ r6 get a string", "r25 = org apache axis attachment attachment impl r0", "$ r8 = r25 order attachment", "r26 = org apache axis attachment attachment impl r0", "$ i2 = r26 get send type", "$ r16 = org apache axis attachment mime utils create m p $ r7 $ r8 $ i2", "r27 = org apache axis attachment attachment impl r0", "r27 multipart = $ r16", "if $ i3 ! = 4 goto label09", "label if $ i3 ! = 3 goto label10", "r30 = org apache axis attachment attachment impl r0", "$ r13 = r30 create dime message", "$ r13 write r1", "if $ i1 ! = 1 goto label01", "label r20 = org apache axis attachment attachment impl r0", "$ i3 = r20 sendtype"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ this", "r11 = org apache axis attachment attachment impl r0", "$ z0 = r11 _asked for stream", "if $ z0 == 0 goto label1", "r10 = new java lang illegal state exception", "$ r6 = org apache axis utils message get message \\ `` concurrent modification of stream\\ ``", "specialinvoke r10 < init > $ r6", "throw r10", "if $ z0 == 0 goto label1", "label r12 = org apache axis attachment attachment impl r0", "r12 multipart = null", "r13 = org apache axis attachment attachment impl r0", "r13 dimemultipart = null", "r14 = org apache axis attachment attachment impl r0", "specialinvoke r14 mergein attachment", "r15 = org apache axis attachment attachment impl r0", "$ r2 = r15 attachment", "$ r2 clear", "r16 = org apache axis attachment attachment impl r0", "$ r3 = r16 order attachment", "$ r3 clear", "r17 = org apache axis attachment attachment impl r0", "$ r4 = r17 stack data handler", "$ r4 clear", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["i0 = @ parameter0", "if i0 ! = 4 goto label1", "return \\ `` mtom\\ ``", "if i0 ! = 4 goto label1", "label if i0 ! = 2 goto label2", "return \\ `` mime\\ ``", "label if i0 ! = 2 goto label2", "label if i0 ! = 3 goto label3", "return \\ `` dime\\ ``", "label if i0 ! = 3 goto label3", "label if i0 ! = 5 goto label4", "return \\ `` none\\ ``", "label if i0 ! = 5 goto label4", "label return null"], "adj": [[1], [2], [], [4], [5], [], [7], [8], [], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis attachment manage memory data source r0", "$ r1 = r2 disk cache file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache axis axis engine current message context", "$ r1 set r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis axis fault r0", "r2 clear fault detail", "r3 = org apache axis axis fault r0", "r3 add fault detail string r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis axis fault r0", "$ r1 = r2 fault header", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache common discovery tool manage property get property", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis axis service config impl r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache axis client admin client default configuration", "$ r1 set r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r3 = org apache axis client admin client log", "$ r4 = org apache axis utils message get message \\ `` do quit00\\ ``", "$ r3 debug $ r4", "r1 = \\ `` < mquit xmlnsm=\\\\\\ `` http xml apache org axis wsdd \\\\\\ `` > \\ ``", "r8 = new java io byte array input stream", "$ r6 = r1 get bytes", "specialinvoke r8 < init > $ r6", "r9 = org apache axis client admin client r0", "$ r7 = r9 process r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r7 = org apache axis client call r0", "$ z0 = r7 be property support r1", "if $ z0 ! = 0 goto label4", "label r6 = new javax xml rpc j a x r p c exception", "if r1 ! = null goto label2", "$ r5 = org apache axis utils message get message \\ `` bad prop03\\ ``", "goto label3", "label specialinvoke r6 < init > $ r5", "r8 = java lang throwable r6", "throw r8", "if r1 ! = null goto label2", "label $ r5 = org apache axis utils message get message \\ `` bad prop05\\", "if $ z0 ! = 0 goto label4", "label r9 = org apache axis client call r0", "$ r3 = r9 my property", "$ r3 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "z0 = @ parameter3", "r15 = org apache axis client call r0", "$ z1 = r15 operation set manually", "if $ z1 == 0 goto label1", "r12 = new java lang runtime exception", "$ r11 = org apache axis utils message get message \\ `` operation already set\\ ``", "specialinvoke r12 < init > $ r11", "throw r12", "if $ z1 == 0 goto label1", "label r16 = org apache axis client call r0", "$ r5 = r16 operation", "if $ r5 ! = null goto label2", "r13 = new org apache axis description operation desc", "specialinvoke r13 < init >", "r17 = org apache axis client call r0", "r17 operation = r13", "label r14 = new org apache axis description fault desc", "specialinvoke r14 < init >", "r14 set q name r1", "$ r7 = r2 get name", "r14 set class name $ r7", "r14 set xml type r3", "r14 set complex z0", "r18 = org apache axis client call r0", "$ r8 = r18 operation", "$ r8 add fault r14", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r35 = new javax xml rpc service exception", "$ r32 = org apache axis utils message get message \\ `` bad port00\\ ``", "specialinvoke r35 < init > $ r32", "r40 = java lang throwable r35", "throw r40", "if r1 ! = null goto label1", "label r41 = org apache axis client service r0", "$ r9 = r41 wsdl service", "if $ r9 ! = null goto label2", "r36 = new javax xml rpc service exception", "$ r30 = org apache axis utils message get message \\ `` wsdl missing00\\ ``", "specialinvoke r36 < init > $ r30", "r42 = java lang throwable r36", "throw r42", "if $ r9 ! = null goto label2", "label r43 = org apache axis client service r0", "$ r10 = r43 wsdl service", "$ r11 = r1 get local part", "r2 = $ r10 get port $ r11", "if r2 ! = null goto label3", "r38 = new javax xml rpc service exception", "r37 = new java lang string buffer", "specialinvoke r37 < init >", "$ r25 = r37 append \\ `` \\ ``", "$ r26 = $ r25 append r1", "$ r27 = $ r26 to string", "$ r28 = org apache axis utils message get message \\ `` no port00\\", "specialinvoke r38 < init > $ r28", "r44 = java lang throwable r38", "throw r44", "if r2 ! = null goto label3", "label r3 = r2 get bind", "r45 = org apache axis client service r0", "$ r12 = r45 wsdl parser", "r4 = $ r12 get symbol table", "$ r13 = r3 get q name", "r5 = r4 get bind entry $ r13", "$ r14 = r5 get parameter", "$ r15 = $ r14 key set", "r6 = $ r15 iterator", "r39 = new java util vector", "specialinvoke r39 < init >", "label $ z0 = r6 have next", "if $ z0 == 0 goto label5", "$ r18 = r6 next", "r33 = javax wsdl operation $ r18", "$ r19 = r2 get name", "$ r20 = javax xml namespace q name value of $ r19", "$ r21 = r33 get name", "$ r22 = javax xml namespace q name value of $ r21", "r46 = org apache axis client service r0", "r8 = r46 create call $ r20 $ r22", "r39 add r8", "goto label4", "if $ z0 == 0 goto label5", "label $ i0 = r39 size", "r34 = newarray javax xml rpc call [ $ i0 ]", "r39 to array r34", "return r34"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis client service r0", "r2 engine = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis client stub r0", "z0 = r1 first call", "r2 = org apache axis client stub r0", "r2 first call = 0", "return z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label01", "if r2 ! = null goto label04", "label r39 = new javax xml rpc j a x r p c exception", "if r1 ! = null goto label02", "$ r38 = \\ `` bad prop03\\ ``", "goto label03", "label $ r5 = org apache axis utils message get message $ r38", "specialinvoke r39 < init > $ r5", "r47 = java lang throwable r39", "throw r47", "if r1 ! = null goto label02", "label $ r38 = \\ `` bad prop04\\ ``", "if r2 ! = null goto label04", "label $ z0 = r1 equal \\ `` javax xml rpc security auth username\\ ``", "if $ z0 == 0 goto label06", "$ z10 = r2 instanceof java lang string", "if $ z10 ! = 0 goto label05", "r40 = new javax xml rpc j a x r p c exception", "$ r31 = newarray java lang string [ 3 ]", "$ r31 [ 0 ] = r1", "$ r31 [ 1 ] = \\ `` java lang string\\ ``", "$ r32 = r2 get class", "$ r33 = $ r32 get name", "$ r31 [ 2 ] = $ r33", "$ r34 = org apache axis utils message get message \\ `` bad prop00\\", "specialinvoke r40 < init > $ r34", "r48 = java lang throwable r40", "throw r48", "if $ z10 ! = 0 goto label05", "label $ r29 = java lang string r2", "r49 = org apache axis client stub r0", "r49 cache username = $ r29", "goto label17", "label return", "if $ z0 == 0 goto label06", "label $ z1 = r1 equal \\ `` javax xml rpc security auth password\\ ``", "if $ z1 == 0 goto label08", "$ z9 = r2 instanceof java lang string", "if $ z9 ! = 0 goto label07", "r41 = new javax xml rpc j a x r p c exception", "$ r25 = newarray java lang string [ 3 ]", "$ r25 [ 0 ] = r1", "$ r25 [ 1 ] = \\ `` java lang string\\ ``", "$ r26 = r2 get class", "$ r27 = $ r26 get name", "$ r25 [ 2 ] = $ r27", "$ r28 = org apache axis utils message get message \\ `` bad prop00\\", "specialinvoke r41 < init > $ r28", "r50 = java lang throwable r41", "throw r50", "if $ z9 ! = 0 goto label07", "label $ r23 = java lang string r2", "r51 = org apache axis client stub r0", "r51 cache password = $ r23", "if $ z1 == 0 goto label08", "label $ z2 = r1 equal \\ `` javax xml rpc service endpoint address\\ ``", "if $ z2 == 0 goto label12", "$ z8 = r2 instanceof java lang string", "if $ z8 ! = 0 goto label09", "r42 = new javax xml rpc j a x r p c exception", "$ r19 = newarray java lang string [ 3 ]", "$ r19 [ 0 ] = r1", "$ r19 [ 1 ] = \\ `` java lang string\\ ``", "$ r20 = r2 get class", "$ r21 = $ r20 get name", "$ r19 [ 2 ] = $ r21", "$ r22 = org apache axis utils message get message \\ `` bad prop00\\", "specialinvoke r42 < init > $ r22", "r52 = java lang throwable r42", "throw r52", "if $ z8 ! = 0 goto label09", "label r43 = new java net url", "$ r17 = java lang string r2", "specialinvoke r43 < init > $ r17", "r53 = org apache axis client stub r0", "r53 cache endpoint = r43", "label goto label17", "if $ z2 == 0 goto label12", "label $ z3 = r1 equal \\ `` javax xml rpc session maintain\\ ``", "if $ z3 == 0 goto label14", "$ z6 = r2 instanceof java lang boolean", "if $ z6 ! = 0 goto label13", "r45 = new javax xml rpc j a x r p c exception", "$ r12 = newarray java lang string [ 3 ]", "$ r12 [ 0 ] = r1", "$ r12 [ 1 ] = \\ `` java lang boolean\\ ``", "$ r13 = r2 get class", "$ r14 = $ r13 get name", "$ r12 [ 2 ] = $ r14", "$ r15 = org apache axis utils message get message \\ `` bad prop00\\", "specialinvoke r45 < init > $ r15", "r55 = java lang throwable r45", "throw r55", "if $ z6 ! = 0 goto label13", "label r56 = org apache axis client stub r0", "r56 maintain session set = 1", "$ r10 = java lang boolean r2", "$ z7 = $ r10 boolean value", "r57 = org apache axis client stub r0", "r57 maintain session = $ z7", "if $ z3 == 0 goto label14", "label $ z4 = r1 start with \\ `` java \\ ``", "if $ z4 ! = 0 goto label15", "$ z5 = r1 start with \\ `` javax \\ ``", "if $ z5 == 0 goto label16", "label r46 = new javax xml rpc j a x r p c exception", "$ r7 = org apache axis utils message get message \\ `` bad prop05\\", "specialinvoke r46 < init > $ r7", "r58 = java lang throwable r46", "throw r58", "if $ z5 == 0 goto label16", "label r59 = org apache axis client stub r0", "$ r8 = r59 cache property", "$ r8 put r1 r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [], [114], [115], [116], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = org apache axis client stub r0", "$ r5 = r7 header", "r6 = new org apache axis message s o a p header element", "specialinvoke r6 < init > r1 r2 r3", "$ r5 add r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i1 = 0", "label r9 = org apache axis client stub r0", "$ r4 = r9 header", "$ i0 = $ r4 size", "if i1 > = $ i0 goto label3", "r10 = org apache axis client stub r0", "$ r5 = r10 header", "$ r6 = $ r5 get i1", "r3 = org apache axis message s o a p header element $ r6", "$ r7 = r3 get namespace u r i", "$ z0 = $ r7 equal r1", "if $ z0 == 0 goto label2", "$ r8 = r3 get name", "$ z1 = $ r8 equal r2", "if $ z1 == 0 goto label2", "return r3", "if $ z1 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis component compiler abstract compiler r0", "r2 classpath = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis component compiler abstract compiler r0", "r2 encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis component compiler compiler error r0", "$ i0 = r1 endline", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis component compiler compiler error r0", "$ r1 = r2 message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = org apache axis component net socket factory factory factory", "$ r4 = $ r3 get r0", "r14 = org apache axis component net socket factory $ r4", "if r14 ! = null goto label7", "$ r5 = newarray java lang object [ 1 ]", "$ r5 [ 0 ] = r1", "$ z0 = r0 equal ignore case \\ `` http\\ ``", "if $ z0 == 0 goto label3", "$ r11 = org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ socket factory", "if $ r11 ! = null goto label1", "$ r15 = org apache axis component net socket factory factory class $ \\ `` org apache axis component net socket factory\\ ``", "org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ socket factory = $ r15", "goto label2", "label $ r12 = org apache axis component net socket factory factory class", "$ r13 = org apache axis axis property new instance $ r15 $ r12 $ r5", "r14 = org apache axis component net socket factory $ r13", "goto label6", "label if r14 == null goto label7", "$ r6 = org apache axis component net socket factory factory factory", "$ r6 put r0 r14", "label r17 = org apache axis component net socket factory r14", "return r17", "if $ r11 ! = null goto label1", "label $ r15 = org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ socket factory", "if $ z0 == 0 goto label3", "label $ z1 = r0 equal ignore case \\ `` https\\ ``", "if $ z1 == 0 goto label6", "$ r8 = org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ secure socket factory", "if $ r8 ! = null goto label4", "$ r16 = org apache axis component net socket factory factory class $ \\ `` org apache axis component net secure socket factory\\ ``", "org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ secure socket factory = $ r16", "goto label5", "label $ r9 = org apache axis component net socket factory factory class", "$ r10 = org apache axis axis property new instance $ r16 $ r9 $ r5", "r14 = org apache axis component net secure socket factory $ r10", "if $ r8 ! = null goto label4", "label $ r16 = org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ secure socket factory"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], []]}
{"nodes": ["$ r1 = org apache axis component script script factory class $ org $ apache $ axis $ component $ script $ script", "if $ r1 ! = null goto label1", "$ r10 = org apache axis component script script factory class $ \\ `` org apache axis component script script\\ ``", "org apache axis component script script factory class $ org $ apache $ axis $ component $ script $ script = $ r10", "goto label2", "label $ r2 = org apache axis axis property new instance $ r10", "r0 = org apache axis component script script $ r2", "$ r4 = org apache axis component script script factory log", "$ r3 = new java lang string buffer", "specialinvoke $ r3 < init >", "$ r5 = $ r3 append \\ `` axis script \\ ``", "$ r6 = r0 get class", "$ r7 = $ r6 get name", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 to string", "$ r4 debug $ r9", "return r0", "if $ r1 ! = null goto label1", "label $ r10 = org apache axis component script script factory class $ org $ apache $ axis $ component $ script $ script"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "$ r3 = org apache axis component threadpool thread pool log", "$ z0 = $ r3 be debug enabled", "if $ z0 == 0 goto label1", "$ r7 = org apache axis component threadpool thread pool log", "$ r7 debug \\ `` enter thread poolshutdown\\ ``", "label entermonitor r0", "label r9 = org apache axis component threadpool thread pool r0", "r9 _shutdown = 1", "exitmonitor r0", "label goto label6", "label r10 = org apache axis component threadpool thread pool r0", "r10 interrupt all", "$ r5 = org apache axis component threadpool thread pool log", "$ z1 = $ r5 be debug enabled", "if $ z1 == 0 goto label7", "$ r6 = org apache axis component threadpool thread pool log", "$ r6 debug \\ `` exit thread poolshutdown\\ ``", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = org apache axis configuration dir provider r0", "$ r1 = r3 deployment", "$ r2 = $ r1 get global request", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache axis deployment wsdd w s d d deployment r0", "$ r2 = r4 transport", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache axis deployment wsdd w s d d deployment r0", "$ r3 = r5 namespace to service", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis deployment wsdd w s d d documentation r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis deployment wsdd w s d d global configuration r0", "$ r1 = r2 response flow", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis description element desc r0", "r1 nillable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis description field desc r0", "$ r1 = r2 field name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis description operation desc r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis description parameter desc r0", "$ z0 = r1 nillable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis encode deserialization context r0", "$ r1 = r2 recorder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache axis constant qnames_nil", "$ r3 = org apache axis constant get value r1 $ r2", "$ z0 = org apache axis utils java utils be true explicitly $ r3 0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache axis encode deserializer impl r0", "$ r2 = r6 target", "if $ r2 ! = null goto label1", "r5 = new java util vector", "specialinvoke r5 < init >", "r7 = org apache axis encode deserializer impl r0", "r7 target = r5", "label r8 = org apache axis encode deserializer impl r0", "$ r3 = r8 target", "$ r3 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r20 = org apache axis encode ser base deserializer factory r0", "$ r3 = r20 java type", "if $ r3 == null goto label6", "r21 = org apache axis encode ser base deserializer factory r0", "$ r4 = r21 xml type", "if $ r4 == null goto label6", "r22 = org apache axis encode ser base deserializer factory r0", "r2 = r22 get get deserializer", "if r2 == null goto label6", "label $ r5 = newarray java lang object [ 3 ]", "$ r5 [ 0 ] = r1", "r23 = org apache axis encode ser base deserializer factory r0", "$ r6 = r23 java type", "$ r5 [ 1 ] = $ r6", "r24 = org apache axis encode ser base deserializer factory r0", "$ r7 = r24 xml type", "$ r5 [ 2 ] = $ r7", "$ r8 = r2 invoke null $ r5", "$ r9 = org apache axis encode deserializer $ r8", "label return $ r9", "if r2 == null goto label6", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r5 = org apache axis encode ser base deserializer factory r0", "$ r1 = r5 deser class constructor", "if $ r1 ! = null goto label1", "r6 = org apache axis encode ser base deserializer factory r0", "$ r3 = r6 deser class", "r7 = org apache axis encode ser base deserializer factory r0", "$ r4 = specialinvoke r7 get constructor $ r3", "r8 = org apache axis encode ser base deserializer factory r0", "r8 deser class constructor = $ r4", "label r9 = org apache axis encode ser base deserializer factory r0", "$ r2 = r9 deser class constructor", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis encode ser castor axis content handler r0", "$ r1 = r2 context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis encode serialization context r0", "$ z1 = r1 disable pretty x m l", "if $ z1 ! = 0 goto label1", "r2 = org apache axis encode serialization context r0", "r2 pretty = z0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r6 = org apache axis encode type mapping impl r0", "$ r2 = r6 namespaces", "$ i0 = $ r2 size", "r1 = newarray java lang string [ $ i0 ]", "r7 = org apache axis encode type mapping impl r0", "$ r3 = r7 namespaces", "$ r4 = $ r3 to array r1", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache axis handler soap s o a p service session", "r12 = org apache axis handler soap s o a p service r0", "$ r3 = r12 get name", "$ r4 = $ r2 get $ r3", "r10 = java util weak hash map $ r4", "if r10 ! = null goto label1", "r11 = new java util weak hash map", "specialinvoke r11 < init >", "r10 = r11", "$ r7 = org apache axis handler soap s o a p service session", "r13 = org apache axis handler soap s o a p service r0", "$ r8 = r13 get name", "$ r7 put $ r8 r11", "label $ z0 = r10 contain key r1", "if $ z0 ! = 0 goto label2", "r10 put r1 null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis handler soap s o a p service r0", "r1 be run = 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ z0 = org apache axis internal exception should log", "return $ z0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message message element r0", "$ r1 = r2 context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis message message element r0", "$ z0 = r1 _is root", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis message message element r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis message message element r0", "r2 namespace u r i = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r22 = @ parameter0", "if r22 ! = null goto label1", "r22 = \\ `` \\ ``", "label r25 = org apache axis message message element r0", "$ r2 = r25 href", "if $ r2 == null goto label2", "r26 = org apache axis message message element r0", "$ r19 = r26 get real element", "if $ r19 == null goto label2", "r27 = org apache axis message message element r0", "$ r20 = r27 get real element", "$ r21 = $ r20 get namespace u r i r22", "return $ r21", "if $ r19 == null goto label2", "label i1 = 0", "label r28 = org apache axis message message element r0", "$ r23 = r28 namespaces", "if $ r23 == null goto label5", "r29 = org apache axis message message element r0", "$ r14 = r29 namespaces", "$ i0 = $ r14 size", "if i1 > = $ i0 goto label5", "r30 = org apache axis message message element r0", "$ r15 = r30 namespaces", "$ r16 = $ r15 get i1", "r1 = org apache axis utils map $ r16", "$ r17 = r1 get prefix", "$ z1 = $ r17 equal r22", "if $ z1 == 0 goto label4", "$ r18 = r1 get namespace u r i", "return $ r18", "if $ z1 == 0 goto label4", "label i1 = i1 + 1", "goto label3", "if i1 > = $ i0 goto label5", "label r31 = org apache axis message message element r0", "$ r3 = r31 parent", "if $ r3 == null goto label6", "r32 = org apache axis message message element r0", "$ r11 = r32 parent", "$ r12 = org apache axis message message element $ r11", "$ r13 = $ r12 get namespace u r i r22", "return $ r13", "if $ r3 == null goto label6", "label $ r4 = org apache axis message message element log", "$ z0 = $ r4 be debug enabled", "if $ z0 == 0 goto label7", "$ r6 = org apache axis message message element log", "r24 = new java lang string buffer", "specialinvoke r24 < init >", "$ r7 = r24 append \\ `` \\ ``", "$ r8 = $ r7 append r0", "$ r9 = $ r8 to string", "$ r10 = org apache axis utils message get message \\ `` no prefix00\\", "$ r6 debug $ r10", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ this", "r4 = null", "label r5 = org apache axis message message element r0", "r4 = r5 get object value null", "label goto label4", "label return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 set dirty", "r2 = org apache axis message message element r0", "r2 message = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = @ parameter0", "r1 = @ parameter1", "if r8 ! = null goto label1", "r8 = \\ `` \\ ``", "label i0 = 0", "label r10 = org apache axis message message element r0", "$ r9 = r10 attribute", "$ i1 = $ r9 get length", "if i0 > = $ i1 goto label4", "r11 = org apache axis message message element r0", "$ r2 = r11 attribute", "$ r3 = $ r2 get u r i i0", "$ z0 = $ r3 equal r8", "if $ z0 == 0 goto label3", "r12 = org apache axis message message element r0", "$ r4 = r12 attribute", "$ r5 = $ r4 get local name i0", "$ z1 = $ r5 equal r1", "if $ z1 == 0 goto label3", "r13 = org apache axis message message element r0", "$ r6 = r13 attribute", "$ r7 = $ r6 get value i0", "return $ r7", "if $ z1 == 0 goto label3", "label i0 = i0 + 1", "goto label2", "if i0 > = $ i1 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r6 = org apache axis message name node map impl r0", "$ r1 = r6 node", "if $ r1 == null goto label1", "r7 = org apache axis message name node map impl r0", "$ r2 = r7 node", "$ i1 = $ r2 size", "if i0 > = $ i1 goto label1", "r8 = org apache axis message name node map impl r0", "$ r3 = r8 node", "$ r4 = $ r3 element at i0", "$ r5 = org w3c dom node $ r4", "goto label2", "label return $ r5", "if i0 > = $ i1 goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache axis message node impl r0", "r5 initialize child", "r6 = org apache axis message node impl r0", "$ r3 = r6 child", "i0 = $ r3 index of r2", "if i0 > = 0 goto label1", "i0 = 0", "label r7 = org apache axis message node impl r0", "$ r4 = r7 child", "$ r4 add i0 r1", "r8 = org apache axis message node impl r0", "r8 set dirty", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = org apache axis message node impl r0", "$ r2 = r14 text rep", "if $ r2 ! = null goto label1", "return", "if $ r2 ! = null goto label1", "label z0 = r1 get pretty", "r1 set pretty 0", "r15 = org apache axis message node impl r0", "$ r3 = r15 text rep", "$ z1 = $ r3 instanceof org w3c dom c d a t a section", "if $ z1 == 0 goto label2", "r1 write string \\ `` < ! [ cdata [ \\ ``", "r16 = org apache axis message node impl r0", "$ r11 = r16 text rep", "$ r12 = org w3c dom text $ r11", "$ r13 = $ r12 get data", "r1 write string $ r13", "r1 write string \\ `` ] ] > \\ ``", "goto label4", "label r1 set pretty z0", "if $ z1 == 0 goto label2", "label r17 = org apache axis message node impl r0", "$ r4 = r17 text rep", "$ z2 = $ r4 instanceof org w3c dom comment", "if $ z2 == 0 goto label3", "r1 write string \\ `` < ! -- \\ ``", "r18 = org apache axis message node impl r0", "$ r9 = r18 text rep", "$ r10 = $ r9 get data", "r1 write string $ r10", "r1 write string \\ `` -- > \\ ``", "if $ z2 == 0 goto label3", "label r19 = org apache axis message node impl r0", "$ r5 = r19 text rep", "$ z3 = $ r5 instanceof org w3c dom text", "if $ z3 == 0 goto label4", "r20 = org apache axis message node impl r0", "$ r6 = r20 text rep", "$ r7 = org w3c dom text $ r6", "$ r8 = $ r7 get data", "r1 write safe string $ r8"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r4 = org apache axis message s o a p envelope r0", "$ r1 = r4 header", "if $ r1 == null goto label1", "r5 = org apache axis message s o a p envelope r0", "$ r2 = r5 header", "r6 = org apache axis message s o a p envelope r0", "r7 = org w3c dom node $ r2", "r6 remove child r7", "label r8 = org apache axis message s o a p envelope r0", "r8 header = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis message s o a p envelope r0", "r2 soap constant = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis message s o a p fault r0", "$ r2 = r3 fault", "$ r2 set fault actor r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org apache axis message s o a p header element r0", "$ z0 = r18 already serialize", "if $ z0 ! = 0 goto label8", "r19 = org apache axis message s o a p header element r0", "r2 = specialinvoke r19 get s o a p constant", "r3 = r2 get role attribute q name", "r20 = org apache axis message s o a p header element r0", "$ r4 = r20 actor", "if $ r4 == null goto label1", "$ r10 = r3 get namespace u r i", "$ r11 = r3 get local part", "r21 = org apache axis message s o a p header element r0", "$ r12 = r21 actor", "r22 = org apache axis message s o a p header element r0", "r22 set attribute $ r10 $ r11 $ r12", "label $ r5 = r1 get message context", "if $ r5 == null goto label4", "$ r7 = r1 get message context", "$ r8 = $ r7 get s o a p constant", "$ r9 = org apache axis soap s o a p constants soap12_constants", "if $ r8 ! = $ r9 goto label4", "r23 = org apache axis message s o a p header element r0", "$ z3 = r23 must understand", "if $ z3 == 0 goto label2", "$ r13 = \\ `` true\\ ``", "goto label3", "label r14 = $ r13", "goto label7", "label $ r16 = r2 get envelope u r i", "r25 = org apache axis message s o a p header element r0", "r25 set attribute $ r16 \\ `` must understand\\", "$ r17 = org apache axis soap s o a p constants soap12_constants", "if r2 ! = $ r17 goto label8", "r26 = org apache axis message s o a p header element r0", "$ z2 = r26 relay", "if $ z2 == 0 goto label8", "$ r6 = r2 get envelope u r i", "r27 = org apache axis message s o a p header element r0", "r27 set attribute $ r6 \\ `` relay\\", "label specialinvoke r0 output impl r1", "return", "if $ z3 == 0 goto label2", "label $ r13 = \\ `` false\\ ``", "if $ r8 ! = $ r9 goto label4", "label r24 = org apache axis message s o a p header element r0", "$ z1 = r24 must understand", "if $ z1 == 0 goto label5", "$ r15 = \\ `` 1\\ ``", "goto label6", "label r14 = $ r15", "if $ z1 == 0 goto label5", "label $ r15 = \\ `` 0\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [], [52], [53], []]}
{"nodes": ["$ r0 = org apache axis message m attachment impl class name", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis message context r0", "r2 map registry = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message context r0", "$ r1 = r2 soap constant", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message context r0", "$ r1 = r2 schema version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message context r0", "$ r1 = r2 response message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis message context r0", "$ r1 = r2 get current message", "r3 = javax xml soap s o a p message $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis message context r0", "$ r2 = r3 bag", "$ r2 set parent r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache axis provider java java provider r0", "$ r2 = r5 get service class name option name", "$ r3 = r1 get option $ r2", "$ r4 = java lang string $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache axis session simple session r0", "r1 timeout = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ l0 = java lang system current time millis", "r1 = org apache axis session simple session r0", "r1 last touch = $ l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis session simple session r0", "r1 rep = null", "$ l0 = java lang system current time millis", "r2 = org apache axis session simple session r0", "r2 last touch = $ l0", "r3 = org apache axis session simple session r0", "r3 timeout = -1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache axis soap s o a p11 constant role q name", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return \\ `` http schemas xmlsoap org soap actor next\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return \\ `` href\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache axis constant soap_array", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache axis soap s o a p connection impl", "specialinvoke r2 < init >", "r3 = javax xml soap s o a p connection r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r34 = org apache axis soap s o a p connection impl r0", "$ z0 = r34 close", "if $ z0 == 0 goto label1", "r30 = new javax xml soap s o a p exception", "$ r19 = org apache axis utils message get message \\ `` connection closed00\\ ``", "specialinvoke r30 < init > $ r19", "r35 = java lang throwable r30", "throw r35", "if $ z0 == 0 goto label1", "label r31 = new org apache axis client call", "$ r6 = r2 to string", "specialinvoke r31 < init > $ r6", "$ r7 = org apache axis message r1", "$ r8 = r31 get message context", "$ r7 set message context $ r8", "$ r9 = org apache axis message r1", "r3 = $ r9 get attachment impl", "if r3 == null goto label3", "$ r17 = r3 get attachment", "r25 = $ r17 iterator", "label $ z1 = r25 have next", "if $ z1 == 0 goto label3", "r4 = r25 next", "r31 add attachment part r4", "goto label2", "if $ z1 == 0 goto label3", "label r36 = org apache axis soap s o a p connection impl r0", "r26 = specialinvoke r36 check for s o a p action header r1", "if r26 == null goto label4", "r31 set s o a p action u r i r26", "label r37 = org apache axis soap s o a p connection impl r0", "$ r10 = r37 timeout", "r31 set timeout $ r10", "$ r11 = org apache axis soap s o a p connection impl class $ javax $ xml $ soap $ s o a p message", "if $ r11 ! = null goto label5", "$ r27 = org apache axis soap s o a p connection impl class $ \\ `` javax xml soap s o a p message\\ ``", "org apache axis soap s o a p connection impl class $ javax $ xml $ soap $ s o a p message = $ r27", "goto label6", "label r31 set return class $ r27", "$ r12 = java lang boolean false", "r31 set property \\ `` call check must understand\\", "$ r13 = org apache axis message r1", "r31 invoke $ r13", "$ r15 = r31 get response message", "label r38 = javax xml soap s o a p message $ r15", "return r38", "if $ r11 ! = null goto label5", "label $ r27 = org apache axis soap s o a p connection impl class $ javax $ xml $ soap $ s o a p message"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [], [50], []]}
{"nodes": ["r0 = @ this", "r7 = org apache axis transport http auto register servlet r0", "r1 = r7 get resource to register", "if r1 == null goto label1", "$ i0 = lengthof r1", "if $ i0 ! = 0 goto label2", "label return", "if $ i0 ! = 0 goto label2", "label i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label4", "r2 = r1 [ i2 ]", "r8 = org apache axis transport http auto register servlet r0", "r8 register and log resource r2", "i2 = i2 + 1", "goto label3", "if i2 > = $ i1 goto label4", "label r9 = org apache axis transport http auto register servlet r0", "r9 register anything else", "label r10 = org apache axis transport http auto register servlet r0", "r10 apply and save setting", "label goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis transport http axis http session r0", "r2 ensure session", "r3 = org apache axis transport http axis http session r0", "$ r1 = r3 rep", "$ i0 = $ r1 get max inactive interval", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get session", "org apache axis transport http axis h t t p session listener destroy session r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis transport http simple axis server r0", "$ i0 = r1 max session", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache axis transport http simple axis server my axis server", "if $ r1 ! = null goto label2", "r18 = org apache axis transport http simple axis server r0", "$ r2 = r18 my config", "if $ r2 ! = null goto label1", "$ r13 = org apache axis configuration engine configuration factory finder new factory", "$ r14 = $ r13 get server engine config", "r19 = org apache axis transport http simple axis server r0", "r19 my config = $ r14", "label r16 = new org apache axis server axis server", "r20 = org apache axis transport http simple axis server r0", "$ r4 = r20 my config", "specialinvoke r16 < init > $ r4", "org apache axis transport http simple axis server my axis server = r16", "$ r6 = org apache axis transport http simple axis server my axis server", "r17 = new java lang string buffer", "specialinvoke r17 < init >", "$ r7 = org apache axis utils network utils get local hostname", "$ r8 = r17 append $ r7", "$ r9 = $ r8 append \\ `` @ \\ ``", "r21 = org apache axis transport http simple axis server r0", "$ r10 = r21 server socket", "$ i0 = $ r10 get local port", "$ r11 = $ r9 append $ i0", "$ r12 = $ r11 to string", "org apache axis management service admin set engine $ r6 $ r12", "label $ r15 = org apache axis transport http simple axis server my axis server", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache axis transport jms j m s endpoint r0", "$ r2 = r4 m_connector", "$ r3 = $ r2 get send connection", "r5 = org apache axis transport jms j m s endpoint r0", "$ r3 send r5 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = r2", "if r0 == null goto label1", "$ z0 = r0 contain key r1", "if $ z0 == 0 goto label1", "r3 = r0 remove r1", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache axis server axis server", "specialinvoke r2 < init >", "r3 = org apache axis transport local local sender r0", "r3 server = r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i2 = 0", "i3 = 0", "label r4 = org apache axis type n m token r0", "$ r1 = r4 token", "$ i0 = lengthof $ r1", "if i3 > = $ i0 goto label2", "r5 = org apache axis type n m token r0", "$ r2 = r5 token", "$ r3 = $ r2 [ i3 ]", "$ i1 = $ r3 hash code", "i2 = i2 + $ i1", "i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label2", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r3 = org apache axis type time r0", "$ r1 = r3 _value", "if $ r1 ! = null goto label1", "$ i0 = 0", "goto label2", "label return $ i0", "if $ r1 ! = null goto label1", "label r4 = org apache axis type time r0", "$ r2 = r4 _value", "$ i0 = $ r2 hash code"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis type uri r0", "$ r1 = r2 m_scheme", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis type uri r0", "$ r1 = r2 m_fragment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "if i0 > 65535 goto label1", "r6 = org apache axis type uri r0", "$ r2 = r6 m_host", "if $ r2 ! = null goto label2", "r4 = new org apache axis type uri $ malformed u r i exception", "specialinvoke r4 < init > \\ `` port can not be set when host be null ! \\ ``", "r7 = java lang throwable r4", "throw r7", "if $ r2 ! = null goto label2", "label r9 = org apache axis type uri r0", "r9 m_port = i0", "return", "if i0 > 65535 goto label1", "label if i0 == -1 goto label2", "r5 = new org apache axis type uri $ malformed u r i exception", "specialinvoke r5 < init > \\ `` invalid port number ! \\ ``", "r8 = java lang throwable r5", "throw r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label01", "$ r2 = r1 trim", "$ i0 = $ r2 length", "if $ i0 ! = 0 goto label02", "label return", "if $ i0 ! = 0 goto label02", "label $ z0 = org apache axis type uri be u r i string r1", "if $ z0 ! = 0 goto label03", "r25 = new org apache axis type uri $ malformed u r i exception", "specialinvoke r25 < init > \\ `` path contains invalid character ! \\ ``", "r28 = java lang throwable r25", "throw r28", "if $ z0 ! = 0 goto label03", "label r29 = org apache axis type uri r0", "$ r3 = r29 m_path", "if $ r3 == null goto label04", "r30 = org apache axis type uri r0", "$ r8 = r30 m_path", "$ r9 = $ r8 trim", "$ i1 = $ r9 length", "if $ i1 ! = 0 goto label06", "label $ z1 = r1 start with \\ `` \\ ``", "if $ z1 == 0 goto label05", "r31 = org apache axis type uri r0", "r31 m_path = r1", "goto label10", "label return", "if $ z1 == 0 goto label05", "label r26 = new java lang string buffer", "specialinvoke r26 < init >", "$ r5 = r26 append \\ `` \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 to string", "r32 = org apache axis type uri r0", "r32 m_path = $ r7", "if $ i1 ! = 0 goto label06", "label r33 = org apache axis type uri r0", "$ r10 = r33 m_path", "$ z2 = $ r10 end with \\ `` \\ ``", "if $ z2 == 0 goto label08", "$ z4 = r1 start with \\ `` \\ ``", "if $ z4 == 0 goto label07", "r34 = org apache axis type uri r0", "$ r21 = r34 m_path", "$ r22 = r1 substring 1", "$ r23 = $ r21 concat $ r22", "r35 = org apache axis type uri r0", "r35 m_path = $ r23", "if $ z4 == 0 goto label07", "label r36 = org apache axis type uri r0", "$ r19 = r36 m_path", "$ r20 = $ r19 concat r1", "r37 = org apache axis type uri r0", "r37 m_path = $ r20", "if $ z2 == 0 goto label08", "label $ z3 = r1 start with \\ `` \\ ``", "if $ z3 == 0 goto label09", "r38 = org apache axis type uri r0", "$ r17 = r38 m_path", "$ r18 = $ r17 concat r1", "r39 = org apache axis type uri r0", "r39 m_path = $ r18", "if $ z3 == 0 goto label09", "label r40 = org apache axis type uri r0", "$ r12 = r40 m_path", "r27 = new java lang string buffer", "specialinvoke r27 < init >", "$ r13 = r27 append \\ `` \\ ``", "$ r14 = $ r13 append r1", "$ r15 = $ r14 to string", "$ r16 = $ r12 concat $ r15", "r41 = org apache axis type uri r0", "r41 m_path = $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], []]}
{"nodes": ["r0 = @ this", "r3 = org apache axis utils bean property descriptor r0", "$ r1 = r3 my p d", "$ r2 = $ r1 get read method", "if $ r2 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org apache axis utils bean property descriptor r0", "$ r1 = r5 my p d", "$ r2 = $ r1 get property type", "if $ r2 == null goto label1", "r6 = org apache axis utils bean property descriptor r0", "$ r3 = r6 my p d", "$ r4 = $ r3 get property type", "$ z0 = $ r4 be array", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r11 = org apache axis utils bean property descriptor r0", "$ z0 = r11 be indexed", "if $ z0 ! = 0 goto label1", "r12 = org apache axis utils bean property descriptor r0", "$ r8 = r12 get r1", "$ r9 = java lang reflect array get $ r8 i0", "return $ r9", "if $ z0 ! = 0 goto label1", "label r13 = org apache axis utils bean property descriptor r0", "$ r3 = r13 my p d", "r2 = java bean indexed property descriptor $ r3", "$ r4 = r2 get index read method", "$ r5 = newarray java lang object [ 1 ]", "r10 = new java lang integer", "specialinvoke r10 < init > i0", "$ r5 [ 0 ] = r10", "$ r7 = $ r4 invoke r1 $ r5", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r1 = org apache axis utils class utils classloaders", "$ r2 = $ r1 get r0", "$ r3 = java lang class loader $ r2", "return $ r3"], "adj": [[1], [2], [], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = new org apache axis utils i d key", "specialinvoke $ r3 < init > r1", "$ z0 = specialinvoke r0 contains key $ r3", "if $ z0 ! = 0 goto label1", "$ r4 = specialinvoke r0 put $ r3 r1", "return $ r4", "if $ z0 ! = 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be primitive", "if $ z0 ! = 0 goto label69", "$ r1 = org apache axis utils java utils class $ java $ lang $ string", "if $ r1 ! = null goto label01", "$ r68 = org apache axis utils java utils class $ \\ `` java lang string\\ ``", "org apache axis utils java utils class $ java $ lang $ string = $ r68", "goto label02", "label if r0 == $ r68 goto label69", "$ r2 = org apache axis utils java utils class $ java $ lang $ boolean", "if $ r2 ! = null goto label03", "$ r69 = org apache axis utils java utils class $ \\ `` java lang boolean\\ ``", "org apache axis utils java utils class $ java $ lang $ boolean = $ r69", "goto label04", "label if r0 == $ r69 goto label69", "$ r3 = org apache axis utils java utils class $ java $ lang $ float", "if $ r3 ! = null goto label05", "$ r70 = org apache axis utils java utils class $ \\ `` java lang float\\ ``", "org apache axis utils java utils class $ java $ lang $ float = $ r70", "goto label06", "label if r0 == $ r70 goto label69", "$ r4 = org apache axis utils java utils class $ java $ lang $ double", "if $ r4 ! = null goto label07", "$ r71 = org apache axis utils java utils class $ \\ `` java lang double\\ ``", "org apache axis utils java utils class $ java $ lang $ double = $ r71", "goto label08", "label if r0 == $ r71 goto label69", "$ r5 = org apache axis utils java utils class $ java $ lang $ number", "if $ r5 ! = null goto label09", "$ r72 = org apache axis utils java utils class $ \\ `` java lang number\\ ``", "org apache axis utils java utils class $ java $ lang $ number = $ r72", "goto label10", "label $ z1 = $ r72 be assignable from r0", "if $ z1 ! = 0 goto label69", "$ r6 = org apache axis utils java utils class $ org $ apache $ axis $ type $ day", "if $ r6 ! = null goto label11", "$ r73 = org apache axis utils java utils class $ \\ `` org apache axis type day\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ day = $ r73", "goto label12", "label if r0 == $ r73 goto label69", "$ r7 = org apache axis utils java utils class $ org $ apache $ axis $ type $ duration", "if $ r7 ! = null goto label13", "$ r74 = org apache axis utils java utils class $ \\ `` org apache axis type duration\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ duration = $ r74", "goto label14", "label if r0 == $ r74 goto label69", "$ r8 = org apache axis utils java utils class $ org $ apache $ axis $ type $ entity", "if $ r8 ! = null goto label15", "$ r75 = org apache axis utils java utils class $ \\ `` org apache axis type entities\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ entity = $ r75", "goto label16", "label if r0 == $ r75 goto label69", "$ r9 = org apache axis utils java utils class $ org $ apache $ axis $ type $ entity", "if $ r9 ! = null goto label17", "$ r76 = org apache axis utils java utils class $ \\ `` org apache axis type entity\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ entity = $ r76", "goto label18", "label if r0 == $ r76 goto label69", "$ r10 = org apache axis utils java utils class $ org $ apache $ axis $ type $ hex binary", "if $ r10 ! = null goto label19", "$ r77 = org apache axis utils java utils class $ \\ `` org apache axis type hex binary\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ hex binary = $ r77", "goto label20", "label if r0 == $ r77 goto label69", "$ r11 = org apache axis utils java utils class $ org $ apache $ axis $ type $ id", "if $ r11 ! = null goto label21", "$ r78 = org apache axis utils java utils class $ \\ `` org apache axis type id\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ id = $ r78", "goto label22", "label if r0 == $ r78 goto label69", "$ r12 = org apache axis utils java utils class $ org $ apache $ axis $ type $ i d ref", "if $ r12 ! = null goto label23", "$ r79 = org apache axis utils java utils class $ \\ `` org apache axis type i d ref\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ i d ref = $ r79", "goto label24", "label if r0 == $ r79 goto label69", "$ r13 = org apache axis utils java utils class $ org $ apache $ axis $ type $ i d refs", "if $ r13 ! = null goto label25", "$ r80 = org apache axis utils java utils class $ \\ `` org apache axis type i d refs\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ i d refs = $ r80", "goto label26", "label if r0 == $ r80 goto label69", "$ r14 = org apache axis utils java utils class $ org $ apache $ axis $ type $ language", "if $ r14 ! = null goto label27", "$ r81 = org apache axis utils java utils class $ \\ `` org apache axis type language\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ language = $ r81", "goto label28", "label if r0 == $ r81 goto label69", "$ r15 = org apache axis utils java utils class $ org $ apache $ axis $ type $ month", "if $ r15 ! = null goto label29", "$ r82 = org apache axis utils java utils class $ \\ `` org apache axis type month\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ month = $ r82", "goto label30", "label if r0 == $ r82 goto label69", "$ r16 = org apache axis utils java utils class $ org $ apache $ axis $ type $ month day", "if $ r16 ! = null goto label31", "$ r83 = org apache axis utils java utils class $ \\ `` org apache axis type month day\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ month day = $ r83", "goto label32", "label if r0 == $ r83 goto label69", "$ r17 = org apache axis utils java utils class $ org $ apache $ axis $ type $ name", "if $ r17 ! = null goto label33", "$ r84 = org apache axis utils java utils class $ \\ `` org apache axis type name\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ name = $ r84", "goto label34", "label if r0 == $ r84 goto label69", "$ r18 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n c name", "if $ r18 ! = null goto label35", "$ r85 = org apache axis utils java utils class $ \\ `` org apache axis type n c name\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ n c name = $ r85", "goto label36", "label if r0 == $ r85 goto label69", "$ r19 = org apache axis utils java utils class $ org $ apache $ axis $ type $ negative integer", "if $ r19 ! = null goto label37", "$ r86 = org apache axis utils java utils class $ \\ `` org apache axis type negative integer\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ negative integer = $ r86", "goto label38", "label if r0 == $ r86 goto label69", "$ r20 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token", "if $ r20 ! = null goto label39", "$ r87 = org apache axis utils java utils class $ \\ `` org apache axis type n m token\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token = $ r87", "goto label40", "label if r0 == $ r87 goto label69", "$ r21 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token", "if $ r21 ! = null goto label41", "$ r88 = org apache axis utils java utils class $ \\ `` org apache axis type n m tokens\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ n m tokens = $ r88", "goto label42", "label if r0 == $ r88 goto label69", "$ r22 = org apache axis utils java utils class $ org $ apache $ axis $ type $ non negative integer", "if $ r22 ! = null goto label43", "$ r89 = org apache axis utils java utils class $ \\ `` org apache axis type non negative integer\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ non negative integer = $ r89", "goto label44", "label if r0 == $ r89 goto label69", "$ r23 = org apache axis utils java utils class $ org $ apache $ axis $ type $ non positive integer", "if $ r23 ! = null goto label45", "$ r90 = org apache axis utils java utils class $ \\ `` org apache axis type non positive integer\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ non positive integer = $ r90", "goto label46", "label if r0 == $ r90 goto label69", "$ r24 = org apache axis utils java utils class $ org $ apache $ axis $ type $ normalized string", "if $ r24 ! = null goto label47", "$ r91 = org apache axis utils java utils class $ \\ `` org apache axis type normalize string\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ normalized string = $ r91", "goto label48", "label if r0 == $ r91 goto label69", "$ r25 = org apache axis utils java utils class $ org $ apache $ axis $ type $ positive integer", "if $ r25 ! = null goto label49", "$ r92 = org apache axis utils java utils class $ \\ `` org apache axis type positive integer\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ positive integer = $ r92", "goto label50", "label if r0 == $ r92 goto label69", "$ r26 = org apache axis utils java utils class $ org $ apache $ axis $ type $ time", "if $ r26 ! = null goto label51", "$ r93 = org apache axis utils java utils class $ \\ `` org apache axis type time\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ time = $ r93", "goto label52", "label if r0 == $ r93 goto label69", "$ r27 = org apache axis utils java utils class $ org $ apache $ axis $ type $ token", "if $ r27 ! = null goto label53", "$ r94 = org apache axis utils java utils class $ \\ `` org apache axis type token\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ token = $ r94", "goto label54", "label if r0 == $ r94 goto label69", "$ r28 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned byte", "if $ r28 ! = null goto label55", "$ r95 = org apache axis utils java utils class $ \\ `` org apache axis type unsigned byte\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned byte = $ r95", "goto label56", "label if r0 == $ r95 goto label69", "$ r29 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned int", "if $ r29 ! = null goto label57", "$ r96 = org apache axis utils java utils class $ \\ `` org apache axis type unsigned int\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned int = $ r96", "goto label58", "label if r0 == $ r96 goto label69", "$ r30 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned long", "if $ r30 ! = null goto label59", "$ r97 = org apache axis utils java utils class $ \\ `` org apache axis type unsigned long\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned long = $ r97", "goto label60", "label if r0 == $ r97 goto label69", "$ r31 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned short", "if $ r31 ! = null goto label61", "$ r98 = org apache axis utils java utils class $ \\ `` org apache axis type unsigned short\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned short = $ r98", "goto label62", "label if r0 == $ r98 goto label69", "$ r32 = org apache axis utils java utils class $ org $ apache $ axis $ type $ uri", "if $ r32 ! = null goto label63", "$ r99 = org apache axis utils java utils class $ \\ `` org apache axis type uri\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ uri = $ r99", "goto label64", "label if r0 == $ r99 goto label69", "$ r33 = org apache axis utils java utils class $ org $ apache $ axis $ type $ year", "if $ r33 ! = null goto label65", "$ r100 = org apache axis utils java utils class $ \\ `` org apache axis type year\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ year = $ r100", "goto label66", "label if r0 == $ r100 goto label69", "$ r34 = org apache axis utils java utils class $ org $ apache $ axis $ type $ year month", "if $ r34 ! = null goto label67", "$ r101 = org apache axis utils java utils class $ \\ `` org apache axis type year month\\ ``", "org apache axis utils java utils class $ org $ apache $ axis $ type $ year month = $ r101", "goto label68", "label if r0 ! = $ r101 goto label70", "label $ z2 = 1", "goto label71", "label return $ z2", "label if r0 ! = $ r101 goto label70", "label $ z2 = 0", "if $ r34 ! = null goto label67", "label $ r101 = org apache axis utils java utils class $ org $ apache $ axis $ type $ year month", "if $ r33 ! = null goto label65", "label $ r100 = org apache axis utils java utils class $ org $ apache $ axis $ type $ year", "if $ r32 ! = null goto label63", "label $ r99 = org apache axis utils java utils class $ org $ apache $ axis $ type $ uri", "if $ r31 ! = null goto label61", "label $ r98 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned short", "if $ r30 ! = null goto label59", "label $ r97 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned long", "if $ r29 ! = null goto label57", "label $ r96 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned int", "if $ r28 ! = null goto label55", "label $ r95 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned byte", "if $ r27 ! = null goto label53", "label $ r94 = org apache axis utils java utils class $ org $ apache $ axis $ type $ token", "if $ r26 ! = null goto label51", "label $ r93 = org apache axis utils java utils class $ org $ apache $ axis $ type $ time", "if $ r25 ! = null goto label49", "label $ r92 = org apache axis utils java utils class $ org $ apache $ axis $ type $ positive integer", "if $ r24 ! = null goto label47", "label $ r91 = org apache axis utils java utils class $ org $ apache $ axis $ type $ normalized string", "if $ r23 ! = null goto label45", "label $ r90 = org apache axis utils java utils class $ org $ apache $ axis $ type $ non positive integer", "if $ r22 ! = null goto label43", "label $ r89 = org apache axis utils java utils class $ org $ apache $ axis $ type $ non negative integer", "if $ r21 ! = null goto label41", "label $ r88 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token", "if $ r20 ! = null goto label39", "label $ r87 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token", "if $ r19 ! = null goto label37", "label $ r86 = org apache axis utils java utils class $ org $ apache $ axis $ type $ negative integer", "if $ r18 ! = null goto label35", "label $ r85 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n c name", "if $ r17 ! = null goto label33", "label $ r84 = org apache axis utils java utils class $ org $ apache $ axis $ type $ name", "if $ r16 ! = null goto label31", "label $ r83 = org apache axis utils java utils class $ org $ apache $ axis $ type $ month day", "if $ r15 ! = null goto label29", "label $ r82 = org apache axis utils java utils class $ org $ apache $ axis $ type $ month", "if $ r14 ! = null goto label27", "label $ r81 = org apache axis utils java utils class $ org $ apache $ axis $ type $ language", "if $ r13 ! = null goto label25", "label $ r80 = org apache axis utils java utils class $ org $ apache $ axis $ type $ i d refs", "if $ r12 ! = null goto label23", "label $ r79 = org apache axis utils java utils class $ org $ apache $ axis $ type $ i d ref", "if $ r11 ! = null goto label21", "label $ r78 = org apache axis utils java utils class $ org $ apache $ axis $ type $ id", "if $ r10 ! = null goto label19", "label $ r77 = org apache axis utils java utils class $ org $ apache $ axis $ type $ hex binary", "if $ r9 ! = null goto label17", "label $ r76 = org apache axis utils java utils class $ org $ apache $ axis $ type $ entity", "if $ r8 ! = null goto label15", "label $ r75 = org apache axis utils java utils class $ org $ apache $ axis $ type $ entity", "if $ r7 ! = null goto label13", "label $ r74 = org apache axis utils java utils class $ org $ apache $ axis $ type $ duration", "if $ r6 ! = null goto label11", "label $ r73 = org apache axis utils java utils class $ org $ apache $ axis $ type $ day", "if $ r5 ! = null goto label09", "label $ r72 = org apache axis utils java utils class $ java $ lang $ number", "if $ r4 ! = null goto label07", "label $ r71 = org apache axis utils java utils class $ java $ lang $ double", "if $ r3 ! = null goto label05", "label $ r70 = org apache axis utils java utils class $ java $ lang $ float", "if $ r2 ! = null goto label03", "label $ r69 = org apache axis utils java utils class $ java $ lang $ boolean", "if $ r1 ! = null goto label01", "label $ r68 = org apache axis utils java utils class $ java $ lang $ string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [], [46], [47], [48], [49], [50], [], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], [62], [], [64], [65], [66], [67], [68], [], [70], [71], [72], [73], [74], [], [76], [77], [78], [79], [80], [], [82], [83], [84], [85], [86], [], [88], [89], [90], [91], [92], [], [94], [95], [96], [97], [98], [], [100], [101], [102], [103], [104], [], [106], [107], [108], [109], [110], [], [112], [113], [114], [115], [116], [], [118], [119], [120], [121], [122], [], [124], [125], [126], [127], [128], [], [130], [131], [132], [133], [134], [], [136], [137], [138], [139], [140], [], [142], [143], [144], [145], [146], [], [148], [149], [150], [151], [152], [], [154], [155], [156], [157], [158], [], [160], [161], [162], [163], [164], [], [166], [167], [168], [169], [170], [], [172], [173], [174], [175], [176], [], [178], [179], [180], [181], [182], [], [184], [185], [186], [187], [188], [], [190], [191], [192], [193], [194], [], [196], [197], [198], [199], [200], [], [202], [203], [204], [205], [206], [], [208], [209], [], [211], [212], [213], [214], [215], [216], [217], [218], [219], [220], [221], [222], [223], [224], [225], [226], [227], [228], [229], [230], [231], [232], [233], [234], [235], [236], [237], [238], [239], [240], [241], [242], [243], [244], [245], [246], [247], [248], [249], [250], [251], [252], [253], [254], [255], [256], [257], [258], [259], [260], [261], [262], [263], [264], [265], [266], [267], [268], [269], [270], [271], [272], [273], [274], [275], [276], [277], [278], [279], [280], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string buffer", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append 95", "$ r3 = $ r2 append r0", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if r0 ! = null goto label1", "return z0", "if r0 ! = null goto label1", "label $ z1 = r0 instanceof java lang boolean", "if $ z1 == 0 goto label2", "$ r3 = java lang boolean r0", "$ z5 = $ r3 boolean value", "return $ z5", "if $ z1 == 0 goto label2", "label $ z2 = r0 instanceof java lang integer", "if $ z2 == 0 goto label5", "$ r2 = java lang integer r0", "$ i0 = $ r2 int value", "if $ i0 == 0 goto label3", "$ z6 = 1", "goto label4", "label return $ z6", "if $ i0 == 0 goto label3", "label $ z6 = 0", "if $ z2 == 0 goto label5", "label $ z3 = r0 instanceof java lang string", "if $ z3 == 0 goto label6", "$ r1 = java lang string r0", "$ z4 = org apache axis utils java utils be true explicitly $ r1", "return $ z4", "if $ z3 == 0 goto label6", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache axis utils java utils be false explicitly r0 1", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis utils lockable hashtable r0", "r2 parent = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = org apache axis wsdl symbol table bind entry r0", "$ r3 = r11 attribute", "$ r4 = $ r3 get r1", "r9 = org apache axis wsdl symbol table bind entry $ operation attr $ r4", "if r9 ! = null goto label1", "r10 = new org apache axis wsdl symbol table bind entry $ operation attr", "specialinvoke r10 < init >", "r9 = r10", "r12 = org apache axis wsdl symbol table bind entry r0", "$ r7 = r12 attribute", "$ r7 put r1 r10", "label r9 set input body type r2", "$ r5 = org apache axis constant use literal", "if r2 ! = $ r5 goto label2", "r13 = org apache axis wsdl symbol table bind entry r0", "r13 set have literal 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get node", "r4 = org apache axis wsdl symbol table schema utils get complex element extension base r2 r1", "if r4 ! = null goto label1", "r4 = org apache axis wsdl symbol table schema utils get complex element restriction base r2 r1", "label if r4 ! = null goto label2", "r3 = org apache axis wsdl symbol table schema utils get simple type base r2", "if r3 == null goto label2", "r4 = r1 get type r3", "label r5 = org apache axis wsdl symbol table type entry r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ message entry", "if $ r2 ! = null goto label1", "$ r7 = org apache axis wsdl symbol table symbol table class $ \\ `` org apache axis wsdl symbol table message entry\\ ``", "org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ message entry = $ r7", "goto label2", "label r8 = org apache axis wsdl symbol table symbol table r0", "$ r3 = r8 get r1 $ r7", "$ r4 = org apache axis wsdl symbol table message entry $ r3", "return $ r4", "if $ r2 ! = null goto label1", "label $ r7 = org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ message entry"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r7 = new java util vector", "specialinvoke r7 < init >", "r8 = org apache axis wsdl symbol table symbol table r0", "$ r3 = r8 element type entry", "$ r4 = $ r3 value", "r7 add all $ r4", "r9 = org apache axis wsdl symbol table symbol table r0", "$ r5 = r9 type type entry", "$ r6 = $ r5 value", "r7 add all $ r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache axis constant be s o a p_ e n c r1", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label $ z1 = org apache axis constant be schema x s d r1", "if $ z1 == 0 goto label2", "label $ z2 = org apache axis constant be schema x s i r1", "if $ z2 == 0 goto label3", "label $ z3 = r1 equal \\ `` http www w3 org xml 1998 namespace\\ ``", "if $ z3 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis wsdl symbol table type entry r0", "r1 underl type nillable = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache axis wsdl symbol table undefined delegate r0", "$ r2 = r3 list", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis wsdl to java emitter r0", "$ z0 = r1 b build file generation", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis wsdl to java emitter r0", "r1 b generate all = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache axis wsdl to java emitter r0", "r2 run r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache axis wsdl to java emitter r0", "r1 set server side z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache axis wsdl to java emitter r0", "$ z0 = r1 be deploy", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org apache axis wsdl to java java class writer r0", "r2 = r13 get package", "if r2 == null goto label1", "$ i0 = r2 length", "if $ i0 < = 0 goto label1", "r12 = new java lang string buffer", "specialinvoke r12 < init >", "$ r4 = r12 append r2", "$ r5 = $ r4 append 46", "r14 = org apache axis wsdl to java java class writer r0", "$ r6 = r14 get class name", "$ r7 = $ r5 append $ r6", "r8 = $ r7 to string", "goto label2", "label r16 = org apache axis wsdl to java java class writer r0", "$ r9 = r16 emitter", "$ r10 = $ r9 get generate file info", "r17 = org apache axis wsdl to java java class writer r0", "$ r11 = r17 type", "$ r10 add r1 r8 $ r11", "return", "if $ i0 < = 0 goto label1", "label r15 = org apache axis wsdl to java java class writer r0", "r8 = r15 get class name"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "return \\ `` class \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache axis wsdl to java java deploy writer r0", "$ r1 = r2 emitter", "$ z0 = $ r1 be server side", "if $ z0 == 0 goto label1", "specialinvoke r0 generate", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r10 = org apache axis wsdl to java java impl writer r0", "$ r4 = r10 b entry", "$ r3 = org apache axis wsdl to java java bind writer interface_name", "$ r5 = $ r4 get dynamic var $ r3", "r1 = java lang string $ r5", "r9 = new java lang string buffer", "specialinvoke r9 < init >", "$ r7 = r9 append \\ `` implement \\ ``", "$ r8 = $ r7 append r1", "r2 = $ r8 to string", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r1 println \\ `` private java util hash set port = null \\ ``", "r1 println", "r1 println \\ `` public java util iterator get port { \\ ``", "r1 println \\ `` if port == null { \\ ``", "r1 println \\ `` port = new java util hash set \\ ``", "i1 = 0", "label $ i0 = r3 size", "if i1 > = $ i0 goto label2", "$ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` port add new javax xml namespace q name \\\\\\ `` \\ ``", "$ r6 = $ r5 append r2", "$ r7 = $ r6 append \\ `` \\\\\\", "$ r8 = r3 get i1", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` \\\\\\ `` \\ ``", "$ r11 = $ r10 to string", "r1 println $ r11", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r1 println \\ `` } \\ ``", "r1 println \\ `` return port iterator \\ ``", "r1 println \\ `` } \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r10 = @ parameter0", "if r10 == null goto label1", "$ c2 = java io file separator char", "r10 = org apache axis wsdl to java namespaces normalize package name r10 $ c2", "label r15 = org apache axis wsdl to java namespaces r0", "$ r1 = r15 root", "if $ r1 ! = null goto label2", "r11 = r10", "goto label3", "label if r11 ! = null goto label4", "$ r12 = \\ `` \\ ``", "goto label5", "label return $ r12", "label if r11 ! = null goto label4", "label r14 = new java lang string buffer", "specialinvoke r14 < init >", "$ r8 = r14 append r11", "$ c1 = java io file separator char", "$ r9 = $ r8 append $ c1", "$ r12 = $ r9 to string", "if $ r1 ! = null goto label2", "label r13 = new java lang string buffer", "specialinvoke r13 < init >", "r16 = org apache axis wsdl to java namespaces r0", "$ r3 = r16 root", "$ r4 = r13 append $ r3", "$ c0 = java io file separator char", "$ r5 = $ r4 append $ c0", "$ r6 = $ r5 append r10", "r11 = $ r6 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string buffer", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` new javax xml namespace q name \\\\\\ `` \\ ``", "$ r3 = r0 get namespace u r i", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` \\\\\\", "$ r6 = r0 get local part", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` \\\\\\ `` \\ ``", "$ r9 = $ r8 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk box a p i connection r0", "r2 token u r l = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box a p i connection r0", "$ r1 = r2 base u r l", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com box sdk box a p i connection r0", "r1 read timeout = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r42 = com box sdk box a p i connection r0", "$ r3 = r42 refresh lock", "$ r4 = $ r3 write lock", "$ r4 lock", "r43 = com box sdk box a p i connection r0", "$ z0 = r43 can refresh", "if $ z0 ! = 0 goto label1", "r44 = com box sdk box a p i connection r0", "$ r20 = r44 refresh lock", "$ r21 = $ r20 write lock", "$ r21 unlock", "r37 = new java lang illegal state exception", "specialinvoke r37 < init > \\ `` the box a p i connection can not be refresh because it doesn\\'t have a refresh token \\ ``", "throw r37", "if $ z0 ! = 0 goto label1", "label r38 = new java net url", "r45 = com box sdk box a p i connection r0", "$ r6 = r45 token u r l", "specialinvoke r38 < init > $ r6", "label goto label5", "label $ r7 = newarray java lang object [ 3 ]", "r47 = com box sdk box a p i connection r0", "$ r8 = r47 refresh token", "$ r7 [ 0 ] = $ r8", "r48 = com box sdk box a p i connection r0", "$ r9 = r48 client i d", "$ r7 [ 1 ] = $ r9", "r49 = com box sdk box a p i connection r0", "$ r10 = r49 client secret", "$ r7 [ 2 ] = $ r10", "r33 = java lang string format \\ `` grant_type=refresh_token & refresh_token= % s & client_id= % s & client_secret= % s\\", "r41 = new com box sdk box a p i request", "r50 = com box sdk box a p i connection r0", "specialinvoke r41 < init > r50 r38 \\ `` post\\ ``", "r41 should authenticate 0", "r41 set body r33", "label $ r12 = r41 send", "r34 = com box sdk box j s o n response $ r12", "r2 = r34 get j s o n", "label goto label9", "label r36 = com eclipsesource json json object read from r2", "$ r13 = r36 get \\ `` access_token\\ ``", "$ r14 = $ r13 a string", "r54 = com box sdk box a p i connection r0", "r54 access token = $ r14", "$ r15 = r36 get \\ `` refresh_token\\ ``", "$ r16 = $ r15 a string", "r55 = com box sdk box a p i connection r0", "r55 refresh token = $ r16", "$ l0 = java lang system current time millis", "r56 = com box sdk box a p i connection r0", "r56 last refresh = $ l0", "$ r17 = r36 get \\ `` expires_in\\ ``", "$ l1 = $ r17 a long", "$ l2 = $ l1 * 1000l", "r57 = com box sdk box a p i connection r0", "r57 expire = $ l2", "r58 = com box sdk box a p i connection r0", "r58 notify refresh", "r59 = com box sdk box a p i connection r0", "$ r18 = r59 refresh lock", "$ r19 = $ r18 write lock", "$ r19 unlock", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com box sdk box a p i connection r0", "$ r4 = r6 listener", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = com box sdk box a p i connection listener $ r5", "r7 = com box sdk box a p i connection r0", "r3 on error r7 r1", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "label r17 = new java net url", "r21 = com box sdk box a p i connection r0", "$ r4 = r21 revoke u r l", "specialinvoke r17 < init > $ r4", "label goto label5", "label $ r5 = newarray java lang object [ 3 ]", "r22 = com box sdk box a p i connection r0", "$ r6 = r22 access token", "$ r5 [ 0 ] = $ r6", "r23 = com box sdk box a p i connection r0", "$ r7 = r23 client i d", "$ r5 [ 1 ] = $ r7", "r24 = com box sdk box a p i connection r0", "$ r8 = r24 client secret", "$ r5 [ 2 ] = $ r8", "r16 = java lang string format \\ `` token= % s & client_id= % s & client_secret= % s\\", "r20 = new com box sdk box a p i request", "r25 = com box sdk box a p i connection r0", "specialinvoke r20 < init > r25 r17 \\ `` post\\ ``", "r20 should authenticate 0", "r20 set body r16", "label r20 send", "label goto label9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box a p i request r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = com box sdk box collaboration r0", "r1 = r16 get a p i", "$ r6 = com box sdk box collaboration collaboration_url_template", "$ r7 = r1 get base u r l", "$ r8 = newarray java lang object [ 1 ]", "r17 = com box sdk box collaboration r0", "$ r9 = r17 get i d", "$ r8 [ 0 ] = $ r9", "r2 = $ r6 build $ r7 $ r8", "r14 = new com box sdk box a p i request", "specialinvoke r14 < init > r1 r2 \\ `` get\\ ``", "$ r11 = r14 send", "r4 = com box sdk box j s o n response $ r11", "$ r12 = r4 get j s o n", "r5 = com eclipsesource json json object read from $ r12", "r15 = new com box sdk box collaboration $ info", "r18 = com box sdk box collaboration r0", "specialinvoke r15 < init > r18 r5", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r12 = com box sdk box collaboration whitelist exempt target r0", "r1 = r12 get a p i", "$ r5 = com box sdk box collaboration whitelist exempt target collaboration_whitelist_exempt_target_entry_url_template", "$ r6 = r1 get base u r l", "$ r7 = newarray java lang object [ 1 ]", "r13 = com box sdk box collaboration whitelist exempt target r0", "$ r8 = r13 get i d", "$ r7 [ 0 ] = $ r8", "r2 = $ r5 build $ r6 $ r7", "r11 = new com box sdk box a p i request", "$ r10 = com box sdk http http method delete", "specialinvoke r11 < init > r1 r2 $ r10", "r4 = r11 send", "r4 disconnect", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box event r0", "$ r1 = r2 source j s o n", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk box file r0", "r2 upload version r1 null", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "i3 = @ parameter4", "r32 = new com box sdk query string builder", "specialinvoke r32 < init >", "$ l4 = long i0", "r32 append param \\ `` min_width\\", "$ l5 = long i1", "r32 append param \\ `` min_height\\", "$ l6 = long i2", "r32 append param \\ `` max_width\\", "$ l7 = long i3", "r32 append param \\ `` max_height\\", "$ r15 = com box sdk box file $ thumbnail file type png", "if r1 ! = $ r15 goto label01", "r30 = com box sdk box file get_thumbnail_png_template", "goto label03", "label r38 = com box sdk box file r0", "$ r18 = r38 get a p i", "$ r19 = $ r18 get base u r l", "$ r20 = r32 to string", "$ r21 = newarray java lang object [ 1 ]", "r39 = com box sdk box file r0", "$ r22 = r39 get i d", "$ r21 [ 0 ] = $ r22", "r3 = r30 build with query $ r19 $ r20 $ r21", "r34 = new com box sdk box a p i request", "r40 = com box sdk box file r0", "$ r24 = r40 get a p i", "specialinvoke r34 < init > $ r24 r3 \\ `` get\\ ``", "r5 = r34 send", "r35 = new java io byte array output stream", "specialinvoke r35 < init >", "r7 = r5 get body", "r8 = newarray byte [ 8192 ]", "label i8 = r7 read r8", "label if i8 == -1 goto label06", "r35 write r8 0 i8", "i8 = r7 read r8", "goto label05", "label if i8 == -1 goto label06", "label r5 disconnect", "goto label10", "label $ r26 = r35 to byte array", "return $ r26", "if r1 ! = $ r15 goto label01", "label $ r16 = com box sdk box file $ thumbnail file type jpg", "if r1 ! = $ r16 goto label02", "r30 = com box sdk box file get_thumbnail_jpg_template", "if r1 ! = $ r16 goto label02", "label r33 = new com box sdk box a p i exception", "specialinvoke r33 < init > \\ `` unsupported thumbnail file type\\ ``", "r37 = java lang throwable r33", "throw r37"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [], [47], [], [49], [50], [51], [52], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r13 = new com eclipsesource json json object", "specialinvoke r13 < init >", "$ r7 = r1 get i d", "r13 add \\ `` id\\", "$ z0 = r1 instanceof com box sdk box user", "if $ z0 == 0 goto label1", "r13 add \\ `` type\\", "goto label3", "label r15 = com box sdk box file r0", "$ r11 = specialinvoke r15 collaborate r13 r2 r3 r4", "return $ r11", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof com box sdk box group", "if $ z1 == 0 goto label2", "label r14 = new java lang illegal argument exception", "specialinvoke r14 < init > \\ `` the give collaborator be of an unknown type \\ ``", "throw r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r13 = new com eclipsesource json json object", "specialinvoke r13 < init >", "$ r7 = r1 get i d", "r13 add \\ `` id\\", "$ z0 = r1 instanceof com box sdk box user", "if $ z0 == 0 goto label1", "r13 add \\ `` type\\", "goto label3", "label r15 = com box sdk box file r0", "$ r11 = specialinvoke r15 collaborate r13 r2 r3 r4", "return $ r11", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof com box sdk box group", "if $ z1 == 0 goto label2", "label r14 = new java lang illegal argument exception", "specialinvoke r14 < init > \\ `` the give collaborator be of an unknown type \\ ``", "throw r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r10 = com box sdk box file upload session r0", "$ r3 = r10 session info", "$ r4 = $ r3 get session endpoint", "r1 = $ r4 get abort endpoint", "r9 = new com box sdk box j s o n request", "r11 = com box sdk box file upload session r0", "$ r6 = r11 get a p i", "$ r7 = com box sdk http http method delete", "specialinvoke r9 < init > $ r6 r1 $ r7", "r9 send", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk box file version r0", "r2 file i d = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box file version r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com box sdk box folder folder_info_url_template", "r3 = com box sdk box folder r0", "$ r2 = r3 apply watermark $ r1 \\ `` default\\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ i0 = com box sdk box global setting max request attempt", "return $ i0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r4 = com box sdk box group group_url_template", "r12 = com box sdk box group r0", "$ r5 = r12 get a p i", "$ r6 = $ r5 get base u r l", "$ r7 = newarray java lang object [ 1 ]", "r13 = com box sdk box group r0", "$ r8 = r13 get i d", "$ r7 [ 0 ] = $ r8", "r1 = $ r4 build $ r6 $ r7", "r11 = new com box sdk box a p i request", "r14 = com box sdk box group r0", "$ r10 = r14 get a p i", "specialinvoke r11 < init > $ r10 r1 \\ `` delete\\ ``", "r3 = r11 send", "r3 disconnect", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk box redirect response r0", "r2 redirect u r l = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box resource r0", "$ r1 = r2 get i d", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com box sdk box retention policy r0", "$ r2 = r6 get a p i", "r7 = com box sdk box retention policy r0", "$ r3 = r7 get i d", "$ r4 = r1 get i d", "$ r5 = com box sdk box retention policy assignment create assignment to folder $ r2 $ r3 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = com box sdk box search parameter r0", "r1 query = null", "r2 = com box sdk box search parameter r0", "r2 field = null", "r3 = com box sdk box search parameter r0", "r3 scope = null", "r4 = com box sdk box search parameter r0", "r4 file extension = null", "r5 = com box sdk box search parameter r0", "r5 create range = null", "r6 = com box sdk box search parameter r0", "r6 update range = null", "r7 = com box sdk box search parameter r0", "r7 size range = null", "r8 = com box sdk box search parameter r0", "r8 owner user id = null", "r9 = com box sdk box search parameter r0", "r9 ancestor folder id = null", "r10 = com box sdk box search parameter r0", "r10 content type = null", "r11 = com box sdk box search parameter r0", "r11 type = null", "r12 = com box sdk box search parameter r0", "r12 trash content = null", "r13 = com box sdk box search parameter r0", "r13 metadata filter = null", "return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com box sdk box search parameter r0", "r2 field = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new com box sdk query string builder", "specialinvoke r6 < init >", "$ i0 = lengthof r1", "if $ i0 < = 0 goto label1", "r6 append param \\ `` fields\\", "label r7 = new com box sdk box task $ 1", "r8 = com box sdk box task r0", "specialinvoke r7 < init > r8 r6", "r9 = java lang iterable r7", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r6 = com box sdk box trash folder_info_url_template", "r12 = com box sdk box trash r0", "$ r5 = r12 api", "$ r7 = $ r5 get base u r l", "$ r8 = newarray java lang object [ 1 ]", "$ r8 [ 0 ] = r1", "r2 = $ r6 build $ r7 $ r8", "r11 = new com box sdk box a p i request", "r13 = com box sdk box trash r0", "$ r10 = r13 api", "specialinvoke r11 < init > $ r10 r2 \\ `` delete\\ ``", "r4 = r11 send", "r4 disconnect", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com box sdk box upload email r0", "r3 access = r1", "$ r2 = r1 to j s o n value", "r4 = com box sdk box upload email r0", "r4 add pending change \\ `` access\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r5 = com box sdk box user get_me_url", "$ r6 = r0 get base u r l", "$ r7 = newarray java lang object [ 0 ]", "r1 = $ r5 build $ r6 $ r7", "$ r8 = new com box sdk box a p i request", "specialinvoke $ r8 < init > r0 r1 \\ `` get\\ ``", "$ r9 = $ r8 send", "r3 = com box sdk box j s o n response $ r9", "$ r10 = r3 get j s o n", "r4 = com eclipsesource json json object read from $ r10", "$ r11 = new com box sdk box user", "$ r12 = r4 get \\ `` id\\ ``", "$ r13 = $ r12 a string", "specialinvoke $ r11 < init > r0 $ r13", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r6 = com box sdk box web link web_link_url_template", "r18 = com box sdk box web link r0", "$ r7 = r18 get a p i", "$ r8 = $ r7 get base u r l", "$ r9 = newarray java lang object [ 1 ]", "r19 = com box sdk box web link r0", "$ r10 = r19 get i d", "$ r9 [ 0 ] = $ r10", "r2 = $ r6 build $ r8 $ r9", "r16 = new com box sdk box j s o n request", "r20 = com box sdk box web link r0", "$ r12 = r20 get a p i", "specialinvoke r16 < init > $ r12 r2 \\ `` put\\ ``", "r17 = new com eclipsesource json json object", "specialinvoke r17 < init >", "r17 add \\ `` name\\", "$ r15 = r17 to string", "r16 set body $ r15", "r5 = r16 send", "r5 disconnect", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = com box sdk create user params r0", "$ z0 = r1 be exempt from login verification", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk file upload params r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk metadata r0", "$ r1 = r2 get \\ `` $ id\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk box metadata filter r0", "$ r1 = r2 scope", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "r5 = com box sdk metadata r0", "$ r2 = r5 value", "r6 = com box sdk metadata r0", "$ r3 = specialinvoke r6 path to property r1", "$ r2 set $ r3 f0", "r7 = com box sdk metadata r0", "specialinvoke r7 add op \\ `` replace\\", "r8 = com box sdk metadata r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com box sdk metadata r0", "$ r2 = r4 get value r1", "$ r3 = $ r2 a string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk metadata template r0", "$ r1 = r2 template key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com box sdk representation r0", "$ r1 = r2 content", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com box sdk size range r0", "r1 upper bound bytes = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = bsh name suffix r1 1", "r6 = bsh bsh class manager r0", "$ r3 = r6 define class base names", "$ r4 = $ r3 get r2", "$ r5 = java lang string $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = bsh name suffix r1 1", "r7 = bsh bsh class manager r0", "$ r3 = r7 define class", "$ r3 remove r1", "r8 = bsh bsh class manager r0", "$ r5 = r8 define class base names", "$ r5 remove r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = bsh bsh method r0", "$ r1 = r2 creturn type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = bsh call stack r0", "$ r2 = r3 stack", "$ r2 set element at r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = bsh capability class", "r6 = $ r2 get r0", "if r6 ! = null goto label5", "label r6 = java lang class for name r0", "label goto label4", "label if r6 == null goto label5", "$ r3 = bsh capability class", "$ r3 put r6 \\ `` unused\\ ``", "label if r6 == null goto label6", "$ z0 = 1", "goto label7", "label return $ z0", "label if r6 == null goto label6", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = bsh classpath bsh class path r0", "$ r3 = r5 class source", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r17 = bsh interpreter r0", "$ r2 = r17 console", "if $ r2 == null goto label1", "r18 = bsh interpreter r0", "$ r10 = r18 console", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r11 = r15 append \\ `` error \\ ``", "$ r12 = $ r11 append r1", "$ r13 = $ r12 append \\ `` \\n\\ ``", "$ r14 = $ r13 to string", "$ r10 error $ r14", "goto label2", "label return", "if $ r2 == null goto label1", "label r19 = bsh interpreter r0", "$ r4 = r19 err", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r5 = r16 append \\ `` error \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 to string", "$ r4 println $ r7", "r20 = bsh interpreter r0", "$ r8 = r20 err", "$ r8 flush"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = bsh interpreter debug", "if $ z0 == 0 goto label1", "$ r2 = bsh interpreter debug", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r3 = $ r1 append \\ `` debug \\ ``", "$ r4 = $ r3 append r0", "$ r5 = $ r4 to string", "$ r2 println $ r5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = bsh interpreter r0", "$ r1 = r3 get name space", "$ r2 = $ r1 get class manager", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 unset variable r1", "r4 = bsh external name space r0", "$ r2 = r4 external map", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label r7 = bsh servlet simple template r0", "$ r4 = r7 find template r1", "if $ r4 == null goto label2", "r8 = bsh servlet simple template r0", "$ r5 = r8 buff", "$ i1 = $ r4 [ 0 ]", "$ i0 = $ r4 [ 1 ]", "$ r5 replace $ i1 $ i0 r2", "goto label1", "if $ r4 == null goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache cassandra concurrent stage manager stag", "$ r2 = $ r1 get r0", "$ r3 = org apache cassandra concurrent local aware executor service $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ z0 = org apache cassandra config column definition $ assertion disable", "if $ z0 ! = 0 goto label1", "r10 = org apache cassandra config column definition r0", "$ r4 = r10 type", "$ z2 = $ r4 instanceof org apache cassandra db marshal user type", "if $ z2 == 0 goto label1", "r11 = org apache cassandra config column definition r0", "$ r5 = r11 type", "$ z3 = $ r5 be multi cell", "if $ z3 == 0 goto label1", "r9 = new java lang assertion error", "specialinvoke r9 < init >", "throw r9", "if $ z3 == 0 goto label1", "label r12 = org apache cassandra config column definition r0", "$ r7 = r12 type", "$ z4 = $ r7 instanceof org apache cassandra db marshal collection type", "if $ z4 == 0 goto label2", "r13 = org apache cassandra config column definition r0", "$ r1 = r13 type", "$ z1 = $ r1 be multi cell", "if $ z1 == 0 goto label2", "r14 = org apache cassandra config column definition r0", "$ r2 = r14 type", "$ r3 = org apache cassandra db marshal collection type $ r2", "$ r8 = $ r3 value comparator", "goto label3", "label return $ r8", "if $ z1 == 0 goto label2", "label r15 = org apache cassandra config column definition r0", "$ r8 = r15 type"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache cassandra config schema $ assertion disable", "if $ z0 ! = 0 goto label1", "if r1 ! = null goto label1", "r6 = new java lang assertion error", "specialinvoke r6 < init >", "throw r6", "if r1 ! = null goto label1", "label r7 = org apache cassandra config schema r0", "$ r2 = r7 keyspaces", "$ r3 = $ r2 get r1", "$ r4 = org apache cassandra schema keyspace metadata $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache cassandra config schema r0", "$ r2 = schema $ load__2 bootstrap $ r3", "r1 for each $ r2", "r4 = org apache cassandra config schema r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache cassandra schema schema keyspace calculate schema digest", "$ r2 = r1 leave", "$ r3 = java util uuid $ r2", "r7 = org apache cassandra config schema r0", "r7 version = $ r3", "$ r4 = r1 right", "$ r5 = java util uuid $ r4", "r8 = org apache cassandra config schema r0", "r8 alt version = $ r5", "r9 = org apache cassandra config schema r0", "$ r6 = r9 get version", "org apache cassandra db system keyspace update schema version $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org apache cassandra cql3 function aggregate fcts $ 23", "$ r2 = newarray org apache cassandra db marshal abstract type [ 1 ]", "$ r2 [ 0 ] = r0", "specialinvoke r3 < init > \\ `` min\\", "r4 = org apache cassandra cql3 function aggregate function r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org apache cassandra cql3 query option r0", "$ r1 = r3 get specific option", "$ r2 = org apache cassandra cql3 query option $ specific option access $ 400 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache cassandra cql3 restriction cluster column restriction r0", "$ r3 = r5 restriction", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r4 = r1 next", "r2 = org apache cassandra cql3 restriction single restriction $ r4", "$ z1 = r2 be slice", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i1 = 0", "r6 = org apache cassandra cql3 restriction cluster column restriction r0", "$ r3 = r6 restriction", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label4", "$ r4 = r1 next", "r2 = org apache cassandra cql3 restriction single restriction $ r4", "r7 = org apache cassandra cql3 restriction cluster column restriction r0", "$ z2 = specialinvoke r7 handle in filter r2 i1", "if $ z2 == 0 goto label2", "return 1", "if $ z2 == 0 goto label2", "label $ z3 = r2 be slice", "if $ z3 ! = 0 goto label3", "$ r5 = r2 get last column", "$ i0 = $ r5 position", "i1 = $ i0 + 1", "label goto label1", "if $ z0 == 0 goto label4", "label r8 = org apache cassandra cql3 restriction cluster column restriction r0", "$ z1 = r8 have contains", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra cql3 restriction statement restriction r0", "$ r1 = r2 cluster column restriction", "$ z0 = $ r1 have i n", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be start", "if $ z0 == 0 goto label3", "r6 = org apache cassandra cql3 restriction term slice r0", "$ r3 = r6 bound inclusive", "$ i1 = r1 idx", "$ z2 = $ r3 [ $ i1 ]", "if $ z2 == 0 goto label1", "$ r4 = org apache cassandra cql3 operator gte", "goto label2", "label return $ r4", "if $ z2 == 0 goto label1", "label $ r4 = org apache cassandra cql3 operator gt", "if $ z0 == 0 goto label3", "label r7 = org apache cassandra cql3 restriction term slice r0", "$ r2 = r7 bound inclusive", "$ i0 = r1 idx", "$ z1 = $ r2 [ $ i0 ]", "if $ z1 == 0 goto label4", "$ r5 = org apache cassandra cql3 operator lte", "goto label5", "label return $ r5", "if $ z1 == 0 goto label4", "label $ r5 = org apache cassandra cql3 operator lt"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], []]}
{"nodes": ["r0 = @ this", "r5 = org apache cassandra cql3 selection selection r0", "$ r3 = r5 get columns", "r1 = $ r3 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label3", "$ r4 = r1 next", "r2 = org apache cassandra config column definition $ r4", "$ z1 = r2 be complex", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache cassandra cql3 statement c q l3 ca request r0", "$ r4 = r9 static condition", "if $ r4 == null goto label1", "r10 = org apache cassandra cql3 statement c q l3 ca request r0", "$ r8 = r10 static condition", "$ z1 = $ r8 applies to r1", "if $ z1 ! = 0 goto label1", "return 0", "if $ z1 ! = 0 goto label1", "label r11 = org apache cassandra cql3 statement c q l3 ca request r0", "$ r5 = r11 condition", "$ r6 = $ r5 value", "r2 = $ r6 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label4", "$ r7 = r2 next", "r3 = org apache cassandra cql3 statement c q l3 ca request $ row condition $ r7", "$ z0 = r3 applies to r1", "if $ z0 ! = 0 goto label3", "label goto label2", "if $ z2 == 0 goto label4", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org apache cassandra exception invalid request exception", "$ r3 = java lang string format r0 r1", "specialinvoke $ r2 < init > $ r3", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra db cluster comparator r0", "$ r1 = r2 row comparator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org apache cassandra db column family store r0", "$ r4 = r11 data", "entermonitor $ r4", "label r12 = org apache cassandra db column family store r0", "$ r5 = r12 data", "$ r6 = $ r5 get view", "$ r7 = $ r6 get current memtable", "if $ r7 ! = r1 goto label3", "r13 = org apache cassandra db column family store r0", "$ r9 = r13 switch memtable", "exitmonitor $ r4", "label return $ r9", "if $ r7 ! = r1 goto label3", "label exitmonitor $ r4", "label goto label7", "label r14 = org apache cassandra db column family store r0", "$ r8 = specialinvoke r14 wait for flush", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra db column family store r0", "$ r1 = r2 data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = org apache cassandra config schema instance", "r1 = $ r3 get c f r0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label $ r4 = r1 leave", "$ r5 = java lang string $ r4", "r2 = org apache cassandra db keyspace open $ r5", "if r2 ! = null goto label2", "label $ r6 = r2 get column family store r0", "return $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be super", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label $ z1 = r0 be compact table", "if $ z1 == 0 goto label2", "$ r1 = r0 partition column", "$ r2 = $ r1 without static", "$ i0 = $ r2 size", "if $ i0 < = 1 goto label2", "$ r3 = r0 cluster column", "$ i1 = $ r3 size", "if $ i1 < 1 goto label2", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org apache cassandra db column r0", "$ i0 = r1 complex idx", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache cassandra db column r0", "$ r2 = r5 column", "r6 = org apache cassandra db column r0", "$ i0 = r6 complex idx", "r7 = org apache cassandra db column r0", "$ r1 = r7 column", "$ i1 = org apache cassandra utils btree b tree size $ r1", "$ i2 = $ i1 - 1", "$ r3 = org apache cassandra utils btree b tree $ dir asc", "$ r4 = org apache cassandra utils btree b tree iterator $ r2 $ i0 $ i2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r6 = org apache cassandra db compaction compaction strategy manager r0", "$ r2 = r6 write lock", "$ r2 lock", "label r7 = org apache cassandra db compaction compaction strategy manager r0", "r7 be active = 0", "label r8 = org apache cassandra db compaction compaction strategy manager r0", "$ r3 = r8 write lock", "$ r3 unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra db compaction writer compaction aware writer r0", "$ r1 = r2 directory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "l1 = @ parameter2", "r2 = org apache cassandra db context counter context $ context state allocate 0 0 1", "r2 write remote r1 l0 l1", "$ r3 = r2 context", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache cassandra utils counter id get local id", "r4 = org apache cassandra db context counter context r0", "$ r3 = r4 get clock and count of r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new org apache cassandra db lifecycle tracker", "specialinvoke $ r3 < init > null 0", "$ r3 add initial s s table r1", "$ r4 = org apache cassandra db lifecycle helper empty set", "$ r5 = org apache cassandra db lifecycle view update compact $ r4 r1", "$ r3 apply $ r5", "$ r7 = new org apache cassandra db lifecycle lifecycle transaction", "specialinvoke $ r7 < init > $ r3 r0 r1", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["org apache cassandra db lifecycle log transaction reschedule fail deletion", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache cassandra db liveness info r0", "$ l0 = r2 timestamp", "org apache cassandra utils f b utility update with long r1 $ l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache cassandra db liveness info r0", "$ l1 = r2 timestamp", "$ l0 = r1 timestamp", "$ b2 = $ l1 cmp $ l0", "if $ b2 == 0 goto label3", "r3 = org apache cassandra db liveness info r0", "$ l6 = r3 timestamp", "$ l5 = r1 timestamp", "$ b7 = $ l6 cmp $ l5", "if $ b7 < = 0 goto label1", "$ z7 = 1", "goto label2", "label return $ z7", "if $ b7 < = 0 goto label1", "label $ z7 = 0", "if $ b2 == 0 goto label3", "label r4 = org apache cassandra db liveness info r0", "$ z0 = r4 be expire", "$ z1 = r1 be expire", "$ z2 = $ z0 ^ $ z1", "if $ z2 == 0 goto label4", "r5 = org apache cassandra db liveness info r0", "$ z6 = r5 be expire", "return $ z6", "if $ z2 == 0 goto label4", "label r6 = org apache cassandra db liveness info r0", "$ z3 = r6 be expire", "$ z4 = r1 be expire", "if $ z3 ! = $ z4 goto label7", "r7 = org apache cassandra db liveness info r0", "$ i3 = r7 local expiration time", "$ i4 = r1 local expiration time", "if $ i3 < = $ i4 goto label5", "$ z8 = 1", "goto label6", "label return $ z8", "if $ i3 < = $ i4 goto label5", "label $ z8 = 0", "if $ z3 ! = $ z4 goto label7", "label r8 = org apache cassandra db liveness info r0", "$ z5 = r8 be expire", "return $ z5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ r1 = new org apache cassandra db liveness info", "specialinvoke $ r1 < init > l0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra db row column data r0", "$ r1 = r2 column", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache cassandra db row encode stats r0", "$ l4 = r4 min timestamp", "$ l3 = org apache cassandra db row encode stats timestamp_epoch", "$ b5 = $ l4 cmp $ l3", "if $ b5 ! = 0 goto label1", "$ l18 = r1 min timestamp", "goto label3", "label l0 = $ l18", "r7 = org apache cassandra db row encode stats r0", "$ i19 = r7 min local deletion time", "$ i20 = org apache cassandra db row encode stats deletion_time_epoch", "if $ i19 ! = $ i20 goto label4", "$ i21 = r1 min local deletion time", "goto label6", "label i1 = $ i21", "r10 = org apache cassandra db row encode stats r0", "$ i22 = r10 min t t l", "if $ i22 ! = 0 goto label7", "$ i23 = r1 min t t l", "goto label9", "label r3 = new org apache cassandra db row encode stats", "specialinvoke r3 < init > l0 i1 $ i23", "return r3", "if $ i22 ! = 0 goto label7", "label $ i15 = r1 min t t l", "if $ i15 ! = 0 goto label8", "r11 = org apache cassandra db row encode stats r0", "$ i23 = r11 min t t l", "if $ i15 ! = 0 goto label8", "label r12 = org apache cassandra db row encode stats r0", "$ i17 = r12 min t t l", "$ i16 = r1 min t t l", "$ i23 = java lang math min $ i17 $ i16", "if $ i19 ! = $ i20 goto label4", "label $ i12 = r1 min local deletion time", "$ i11 = org apache cassandra db row encode stats deletion_time_epoch", "if $ i12 ! = $ i11 goto label5", "r8 = org apache cassandra db row encode stats r0", "$ i21 = r8 min local deletion time", "if $ i12 ! = $ i11 goto label5", "label r9 = org apache cassandra db row encode stats r0", "$ i14 = r9 min local deletion time", "$ i13 = r1 min local deletion time", "$ i21 = java lang math min $ i14 $ i13", "if $ b5 ! = 0 goto label1", "label $ l7 = r1 min timestamp", "$ l6 = org apache cassandra db row encode stats timestamp_epoch", "$ b8 = $ l7 cmp $ l6", "if $ b8 ! = 0 goto label2", "r5 = org apache cassandra db row encode stats r0", "$ l18 = r5 min timestamp", "if $ b8 ! = 0 goto label2", "label r6 = org apache cassandra db row encode stats r0", "$ l10 = r6 min timestamp", "$ l9 = r1 min timestamp", "$ l18 = java lang math min $ l10 $ l9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra db row range tombstone boundary marker r0", "$ r1 = r2 start deletion", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = org apache cassandra db single partition read command $ assertion disable", "if $ z0 ! = 0 goto label2", "if r2 == null goto label1", "$ z1 = r2 valid for read on r1", "if $ z1 ! = 0 goto label2", "label r6 = new java lang assertion error", "specialinvoke r6 < init >", "throw r6", "if $ z1 ! = 0 goto label2", "label $ r3 = r1 name", "org apache cassandra trace trace trace \\ `` execute single-partition query on { } \\", "r7 = org apache cassandra db single partition read command r0", "$ r4 = specialinvoke r7 query memtable and disk internal r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ z0 = org apache cassandra db slice $ assertion disable", "if $ z0 ! = 0 goto label2", "$ z1 = r1 be start", "if $ z1 == 0 goto label1", "$ z2 = r2 be end", "if $ z2 ! = 0 goto label2", "label r4 = new java lang assertion error", "specialinvoke r4 < init >", "throw r4", "if $ z2 ! = 0 goto label2", "label r5 = org apache cassandra db cluster prefix r2", "r6 = org apache cassandra db cluster prefix r1", "$ i0 = r0 compare r5 r6", "if $ i0 > 0 goto label3", "$ z3 = 1", "goto label4", "label return $ z3", "if $ i0 > 0 goto label3", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = new java util array list", "r12 = org apache cassandra db view table view r0", "$ r7 = r12 view", "$ i0 = $ r7 size", "specialinvoke r11 < init > $ i0", "r13 = org apache cassandra db view table view r0", "$ r8 = r13 view", "r3 = $ r8 iterator", "label $ z2 = r3 have next", "if $ z2 == 0 goto label3", "$ r9 = r3 next", "r4 = org apache cassandra db view view $ r9", "r5 = r4 get read query", "$ r10 = r1 partition key", "$ z0 = r5 select key $ r10", "if $ z0 ! = 0 goto label2", "goto label1", "if $ z0 ! = 0 goto label2", "label r11 add r4", "if $ z2 == 0 goto label3", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra db view view r0", "$ r1 = r2 base non p k column in view p k", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = new org apache cassandra dht bound", "$ r3 = r0 min key bound", "$ r4 = r1 max key bound", "r6 = org apache cassandra dht ring position $ r3", "r7 = org apache cassandra dht ring position $ r4", "specialinvoke r5 < init > r6 r7", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r0 set int \\ `` cassandra input split size\\", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get string collection \\ `` mapreduce output bulkoutputformat ignorehosts\\ ``", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org apache cassandra hadoop hadoop compat progress_method", "$ r1 = newarray java lang object [ 0 ]", "org apache cassandra hadoop hadoop compat invoke $ r2 r0 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org apache cassandra hint hint service r0", "$ z0 = r8 be shut down", "if $ z0 == 0 goto label1", "r7 = new java lang illegal state exception", "specialinvoke r7 < init > \\ `` hint service be shut down and can\\'t accept new hints\\ ``", "throw r7", "if $ z0 == 0 goto label1", "label r9 = org apache cassandra hint hint service r0", "$ r3 = r9 catalog", "$ r3 maybe load store r1", "r10 = org apache cassandra hint hint service r0", "$ r4 = r10 buffer pool", "$ r4 write r1 r2", "$ r5 = org apache cassandra metric storage metric total hint", "$ i0 = com google common collect iterables size r1", "$ l1 = long $ i0", "$ r5 inc $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra io sstable format s s table reader r0", "$ r1 = r2 bf", "$ l0 = $ r1 off heap size", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r6 = org apache cassandra io sstable format s s table reader r0", "$ r5 = r6 get scanner r2", "return $ r5", "if r1 ! = null goto label1", "label $ r3 = java util collection singleton list r1", "r7 = org apache cassandra io sstable format s s table reader r0", "$ r4 = r7 get scanner $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org apache cassandra utils f b utility get broadcast address", "$ z0 = r1 equal $ r3", "if $ z0 == 0 goto label1", "r22 = org apache cassandra locator gossip property file snitch r0", "$ r21 = r22 my d c", "return $ r21", "if $ z0 == 0 goto label1", "label $ r4 = org apache cassandra gm gossiper instance", "r2 = $ r4 get endpoint state for endpoint r1", "if r2 == null goto label2", "$ r16 = org apache cassandra gm application state dc", "$ r17 = r2 get application state $ r16", "if $ r17 ! = null goto label6", "label r23 = org apache cassandra locator gossip property file snitch r0", "$ r5 = r23 psnitch", "if $ r5 ! = null goto label5", "r24 = org apache cassandra locator gossip property file snitch r0", "$ r8 = r24 save endpoint", "if $ r8 ! = null goto label3", "$ r15 = org apache cassandra db system keyspace load dc rack info", "r25 = org apache cassandra locator gossip property file snitch r0", "r25 save endpoint = $ r15", "label r26 = org apache cassandra locator gossip property file snitch r0", "$ r9 = r26 save endpoint", "$ z1 = $ r9 contain key r1", "if $ z1 == 0 goto label4", "r27 = org apache cassandra locator gossip property file snitch r0", "$ r10 = r27 save endpoint", "$ r11 = $ r10 get r1", "$ r12 = java util map $ r11", "$ r13 = $ r12 get \\ `` data_center\\ ``", "$ r14 = java lang string $ r13", "return $ r14", "if $ z1 == 0 goto label4", "label return \\ `` unknown_dc\\ ``", "if $ r5 ! = null goto label5", "label r28 = org apache cassandra locator gossip property file snitch r0", "$ r6 = r28 psnitch", "$ r7 = $ r6 get datacenter r1", "return $ r7", "if $ r17 ! = null goto label6", "label $ r18 = org apache cassandra gm application state dc", "$ r19 = r2 get application state $ r18", "$ r20 = $ r19 value", "return $ r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r11 = org apache cassandra locator token metadata r0", "$ r2 = r11 lock", "$ r3 = $ r2 write lock", "$ r3 lock", "label $ r4 = org apache cassandra locator token metadata logger", "$ r4 info \\ `` updating topology for all endpoint that have changed\\ ``", "r12 = org apache cassandra locator token metadata r0", "$ r5 = r12 topology", "$ r5 update endpoint", "r13 = org apache cassandra locator token metadata r0", "r13 invalidate cache ring", "label r14 = org apache cassandra locator token metadata r0", "$ r6 = r14 lock", "$ r7 = $ r6 write lock", "$ r7 unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], []]}
{"nodes": ["r0 = @ this", "r17 = org apache cassandra locator token metadata r0", "$ r2 = r17 lock", "$ r3 = $ r2 write lock", "$ r3 lock", "label r18 = org apache cassandra locator token metadata r0", "$ r4 = r18 token to endpoint map", "$ r4 clear", "r19 = org apache cassandra locator token metadata r0", "$ r5 = r19 endpoint to host id map", "$ r5 clear", "r20 = org apache cassandra locator token metadata r0", "$ r6 = r20 bootstrap tokens", "$ r6 clear", "r21 = org apache cassandra locator token metadata r0", "$ r7 = r21 leave endpoint", "$ r7 clear", "r22 = org apache cassandra locator token metadata r0", "$ r8 = r22 pending range", "$ r8 clear", "r23 = org apache cassandra locator token metadata r0", "$ r9 = r23 move endpoint", "$ r9 clear", "r24 = org apache cassandra locator token metadata r0", "$ r10 = r24 sort token", "$ r10 clear", "r25 = org apache cassandra locator token metadata r0", "$ r11 = r25 topology", "$ r11 clear", "r26 = org apache cassandra locator token metadata r0", "r26 invalidate cache ring", "label r27 = org apache cassandra locator token metadata r0", "$ r12 = r27 lock", "$ r13 = $ r12 write lock", "$ r13 unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra metric restorable meter r0", "$ r1 = r2 count", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache cassandra net messaging service r0", "$ r2 = r5 verb handler", "$ r3 = $ r2 get r1", "$ r4 = org apache cassandra net i verb handler $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache cassandra schema view r0", "$ r2 = r5 view", "$ r3 = $ r2 get r1", "$ r4 = java util optional of nullable $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org apache cassandra schema view r0", "$ r3 = r11 get r1", "$ r4 = view $ lambda_without_1__2 bootstrap $ r1", "$ r5 = $ r3 or else throw $ r4", "r2 = org apache cassandra config view definition $ r5", "$ r6 = org apache cassandra schema view builder", "$ r7 = view $ lambda_without_2__3 bootstrap $ r2", "$ r8 = com google common collect iterables filter r0 $ r7", "$ r9 = $ r6 add $ r8", "$ r10 = $ r9 build", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache cassandra security s s l factory create s s l context r0 1", "$ r4 = r1 get socket factory", "$ r5 = $ r4 create socket", "r2 = javax net ssl s s l socket $ r5", "label org apache cassandra security s s l factory prepare socket r2 r0", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache cassandra stream stream plan r0", "$ r3 = r4 coordinator", "$ r3 transfer file r1 r2", "r5 = org apache cassandra stream stream plan r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r21 = org apache cassandra stream stream receive task r0", "$ z0 = r21 do", "if $ z0 == 0 goto label1", "$ r12 = org apache cassandra stream stream receive task logger", "r22 = org apache cassandra stream stream receive task r0", "$ r11 = r22 session", "$ r13 = $ r11 plan id", "$ r14 = r1 get filename", "$ r12 warn \\ `` [ { } ] receive sstable { } on already finish stream receive task abort sstable \\", "$ r15 = r1 abort null", "org apache cassandra utils throwables maybe fail $ r15", "return", "if $ z0 == 0 goto label1", "label r23 = org apache cassandra stream stream receive task r0", "$ i0 = r23 remote s s table receive", "$ i1 = $ i0 + 1", "r24 = org apache cassandra stream stream receive task r0", "r24 remote s s table receive = $ i1", "$ z1 = org apache cassandra stream stream receive task $ assertion disable", "if $ z1 ! = 0 goto label2", "r25 = org apache cassandra stream stream receive task r0", "$ r8 = r25 cf id", "$ r9 = r1 get cf id", "$ z3 = $ r8 equal $ r9", "if $ z3 ! = 0 goto label2", "r19 = new java lang assertion error", "specialinvoke r19 < init >", "throw r19", "if $ z3 ! = 0 goto label2", "label r18 = null", "label r18 = r1 finish 1", "label goto label6", "label r26 = org apache cassandra stream stream receive task r0", "$ r3 = r26 txn", "$ r3 update r18 0", "r27 = org apache cassandra stream stream receive task r0", "$ r4 = r27 sstables", "$ r4 add all r18", "r28 = org apache cassandra stream stream receive task r0", "$ i3 = r28 remote s s table receive", "r29 = org apache cassandra stream stream receive task r0", "$ i2 = r29 total file", "if $ i3 ! = $ i2 goto label7", "r30 = org apache cassandra stream stream receive task r0", "r30 do = 1", "$ r6 = org apache cassandra stream stream receive task executor", "r20 = new org apache cassandra stream stream receive task $ on completion runnable", "r31 = org apache cassandra stream stream receive task r0", "specialinvoke r20 < init > r31", "r32 = java lang runnable r20", "$ r6 submit r32", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "l1 = @ parameter3", "l2 = @ parameter4", "r10 = org apache cassandra stream stream writer r0", "$ r3 = r10 transfer buffer", "$ i5 = lengthof $ r3", "$ l7 = long $ i5", "$ l6 = l1 - l2", "$ l8 = java lang math min $ l7 $ l6", "i3 = int $ l8", "r11 = org apache cassandra stream stream writer r0", "$ r4 = r11 transfer buffer", "$ i9 = lengthof $ r4", "$ l10 = long $ i9", "$ l11 = r1 length", "$ l12 = r1 get file pointer", "$ l13 = $ l11 - $ l12", "$ l14 = java lang math min $ l10 $ l13", "i4 = int $ l14", "r12 = org apache cassandra stream stream writer r0", "$ r5 = r12 transfer buffer", "r1 read fully $ r5 0 i4", "if r2 == null goto label1", "r13 = org apache cassandra stream stream writer r0", "$ r9 = r13 transfer buffer", "r2 validate $ r9 0 i4", "label r14 = org apache cassandra stream stream writer r0", "$ r6 = r14 limiter", "$ i15 = i3 - i0", "$ r6 acquire $ i15", "r15 = org apache cassandra stream stream writer r0", "$ r8 = r15 compress output", "r16 = org apache cassandra stream stream writer r0", "$ r7 = r16 transfer buffer", "$ i16 = i3 - i0", "$ r8 write $ r7 i0 $ i16", "$ l17 = long i3", "return $ l17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r3 = org apache cassandra thrift t custom socket r0", "$ r1 = r3 socket", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = org apache cassandra thrift t custom socket r0", "$ r2 = r4 socket", "$ z0 = $ r2 be connect", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r12 = org apache cassandra trace trace state r0", "$ r3 = r12 status", "$ r2 = org apache cassandra trace trace state $ status idle", "if $ r3 ! = $ r2 goto label4", "label r0 wait l0", "label goto label4", "label r13 = org apache cassandra trace trace state r0", "$ r5 = r13 status", "$ r4 = org apache cassandra trace trace state $ status active", "if $ r5 ! = $ r4 goto label5", "$ r7 = org apache cassandra trace trace state $ status idle", "r14 = org apache cassandra trace trace state r0", "r14 status = $ r7", "$ r8 = org apache cassandra trace trace state $ status active", "return $ r8", "if $ r5 ! = $ r4 goto label5", "label r15 = org apache cassandra trace trace state r0", "$ r6 = r15 status", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z4 = 0", "r13 = null", "r14 = r1 iterator", "label $ z0 = r14 have next", "if $ z0 == 0 goto label7", "$ r9 = r14 next", "r2 = org apache cassandra db i mutation $ r9", "$ z1 = r2 instanceof org apache cassandra db counter mutation", "if $ z1 == 0 goto label2", "z4 = 1", "label $ r10 = r2 get partition update", "r3 = $ r10 iterator", "label $ z5 = r3 have next", "if $ z5 == 0 goto label6", "$ r11 = r3 next", "r4 = org apache cassandra db partition partition update $ r11", "r18 = org apache cassandra trigger trigger executor r0", "r5 = specialinvoke r18 execute internal r4", "if r5 == null goto label3", "$ z2 = r5 be empty", "if $ z2 == 0 goto label4", "goto label3", "if $ z2 == 0 goto label4", "label r19 = org apache cassandra trigger trigger executor r0", "specialinvoke r19 validate r5", "if r13 ! = null goto label5", "r16 = new java util link list", "specialinvoke r16 < init >", "r13 = r16", "label r13 add all r5", "if $ z5 == 0 goto label6", "label goto label1", "if $ z0 == 0 goto label7", "label if r13 ! = null goto label8", "return null", "label if r13 ! = null goto label8", "label if z4 == 0 goto label9", "r17 = new org apache cassandra exception invalid request exception", "specialinvoke r17 < init > \\ `` counter mutation and trigger mutation can not be apply together atomically \\ ``", "r20 = java lang throwable r17", "throw r20", "label if z4 == 0 goto label9", "label $ r6 = com google common collect iterables concat r1 r13", "r21 = org apache cassandra trigger trigger executor r0", "$ r7 = specialinvoke r21 merge mutation $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ i1 = org apache cassandra utils btree b tree size r0", "$ i2 = org apache cassandra utils btree b tree to array r0 0 $ i1 r1 i0", "return $ i2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r5 = org apache cassandra utils concurrent interval lock r0", "$ r1 = r5 time source", "l1 = $ r1 current time millis", "r6 = org apache cassandra utils concurrent interval lock r0", "$ r2 = r6 last acquire", "$ l2 = $ r2 get", "$ l3 = l1 - $ l2", "$ b4 = $ l3 cmp l0", "if $ b4 < 0 goto label1", "r7 = org apache cassandra utils concurrent interval lock r0", "$ r4 = r7 write lock", "$ z1 = $ r4 try lock", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label z0 = $ z2", "if $ z2 == 0 goto label3", "r8 = org apache cassandra utils concurrent interval lock r0", "$ r3 = r8 last acquire", "$ r3 set l1", "label return z0", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org apache cassandra utils concurrent ref r0", "$ r1 = r2 state", "$ r1 release 0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org apache cassandra utils concurrent wait queue r0", "$ z0 = r5 have waiter", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r6 = org apache cassandra utils concurrent wait queue r0", "$ r3 = r6 queue", "r1 = $ r3 iterator", "i0 = 0", "label $ z1 = r1 have next", "if $ z1 == 0 goto label4", "$ r4 = r1 next", "r2 = org apache cassandra utils concurrent wait queue $ signal $ r4", "$ z2 = r2 be cancel", "if $ z2 ! = 0 goto label3", "i0 = i0 + 1", "label goto label2", "if $ z1 == 0 goto label4", "label return i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label $ z0 = r0 get a boolean", "if $ z0 ! = 0 goto label4", "r2 = r1 register", "$ z1 = r0 get a boolean", "if $ z1 ! = 0 goto label2", "r2 await uninterruptibly", "goto label3", "label goto label1", "if $ z1 ! = 0 goto label2", "label r2 cancel", "if $ z0 ! = 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["$ r1 = org apache cassandra utils f b utility local inet address", "if $ r1 ! = null goto label6", "label $ r3 = org apache cassandra config database descriptor get listen address", "if $ r3 ! = null goto label2", "$ r6 = java net inet address get local host", "goto label3", "label org apache cassandra utils f b utility local inet address = $ r6", "label goto label6", "label $ r2 = org apache cassandra utils f b utility local inet address", "return $ r2", "if $ r3 ! = null goto label2", "label $ r6 = org apache cassandra config database descriptor get listen address"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "i2 = r1 position", "i3 = r1 limit", "$ r2 = r1 position i0", "$ i4 = i0 + i1", "$ r2 limit $ i4", "r0 update r1", "$ r4 = r1 position i2", "$ r4 limit i3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = new java util array list", "specialinvoke $ r5 < init >", "$ r6 = r0 merkle tree", "$ r7 = $ r6 value", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r8 = r3 next", "r4 = org apache cassandra utils merkle tree $ r8", "$ r9 = r4 full range", "$ r10 = r1 get merkle tree $ r9", "$ r11 = org apache cassandra utils merkle tree difference r4 $ r10", "$ r5 add all $ r11", "goto label1", "if $ z0 == 0 goto label2", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ l1 = org apache cassandra utils object sizes size of array $ i0 1l", "return $ l1"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 - 1", "$ i2 = i0 & $ i1", "if $ i2 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i2 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "$ r1 = org apache cassandra utils test rate limiter ref", "$ r2 = $ r1 get", "r7 = com google common util concurrent rate limiter $ r2", "if r7 == null goto label1", "$ d2 = r7 get rate", "$ b0 = $ d2 cmpl d0", "if $ b0 == 0 goto label2", "label $ r3 = org apache cassandra utils test rate limiter ref", "$ r4 = com google common util concurrent rate limiter create d0", "$ r3 compare and set r7 $ r4", "$ r5 = org apache cassandra utils test rate limiter ref", "$ r6 = $ r5 get", "r7 = com google common util concurrent rate limiter $ r6", "label r7 acquire 1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core aggregate metadata r0", "$ r1 = specialinvoke r2 a c q l query 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core cluster r0", "$ r1 = r2 connect async null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com datastax driver core cluster r0", "$ r1 = r3 manager", "$ r2 = $ r1 cluster name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com datastax driver core cluster r0", "$ r2 = r5 manager", "com datastax driver core cluster check not close $ r2", "r6 = com datastax driver core cluster r0", "$ r3 = r6 manager", "$ r4 = $ r3 listener", "z0 = $ r4 remove r1", "if z0 == 0 goto label1", "r7 = com datastax driver core cluster r0", "r1 on unregister r7", "label r8 = com datastax driver core cluster r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core duration r0", "$ l0 = r1 nanosecond", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core exception already exist exception r0", "$ r1 = r2 keyspace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core exception unavailable exception r0", "$ r1 = r2 consistency", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core execution info r0", "$ i0 = r1 successful execution index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core execution info r0", "$ r1 = r2 trace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core function metadata r0", "$ r1 = r2 return type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com datastax driver core host r0", "$ r1 = r3 address", "$ r2 = $ r1 get address", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core host r0", "$ r1 = r2 schema version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = com datastax driver core keyspace metadata r0", "$ r1 = r4 user type", "$ r2 = $ r1 value", "$ r3 = java util collection unmodifiable collection $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return 0", "if r0 ! = null goto label1", "label i0 = com datastax driver core metadata case insensitive hash r0", "$ r4 = com datastax driver core metadata reserved_keywords", "$ r5 = $ r4 get i0", "r1 = java util list $ r5", "if r1 ! = null goto label2", "label r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "$ r6 = r2 next", "r3 = char [ ] $ r6", "$ z1 = com datastax driver core metadata equal ignore case ascii r0 r3", "if $ z1 == 0 goto label4", "return 1", "if $ z1 == 0 goto label4", "label goto label3", "if $ z0 == 0 goto label5", "label return 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r3 = new java util hash set", "r4 = com datastax driver core metadata r0", "$ r2 = r4 all host", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "label r6 = com datastax driver core metadata r0", "$ r2 = r6 cluster", "$ r3 = $ r2 control connection", "$ z0 = $ r3 check schema agreement", "label return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core metric r0", "$ r1 = r2 trash connection", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com datastax driver core parse utils quote r0 39", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com datastax driver core parse utils unquote r0 39", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com datastax driver core policy latency aware policy $ builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = com datastax driver core policy policy default_address_translator", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core policy policy r0", "$ r1 = r2 retry policy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core protocol option r0", "$ i0 = r1 max schema agreement wait second", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com datastax driver core querybuilder batch r0", "$ r2 = r4 using", "$ r3 = $ r2 and r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com datastax driver core querybuilder order", "specialinvoke $ r1 < init > r0 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new com datastax driver core querybuilder use $ with marker", "specialinvoke r2 < init > \\ `` timestamp\\", "r3 = com datastax driver core querybuilder use r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com datastax driver core querybuilder query builder incr r0 1l", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new com datastax driver core querybuilder assignment $ collection assignment", "specialinvoke r3 < init > r0 r1 0", "r4 = com datastax driver core querybuilder assignment r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r1 instanceof com datastax driver core querybuilder bind marker", "if $ z0 == 0 goto label1", "r5 = new com datastax driver core exception invalid query exception", "specialinvoke r5 < init > \\ `` bind a value in remove be not support use remove all and bind a singleton set\\ ``", "r6 = java lang throwable r5", "throw r6", "if $ z0 == 0 goto label1", "label $ r2 = java util collection singleton r1", "$ r3 = com datastax driver core querybuilder query builder remove all r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new com datastax driver core querybuilder utils $ f call", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new com datastax driver core querybuilder utils $ alias", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com datastax driver core query option r0", "r1 default idempotence = z0", "r2 = com datastax driver core query option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core query option r0", "$ i0 = r1 refresh node list interval millis", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com datastax driver core query option r0", "r1 max pending refresh node list request = i0", "r2 = com datastax driver core query option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com datastax driver core query option r0", "r1 refresh node interval millis = i0", "r2 = com datastax driver core query option r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "com datastax driver core schemabuilder abstract create statement validate not empty r1 \\ `` column name\\ ``", "com datastax driver core schemabuilder abstract create statement validate not null r2 \\ `` column type\\ ``", "$ r3 = newarray java lang object [ 1 ]", "$ r3 [ 0 ] = r1", "$ r4 = java lang string format \\ `` the column name \\ ' % s\\ ' be not allow because it be a reserved keyword\\", "com datastax driver core schemabuilder abstract create statement validate not key word r1 $ r4", "r8 = com datastax driver core schemabuilder abstract create statement r0", "$ r5 = r8 simple columns", "$ r5 put r1 r2", "r9 = com datastax driver core schemabuilder abstract create statement r0", "$ r7 = r9 self", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "com datastax driver core schemabuilder create validate not empty r1 \\ `` cluster column name\\ ``", "com datastax driver core schemabuilder create validate not null r2 \\ `` udt cluster column type\\ ``", "$ r3 = newarray java lang object [ 1 ]", "$ r3 [ 0 ] = r1", "$ r4 = java lang string format \\ `` the clustering column name \\ ' % s\\ ' be not allow because it be a reserved keyword\\", "com datastax driver core schemabuilder create validate not key word r1 $ r4", "r7 = com datastax driver core schemabuilder create r0", "$ r5 = r7 cluster column", "$ r5 put r1 r2", "r8 = com datastax driver core schemabuilder create r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core schemabuilder create index r0", "r1 if not exist = 1", "r2 = com datastax driver core schemabuilder create index r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core schemabuilder create type r0", "$ r1 = r2 build internal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new com datastax driver core schemabuilder create index", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com datastax driver core schemabuilder u d t type frozen r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com datastax driver core schemabuilder u d t type literal r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com google common base optional from nullable r1", "r6 = com datastax driver core schemabuilder table option r0", "r6 cassandra21 key cache = $ r3", "$ r4 = com google common base optional from nullable r2", "r7 = com datastax driver core schemabuilder table option r0", "r7 cassandra21 row cache = $ r4", "r8 = com datastax driver core schemabuilder table option r0", "$ r5 = r8 self", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "com datastax driver core schemabuilder table option validate rate value r1 \\ `` bloom filter false positive change\\ ``", "$ r2 = com google common base optional from nullable r1", "r4 = com datastax driver core schemabuilder table option r0", "r4 bloom filter f p chance = $ r2", "r5 = com datastax driver core schemabuilder table option r0", "$ r3 = r5 self", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com google common base optional from nullable r1", "r4 = com datastax driver core schemabuilder table option r0", "r4 gc grace second = $ r2", "r5 = com datastax driver core schemabuilder table option r0", "$ r3 = r5 self", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = com google common base string be null or empty r1", "if $ z0 == 0 goto label1", "r7 = new java lang illegal argument exception", "specialinvoke r7 < init > \\ `` key for custom option should not be null or blank\\ ``", "throw r7", "if $ z0 == 0 goto label1", "label r8 = com datastax driver core schemabuilder table option r0", "$ r3 = r8 custom option", "$ r4 = com datastax driver core schemabuilder table option build custom option r1 r2", "$ r3 add $ r4", "r9 = com datastax driver core schemabuilder table option r0", "$ r5 = r9 self", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r9 = com datastax driver core simple statement r0", "$ r1 = r9 value", "if $ r1 ! = null goto label1", "r7 = new java lang illegal state exception", "specialinvoke r7 < init > \\ `` this statement do not have positional values\\ ``", "throw r7", "if $ r1 ! = null goto label1", "label if i0 < 0 goto label2", "r10 = com datastax driver core simple statement r0", "$ r3 = r10 value", "$ i1 = lengthof $ r3", "if i0 < $ i1 goto label3", "label r8 = new java lang array index out of bound exception", "specialinvoke r8 < init > i0", "throw r8", "if i0 < $ i1 goto label3", "label r11 = com datastax driver core simple statement r0", "$ r4 = r11 value", "$ r5 = $ r4 [ i0 ]", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core socket option r0", "$ r1 = r2 reuse address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com datastax driver core statement r0", "r2 retry policy = r1", "r3 = com datastax driver core statement r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core token range r0", "$ r1 = r2 start", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new com datastax driver core type codec $ custom codec", "r3 = com datastax driver core data type r0", "specialinvoke r2 < init > r3 null", "r4 = com datastax driver core type codec r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core user type r0", "$ r1 = r2 keyspace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com datastax driver core version number r0", "$ i0 = r1 minor", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com datastax driver core version number r0", "$ r1 = r2 build", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph annotation enum value r0", "$ r1 = r2 load class and return enum value 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = io github classgraph array class info r0", "$ r1 = r3 array type signature", "$ r2 = $ r1 get type signature str", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io github classgraph array type signature r0", "$ r2 = r3 element type signature", "$ r2 find referenced class name r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph class graph r0", "$ r1 = r2 scan spec", "$ r1 scan nest jar = 0", "r3 = io github classgraph class graph r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = io github classgraph class graph r0", "r3 enable class info", "r4 = io github classgraph class graph r0", "$ r2 = r4 scan spec", "$ r2 enable external class = 1", "r5 = io github classgraph class graph r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph class graph r0", "$ r1 = r2 scan spec", "$ r1 ignore parent module layer = 1", "r3 = io github classgraph class graph r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r1 [ i1 ]", "r4 = nonapi io github classgraph utils jar utils leaf name r3", "$ z0 = r4 equal r3", "if $ z0 ! = 0 goto label2", "r13 = new java lang illegal argument exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r9 = r12 append \\ `` can only blacklist jar by leafname \\ ``", "$ r10 = $ r9 append r3", "$ r11 = $ r10 to string", "specialinvoke r13 < init > $ r11", "throw r13", "if $ z0 ! = 0 goto label2", "label r14 = io github classgraph class graph r0", "$ r5 = r14 scan spec", "$ r6 = $ r5 jar white black list", "$ r6 add to blacklist r4", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label r15 = io github classgraph class graph r0", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = io github classgraph class info r0", "$ i0 = r1 modifier", "$ i1 = $ i0 & 8192", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = io github classgraph class info r0", "$ r2 = r4 related class", "$ r1 = io github classgraph class info $ rel type classes_implementing", "$ r3 = $ r2 get $ r1", "if $ r3 ! = null goto label1", "r5 = io github classgraph class info r0", "$ z0 = r5 be interface", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r5 = new io github classgraph class info list", "$ r3 = io github classgraph class info $ rel type contains_inner_class", "$ r2 = newarray io github classgraph class info $ class type [ 0 ]", "r6 = io github classgraph class info r0", "$ r4 = specialinvoke r6 filter class info $ r3 0 $ r2", "specialinvoke r5 < init > $ r4 1", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph class info r0", "$ r1 = specialinvoke r2 get declare method info null 0 1 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = io github classgraph class info r0", "$ r4 = r12 scan result", "$ r5 = $ r4 scan spec", "$ z0 = $ r5 enable field info", "if $ z0 ! = 0 goto label1", "r11 = new java lang illegal argument exception", "specialinvoke r11 < init > \\ `` please call class graph #enable field info before #scan \\ ``", "throw r11", "if $ z0 ! = 0 goto label1", "label r13 = io github classgraph class info r0", "$ r6 = r13 field info", "if $ r6 ! = null goto label2", "return null", "if $ r6 ! = null goto label2", "label r14 = io github classgraph class info r0", "$ r7 = r14 field info", "r2 = $ r7 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label5", "$ r8 = r2 next", "r3 = io github classgraph field info $ r8", "$ r9 = r3 get name", "$ z2 = $ r9 equal r1", "if $ z2 == 0 goto label4", "return r3", "if $ z2 == 0 goto label4", "label goto label3", "if $ z1 == 0 goto label5", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io github classgraph class info r0", "$ r3 = r4 name", "$ r2 = r1 name", "$ i0 = $ r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = specialinvoke r0 equal r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph class type signature r0", "$ r1 = r2 superinterface signatures", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io github classgraph field info r0", "$ i0 = r1 modifier", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = io github classgraph field info r0", "$ r2 = r5 get annotation info", "$ r3 = $ r2 get r1", "$ r4 = io github classgraph annotation info $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io github classgraph method info r0", "$ r2 = r3 get annotation info", "$ z0 = $ r2 contain name r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = io github classgraph method parameter info r0", "$ i0 = r1 modifier", "$ z0 = java lang reflect modifier be final $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph module ref r0", "$ r1 = r2 layer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = io github classgraph scan result r0", "$ r5 = r13 close", "$ z0 = $ r5 get", "if $ z0 == 0 goto label1", "r11 = new java lang illegal argument exception", "specialinvoke r11 < init > \\ `` can not use a scan result after it have be closed\\ ``", "throw r11", "if $ z0 == 0 goto label1", "label r14 = io github classgraph scan result r0", "r2 = r14 get all resource", "$ z1 = r2 be empty", "if $ z1 == 0 goto label2", "$ r8 = io github classgraph resource list empty_list", "return $ r8", "if $ z1 == 0 goto label2", "label r3 = nonapi io github classgraph utils file utils sanitize entry path r1 1", "r15 = io github classgraph scan result r0", "$ r6 = r15 get all resource a map", "$ r7 = $ r6 get r3", "r4 = io github classgraph resource list $ r7", "if r4 ! = null goto label3", "r12 = new io github classgraph resource list", "$ r10 = r12", "specialinvoke r12 < init > 1", "goto label4", "label return $ r10", "if r4 ! = null goto label3", "label $ r10 = r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = io github classgraph scan result r0", "$ r7 = r16 close", "$ z0 = $ r7 get", "if $ z0 == 0 goto label1", "r14 = new java lang illegal argument exception", "specialinvoke r14 < init > \\ `` can not use a scan result after it have be closed\\ ``", "throw r14", "if $ z0 == 0 goto label1", "label r17 = io github classgraph scan result r0", "r2 = r17 get all resource", "$ z1 = r2 be empty", "if $ z1 == 0 goto label2", "$ r11 = io github classgraph resource list empty_list", "return $ r11", "if $ z1 == 0 goto label2", "label r13 = r1", "label $ z2 = r13 start with \\ `` \\ ``", "if $ z2 == 0 goto label4", "r13 = r13 substring 1", "goto label3", "if $ z2 == 0 goto label4", "label r15 = new io github classgraph resource list", "specialinvoke r15 < init >", "r4 = r2 iterator", "label $ z3 = r4 have next", "if $ z3 == 0 goto label7", "$ r9 = r4 next", "r5 = io github classgraph resource $ r9", "r6 = r5 get path", "i0 = r6 last index of 47", "i1 = r6 last index of 46", "if i1 < = i0 goto label6", "$ i2 = i1 + 1", "$ r10 = r6 substring $ i2", "$ z4 = $ r10 equal ignore case r13", "if $ z4 == 0 goto label6", "r15 add r5", "label goto label5", "if $ z3 == 0 goto label7", "label return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r12 = io github classgraph scan result r0", "$ r1 = r12 close", "$ z0 = $ r1 get", "if $ z0 == 0 goto label1", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` can not use a scan result after it have be closed\\ ``", "throw r10", "if $ z0 == 0 goto label1", "label r13 = io github classgraph scan result r0", "$ r2 = r13 scan spec", "$ z1 = $ r2 enable class info", "if $ z1 == 0 goto label2", "r14 = io github classgraph scan result r0", "$ r4 = r14 scan spec", "$ z2 = $ r4 enable annotation info", "if $ z2 ! = 0 goto label3", "label r11 = new java lang illegal argument exception", "specialinvoke r11 < init > \\ `` please call class graph #enable class info and #enable annotation info before #scan \\ ``", "throw r11", "if $ z2 ! = 0 goto label3", "label r15 = io github classgraph scan result r0", "$ r5 = r15 class name to class info", "$ r6 = $ r5 value", "r16 = io github classgraph scan result r0", "$ r7 = r16 scan spec", "$ r8 = io github classgraph class info get all interface or annotation class $ r6 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = io github classgraph type argument r0", "$ r1 = r2 type signature", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = nonapi io github classgraph concurrency interruption checker r0", "$ r1 = r3 interrupt", "$ r1 set 1", "$ r2 = java lang thread current thread", "$ r2 interrupt", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "z0 = @ parameter3", "r2 = @ parameter4", "$ r7 = r0 get class", "$ r8 = r2 get $ r7", "$ r9 = $ r8 field name to field type info", "$ r10 = $ r9 get r1", "r3 = nonapi io github classgraph json field type info $ r10", "if r3 ! = null goto label1", "$ r22 = new java lang illegal argument exception", "$ r23 = new java lang string builder", "specialinvoke $ r23 < init >", "$ r24 = $ r23 append \\ `` class \\ ``", "$ r25 = r0 get class", "$ r26 = $ r25 get name", "$ r27 = $ r24 append $ r26", "$ r28 = $ r27 append \\ `` do not have a field name \\\\\\ `` \\ ``", "$ r29 = $ r28 append r1", "$ r30 = $ r29 append \\ `` \\\\\\ `` \\ ``", "$ r31 = $ r30 to string", "specialinvoke $ r22 < init > $ r31", "throw $ r22", "if r3 ! = null goto label1", "label r4 = r3 field", "$ z1 = nonapi io github classgraph json j s o n utils field be serializable r4 0", "if $ z1 ! = 0 goto label2", "$ r12 = new java lang illegal argument exception", "$ r13 = new java lang string builder", "specialinvoke $ r13 < init >", "$ r14 = $ r13 append \\ `` field \\ ``", "$ r15 = r0 get class", "$ r16 = $ r15 get name", "$ r17 = $ r14 append $ r16", "$ r18 = $ r17 append \\ `` \\ ``", "$ r19 = $ r18 append r1", "$ r20 = $ r19 append \\ `` need to be accessible non-transient and non-final\\ ``", "$ r21 = $ r20 to string", "specialinvoke $ r12 < init > $ r21", "throw $ r12", "if $ z1 ! = 0 goto label2", "label r5 = nonapi io github classgraph json j s o n utils get field value r0 r4", "label goto label5", "label $ r11 = nonapi io github classgraph json j s o n serializer serialize object r5 i0 z0 r2", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "$ r4 = class \\ `` lnonapi io github classgraph scanspec scan spec \\ ``", "r1 = $ r4 get declare field", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label6", "r2 = r1 [ i1 ]", "$ r5 = class \\ `` lnonapi io github classgraph scanspec white black list \\ ``", "$ r6 = r2 get type", "$ z0 = $ r5 be assignable from $ r6", "if $ z0 == 0 goto label5", "label $ r7 = r2 get r0", "$ r8 = nonapi io github classgraph scanspec white black list $ r7", "$ r8 sort prefix", "label goto label5", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 replace 47 46", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r4 = nonapi io github classgraph scanspec white black list r0", "$ r1 = r4 blacklist", "if $ r1 ! = null goto label1", "r5 = nonapi io github classgraph scanspec white black list r0", "$ r2 = r5 blacklist prefix", "if $ r2 ! = null goto label1", "r6 = nonapi io github classgraph scanspec white black list r0", "$ r3 = r6 blacklist glob", "if $ r3 ! = null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r3 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = nonapi io github classgraph scanspec white black list r0", "$ z0 = r2 whitelist be empty", "if $ z0 ! = 0 goto label1", "r3 = nonapi io github classgraph scanspec white black list r0", "$ z1 = r3 be whitelisted and not blacklist r1", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java lang boolean type", "if r2 ! = $ r3 goto label1", "$ r18 = java lang boolean false", "return $ r18", "if r2 ! = $ r3 goto label1", "label $ r4 = java lang integer type", "if r2 ! = $ r4 goto label2", "$ r17 = org apache common beanutils lazy dyna bean integer_ z e r o", "return $ r17", "if r2 ! = $ r4 goto label2", "label $ r5 = java lang long type", "if r2 ! = $ r5 goto label3", "$ r16 = org apache common beanutils lazy dyna bean long_ z e r o", "return $ r16", "if r2 ! = $ r5 goto label3", "label $ r6 = java lang double type", "if r2 ! = $ r6 goto label4", "$ r15 = org apache common beanutils lazy dyna bean double_ z e r o", "return $ r15", "if r2 ! = $ r6 goto label4", "label $ r7 = java lang float type", "if r2 ! = $ r7 goto label5", "$ r14 = org apache common beanutils lazy dyna bean float_ z e r o", "return $ r14", "if r2 ! = $ r7 goto label5", "label $ r8 = java lang byte type", "if r2 ! = $ r8 goto label6", "$ r13 = org apache common beanutils lazy dyna bean byte_ z e r o", "return $ r13", "if r2 ! = $ r8 goto label6", "label $ r9 = java lang short type", "if r2 ! = $ r9 goto label7", "$ r12 = org apache common beanutils lazy dyna bean short_ z e r o", "return $ r12", "if r2 ! = $ r9 goto label7", "label $ r10 = java lang character type", "if r2 ! = $ r10 goto label8", "$ r11 = org apache common beanutils lazy dyna bean character_ s p a c e", "return $ r11", "if r2 ! = $ r10 goto label8", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [], [18], [19], [20], [21], [], [23], [24], [25], [26], [], [28], [29], [30], [31], [], [33], [34], [35], [36], [], [38], [39], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common cli command line r0", "$ r1 = r4 hashcode map", "$ r2 = $ r1 value", "$ r3 = $ r2 iterator", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["org apache common cli option builder number of args = -2", "$ r0 = org apache common cli option builder instance", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r3 = @ parameter3", "r6 = new org apache common cli option", "specialinvoke r6 < init > r1 r2 z0 r3", "r7 = org apache common cli option r0", "r7 add option r6", "r8 = org apache common cli option r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "label r19 = java lang class for name r0", "label goto label4", "label r20 = r19 new instance", "label goto label8", "label return r20"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = new org apache common collection bag predicate bag", "$ r3 = org apache common collection functors instanceof predicate get instance r1", "specialinvoke r4 < init > r0 $ r3", "r5 = org apache common collection bag r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org apache common collection unmodifiable", "if $ z0 == 0 goto label1", "return r0", "if $ z0 == 0 goto label1", "label r2 = new org apache common collection bidimap unmodifiable bidi map", "specialinvoke r2 < init > r0", "r3 = org apache common collection bidi map r2", "return r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collection bound fifo buffer r0", "$ i0 = r1 size", "r2 = org apache common collection bound fifo buffer r0", "$ i1 = r2 max element", "if $ i0 ! = $ i1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = $ i1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collection bound fifo buffer r0", "$ z0 = r5 be empty", "if $ z0 == 0 goto label1", "r4 = new org apache common collection buffer underflow exception", "specialinvoke r4 < init > \\ `` the buffer be already empty\\ ``", "r6 = java lang throwable r4", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org apache common collection bound fifo buffer r0", "$ r1 = r7 m_elements", "r8 = org apache common collection bound fifo buffer r0", "$ i0 = r8 m_start", "$ r2 = $ r1 [ $ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r25 = org apache common collection buffer block buffer r0", "$ r5 = r25 lock", "entermonitor $ r5", "label r26 = org apache common collection buffer block buffer r0", "$ r6 = r26 collection", "$ z0 = $ r6 be empty", "if $ z0 == 0 goto label08", "label r27 = org apache common collection buffer block buffer r0", "$ l0 = r27 timeout", "$ b1 = $ l0 cmp 0l", "if $ b1 > 0 goto label03", "r28 = org apache common collection buffer block buffer r0", "$ r10 = r28 lock", "$ r10 wait", "goto label06", "label goto label01", "if $ b1 > 0 goto label03", "label r29 = org apache common collection buffer block buffer r0", "$ l2 = r29 timeout", "r30 = org apache common collection buffer block buffer r0", "$ r9 = r30 get $ l2", "label exitmonitor $ r5", "label return $ r9", "if $ z0 == 0 goto label08", "label r32 = org apache common collection buffer block buffer r0", "$ r7 = r32 get buffer", "$ r8 = $ r7 get", "exitmonitor $ r5", "label return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collection buffer priority buffer r0", "$ r1 = r2 comparator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collection functors chain closure get instance r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r12 = new java lang illegal argument exception", "specialinvoke $ r12 < init > \\ `` the object and closure map must not be null\\ ``", "throw $ r12", "if r0 ! = null goto label1", "label $ r4 = r0 remove null", "r1 = org apache common collection closure $ r4", "i0 = r0 size", "r13 = newarray org apache common collection closure [ i0 ]", "r14 = newarray org apache common collection predicate [ i0 ]", "i1 = 0", "$ r5 = r0 entry set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r7 = r2 next", "r3 = java util map $ entry $ r7", "$ r8 = r3 get key", "$ r9 = org apache common collection functors equal predicate get instance $ r8", "r14 [ i1 ] = $ r9", "$ r10 = r3 get value", "$ r11 = org apache common collection closure $ r10", "r13 [ i1 ] = $ r11", "i1 = i1 + 1", "goto label2", "if $ z0 == 0 goto label3", "label $ r6 = org apache common collection closure utils switch closure r14 r13 r1", "return $ r6"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label2", "if r1 == null goto label2", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r3 = r2 next", "r1 execute $ r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if r0 == null goto label3", "if r1 == null goto label3", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "r4 = r3 next", "$ z1 = r1 evaluate r4", "if $ z1 == 0 goto label2", "r2 add r4", "label goto label1", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common collection cursorable link list r0", "$ r2 = r5 _head", "$ r3 = $ r2 prev", "r6 = org apache common collection cursorable link list r0", "r6 insert listable $ r3 null r1", "return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r10 = org apache common collection cursorable link list r0", "$ r2 = r10 _head", "$ r3 = $ r2 next", "if $ r3 == null goto label1", "r11 = org apache common collection cursorable link list r0", "$ r5 = r11 _head", "$ r6 = $ r5 next", "r1 = $ r6 value", "r12 = org apache common collection cursorable link list r0", "$ r7 = r12 _head", "$ r8 = $ r7 next", "r13 = org apache common collection cursorable link list r0", "r13 remove listable $ r8", "return r1", "if $ r3 == null goto label1", "label r9 = new java util no such element exception", "specialinvoke r9 < init >", "throw r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collection default map bag r0", "$ r1 = r2 _map", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common collection fast array list r0", "$ z0 = r1 fast", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r7 = org apache common collection fast array list r0", "$ z0 = r7 fast", "if $ z0 == 0 goto label1", "r8 = org apache common collection fast array list r0", "$ r5 = r8 list", "$ z2 = $ r5 be empty", "return $ z2", "if $ z0 == 0 goto label1", "label r9 = org apache common collection fast array list r0", "$ r3 = r9 list", "entermonitor $ r3", "label r10 = org apache common collection fast array list r0", "$ r4 = r10 list", "$ z1 = $ r4 be empty", "exitmonitor $ r3", "label return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = org apache common collection fast array list r0", "$ z1 = r14 fast", "if $ z1 == 0 goto label5", "entermonitor r0", "label r15 = org apache common collection fast array list r0", "$ r8 = r15 list", "$ r9 = $ r8 clone", "r2 = java util array list $ r9", "z0 = r2 remove r1", "r16 = org apache common collection fast array list r0", "r16 list = r2", "exitmonitor r0", "label return z0", "if $ z1 == 0 goto label5", "label r17 = org apache common collection fast array list r0", "$ r5 = r17 list", "entermonitor $ r5", "label r18 = org apache common collection fast array list r0", "$ r6 = r18 list", "$ z2 = $ r6 remove r1", "exitmonitor $ r5", "label return $ z2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r9 = org apache common collection fast array list r0", "$ z0 = r9 fast", "if $ z0 == 0 goto label1", "r10 = org apache common collection fast array list r0", "$ r6 = r10 list", "$ r7 = $ r6 to array", "return $ r7", "if $ z0 == 0 goto label1", "label r11 = org apache common collection fast array list r0", "$ r3 = r11 list", "entermonitor $ r3", "label r12 = org apache common collection fast array list r0", "$ r4 = r12 list", "$ r5 = $ r4 to array", "exitmonitor $ r3", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collection functors all predicate r0", "$ r1 = r2 i predicate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collection functors transformer closure r0", "$ r1 = r2 i transformer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common collection iterators list iterator wrapper r0", "$ i0 = r5 current index", "if $ i0 ! = 0 goto label1", "r4 = new java util no such element exception", "specialinvoke r4 < init >", "throw r4", "if $ i0 ! = 0 goto label1", "label r6 = org apache common collection iterators list iterator wrapper r0", "$ i1 = r6 current index", "$ i2 = $ i1 - 1", "r7 = org apache common collection iterators list iterator wrapper r0", "r7 current index = $ i2", "r8 = org apache common collection iterators list iterator wrapper r0", "$ r1 = r8 list", "r9 = org apache common collection iterators list iterator wrapper r0", "$ i3 = r9 current index", "$ r2 = $ r1 get $ i3", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["$ r0 = org apache common collection iterator utils empty_map_iterator", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collection list type list decorate r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 size", "if i0 ! = 0 goto label1", "return", "if i0 ! = 0 goto label1", "label r9 = org apache common collection map abstract hash map r0", "$ i2 = r9 size", "$ i3 = $ i2 + i0", "$ f1 = float $ i3", "r10 = org apache common collection map abstract hash map r0", "$ f0 = r10 load factor", "$ f2 = $ f1 $ f0", "$ f3 = $ f2 + 1 0f", "i1 = int $ f3", "r11 = org apache common collection map abstract hash map r0", "$ i4 = r11 calculate new capacity i1", "r12 = org apache common collection map abstract hash map r0", "r12 ensure capacity $ i4", "$ r4 = r1 entry set", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = java util map $ entry $ r5", "$ r6 = r3 get key", "$ r7 = r3 get value", "r13 = org apache common collection map abstract hash map r0", "r13 put $ r6 $ r7", "goto label2", "if $ z0 == 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r3 = org apache common collection map abstract hash map r0", "$ i1 = r3 mod count", "$ i2 = $ i1 + 1", "r4 = org apache common collection map abstract hash map r0", "r4 mod count = $ i2", "r5 = org apache common collection map abstract hash map r0", "r5 remove entry r1 i0 r2", "r6 = org apache common collection map abstract hash map r0", "$ i3 = r6 size", "$ i4 = $ i3 - 1", "r7 = org apache common collection map abstract hash map r0", "r7 size = $ i4", "r8 = org apache common collection map abstract hash map r0", "r8 destroy entry r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common collection map abstract link map r0", "$ i0 = r6 size", "if $ i0 ! = 0 goto label1", "r5 = new java util no such element exception", "specialinvoke r5 < init > \\ `` map be empty\\ ``", "throw r5", "if $ i0 ! = 0 goto label1", "label r7 = org apache common collection map abstract link map r0", "$ r1 = r7 header", "$ r2 = $ r1 after", "$ r3 = $ r2 get key", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r6 = org apache common collection map abstract link map r0", "$ i0 = r6 size", "if $ i0 ! = 0 goto label1", "r5 = new java util no such element exception", "specialinvoke r5 < init > \\ `` map be empty\\ ``", "throw r5", "if $ i0 ! = 0 goto label1", "label r7 = org apache common collection map abstract link map r0", "$ r1 = r7 header", "$ r2 = $ r1 before", "$ r3 = $ r2 get key", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r5 = new org apache common collection map abstract link map $ link entry", "specialinvoke r5 < init > r1 i0 r2 r3", "r6 = org apache common collection map abstract hash map $ hash entry r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 after", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common collection map composite map r0", "r2 mutator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common collection map composite map r0", "$ r2 = r7 mutator", "if $ r2 ! = null goto label1", "r6 = new java lang unsupported operation exception", "specialinvoke r6 < init > \\ `` no mutator specified\\ ``", "throw r6", "if $ r2 ! = null goto label1", "label r8 = org apache common collection map composite map r0", "$ r4 = r8 mutator", "r9 = org apache common collection map composite map r0", "$ r3 = r9 composite", "r10 = org apache common collection map composite map r0", "$ r4 put all r10 $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be empty", "if $ z0 == 0 goto label1", "return r1", "if $ z0 == 0 goto label1", "label r13 = new org apache common collection map link map", "$ i0 = r1 size", "specialinvoke r13 < init > $ i0", "$ r6 = r1 entry set", "r3 = $ r6 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "$ r7 = r3 next", "r4 = java util map $ entry $ r7", "$ r8 = r4 get key", "r14 = org apache common collection map transform map r0", "$ r9 = r14 transform key $ r8", "$ r10 = r4 get value", "r15 = org apache common collection map transform map r0", "$ r11 = r15 transform value $ r10", "r16 = java util map r13", "r16 put $ r9 $ r11", "goto label2", "if $ z1 == 0 goto label3", "label r17 = java util map r13", "return r17"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "r2 = r0 get r1", "if r2 == null goto label1", "$ z0 = r2 instanceof java util map", "if $ z0 == 0 goto label1", "$ r3 = java util map r2", "return $ r3", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org apache common collection map utils get short r0 r1", "if r3 ! = null goto label1", "r3 = r2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org apache common collection map utils get double r0 r1", "if r3 ! = null goto label1", "r3 = r2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache common collection map utils be empty r0", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org apache common collection map predicate map decorate r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collection map multi value map decorate r0 r1", "r3 = java util map $ r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache common collection map multi value map decorate r0 r1", "r3 = java util map $ r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common collection reference map r0", "specialinvoke r4 purge", "r5 = org apache common collection reference map r0", "r2 = specialinvoke r5 get entry r1", "if r2 ! = null goto label1", "return 0", "if r2 ! = null goto label1", "label $ r3 = r2 get value", "if $ r3 == null goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ r3 == null goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = new org apache common collection set predicate set", "$ r3 = org apache common collection functors instanceof predicate get instance r1", "specialinvoke r4 < init > r0 $ r3", "r5 = java util set r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common collection synchronize priority queue r0", "$ r1 = r2 m_priority queue", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common collection synchronize priority queue r0", "$ r1 = r3 m_priority queue", "$ r2 = $ r1 peek", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org apache common collection functors n o p transformer instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common compress archivers cpio cpio archive input stream r0", "specialinvoke r1 ensure open", "r2 = org apache common compress archivers cpio cpio archive input stream r0", "$ z0 = r2 entry e o f", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common compress archivers tar tar archive output stream r0", "$ z0 = r3 finish", "if $ z0 ! = 0 goto label1", "r4 = org apache common compress archivers tar tar archive output stream r0", "r4 finish", "label r5 = org apache common compress archivers tar tar archive output stream r0", "$ z1 = r5 close", "if $ z1 ! = 0 goto label2", "r6 = org apache common compress archivers tar tar archive output stream r0", "$ r1 = r6 buffer", "$ r1 close", "r7 = org apache common compress archivers tar tar archive output stream r0", "$ r2 = r7 out", "$ r2 close", "r8 = org apache common compress archivers tar tar archive output stream r0", "r8 close = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r1 = org apache common configuration abstract configuration r0", "r1 list delimiter = c0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common configuration abstract configuration r0", "$ z0 = r1 delimiter parse disabled", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common configuration abstract configuration r0", "$ z0 = r1 throw exception on miss", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache common configuration interpol configuration interpolator", "specialinvoke r4 < init >", "r5 = new org apache common configuration abstract configuration $ 1", "r6 = org apache common configuration abstract configuration r0", "specialinvoke r5 < init > r6", "r7 = org apache common lang text str lookup r5", "r4 set default lookup r7", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common configuration abstract configuration $ 2", "r3 = org apache common configuration abstract configuration r0", "specialinvoke r2 < init > r3", "r4 = org apache common configuration abstract configuration r0", "r5 = org apache common configuration event configuration error listener r2", "r4 add error listener r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r8 = org apache common configuration abstract file configuration r0", "$ r1 = r8 get file name", "if $ r1 ! = null goto label1", "r7 = new org apache common configuration configuration exception", "specialinvoke r7 < init > \\ `` no file name have be set ! \\ ``", "r9 = java lang throwable r7", "throw r9", "if $ r1 ! = null goto label1", "label r10 = org apache common configuration abstract file configuration r0", "$ r2 = r10 source u r l", "if $ r2 == null goto label2", "r11 = org apache common configuration abstract file configuration r0", "$ r5 = r11 source u r l", "r12 = org apache common configuration abstract file configuration r0", "r12 save $ r5", "goto label3", "label r15 = org apache common configuration abstract file configuration r0", "$ r4 = r15 strategy", "$ r4 init", "return", "if $ r2 == null goto label2", "label r13 = org apache common configuration abstract file configuration r0", "$ r3 = r13 file name", "r14 = org apache common configuration abstract file configuration r0", "r14 save $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common configuration abstract file configuration r0", "$ r3 = r5 reload lock", "entermonitor $ r3", "label r6 = org apache common configuration abstract file configuration r0", "$ i0 = r6 no reload", "$ i1 = $ i0 + 1", "r7 = org apache common configuration abstract file configuration r0", "r7 no reload = $ i1", "exitmonitor $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common configuration abstract hierarchical file configuration r0", "r2 delegate = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration base configuration r0", "$ r1 = r2 store", "$ z0 = $ r1 be empty", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new java io file", "specialinvoke r6 < init > r1", "r2 = r6 get absolute file", "$ r4 = r2 get name", "r7 = org apache common configuration configuration factory r0", "r7 configuration file name = $ r4", "$ r5 = r2 get parent", "r8 = org apache common configuration configuration factory r0", "r8 implicit base path = $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache common configuration configuration key r0", "$ r2 = r7 key buffer", "$ i0 = $ r2 length", "if $ i0 < = 0 goto label1", "r8 = org apache common configuration configuration key r0", "$ z0 = specialinvoke r8 have delimiter", "if $ z0 ! = 0 goto label1", "$ z1 = org apache common configuration configuration key be attribute key r1", "if $ z1 ! = 0 goto label1", "r9 = org apache common configuration configuration key r0", "$ r4 = r9 key buffer", "$ r4 append 46", "label r10 = org apache common configuration configuration key r0", "$ r6 = r10 key buffer", "$ r6 append r1", "r11 = org apache common configuration configuration key r0", "specialinvoke r11 remove trail delimiter", "r12 = org apache common configuration configuration key r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ r2 = r0 get protocol", "$ z0 = $ r2 equal \\ `` file\\ ``", "if $ z0 ! = 0 goto label2", "label return null", "if $ z0 ! = 0 goto label2", "label $ r3 = r0 get file", "$ c1 = java io file separator char", "r11 = $ r3 replace 47 $ c1", "i8 = 0", "label $ i9 = r11 index of 37 i8", "i8 = $ i9", "if $ i9 < 0 goto label4", "$ i2 = $ i9 + 2", "$ i3 = r11 length", "if $ i2 > = $ i3 goto label3", "$ i5 = $ i9 + 1", "$ i4 = $ i9 + 3", "r1 = r11 substring $ i5 $ i4", "$ i6 = java lang integer parse int r1 16", "c0 = char $ i6", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = r11 substring 0 $ i9", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append c0", "$ i7 = $ i9 + 3", "$ r9 = r11 substring $ i7", "$ r10 = $ r8 append $ r9", "r11 = $ r10 to string", "goto label3", "if $ i9 < 0 goto label4", "label $ r4 = new java io file", "specialinvoke $ r4 < init > r11", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org apache common configuration configuration x m l reader r0", "$ r3 = r9 get exception", "if $ r3 ! = null goto label6", "label if r2 ! = null goto label2", "$ r6 = org apache common configuration configuration x m l reader empty_attrs", "goto label3", "label r10 = org apache common configuration configuration x m l reader r0", "$ r4 = r10 get content handler", "$ r4 start element \\ `` \\", "label goto label6", "label return", "label if r2 ! = null goto label2", "label $ r6 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util array list", "specialinvoke r4 < init >", "r5 = org apache common configuration data configuration r0", "$ r3 = r5 get short list r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray short [ 0 ]", "r4 = org apache common configuration data configuration r0", "$ r3 = r4 get short array r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util array list", "specialinvoke r4 < init >", "r5 = org apache common configuration data configuration r0", "$ r3 = r5 get long list r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new java util array list", "specialinvoke r4 < init >", "r5 = org apache common configuration data configuration r0", "$ r3 = r5 get big integer list r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = newarray java net url [ 0 ]", "r4 = org apache common configuration data configuration r0", "$ r3 = r4 get u r l array r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common configuration data configuration r0", "$ r2 = r4 get class \\ `` ljava awt color \\", "$ r3 = java awt color $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common configuration default configuration builder r0", "$ r2 = r5 provider", "$ r3 = $ r2 get r1", "$ r4 = org apache common configuration default configuration builder $ configuration provider $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r7 = org apache common configuration default configuration builder r0", "r7 load", "label r8 = org apache common configuration default configuration builder r0", "r8 init file system", "r9 = org apache common configuration default configuration builder r0", "r9 init system property", "r10 = org apache common configuration default configuration builder r0", "r10 configure entity resolver", "r11 = org apache common configuration default configuration builder r0", "r11 register configure provider", "r12 = org apache common configuration default configuration builder r0", "r12 register configure lookup", "r13 = org apache common configuration default configuration builder r0", "r1 = r13 create result configuration", "r14 = org apache common configuration default configuration builder r0", "r14 construct configuration = r1", "r15 = org apache common configuration default configuration builder r0", "r2 = specialinvoke r15 fetch top level override configs", "r16 = org apache common configuration default configuration builder r0", "$ r5 = specialinvoke r16 fetch child configs \\ `` override\\ ``", "r2 add all $ r5", "r17 = org apache common configuration default configuration builder r0", "r17 init combine configuration r1 r2 \\ `` header combiner override list-nodes node\\ ``", "r18 = org apache common configuration default configuration builder r0", "r3 = specialinvoke r18 fetch child configs \\ `` additional\\ ``", "$ z2 = r3 be empty", "if $ z2 ! = 0 goto label2", "r19 = org apache common configuration default configuration builder r0", "r4 = r19 create additionals configuration r1", "$ r6 = org apache common configuration default configuration builder additional_name", "r20 = org apache common configuration abstract configuration r4", "r1 add configuration r20 $ r6", "r21 = org apache common configuration default configuration builder r0", "r21 init combine configuration r4 r3 \\ `` header combiner additional list-nodes node\\ ``", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration event configuration event r0", "$ r1 = r2 property value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new java util array list", "r5 = org apache common configuration event event source r0", "$ r2 = r5 listener", "specialinvoke r4 < init > $ r2", "$ r3 = java util collection unmodifiable collection r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = org apache common configuration event event source r0", "$ r3 = r5 lock detail event count", "entermonitor $ r3", "label if z0 == 0 goto label2", "r6 = org apache common configuration event event source r0", "$ i2 = r6 detail event", "$ i3 = $ i2 + 1", "r7 = org apache common configuration event event source r0", "r7 detail event = $ i3", "goto label3", "label exitmonitor $ r3", "label goto label7", "label return", "label if z0 == 0 goto label2", "label r8 = org apache common configuration event event source r0", "$ i0 = r8 detail event", "$ i1 = $ i0 - 1", "r9 = org apache common configuration event event source r0", "r9 detail event = $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r4 = new java util array list", "r5 = org apache common configuration event event source r0", "$ r2 = r5 error listener", "specialinvoke r4 < init > $ r2", "$ r3 = java util collection unmodifiable collection r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r1 = new java lang null pointer exception", "specialinvoke $ r1 < init > \\ `` a file system implementation be required\\ ``", "throw $ r1", "if r0 ! = null goto label1", "label org apache common configuration file system file system = r0", "return"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common configuration dynamic combined configuration r0", "$ r2 = r4 configs", "if $ r2 == null goto label1", "r5 = org apache common configuration dynamic combined configuration r0", "$ r3 = specialinvoke r5 get current config", "$ r3 set root r1", "goto label2", "label return", "if $ r2 == null goto label1", "label specialinvoke r0 set root r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common configuration hierarchical configuration r0", "$ r2 = r3 fetch node list r1", "$ i0 = $ r2 size", "$ i1 = $ i0 - 1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common configuration hierarchical configuration r0", "$ r2 = r5 get expression engine", "r6 = org apache common configuration hierarchical configuration r0", "$ r3 = r6 get root node", "$ r4 = $ r2 query $ r3 r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common configuration hierarchical configuration x m l reader r0", "r2 configuration = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label $ z0 = r1 start with \\ `` [ \\ ``", "if $ z0 == 0 goto label2", "$ z1 = r1 end with \\ `` ] \\ ``", "if $ z1 == 0 goto label2", "$ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = org apache common configuration interpol configuration interpolator global lookup", "entermonitor $ r3", "label $ r4 = org apache common configuration interpol configuration interpolator global lookup", "$ r5 = $ r4 remove r0", "if $ r5 == null goto label2", "$ z0 = 1", "goto label3", "label exitmonitor $ r3", "label return $ z0", "if $ r5 == null goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration interpol configuration interpolator r0", "$ r1 = r2 parent interpolator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = org apache common configuration j n d i configuration r0", "$ r1 = r9 base context", "if $ r1 ! = null goto label3", "r10 = org apache common configuration j n d i configuration r0", "$ r2 = r10 get context", "r11 = org apache common configuration j n d i configuration r0", "$ r3 = r11 prefix", "if $ r3 ! = null goto label1", "$ r7 = \\ `` \\ ``", "goto label2", "label $ r4 = $ r2 lookup $ r7", "$ r5 = javax name context $ r4", "r13 = org apache common configuration j n d i configuration r0", "r13 base context = $ r5", "label r14 = org apache common configuration j n d i configuration r0", "$ r8 = r14 base context", "return $ r8", "if $ r3 ! = null goto label1", "label r12 = org apache common configuration j n d i configuration r0", "$ r7 = r12 prefix"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common configuration reload file change reload strategy r0", "$ l0 = r1 refresh delay", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` expression engine must not be null ! \\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = org apache common configuration tree default configuration key r0", "r4 expression engine = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return \\ `` \\ ``", "if r1 ! = null goto label1", "label r4 = r1", "label r5 = org apache common configuration tree default configuration key r0", "$ z0 = specialinvoke r5 have trail delimiter r4", "if $ z0 == 0 goto label3", "$ i0 = r4 length", "r6 = org apache common configuration tree default configuration key r0", "$ r2 = r6 get expression engine", "$ r3 = $ r2 get property delimiter", "$ i1 = $ r3 length", "$ i2 = $ i0 - $ i1", "r4 = r4 substring 0 $ i2", "goto label2", "if $ z0 == 0 goto label3", "label return r4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration tree default configuration node r0", "$ r1 = r2 parent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common configuration tree default configuration node r0", "$ r1 = r3 child", "$ r2 = $ r1 get sub node", "$ i0 = $ r2 size", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache common configuration tree default configuration node r0", "$ r1 = r3 child", "$ r2 = $ r1 get node i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration tree default configuration node r0", "$ r1 = r2 child", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common configuration tree default configuration node r0", "$ r1 = r3 attribute", "$ r2 = $ r1 get sub node", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration tree default expression engine r0", "$ r1 = r2 index end", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common configuration tree node add data r0", "$ z0 = r1 attribute", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common configuration tree node add data r0", "r2 new node name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache common configuration tree node add data r0", "$ r2 = r6 path node", "if $ r2 ! = null goto label1", "r5 = new java util link list", "specialinvoke r5 < init >", "r7 = org apache common configuration tree node add data r0", "r7 path node = r5", "label r8 = org apache common configuration tree node add data r0", "$ r3 = r8 path node", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label2", "$ r4 = r1 get child", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = org apache common configuration tree configuration node $ r5", "r6 = org apache common configuration tree view node r0", "r6 add child r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r7 = org apache common configuration x m l configuration r0", "$ r1 = r7 get document", "if $ r1 ! = null goto label3", "r8 = org apache common configuration x m l configuration r0", "$ r5 = r8 root element name", "if $ r5 ! = null goto label1", "$ r6 = \\ `` configuration\\ ``", "goto label2", "label return $ r6", "if $ r5 ! = null goto label1", "label r9 = org apache common configuration x m l configuration r0", "$ r6 = r9 root element name", "if $ r1 ! = null goto label3", "label r10 = org apache common configuration x m l configuration r0", "$ r2 = r10 get document", "$ r3 = $ r2 get document element", "$ r4 = $ r3 get node name", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common configuration x m l configuration r0", "$ z0 = r1 schema validation", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration x m l configuration r0", "$ r1 = r2 document", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 create element \\ `` properties\\ ``", "r2 append child r3", "r15 = org apache common configuration x m l property configuration r0", "$ r7 = r15 get header", "if $ r7 == null goto label1", "r13 = r1 create element \\ `` comment\\ ``", "r3 append child r13", "r16 = org apache common configuration x m l property configuration r0", "$ r11 = r16 get header", "$ r12 = org apache common lang string escape utils escape xml $ r11", "r13 set text content $ r12", "label r17 = org apache common configuration x m l property configuration r0", "r14 = r17 get key", "label $ z1 = r14 have next", "if $ z1 == 0 goto label5", "$ r8 = r14 next", "r4 = java lang string $ r8", "r18 = org apache common configuration x m l property configuration r0", "r5 = r18 get property r4", "$ z0 = r5 instanceof java util list", "if $ z0 == 0 goto label3", "$ r9 = java util list r5", "r19 = org apache common configuration x m l property configuration r0", "specialinvoke r19 write property r1 r3 r4 $ r9", "goto label4", "label goto label2", "if $ z0 == 0 goto label3", "label r20 = org apache common configuration x m l property configuration r0", "specialinvoke r20 write property r1 r3 r4 r5", "if $ z1 == 0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r11 = new java util hash map", "specialinvoke r11 < init >", "r12 = org apache common configuration beanutils x m l bean declaration r0", "$ r5 = r12 get node", "$ r6 = $ r5 get child", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r7 = r2 next", "r3 = org apache common configuration tree configuration node $ r7", "r13 = org apache common configuration beanutils x m l bean declaration r0", "$ z1 = r13 be reserve node r3", "if $ z1 ! = 0 goto label2", "$ r8 = r3 get name", "r14 = org apache common configuration beanutils x m l bean declaration r0", "$ r9 = r14 create bean declaration r3", "r11 put $ r8 $ r9", "label goto label1", "if $ z0 == 0 goto label3", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common configuration configuration key r0", "$ r1 = r3 key buffer", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common configuration configuration key r0", "$ r1 = r3 key buffer", "$ r2 = java lang string value of $ r1", "$ i0 = $ r2 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = new org apache common configuration configuration map $ configuration set", "r4 = org apache common configuration configuration map r0", "$ r2 = r4 configuration", "specialinvoke r3 < init > $ r2", "r5 = java util set r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common configuration configuration map r0", "$ r2 = r5 configuration", "$ r3 = java lang string value of r1", "$ r4 = $ r2 get property $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache common configuration hierarchical configuration r0", "r6 fire event 2 r1 null 1", "r7 = org apache common configuration hierarchical configuration r0", "r2 = r7 fetch node list r1", "r3 = r2 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r4 = r3 next", "$ r5 = org apache common configuration tree configuration node $ r4", "r8 = org apache common configuration hierarchical configuration r0", "r8 clear node $ r5", "goto label1", "if $ z0 == 0 goto label2", "label r9 = org apache common configuration hierarchical configuration r0", "r9 fire event 2 r1 null 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new org apache common configuration hierarchical configuration $ node", "specialinvoke $ r2 < init > r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common configuration hierarchical configuration x m l reader r0", "$ r1 = r2 get configuration", "r3 = org apache common configuration configuration $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang unsupported operation exception", "specialinvoke $ r3 < init > \\ `` read only configuration\\ ``", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common csv c s v format r0", "$ r1 = r2 record separator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common csv c s v format r0", "$ r1 = r2 null string", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common csv c s v format r0", "$ r1 = r2 quote character", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r2 = r16 append \\ `` c s v record [ comment=\\ ``", "r17 = org apache common csv c s v record r0", "$ r3 = r17 comment", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\", "r18 = org apache common csv c s v record r0", "$ r6 = r18 map", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\", "r19 = org apache common csv c s v record r0", "$ l0 = r19 record number", "$ r9 = $ r8 append $ l0", "$ r10 = $ r9 append \\", "r20 = org apache common csv c s v record r0", "$ r11 = r20 value", "$ r12 = java util array to string $ r11", "$ r13 = $ r10 append $ r12", "$ r14 = $ r13 append \\ `` ] \\ ``", "$ r15 = $ r14 to string", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r11 = new java lang string builder", "specialinvoke r11 < init >", "r12 = org apache common csv token r0", "$ r2 = r12 type", "$ r3 = $ r2 name", "$ r4 = r11 append $ r3", "$ r5 = $ r4 append \\ `` [ \\ ``", "r13 = org apache common csv token r0", "$ r6 = r13 content", "$ r7 = $ r6 to string", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common dbcp2 basic data source r0", "$ r1 = r3 connection pool", "if $ r1 == null goto label1", "r4 = org apache common dbcp2 basic data source r0", "$ r2 = r4 connection pool", "$ r2 evict", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 basic data source r0", "$ z0 = r1 auto commit on return", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 basic data source r0", "$ z0 = r1 cache state", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 basic data source r0", "$ z0 = r1 fast fail validation", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 basic data source r0", "$ i0 = r1 max idle", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 basic data source r0", "$ l0 = r1 max wait millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 basic data source r0", "$ i0 = r1 min idle", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common dbcp2 basic data source r0", "$ r1 = r3 abandon config", "if $ r1 ! = null goto label1", "$ z0 = 0", "goto label2", "label return $ z0", "if $ r1 ! = null goto label1", "label r4 = org apache common dbcp2 basic data source r0", "$ r2 = r4 abandon config", "$ z0 = $ r2 get remove abandon on maintenance"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common dbcp2 basic data source r0", "r1 auto commit on return = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common dbcp2 basic data source r0", "$ r2 = r4 connection pool", "if $ r2 == null goto label1", "r5 = org apache common dbcp2 basic data source r0", "$ r3 = r5 connection pool", "$ r3 set eviction policy class name r1", "label r6 = org apache common dbcp2 basic data source r0", "r6 eviction policy class name = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache common dbcp2 basic data source r0", "r3 max total = i0", "r4 = org apache common dbcp2 basic data source r0", "$ r1 = r4 connection pool", "if $ r1 == null goto label1", "r5 = org apache common dbcp2 basic data source r0", "$ r2 = r5 connection pool", "$ r2 set max total i0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org apache common dbcp2 basic data source r0", "r3 test while idle = z0", "r4 = org apache common dbcp2 basic data source r0", "$ r1 = r4 connection pool", "if $ r1 == null goto label1", "r5 = org apache common dbcp2 basic data source r0", "$ r2 = r5 connection pool", "$ r2 set test while idle z0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 cpdsadapter connection impl r0", "$ z0 = r1 access to underlie connection allow", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 cpdsadapter connection impl r0", "$ z0 = r2 be access to underlie connection allow", "if $ z0 == 0 goto label1", "$ r1 = specialinvoke r0 get innermost delegate internal", "return $ r1", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "specialinvoke r9 assert initialization allow", "r10 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "r10 connection property = r1", "r11 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "$ r2 = r11 connection property", "if $ r2 == null goto label2", "r12 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "$ r3 = r12 connection property", "$ z0 = $ r3 contain key \\ `` user\\ ``", "if $ z0 == 0 goto label1", "r13 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "$ r7 = r13 connection property", "$ r8 = $ r7 get property \\ `` user\\ ``", "r14 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "r14 set user $ r8", "label r15 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "$ r4 = r15 connection property", "$ z1 = $ r4 contain key \\ `` password\\ ``", "if $ z1 == 0 goto label2", "r16 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "$ r5 = r16 connection property", "$ r6 = $ r5 get property \\ `` password\\ ``", "r17 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "r17 set password $ r6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "specialinvoke r2 assert initialization allow", "r3 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0", "r3 url = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 datasources per user pool data source r0", "$ i0 = r1 get num active null", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 delegate database meta data r0", "$ r1 = r2 database meta data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common dbcp2 delegate statement r0", "$ z0 = r1 close", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common dbcp2 p stmt key r0", "$ r1 = r2 column index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = org apache common dbcp2 utils message", "r2 = $ r4 get string r0", "if r1 == null goto label1", "$ i0 = lengthof r1", "if $ i0 ! = 0 goto label2", "label return r2", "if $ i0 ! = 0 goto label2", "label $ r5 = new java text message format", "specialinvoke $ r5 < init > r2", "$ r6 = new java lang string buffer", "specialinvoke $ r6 < init >", "$ r7 = $ r5 format r1 $ r6 null", "$ r8 = $ r7 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common httpclient params http method params r0", "$ r1 = r3 get parameter \\ `` http protocol uri-charset\\ ``", "r2 = java lang string $ r1", "if r2 ! = null goto label1", "r2 = \\ `` utf-8\\ ``", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "label specialinvoke r0 close", "label r5 = org apache common io input tee input stream r0", "$ z0 = r5 close branch", "if $ z0 == 0 goto label6", "r6 = org apache common io input tee input stream r0", "$ r2 = r6 branch", "$ r2 close", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org apache common io output proxy writer r0", "$ r2 = r3 out", "$ r2 write r1 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 close", "r2 = org apache common io output tee output stream r0", "$ r1 = r2 branch", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ i0 = org apache common lang array utils index of r0 z0 0", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache common lang builder reflection to string builder to string r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common lang mutable mutable byte r0", "$ b0 = r1 value", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common lang time stop watch r0", "$ i0 = r3 run state", "if $ i0 == 2 goto label1", "r4 = org apache common lang time stop watch r0", "$ i4 = r4 run state", "if $ i4 ! = 3 goto label2", "label r5 = org apache common lang time stop watch r0", "$ l2 = r5 stop time", "r6 = org apache common lang time stop watch r0", "$ l1 = r6 start time", "$ l3 = $ l2 - $ l1", "return $ l3", "if $ i4 ! = 3 goto label2", "label r7 = org apache common lang time stop watch r0", "$ i5 = r7 run state", "if $ i5 ! = 0 goto label3", "return 0l", "if $ i5 ! = 0 goto label3", "label r8 = org apache common lang time stop watch r0", "$ i6 = r8 run state", "if $ i6 ! = 1 goto label4", "$ l7 = java lang system current time millis", "r9 = org apache common lang time stop watch r0", "$ l8 = r9 start time", "$ l9 = $ l7 - $ l8", "return $ l9", "if $ i6 ! = 1 goto label4", "label r2 = new java lang runtime exception", "specialinvoke r2 < init > \\ `` illegal run state have occur \\ ``", "throw r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common lang time stop watch r0", "$ i0 = r3 run state", "if $ i0 == 1 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` stopwatch be not run \\ ``", "throw r2", "if $ i0 == 1 goto label1", "label $ l1 = java lang system current time millis", "r4 = org apache common lang time stop watch r0", "r4 stop time = $ l1", "r5 = org apache common lang time stop watch r0", "r5 split state = 11", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "org apache common lang validate not null r0", "i1 = 0", "goto label3", "label $ i0 = lengthof r0", "if i1 < $ i0 goto label1", "label $ r1 = r0 [ i1 ]", "if $ r1 ! = null goto label2", "$ r2 = new java lang illegal argument exception", "$ r3 = new java lang string buffer", "specialinvoke $ r3 < init > \\ `` the validated array contain null element at index \\ ``", "$ r4 = $ r3 append i1", "$ r5 = $ r4 to string", "specialinvoke $ r2 < init > $ r5", "throw $ r2", "if $ r1 ! = null goto label2", "label i1 = i1 + 1", "if i1 < $ i0 goto label1", "return"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init > \\ `` the validated array be empty\\ ``", "throw $ r1", "if $ i0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache common log impl log4 j category log r0", "$ r5 = r6 category", "$ r4 = org apache common log impl log4 j category log fqcn", "$ r3 = org apache log4j level debug", "$ r5 log $ r4 $ r3 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache common log impl log4 j category log r0", "$ r5 = r6 category", "$ r4 = org apache common log impl log4 j category log fqcn", "$ r3 = org apache log4j level debug", "$ r5 log $ r4 $ r3 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common log impl log4 j category log r0", "$ r4 = r5 category", "$ r3 = org apache common log impl log4 j category log fqcn", "$ r2 = org apache log4j level error", "$ r4 log $ r3 $ r2 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org apache common log impl log4 j category log r0", "$ r5 = r6 category", "$ r4 = org apache common log impl log4 j category log fqcn", "$ r3 = org apache log4j level error", "$ r5 log $ r4 $ r3 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache common log impl log4 j category log r0", "$ r4 = r5 category", "$ r3 = org apache common log impl log4 j category log fqcn", "$ r2 = org apache log4j level fatal", "$ r4 log $ r3 $ r2 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache common log impl log4 j logger is12", "if $ z0 == 0 goto label1", "r9 = org apache common log impl log4 j logger r0", "$ r5 = r9 get logger", "$ r8 = org apache common log impl log4 j logger fqcn", "$ r6 = org apache log4j level fatal", "$ r7 = org apache log4j priority $ r6", "r10 = org apache log4j category $ r5", "r10 log $ r8 $ r7 r1 null", "goto label2", "label return", "if $ z0 == 0 goto label1", "label r11 = org apache common log impl log4 j logger r0", "$ r2 = r11 get logger", "$ r4 = org apache common log impl log4 j logger fqcn", "$ r3 = org apache log4j level fatal", "r12 = org apache log4j category $ r2", "r12 log $ r4 $ r3 r1 null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common log impl log kit logger r0", "r2 debug r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r2 = new org apache common math analysis binary function $ 8", "r3 = org apache common math analysis binary function r0", "specialinvoke r2 < init > r3 d0", "r4 = org apache common math analysis composable function r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r2 = new org apache common math analysis composable function $ 35", "r3 = org apache common math analysis composable function r0", "specialinvoke r2 < init > r3 d0", "r4 = org apache common math analysis composable function r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = new org apache common math analysis polynomial polynomial function", "r5 = org apache common math analysis solver laguerre solver r0", "$ r2 = r5 p", "$ r3 = $ r2 get coefficient", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r1 = @ parameter2", "r2 = org apache common math analysis solver laguerre solver r0", "$ d3 = r2 relative accuracy", "$ d4 = r1 ab", "$ d6 = $ d3 * $ d4", "r3 = org apache common math analysis solver laguerre solver r0", "$ d5 = r3 absolute accuracy", "d2 = java lang math max $ d6 $ d5", "$ d7 = r1 get real", "r4 = org apache common math analysis solver laguerre solver r0", "$ z0 = r4 be sequence d0 $ d7 d1", "if $ z0 == 0 goto label2", "$ d8 = r1 get imaginary", "$ d9 = java lang math ab $ d8", "$ b0 = $ d9 cmpg d2", "if $ b0 < = 0 goto label1", "$ d10 = r1 ab", "r5 = org apache common math analysis solver laguerre solver r0", "$ d11 = r5 function value accuracy", "$ b1 = $ d10 cmpg $ d11", "if $ b1 > 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ b1 > 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "r6 = org apache common math analysis solver univariate real solver impl r0", "$ z0 = r6 be sequence d0 d1 d2", "if $ z0 ! = 0 goto label1", "$ r1 = newarray java lang object [ 3 ]", "$ r2 = java lang double value of d0", "$ r1 [ 0 ] = $ r2", "$ r3 = java lang double value of d1", "$ r1 [ 1 ] = $ r3", "$ r4 = java lang double value of d2", "$ r1 [ 2 ] = $ r4", "$ r5 = org apache common math math runtime exception create illegal argument exception \\ `` invalid interval initial value parameter lower= { 0 } initial= { 1 } upper= { 2 } \\", "throw $ r5", "if $ z0 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache common math distribution cauchy distribution impl r0", "specialinvoke r1 set scale internal d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r2 = org apache common math distribution chi square distribution impl r0", "$ r1 = r2 gamma", "$ d1 = $ r1 cumulative probability d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 0 goto label1", "return 0 0", "if i0 > 0 goto label1", "label r1 = org apache common math distribution zipf distribution impl r0", "$ i1 = r1 number of element", "if i0 < $ i1 goto label2", "return 1 0", "if i0 < $ i1 goto label2", "label r2 = org apache common math distribution zipf distribution impl r0", "$ d0 = r2 exponent", "r3 = org apache common math distribution zipf distribution impl r0", "$ d1 = specialinvoke r3 generalize harmonic i0 $ d0", "r4 = org apache common math distribution zipf distribution impl r0", "$ i2 = r4 number of element", "r5 = org apache common math distribution zipf distribution impl r0", "$ d2 = r5 exponent", "r6 = org apache common math distribution zipf distribution impl r0", "$ d3 = specialinvoke r6 generalize harmonic $ i2 $ d2", "$ d4 = $ d1 $ d3", "return $ d4"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get measurement", "d4 = 0 0", "i1 = 0", "label $ i0 = lengthof r2", "if i1 > = $ i0 goto label2", "$ r3 = r2 [ i1 ]", "d0 = $ r3 get residual", "$ d1 = d0 * d0", "$ r4 = r2 [ i1 ]", "$ d2 = $ r4 get weight", "$ d3 = $ d1 $ d2", "d4 = d4 + $ d3", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return d4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache common math estimation levenberg marquardt estimator r0", "r1 cost relative tolerance = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common math estimation simple estimation problem r0", "$ r2 = r3 parameter", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common math estimation weight measurement r0", "r1 ignore = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common math fraction big fraction r0", "$ r1 = r2 numerator", "$ l0 = $ r1 long value", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common math fraction big fraction r0", "$ r2 = r4 numerator", "r5 = org apache common math fraction big fraction r0", "$ r1 = r5 denominator", "$ r3 = $ r2 divide $ r1", "$ i0 = $ r3 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common math genetics fix generation count r0", "$ i1 = r2 num generation", "r3 = org apache common math genetics fix generation count r0", "$ i0 = r3 max generation", "if $ i1 > = $ i0 goto label1", "r4 = org apache common math genetics fix generation count r0", "$ i2 = r4 num generation", "$ i3 = $ i2 + 1", "r5 = org apache common math genetics fix generation count r0", "r5 num generation = $ i3", "return 0", "if $ i1 > = $ i0 goto label1", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache common math linear abstract field matrix r0", "$ i0 = r8 get row dimension", "$ i1 = r1 get row dimension", "if $ i0 ! = $ i1 goto label1", "r9 = org apache common math linear abstract field matrix r0", "$ i6 = r9 get column dimension", "$ i7 = r1 get column dimension", "if $ i6 == $ i7 goto label2", "label $ r2 = newarray java lang object [ 4 ]", "r10 = org apache common math linear abstract field matrix r0", "$ i2 = r10 get row dimension", "$ r3 = java lang integer value of $ i2", "$ r2 [ 0 ] = $ r3", "r11 = org apache common math linear abstract field matrix r0", "$ i3 = r11 get column dimension", "$ r4 = java lang integer value of $ i3", "$ r2 [ 1 ] = $ r4", "$ i4 = r1 get row dimension", "$ r5 = java lang integer value of $ i4", "$ r2 [ 2 ] = $ r5", "$ i5 = r1 get column dimension", "$ r6 = java lang integer value of $ i5", "$ r2 [ 3 ] = $ r6", "$ r7 = org apache common math math runtime exception create illegal argument exception \\ `` { 0 } x { 1 } and { 2 } x { 3 } matrix be not subtraction compatible\\", "throw $ r7", "if $ i6 == $ i7 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common math linear big matrix impl r0", "$ i0 = r3 get row dimension", "$ r1 = org apache common math linear matrix utils create big identity matrix $ i0", "r4 = org apache common math linear big matrix impl r0", "$ r2 = r4 solve $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r2 = newarray java math big decimal [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r2", "if i2 > = $ i1 goto label2", "r5 = new java math big decimal", "$ d0 = r1 [ i2 ]", "specialinvoke r5 < init > $ d0", "r2 [ i2 ] = r5", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label r6 = org apache common math linear big matrix impl r0", "$ r3 = r6 operate r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r5 = org apache common math linear big matrix impl r0", "$ r1 = r5 lu", "if $ r1 ! = null goto label1", "r6 = org apache common math linear big matrix impl r0", "r6 lu decompose", "label r4 = new org apache common math linear big matrix impl", "r7 = org apache common math linear big matrix impl r0", "$ r3 = r7 lu", "specialinvoke r4 < init > $ r3", "r8 = org apache common math linear big matrix r4", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label01", "return 1", "if r0 ! = r1 goto label01", "label $ z0 = r1 instanceof org apache common math linear open map real vector", "if $ z0 ! = 0 goto label02", "return 0", "if $ z0 ! = 0 goto label02", "label r2 = org apache common math linear open map real vector r1", "r7 = org apache common math linear open map real vector r0", "$ i1 = r7 virtual size", "$ i0 = r2 virtual size", "if $ i1 == $ i0 goto label03", "label r8 = org apache common math linear open map real vector r0", "$ d0 = r8 epsilon", "$ l2 = java lang double double to long bit $ d0", "$ d1 = r2 epsilon", "$ l3 = java lang double double to long bit $ d1", "$ b4 = $ l2 cmp $ l3", "if $ b4 == 0 goto label04", "label r9 = org apache common math linear open map real vector r0", "$ r3 = r9 entry", "r5 = $ r3 iterator", "label $ z1 = r5 have next", "if $ z1 == 0 goto label07", "r5 advance", "$ i9 = r5 key", "d4 = r2 get entry $ i9", "$ l10 = java lang double double to long bit d4", "$ d3 = r5 value", "$ l11 = java lang double double to long bit $ d3", "$ b12 = $ l10 cmp $ l11", "if $ b12 == 0 goto label06", "label goto label05", "if $ z1 == 0 goto label07", "label $ r4 = specialinvoke r2 get entry", "r6 = $ r4 iterator", "label $ z2 = r6 have next", "if $ z2 == 0 goto label10", "r6 advance", "d5 = r6 value", "$ l5 = java lang double double to long bit d5", "$ i6 = r6 key", "r10 = org apache common math linear open map real vector r0", "$ d2 = r10 get entry $ i6", "$ l7 = java lang double double to long bit $ d2", "$ b8 = $ l5 cmp $ l7", "if $ b8 == 0 goto label09", "label goto label08", "if $ z2 == 0 goto label10", "label return 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common math math exception r0", "$ r1 = r4 argument", "$ r2 = $ r1 clone", "$ r3 = java lang object [ ] $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache common math math runtime exception $ 7", "specialinvoke r3 < init > r0 r1", "r4 = java util no such element exception r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = @ parameter1", "r4 = org apache common math ode event event state r0", "r4 t0 = d0", "r5 = org apache common math ode event event state r0", "$ r2 = r5 handler", "$ d1 = $ r2 g d0 r1", "r6 = org apache common math ode event event state r0", "r6 g0 = $ d1", "r7 = org apache common math ode event event state r0", "$ d2 = r7 g0", "$ b0 = $ d2 cmpl 0 0", "if $ b0 < 0 goto label1", "$ z0 = 1", "goto label2", "label r8 = org apache common math ode event event state r0", "r8 g0 positive = $ z0", "return", "if $ b0 < 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache common math ode sample dummy step interpolator", "r3 = org apache common math ode sample dummy step interpolator r0", "specialinvoke r2 < init > r3", "r4 = org apache common math ode sample step interpolator r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 < i1 goto label1", "$ r2 = newarray java lang object [ 2 ]", "$ r3 = java lang integer value of i1", "$ r2 [ 0 ] = $ r3", "$ r4 = java lang integer value of i0", "$ r2 [ 1 ] = $ r4", "$ r5 = org apache common math math runtime exception create illegal argument exception \\ `` upper bound { 0 } must be great than low bound { 1 } \\", "throw $ r5", "if i0 < i1 goto label1", "label r6 = org apache common math random random data impl r0", "$ r1 = specialinvoke r6 get run", "d0 = $ r1 next double", "$ d1 = double i1", "$ d5 = d0 * $ d1", "$ d3 = 1 0 - d0", "$ d2 = double i0", "$ d4 = $ d3 * $ d2", "$ d6 = $ d5 + $ d4", "$ d7 = $ d6 + d0", "$ i2 = int $ d7", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 < i1 goto label1", "$ r2 = newarray java lang object [ 2 ]", "$ r3 = java lang integer value of i1", "$ r2 [ 0 ] = $ r3", "$ r4 = java lang integer value of i0", "$ r2 [ 1 ] = $ r4", "$ r5 = org apache common math math runtime exception create illegal argument exception \\ `` upper bound { 0 } must be great than low bound { 1 } \\", "throw $ r5", "if i0 < i1 goto label1", "label r6 = org apache common math random random data impl r0", "r1 = specialinvoke r6 get sec run", "$ d0 = r1 next double", "$ i2 = i1 - i0", "$ i3 = $ i2 + 1", "$ d1 = double $ i3", "$ d2 = $ d0 * $ d1", "$ i4 = int $ d2", "$ i5 = i0 + $ i4", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org apache common math linear block real matrix", "specialinvoke r4 < init > r1", "r5 = org apache common math stat correlation pearsons correlation r0", "r6 = org apache common math linear real matrix r4", "$ r3 = r5 compute correlation matrix r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "$ b0 = d0 cmpg 0 0", "if $ b0 < = 0 goto label1", "$ b1 = d0 cmpl 100 0", "if $ b1 < = 0 goto label2", "label $ r1 = newarray java lang object [ 1 ]", "$ r2 = java lang double value of d0", "$ r1 [ 0 ] = $ r2", "$ r3 = org apache common math math runtime exception create illegal argument exception \\ `` out of bound quantile value { 0 } must be in 0 100 ] \\", "throw $ r3", "if $ b1 < = 0 goto label2", "label r4 = org apache common math stat descriptive rank percentile r0", "r4 quantile = d0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "org apache common math stat inference test utils unknown distribution chi square test = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "d0 = @ parameter2", "r3 = org apache common math stat inference t test impl r0", "specialinvoke r3 check significance level d0", "r4 = org apache common math stat inference t test impl r0", "$ d1 = r4 pair t test r1 r2", "$ b0 = $ d1 cmpg d0", "if $ b0 > = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 > = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "d0 = @ parameter2", "r3 = org apache common math stat inference t test impl r0", "specialinvoke r3 check significance level d0", "r4 = org apache common math stat inference t test impl r0", "$ d1 = r4 homoscedastic t test r1 r2", "$ b0 = $ d1 cmpg d0", "if $ b0 > = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 > = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "$ i1 = $ i0 - 1", "$ d1 = double $ i1", "d0 = 2 0 $ d1", "r4 = org apache common math transform fast cosine transformer r0", "$ r2 = r4 fct r1", "$ r3 = org apache common math transform fast fourier transformer scale array $ r2 d0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "$ z0 = org apache common math util math utils equal d0 d1", "if $ z0 ! = 0 goto label1", "$ d3 = d1 - d0", "$ d4 = java lang math ab $ d3", "$ b0 = $ d4 cmpg d2", "if $ b0 > 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ b0 > 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["b0 = @ parameter0", "if b0 < 0 goto label1", "$ b1 = 1", "goto label2", "label return $ b1", "if b0 < 0 goto label1", "label $ b1 = -1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["b0 = @ parameter0", "if b0 < 0 goto label1", "$ b1 = 1", "goto label2", "label return $ b1", "if b0 < 0 goto label1", "label $ b1 = -1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["b0 = @ parameter0", "if b0 < 0 goto label1", "$ b1 = 1", "goto label2", "label return $ b1", "if b0 < 0 goto label1", "label $ b1 = -1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ d2 = d0 + 3 141592653589793", "$ d3 = $ d2 - d1", "$ d4 = $ d3 6 283185307179586", "$ d5 = java lang math floor $ d4", "$ d6 = 6 283185307179586 * $ d5", "$ d7 = d0 - $ d6", "return $ d7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "d5 = 0 0", "i1 = 0", "label $ i0 = lengthof r0", "if i1 > = $ i0 goto label2", "$ d3 = r0 [ i1 ]", "$ d2 = r1 [ i1 ]", "d0 = $ d3 - $ d2", "$ d4 = d0 * d0", "d5 = d5 + $ d4", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label $ d1 = java lang math sqrt d5", "return $ d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common math util resizable double array r0", "$ i0 = r1 num element", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 == 0 goto label1", "if i0 == 1 goto label1", "$ r4 = newarray java lang object [ 5 ]", "$ r5 = java lang integer value of i0", "$ r4 [ 0 ] = $ r5", "$ r6 = java lang integer value of 0", "$ r4 [ 1 ] = $ r6", "$ r4 [ 2 ] = \\ `` multiplicative_mode\\ ``", "$ r7 = java lang integer value of 1", "$ r4 [ 3 ] = $ r7", "$ r4 [ 4 ] = \\ `` additive_mode\\ ``", "$ r8 = org apache common math math runtime exception create illegal argument exception \\ `` unsupported expansion mode { 0 } support mode be { 1 } { 2 } and { 3 } { 4 } \\", "throw $ r8", "if i0 == 1 goto label1", "label entermonitor r0", "label r10 = org apache common math util resizable double array r0", "r10 expansion mode = i0", "exitmonitor r0", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ z0 = java lang double be na n d0", "if $ z0 == 0 goto label1", "$ z2 = java lang double be na n d1", "if $ z2 ! = 0 goto label2", "label $ z1 = org apache common math3 util precision equal d0 d1 1", "if $ z1 == 0 goto label3", "label $ z3 = 1", "goto label4", "label return $ z3", "if $ z1 == 0 goto label3", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net bsd r exec client r0", "$ r1 = r2 _input_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r6 = org apache common net char gen u d p client r0", "$ r2 = r6 __send packet", "$ r2 set address r1", "r7 = org apache common net char gen u d p client r0", "$ r3 = r7 __send packet", "$ r3 set port i0", "r8 = org apache common net char gen u d p client r0", "$ r5 = r8 _socket_", "r9 = org apache common net char gen u d p client r0", "$ r4 = r9 __send packet", "$ r5 send $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net datagram socket client r0", "$ r1 = r2 _socket_", "$ i0 = $ r1 get local port", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common net ftp ftp r0", "$ i1 = r1 send command i0 null", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp ftp r0", "$ i0 = r1 _reply code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp ftp r0", "$ i0 = r1 send command 26", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp ftp r0", "$ i0 = r1 send command 27", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common net ftp ftp r0", "$ i0 = r2 send command 28 r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp ftp r0", "$ i0 = r1 send command 31", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ftp f t p client r0", "r1 __data connection mode = 0", "r2 = org apache common net ftp f t p client r0", "r2 __passive host = null", "r3 = org apache common net ftp f t p client r0", "r3 __passive port = -1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net ftp f t p client r0", "$ r1 = specialinvoke r2 __store file stream 15 null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common net ftp f t p client r0", "$ r2 = r3 create file list null r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common net ftp f t p client r0", "r1 __buffer size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org apache common net ftp f t p client config language_code_map", "r1 = $ r2 get r0", "if r1 == null goto label2", "$ z0 = r1 instanceof java util locale", "if $ z0 == 0 goto label1", "$ r7 = new java text date format symbol", "$ r8 = java util locale r1", "specialinvoke $ r7 < init > $ r8", "return $ r7", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof java lang string", "if $ z1 == 0 goto label2", "$ r5 = java lang string r1", "$ r6 = org apache common net ftp f t p client config get date format symbols $ r5", "return $ r6", "if $ z1 == 0 goto label2", "label $ r3 = new java text date format symbol", "$ r4 = java util locale u", "specialinvoke $ r3 < init > $ r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net ftp f t p file r0", "$ r1 = r2 _user", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net ftp f t p file r0", "$ r1 = r2 _link", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net ftp f t p file r0", "$ r1 = r2 _raw listing", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = new java io buffer reader", "r10 = new java io input stream reader", "specialinvoke r10 < init > r1 r2", "specialinvoke r11 < init > r10", "r12 = org apache common net ftp f t p file list r0", "$ r6 = r12 parser", "r9 = $ r6 read next entry r11", "label if r9 == null goto label2", "r13 = org apache common net ftp f t p file list r0", "$ r7 = r13 line", "$ r7 add r9", "r14 = org apache common net ftp f t p file list r0", "$ r8 = r14 parser", "r9 = $ r8 read next entry r11", "goto label1", "label if r9 == null goto label2", "label r11 close", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["i0 = @ parameter0", "if i0 < 500 goto label1", "if i0 > = 600 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 > = 600 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common net ftp parser configurable f t p file entry parser impl r0", "$ r2 = r4 timestamp parser", "$ r3 = $ r2 parse timestamp r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ z0 = org apache common net io from net a s c i i input stream _no conversion require", "if $ z0 == 0 goto label1", "$ i1 = specialinvoke r0 read", "return $ i1", "if $ z0 == 0 goto label1", "label r1 = org apache common net io from net a s c i i input stream r0", "$ i0 = specialinvoke r1 __read", "return $ i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache common net nntp new group or news query r0", "$ r2 = r9 __distributions", "if $ r2 == null goto label1", "r10 = org apache common net nntp new group or news query r0", "$ r6 = r10 __distributions", "$ r6 append 44", "goto label2", "label r12 = org apache common net nntp new group or news query r0", "$ r4 = r12 __distributions", "$ r4 append r1", "return", "if $ r2 == null goto label1", "label r8 = new java lang string buffer", "specialinvoke r8 < init >", "r11 = org apache common net nntp new group or news query r0", "r11 __distributions = r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net nntp nntp r0", "$ i0 = r1 send command 12", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net nntp n n t p client r0", "$ r1 = r2 retrieve article header null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net nntp n n t p client r0", "$ i0 = r1 get reply", "$ z0 = org apache common net nntp n n t p reply be positive completion $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net nntp simple n n t p header r0", "$ r1 = r2 __from", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ntp time stamp r0", "$ l0 = r1 ntp time", "$ l1 = $ l0 > > > 32", "$ l2 = $ l1 & 4294967295l", "return $ l2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net ntp time stamp r0", "$ l2 = r1 ntp time", "r2 = org apache common net ntp time stamp r0", "$ l0 = r2 ntp time", "$ l1 = $ l0 > > > 32", "$ l3 = $ l2 ^ $ l1", "$ i4 = int $ l3", "return $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r19 = new java lang string buffer", "specialinvoke r19 < init >", "r19 append 60", "r20 = org apache common net smtp relay path r0", "$ r5 = r20 _path", "r2 = $ r5 element", "$ z0 = r2 have more element", "if $ z0 == 0 goto label3", "r19 append 64", "$ r11 = r2 next element", "$ r12 = java lang string $ r11", "r19 append $ r12", "label $ z1 = r2 have more element", "if $ z1 == 0 goto label2", "r19 append \\", "$ r16 = r2 next element", "$ r17 = java lang string $ r16", "r19 append $ r17", "goto label1", "if $ z1 == 0 goto label2", "label r19 append 58", "label r21 = org apache common net smtp relay path r0", "$ r6 = r21 _email address", "r19 append $ r6", "r19 append 62", "$ r9 = r19 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net smtp smtp r0", "specialinvoke r1 __get reply", "r2 = org apache common net smtp smtp r0", "$ i0 = r2 _reply code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net smtp s m t p client r0", "$ i0 = r1 rset", "$ z0 = org apache common net smtp s m t p reply be positive completion $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net socket client r0", "$ i0 = r1 _default port_", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common net tftp tftp r0", "r1 __receive buffer = null", "r2 = org apache common net tftp tftp r0", "r2 __receive datagram = null", "r3 = org apache common net tftp tftp r0", "r3 _send buffer = null", "r4 = org apache common net tftp tftp r0", "r4 __send datagram = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache common net tftp tftp r0", "$ r2 = r4 _socket_", "$ r3 = r1 new datagram", "$ r2 send $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common net tftp t f t p data packet r0", "r1 _block number = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common net ftp f t p client r0", "$ i0 = r3 mdtm r1", "$ z0 = org apache common net ftp f t p reply be positive completion $ i0", "if $ z0 == 0 goto label1", "r4 = org apache common net ftp f t p client r0", "$ r2 = r4 get reply string", "return $ r2", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org apache common net ftp f t p s client r0", "$ r1 = r4 _socket_", "$ z0 = $ r1 instanceof javax net ssl s s l socket", "if $ z0 == 0 goto label1", "r5 = org apache common net ftp f t p s client r0", "$ r2 = r5 _socket_", "$ r3 = javax net ssl s s l socket $ r2", "$ z1 = $ r3 get use client mode", "return $ z1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common net socket client r0", "r1 send buffer size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common net ftp f t p client r0", "r2 __copy stream listener = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache common net imap imap r0", "$ i0 = r3 send command r1 r2", "$ z0 = org apache common net imap i m a p reply be success $ i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = org apache common net imap i m a p command lsub", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r5 = r9 append r1", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 append r2", "$ r8 = $ r7 to string", "r10 = org apache common net imap i m a p client r0", "$ z0 = r10 do command $ r4 $ r8", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get i m a p command", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common net nntp article iterator r0", "$ r1 = r2 next", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache common net util trust manager utils accept_all", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common pool impl soft reference object pool r0", "$ i0 = r1 _num active", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r10 = org apache common pool impl stack key object pool r0", "$ r4 = r10 _pools", "$ r5 = $ r4 key set", "r1 = $ r5 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "r2 = r1 next", "r11 = org apache common pool impl stack key object pool r0", "$ r8 = r11 _pools", "$ r9 = $ r8 get r2", "r3 = java util stack $ r9", "r12 = org apache common pool impl stack key object pool r0", "specialinvoke r12 destroy stack r2 r3", "goto label1", "if $ z0 == 0 goto label2", "label r13 = org apache common pool impl stack key object pool r0", "r13 _tot idle = 0", "r14 = org apache common pool impl stack key object pool r0", "$ r6 = r14 _pools", "$ r6 clear", "r15 = org apache common pool impl stack key object pool r0", "$ r7 = r15 _active count", "$ r7 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common pool impl stack object pool r0", "$ i0 = r1 _max sleep", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ l1 = long i0", "$ r1 = java time duration of second $ l1", "r2 = org apache common pool2 impl abandon config r0", "r2 set remove abandon timeout $ r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache common pool2 impl base generic object pool r0", "$ z0 = r1 lifo", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common pool2 impl base generic object pool r0", "$ r1 = r2 return count", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache common pool2 impl base generic object pool r0", "r2 eviction policy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache common pool2 impl base generic object pool r0", "r1 max total = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache common pool2 impl base generic object pool r0", "r1 test on borrow = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache common pool2 impl base generic object pool r0", "r3 time between eviction run = r1", "r4 = org apache common pool2 impl base generic object pool r0", "$ r2 = r4 time between eviction run", "r5 = org apache common pool2 impl base generic object pool r0", "r5 start evictor $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache common pool2 impl generic object pool r0", "$ r1 = r2 factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r9 = org apache common pool2 impl link block deque r0", "$ r3 = r9 lock", "$ r3 lock", "label r10 = org apache common pool2 impl link block deque r0", "r8 = r10 first", "label if r8 == null goto label3", "r8 item = null", "r1 = r8 next", "r8 prev = null", "r8 next = null", "r8 = r1", "goto label2", "label if r8 == null goto label3", "label r11 = org apache common pool2 impl link block deque r0", "r11 last = null", "r12 = org apache common pool2 impl link block deque r0", "r12 first = null", "r13 = org apache common pool2 impl link block deque r0", "r13 count = 0", "r14 = org apache common pool2 impl link block deque r0", "$ r4 = r14 not full", "$ r4 signal all", "label r15 = org apache common pool2 impl link block deque r0", "$ r5 = r15 lock", "$ r5 unlock", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], []]}
{"nodes": ["r0 = @ this", "r3 = org apache common pool2 impl pool soft reference r0", "$ r1 = r3 reference", "$ r2 = $ r1 get", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache common text lookup property string lookup instance", "r2 = org apache common text lookup string lookup $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new com github mustachejava function bundle function $ pre translate func", "specialinvoke r3 < init > r0 r1 0 null", "r4 = java util function function r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com ning compress lzf l z f output stream r0", "$ z0 = r1 _cfg finish block on flush", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com googlecode concurrenttrees solver l c substring solver r0", "$ r1 = r3 suffix tree", "$ r2 = $ r1 get long common substring", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = com typesafe config config parse option r0", "$ r2 = r8 syntax", "if $ r2 ! = r1 goto label1", "r9 = com typesafe config config parse option r0", "return r9", "if $ r2 ! = r1 goto label1", "label r7 = new com typesafe config config parse option", "r10 = com typesafe config config parse option r0", "$ r6 = r10 origin description", "r11 = com typesafe config config parse option r0", "$ z0 = r11 allow miss", "r12 = com typesafe config config parse option r0", "$ r5 = r12 includer", "r13 = com typesafe config config parse option r0", "$ r4 = r13 class loader", "specialinvoke r7 < init > r1 $ r6 $ z0 $ r5 $ r4", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r7 = com typesafe config config parse option r0", "$ z1 = r7 allow miss", "if $ z1 ! = z0 goto label1", "r8 = com typesafe config config parse option r0", "return r8", "if $ z1 ! = z0 goto label1", "label r6 = new com typesafe config config parse option", "r9 = com typesafe config config parse option r0", "$ r5 = r9 syntax", "r10 = com typesafe config config parse option r0", "$ r4 = r10 origin description", "r11 = com typesafe config config parse option r0", "$ r3 = r11 includer", "r12 = com typesafe config config parse option r0", "$ r2 = r12 class loader", "specialinvoke r6 < init > $ r5 $ r4 z0 $ r3 $ r2", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = com typesafe config config render option r0", "$ z1 = r3 origin comment", "if z0 ! = $ z1 goto label1", "r4 = com typesafe config config render option r0", "return r4", "if z0 ! = $ z1 goto label1", "label r2 = new com typesafe config config render option", "r5 = com typesafe config config render option r0", "$ z4 = r5 comment", "r6 = com typesafe config config render option r0", "$ z3 = r6 format", "r7 = com typesafe config config render option r0", "$ z2 = r7 json", "specialinvoke r2 < init > z0 $ z4 $ z3 $ z2", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r7 = com typesafe config impl abstract config object r0", "$ r3 = com typesafe config impl abstract config object peek path r7 r1 null", "label return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = cucumber api data table r0", "$ r2 = r4 table converter", "r5 = cucumber api data table r0", "$ r3 = $ r2 to list r5 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = newarray java lang class [ 1 ]", "$ r4 [ 0 ] = r2", "r7 = new cucumber runtime runtime option $ 1", "r8 = cucumber runtime runtime option r0", "specialinvoke r7 < init > r8 r2", "r9 = java lang reflect invocation handler r7", "r3 = java lang reflect proxy new proxy instance r1 $ r4 r9", "$ r6 = r2 cast r3", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r6 append \\ `` < \\ ``", "$ r6 append r1", "if r2 == null goto label1", "$ r6 append \\ `` class=\\\\\\ `` \\ ``", "$ r6 append r2", "$ r6 append \\ `` \\\\\\ `` \\ ``", "label $ r6 append \\ `` > \\ ``", "r4 = $ r6 to string", "$ i0 = $ r6 length", "$ r6 delete 0 $ i0", "$ r6 append \\ `` < \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r4 = org apache curator curator zookeeper client r0", "$ r1 = r4 retry policy", "$ r2 = $ r1 get", "$ r3 = org apache curator retry policy $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache curator ensemble exhibitor exhibitor ensemble provider r0", "$ r2 = r4 exhibitor", "$ r2 set r1", "r5 = org apache curator ensemble exhibitor exhibitor ensemble provider r0", "$ r3 = r5 master exhibitor", "$ r3 set r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache curator utils ensure path r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org apache curator utils path utils validate path r0", "i0 = r0 last index of \\ `` \\ ``", "if i0 > = 0 goto label1", "$ r6 = new org apache curator utils z k paths $ path and node", "specialinvoke $ r6 < init > r0 \\ `` \\ ``", "return $ r6", "if i0 > = 0 goto label1", "label $ i1 = i0 + 1", "$ i2 = r0 length", "if $ i1 < $ i2 goto label2", "$ r5 = new org apache curator utils z k paths $ path and node", "specialinvoke $ r5 < init > \\ `` \\", "return $ r5", "if $ i1 < $ i2 goto label2", "label $ i3 = i0 + 1", "r1 = r0 substring $ i3", "if i0 < = 0 goto label3", "$ r7 = r0 substring 0 i0", "goto label4", "label $ r4 = new org apache curator utils z k paths $ path and node", "specialinvoke $ r4 < init > $ r7 r1", "return $ r4", "if i0 < = 0 goto label3", "label $ r7 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r1 = org apache curator framework recipes barrier distribute double barrier r0", "r1 leave -1l null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache curator framework recipe cache node cache r0", "r1 start 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = java lang thread current thread", "r30 = org apache curator framework recipe lock inter process mutex r0", "$ r4 = r30 thread data", "$ r5 = $ r4 get r1", "r2 = org apache curator framework recipe lock inter process mutex $ lock data $ r5", "if r2 ! = null goto label1", "r27 = new java lang illegal monitor state exception", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r19 = r26 append \\ `` you do not own the lock \\ ``", "r31 = org apache curator framework recipe lock inter process mutex r0", "$ r20 = r31 base path", "$ r21 = $ r19 append $ r20", "$ r22 = $ r21 to string", "specialinvoke r27 < init > $ r22", "throw r27", "if r2 ! = null goto label1", "label $ r6 = r2 lock count", "i0 = $ r6 decrement and get", "if i0 < = 0 goto label2", "return", "if i0 < = 0 goto label2", "label if i0 > = 0 goto label3", "r29 = new java lang illegal monitor state exception", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r13 = r28 append \\ `` lock count have go negative for lock \\ ``", "r32 = org apache curator framework recipe lock inter process mutex r0", "$ r14 = r32 base path", "$ r15 = $ r13 append $ r14", "$ r16 = $ r15 to string", "specialinvoke r29 < init > $ r16", "throw r29", "label if i0 > = 0 goto label3", "label r33 = org apache curator framework recipe lock inter process mutex r0", "$ r8 = r33 internals", "$ r7 = r2 lock path", "$ r8 release lock $ r7", "label r34 = org apache curator framework recipe lock inter process mutex r0", "$ r9 = r34 thread data", "$ r9 remove r1", "goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [], []]}
{"nodes": ["r0 = @ this", "r2 = org apache curator framework recipe lock inter process read write lock r0", "$ r1 = r2 write mutex", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com lmax disruptor collection histogram r0", "$ l0 = r1 get upper bound for factor 0 99", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com lmax disruptor dsl event handler group r0", "$ r2 = r3 handle event with r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = com lmax disruptor dsl event handler group r0", "$ r1 = r5 disruptor", "$ r2 = $ r1 get ring buffer", "r6 = com lmax disruptor dsl event handler group r0", "$ r3 = r6 sequence", "$ r4 = $ r2 new barrier $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = com lmax disruptor sequence group sequence_updater", "$ r3 = newarray com lmax disruptor sequence [ 1 ]", "$ r3 [ 0 ] = r2", "com lmax disruptor sequence group add sequence r0 $ r4 r1 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j util indexed element r0", "r1 = r2 create index", "return r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org dom4j util indexed element r0", "r1 = r2 create index", "return r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org easymock easy mock create nice control", "$ r2 = $ r1 create mock r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "org easymock internal last control report and 2", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "org easymock internal last control report and 2", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "org easymock internal last control report not", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["z0 = @ parameter0", "r2 = new org easymock internal matcher equal", "$ r1 = java lang boolean value of z0", "specialinvoke r2 < init > $ r1", "r3 = org easymock i argument matcher r2", "org easymock easy mock report matcher r3", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "r3 = new org easymock internal matcher equal with delta", "$ r1 = java lang double value of d0", "$ r2 = java lang double value of d1", "specialinvoke r3 < init > $ r1 $ r2", "r4 = org easymock i argument matcher r3", "org easymock easy mock report matcher r4", "return 0 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "r2 = r0 [ i1 ]", "$ r3 = org easymock easy mock get control r2", "$ r3 replay", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org easymock mock control r0", "$ r1 = r2 ctrl", "$ r1 replay", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org easymock mock control r0", "$ r2 = specialinvoke r5 expect last call \\ `` method call on the mock need before set return value\\ ``", "$ r3 = $ r2 and return r1", "$ r3 once", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org easymock mock control r0", "$ r1 = specialinvoke r3 expect last call \\ `` method call on the mock need before set void callable\\ ``", "$ r1 once", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r5 = org easymock mock control r0", "$ r2 = specialinvoke r5 expect last call \\ `` method call on the mock need before set throwable\\ ``", "$ r3 = $ r2 and throw r1", "$ r3 time i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org easymock mock control r0", "$ r2 = r3 ctrl", "$ r2 set legacy default throwable r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org easymock mock control r0", "$ r2 = r3 ctrl", "$ r2 set legacy default return value r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "i0 = @ parameter1", "r4 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ i1 = r4 default nullness", "$ i2 = $ i1 & 256", "if $ i2 == 0 goto label1", "$ z2 = 1", "goto label2", "label r5 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "r5 next be default location = $ z2", "r6 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "r6 next be type bound = 1", "r7 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ z1 = r7 be empty", "if $ z1 == 0 goto label3", "r8 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ l4 = r8 match", "r9 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ i3 = r9 path ptr", "r10 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0", "$ r2 = r10 restrict $ l4 $ i3", "return $ r2", "if $ z1 == 0 goto label3", "label $ r1 = specialinvoke r0 to type parameter bound z0 i0", "return $ r1", "if $ i2 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r2 = newarray byte [ $ i0 ]", "i6 = 0", "label $ i1 = lengthof r1", "if i6 > = $ i1 goto label2", "$ i2 = lengthof r1", "$ i3 = $ i2 - 1", "$ i4 = $ i3 - i6", "$ b5 = r1 [ $ i4 ]", "r2 [ i6 ] = $ b5", "i6 = i6 + 1", "goto label1", "if i6 > = $ i1 goto label2", "label $ r3 = new java math big integer", "specialinvoke $ r3 < init > 1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = net i2p crypto eddsa math ed25519 ed25519 field element r1", "r2 = $ r4 t", "$ i122 = r2 [ 1 ]", "i0 = 19 * $ i122", "$ i123 = r2 [ 2 ]", "i1 = 19 * $ i123", "$ i124 = r2 [ 3 ]", "i2 = 19 * $ i124", "$ i125 = r2 [ 4 ]", "i3 = 19 * $ i125", "$ i126 = r2 [ 5 ]", "i4 = 19 * $ i126", "$ i127 = r2 [ 6 ]", "i5 = 19 * $ i127", "$ i128 = r2 [ 7 ]", "i6 = 19 * $ i128", "$ i129 = r2 [ 8 ]", "i7 = 19 * $ i129", "$ i130 = r2 [ 9 ]", "i8 = 19 * $ i130", "r88 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r5 = r88 t", "$ i131 = $ r5 [ 1 ]", "i9 = 2 * $ i131", "r89 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r6 = r89 t", "$ i132 = $ r6 [ 3 ]", "i10 = 2 * $ i132", "r90 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r7 = r90 t", "$ i133 = $ r7 [ 5 ]", "i11 = 2 * $ i133", "r91 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r8 = r91 t", "$ i134 = $ r8 [ 7 ]", "i12 = 2 * $ i134", "r92 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r9 = r92 t", "$ i135 = $ r9 [ 9 ]", "i13 = 2 * $ i135", "r93 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r10 = r93 t", "$ i136 = $ r10 [ 0 ]", "$ l139 = long $ i136", "$ i137 = r2 [ 0 ]", "$ l138 = long $ i137", "l14 = $ l139 * $ l138", "r94 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r11 = r94 t", "$ i140 = $ r11 [ 0 ]", "$ l143 = long $ i140", "$ i141 = r2 [ 1 ]", "$ l142 = long $ i141", "l15 = $ l143 * $ l142", "r95 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r12 = r95 t", "$ i144 = $ r12 [ 0 ]", "$ l147 = long $ i144", "$ i145 = r2 [ 2 ]", "$ l146 = long $ i145", "l16 = $ l147 * $ l146", "r96 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r13 = r96 t", "$ i148 = $ r13 [ 0 ]", "$ l151 = long $ i148", "$ i149 = r2 [ 3 ]", "$ l150 = long $ i149", "l17 = $ l151 * $ l150", "r97 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r14 = r97 t", "$ i152 = $ r14 [ 0 ]", "$ l155 = long $ i152", "$ i153 = r2 [ 4 ]", "$ l154 = long $ i153", "l18 = $ l155 * $ l154", "r98 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r15 = r98 t", "$ i156 = $ r15 [ 0 ]", "$ l159 = long $ i156", "$ i157 = r2 [ 5 ]", "$ l158 = long $ i157", "l19 = $ l159 * $ l158", "r99 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r16 = r99 t", "$ i160 = $ r16 [ 0 ]", "$ l163 = long $ i160", "$ i161 = r2 [ 6 ]", "$ l162 = long $ i161", "l20 = $ l163 * $ l162", "r100 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r17 = r100 t", "$ i164 = $ r17 [ 0 ]", "$ l167 = long $ i164", "$ i165 = r2 [ 7 ]", "$ l166 = long $ i165", "l21 = $ l167 * $ l166", "r101 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r18 = r101 t", "$ i168 = $ r18 [ 0 ]", "$ l171 = long $ i168", "$ i169 = r2 [ 8 ]", "$ l170 = long $ i169", "l22 = $ l171 * $ l170", "r102 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r19 = r102 t", "$ i172 = $ r19 [ 0 ]", "$ l175 = long $ i172", "$ i173 = r2 [ 9 ]", "$ l174 = long $ i173", "l23 = $ l175 * $ l174", "r103 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r20 = r103 t", "$ i176 = $ r20 [ 1 ]", "$ l179 = long $ i176", "$ i177 = r2 [ 0 ]", "$ l178 = long $ i177", "l24 = $ l179 * $ l178", "$ l182 = long i9", "$ i180 = r2 [ 1 ]", "$ l181 = long $ i180", "l25 = $ l182 * $ l181", "r104 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r21 = r104 t", "$ i183 = $ r21 [ 1 ]", "$ l186 = long $ i183", "$ i184 = r2 [ 2 ]", "$ l185 = long $ i184", "l26 = $ l186 * $ l185", "$ l189 = long i9", "$ i187 = r2 [ 3 ]", "$ l188 = long $ i187", "l27 = $ l189 * $ l188", "r105 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r22 = r105 t", "$ i190 = $ r22 [ 1 ]", "$ l193 = long $ i190", "$ i191 = r2 [ 4 ]", "$ l192 = long $ i191", "l28 = $ l193 * $ l192", "$ l196 = long i9", "$ i194 = r2 [ 5 ]", "$ l195 = long $ i194", "l29 = $ l196 * $ l195", "r106 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r23 = r106 t", "$ i197 = $ r23 [ 1 ]", "$ l200 = long $ i197", "$ i198 = r2 [ 6 ]", "$ l199 = long $ i198", "l30 = $ l200 * $ l199", "$ l203 = long i9", "$ i201 = r2 [ 7 ]", "$ l202 = long $ i201", "l31 = $ l203 * $ l202", "r107 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r24 = r107 t", "$ i204 = $ r24 [ 1 ]", "$ l207 = long $ i204", "$ i205 = r2 [ 8 ]", "$ l206 = long $ i205", "l32 = $ l207 * $ l206", "$ l209 = long i9", "$ l208 = long i8", "l33 = $ l209 * $ l208", "r108 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r25 = r108 t", "$ i210 = $ r25 [ 2 ]", "$ l213 = long $ i210", "$ i211 = r2 [ 0 ]", "$ l212 = long $ i211", "l34 = $ l213 * $ l212", "r109 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r26 = r109 t", "$ i214 = $ r26 [ 2 ]", "$ l217 = long $ i214", "$ i215 = r2 [ 1 ]", "$ l216 = long $ i215", "l35 = $ l217 * $ l216", "r110 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r27 = r110 t", "$ i218 = $ r27 [ 2 ]", "$ l221 = long $ i218", "$ i219 = r2 [ 2 ]", "$ l220 = long $ i219", "l36 = $ l221 * $ l220", "r111 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r28 = r111 t", "$ i222 = $ r28 [ 2 ]", "$ l225 = long $ i222", "$ i223 = r2 [ 3 ]", "$ l224 = long $ i223", "l37 = $ l225 * $ l224", "r112 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r29 = r112 t", "$ i226 = $ r29 [ 2 ]", "$ l229 = long $ i226", "$ i227 = r2 [ 4 ]", "$ l228 = long $ i227", "l38 = $ l229 * $ l228", "r113 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r30 = r113 t", "$ i230 = $ r30 [ 2 ]", "$ l233 = long $ i230", "$ i231 = r2 [ 5 ]", "$ l232 = long $ i231", "l39 = $ l233 * $ l232", "r114 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r31 = r114 t", "$ i234 = $ r31 [ 2 ]", "$ l237 = long $ i234", "$ i235 = r2 [ 6 ]", "$ l236 = long $ i235", "l40 = $ l237 * $ l236", "r115 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r32 = r115 t", "$ i238 = $ r32 [ 2 ]", "$ l241 = long $ i238", "$ i239 = r2 [ 7 ]", "$ l240 = long $ i239", "l41 = $ l241 * $ l240", "r116 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r33 = r116 t", "$ i242 = $ r33 [ 2 ]", "$ l244 = long $ i242", "$ l243 = long i7", "l42 = $ l244 * $ l243", "r117 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r34 = r117 t", "$ i245 = $ r34 [ 2 ]", "$ l247 = long $ i245", "$ l246 = long i8", "l43 = $ l247 * $ l246", "r118 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r35 = r118 t", "$ i248 = $ r35 [ 3 ]", "$ l251 = long $ i248", "$ i249 = r2 [ 0 ]", "$ l250 = long $ i249", "l44 = $ l251 * $ l250", "$ l254 = long i10", "$ i252 = r2 [ 1 ]", "$ l253 = long $ i252", "l45 = $ l254 * $ l253", "r119 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r36 = r119 t", "$ i255 = $ r36 [ 3 ]", "$ l258 = long $ i255", "$ i256 = r2 [ 2 ]", "$ l257 = long $ i256", "l46 = $ l258 * $ l257", "$ l261 = long i10", "$ i259 = r2 [ 3 ]", "$ l260 = long $ i259", "l47 = $ l261 * $ l260", "r120 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r37 = r120 t", "$ i262 = $ r37 [ 3 ]", "$ l265 = long $ i262", "$ i263 = r2 [ 4 ]", "$ l264 = long $ i263", "l48 = $ l265 * $ l264", "$ l268 = long i10", "$ i266 = r2 [ 5 ]", "$ l267 = long $ i266", "l49 = $ l268 * $ l267", "r121 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r38 = r121 t", "$ i269 = $ r38 [ 3 ]", "$ l272 = long $ i269", "$ i270 = r2 [ 6 ]", "$ l271 = long $ i270", "l50 = $ l272 * $ l271", "$ l274 = long i10", "$ l273 = long i6", "l51 = $ l274 * $ l273", "r122 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r39 = r122 t", "$ i275 = $ r39 [ 3 ]", "$ l277 = long $ i275", "$ l276 = long i7", "l52 = $ l277 * $ l276", "$ l279 = long i10", "$ l278 = long i8", "l53 = $ l279 * $ l278", "r123 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r40 = r123 t", "$ i280 = $ r40 [ 4 ]", "$ l283 = long $ i280", "$ i281 = r2 [ 0 ]", "$ l282 = long $ i281", "l54 = $ l283 * $ l282", "r124 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r41 = r124 t", "$ i284 = $ r41 [ 4 ]", "$ l287 = long $ i284", "$ i285 = r2 [ 1 ]", "$ l286 = long $ i285", "l55 = $ l287 * $ l286", "r125 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r42 = r125 t", "$ i288 = $ r42 [ 4 ]", "$ l291 = long $ i288", "$ i289 = r2 [ 2 ]", "$ l290 = long $ i289", "l56 = $ l291 * $ l290", "r126 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r43 = r126 t", "$ i292 = $ r43 [ 4 ]", "$ l295 = long $ i292", "$ i293 = r2 [ 3 ]", "$ l294 = long $ i293", "l57 = $ l295 * $ l294", "r127 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r44 = r127 t", "$ i296 = $ r44 [ 4 ]", "$ l299 = long $ i296", "$ i297 = r2 [ 4 ]", "$ l298 = long $ i297", "l58 = $ l299 * $ l298", "r128 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r45 = r128 t", "$ i300 = $ r45 [ 4 ]", "$ l303 = long $ i300", "$ i301 = r2 [ 5 ]", "$ l302 = long $ i301", "l59 = $ l303 * $ l302", "r129 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r46 = r129 t", "$ i304 = $ r46 [ 4 ]", "$ l306 = long $ i304", "$ l305 = long i5", "l60 = $ l306 * $ l305", "r130 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r47 = r130 t", "$ i307 = $ r47 [ 4 ]", "$ l309 = long $ i307", "$ l308 = long i6", "l61 = $ l309 * $ l308", "r131 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r48 = r131 t", "$ i310 = $ r48 [ 4 ]", "$ l312 = long $ i310", "$ l311 = long i7", "l62 = $ l312 * $ l311", "r132 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r49 = r132 t", "$ i313 = $ r49 [ 4 ]", "$ l315 = long $ i313", "$ l314 = long i8", "l63 = $ l315 * $ l314", "r133 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r50 = r133 t", "$ i316 = $ r50 [ 5 ]", "$ l319 = long $ i316", "$ i317 = r2 [ 0 ]", "$ l318 = long $ i317", "l64 = $ l319 * $ l318", "$ l322 = long i11", "$ i320 = r2 [ 1 ]", "$ l321 = long $ i320", "l65 = $ l322 * $ l321", "r134 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r51 = r134 t", "$ i323 = $ r51 [ 5 ]", "$ l326 = long $ i323", "$ i324 = r2 [ 2 ]", "$ l325 = long $ i324", "l66 = $ l326 * $ l325", "$ l329 = long i11", "$ i327 = r2 [ 3 ]", "$ l328 = long $ i327", "l67 = $ l329 * $ l328", "r135 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r52 = r135 t", "$ i330 = $ r52 [ 5 ]", "$ l333 = long $ i330", "$ i331 = r2 [ 4 ]", "$ l332 = long $ i331", "l68 = $ l333 * $ l332", "$ l335 = long i11", "$ l334 = long i4", "l69 = $ l335 * $ l334", "r136 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r53 = r136 t", "$ i336 = $ r53 [ 5 ]", "$ l338 = long $ i336", "$ l337 = long i5", "l70 = $ l338 * $ l337", "$ l340 = long i11", "$ l339 = long i6", "l71 = $ l340 * $ l339", "r137 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r54 = r137 t", "$ i341 = $ r54 [ 5 ]", "$ l343 = long $ i341", "$ l342 = long i7", "l72 = $ l343 * $ l342", "$ l345 = long i11", "$ l344 = long i8", "l73 = $ l345 * $ l344", "r138 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r55 = r138 t", "$ i346 = $ r55 [ 6 ]", "$ l349 = long $ i346", "$ i347 = r2 [ 0 ]", "$ l348 = long $ i347", "l74 = $ l349 * $ l348", "r139 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r56 = r139 t", "$ i350 = $ r56 [ 6 ]", "$ l353 = long $ i350", "$ i351 = r2 [ 1 ]", "$ l352 = long $ i351", "l75 = $ l353 * $ l352", "r140 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r57 = r140 t", "$ i354 = $ r57 [ 6 ]", "$ l357 = long $ i354", "$ i355 = r2 [ 2 ]", "$ l356 = long $ i355", "l76 = $ l357 * $ l356", "r141 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r58 = r141 t", "$ i358 = $ r58 [ 6 ]", "$ l361 = long $ i358", "$ i359 = r2 [ 3 ]", "$ l360 = long $ i359", "l77 = $ l361 * $ l360", "r142 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r59 = r142 t", "$ i362 = $ r59 [ 6 ]", "$ l364 = long $ i362", "$ l363 = long i3", "l78 = $ l364 * $ l363", "r143 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r60 = r143 t", "$ i365 = $ r60 [ 6 ]", "$ l367 = long $ i365", "$ l366 = long i4", "l79 = $ l367 * $ l366", "r144 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r61 = r144 t", "$ i368 = $ r61 [ 6 ]", "$ l370 = long $ i368", "$ l369 = long i5", "l80 = $ l370 * $ l369", "r145 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r62 = r145 t", "$ i371 = $ r62 [ 6 ]", "$ l373 = long $ i371", "$ l372 = long i6", "l81 = $ l373 * $ l372", "r146 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r63 = r146 t", "$ i374 = $ r63 [ 6 ]", "$ l376 = long $ i374", "$ l375 = long i7", "l82 = $ l376 * $ l375", "r147 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r64 = r147 t", "$ i377 = $ r64 [ 6 ]", "$ l379 = long $ i377", "$ l378 = long i8", "l83 = $ l379 * $ l378", "r148 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r65 = r148 t", "$ i380 = $ r65 [ 7 ]", "$ l383 = long $ i380", "$ i381 = r2 [ 0 ]", "$ l382 = long $ i381", "l84 = $ l383 * $ l382", "$ l386 = long i12", "$ i384 = r2 [ 1 ]", "$ l385 = long $ i384", "l85 = $ l386 * $ l385", "r149 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r66 = r149 t", "$ i387 = $ r66 [ 7 ]", "$ l390 = long $ i387", "$ i388 = r2 [ 2 ]", "$ l389 = long $ i388", "l86 = $ l390 * $ l389", "$ l392 = long i12", "$ l391 = long i2", "l87 = $ l392 * $ l391", "r150 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r67 = r150 t", "$ i393 = $ r67 [ 7 ]", "$ l395 = long $ i393", "$ l394 = long i3", "l88 = $ l395 * $ l394", "$ l397 = long i12", "$ l396 = long i4", "l89 = $ l397 * $ l396", "r151 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r68 = r151 t", "$ i398 = $ r68 [ 7 ]", "$ l400 = long $ i398", "$ l399 = long i5", "l90 = $ l400 * $ l399", "$ l402 = long i12", "$ l401 = long i6", "l91 = $ l402 * $ l401", "r152 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r69 = r152 t", "$ i403 = $ r69 [ 7 ]", "$ l405 = long $ i403", "$ l404 = long i7", "l92 = $ l405 * $ l404", "$ l407 = long i12", "$ l406 = long i8", "l93 = $ l407 * $ l406", "r153 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r70 = r153 t", "$ i408 = $ r70 [ 8 ]", "$ l411 = long $ i408", "$ i409 = r2 [ 0 ]", "$ l410 = long $ i409", "l94 = $ l411 * $ l410", "r154 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r71 = r154 t", "$ i412 = $ r71 [ 8 ]", "$ l415 = long $ i412", "$ i413 = r2 [ 1 ]", "$ l414 = long $ i413", "l95 = $ l415 * $ l414", "r155 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r72 = r155 t", "$ i416 = $ r72 [ 8 ]", "$ l418 = long $ i416", "$ l417 = long i1", "l96 = $ l418 * $ l417", "r156 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r73 = r156 t", "$ i419 = $ r73 [ 8 ]", "$ l421 = long $ i419", "$ l420 = long i2", "l97 = $ l421 * $ l420", "r157 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r74 = r157 t", "$ i422 = $ r74 [ 8 ]", "$ l424 = long $ i422", "$ l423 = long i3", "l98 = $ l424 * $ l423", "r158 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r75 = r158 t", "$ i425 = $ r75 [ 8 ]", "$ l427 = long $ i425", "$ l426 = long i4", "l99 = $ l427 * $ l426", "r159 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r76 = r159 t", "$ i428 = $ r76 [ 8 ]", "$ l430 = long $ i428", "$ l429 = long i5", "l100 = $ l430 * $ l429", "r160 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r77 = r160 t", "$ i431 = $ r77 [ 8 ]", "$ l433 = long $ i431", "$ l432 = long i6", "l101 = $ l433 * $ l432", "r161 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r78 = r161 t", "$ i434 = $ r78 [ 8 ]", "$ l436 = long $ i434", "$ l435 = long i7", "l102 = $ l436 * $ l435", "r162 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r79 = r162 t", "$ i437 = $ r79 [ 8 ]", "$ l439 = long $ i437", "$ l438 = long i8", "l103 = $ l439 * $ l438", "r163 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r80 = r163 t", "$ i440 = $ r80 [ 9 ]", "$ l443 = long $ i440", "$ i441 = r2 [ 0 ]", "$ l442 = long $ i441", "l104 = $ l443 * $ l442", "$ l445 = long i13", "$ l444 = long i0", "l105 = $ l445 * $ l444", "r164 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r81 = r164 t", "$ i446 = $ r81 [ 9 ]", "$ l448 = long $ i446", "$ l447 = long i1", "l106 = $ l448 * $ l447", "$ l450 = long i13", "$ l449 = long i2", "l107 = $ l450 * $ l449", "r165 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r82 = r165 t", "$ i451 = $ r82 [ 9 ]", "$ l453 = long $ i451", "$ l452 = long i3", "l108 = $ l453 * $ l452", "$ l455 = long i13", "$ l454 = long i4", "l109 = $ l455 * $ l454", "r166 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r83 = r166 t", "$ i456 = $ r83 [ 9 ]", "$ l458 = long $ i456", "$ l457 = long i5", "l110 = $ l458 * $ l457", "$ l460 = long i13", "$ l459 = long i6", "l111 = $ l460 * $ l459", "r167 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r84 = r167 t", "$ i461 = $ r84 [ 9 ]", "$ l463 = long $ i461", "$ l462 = long i7", "l112 = $ l463 * $ l462", "$ l465 = long i13", "$ l464 = long i8", "l113 = $ l465 * $ l464", "$ l466 = l14 + l33", "$ l467 = $ l466 + l42", "$ l468 = $ l467 + l51", "$ l469 = $ l468 + l60", "$ l470 = $ l469 + l69", "$ l471 = $ l470 + l78", "$ l472 = $ l471 + l87", "$ l473 = $ l472 + l96", "l581 = $ l473 + l105", "$ l474 = l15 + l24", "$ l475 = $ l474 + l43", "$ l476 = $ l475 + l52", "$ l477 = $ l476 + l61", "$ l478 = $ l477 + l70", "$ l479 = $ l478 + l79", "$ l480 = $ l479 + l88", "$ l481 = $ l480 + l97", "l582 = $ l481 + l106", "$ l482 = l16 + l25", "$ l483 = $ l482 + l34", "$ l484 = $ l483 + l53", "$ l485 = $ l484 + l62", "$ l486 = $ l485 + l71", "$ l487 = $ l486 + l80", "$ l488 = $ l487 + l89", "$ l489 = $ l488 + l98", "l583 = $ l489 + l107", "$ l490 = l17 + l26", "$ l491 = $ l490 + l35", "$ l492 = $ l491 + l44", "$ l493 = $ l492 + l63", "$ l494 = $ l493 + l72", "$ l495 = $ l494 + l81", "$ l496 = $ l495 + l90", "$ l497 = $ l496 + l99", "l584 = $ l497 + l108", "$ l498 = l18 + l27", "$ l499 = $ l498 + l36", "$ l500 = $ l499 + l45", "$ l501 = $ l500 + l54", "$ l502 = $ l501 + l73", "$ l503 = $ l502 + l82", "$ l504 = $ l503 + l91", "$ l505 = $ l504 + l100", "l585 = $ l505 + l109", "$ l506 = l19 + l28", "$ l507 = $ l506 + l37", "$ l508 = $ l507 + l46", "$ l509 = $ l508 + l55", "$ l510 = $ l509 + l64", "$ l511 = $ l510 + l83", "$ l512 = $ l511 + l92", "$ l513 = $ l512 + l101", "l586 = $ l513 + l110", "$ l514 = l20 + l29", "$ l515 = $ l514 + l38", "$ l516 = $ l515 + l47", "$ l517 = $ l516 + l56", "$ l518 = $ l517 + l65", "$ l519 = $ l518 + l74", "$ l520 = $ l519 + l93", "$ l521 = $ l520 + l102", "l587 = $ l521 + l111", "$ l522 = l21 + l30", "$ l523 = $ l522 + l39", "$ l524 = $ l523 + l48", "$ l525 = $ l524 + l57", "$ l526 = $ l525 + l66", "$ l527 = $ l526 + l75", "$ l528 = $ l527 + l84", "$ l529 = $ l528 + l103", "l588 = $ l529 + l112", "$ l530 = l22 + l31", "$ l531 = $ l530 + l40", "$ l532 = $ l531 + l49", "$ l533 = $ l532 + l58", "$ l534 = $ l533 + l67", "$ l535 = $ l534 + l76", "$ l536 = $ l535 + l85", "$ l537 = $ l536 + l94", "l589 = $ l537 + l113", "$ l538 = l23 + l32", "$ l539 = $ l538 + l41", "$ l540 = $ l539 + l50", "$ l541 = $ l540 + l59", "$ l542 = $ l541 + l68", "$ l543 = $ l542 + l77", "$ l544 = $ l543 + l86", "$ l545 = $ l544 + l95", "l590 = $ l545 + l104", "$ l546 = l581 + 33554432l", "l591 = $ l546 > > 26", "l592 = l582 + l591", "$ l547 = l591 < < 26", "l593 = l581 - $ l547", "$ l548 = l585 + 33554432l", "l594 = $ l548 > > 26", "l595 = l586 + l594", "$ l549 = l594 < < 26", "l596 = l585 - $ l549", "$ l550 = l592 + 16777216l", "l114 = $ l550 > > 25", "l597 = l583 + l114", "$ l551 = l114 < < 25", "l598 = l592 - $ l551", "$ l552 = l595 + 16777216l", "l117 = $ l552 > > 25", "l599 = l587 + l117", "$ l553 = l117 < < 25", "l600 = l595 - $ l553", "$ l554 = l597 + 33554432l", "l115 = $ l554 > > 26", "l601 = l584 + l115", "$ l555 = l115 < < 26", "l602 = l597 - $ l555", "$ l556 = l599 + 33554432l", "l118 = $ l556 > > 26", "l603 = l588 + l118", "$ l557 = l118 < < 26", "l604 = l599 - $ l557", "$ l558 = l601 + 16777216l", "l116 = $ l558 > > 25", "l605 = l596 + l116", "$ l559 = l116 < < 25", "l606 = l601 - $ l559", "$ l560 = l603 + 16777216l", "l119 = $ l560 > > 25", "l607 = l589 + l119", "$ l561 = l119 < < 25", "l608 = l603 - $ l561", "$ l562 = l605 + 33554432l", "l609 = $ l562 > > 26", "l610 = l600 + l609", "$ l563 = l609 < < 26", "l611 = l605 - $ l563", "$ l564 = l607 + 33554432l", "l120 = $ l564 > > 26", "l612 = l590 + l120", "$ l565 = l120 < < 26", "l613 = l607 - $ l565", "$ l566 = l612 + 16777216l", "l121 = $ l566 > > 25", "$ l567 = l121 * 19l", "l614 = l593 + $ l567", "$ l568 = l121 < < 25", "l615 = l612 - $ l568", "$ l569 = l614 + 33554432l", "l616 = $ l569 > > 26", "l617 = l598 + l616", "$ l570 = l616 < < 26", "l618 = l614 - $ l570", "r3 = newarray int [ 10 ]", "$ i571 = int l618", "r3 [ 0 ] = $ i571", "$ i572 = int l617", "r3 [ 1 ] = $ i572", "$ i573 = int l602", "r3 [ 2 ] = $ i573", "$ i574 = int l606", "r3 [ 3 ] = $ i574", "$ i575 = int l611", "r3 [ 4 ] = $ i575", "$ i576 = int l610", "r3 [ 5 ] = $ i576", "$ i577 = int l604", "r3 [ 6 ] = $ i577", "$ i578 = int l608", "r3 [ 7 ] = $ i578", "$ i579 = int l613", "r3 [ 8 ] = $ i579", "$ i580 = int l615", "r3 [ 9 ] = $ i580", "r87 = new net i2p crypto eddsa math ed25519 ed25519 field element", "r168 = net i2p crypto eddsa math ed25519 ed25519 field element r0", "$ r86 = r168 f", "specialinvoke r87 < init > $ r86 r3", "r169 = net i2p crypto eddsa math field element r87", "return r169"], "adj}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster health cluster health response r0", "$ i0 = r1 delay unassigned shard", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch action admin cluster node info node info r0", "$ r1 = r3 get node", "$ r2 = $ r1 get host name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster reroute cluster reroute request r0", "$ r1 = r2 command", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster setting cluster get setting response r0", "$ r1 = r2 persistent setting", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster shard cluster search shard request r0", "$ r1 = r2 rout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster shard cluster search shard request r0", "$ r1 = r2 rout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster snapshot create create snapshot request r0", "$ r1 = r2 repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot create create snapshot request r0", "$ z0 = r1 wait for completion", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org elasticsearch common setting setting builder", "$ r4 = $ r3 load from source r1 r2", "$ r5 = $ r4 build", "r6 = org elasticsearch action admin cluster snapshot create create snapshot request r0", "r6 setting = $ r5", "r7 = org elasticsearch action admin cluster snapshot create create snapshot request r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster snapshot restore restore snapshot request r0", "$ r1 = r2 snapshot", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot restore restore snapshot request r0", "$ z0 = r1 partial", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot restore restore snapshot request r0", "$ z0 = r1 include alias", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin cluster snapshot status snapshot index status r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot status snapshot stats r0", "$ l0 = r1 start time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin cluster snapshot status snapshot stats r0", "$ i0 = r1 incremental file count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org elasticsearch action admin cluster state cluster state request builder r0", "$ r1 = r4 request", "$ r2 = org elasticsearch action admin cluster state cluster state request $ r1", "$ r2 all", "r5 = org elasticsearch action admin cluster state cluster state request builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new org elasticsearch action admin index alias alias", "$ r4 = r0 current name", "specialinvoke $ r3 < init > $ r4", "r33 = null", "r34 = r0 next token", "if r34 ! = null goto label1", "$ r32 = new java lang illegal argument exception", "specialinvoke $ r32 < init > \\ `` no alias be specified\\ ``", "throw $ r32", "if r34 ! = null goto label1", "label $ r35 = r0 next token", "$ r37 = org elasticsearch common xcontent x content parser $ token end_object", "if $ r35 == $ r37 goto label8", "$ r5 = org elasticsearch common xcontent x content parser $ token field_name", "if $ r35 ! = $ r5 goto label2", "r33 = r0 current name", "goto label1", "if $ r35 ! = $ r5 goto label2", "label $ r6 = org elasticsearch common xcontent x content parser $ token start_object", "if $ r35 ! = $ r6 goto label3", "$ r29 = org elasticsearch action admin index alias alias filter", "$ r30 = r0 get deprecation handler", "$ z7 = $ r29 match r33 $ r30", "if $ z7 == 0 goto label1", "r2 = r0 map order", "$ r3 filter r2", "if $ r35 ! = $ r6 goto label3", "label $ r7 = org elasticsearch common xcontent x content parser $ token value_string", "if $ r35 ! = $ r7 goto label6", "$ r17 = org elasticsearch action admin index alias alias rout", "$ r18 = r0 get deprecation handler", "$ z4 = $ r17 match r33 $ r18", "if $ z4 == 0 goto label4", "$ r27 = r0 text", "$ r3 rout $ r27", "if $ z4 == 0 goto label4", "label $ r19 = org elasticsearch action admin index alias alias index_routing", "$ r20 = r0 get deprecation handler", "$ z5 = $ r19 match r33 $ r20", "if $ z5 == 0 goto label5", "$ r25 = r0 text", "$ r3 index rout $ r25", "if $ z5 == 0 goto label5", "label $ r21 = org elasticsearch action admin index alias alias search_routing", "$ r22 = r0 get deprecation handler", "$ z6 = $ r21 match r33 $ r22", "if $ z6 == 0 goto label1", "$ r23 = r0 text", "$ r3 search rout $ r23", "if $ r35 ! = $ r7 goto label6", "label $ r8 = org elasticsearch common xcontent x content parser $ token value_boolean", "if $ r35 ! = $ r8 goto label1", "$ r9 = org elasticsearch action admin index alias alias is_write_index", "$ r10 = r0 get deprecation handler", "$ z0 = $ r9 match r33 $ r10", "if $ z0 == 0 goto label7", "$ z3 = r0 boolean value", "$ r15 = java lang boolean value of $ z3", "$ r3 write index $ r15", "if $ z0 == 0 goto label7", "label $ r11 = org elasticsearch action admin index alias alias is_hidden", "$ r12 = r0 get deprecation handler", "$ z1 = $ r11 match r33 $ r12", "if $ z1 == 0 goto label1", "$ z2 = r0 boolean value", "$ r13 = java lang boolean value of $ z2", "$ r3 be hidden $ r13", "if $ r35 == $ r37 goto label8", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action admin index alias index aliases request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action admin index alias index aliases request $ r2", "$ r3 add alias action r1", "r6 = org elasticsearch action admin index alias index aliases request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action admin index analyze analyze request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action admin index analyze analyze action $ request $ r2", "$ r3 tokenizer r1", "r6 = org elasticsearch action admin index analyze analyze request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = r1 rout table", "$ r5 = $ r4 all shard r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org elasticsearch action support active shard count from i0", "r3 = org elasticsearch action admin index close close index request builder r0", "$ r2 = r3 set wait for active shard $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org elasticsearch action admin index create create index cluster state update request r0", "r1 name resolve at = l0", "r2 = org elasticsearch action admin index create create index cluster state update request r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin index create create index cluster state update request r0", "$ l0 = r1 name resolve at", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index create create index cluster state update request r0", "$ r1 = r2 data stream name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org elasticsearch common setting setting builder", "$ r3 = $ r2 load from map r1", "$ r4 = $ r3 build", "r5 = org elasticsearch action admin index create create index request r0", "r5 setting = $ r4", "r6 = org elasticsearch action admin index create create index request r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = new org elasticsearch common bytes byte array", "specialinvoke r6 < init > r2", "r7 = org elasticsearch action admin index create create index request r0", "r8 = org elasticsearch common bytes byte reference r6", "$ r5 = specialinvoke r7 mapping r1 r8 r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin index forcemerge force merge request r0", "$ z0 = r1 only expunge deletes", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index map put put map request r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index map put put map request r0", "$ r1 = r2 concrete index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch action admin index shard index shard store request builder r0", "$ r2 = r5 request", "$ r3 = org elasticsearch action admin index shard index shard store request $ r2", "$ r3 index r1", "r6 = org elasticsearch action admin index shard index shard store request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util object require non null r1", "$ r3 = org elasticsearch action admin index shrink resize type $ r2", "r4 = org elasticsearch action admin index shrink resize request r0", "r4 type = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action admin index stats common stats flag r0", "$ r1 = r2 group", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org elasticsearch action admin index template put put index template request builder r0", "$ r3 = r6 request", "$ r4 = org elasticsearch action admin index template put put index template request $ r3", "$ r4 setting r1 r2", "r7 = org elasticsearch action admin index template put put index template request builder r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action admin index validate query validate query response r0", "$ z0 = r1 valid", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org elasticsearch core time value time value millis 50l", "$ r1 = org elasticsearch action bulk backoff policy exponential backoff $ r0 8", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action bulk bulk item response r0", "$ i0 = r1 id", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org elasticsearch action bulk bulk item response r0", "$ r1 = r6 failure", "if $ r1 == null goto label1", "r7 = org elasticsearch action bulk bulk item response r0", "$ r4 = r7 failure", "$ r5 = $ r4 get type", "return $ r5", "if $ r1 == null goto label1", "label r8 = org elasticsearch action bulk bulk item response r0", "$ r2 = r8 response", "$ r3 = $ r2 get type", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r6 = org elasticsearch action bulk bulk processor r0", "$ r5 = r6 add r1 r2 r3 null r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r7 = org elasticsearch action bulk bulk processor r0", "$ r2 = r7 lock", "$ r2 lock", "label r8 = org elasticsearch action bulk bulk processor r0", "r8 ensure open", "r9 = org elasticsearch action bulk bulk processor r0", "$ r3 = r9 bulk request", "$ i0 = $ r3 number of action", "if $ i0 < = 0 goto label2", "r10 = org elasticsearch action bulk bulk processor r0", "specialinvoke r10 execute", "label r11 = org elasticsearch action bulk bulk processor r0", "$ r4 = r11 lock", "$ r4 unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action bulk bulk request r0", "$ r1 = r2 request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action doc write response r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action doc write response r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "$ r4 = org elasticsearch common string empty_array", "goto label2", "label if r2 ! = null goto label3", "$ r5 = org elasticsearch common string empty_array", "goto label4", "label r7 = org elasticsearch action explain explain request builder r0", "$ r6 = r7 set fetch source $ r4 $ r5", "return $ r6", "label if r2 ! = null goto label3", "label $ r5 = newarray java lang string [ 1 ]", "$ r5 [ 0 ] = r2", "if r1 ! = null goto label1", "label $ r4 = newarray java lang string [ 1 ]", "$ r4 [ 0 ] = r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [], [10], [11], [], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch action get get response r0", "$ r1 = r3 get result", "$ r2 = $ r1 source a string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch action index index request r0", "r2 pipeline = r1", "r3 = org elasticsearch action index index request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action index index request r0", "$ z0 = r1 be pipeline resolve", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org elasticsearch action index index request r0", "$ r1 = r2 set if seq no l0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch action ingest get pipeline response r0", "$ r1 = r3 pipeline", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action search multi search response r0", "$ r1 = r2 item", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 1 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` batch reduce size must be > = 2\\ ``", "throw r2", "if i0 > 1 goto label1", "label r3 = org elasticsearch action search search request r0", "r3 batch reduce size = i0", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org elasticsearch action search search request builder r0", "$ r3 = specialinvoke r5 source builder", "$ r3 sort r1 r2", "r6 = org elasticsearch action search search request builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action search search response r0", "$ r1 = r2 shard failure", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action search shard search failure r0", "$ r1 = r2 shard target", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r5 = listener timeouts $ lambda_wrap with timeout_0__1 bootstrap $ r4 r2 r1", "$ r6 = org elasticsearch action support listener timeouts wrap with timeout r0 r2 r3 r1 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action support replication replication request r0", "$ r1 = r2 wait for active shard", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action support replication replication request r0", "$ l0 = r1 rout base on cluster version", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action support task base task request r0", "$ r1 = r2 parent task id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action support task base task response r0", "$ r1 = r2 node failure", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org elasticsearch action support transport action be shard not available exception r0", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action termvectors term vector request r0", "$ r1 = r2 select field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r4 = org elasticsearch action termvectors term vector request builder r0", "$ r1 = r4 request", "$ r2 = org elasticsearch action termvectors term vector request $ r1", "$ r2 payload z0", "r5 = org elasticsearch action termvectors term vector request builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action update update request r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch action update update request r0", "$ l0 = r1 if primary term", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch action update update request r0", "$ r1 = r2 doc", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org elasticsearch action update update request r0", "$ r3 = specialinvoke r5 safe doc", "$ r3 source r1 r2", "r6 = org elasticsearch action update update request r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch action admin index cache clear clear index cache request", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch client transport transport client r0", "$ r2 = r4 node service", "$ r2 add transport address r1", "r5 = org elasticsearch client transport transport client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch client transport transport client r0", "$ r2 = r4 node service", "$ r2 remove transport address r1", "r5 = org elasticsearch client transport transport client r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch cluster ack cluster state update request r0", "r2 ack timeout = r1", "r3 = org elasticsearch cluster ack cluster state update request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch cluster ack index cluster state update request r0", "r2 index = r1", "r3 = org elasticsearch cluster ack index cluster state update request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch cluster ack index cluster state update request r0", "r2 index = r1", "r3 = org elasticsearch cluster ack index cluster state update request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch cluster acked cluster state update task r0", "$ r2 = r5 listener", "if r1 ! = null goto label1", "$ z0 = 1", "goto label2", "label r6 = org elasticsearch cluster acked cluster state update task r0", "$ r3 = r6 new response $ z0", "$ r2 on response $ r3", "return", "if r1 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r7 = org elasticsearch cluster action shard shard state action r0", "$ r5 = r7 cluster service", "$ r6 = $ r5 state", "r8 = org elasticsearch cluster action shard shard state action r0", "r8 local shard fail r1 r2 r3 r4 $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = org elasticsearch cluster cluster change event r0", "$ r1 = r5 state", "$ r2 = $ r1 rout table", "r6 = org elasticsearch cluster cluster change event r0", "$ r3 = r6 previous state", "$ r4 = $ r3 rout table", "if $ r2 == $ r4 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 == $ r4 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch cluster cluster change event r0", "$ r1 = r3 state", "$ r2 = $ r1 node", "$ z0 = $ r2 be local node elect master", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org elasticsearch cluster cluster state builder r0", "$ r3 = r0 custom", "$ r4 = $ r3 key it", "$ r5 = cluster module $ lambda_filter custom for pre63 clients_0__4 bootstrap $ r1", "$ r4 for each remain $ r5", "$ r6 = r0 metadata", "r2 = org elasticsearch cluster metadata metadata builder $ r6", "$ r7 = r0 metadata", "$ r8 = $ r7 custom", "$ r9 = $ r8 key it", "$ r10 = cluster module $ lambda_filter custom for pre63 clients_1__9 bootstrap $ r2", "$ r9 for each remain $ r10", "$ r11 = r1 metadata r2", "$ r12 = $ r11 build", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r11 = org elasticsearch cluster cluster state observer r0", "$ r2 = r11 observe context", "$ r3 = $ r2 get", "if $ r3 == null goto label1", "r9 = new org elasticsearch elasticsearch exception", "$ r8 = newarray java lang object [ 0 ]", "specialinvoke r9 < init > \\ `` can not set current cluster state while wait for a cluster state change\\", "r12 = java lang throwable r9", "throw r12", "if $ r3 == null goto label1", "label r13 = org elasticsearch cluster cluster state observer r0", "$ r4 = r13 cluster applier service", "r1 = $ r4 state", "r14 = org elasticsearch cluster cluster state observer r0", "$ r6 = r14 last observed state", "r10 = new org elasticsearch cluster cluster state observer $ stored state", "specialinvoke r10 < init > r1", "$ r6 set r10", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 get min node version", "r3 = r1 get max node version", "org elasticsearch cluster coordination join task executor ensure nodes compatibility r0 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org elasticsearch cluster metadata index metadata r0", "$ r1 = r4 mapping", "$ r2 = $ r1 get \\ `` _default_\\ ``", "$ r3 = org elasticsearch cluster metadata mapping metadata $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch cluster metadata index metadata r0", "$ i0 = r1 rout num shard", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 last index of \\ `` -\\ ``", "if i0 ! = -1 goto label1", "$ r4 = new java lang illegal argument exception", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` no - separator find in index name [ \\ ``", "$ r7 = $ r6 append r0", "$ r8 = $ r7 append \\ `` ] \\ ``", "$ r9 = $ r8 to string", "specialinvoke $ r4 < init > $ r9", "throw $ r4", "if i0 ! = -1 goto label1", "label $ i1 = i0 + 1", "$ z0 = r0 end with \\ `` > \\ ``", "if $ z0 == 0 goto label2", "$ i3 = r0 length", "$ i4 = $ i3 - 1", "goto label3", "label $ r2 = r0 substring $ i1 $ i4", "$ i2 = java lang integer parse int $ r2", "label return $ i2", "if $ z0 == 0 goto label2", "label $ i4 = r0 length"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = r2 index", "$ z0 = org elasticsearch common util collection utils be empty $ r5", "if $ z0 == 0 goto label1", "$ r11 = null", "goto label2", "label $ r7 = r2 index option", "$ r8 = newarray java lang string [ 1 ]", "$ r8 [ 0 ] = $ r11", "r13 = org elasticsearch cluster metadata index name expression resolver r0", "r4 = r13 concrete index r1 $ r7 $ r8", "$ i0 = lengthof r4", "if $ i0 == 1 goto label3", "r12 = new java lang illegal argument exception", "specialinvoke r12 < init > \\ `` unable to return a single index a the index and option provide got resolve to multiple indices\\ ``", "throw r12", "if $ i0 == 1 goto label3", "label $ r9 = r4 [ 0 ]", "return $ r9", "if $ z0 == 0 goto label1", "label $ r6 = r2 index", "$ r11 = $ r6 [ 0 ]"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = org elasticsearch cluster metadata metadata $ assertion disable", "if $ z0 ! = 0 goto label1", "if r1 ! = null goto label1", "r25 = new java lang assertion error", "specialinvoke r25 < init >", "throw r25", "if r1 ! = null goto label1", "label $ z1 = org elasticsearch cluster metadata metadata $ assertion disable", "if $ z1 ! = 0 goto label2", "if r2 ! = null goto label2", "r26 = new java lang assertion error", "specialinvoke r26 < init >", "throw r26", "if r2 ! = null goto label2", "label $ i0 = lengthof r2", "if $ i0 ! = 0 goto label3", "return 0", "if $ i0 ! = 0 goto label3", "label $ r11 = com carrotsearch hppc object hash set from r2", "r28 = org elasticsearch cluster metadata metadata r0", "$ r12 = r28 index", "$ r13 = $ r12 key", "r29 = com carrotsearch hppc object lookup container $ r11", "r3 = org elasticsearch common collect hppc map intersection r29 $ r13", "r4 = r3 iterator", "label $ z2 = r4 have next", "if $ z2 == 0 goto label9", "$ r14 = r4 next", "r5 = java lang string $ r14", "r30 = org elasticsearch cluster metadata metadata r0", "$ r15 = r30 index", "$ r16 = $ r15 get r5", "r6 = org elasticsearch cluster metadata index metadata $ r16", "r27 = new java util array list", "specialinvoke r27 < init >", "$ r18 = r6 get aliases", "$ r19 = $ r18 value", "r8 = $ r19 iterator", "label $ z3 = r8 have next", "if $ z3 == 0 goto label7", "$ r20 = r8 next", "r9 = com carrotsearch hppc cursor object cursor $ r20", "$ r21 = r9 value", "r10 = org elasticsearch cluster metadata alias metadata $ r21", "$ r22 = r10 alias", "$ z5 = org elasticsearch common regex regex simple match r1 $ r22", "if $ z5 == 0 goto label6", "r27 add r10", "label goto label5", "if $ z3 == 0 goto label7", "label $ z4 = r27 be empty", "if $ z4 ! = 0 goto label8", "return 1", "if $ z4 ! = 0 goto label8", "label goto label4", "if $ z2 == 0 goto label9", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch cluster metadata metadata r0", "$ i0 = r1 total open index shard", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "$ r5 = r3 metadata", "org elasticsearch cluster metadata metadata index template service validate not in use $ r5 r1", "r17 = org elasticsearch cluster metadata metadata index template service r0", "$ r7 = r17 cluster service", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r8 = r15 append \\ `` remove-component-template [ \\ ``", "$ r9 = java lang string join \\", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 append \\ `` ] \\ ``", "$ r12 = $ r11 to string", "r16 = new org elasticsearch cluster metadata metadata index template service $ 3", "$ r14 = org elasticsearch common priority urgent", "r18 = org elasticsearch cluster metadata metadata index template service r0", "specialinvoke r16 < init > r18 $ r14 r2 r4 r1", "r19 = org elasticsearch cluster cluster state task config r16", "$ r7 submit state update task $ r12 r19", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch cluster node discovery node r0", "$ r2 = r3 node", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster rout allocation allocate unassigned decision r0", "r2 check decision state", "r3 = org elasticsearch cluster rout allocation allocate unassigned decision r0", "$ r1 = r3 allocation id", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if z0 == 0 goto label1", "r14 = new org elasticsearch cluster rout allocation reroute explanation", "$ r5 = org elasticsearch cluster rout allocation decider decision no", "r13 = new java lang string builder", "specialinvoke r13 < init >", "r15 = org elasticsearch cluster rout allocation command abstract allocate allocation command r0", "$ r6 = r15 name", "$ r7 = r13 append $ r6", "$ r8 = $ r7 append \\ `` allocation command \\ ``", "$ r9 = $ r8 to string", "$ r10 = r2 get message", "$ r11 = newarray java lang object [ 0 ]", "$ r12 = r1 decision $ r5 $ r9 $ r10 $ r11", "specialinvoke r14 < init > r0 $ r12", "return r14", "if z0 == 0 goto label1", "label throw r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster rout allocation disk threshold setting r0", "$ r1 = r2 high watermark raw", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label2", "$ z0 = org elasticsearch cluster rout allocation move decision $ assertion disable", "if $ z0 ! = 0 goto label1", "$ r4 = r0 type", "$ r5 = org elasticsearch cluster rout allocation decider decision $ type no", "if $ r4 ! = $ r5 goto label1", "$ r6 = new java lang assertion error", "specialinvoke $ r6 < init >", "throw $ r6", "if $ r4 ! = $ r5 goto label1", "label $ r2 = new org elasticsearch cluster rout allocation move decision", "$ r3 = org elasticsearch cluster rout allocation allocation decision no_attempt", "specialinvoke $ r2 < init > r0 null $ r3 null null 0", "return $ r2", "if r0 == null goto label2", "label $ r1 = org elasticsearch cluster rout allocation move decision cached_stay_decision", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster rout allocation move decision r0", "r2 check decision state", "r3 = org elasticsearch cluster rout allocation move decision r0", "$ r1 = r3 cluster rebalance decision", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch cluster rout allocation rout allocation r0", "$ l0 = r1 current nano time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster rout allocation rout allocation r0", "$ r1 = r2 rout node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster rout allocation rout allocation r0", "$ r1 = r2 metadata", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster rout allocation shard allocation decision r0", "$ r1 = r2 move decision", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = lengthof r1", "if $ i1 ! = 1 goto label2", "$ r11 = r1 [ 0 ]", "$ r10 = org elasticsearch cluster rout shard rout state initialize", "if $ r11 ! = $ r10 goto label1", "r18 = new java util array list", "r21 = org elasticsearch cluster rout rout node r0", "$ r17 = r21 initialize shard", "specialinvoke r18 < init > $ r17", "return r18", "if $ r11 ! = $ r10 goto label1", "label $ r13 = r1 [ 0 ]", "$ r12 = org elasticsearch cluster rout shard rout state relocate", "if $ r13 ! = $ r12 goto label2", "r19 = new java util array list", "r22 = org elasticsearch cluster rout rout node r0", "$ r15 = r22 relocate shard", "specialinvoke r19 < init > $ r15", "return r19", "if $ r13 ! = $ r12 goto label2", "label r20 = new java util array list", "specialinvoke r20 < init >", "r23 = org elasticsearch cluster rout rout node r0", "r3 = r23 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label7", "$ r8 = r3 next", "r4 = org elasticsearch cluster rout shard rout $ r8", "i0 = lengthof r1", "i2 = 0", "label if i2 > = i0 goto label6", "r6 = r1 [ i2 ]", "$ r9 = r4 state", "if $ r9 ! = r6 goto label5", "r20 add r4", "label i2 = i2 + 1", "goto label4", "label if i2 > = i0 goto label6", "label goto label3", "if $ z1 == 0 goto label7", "label return r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch cluster service cluster service r0", "$ r1 = r3 cluster applier service", "$ r2 = $ r1 state", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch cluster snapshot deletion in progress r0", "$ r1 = r2 entry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r12 = org elasticsearch common breaker child memory circuit breaker r0", "$ r1 = r12 use", "l1 = $ r1 add and get l0", "r13 = org elasticsearch common breaker child memory circuit breaker r0", "$ r2 = r13 logger", "r14 = org elasticsearch common breaker child memory circuit breaker r0", "$ r3 = child memory circuit breaker $ lambda_add without breaking_3__4 bootstrap $ r14 l0 l1", "$ r2 trace $ r3", "$ z0 = org elasticsearch common breaker child memory circuit breaker $ assertion disable", "if $ z0 ! = 0 goto label1", "$ b2 = l1 cmp 0l", "if $ b2 > = 0 goto label1", "r11 = new java lang assertion error", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r6 = r10 append \\ `` used byte [ \\ ``", "$ r7 = $ r6 append l1", "$ r8 = $ r7 append \\ `` ] must be > = 0\\ ``", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if $ b2 > = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org elasticsearch common cache cache r0", "r3 = specialinvoke r5 get cache segment r1", "r6 = org elasticsearch common cache cache r0", "$ r4 = r6 invalidation consumer", "r3 remove r1 r2 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l4 = 0l", "l5 = 0l", "l6 = 0l", "i7 = 0", "label r16 = org elasticsearch common cache cache r0", "$ r1 = r16 segment", "$ i0 = lengthof $ r1", "if i7 > = $ i0 goto label2", "r17 = org elasticsearch common cache cache r0", "$ r3 = r17 segment", "$ r4 = $ r3 [ i7 ]", "$ r5 = $ r4 segment stats", "$ r6 = org elasticsearch common cache cache $ cache segment $ segment stats access $ 500 $ r5", "$ l1 = $ r6 long value", "l4 = l4 + $ l1", "r18 = org elasticsearch common cache cache r0", "$ r7 = r18 segment", "$ r8 = $ r7 [ i7 ]", "$ r9 = $ r8 segment stats", "$ r10 = org elasticsearch common cache cache $ cache segment $ segment stats access $ 600 $ r9", "$ l2 = $ r10 long value", "l5 = l5 + $ l2", "r19 = org elasticsearch common cache cache r0", "$ r11 = r19 segment", "$ r12 = $ r11 [ i7 ]", "$ r13 = $ r12 segment stats", "$ r14 = org elasticsearch common cache cache $ cache segment $ segment stats access $ 700 $ r13", "$ l3 = $ r14 long value", "l6 = l6 + $ l3", "i7 = i7 + 1", "goto label1", "if i7 > = $ i0 goto label2", "label r15 = new org elasticsearch common cache cache $ cache stats", "specialinvoke r15 < init > l4 l5 l6", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get name", "i0 = r1 last index of 46", "if i0 == -1 goto label1", "$ r2 = r1 substring 0 i0", "goto label2", "label return $ r2", "if i0 == -1 goto label1", "label $ r2 = \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch common collect immutable open int map r0", "$ r1 = r3 map", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r9 = org elasticsearch common geo builder coordinate builder r0", "$ r3 = r9 point", "$ r4 = $ r3 get 0", "r1 = org locationtech jts geom coordinate $ r4", "r10 = org elasticsearch common geo builder coordinate builder r0", "$ r6 = r10 point", "r11 = org elasticsearch common geo builder coordinate builder r0", "$ r5 = r11 point", "$ i0 = $ r5 size", "$ i1 = $ i0 - 1", "$ r7 = $ r6 get $ i1", "r2 = org locationtech jts geom coordinate $ r7", "$ d1 = r1 x", "$ d0 = r2 x", "$ b2 = $ d1 cmpl $ d0", "if $ b2 ! = 0 goto label1", "$ d3 = r1 y", "$ d2 = r2 y", "$ b3 = $ d3 cmpl $ d2", "if $ b3 == 0 goto label2", "label r12 = org elasticsearch common geo builder coordinate builder r0", "$ r8 = r12 point", "$ r8 add r1", "label r13 = org elasticsearch common geo builder coordinate builder r0", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = new org elasticsearch common geo builder polygon builder", "r15 = new org elasticsearch common geo builder coordinate builder", "specialinvoke r15 < init >", "$ r7 = r1 shell", "$ r8 = $ r7 coordinate 0", "$ r9 = r15 coordinate $ r8", "r17 = org elasticsearch common geo builder multi polygon builder r0", "$ r10 = r17 orientation", "specialinvoke r16 < init > $ r9 $ r10", "$ r11 = r1 hole", "r3 = $ r11 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r13 = r3 next", "r4 = org elasticsearch common geo builder line string builder $ r13", "r16 hole r4", "goto label1", "if $ z0 == 0 goto label2", "label r18 = org elasticsearch common geo builder multi polygon builder r0", "$ r12 = r18 polygon", "$ r12 add r16", "r19 = org elasticsearch common geo builder multi polygon builder r0", "return r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common geo builder multi polygon builder r0", "$ r1 = r2 polygon", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r1 = org elasticsearch common geo geo bound box r0", "$ d2 = r1 bottom", "$ b0 = d1 cmpl $ d2", "if $ b0 < 0 goto label7", "r2 = org elasticsearch common geo geo bound box r0", "$ d3 = r2 top", "$ b1 = d1 cmpg $ d3", "if $ b1 > 0 goto label7", "r3 = org elasticsearch common geo geo bound box r0", "$ d4 = r3 leave", "r4 = org elasticsearch common geo geo bound box r0", "$ d5 = r4 right", "$ b2 = $ d4 cmpg $ d5", "if $ b2 > 0 goto label3", "r5 = org elasticsearch common geo geo bound box r0", "$ d8 = r5 leave", "$ b5 = d0 cmpl $ d8", "if $ b5 < 0 goto label1", "r6 = org elasticsearch common geo geo bound box r0", "$ d9 = r6 right", "$ b6 = d0 cmpg $ d9", "if $ b6 > 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b6 > 0 goto label1", "label $ z0 = 0", "if $ b2 > 0 goto label3", "label r7 = org elasticsearch common geo geo bound box r0", "$ d6 = r7 leave", "$ b3 = d0 cmpl $ d6", "if $ b3 > = 0 goto label4", "r8 = org elasticsearch common geo geo bound box r0", "$ d7 = r8 right", "$ b4 = d0 cmpg $ d7", "if $ b4 > 0 goto label5", "label $ z1 = 1", "goto label6", "label return $ z1", "if $ b4 > 0 goto label5", "label $ z1 = 0", "if $ b1 > 0 goto label7", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch common geo geo distance r0", "$ i0 = r2 ordinal", "r1 write v int $ i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "r1 = @ parameter4", "$ r2 = org elasticsearch common geo geo distance plane", "if r0 ! = $ r2 goto label1", "$ d6 = org elasticsearch common geo geo utils plane distance d0 d1 d2 d3", "$ r4 = org elasticsearch common unit distance unit meter", "$ d7 = org elasticsearch common unit distance unit convert $ d6 $ r4 r1", "return $ d7", "if r0 ! = $ r2 goto label1", "label $ d4 = org elasticsearch common geo geo utils arc distance d0 d1 d2 d3", "$ r3 = org elasticsearch common unit distance unit meter", "$ d5 = org elasticsearch common unit distance unit convert $ d4 $ r3 r1", "return $ d5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r7 = org elasticsearch common inject assistedinject assist constructor r0", "$ r3 = r7 constructor", "$ r4 = $ r3 new instance r1", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ i2 = r0 length", "if $ i2 ! = 0 goto label1", "return r0", "if $ i2 ! = 0 goto label1", "label c0 = r0 char at 0", "c1 = java lang character to upper case c0", "if c0 ! = c1 goto label2", "$ r5 = r0", "goto label3", "label return $ r5", "if c0 ! = c1 goto label2", "label $ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append c1", "$ r3 = r0 substring 1", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 to string"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = java nio file file new directory stream r0", "label r5 = org elasticsearch common io file system utils to array r1", "label if r1 == null goto label3", "r1 close", "label return r5"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch common io u t f8 stream writer r0", "$ r2 = r5 _output stream", "if $ r2 == null goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` writer not close or reset\\ ``", "throw r4", "if $ r2 == null goto label1", "label r6 = org elasticsearch common io u t f8 stream writer r0", "r6 _output stream = r1", "r7 = org elasticsearch common io u t f8 stream writer r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common lucene index elasticsearch leaf reader r0", "$ r1 = r2 shard id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org elasticsearch common lucene lucene $ directory reader with all live doc", "specialinvoke r2 < init > r0", "r3 = org apache lucene index directory reader r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "r1 = new org elasticsearch common lucene lucene $ 3", "specialinvoke r1 < init > i0", "r2 = org apache lucene index leaf reader r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch common lucene search more like this query r0", "r2 minimum should match = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["d0 = @ parameter0", "$ z0 = java lang double be na n d0", "if $ z0 ! = 0 goto label1", "$ z1 = java lang double be infinite d0", "if $ z1 == 0 goto label2", "label return 0", "if $ z1 == 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch common parse exception r0", "$ i0 = r1 column number", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = org elasticsearch common setting set grouped setting updater r1 r2 r3", "r5 = org elasticsearch common setting abstract scoped setting r0", "r5 add setting updater $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch common setting set r0", "$ r2 = r3 property", "$ r1 = org elasticsearch common setting set $ property operator dynamic", "$ z0 = $ r2 contain $ r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get secure setting", "if r2 == null goto label1", "$ r3 = r2 get set name", "r5 = org elasticsearch common setting set r0", "$ r4 = r5 get key", "$ z0 = $ r3 contain $ r4", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get secure setting", "if r2 == null goto label1", "$ r3 = r2 get set name", "r5 = org elasticsearch common setting secure set r0", "$ r4 = r5 get key", "$ z0 = $ r3 contain $ r4", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org elasticsearch common setting setting", "r8 = new org elasticsearch common setting setting $ filter map", "r11 = org elasticsearch common setting setting r0", "$ r4 = r11 setting", "specialinvoke r8 < init > $ r4 r1 null null", "r12 = org elasticsearch common setting setting r0", "$ r5 = r12 secure setting", "if $ r5 ! = null goto label1", "$ r7 = null", "goto label2", "label r14 = java util map r8", "r15 = org elasticsearch common setting secure setting $ r7", "specialinvoke r10 < init > r14 r15", "return r10", "if $ r5 ! = null goto label1", "label r9 = new org elasticsearch common setting setting $ prefixed secure setting", "$ r7 = r9", "r13 = org elasticsearch common setting setting r0", "$ r6 = r13 secure setting", "specialinvoke r9 < init > $ r6 \\ `` \\"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r17 = org elasticsearch common setting setting r0", "r3 = r17 get r1", "if r3 ! = null goto label1", "return r2", "if r3 ! = null goto label1", "label $ f0 = java lang float parse float r3", "$ r5 = java lang float value of $ f0", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r16 = new java lang string builder", "specialinvoke r16 < init >", "r17 = org elasticsearch common setting setting r0", "$ r5 = r17 setting", "$ r6 = $ r5 entry set", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r8 = r2 next", "r3 = java util map $ entry $ r8", "$ r9 = r3 get key", "$ r10 = java lang string $ r9", "$ r11 = r16 append $ r10", "$ r12 = $ r11 append \\ `` =\\ ``", "$ r13 = r3 get value", "$ r14 = $ r12 append $ r13", "$ r14 append c0", "goto label1", "if $ z0 == 0 goto label2", "label $ r7 = r16 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["l0 = @ parameter0", "$ l1 = l0 + 259200000l", "$ l2 = org elasticsearch common time date utils round floor $ l1 604800000l", "$ l3 = $ l2 - 259200000l", "return $ l3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org elasticsearch common unit distance unit $ distance access $ 000 r0 r1", "$ d0 = r3 value", "$ r4 = r3 unit", "$ d1 = org elasticsearch common unit distance unit convert $ d0 $ r4 r2", "return $ d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["l0 = @ parameter0", "$ l2 = l0 > > 63", "$ l1 = l0 < < 1", "$ l3 = $ l2 ^ $ l1", "return $ l3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = org elasticsearch common util byte utils read int l e r0 i0", "$ f0 = java lang float int bit to float $ i1", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org elasticsearch common util collection utils convert r0", "if r2 == null goto label1", "$ r3 = new java util identity hash map", "specialinvoke $ r3 < init >", "$ r4 = java util collection new set from map $ r3", "org elasticsearch common util collection utils ensure no self reference r2 r0 $ r4 r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ z0 = org elasticsearch common util concurrent count down $ assertion disable", "if $ z0 ! = 0 goto label1", "r7 = org elasticsearch common util concurrent count down r0", "$ i2 = r7 original count", "if $ i2 > 0 goto label1", "r5 = new java lang assertion error", "specialinvoke r5 < init >", "throw r5", "if $ i2 > 0 goto label1", "label r8 = org elasticsearch common util concurrent count down r0", "$ r4 = r8 count down", "i0 = $ r4 get", "$ z2 = org elasticsearch common util concurrent count down $ assertion disable", "if $ z2 ! = 0 goto label2", "if i0 > = 0 goto label2", "r6 = new java lang assertion error", "specialinvoke r6 < init >", "throw r6", "if i0 > = 0 goto label2", "label if i0 ! = 0 goto label3", "return 0", "label if i0 ! = 0 goto label3", "label r9 = org elasticsearch common util concurrent count down r0", "$ r1 = r9 count down", "$ i1 = i0 - 1", "$ z1 = $ r1 compare and set i0 $ i1", "if $ z1 == 0 goto label6", "if i0 ! = 1 goto label4", "$ z3 = 1", "goto label5", "label return $ z3", "if i0 ! = 1 goto label4", "label $ z3 = 0", "if $ z1 == 0 goto label6", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "$ z0 = org elasticsearch common util concurrent count down $ assertion disable", "if $ z0 ! = 0 goto label1", "r7 = org elasticsearch common util concurrent count down r0", "$ i2 = r7 original count", "if $ i2 > 0 goto label1", "r5 = new java lang assertion error", "specialinvoke r5 < init >", "throw r5", "if $ i2 > 0 goto label1", "label $ z1 = org elasticsearch common util concurrent count down $ assertion disable", "if $ z1 ! = 0 goto label2", "r8 = org elasticsearch common util concurrent count down r0", "$ r2 = r8 count down", "$ i1 = $ r2 get", "if $ i1 > = 0 goto label2", "r6 = new java lang assertion error", "specialinvoke r6 < init >", "throw r6", "if $ i1 > = 0 goto label2", "label r9 = org elasticsearch common util concurrent count down r0", "$ r1 = r9 count down", "$ i0 = $ r1 get and set 0", "if $ i0 < = 0 goto label3", "$ z2 = 1", "goto label4", "label return $ z2", "if $ i0 < = 0 goto label3", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [], [27], [28], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common util concurrent key lock r0", "$ r1 = r2 map", "$ z0 = $ r1 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common util concurrent queue resize es thread pool executor r0", "$ r1 = r2 execution e w m a", "$ d0 = $ r1 get average", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org elasticsearch common util concurrent thread context $ context preserving abstract runnable", "if $ z0 == 0 goto label1", "return r1", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof org elasticsearch common util concurrent thread context $ context preserving runnable", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof org elasticsearch common util concurrent abstract runnable", "if $ z2 == 0 goto label3", "r5 = new org elasticsearch common util concurrent thread context $ context preserving abstract runnable", "$ r4 = org elasticsearch common util concurrent abstract runnable r1", "r7 = org elasticsearch common util concurrent thread context r0", "specialinvoke r5 < init > r7 $ r4 null", "r8 = java lang runnable r5", "return r8", "if $ z2 == 0 goto label3", "label r6 = new org elasticsearch common util concurrent thread context $ context preserving runnable", "r9 = org elasticsearch common util concurrent thread context r0", "specialinvoke r6 < init > r9 r1 null", "r10 = java lang runnable r6", "return r10"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch common util set back scale cuckoo filter r0", "$ r1 = r2 rng", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch common util single object cache r0", "$ r1 = r3 refresh interval", "$ l1 = $ r1 millis", "$ b2 = $ l1 cmp 0l", "if $ b2 ! = 0 goto label1", "return 1", "if $ b2 ! = 0 goto label1", "label l0 = java lang system current time millis", "r4 = org elasticsearch common util single object cache r0", "$ l3 = r4 last refresh timestamp", "$ l4 = l0 - $ l3", "r5 = org elasticsearch common util single object cache r0", "$ r2 = r5 refresh interval", "$ l5 = $ r2 millis", "$ b6 = $ l4 cmp $ l5", "if $ b6 < = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ b6 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch common validation exception r0", "$ r2 = r3 validation error", "$ r2 add r1", "r4 = org elasticsearch common validation exception r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org elasticsearch discovery block cluster state publish response handler r0", "$ r2 = r7 latch", "$ l0 = r1 millis", "$ r3 = java util concurrent time unit milliseconds", "z0 = $ r2 await $ l0 $ r3", "$ z1 = org elasticsearch discovery block cluster state publish response handler $ assertion disable", "if $ z1 ! = 0 goto label1", "if z0 == 0 goto label1", "r8 = org elasticsearch discovery block cluster state publish response handler r0", "$ r4 = r8 pending node", "$ z2 = $ r4 be empty", "if $ z2 ! = 0 goto label1", "r6 = new java lang assertion error", "specialinvoke r6 < init > \\ `` response count reach 0 but still wait for some nodes\\ ``", "throw r6", "if $ z2 ! = 0 goto label1", "label return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ r6 = r1 to array class \\ `` lorg elasticsearch cluster node discovery node \\ ``", "$ r7 = org elasticsearch cluster node discovery node [ ] $ r6", "$ r8 = java util array a list $ r7", "r16 = org elasticsearch discovery zen elect master service r0", "r2 = specialinvoke r16 sort master node $ r8", "if r2 ! = null goto label1", "$ r14 = newarray org elasticsearch cluster node discovery node [ 0 ]", "return $ r14", "if r2 ! = null goto label1", "label r15 = new java util array list", "specialinvoke r15 < init > i0", "i2 = 0", "r4 = r2 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label4", "$ r13 = r4 next", "r5 = org elasticsearch cluster node discovery node $ r13", "i2 = i2 + 1", "if i2 < i0 goto label3", "goto label4", "label $ i1 = r15 size", "$ r10 = newarray org elasticsearch cluster node discovery node [ $ i1 ]", "$ r11 = r15 to array $ r10", "$ r12 = org elasticsearch cluster node discovery node [ ] $ r11", "return $ r12", "if i2 < i0 goto label3", "label r15 add r5", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = org elasticsearch discovery zen pending cluster state queue r0", "$ r4 = r16 pending state", "r14 = new org elasticsearch discovery zen pending cluster state queue $ cluster state context", "specialinvoke r14 < init > r1", "$ r4 add r14", "r17 = org elasticsearch discovery zen pending cluster state queue r0", "$ r5 = r17 pending state", "$ i0 = $ r5 size", "r18 = org elasticsearch discovery zen pending cluster state queue r0", "$ i1 = r18 max queue size", "if $ i0 < = $ i1 goto label1", "r19 = org elasticsearch discovery zen pending cluster state queue r0", "$ r6 = r19 pending state", "$ r7 = $ r6 remove 0", "r2 = org elasticsearch discovery zen pending cluster state queue $ cluster state context $ r7", "r20 = org elasticsearch discovery zen pending cluster state queue r0", "$ r8 = r20 logger", "r21 = org elasticsearch discovery zen pending cluster state queue r0", "$ i2 = r21 max queue size", "$ r9 = java lang integer value of $ i2", "$ r8 warn \\ `` drop pending state [ { } ] more than [ { } ] pending state \\", "$ z1 = r2 commit", "if $ z1 == 0 goto label1", "$ r12 = r2 listener", "r15 = new org elasticsearch elasticsearch exception", "$ r11 = newarray java lang object [ 1 ]", "r22 = org elasticsearch discovery zen pending cluster state queue r0", "$ i3 = r22 max queue size", "$ r13 = java lang integer value of $ i3", "$ r11 [ 0 ] = $ r13", "specialinvoke r15 < init > \\ `` too many pending state [ { } ] pending \\", "r23 = java lang exception r15", "$ r12 on new cluster state fail r23", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch discovery zen zen discovery r0", "$ r1 = r2 join thread control", "$ z0 = $ r1 join thread active", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r13 = org elasticsearch env node environment r0", "r4 = r13 index path r1", "r14 = org elasticsearch env node environment r0", "$ r6 = r14 logger", "$ i0 = lengthof r4", "$ r7 = java lang integer value of $ i0", "$ r6 trace \\ `` delete index { } directory path { } [ { } ] \\", "r3 accept r4", "org elasticsearch core internal io i o utils rm r4", "$ z0 = r2 have custom data path", "if $ z0 == 0 goto label1", "$ r8 = r2 custom data path", "$ r9 = r1 get u u i d", "r15 = org elasticsearch env node environment r0", "r5 = specialinvoke r15 resolve index custom location $ r8 $ r9", "r16 = org elasticsearch env node environment r0", "$ r10 = r16 logger", "$ r10 trace \\ `` delete custom index { } directory [ { } ] \\", "$ r11 = newarray java nio file path [ 1 ]", "$ r11 [ 0 ] = r5", "r3 accept $ r11", "$ r12 = newarray java nio file path [ 1 ]", "$ r12 [ 0 ] = r5", "org elasticsearch core internal io i o utils rm $ r12", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r10 = org elasticsearch env node environment r0", "$ r3 = r10 shard lock", "entermonitor $ r3", "label r9 = new java util hash set", "r11 = org elasticsearch env node environment r0", "$ r5 = r11 shard lock", "$ r6 = $ r5 key set", "specialinvoke r9 < init > $ r6", "$ r7 = java util collection unmodifiable set r9", "exitmonitor $ r3", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org elasticsearch env node environment r0", "specialinvoke r8 assert env be lock", "r9 = org elasticsearch env node environment r0", "$ r3 = r9 node path", "$ i0 = lengthof $ r3", "r2 = newarray java nio file path [ $ i0 ]", "i2 = 0", "label r10 = org elasticsearch env node environment r0", "$ r4 = r10 node path", "$ i1 = lengthof $ r4", "if i2 > = $ i1 goto label2", "r11 = org elasticsearch env node environment r0", "$ r5 = r11 node path", "$ r6 = $ r5 [ i2 ]", "$ r7 = $ r6 resolve r1", "r2 [ i2 ] = $ r7", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch env shard lock r0", "$ r1 = r2 shard id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "r2 = r0 [ i1 ]", "r5 = new org apache lucene store n i o f s directory", "$ r4 = r2 resolve \\ `` _state\\ ``", "specialinvoke r5 < init > $ r4", "r6 = org apache lucene store directory r5", "org elasticsearch common lucene lucene clean lucene index r6", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index analysis abstract index analyzer provider r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch index analysis pre configure tokenizer", "$ r3 = org elasticsearch index analysis pre build cache factory $ cache strategy one", "$ r4 = pre configure tokenizer $ lambda_singleton_0__3 bootstrap $ r1", "specialinvoke $ r2 < init > r0 $ r3 $ r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r6 = org elasticsearch index codec codec service r0", "$ r1 = r6 codecs", "$ r2 = $ r1 key set", "$ r3 = newarray java lang string [ 0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = java lang string [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = org elasticsearch index engine engine r0", "$ r1 = r4 engine config", "$ r2 = $ r1 get snapshot commit supplier", "r5 = org elasticsearch index engine engine r0", "$ r3 = $ r2 acquire index commit for snapshot r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index engine segment stats r0", "$ l0 = r1 term vector memory in byte", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index engine segment stats r0", "$ l0 = r1 norm memory in byte", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index fielddata ordinal ordinal builder r0", "r1 ordinal = null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index flush flush stats r0", "$ l0 = r1 total time in millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index index setting r0", "$ z0 = r1 query string analyze wildcard", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index index setting r0", "$ r1 = r2 setting", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index index setting r0", "$ r1 = r2 sync interval", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org elasticsearch index index setting index_translog_retention_total_files_setting", "r5 = org elasticsearch index index setting r0", "$ r2 = r5 get setting", "$ r3 = $ r1 get $ r2", "$ r4 = java lang integer $ r3", "$ i0 = $ r4 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index index setting r0", "$ r1 = r2 generation threshold size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index index setting r0", "$ i0 = r1 max docvalue field", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index index setting r0", "$ r1 = r2 search idle after", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org elasticsearch index mapper map lookup r0", "$ r2 = r4 field type lookup", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = new org elasticsearch index mapper parse context $ 2", "r3 = org elasticsearch index mapper parse context r0", "r4 = org elasticsearch index mapper parse context r0", "specialinvoke r2 < init > r3 r4", "r5 = org elasticsearch index mapper parse context r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "z1 = @ parameter3", "r7 = org elasticsearch index mapper range type r0", "$ r4 = r7 number type", "r3 = $ r4 parse r2 z0", "if z1 == 0 goto label1", "$ r6 = r3", "goto label2", "label return $ r6", "if z1 == 0 goto label1", "label r8 = org elasticsearch index mapper range type r0", "$ r5 = r8 next up r3", "$ r6 = java lang number $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index merge scheduler config r0", "$ z0 = r1 auto throttle", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query abstract geometry query builder r0", "$ r1 = r2 indexed shape rout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query boost query builder r0", "$ r1 = r2 positive query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query common term query builder r0", "$ f0 = r1 cutoff frequency", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query functionscore function score query builder r0", "$ r1 = r2 score mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query functionscore function score query builder r0", "$ f0 = r1 max boost", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query geo bound box query builder r0", "$ r1 = r2 validation method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query geo bound box query builder r0", "$ r1 = r2 field name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query geo distance query builder r0", "$ r1 = r2 geo distance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query geo distance query builder r0", "$ r1 = r2 validation method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query match bool prefix query builder r0", "$ i0 = r1 max expansion", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` [ match ] require zero term query to be non-null\\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = org elasticsearch index query match query builder r0", "r4 zero term query = r1", "r5 = org elasticsearch index query match query builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query more like this query builder r0", "$ i0 = r1 min doc freq", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index query more like this query builder r0", "$ z0 = r1 fail on unsupported field", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query nest query builder r0", "$ r1 = r2 query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch index query match query builder", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch index query match phrase query builder", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch index query combine field query builder", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch index query range query builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch index query functionscore function score query builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch index query functionscore script score query builder", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org elasticsearch index query query builder geo shape query r0 r1", "$ r3 = org elasticsearch common geo shape relation disjoint", "r2 relation $ r3", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query query string query builder r0", "$ r1 = r2 fuzziness", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch index query search execution context r0", "$ r2 = specialinvoke r3 field type r1", "if $ r2 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r26 = @ parameter0", "$ z0 = r26 equal \\ `` string\\ ``", "if $ z0 == 0 goto label1", "$ r24 = org elasticsearch index query search execution context deprecation logger", "$ r23 = org elasticsearch common log deprecation category mapping", "$ r22 = newarray java lang object [ 0 ]", "$ r24 deprecate $ r23 \\ `` unmapped_type_string\\", "r26 = \\ `` keyword\\ ``", "label r32 = org elasticsearch index query search execution context r0", "$ r5 = r32 mapper service", "r1 = $ r5 parser context", "r2 = r1 type parser r26", "if r2 ! = null goto label2", "r28 = new java lang illegal argument exception", "r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r18 = r27 append \\ `` no mapper find for type [ \\ ``", "$ r19 = $ r18 append r26", "$ r20 = $ r19 append \\ `` ] \\ ``", "$ r21 = $ r20 to string", "specialinvoke r28 < init > $ r21", "throw r28", "if r2 ! = null goto label2", "label $ r6 = java util collection empty map", "r3 = r2 parse \\ `` __anonymous_\\", "r29 = new org elasticsearch index mapper content path", "specialinvoke r29 < init > 0", "r4 = r3 build r29", "$ z1 = r4 instanceof org elasticsearch index mapper field mapper", "if $ z1 == 0 goto label3", "$ r14 = org elasticsearch index mapper field mapper r4", "$ r15 = $ r14 field type", "return $ r15", "if $ z1 == 0 goto label3", "label r31 = new java lang illegal argument exception", "r30 = new java lang string builder", "specialinvoke r30 < init >", "$ r10 = r30 append \\ `` mapper for type [ \\ ``", "$ r11 = $ r10 append r26", "$ r12 = $ r11 append \\ `` ] must be a leaf field\\ ``", "$ r13 = $ r12 to string", "specialinvoke r31 < init > $ r13", "throw r31"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org elasticsearch common string be empty r1", "if $ z0 == 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` supplied field be null or empty\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org elasticsearch index query simple query string builder r0", "$ r2 = r7 field and weight", "$ r3 = java lang float value of 1 0f", "$ r2 put r1 $ r3", "r8 = org elasticsearch index query simple query string builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "$ z0 = org elasticsearch common string be empty r1", "if $ z0 == 0 goto label1", "r6 = new java lang illegal argument exception", "specialinvoke r6 < init > \\ `` supplied field be null or empty\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r7 = org elasticsearch index query simple query string builder r0", "r7 check negative boost f0", "r8 = org elasticsearch index query simple query string builder r0", "$ r2 = r8 field and weight", "$ r3 = java lang float value of f0", "$ r2 put r1 $ r3", "r9 = org elasticsearch index query simple query string builder r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query simple query string builder r0", "$ r1 = r2 analyzer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index query simple query string builder r0", "$ r1 = r2 setting", "$ z0 = $ r1 lenient", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index refresh refresh stats r0", "$ l0 = r1 total", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index refresh refresh stats r0", "$ l0 = r1 external total", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index refresh refresh stats r0", "$ l0 = r1 total time in millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index refresh refresh stats r0", "$ l0 = r1 external total time in millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org elasticsearch index reindex abstract bulk by scroll request builder r0", "$ r2 = r6 request", "$ r3 = org elasticsearch index reindex abstract bulk by scroll request $ r2", "$ r3 set retry backoff initial time r1", "r7 = org elasticsearch index reindex abstract bulk by scroll request builder r0", "$ r5 = r7 self", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = @ parameter1", "r9 = org elasticsearch index reindex bulk by scroll task r0", "$ z0 = r9 be worker", "if $ z0 == 0 goto label1", "r6 = new java lang illegal state exception", "specialinvoke r6 < init > \\ `` this task be already a worker\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r10 = org elasticsearch index reindex bulk by scroll task r0", "$ z1 = r10 be leader", "if $ z1 == 0 goto label2", "r7 = new java lang illegal state exception", "specialinvoke r7 < init > \\ `` this task be already a leader for other slice subtasks\\ ``", "throw r7", "if $ z1 == 0 goto label2", "label r8 = new org elasticsearch index reindex worker bulk by scroll task state", "r11 = org elasticsearch index reindex bulk by scroll task r0", "specialinvoke r8 < init > r11 r1 f0", "r12 = org elasticsearch index reindex bulk by scroll task r0", "r12 worker state = r8", "r13 = org elasticsearch index reindex bulk by scroll task r0", "$ z2 = r13 be cancel", "if $ z2 == 0 goto label3", "r14 = org elasticsearch index reindex bulk by scroll task r0", "$ r3 = r14 worker state", "$ r3 handle cancel", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org elasticsearch index reindex delete by query request r0", "$ r1 = r4 get search request", "$ r2 = $ r1 source", "$ r2 size i0", "r5 = org elasticsearch index reindex delete by query request r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "$ z0 = org elasticsearch index seqno replication tracker $ assertion disable", "if $ z0 ! = 0 goto label1", "r19 = org elasticsearch index seqno replication tracker r0", "$ z8 = r19 primary mode", "if $ z8 ! = 0 goto label1", "r14 = new java lang assertion error", "specialinvoke r14 < init >", "throw r14", "if $ z8 ! = 0 goto label1", "label $ z1 = org elasticsearch index seqno replication tracker $ assertion disable", "if $ z1 ! = 0 goto label2", "r20 = org elasticsearch index seqno replication tracker r0", "$ z7 = r20 handoff in progress", "if $ z7 == 0 goto label2", "r15 = new java lang assertion error", "specialinvoke r15 < init >", "throw r15", "if $ z7 == 0 goto label2", "label $ z2 = org elasticsearch index seqno replication tracker $ assertion disable", "if $ z2 ! = 0 goto label3", "r21 = org elasticsearch index seqno replication tracker r0", "$ z6 = specialinvoke r21 invariant", "if $ z6 ! = 0 goto label3", "r16 = new java lang assertion error", "specialinvoke r16 < init >", "throw r16", "if $ z6 ! = 0 goto label3", "label r22 = org elasticsearch index seqno replication tracker r0", "$ r3 = r22 checkpoint", "$ r4 = $ r3 get r1", "r2 = org elasticsearch index seqno replication tracker $ checkpoint state $ r4", "$ z3 = org elasticsearch index seqno replication tracker $ assertion disable", "if $ z3 ! = 0 goto label4", "r23 = org elasticsearch index seqno replication tracker r0", "$ r9 = r23 shard allocation id", "$ z5 = $ r9 equal r1", "if $ z5 == 0 goto label4", "if r2 ! = null goto label4", "r17 = new java lang assertion error", "specialinvoke r17 < init >", "throw r17", "if r2 ! = null goto label4", "label if r2 == null goto label5", "$ l2 = r2 global checkpoint", "$ b3 = l0 cmp $ l2", "if $ b3 < = 0 goto label5", "l1 = r2 global checkpoint", "r2 global checkpoint = l0", "r24 = org elasticsearch index seqno replication tracker r0", "$ r6 = r24 logger", "$ r7 = java lang long value of l1", "$ r8 = java lang long value of l0", "$ r6 trace \\ `` update local knowledge for [ { } ] on the primary of the global checkpoint from [ { } ] to [ { } ] \\", "label $ z9 = org elasticsearch index seqno replication tracker $ assertion disable", "if $ z9 ! = 0 goto label6", "r25 = org elasticsearch index seqno replication tracker r0", "$ z4 = specialinvoke r25 invariant", "if $ z4 ! = 0 goto label6", "r18 = new java lang assertion error", "specialinvoke r18 < init >", "throw r18", "if $ z4 ! = 0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [], [65], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index seqno retention lease r0", "$ l0 = r1 retain sequence number", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index snapshots blobstore blob store index shard snapshot r0", "$ r1 = r2 snapshot", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index snapshots blobstore blob store index shard snapshot r0", "$ r1 = r2 index file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index snapshots blobstore blob store index shard snapshot r0", "$ i0 = r1 incremental file count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = org elasticsearch index snapshots blobstore snapshot file r0", "$ r5 = r15 physical file", "if $ r5 ! = null goto label3", "r14 = new java util hash map", "specialinvoke r14 < init >", "r16 = org elasticsearch index snapshots blobstore snapshot file r0", "$ r10 = r16 index file", "r3 = $ r10 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r11 = r3 next", "r4 = org elasticsearch index snapshots blobstore blob store index shard snapshot $ file info $ r11", "$ r12 = r4 physical name", "r14 put $ r12 r4", "goto label1", "if $ z0 == 0 goto label2", "label r17 = org elasticsearch index snapshots blobstore snapshot file r0", "r17 physical file = r14", "label r18 = org elasticsearch index snapshots blobstore snapshot file r0", "$ r6 = r18 physical file", "$ r7 = $ r6 get r1", "$ r8 = org elasticsearch index snapshots blobstore blob store index shard snapshot $ file info $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r8 = org elasticsearch index store store r0", "r8 ensure open", "r9 = org elasticsearch index store store r0", "r1 = r9 directory", "r7 = null", "r2 = r1 list all", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label7", "r4 = r2 [ i1 ]", "$ z0 = r4 start with \\ `` corrupted_\\ ``", "if $ z0 == 0 goto label6", "label r1 delete file r4", "label goto label6", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label7", "label if r7 == null goto label8", "throw r7", "label if r7 == null goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r27 = org elasticsearch index store store r0", "$ r6 = r27 metadata lock", "$ r7 = $ r6 write lock", "$ r7 lock", "label r28 = org elasticsearch index store store r0", "$ r8 = r28 directory", "r29 = org apache lucene store directory $ r8", "r2 = org elasticsearch index store store new temporary append index writer r29 null", "label $ r9 = org elasticsearch index store store get user data r2", "$ r10 = $ r9 get \\ `` translog_uuid\\ ``", "$ z0 = r1 equal $ r10", "if $ z0 == 0 goto label03", "r26 = new java lang illegal argument exception", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r16 = r25 append \\ `` a new translog uuid can\\'t be equal to exist one get [ \\ ``", "$ r17 = $ r16 append r1", "$ r18 = $ r17 append \\ `` ] \\ ``", "$ r19 = $ r18 to string", "specialinvoke r26 < init > $ r19", "throw r26", "if $ z0 == 0 goto label03", "label $ r11 = java util collection singleton map \\ `` translog_uuid\\", "org elasticsearch index store store update commit data r2 $ r11", "label if r2 == null goto label10", "r2 close", "goto label10", "label r30 = org elasticsearch index store store r0", "$ r12 = r30 metadata lock", "$ r13 = $ r12 write lock", "$ r13 unlock", "goto label13", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch index translog translog read operation r1", "$ l0 = r2 primary term", "r15 = org elasticsearch index translog base translog reader r0", "$ l1 = r15 get primary term", "$ b2 = $ l0 cmp $ l1", "if $ b2 < = 0 goto label1", "r16 = org elasticsearch index translog base translog reader r0", "$ l3 = r16 get primary term", "$ b4 = $ l3 cmp 0l", "if $ b4 == 0 goto label1", "r14 = new org elasticsearch index translog translog corrupt exception", "r17 = org elasticsearch index translog base translog reader r0", "$ r4 = r17 path", "$ r5 = $ r4 to string", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r7 = r13 append \\ `` operation\\ 's term be new than translog header term operation term [ \\ ``", "$ l5 = r2 primary term", "$ r8 = $ r7 append $ l5", "$ r9 = $ r8 append \\ `` ] translog header term [ \\ ``", "r18 = org elasticsearch index translog base translog reader r0", "$ l6 = r18 get primary term", "$ r10 = $ r9 append $ l6", "$ r11 = $ r10 append \\ `` ] \\ ``", "$ r12 = $ r11 to string", "specialinvoke r14 < init > $ r5 $ r12", "r19 = java lang throwable r14", "throw r19", "if $ b4 == 0 goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r32 = org elasticsearch index translog translog r0", "$ r3 = r32 read lock", "r1 = $ r3 acquire", "label r33 = org elasticsearch index translog translog r0", "$ r4 = r33 reader", "$ z0 = $ r4 be empty", "if $ z0 == 0 goto label04", "r34 = org elasticsearch index translog translog r0", "$ r26 = r34 current", "l1 = $ r26 get generation", "label if r1 == null goto label03", "r1 close", "label return l1", "if $ z0 == 0 goto label04", "label $ z1 = org elasticsearch index translog translog $ assertion disable", "if $ z1 ! = 0 goto label05", "r35 = org elasticsearch index translog translog r0", "$ r8 = r35 reader", "$ r9 = $ r8 stream", "$ r10 = translog $ get generation__4 bootstrap $", "$ r11 = $ r9 map $ r10", "$ r12 = translog $ compare to__5 bootstrap $", "$ r13 = $ r11 min $ r12", "$ r14 = $ r13 get", "$ r16 = java lang long $ r14", "r36 = org elasticsearch index translog translog r0", "$ r15 = r36 reader", "$ r17 = $ r15 get 0", "$ r18 = org elasticsearch index translog translog reader $ r17", "$ l0 = $ r18 get generation", "$ r19 = java lang long value of $ l0", "$ z2 = $ r16 equal $ r19", "if $ z2 ! = 0 goto label05", "r31 = new java lang assertion error", "r30 = new java lang string builder", "specialinvoke r30 < init >", "$ r22 = r30 append \\ `` the first translog isn\\'t the one with the minimum generation\\ ``", "r37 = org elasticsearch index translog translog r0", "$ r23 = r37 reader", "$ r24 = $ r22 append $ r23", "$ r25 = $ r24 to string", "specialinvoke r31 < init > $ r25", "throw r31", "if $ z2 ! = 0 goto label05", "label r38 = org elasticsearch index translog translog r0", "$ r5 = r38 reader", "$ r6 = $ r5 get 0", "$ r7 = org elasticsearch index translog translog reader $ r6", "l2 = $ r7 get generation", "label if r1 == null goto label07", "label return l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index warmer warm stats r0", "$ l0 = r1 total time in millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "r11 = org elasticsearch index recovery recovery collection r0", "$ r3 = r11 on go recovery", "$ r4 = java lang long value of l0", "$ r5 = $ r3 remove $ r4", "r2 = org elasticsearch index recovery recovery target $ r5", "if r2 == null goto label1", "r12 = org elasticsearch index recovery recovery collection r0", "$ r6 = r12 logger", "$ r7 = r2 shard id", "$ r8 = r2 source node", "$ l1 = r2 recovery id", "$ r9 = java lang long value of $ l1", "$ r10 = java lang boolean value of z0", "$ r6 trace \\ `` { } fail recovery from { } id [ { } ] send shard failure [ { } ] \\", "r2 fail r1 z0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch index system data stream descriptor r0", "$ r1 = r2 executor name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org elasticsearch ingest ingest service r0", "$ r3 = r6 pipeline", "$ r4 = $ r3 get r1", "r2 = org elasticsearch ingest ingest service $ pipeline holder $ r4", "if r2 == null goto label1", "$ r5 = r2 pipeline", "return $ r5", "if r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org elasticsearch common setting setting builder", "$ r2 = java util collection empty map", "org elasticsearch node internal setting preparer initialize setting r1 r0 $ r2", "$ r3 = internal setting preparer $ lambda_prepare settings_0__1 bootstrap $", "org elasticsearch node internal setting preparer finalize setting r1 $ r3", "$ r4 = r1 build", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org elasticsearch persistent persistent task custom metadata get persistent task custom metadata r0", "if r1 ! = null goto label1", "return r0", "if r1 ! = null goto label1", "label r2 = org elasticsearch persistent persistent task custom metadata builder r1", "$ r4 = r1 task", "r20 = $ r4 iterator", "label $ z0 = r20 have next", "if $ z0 == 0 goto label4", "$ r11 = r20 next", "r3 = org elasticsearch persistent persistent task custom metadata $ persistent task $ r11", "$ r12 = r3 get assignment", "$ r13 = $ r12 get executor node", "if $ r13 == null goto label3", "$ r14 = r0 node", "$ r15 = r3 get assignment", "$ r16 = $ r15 get executor node", "$ z2 = $ r14 node exist $ r16", "if $ z2 ! = 0 goto label3", "$ r17 = r3 get id", "$ r18 = org elasticsearch persistent persistent task custom metadata lost_node_assignment", "r2 reassign task $ r17 $ r18", "label goto label2", "if $ z0 == 0 goto label4", "label $ z1 = r2 be change", "if $ z1 ! = 0 goto label5", "label $ r5 = r0 metadata", "r21 = org elasticsearch cluster metadata metadata builder $ r5", "$ r6 = r2 build", "r22 = org elasticsearch cluster metadata metadata $ custom $ r6", "r21 put custom \\ `` persistent_tasks\\", "$ r8 = org elasticsearch cluster cluster state builder r0", "$ r9 = $ r8 metadata r21", "$ r10 = $ r9 build", "return $ r10"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util collection empty list", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 resolve \\ `` plugin-descriptor properties\\ ``", "$ r9 = new java util property", "specialinvoke $ r9 < init >", "$ r10 = newarray java nio file open option [ 0 ]", "r87 = java nio file file new input stream r1 $ r10", "label $ r9 load r87", "label if r87 == null goto label08", "r87 close", "goto label08", "label $ r11 = $ r9 string property name", "$ r12 = $ r11 stream", "$ r13 = java util function function identity", "java util object require non null $ r9", "$ r15 = plugin info $ get property__1 bootstrap $ $ r9", "$ r16 = java util stream collector to map $ r13 $ r15", "$ r17 = $ r12 collect $ r16", "r2 = java util map $ r17", "$ r18 = r2 remove \\ `` name\\ ``", "r90 = java lang string $ r18", "if r90 == null goto label09", "$ z1 = r90 be empty", "if $ z1 == 0 goto label10", "label $ r19 = new java lang illegal argument exception", "$ r20 = new java lang string builder", "specialinvoke $ r20 < init >", "$ r21 = $ r20 append \\ `` property [ name ] be miss in [ \\ ``", "$ r22 = $ r21 append r1", "$ r23 = $ r22 append \\ `` ] \\ ``", "$ r24 = $ r23 to string", "specialinvoke $ r19 < init > $ r24", "throw $ r19", "if $ z1 == 0 goto label10", "label $ r25 = r2 remove \\ `` description\\ ``", "r91 = java lang string $ r25", "if r91 ! = null goto label11", "$ r77 = new java lang illegal argument exception", "$ r78 = new java lang string builder", "specialinvoke $ r78 < init >", "$ r79 = $ r78 append \\ `` property [ description ] be miss for plugin [ \\ ``", "$ r80 = $ r79 append r90", "$ r81 = $ r80 append \\ `` ] \\ ``", "$ r82 = $ r81 to string", "specialinvoke $ r77 < init > $ r82", "throw $ r77", "if r91 ! = null goto label11", "label $ r26 = r2 remove \\ `` version\\ ``", "r92 = java lang string $ r26", "if r92 ! = null goto label12", "$ r71 = new java lang illegal argument exception", "$ r72 = new java lang string builder", "specialinvoke $ r72 < init >", "$ r73 = $ r72 append \\ `` property [ version ] be miss for plugin [ \\ ``", "$ r74 = $ r73 append r90", "$ r75 = $ r74 append \\ `` ] \\ ``", "$ r76 = $ r75 to string", "specialinvoke $ r71 < init > $ r76", "throw $ r71", "if r92 ! = null goto label12", "label $ r27 = r2 remove \\ `` elasticsearch version\\ ``", "r93 = java lang string $ r27", "if r93 ! = null goto label13", "$ r65 = new java lang illegal argument exception", "$ r66 = new java lang string builder", "specialinvoke $ r66 < init >", "$ r67 = $ r66 append \\ `` property [ elasticsearch version ] be miss for plugin [ \\ ``", "$ r68 = $ r67 append r90", "$ r69 = $ r68 append \\ `` ] \\ ``", "$ r70 = $ r69 to string", "specialinvoke $ r65 < init > $ r70", "throw $ r65", "if r93 ! = null goto label13", "label r3 = org elasticsearch version from string r93", "$ r28 = r2 remove \\ `` java version\\ ``", "r4 = java lang string $ r28", "if r4 ! = null goto label14", "$ r59 = new java lang illegal argument exception", "$ r60 = new java lang string builder", "specialinvoke $ r60 < init >", "$ r61 = $ r60 append \\ `` property [ java version ] be miss for plugin [ \\ ``", "$ r62 = $ r61 append r90", "$ r63 = $ r62 append \\ `` ] \\ ``", "$ r64 = $ r63 to string", "specialinvoke $ r59 < init > $ r64", "throw $ r59", "if r4 ! = null goto label14", "label org elasticsearch jdk jar hell check version format r4", "$ r29 = r2 remove \\ `` extend plugins\\ ``", "r5 = java lang string $ r29", "if r5 ! = null goto label15", "r94 = java util collection empty list", "goto label16", "label $ r31 = r2 remove \\ `` have native controller\\ ``", "$ r32 = java lang string $ r31", "z0 = org elasticsearch plugins plugin info parse boolean value r90 \\ `` have native controller\\", "$ r33 = r2 remove \\ `` type\\ ``", "$ r34 = java lang string $ r33", "r6 = org elasticsearch plugins plugin info get plugin type r90 $ r34", "$ r35 = r2 remove \\ `` classname\\ ``", "$ r36 = java lang string $ r35", "r7 = org elasticsearch plugins plugin info get classname r90 r6 $ r36", "$ r37 = r2 remove \\ `` java opts\\ ``", "r8 = java lang string $ r37", "$ r38 = org elasticsearch plugins plugin type bootstrap", "if r6 == $ r38 goto label17", "$ z5 = org elasticsearch common string be null or empty r8", "if $ z5 ! = 0 goto label17", "$ r53 = new java lang illegal argument exception", "$ r54 = new java lang string builder", "specialinvoke $ r54 < init >", "$ r55 = $ r54 append \\ `` [ java opts ] can only have a value when [ type ] be set to [ bootstrap ] for plugin [ \\ ``", "$ r56 = $ r55 append r90", "$ r57 = $ r56 append \\ `` ] \\ ``", "$ r58 = $ r57 to string", "specialinvoke $ r53 < init > $ r58", "throw $ r53", "if $ z5 ! = 0 goto label17", "label $ r39 = org elasticsearch version v_6_3_0", "$ z2 = r3 before $ r39", "if $ z2 == 0 goto label18", "$ r51 = org elasticsearch version v_6_0_0_beta2", "$ z4 = r3 on or after $ r51", "if $ z4 == 0 goto label18", "r2 remove \\ `` require keystore\\ ``", "label z6 = 0", "$ r95 = org elasticsearch plugins plugin info licensed_plugins_support", "$ z7 = r3 on or after $ r95", "if $ z7 == 0 goto label19", "$ r49 = r2 remove \\ `` licensed\\ ``", "$ r50 = java lang string $ r49", "z6 = org elasticsearch plugins plugin info parse boolean value r90 \\ `` licensed\\", "label $ z3 = r2 be empty", "if $ z3 ! = 0 goto label20", "$ r41 = new java lang illegal argument exception", "$ r42 = new java lang string builder", "specialinvoke $ r42 < init >", "$ r43 = $ r42 append \\ `` unknown property for plugin [ \\ ``", "$ r44 = $ r43 append r90", "$ r45 = $ r44 append \\ `` ] in plugin descriptor \\ ``", "$ r46 = r2 key set", "$ r47 = $ r45 append $ r46", "$ r48 = $ r47 to string", "specialinvoke $ r41 < init > $ r48", "throw $ r41", "if $ z3 ! = 0 goto label20", "label $ r40 = new org elasticsearch plugins plugin info", "specialinvoke $ r40 < init > r90 r91 r92 r3 r4 r7 r94 z0 r6 r8 z6", "return $ r40", "if r5 ! = null goto label15", "label $ r30 = org elasticsearch common string delimit list to string array r5 \\", "r94 = java util array a list $ r30"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [], [86], [87], [88], [89], [90], [91], [], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], [142], [143], [], [145], [146], [147], [], [149], [150], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch plugins plugin info r0", "$ r1 = r2 extend plugins", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch plugins plugin info r0", "$ z0 = r1 be license", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch repository blobstore blob store repository r0", "$ z0 = r1 compress", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org elasticsearch rest action admin index rest get index action allow response parameter", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch rest rest request r0", "$ r1 = r3 http request", "$ r2 = $ r1 uri", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch rest rest request r0", "$ r1 = r2 raw path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label i0 = r0 length", "if i0 < = 2 goto label2", "$ z1 = r0 start with \\ `` \\ ``", "if $ z1 == 0 goto label2", "$ z2 = r0 end with \\ `` \\ ``", "if $ z2 == 0 goto label2", "$ z3 = 1", "goto label3", "label if $ z3 == 0 goto label4", "$ i1 = r0 length", "$ i2 = $ i1 - 1", "$ r1 = r0 substring 1 $ i2", "$ r2 = java util regex pattern compile $ r1", "return $ r2", "label if $ z3 == 0 goto label4", "label return null", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch script script exception r0", "$ r1 = r2 script", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch script script exception r0", "$ r1 = r2 lang", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org elasticsearch search aggregation aggregation r0", "$ r5 = r8 aggregation", "r3 = $ r5 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r6 = r3 next", "r4 = org elasticsearch search aggregation aggregation $ r6", "r4 to x content r1 r2", "goto label1", "if $ z0 == 0 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org elasticsearch search aggregation aggregator factory r0", "$ r3 = r5 metadata", "r6 = org elasticsearch search aggregation aggregator factory r0", "$ r4 = r6 create internal r1 r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search aggregation bucket adjacency adjacency matrix aggregation builder r0", "$ r1 = r2 separator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org elasticsearch search aggregation bucket best bucket defer collector $ 2", "r4 = org elasticsearch search aggregation bucket best bucket defer collector r0", "specialinvoke r3 < init > r4 r1 r1", "r5 = org elasticsearch search aggregation aggregator r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org elasticsearch search aggregation bucket composite composite value collector queue $ assertion disable", "if $ z0 ! = 0 goto label1", "$ i0 = r1 size", "r20 = org elasticsearch search aggregation bucket composite composite value collector queue r0", "$ r6 = r20 array", "$ i1 = lengthof $ r6", "if $ i0 == $ i1 goto label1", "r17 = new java lang assertion error", "specialinvoke r17 < init >", "throw r17", "if $ i0 == $ i1 goto label1", "label r21 = org elasticsearch search aggregation bucket composite composite value collector queue r0", "r21 after key be set = 1", "i2 = 0", "label $ i3 = r1 size", "if i2 > = $ i3 goto label7", "label r22 = org elasticsearch search aggregation bucket composite composite value collector queue r0", "$ r3 = r22 array", "$ r4 = $ r3 [ i2 ]", "$ r5 = r1 get i2", "$ r4 set after $ r5", "label goto label6", "label i2 = i2 + 1", "goto label2", "if i2 > = $ i3 goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org elasticsearch search aggregation bucket histogram date histogram aggregation builder r0", "$ r1 = r2 interval l0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation bucket histogram date histogram aggregation builder r0", "$ l0 = r1 min doc count", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation bucket sampler diversified aggregation builder r0", "$ i0 = r1 shard size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ b1 = l0 cmp 0l", "if $ b1 > = 0 goto label1", "r12 = new java lang illegal argument exception", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r4 = r11 append \\ `` [ min doc count ] must be great than or equal to 0 find [ \\ ``", "$ r5 = $ r4 append l0", "$ r6 = $ r5 append \\ `` ] in [ \\ ``", "r13 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "$ r7 = r13 name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string", "specialinvoke r12 < init > $ r10", "throw r12", "if $ b1 > = 0 goto label1", "label r14 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "$ r1 = r14 bucket count threshold", "$ r1 set min doc count l0", "r15 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 0 goto label1", "r12 = new java lang illegal argument exception", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r4 = r11 append \\ `` [ shard size ] must be great than 0 found [ \\ ``", "$ r5 = $ r4 append i0", "$ r6 = $ r5 append \\ `` ] in [ \\ ``", "r13 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "$ r7 = r13 name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` ] \\ ``", "$ r10 = $ r9 to string", "specialinvoke r12 < init > $ r10", "throw r12", "if i0 > 0 goto label1", "label r14 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "$ r1 = r14 bucket count threshold", "$ r1 set shard size i0", "r15 = org elasticsearch search aggregation bucket term significant term aggregation builder r0", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search aggregation bucket term term aggregation builder r0", "$ r1 = r2 collect mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new java util array list", "r4 = org elasticsearch search aggregation internal aggregation r0", "$ r2 = specialinvoke r4 get internal aggregation", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch search aggregation metric abstract percentile aggregation builder r0", "r2 percentile config = r1", "r3 = org elasticsearch search aggregation metric abstract percentile aggregation builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation metric compensate sum r0", "$ d0 = r1 delta", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r1 = org elasticsearch search aggregation metric compensate sum r0", "r1 value = d0", "r2 = org elasticsearch search aggregation metric compensate sum r0", "r2 delta = d1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["l0 = @ parameter0", "$ f0 = float l0", "$ f1 = $ f0 0 75f", "$ d0 = double $ f1", "$ d1 = java lang math ceil $ d0", "l1 = long $ d1", "$ l2 = l1 * 4l", "i3 = org apache lucene util pack packed ints bit require $ l2", "i4 = java lang math max i3 4", "i5 = java lang math min i4 18", "return i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation metric median absolute deviation aggregation builder r0", "$ d0 = r1 compression", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search aggregation metric top hit aggregation builder r0", "$ r1 = r2 script field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation metric top hit aggregation builder r0", "$ z0 = r1 track score", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "r1 = r0 current token", "$ r2 = org elasticsearch common xcontent x content parser $ token value_number", "if r1 == $ r2 goto label1", "$ r3 = org elasticsearch common xcontent x content parser $ token value_string", "if r1 ! = $ r3 goto label2", "label $ d1 = r0 double value", "return $ d1", "if r1 ! = $ r3 goto label2", "label return d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search aggregation pipeline serial diff pipeline aggregation builder r0", "$ i0 = r1 lag", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r22 = org elasticsearch search aggregation support value source config r0", "$ r2 = r22 script", "if $ r2 == null goto label3", "r20 = new java lang string builder", "specialinvoke r20 < init >", "$ r13 = r20 append \\ `` script yielding [ \\ ``", "r23 = org elasticsearch search aggregation support value source config r0", "$ r14 = r23 script value type", "if $ r14 == null goto label1", "r24 = org elasticsearch search aggregation support value source config r0", "$ r18 = r24 script value type", "$ r19 = $ r18 get prefer name", "goto label2", "label $ r15 = $ r13 append $ r19", "$ r16 = $ r15 append \\ `` ] \\ ``", "$ r17 = $ r16 to string", "return $ r17", "if $ r14 == null goto label1", "label $ r19 = \\ `` unknown type\\ ``", "if $ r2 == null goto label3", "label r25 = org elasticsearch search aggregation support value source config r0", "r1 = r25 field type", "if r1 == null goto label4", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r4 = r21 append \\ `` field [ \\ ``", "$ r5 = r1 name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` ] of type [ \\ ``", "$ r8 = r1 type name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` ] \\ ``", "$ r11 = $ r10 to string", "return $ r11", "if r1 == null goto label4", "label return \\ `` unmapped field\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search builder search source builder r0", "$ r1 = r2 query builder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search builder search source builder r0", "$ r1 = r2 post query builder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch search builder search source builder r0", "$ r3 = r9 doc value field", "if $ r3 ! = null goto label1", "r7 = new java util array list", "specialinvoke r7 < init >", "r10 = org elasticsearch search builder search source builder r0", "r10 doc value field = r7", "label r11 = org elasticsearch search builder search source builder r0", "$ r5 = r11 doc value field", "r8 = new org elasticsearch search fetch subphase field and format", "specialinvoke r8 < init > r1 r2", "$ r5 add r8", "r12 = org elasticsearch search builder search source builder r0", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch search fetch fetch context r0", "$ r1 = r3 search context", "$ r2 = $ r1 searcher", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search fetch subphase highlight highlight field r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r4 = org elasticsearch search internal reader context r0", "$ r1 = r4 ref count", "$ r1 inc ref", "r5 = org elasticsearch search internal reader context r0", "specialinvoke r5 try update keep alive l0", "r6 = org elasticsearch search internal reader context r0", "$ r2 = reader context $ lambda_mark a used_2__1 bootstrap $ r6", "$ r3 = org elasticsearch core releasables release once $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org elasticsearch search lookup source lookup r0", "$ r3 = r5 source", "$ r4 = org elasticsearch common xcontent support x content map value extract value r1 $ r3 r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = new org elasticsearch search profile query query profiler", "specialinvoke r5 < init >", "r6 = org elasticsearch search profile profilers r0", "$ r3 = r6 searcher", "$ r3 set profiler r5", "r7 = org elasticsearch search profile profilers r0", "$ r4 = r7 query profilers", "$ r4 add r5", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org elasticsearch search profile profilers r0", "$ r2 = r5 query profilers", "r6 = org elasticsearch search profile profilers r0", "$ r1 = r6 query profilers", "$ i0 = $ r1 size", "$ i1 = $ i0 - 1", "$ r3 = $ r2 get $ i1", "$ r4 = org elasticsearch search profile query query profiler $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search query query search result r0", "$ z0 = r1 be null", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search query query search result r0", "$ i0 = r1 size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search rescore rescore context r0", "$ r1 = r2 rescorer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org elasticsearch search search shard target r0", "$ r1 = r4 cluster alias", "r5 = org elasticsearch search search shard target r0", "$ r2 = r5 get index", "$ r3 = org elasticsearch transport remote cluster aware build remote index name $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search sort geo distance sort builder r0", "$ r1 = r2 nest path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search sort script sort builder r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search suggest phrase direct candidate generator builder r0", "$ r1 = r2 suggest mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search suggest phrase direct candidate generator builder r0", "$ r1 = r2 max edit", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search suggest phrase direct candidate generator builder r0", "$ r1 = r2 min word length", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch search suggest phrase phrase suggestion builder r0", "$ f0 = r2 max error", "$ r1 = java lang float value of $ f0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch search suggest suggest builder r0", "r2 global text = r1", "r3 = org elasticsearch search suggest suggest builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch search suggest term term suggestion builder r0", "$ i0 = r1 max inspection", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r9 = r0 custom \\ `` snapshots\\ ``", "r2 = org elasticsearch cluster snapshot in progress $ r9", "if r2 ! = null goto label1", "$ r19 = java util collection empty set", "return $ r19", "if r2 ! = null goto label1", "label $ r10 = new java util hash set", "specialinvoke $ r10 < init >", "$ r11 = r2 entry", "r4 = $ r11 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label6", "$ r12 = r4 next", "r5 = org elasticsearch cluster snapshot in progress $ entry $ r12", "$ z1 = r5 partial", "if $ z1 ! = 0 goto label5", "$ z2 = r5 be clone", "if $ z2 ! = 0 goto label5", "$ r13 = r5 index", "$ r14 = $ r13 key set", "r6 = $ r14 iterator", "label $ z3 = r6 have next", "if $ z3 == 0 goto label5", "$ r15 = r6 next", "r7 = java lang string $ r15", "$ r16 = r0 metadata", "r8 = $ r16 index r7", "if r8 == null goto label4", "$ r17 = r8 get index", "$ z4 = r1 contain $ r17", "if $ z4 == 0 goto label4", "$ r18 = r8 get index", "$ r10 add $ r18", "label goto label3", "if $ z3 == 0 goto label5", "label goto label2", "if $ z0 == 0 goto label6", "label return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch task task manager r0", "$ r1 = r2 ban parent", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 write to r1", "r3 = org elasticsearch transport bytes transport request r0", "$ r2 = r3 bytes", "$ i0 = $ r2 length", "r1 write v int $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch transport cluster connection manager r0", "$ r1 = r2 connect node", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 length", "if $ i0 > = 6 goto label1", "return -1", "if $ i0 > = 6 goto label1", "label $ i1 = org elasticsearch transport tcp transport read header buffer r0", "return $ i1"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org elasticsearch transport transport action proxy $ proxy request", "if $ z0 == 0 goto label1", "$ r1 = org elasticsearch transport transport action proxy $ proxy request r0", "$ r2 = $ r1 wrap", "return $ r2", "if $ z0 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org elasticsearch transport transport action proxy $ proxy request", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r5 = org elasticsearch transport transport service r0", "$ r1 = r5 handle incoming request", "z0 = $ r1 compare and set 0 1", "$ z1 = org elasticsearch transport transport service $ assertion disable", "if $ z1 ! = 0 goto label1", "if z0 ! = 0 goto label1", "r4 = new java lang assertion error", "specialinvoke r4 < init > \\ `` transport service be already accept incoming requests\\ ``", "throw r4", "if z0 ! = 0 goto label1", "label $ r2 = org elasticsearch transport transport service logger", "$ r2 debug \\ `` now accept incoming requests\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org elasticsearch transport transport service r0", "$ r3 = transport service $ lambda_open connection_7__9 bootstrap $ r6 r1 r2", "$ r4 = org elasticsearch action support plain action future get $ r3", "$ r5 = org elasticsearch transport transport $ connection $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org elasticsearch transport transport service r0", "$ z0 = specialinvoke r5 be local node r1", "if $ z0 == 0 goto label1", "r6 = org elasticsearch transport transport service r0", "$ r4 = r6 local node connection", "return $ r4", "if $ z0 == 0 goto label1", "label r7 = org elasticsearch transport transport service r0", "$ r2 = r7 connection manager", "$ r3 = $ r2 get connection r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch watcher abstract resource watcher r0", "$ r2 = r3 listener", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch watcher abstract resource watcher r0", "$ r2 = r3 listener", "$ r2 remove r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = i0 + 2", "r1 = newarray char [ $ i2 ]", "label i8 = 0", "label $ i3 = r0 read", "if $ i3 == -1 goto label5", "c9 = char $ i3", "if c9 ! = 10 goto label3", "goto label5", "label if i8 < = 0 goto label6", "$ i4 = lengthof r1", "if i8 > = $ i4 goto label6", "$ i5 = i8 - 1", "$ c6 = r1 [ $ i5 ]", "if $ c6 ! = 13 goto label6", "i8 = i8 + -1", "label if i8 < = i0 goto label7", "java util array fill r1 0", "$ r2 = new java lang runtime exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` input exceed maximum length of \\ ``", "$ r5 = $ r4 append i0", "$ r6 = $ r5 to string", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "label if i8 < = i0 goto label7", "label r9 = java util array copy of r1 i8", "if c9 ! = 10 goto label3", "label $ i7 = lengthof r1", "if i8 > = $ i7 goto label4", "r1 [ i8 ] = c9", "label i8 = i8 + 1", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "java util object require non null r0 \\ `` char array must not be null for constant time equals\\ ``", "java util object require non null r1 \\ `` char array must not be null for constant time equals\\ ``", "$ i1 = lengthof r0", "$ i0 = lengthof r1", "if $ i1 == $ i0 goto label1", "return 0", "if $ i1 == $ i0 goto label1", "label c6 = 0", "i7 = 0", "label $ i2 = lengthof r0", "if i7 > = $ i2 goto label3", "$ c4 = r0 [ i7 ]", "$ c3 = r1 [ i7 ]", "$ c5 = $ c4 ^ $ c3", "c6 = c6 | $ c5", "i7 = i7 + 1", "goto label2", "if i7 > = $ i2 goto label3", "label if c6 ! = 0 goto label4", "$ z0 = 1", "goto label5", "label return $ z0", "label if c6 ! = 0 goto label4", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["$ r0 = org elasticsearch core internal net net utils get extend socket option or null \\ `` tcp_keepcount\\ ``", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "r7 = @ parameter7", "$ r8 = newarray java lang object [ 8 ]", "$ r8 [ 0 ] = r0", "$ r8 [ 1 ] = r1", "$ r8 [ 2 ] = r2", "$ r8 [ 3 ] = r3", "$ r8 [ 4 ] = r4", "$ r8 [ 5 ] = r5", "$ r8 [ 6 ] = r6", "$ r8 [ 7 ] = r7", "$ r9 = org elasticsearch core map map n $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["$ r0 = org elasticsearch core path utils default", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0", "r22 = null", "$ z0 = org elasticsearch jdk java version be valid r0", "if $ z0 ! = 0 goto label1", "$ r16 = new java lang illegal argument exception", "$ r17 = new java lang string builder", "specialinvoke $ r17 < init >", "$ r18 = $ r17 append \\ `` java version string [ \\ ``", "$ r19 = $ r18 append r0", "$ r20 = $ r19 append \\ `` ] could not be parse \\ ``", "$ r21 = $ r20 to string", "specialinvoke $ r16 < init > $ r21", "throw $ r16", "if $ z0 ! = 0 goto label1", "label $ r6 = new java util array list", "specialinvoke $ r6 < init >", "r2 = r0 split \\ `` -\\ ``", "$ i1 = lengthof r2", "if $ i1 ! = 1 goto label2", "r23 = r0 split \\ `` \\\\ \\ ``", "goto label4", "label r3 = r23", "i0 = lengthof r23", "i3 = 0", "label if i3 > = i0 goto label6", "r4 = r3 [ i3 ]", "$ r15 = java lang integer value of r4", "$ r6 add $ r15", "i3 = i3 + 1", "goto label5", "label if i3 > = i0 goto label6", "label $ r14 = new org elasticsearch jdk java version", "specialinvoke $ r14 < init > $ r6 r22", "return $ r14", "if $ i1 ! = 1 goto label2", "label $ i2 = lengthof r2", "if $ i2 ! = 2 goto label3", "$ r13 = r2 [ 0 ]", "r23 = $ r13 split \\ `` \\\\ \\ ``", "r22 = r2 [ 1 ]", "if $ i2 ! = 2 goto label3", "label $ r7 = new java lang illegal argument exception", "$ r8 = new java lang string builder", "specialinvoke $ r8 < init >", "$ r9 = $ r8 append \\ `` java version string [ \\ ``", "$ r10 = $ r9 append r0", "$ r11 = $ r10 append \\ `` ] could not be parse \\ ``", "$ r12 = $ r11 to string", "specialinvoke $ r7 < init > $ r12", "throw $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "$ l2 = long i0", "l46 = 4294967295l & $ l2", "$ l3 = long i1", "l47 = 4294967295l & $ l3", "$ r0 = org elasticsearch geometry utils bit util shift", "$ s4 = $ r0 [ 4 ]", "$ l5 = l46 < < $ s4", "$ l7 = l46 | $ l5", "$ r1 = org elasticsearch geometry utils bit util magic", "$ l6 = $ r1 [ 4 ]", "l48 = $ l7 & $ l6", "$ r2 = org elasticsearch geometry utils bit util shift", "$ s8 = $ r2 [ 3 ]", "$ l9 = l48 < < $ s8", "$ l11 = l48 | $ l9", "$ r3 = org elasticsearch geometry utils bit util magic", "$ l10 = $ r3 [ 3 ]", "l49 = $ l11 & $ l10", "$ r4 = org elasticsearch geometry utils bit util shift", "$ s12 = $ r4 [ 2 ]", "$ l13 = l49 < < $ s12", "$ l15 = l49 | $ l13", "$ r5 = org elasticsearch geometry utils bit util magic", "$ l14 = $ r5 [ 2 ]", "l50 = $ l15 & $ l14", "$ r6 = org elasticsearch geometry utils bit util shift", "$ s16 = $ r6 [ 1 ]", "$ l17 = l50 < < $ s16", "$ l19 = l50 | $ l17", "$ r7 = org elasticsearch geometry utils bit util magic", "$ l18 = $ r7 [ 1 ]", "l51 = $ l19 & $ l18", "$ r8 = org elasticsearch geometry utils bit util shift", "$ s20 = $ r8 [ 0 ]", "$ l21 = l51 < < $ s20", "$ l23 = l51 | $ l21", "$ r9 = org elasticsearch geometry utils bit util magic", "$ l22 = $ r9 [ 0 ]", "l52 = $ l23 & $ l22", "$ r10 = org elasticsearch geometry utils bit util shift", "$ s24 = $ r10 [ 4 ]", "$ l25 = l47 < < $ s24", "$ l27 = l47 | $ l25", "$ r11 = org elasticsearch geometry utils bit util magic", "$ l26 = $ r11 [ 4 ]", "l53 = $ l27 & $ l26", "$ r12 = org elasticsearch geometry utils bit util shift", "$ s28 = $ r12 [ 3 ]", "$ l29 = l53 < < $ s28", "$ l31 = l53 | $ l29", "$ r13 = org elasticsearch geometry utils bit util magic", "$ l30 = $ r13 [ 3 ]", "l54 = $ l31 & $ l30", "$ r14 = org elasticsearch geometry utils bit util shift", "$ s32 = $ r14 [ 2 ]", "$ l33 = l54 < < $ s32", "$ l35 = l54 | $ l33", "$ r15 = org elasticsearch geometry utils bit util magic", "$ l34 = $ r15 [ 2 ]", "l55 = $ l35 & $ l34", "$ r16 = org elasticsearch geometry utils bit util shift", "$ s36 = $ r16 [ 1 ]", "$ l37 = l55 < < $ s36", "$ l39 = l55 | $ l37", "$ r17 = org elasticsearch geometry utils bit util magic", "$ l38 = $ r17 [ 1 ]", "l56 = $ l39 & $ l38", "$ r18 = org elasticsearch geometry utils bit util shift", "$ s40 = $ r18 [ 0 ]", "$ l41 = l56 < < $ s40", "$ l43 = l56 | $ l41", "$ r19 = org elasticsearch geometry utils bit util magic", "$ l42 = $ r19 [ 0 ]", "l57 = $ l43 & $ l42", "$ l44 = l57 < < 1", "$ l45 = $ l44 | l52", "return $ l45"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 length", "$ l1 = org elasticsearch geometry utils geohash long encode r0 $ i0", "return $ l1"], "adj": [[1], [2], [3], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ r0 = org elasticsearch geometry utils geohash string encode d0 d1 12", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = org elasticsearch geometry utils geohash precision to lat height", "$ d0 = $ r0 [ i0 ]", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client response r0", "$ r1 = r2 host", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = java util collection empty map", "r6 = org elasticsearch client rest client r0", "$ r5 = r6 perform request r1 r2 $ r4 null r3", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client request r0", "$ r1 = r2 option", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client analytics parse string stats r0", "$ i0 = r1 min length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch client asyncsearch submit async search request r0", "$ r1 = r3 search request", "$ r2 = $ r1 allow partial search result", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java lang integer value of i0", "r2 = org elasticsearch client asyncsearch submit async search request r0", "r2 batch reduce size = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org elasticsearch client asyncsearch submit async search request r0", "$ r1 = r3 search request", "$ r2 = $ r1 request cache", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client async search client r0", "$ r4 = r9 rest high level client", "$ r5 = async search client $ submit async search__6 bootstrap $", "$ r6 = async search client $ from x content__12 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client async search client r0", "$ r4 = r9 rest high level client", "$ r5 = async search client $ get async search__6 bootstrap $", "$ r6 = async search client $ from x content__8 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client ccr client r0", "$ r3 = r9 rest high level client", "$ r4 = ccr client $ pause follow__12 bootstrap $", "$ r5 = ccr client $ from x content__22 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client core acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client cluster client r0", "$ r4 = r9 rest high level client", "$ r5 = cluster client $ delete component template__10 bootstrap $", "$ r6 = cluster client $ from x content__27 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client cluster client r0", "$ r3 = r9 rest high level client", "$ r4 = cluster client $ put component template__12 bootstrap $", "$ r5 = cluster client $ from x content__24 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action support master acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client cluster client r0", "$ r3 = r9 rest high level client", "$ r4 = cluster client $ get component templates__9 bootstrap $", "$ r5 = cluster client $ from x content__16 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client index get component template response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client core broadcast response r0", "$ r1 = r2 shard", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client core count response r0", "$ l0 = r1 count", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client core term vector response r0", "$ l0 = r1 take in millis", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client graph client r0", "$ r3 = r9 rest high level client", "$ r4 = graph client $ explore__1 bootstrap $", "$ r5 = graph client $ from x content__3 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client graph graph explore response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index lifecycle client r0", "$ r4 = r9 rest high level client", "$ r5 = index lifecycle client $ start i l m__3 bootstrap $", "$ r6 = index lifecycle client $ from x content__22 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index lifecycle client r0", "$ r4 = r9 rest high level client", "$ r5 = index lifecycle client $ explain lifecycle__31 bootstrap $", "$ r6 = index lifecycle client $ from x content__41 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index lifecycle client r0", "$ r3 = r9 rest high level client", "$ r4 = index lifecycle client $ delete snapshot lifecycle policy__36 bootstrap $", "$ r5 = index lifecycle client $ from x content__40 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client core acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index lifecycle client r0", "$ r4 = r9 rest high level client", "$ r5 = index lifecycle client $ snapshot lifecycle management status__67 bootstrap $", "$ r6 = index lifecycle client $ from x content__72 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new org elasticsearch client index analyze request", "specialinvoke $ r3 < init > r0 null r1 null r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index close index request r0", "$ r1 = r2 wait for active shard", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index put component template request r0", "$ r1 = r2 cause", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index simulate index template request r0", "$ r1 = r2 index name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index simulate index template request r0", "$ r1 = r2 index template v2 request", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client index unfreeze index request r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index client r0", "$ r4 = r9 rest high level client", "$ r5 = indices client $ get data streams__5 bootstrap $", "$ r6 = index client $ from x content__17 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index client r0", "$ r3 = r9 rest high level client", "$ r4 = indices client $ index exist__99 bootstrap $", "$ r5 = index client $ convert exist response__111 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request r10 $ r4 r2 $ r5 $ r6", "$ r8 = java lang boolean $ r7", "$ z0 = $ r8 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index client r0", "$ r3 = r9 rest high level client", "$ r4 = indices client $ rollover__135 bootstrap $", "$ r5 = index client $ from x content__137 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action admin index rollover rollover response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client index client r0", "$ r4 = r9 rest high level client", "$ r5 = indices client $ index put settings__145 bootstrap $", "$ r6 = index client $ from x content__154 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client index client r0", "$ r3 = r9 rest high level client", "$ r4 = indices client $ analyze__183 bootstrap $", "$ r5 = index client $ from x content__193 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client index analyze response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ get job__5 bootstrap $", "$ r6 = machine learn client $ from x content__20 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ open job__6 bootstrap $", "$ r5 = machine learn client $ from x content__23 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml open job response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ get datafeed__59 bootstrap $", "$ r6 = machine learn client $ from x content__64 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ post data__116 bootstrap $", "$ r5 = machine learn client $ from x content__127 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml post data response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ delete calendar__134 bootstrap $", "$ r5 = machine learn client $ from x content__143 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action support master acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ update filter__164 bootstrap $", "$ r5 = machine learn client $ from x content__167 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml put filter response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ delete filter__168 bootstrap $", "$ r5 = machine learn client $ from x content__176 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action support master acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ update data frame analytics__185 bootstrap $", "$ r5 = machine learn client $ from x content__197 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml put data frame analytics response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ stop data frame analytics__200 bootstrap $", "$ r5 = machine learn client $ from x content__218 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml stop data frame analytics response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ delete data frame analytics__203 bootstrap $", "$ r6 = machine learn client $ from x content__212 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client machine learn client r0", "$ r3 = r9 rest high level client", "$ r4 = machine learn client $ evaluate data frame__202 bootstrap $", "$ r5 = machine learn client $ from x content__214 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client ml evaluate data frame response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client machine learn client r0", "$ r4 = r9 rest high level client", "$ r5 = machine learn client $ evaluate data frame__204 bootstrap $", "$ r6 = machine learn client $ from x content__213 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["$ r0 = new org elasticsearch client ml datafeed delay data check config", "$ r1 = java lang boolean value of 0", "specialinvoke $ r0 < init > $ r1 null", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch client ml delete job request r0", "r2 force = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client ml flush job response r0", "$ z0 = r1 flush", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client ml forecast job response r0", "$ z0 = r1 acknowledge", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch client ml get bucket request r0", "r2 anomaly score = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml get category response r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org elasticsearch client ml get filter request r0", "r2 from = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org elasticsearch client ml get train model request r0", "r2 allow no match = $ r1", "r3 = org elasticsearch client ml get train model request r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml node attribute r0", "$ r1 = r2 transport address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util object require non null r1 \\ `` [ job_id ] must not be null\\ ``", "$ r3 = java lang string $ r2", "r4 = org elasticsearch client ml open job request r0", "r4 job id = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util object require non null r1 \\ `` [ job_id ] must not be null\\ ``", "$ r3 = java lang string $ r2", "r4 = org elasticsearch client ml reset job request r0", "r4 job id = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client ml stop datafeed request r0", "$ r1 = r2 datafeed id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch client ml stop datafeed response r0", "$ z0 = r1 stop", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = new java util tree set", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r4 = r12 append \\ `` [ \\ ``", "$ r5 = org elasticsearch client ml update filter request add_items", "$ r6 = $ r5 get prefer name", "$ r7 = $ r4 append $ r6", "$ r8 = $ r7 append \\ `` ] must not be null\\ ``", "$ r9 = $ r8 to string", "$ r10 = java util object require non null r1 $ r9", "$ r11 = java util collection $ r10", "specialinvoke r13 < init > $ r11", "r14 = org elasticsearch client ml update filter request r0", "r14 add item = r13", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client rest high level client r0", "$ r1 = r2 ccr client", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client rest high level client r0", "$ r1 = r2 license client", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = rest high level client $ reindex__9 bootstrap $", "$ r4 = rest high level client $ from x content__19 bootstrap $", "$ r5 = java lang integer value of 409", "$ r6 = java util collection singleton $ r5", "r9 = org elasticsearch client rest high level client r0", "r10 = org elasticsearch action action request r1", "$ r7 = r9 perform request and parse entity r10 $ r3 r2 $ r4 $ r6", "$ r8 = org elasticsearch index reindex bulk by scroll response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = rest high level client $ get__37 bootstrap $", "$ r4 = rest high level client $ from x content__39 bootstrap $", "$ r5 = java lang integer value of 404", "$ r6 = java util collection singleton $ r5", "r9 = org elasticsearch client rest high level client r0", "r10 = org elasticsearch action action request r1", "$ r7 = r9 perform request and parse entity r10 $ r3 r2 $ r4 $ r6", "$ r8 = org elasticsearch action get get response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = rest high level client $ index__64 bootstrap $", "$ r5 = rest high level client $ from x content__73 bootstrap $", "$ r6 = java util collection empty set", "r8 = org elasticsearch client rest high level client r0", "r9 = org elasticsearch action action request r1", "$ r7 = r8 perform request async and parse entity r9 $ r4 r2 $ r5 r3 $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = rest high level client $ delete__71 bootstrap $", "$ r5 = rest high level client $ from x content__86 bootstrap $", "$ r6 = java lang integer value of 404", "$ r7 = java util collection singleton $ r6", "r9 = org elasticsearch client rest high level client r0", "r10 = org elasticsearch action action request r1", "$ r8 = r9 perform request async and parse entity r10 $ r4 r2 $ r5 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = rest high level client $ mterm vectors__114 bootstrap $", "$ r4 = rest high level client $ from x content__119 bootstrap $", "$ r5 = java util collection empty set", "r8 = org elasticsearch client rest high level client r0", "r9 = org elasticsearch client validatable r1", "$ r6 = r8 perform request and parse entity r9 $ r3 r2 $ r4 $ r5", "$ r7 = org elasticsearch client core multi term vector response $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org elasticsearch client security delete privilege response r0", "$ r2 = r3 privilege", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org elasticsearch client security get api key request", "specialinvoke $ r1 < init > r0 null null null 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch client security get api key request", "specialinvoke $ r2 < init > r0 r1 null null 0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client security security node response r0", "$ r1 = r2 node", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch client security user privilege abstract index privilege r0", "$ r1 = r2 privilege", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org elasticsearch client security client r0", "$ r3 = r10 rest high level client", "$ r4 = security client $ delete user__5 bootstrap $", "$ r5 = security client $ from x content__23 bootstrap $", "$ r6 = java lang integer value of 404", "$ r7 = java util collection singleton $ r6", "r11 = org elasticsearch client validatable r1", "$ r8 = $ r3 perform request and parse entity r11 $ r4 r2 $ r5 $ r7", "$ r9 = org elasticsearch client security delete user response $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org elasticsearch client security client r0", "$ z0 = r3 disable user r2 r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org elasticsearch client security client r0", "$ r2 = r9 rest high level client", "$ r3 = org elasticsearch client security authenticate request instance", "$ r4 = security client $ get request__32 bootstrap $", "$ r5 = security client $ from x content__50 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable $ r3", "$ r7 = $ r2 perform request and parse entity r10 $ r4 r1 $ r5 $ r6", "$ r8 = org elasticsearch client security authenticate response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client security client r0", "$ r4 = r9 rest high level client", "$ r5 = security client $ clear api key cache__47 bootstrap $", "$ r6 = security client $ from x content__55 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client security client r0", "$ r3 = r9 rest high level client", "$ r4 = org elasticsearch client security get ssl certificate request instance", "$ r5 = security client $ get request__59 bootstrap $", "$ r6 = security client $ from x content__79 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable $ r4", "$ r8 = $ r3 perform request async and parse entity r10 $ r5 r1 $ r6 r2 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client security client r0", "$ r4 = r9 rest high level client", "$ r5 = security client $ create token__84 bootstrap $", "$ r6 = security client $ from x content__90 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client security client r0", "$ r3 = r9 rest high level client", "$ r4 = security client $ create api key__107 bootstrap $", "$ r5 = security client $ from x content__114 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client security create api key response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client snapshot client r0", "$ r3 = r9 rest high level client", "$ r4 = snapshot client $ create repository__5 bootstrap $", "$ r5 = snapshot client $ from x content__24 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action support master acknowledge response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client snapshot client r0", "$ r4 = r9 rest high level client", "$ r5 = snapshot client $ delete repository__8 bootstrap $", "$ r6 = snapshot client $ from x content__26 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client snapshot client r0", "$ r4 = r9 rest high level client", "$ r5 = snapshot client $ get snapshots__31 bootstrap $", "$ r6 = snapshot client $ from x content__37 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client snapshot client r0", "$ r3 = r9 rest high level client", "$ r4 = snapshot client $ restore snapshot__34 bootstrap $", "$ r5 = snapshot client $ from x content__39 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch action action request r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch action admin cluster snapshot restore restore snapshot response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client text structure client r0", "$ r4 = r9 rest high level client", "$ r5 = text structure client $ find file structure__2 bootstrap $", "$ r6 = text structure client $ from x content__3 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org elasticsearch client transform client r0", "$ r3 = r9 rest high level client", "$ r4 = transform client $ get transform__1 bootstrap $", "$ r5 = transform client $ from x content__18 bootstrap $", "$ r6 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6", "$ r8 = org elasticsearch client transform get transform response $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org elasticsearch client watcher put watch request r0", "r1 active = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client watcher client r0", "$ r4 = r9 rest high level client", "$ r5 = watcher client $ deactivate watch__3 bootstrap $", "$ r6 = watcher client $ from x content__27 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org elasticsearch client watcher client r0", "$ r3 = r10 rest high level client", "$ r4 = watcher client $ delete watch__11 bootstrap $", "$ r5 = watcher client $ from x content__16 bootstrap $", "$ r6 = java lang integer value of 404", "$ r7 = java util collection singleton $ r6", "r11 = org elasticsearch client validatable r1", "$ r8 = $ r3 perform request and parse entity r11 $ r4 r2 $ r5 $ r7", "$ r9 = org elasticsearch client watcher delete watch response $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client watcher client r0", "$ r4 = r9 rest high level client", "$ r5 = watcher client $ ack watch__4 bootstrap $", "$ r6 = watcher client $ from x content__17 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r9 = org elasticsearch client x pack client r0", "$ r4 = r9 rest high level client", "$ r5 = x pack client $ info__2 bootstrap $", "$ r6 = x pack client $ from x content__8 bootstrap $", "$ r7 = java util collection empty set", "r10 = org elasticsearch client validatable r1", "$ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch common xcontent x content builder r0", "$ z0 = r1 human readable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org elasticsearch common xcontent x content builder r0", "$ r2 = r3 generator", "$ r2 write u t f8 string r1 i0 i1", "r4 = org elasticsearch common xcontent x content builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = net objecthunter exp4j operator operator r0", "$ r1 = r2 symbol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net objecthunter exp4j tokenizer number token r0", "$ d0 = r1 value", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net objecthunter exp4j validation result r0", "$ r1 = r2 error", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf expectit expect builder r0", "r2 input = r1", "r3 = net sf expectit expect builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf expectit expect builder r0", "r2 charset = r1", "r3 = net sf expectit expect builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 0 goto label1", "r2 = new java lang illegal argument exception", "specialinvoke r2 < init > \\ `` buffer size must be > 0\\ ``", "throw r2", "if i0 > 0 goto label1", "label r3 = net sf expectit expect builder r0", "r3 buffer size = i0", "r4 = net sf expectit expect builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = new net sf expectit matcher simple result", "specialinvoke r4 < init > 1 r0 r1 r2 1", "r5 = net sf expectit result r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = new net jodah failsafe util duration", "r4 = net jodah failsafe abstract execution r0", "$ l0 = r4 wait nanos", "$ r2 = java util concurrent time unit nanoseconds", "specialinvoke r3 < init > $ l0 $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r10 = net jodah failsafe async execution r0", "$ r5 = r10 future", "entermonitor $ r5", "label r11 = net jodah failsafe async execution r0", "$ z1 = r11 complete call", "if $ z1 ! = 0 goto label3", "$ z2 = specialinvoke r0 complete r1 r2 z0", "if $ z2 == 0 goto label2", "r12 = net jodah failsafe async execution r0", "$ r8 = r12 future", "r13 = net jodah failsafe async execution r0", "$ r6 = r13 config", "$ r7 = $ r6 fallback", "r14 = net jodah failsafe async execution r0", "$ z3 = r14 success", "$ r8 complete r1 r2 $ r7 $ z3", "label r15 = net jodah failsafe async execution r0", "r15 complete call = 1", "label r16 = net jodah failsafe async execution r0", "$ z4 = r16 complete", "exitmonitor $ r5", "label return $ z4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r10 = net jodah failsafe failsafe future r0", "$ z2 = r10 do", "if $ z2 == 0 goto label1", "return 0", "if $ z2 == 0 goto label1", "label r11 = net jodah failsafe failsafe future r0", "$ r1 = r11 delegate", "z1 = $ r1 cancel z0", "r9 = new java util concurrent cancellation exception", "specialinvoke r9 < init >", "r12 = net jodah failsafe failsafe future r0", "r12 failure = r9", "r13 = net jodah failsafe failsafe future r0", "r13 cancel = 1", "r14 = net jodah failsafe failsafe future r0", "$ r5 = r14 config", "r15 = net jodah failsafe failsafe future r0", "$ r4 = r15 failure", "r16 = net jodah failsafe failsafe future r0", "$ r3 = r16 execution", "$ r5 handle complete null $ r4 $ r3 0", "r17 = net jodah failsafe failsafe future r0", "$ r8 = r17 failure", "r18 = net jodah failsafe failsafe future r0", "$ r6 = r18 config", "$ r7 = $ r6 fallback", "r19 = net jodah failsafe failsafe future r0", "r19 complete null $ r8 $ r7 0", "return z1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = net jodah failsafe internal util circular bit set r0", "$ i0 = r1 negative", "$ d1 = double $ i0", "r2 = net jodah failsafe internal util circular bit set r0", "$ i1 = r2 occupy bit", "$ d0 = double $ i1", "$ d2 = $ d1 $ d0", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = net jodah failsafe retry policy r0", "$ d0 = r1 delay factor", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net jodah failsafe util duration r0", "$ r1 = r2 time unit", "r3 = net jodah failsafe util duration r0", "$ l0 = r3 length", "$ l1 = $ r1 to second $ l0", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = com sun xml fastinfoset stax event location r0", "$ i0 = r1 _char offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml fastinfoset stax event d t d event r0", "$ r1 = r2 _dtd", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml fastinfoset stax event end element event r0", "$ r1 = r2 _qname", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml fastinfoset stax event entity declaration impl r0", "$ r1 = r2 _public id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun xml fastinfoset stax event entity declaration impl r0", "$ r1 = r2 _notation name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = com sun xml fastinfoset util qualify name array r0", "$ r2 = r6 _array", "if $ r2 ! = null goto label1", "return null", "if $ r2 ! = null goto label1", "label r7 = com sun xml fastinfoset util qualify name array r0", "$ r3 = r7 _array", "$ i0 = lengthof $ r3", "r1 = newarray com sun xml fastinfoset qualify name [ $ i0 ]", "r8 = com sun xml fastinfoset util qualify name array r0", "$ r5 = r8 _array", "r9 = com sun xml fastinfoset util qualify name array r0", "$ r4 = r9 _array", "$ i1 = lengthof $ r4", "java lang system arraycopy $ r5 0 r1 0 $ i1", "return r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "i3 = 0", "label r3 = org jvnet fastinfoset sax helper encode algorithm attribute impl r0", "$ i0 = r3 _length", "if i3 > = $ i0 goto label2", "r4 = org jvnet fastinfoset sax helper encode algorithm attribute impl r0", "$ r1 = r4 _data", "$ i1 = i3 * 6", "$ i2 = $ i1 + 4", "$ r1 [ $ i2 ] = null", "r5 = org jvnet fastinfoset sax helper encode algorithm attribute impl r0", "$ r2 = r5 _algorithm data", "$ r2 [ i3 ] = null", "i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label2", "label r6 = org jvnet fastinfoset sax helper encode algorithm attribute impl r0", "r6 _length = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "i0 = @ parameter3", "i3 = 0", "label if i3 > = i0 goto label2", "r0 swap i1 i2", "i3 = i3 + 1", "i1 = i1 + 1", "i2 = i2 + 1", "goto label1", "label if i3 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["l0 = @ parameter0", "l1 = @ parameter1", "l2 = @ parameter2", "$ b3 = l1 cmp 0l", "if $ b3 > = 0 goto label1", "$ r14 = new java lang array index out of bound exception", "$ r15 = new java lang string builder", "specialinvoke $ r15 < init >", "$ r16 = $ r15 append \\ `` offset \\ ``", "$ r17 = $ r16 append l1", "$ r18 = $ r17 append \\ `` be negative\\ ``", "$ r19 = $ r18 to string", "specialinvoke $ r14 < init > $ r19", "throw $ r14", "if $ b3 > = 0 goto label1", "label $ b4 = l2 cmp 0l", "if $ b4 > = 0 goto label2", "$ r8 = new java lang illegal argument exception", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = $ r9 append \\ `` length \\ ``", "$ r11 = $ r10 append l2", "$ r12 = $ r11 append \\ `` be negative\\ ``", "$ r13 = $ r12 to string", "specialinvoke $ r8 < init > $ r13", "throw $ r8", "if $ b4 > = 0 goto label2", "label $ l5 = l1 + l2", "$ b6 = $ l5 cmp l0", "if $ b6 < = 0 goto label3", "$ r0 = new java lang array index out of bound exception", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` last index \\ ``", "$ l7 = l1 + l2", "$ r3 = $ r2 append $ l7", "$ r4 = $ r3 append \\ `` be great than big-array length \\ ``", "$ r5 = $ r4 append l0", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 to string", "specialinvoke $ r0 < init > $ r7", "throw $ r0", "if $ b6 < = 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ this", "l4 = @ parameter0", "r1 = @ parameter1", "l5 = @ parameter2", "l6 = @ parameter3", "r2 = it unimi dsi fastutil booleans abstract boolean big list r0", "r2 ensure index l4", "it unimi dsi fastutil booleans boolean big array ensure offset length r1 l5 l6", "label $ l0 = l6", "l6 = l6 - 1l", "$ b1 = $ l0 cmp 0l", "if $ b1 == 0 goto label2", "$ l2 = l4", "l4 = l4 + 1l", "$ l3 = l5", "l5 = l5 + 1l", "$ z0 = it unimi dsi fastutil booleans boolean big array get r1 $ l3", "r3 = it unimi dsi fastutil booleans abstract boolean big list r0", "r3 add $ l2 $ z0", "goto label1", "if $ b1 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = r0 goto label01", "return 0", "if r1 ! = r0 goto label01", "label $ z2 = r1 instanceof it unimi dsi fastutil booleans boolean big list", "if $ z2 == 0 goto label07", "r10 = it unimi dsi fastutil booleans abstract boolean big list r0", "r6 = r10 list iterator", "$ r5 = it unimi dsi fastutil booleans boolean big list r1", "r7 = $ r5 list iterator", "label $ z7 = r6 have next", "if $ z7 == 0 goto label03", "$ z10 = r7 have next", "if $ z10 == 0 goto label03", "z0 = r6 next boolean", "z1 = r7 next boolean", "$ i1 = java lang boolean compare z0 z1", "if $ i1 == 0 goto label02", "return $ i1", "if $ z10 == 0 goto label03", "label $ z8 = r7 have next", "if $ z8 == 0 goto label04", "$ b3 = -1", "goto label06", "label return $ b3", "if $ z8 == 0 goto label04", "label $ z9 = r6 have next", "if $ z9 == 0 goto label05", "$ b3 = 1", "if $ z9 == 0 goto label05", "label $ b3 = 0", "if $ z2 == 0 goto label07", "label r11 = it unimi dsi fastutil booleans abstract boolean big list r0", "r8 = r11 list iterator", "r9 = r1 list iterator", "label r12 = it unimi dsi fastutil big list iterator r8", "$ z3 = r12 have next", "if $ z3 == 0 goto label09", "$ z6 = r9 have next", "if $ z6 == 0 goto label09", "r13 = it unimi dsi fastutil big list iterator r8", "$ r2 = r13 next", "$ r3 = java lang comparable $ r2", "$ r4 = r9 next", "$ i0 = $ r3 compare to $ r4", "if $ i0 == 0 goto label08", "return $ i0", "if $ z6 == 0 goto label09", "label $ z4 = r9 have next", "if $ z4 == 0 goto label10", "$ b5 = -1", "goto label12", "label return $ b5", "if $ z4 == 0 goto label10", "label r14 = it unimi dsi fastutil big list iterator r8", "$ z5 = r14 have next", "if $ z5 == 0 goto label11", "$ b5 = 1", "if $ z5 == 0 goto label11", "label $ b5 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = lengthof r0", "if i0 < = $ i2 goto label1", "$ i3 = lengthof r0", "$ l4 = long $ i3", "$ l5 = 2l * $ l4", "$ l6 = java lang math min $ l5 2147483639l", "$ l7 = long i0", "$ l8 = java lang math max $ l6 $ l7", "i1 = int $ l8", "r1 = newarray boolean [ i1 ]", "$ i9 = lengthof r0", "java lang system arraycopy r0 0 r1 0 $ i9", "return r1", "if i0 < = $ i2 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ i2 = lengthof r0", "it unimi dsi fastutil array ensure from to $ i2 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "it unimi dsi fastutil booleans boolean array ensure same length r0 r1", "$ i0 = lengthof r0", "it unimi dsi fastutil booleans boolean array quick sort r0 r1 0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "it unimi dsi fastutil booleans boolean array quick sort r0 0 $ i0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label1", "$ r5 = it unimi dsi fastutil booleans boolean big array empty_big_array", "return $ r5", "if $ i0 ! = 0 goto label1", "label $ i1 = lengthof r0", "if $ i1 > 134217728 goto label2", "$ r4 = newarray boolean [ ] [ 1 ]", "$ r4 [ 0 ] = r0", "return $ r4", "if $ i1 > 134217728 goto label2", "label $ i2 = lengthof r0", "$ l3 = long $ i2", "r1 = it unimi dsi fastutil booleans boolean big array new big array $ l3", "i8 = 0", "label $ i4 = lengthof r1", "if i8 > = $ i4 goto label4", "$ l5 = it unimi dsi fastutil big array start i8", "$ i7 = int $ l5", "$ r3 = r1 [ i8 ]", "$ r2 = r1 [ i8 ]", "$ i6 = lengthof $ r2", "java lang system arraycopy r0 $ i7 $ r3 0 $ i6", "i8 = i8 + 1", "goto label3", "if i8 > = $ i4 goto label4", "label return r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "l1 = @ parameter2", "$ l2 = it unimi dsi fastutil booleans boolean big array length r0", "it unimi dsi fastutil big array ensure from to $ l2 l0 l1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new it unimi dsi fastutil booleans boolean big list iterators $ unmodifiable big list iterator", "specialinvoke r2 < init > r0", "r3 = it unimi dsi fastutil booleans boolean big list iterator r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "r1 = new it unimi dsi fastutil booleans boolean big list $ singleton", "specialinvoke r1 < init > z0 null", "r2 = it unimi dsi fastutil booleans boolean big list r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = it unimi dsi fastutil bytes abstract byte2 boolean function r0", "$ z0 = r1 def ret value", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = it unimi dsi fastutil bytes byte2 boolean open custom hash map r0", "$ r1 = r2 strategy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "b1 = @ parameter1", "r2 = it unimi dsi fastutil bytes byte2 byte a v l tree map r0", "r1 = specialinvoke r2 add b0", "b2 = r1 value", "$ b3 = r1 value", "$ i4 = $ b3 + b1", "$ b5 = byte $ i4", "r1 value = $ b5", "return b2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = it unimi dsi fastutil bytes byte array front cod list r0", "r1 ensure restrict index i0", "r2 = it unimi dsi fastutil bytes byte array front cod list r0", "$ i1 = specialinvoke r2 length i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > = 0 goto label1", "r18 = new java lang index out of bound exception", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r13 = r17 append \\ `` index \\ ``", "$ r14 = $ r13 append i0", "$ r15 = $ r14 append \\ `` be negative\\ ``", "$ r16 = $ r15 to string", "specialinvoke r18 < init > $ r16", "throw r18", "if i0 > = 0 goto label1", "label r21 = it unimi dsi fastutil bytes byte array indirect priority queue r0", "$ r1 = r21 ref array", "$ i1 = lengthof $ r1", "if i0 < $ i1 goto label2", "r20 = new java lang index out of bound exception", "r19 = new java lang string builder", "specialinvoke r19 < init >", "$ r4 = r19 append \\ `` index \\ ``", "$ r5 = $ r4 append i0", "$ r6 = $ r5 append \\ `` be large than or equal to reference array size \\ ``", "r22 = it unimi dsi fastutil bytes byte array indirect priority queue r0", "$ r7 = r22 ref array", "$ i2 = lengthof $ r7", "$ r8 = $ r6 append $ i2", "$ r9 = $ r8 append \\ `` \\ ``", "$ r10 = $ r9 to string", "specialinvoke r20 < init > $ r10", "throw r20", "if i0 < $ i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], []]}
{"nodes": ["r0 = @ parameter0", "b0 = @ parameter1", "r1 = @ parameter2", "$ i1 = lengthof r0", "$ i2 = it unimi dsi fastutil bytes byte array binary search r0 0 $ i1 b0 r1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "$ i0 = lengthof r0", "it unimi dsi fastutil bytes byte array radix sort indirect r0 r1 0 $ i0 z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "it unimi dsi fastutil bytes byte array radix sort r0 0 $ i0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ l0 = it unimi dsi fastutil bytes byte big array length r0", "it unimi dsi fastutil bytes byte big array radix sort r0 0l $ l0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["b0 = @ parameter0", "b1 = @ parameter1", "r1 = new it unimi dsi fastutil bytes byte iterators $ interval iterator", "specialinvoke r1 < init > b0 b1", "r2 = it unimi dsi fastutil bytes byte list iterator r1", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new it unimi dsi fastutil bytes byte priority queue $ synchronize priority queue", "specialinvoke r3 < init > r0 r1", "r4 = it unimi dsi fastutil bytes byte priority queue r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i3 = @ parameter0", "$ i0 = i3 > > > 16", "i4 = i3 ^ $ i0", "i5 = i4 * -2048144789", "$ i1 = i5 > > > 13", "i6 = i5 ^ $ i1", "i7 = i6 * -1028477387", "$ i2 = i7 > > > 16", "i8 = i7 ^ $ i2", "return i8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new it unimi dsi fastutil indirect priority queue $ synchronized indirect priority queue", "specialinvoke r2 < init > r0", "r3 = it unimi dsi fastutil indirect priority queue r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "it unimi dsi fastutil booleans boolean array ensure offset length r0 i0 i1", "i3 = 0", "label if i3 > = i1 goto label2", "$ i2 = i0 + i3", "$ z0 = r0 [ $ i2 ]", "r1 write boolean $ z0", "i3 = i3 + 1", "goto label1", "label if i3 > = i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ parameter0", "r9 = new java io file input stream", "specialinvoke r9 < init > r0", "$ r6 = r9 get channel", "l0 = $ r6 size", "r2 = it unimi dsi fastutil booleans boolean big array new big array l0", "r11 = new java io data input stream", "r10 = new it unimi dsi fastutil io fast buffer input stream", "specialinvoke r10 < init > r9", "r12 = java io input stream r10", "specialinvoke r11 < init > r12", "i3 = 0", "label $ i2 = lengthof r2", "if i3 > = $ i2 goto label4", "r4 = r2 [ i3 ]", "i1 = lengthof r4", "i4 = 0", "label if i4 > = i1 goto label3", "$ z0 = r11 read boolean", "r4 [ i4 ] = $ z0", "i4 = i4 + 1", "goto label2", "label if i4 > = i1 goto label3", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i2 goto label4", "label r11 close", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "$ z0 = r0 [ i1 ]", "r1 write boolean $ z0", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "it unimi dsi fastutil bytes byte array ensure offset length r1 i0 i1", "i4 = 0", "label i4 = 0", "label if i4 > = i1 goto label3", "$ i2 = i4 + i0", "$ b3 = r0 read byte", "r1 [ $ i2 ] = $ b3", "i4 = i4 + 1", "goto label2", "label if i4 > = i1 goto label3", "label goto label5", "label return i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["$ r0 = it unimi dsi fastutil object object big list empty_big_list", "r1 = it unimi dsi fastutil object object big list $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = it unimi dsi fastutil object object set empty_set", "r1 = it unimi dsi fastutil object object set $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache fontbox cmap c map r0", "$ r2 = r5 unicode to byte code", "$ r3 = $ r2 get r1", "$ r4 = byte [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r16 = info ganglion gmetric4j g monitor r0", "$ r3 = r16 scheduler", "$ r3 on start", "$ r5 = info ganglion gmetric4j g monitor log", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r6 = r15 append \\ `` set up \\ ``", "r17 = info ganglion gmetric4j g monitor r0", "$ r7 = r17 sampler", "$ i0 = $ r7 size", "$ r8 = $ r6 append $ i0", "$ r9 = $ r8 append \\ `` samplers\\ ``", "$ r10 = $ r9 to string", "$ r5 info $ r10", "r18 = info ganglion gmetric4j g monitor r0", "$ r11 = r18 sampler", "r1 = $ r11 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r12 = r1 next", "r2 = info ganglion gmetric4j g sampler $ r12", "r19 = info ganglion gmetric4j g monitor r0", "$ r13 = r19 scheduler", "$ i1 = r2 get initial delay", "$ l2 = long $ i1", "$ i3 = r2 get delay", "$ l4 = long $ i3", "$ r14 = java util concurrent time unit second", "r20 = java lang runnable r2", "$ r13 schedule at fixed rate r20 $ l2 $ l4 $ r14", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = info ganglion gmetric4j g monitor r0", "$ r2 = r6 sampler", "$ r2 add r1", "r5 = new info ganglion gmetric4j gmetric g metric publisher", "r7 = info ganglion gmetric4j g monitor r0", "$ r4 = r7 gmetric", "specialinvoke r5 < init > $ r4", "r8 = info ganglion gmetric4j publisher r5", "r1 set publisher r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = com google common collect immutable set builder", "r9 = com netflix governator configuration configuration key r0", "$ r4 = r9 part", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = com netflix governator configuration configuration key part $ r6", "$ z1 = r3 be variable", "if $ z1 == 0 goto label2", "$ r7 = r3 get value", "r1 add $ r7", "label goto label1", "if $ z0 == 0 goto label3", "label $ r5 = r1 build", "r10 = java util collection $ r5", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r4 = com netflix governator guice bootstrap binder r0", "$ r1 = r4 binder", "$ r2 = com google inject multibindings multibinder new set binder $ r1 class \\ `` lcom netflix governator guice post injector action \\ ``", "$ r3 = $ r2 add bind", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r4 = com netflix governator guice lifecycle injector r0", "$ r3 = r4 create child injector $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = com google common collect list new array list", "r3 = com netflix governator guice lifecycle injector r0", "$ r2 = r3 create injector $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new com netflix governator guice serviceloader service loader module $ service binder impl", "specialinvoke r5 < init > r1", "r6 = com netflix governator guice serviceloader service loader module r0", "$ r4 = r6 binder", "$ r4 add r5", "r7 = com netflix governator guice serviceloader service loader module $ service binder r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = com netflix governator lifecycle lifecycle manager r0", "$ r1 = r3 listener", "$ r2 = java util array a list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r14 = new java util array list", "specialinvoke r14 < init >", "$ r8 = com google inject stage tool", "$ r6 = newarray com google inject module [ 1 ]", "r15 = com netflix governator injector builder r0", "$ r7 = r15 module", "$ r6 [ 0 ] = $ r7", "$ r9 = com google inject spi element get element $ r8 $ r6", "r3 = $ r9 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r11 = r3 next", "r4 = com google inject spi element $ r11", "$ r12 = r4 accept visitor r1", "$ r13 = java lang boolean $ r12", "$ z1 = $ r13 boolean value", "if $ z1 == 0 goto label2", "r14 add r4", "label goto label1", "if $ z0 == 0 goto label3", "label $ r10 = com google inject spi element get module r14", "r16 = com netflix governator injector builder r0", "r16 module = $ r10", "r17 = com netflix governator injector builder r0", "return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r3 = new com netflix governator visitor be not static injection visitor", "specialinvoke r3 < init >", "r4 = com netflix governator injector builder r0", "r5 = com google inject spi element visitor r3", "$ r2 = r4 filter r5", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r10 = com netflix governator internal pre destroy monitor r0", "$ r4 = r10 scope cleaner", "$ z0 = $ r4 be run", "if $ z0 == 0 goto label1", "r9 = new com netflix governator internal pre destroy monitor $ manage instance scoping visitor", "$ r6 = r2 get source", "r11 = com netflix governator internal pre destroy monitor r0", "specialinvoke r9 < init > r11 r1 $ r6 r3 null", "r12 = com google inject spi bind scoping visitor r9", "$ r7 = r2 accept scoping visitor r12", "$ r8 = java lang boolean $ r7", "$ z1 = $ r8 boolean value", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = ai grakn concept attribute type $ data type supported_types", "$ r3 = $ r2 key set", "$ r4 = $ r3 stream", "$ r5 = java util stream collector join \\", "$ r6 = $ r4 collect $ r5", "r1 = java lang string $ r6", "$ r8 = ai grakn util error message invalid_datatype", "$ r7 = newarray java lang object [ 2 ]", "$ r9 = r0 get class", "$ r10 = $ r9 get name", "$ r7 [ 0 ] = $ r10", "$ r7 [ 1 ] = r1", "$ r11 = $ r8 get message $ r7", "$ r12 = ai grakn exception grakn tx operation exception create $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` unknown type of transaction [ \\ ``", "$ r3 = $ r2 append r0", "$ r4 = $ r3 append \\ `` ] \\ ``", "$ r5 = $ r4 to string", "$ r6 = ai grakn exception grakn tx operation exception create $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = ai grakn util error message transaction_read_only", "$ r1 = newarray java lang object [ 1 ]", "$ r3 = r0 keyspace", "$ r1 [ 0 ] = $ r3", "$ r4 = $ r2 get message $ r1", "$ r5 = ai grakn exception grakn tx operation exception create $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["$ r1 = ai grakn util error message schema_locked", "$ r0 = newarray java lang object [ 0 ]", "$ r2 = $ r1 get message $ r0", "$ r3 = ai grakn exception grakn tx operation exception create $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = ai grakn graql graql var r0", "$ r2 = ai grakn graql internal query aggregate aggregate median $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = ai grakn graql graql var r0", "$ r2 = ai grakn graql internal query aggregate aggregate std $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r6 = new ai grakn graql internal reasoner query reasoner query impl", "specialinvoke r6 < init > r0 r1", "r2 = r6 infer type", "$ z0 = r2 be atomic", "if $ z0 == 0 goto label1", "r7 = new ai grakn graql internal reasoner query reasoner atomic query", "$ r5 = r7", "$ r4 = r2 get atom", "specialinvoke r7 < init > $ r4 r1", "goto label2", "label r8 = ai grakn graql internal reasoner query reasoner query impl $ r5", "return r8", "if $ z0 == 0 goto label1", "label $ r5 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r6 = new ai grakn graql internal reasoner query reasoner query impl", "specialinvoke r6 < init > r0 r1", "r2 = r6 infer type", "$ z0 = r2 be atomic", "if $ z0 == 0 goto label1", "r7 = new ai grakn graql internal reasoner query reasoner atomic query", "$ r5 = r7", "$ r4 = r2 get atom", "specialinvoke r7 < init > $ r4 r1", "goto label2", "label r8 = ai grakn graql internal reasoner query reasoner query impl $ r5", "return r8", "if $ z0 == 0 goto label1", "label $ r5 = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r2 = ai grakn graql internal reasoner query reasoner query impl r0", "r1 = ai grakn graql internal reasoner rule rule utils get dependent rule r2", "$ z0 = ai grakn graql internal reasoner rule rule utils sub graph be cyclical r1", "if $ z0 ! = 0 goto label1", "$ z1 = ai grakn graql internal reasoner rule rule utils sub graph have rule with head satisfy body r1", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = ai grakn graql internal template scope r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = ai grakn kb internal cache tx rule cache r0", "$ r1 = r3 rule map", "$ r1 clear", "r4 = ai grakn kb internal cache tx rule cache r0", "$ r2 = r4 rule conversion map", "$ r2 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 sup", "$ r2 = ai grakn concept attribute type $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new ai grakn matcher grakn matcher $ 4", "$ r2 = org hamcrest matcher have item r0", "specialinvoke r3 < init > $ r2", "r4 = org hamcrest matcher r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new org apache tinkerpop gremlin jsr223 binding gremlin plugin $ builder", "specialinvoke $ r0 < init > null", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if null ! = r1 goto label1", "r7 = new java lang illegal argument exception", "specialinvoke r7 < init > \\ `` key may not be null\\ ``", "throw r7", "if null ! = r1 goto label1", "label $ z0 = r1 be empty", "if $ z0 == 0 goto label2", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` key may not be empty\\ ``", "throw r8", "if $ z0 == 0 goto label2", "label r9 = org apache tinkerpop gremlin jsr223 default gremlin script engine manager r0", "$ r3 = r9 global scope", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r14 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r2 = r14 a admin", "$ r3 = $ r2 get bytecode", "$ r4 = newarray java lang object [ 2 ]", "$ r4 [ 0 ] = r1", "$ r5 = java lang long value of l0", "$ r4 [ 1 ] = $ r5", "$ r3 add step \\ `` limit\\", "r15 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r6 = r15 a admin", "$ r7 = org apache tinkerpop gremlin process traversal scope global", "$ z0 = r1 equal $ r7", "if $ z0 == 0 goto label1", "r12 = new org apache tinkerpop gremlin process traversal step filter range global step", "$ r11 = r12", "r16 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r10 = r16 a admin", "r17 = org apache tinkerpop gremlin process traversal traversal $ admin $ r10", "specialinvoke r12 < init > r17 0l l0", "goto label2", "label r20 = org apache tinkerpop gremlin process traversal step $ r11", "$ r9 = $ r6 add step r20", "r21 = org apache tinkerpop gremlin process traversal dsl graph graph traversal $ r9", "return r21", "if $ z0 == 0 goto label1", "label r13 = new org apache tinkerpop gremlin process traversal step map range local step", "$ r11 = r13", "r18 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0", "$ r8 = r18 a admin", "r19 = org apache tinkerpop gremlin process traversal traversal $ admin $ r8", "specialinvoke r13 < init > r19 0l l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org apache tinkerpop gremlin process traversal p", "$ r2 = org apache tinkerpop gremlin process traversal compare lte", "r4 = java util function bi predicate $ r2", "specialinvoke r3 < init > r4 r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tinkerpop gremlin process traversal path r0", "$ r1 = r3 object", "r4 = org apache tinkerpop gremlin process traversal path r0", "$ i0 = r4 size", "$ i1 = $ i0 - 1", "$ r2 = $ r1 get $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache tinkerpop gremlin process traversal pop mixed", "if $ r3 ! = r1 goto label1", "r15 = org apache tinkerpop gremlin process traversal path r0", "$ r11 = r15 get r2", "return $ r11", "if $ r3 ! = r1 goto label1", "label $ r4 = org apache tinkerpop gremlin process traversal pop all", "if $ r4 ! = r1 goto label4", "r16 = org apache tinkerpop gremlin process traversal path r0", "$ z1 = r16 have label r2", "if $ z1 == 0 goto label3", "r17 = org apache tinkerpop gremlin process traversal path r0", "r12 = r17 get r2", "$ z2 = r12 instanceof java util list", "if $ z2 == 0 goto label2", "return r12", "if $ z2 == 0 goto label2", "label $ r10 = java util collection singleton list r12", "return $ r10", "if $ z1 == 0 goto label3", "label $ r9 = java util collection empty list", "return $ r9", "if $ r4 ! = r1 goto label4", "label r18 = org apache tinkerpop gremlin process traversal path r0", "r13 = r18 get r2", "$ z0 = r13 instanceof java util list", "if $ z0 == 0 goto label7", "$ r5 = org apache tinkerpop gremlin process traversal pop last", "if $ r5 ! = r1 goto label5", "$ r8 = java util list r13", "$ r7 = java util list r13", "$ i0 = $ r7 size", "$ i1 = $ i0 - 1", "$ r14 = $ r8 get $ i1", "goto label6", "label return $ r14", "if $ r5 ! = r1 goto label5", "label $ r6 = java util list r13", "$ r14 = $ r6 get 0", "if $ z0 == 0 goto label7", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "if r1 == null goto label2", "r4 = org apache tinkerpop gremlin process traversal step r0", "$ r2 = r4 get id", "$ r3 = r1 get id", "$ z2 = $ r2 equal $ r3", "if $ z2 == 0 goto label2", "label $ z1 = r0 equal r1", "if $ z1 == 0 goto label2", "$ z3 = 1", "goto label3", "label return $ z3", "if $ z1 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util collection empty set", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util collection empty set", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache tinkerpop gremlin process traversal traverser r0", "$ r2 = r4 path", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r5 = org apache tinkerpop gremlin process traversal util mutable metric r0", "$ z0 = r5 finalize", "if $ z0 == 0 goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` metric have be finalize and can not be modified\\ ``", "throw r4", "if $ z0 == 0 goto label1", "label $ r2 = java util concurrent time unit nanoseconds", "$ l1 = $ r2 convert l0 r1", "r6 = org apache tinkerpop gremlin process traversal util mutable metric r0", "r6 duration n = $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache tinkerpop gremlin structure direction out", "r5 = org apache tinkerpop gremlin structure edge r0", "$ r2 = r5 vertex $ r1", "$ r3 = $ r2 next", "$ r4 = org apache tinkerpop gremlin structure vertex $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org apache tinkerpop gremlin structure io graphson graph s o n version v3_0", "$ r1 = org apache tinkerpop gremlin structure io graphson graph s o n io build $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache tinkerpop gremlin structure io graphson graph s o n writer r0", "r3 write vertex r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache tinkerpop gremlin structure io graphson graph s o n writer r0", "$ r3 = r4 mapper", "$ r3 write value r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "z1 = @ parameter2", "r1 = @ parameter3", "$ r3 = new java util array list", "specialinvoke $ r3 < init >", "if z0 == 0 goto label1", "$ r10 = org apache tinkerpop gremlin structure t id", "$ r3 add $ r10", "$ r11 = r0 id", "$ r3 add $ r11", "label if z1 == 0 goto label2", "$ r8 = org apache tinkerpop gremlin structure t label", "$ r3 add $ r8", "$ r9 = r0 label", "$ r3 add $ r9", "label $ r4 = r0 key", "$ r5 = element helper $ lambda_get properties_8__10 bootstrap $ r1 $ r3 r0", "$ r4 for each $ r5", "$ i0 = $ r3 size", "$ r6 = newarray java lang object [ $ i0 ]", "$ r7 = $ r3 to array $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org apache tinkerpop gremlin groovy jsr223 gremlin groovy script engine r0", "$ r1 = r2 class map", "$ l0 = $ r1 estimate size", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org apache tinkerpop gremlin groovy jsr223 gremlin groovy script engine r0", "$ r1 = r3 class map", "$ r2 = $ r1 stats", "$ d0 = $ r2 average load penalty", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = groovy jmx builder jmx event emitter r0", "$ r1 = r2 event", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["org codehaus groovy runtime metaclass default meta class info set without custom metaclass creation handle 0", "groovy lang expando meta class creation handle enable", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r8 = groovy model default table column r0", "$ r3 = r8 value model", "$ z0 = $ r3 instanceof groovy model nest value model", "if $ z0 == 0 goto label1", "r9 = groovy model default table column r0", "$ r6 = r9 value model", "r2 = groovy model nest value model $ r6", "$ r7 = r2 get source model", "$ r7 set value r1", "label r10 = groovy model default table column r0", "$ r4 = r10 value model", "$ r5 = $ r4 get value", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get init parameter \\ `` template engine\\ ``", "if r2 ! = null goto label1", "r25 = new groovy text simple template engine", "specialinvoke r25 < init >", "r29 = groovy text template engine r25", "return r29", "if r2 ! = null goto label1", "label $ r3 = java lang class for name r2", "$ r4 = $ r3 new instance", "$ r5 = groovy text template engine $ r4", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label r8 = groovy sql groovy result set extension r0", "$ r4 = r8 get result set", "$ r4 update object r1 r2", "r9 = groovy sql groovy result set extension r0", "r9 update = 1", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = groovy sql groovy result set extension r0", "i1 = r3 normalize index i0", "r4 = groovy sql groovy result set extension r0", "$ r1 = r4 get result set", "$ r2 = $ r1 get object i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r3 = groovy sql groovy result set extension r0", "i1 = r3 normalize index i0", "r4 = groovy sql groovy result set extension r0", "$ r2 = r4 get result set", "$ r2 update object i1 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = groovy sql groovy result set extension r0", "$ r4 = r12 get result set", "$ r4 move to insert row", "$ r5 = r1 entry set", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r7 = r2 next", "r3 = java util map $ entry $ r7", "r13 = groovy sql groovy result set extension r0", "$ r8 = r13 get result set", "$ r9 = r3 get key", "$ r10 = $ r9 to string", "$ r11 = r3 get value", "$ r8 update object $ r10 $ r11", "goto label1", "if $ z0 == 0 goto label2", "label r14 = groovy sql groovy result set extension r0", "$ r6 = r14 get result set", "$ r6 insert row", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r3 = groovy sql groovy result set extension r0", "$ z0 = r3 update", "if $ z0 == 0 goto label1", "r4 = groovy sql groovy result set extension r0", "$ r2 = r4 get result set", "$ r2 update row", "r5 = groovy sql groovy result set extension r0", "r5 update = 0", "label r6 = groovy sql groovy result set extension r0", "$ r1 = r6 get result set", "$ z1 = $ r1 previous", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = groovy swing impl table layout cell r0", "r1 rowspan = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = groovy ui console text editor r0", "$ r1 = r2 default family", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new groovy ui text structure syntax document filter $ lexer node", "r3 = groovy ui text structure syntax document filter r0", "specialinvoke r2 < init > r3 0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util array a list r0", "$ r2 = groovy util groovy collection min $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new groovy util node list", "specialinvoke r4 < init >", "r5 = java util list r4", "r5 add r0", "r6 = groovy util node r0", "$ r3 = specialinvoke r6 breadth first rest", "r7 = java util list r4", "r7 add all $ r3", "r8 = java util list r4", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = groovy util object graph builder r0", "$ r1 = r2 bean factory name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org codehaus groovy ant groovy r0", "r2 src file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org codehaus groovy ant groovy r0", "$ r3 = r6 log", "$ r3 debug \\ `` print result \\ ``", "r5 = new java lang string buffer", "specialinvoke r5 < init >", "r1 println r5", "r1 println", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = \\ `` 1 4\\ ``", "$ z0 = $ r2 equal r1", "if $ z0 ! = 0 goto label1", "$ r3 = \\ `` 1 5\\ ``", "$ z1 = $ r3 equal r1", "if $ z1 == 0 goto label2", "label r4 = org codehaus groovy ant groovyc r0", "r4 target bytecode = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org codehaus groovy ant groovyc r0", "r2 joint compilation = 1", "r3 = org codehaus groovy ant groovyc r0", "r3 stub dir = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy ant groovyc r0", "$ r1 = r2 stub dir", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org codehaus groovy ant groovyc r0", "r1 keep stub = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "$ r1 = java lang boolean value of z0", "r2 = org codehaus groovy ant groovydoc r0", "r2 include main for script = $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org codehaus groovy tool groovydoc gstring template groovy doc template info default_package_templates", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "$ r1 = org codehaus groovy tool groovydoc gstring template groovy doc template info default_doc_templates", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org codehaus groovy ast a s t node r0", "$ r3 = r4 meta data map", "$ r2 = r1 meta data map", "r5 = java util map $ r2", "$ r3 put all r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r11 = @ parameter0", "r14 = org codehaus groovy ast class node r0", "$ z0 = r14 be primary node", "if $ z0 == 0 goto label1", "r13 = new org codehaus groovy groovy bug error", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r3 = r12 append \\ `` tried to set a redirect for a primary class node \\ ``", "r15 = org codehaus groovy ast class node r0", "$ r4 = r15 get name", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` - > \\ ``", "$ r7 = r11 get name", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 append \\ `` \\ ``", "$ r10 = $ r9 to string", "specialinvoke r13 < init > $ r10", "r16 = java lang throwable r13", "throw r16", "if $ z0 == 0 goto label1", "label if r11 == null goto label2", "r11 = r11 redirect", "label if r11 ! = r0 goto label3", "return", "label if r11 ! = r0 goto label3", "label r17 = org codehaus groovy ast class node r0", "r17 redirect = r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org codehaus groovy ast class node r0", "$ r2 = r3 redirect", "$ r2 super class = r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy ast class helper float_ t y p e", "if r0 == $ r1 goto label1", "$ r2 = org codehaus groovy ast class helper float_ t y p e", "if r0 == $ r2 goto label1", "$ r3 = org codehaus groovy ast class helper double_ t y p e", "if r0 == $ r3 goto label1", "$ r4 = org codehaus groovy ast class helper double_ t y p e", "if r0 == $ r4 goto label1", "$ z0 = org codehaus groovy ast tool widen category be big dec category r0", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org codehaus groovy classgen asm compile stack r0", "r3 push variable scope r1", "r4 = org codehaus groovy classgen asm compile stack r0", "specialinvoke r4 init loop label r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org codehaus groovy control compiler configuration r0", "$ i0 = r1 warn level", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = \\ `` 1 4\\ ``", "$ z0 = $ r2 equal r1", "if $ z0 ! = 0 goto label1", "$ r3 = \\ `` 1 5\\ ``", "$ z1 = $ r3 equal r1", "if $ z1 == 0 goto label2", "label r4 = org codehaus groovy control compiler configuration r0", "r4 target bytecode = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org codehaus groovy control error collector r0", "r2 add error r1", "r3 = org codehaus groovy control error collector r0", "r3 fail if error", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = new java sql date", "$ r2 = org codehaus groovy runtime date groovy method plus r0 i0", "$ l1 = $ r2 get time", "specialinvoke $ r1 < init > $ l1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java text date format get date instance 3", "$ r2 = $ r1 format r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java text date format get date time instance 3 2", "$ r2 = $ r1 format r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = r0 get component i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 get component count", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r0 remove all", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = r0 get component i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus groovy tool groovydoc link argument r0", "$ r1 = r2 package", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org codehaus groovy control compiler configuration r0", "r2 disable global a s t transformation = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = new java text simple date format", "specialinvoke $ r4 < init > r1", "$ r4 set time zone r2", "$ r5 = $ r4 format r0", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r0 ! = r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = java util collection singleton list r1", "org codehaus groovy runtime default groovy method mixin r0 $ r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "r2 = r0 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label6", "r3 = r2 next", "z6 = 0", "r4 = $ r6 iterator", "label $ z3 = r4 have next", "if $ z3 == 0 goto label4", "r5 = r4 next", "$ z5 = org codehaus groovy runtime default groovy method coerce equal r3 r5", "if $ z5 == 0 goto label3", "z6 = 1", "goto label4", "label if z6 ! = 0 goto label5", "$ r6 add r3", "label goto label1", "if $ z5 == 0 goto label3", "label goto label2", "if $ z1 == 0 goto label6", "label if z0 == 0 goto label7", "r0 clear", "r0 add all $ r6", "label if z0 == 0 goto label8", "$ r7 = r0", "goto label9", "label return $ r7", "label if z0 == 0 goto label8", "label $ r7 = $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 iterator", "org codehaus groovy runtime default groovy method each with index $ r2 r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 iterator", "org codehaus groovy runtime default groovy method each with index $ r2 r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 iterator", "org codehaus groovy runtime default groovy method each with index $ r2 r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 iterator", "org codehaus groovy runtime default groovy method each $ r2 r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 iterator", "org codehaus groovy runtime default groovy method each $ r2 r1", "return r0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r5 = new org codehaus groovy runtime reverse list iterator", "$ r3 = java util array a list r0", "specialinvoke r5 < init > $ r3", "r6 = java util iterator r5", "org codehaus groovy runtime default groovy method each r6 r1", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new org codehaus groovy runtime callsite boolean return method invoker", "specialinvoke $ r3 < init >", "r2 = org codehaus groovy runtime invoker helper a iterator r0", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r4 = r2 next", "$ z1 = $ r3 convert to boolean $ r4", "if $ z1 ! = 0 goto label1", "return 0", "if $ z0 == 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = new org codehaus groovy runtime callsite boolean closure wrapper", "specialinvoke $ r4 < init > r1", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r5 = newarray java lang object [ 1 ]", "$ r6 = r3 next", "$ r5 [ 0 ] = $ r6", "$ z1 = $ r4 call $ r5", "if $ z1 == 0 goto label1", "return 1", "if $ z0 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = groovy lang closure identity", "$ r2 = org codehaus groovy runtime default groovy method grep r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org codehaus groovy runtime default groovy method find result r0 r2", "if r3 ! = null goto label1", "return r1", "if r3 ! = null goto label1", "label return r3"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = groovy lang closure identity", "$ r2 = org codehaus groovy runtime default groovy method find all r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r6 = new java util link hash map", "specialinvoke $ r6 < init >", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "r4 = r3 next", "r5 = r1 call r4", "org codehaus groovy runtime default groovy method group answer $ r6 r4 r5", "goto label1", "if $ z0 == 0 goto label2", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "r6 = r1", "r2 = newarray java lang object [ 1 ]", "r3 = r0 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label3", "r4 = r3 next", "r2 [ 0 ] = r4", "if z0 == 0 goto label2", "r6 = r2 [ 0 ]", "z0 = 0", "goto label1", "if z0 == 0 goto label2", "label r5 = org codehaus groovy runtime invoker helper get meta class r6", "r6 = r5 invoke method r6 \\ `` plus\\", "if $ z1 == 0 goto label3", "label return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = groovy util groovy collection max r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = r1 get maximum number of parameter", "if i0 == 1 goto label1", "r9 = new groovy util closure comparator", "specialinvoke r9 < init > r1", "r10 = java util comparator r9", "$ r6 = org codehaus groovy runtime default groovy method max r0 r10", "return $ r6", "if i0 == 1 goto label1", "label z2 = 1", "r7 = null", "r8 = null", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label5", "r3 = r2 next", "r4 = r1 call r3", "if z2 == 0 goto label3", "z2 = 0", "r7 = r3", "r8 = r4", "goto label4", "label goto label2", "if z2 == 0 goto label3", "label $ z1 = org codehaus groovy runtime script bytecode adapter compare less than r8 r4", "if $ z1 == 0 goto label4", "if $ z0 == 0 goto label5", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java util collection unmodifiable collection r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = lengthof r0", "if $ i1 > i0 goto label1", "$ r1 = org codehaus groovy runtime default groovy method create similar array r0 0", "return $ r1", "if $ i1 > i0 goto label1", "label if i0 > 0 goto label2", "$ i6 = lengthof r0", "r2 = org codehaus groovy runtime default groovy method create similar array r0 $ i6", "$ i7 = lengthof r0", "java lang system arraycopy r0 0 r2 0 $ i7", "return r2", "label if i0 > 0 goto label2", "label $ i2 = lengthof r0", "$ i3 = $ i2 - i0", "r3 = org codehaus groovy runtime default groovy method create similar array r0 $ i3", "$ i4 = lengthof r0", "$ i5 = $ i4 - i0", "java lang system arraycopy r0 0 r3 0 $ i5", "return r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "if null ! = r0 goto label1", "return 0", "if null ! = r0 goto label1", "label $ i0 = lengthof r0", "if $ i0 < = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if null ! = r0 goto label1", "return 0", "if null ! = r0 goto label1", "label $ i0 = lengthof r0", "if $ i0 < = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if null ! = r0 goto label1", "return 0", "if null ! = r0 goto label1", "label $ i0 = lengthof r0", "if $ i0 < = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if null ! = r0 goto label1", "return 0", "if null ! = r0 goto label1", "label $ i0 = lengthof r0", "if $ i0 < = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "if null ! = r0 goto label1", "return 0", "if null ! = r0 goto label1", "label $ i0 = lengthof r0", "if $ i0 < = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r1 be interface", "if $ z0 == 0 goto label2", "$ z1 = r1 be instance r0", "if $ z1 ! = 0 goto label2", "$ z2 = org codehaus groovy transform trait trait be trait r1", "if $ z2 == 0 goto label1", "r24 = org codehaus groovy reflection stdclasses cache s a m class get s a m method r1", "if r24 == null goto label1", "$ r7 = r24 get name", "r25 = java util collection singleton map $ r7 r0", "$ r8 = groovy util proxy generator instance", "$ r9 = java util collection singleton list r1", "$ r10 = $ r8 instantiate aggregate r25 $ r9", "return $ r10", "if r24 == null goto label1", "label $ r3 = r1 get class loader", "$ r4 = newarray java lang class [ 1 ]", "$ r4 [ 0 ] = r1", "r28 = new org codehaus groovy runtime convert closure", "specialinvoke r28 < init > r0", "r31 = java lang reflect invocation handler r28", "$ r6 = java lang reflect proxy new proxy instance $ r3 $ r4 r31", "return $ r6", "if $ z1 ! = 0 goto label2", "label $ r2 = org codehaus groovy runtime default groovy method a type r0 r1", "label return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if z0 ! = 0 goto label1", "r8 = new org codehaus groovy runtime reverse list iterator", "$ r4 = java util array a list r0", "specialinvoke r8 < init > $ r4", "r9 = java util iterator r8", "$ r5 = org codehaus groovy runtime default groovy method to list r9", "$ r6 = $ r5 to array", "$ r7 = java lang object [ ] $ r6", "return $ r7", "if z0 ! = 0 goto label1", "label r1 = java util array a list r0", "java util collection reverse r1", "$ r2 = r1 to array", "$ i0 = r1 size", "java lang system arraycopy $ r2 0 r0 0 $ i0", "return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime string groovy method plus r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime string groovy method plus r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime default groovy method a collection r0", "$ r3 = org codehaus groovy runtime default groovy method a collection r1", "$ r4 = org codehaus groovy runtime default groovy method intersect $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label3", "if r1 ! = null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r1 ! = null goto label1", "label $ z0 = 0", "if r0 ! = null goto label3", "label if r1 ! = null goto label4", "return 0", "label if r1 ! = null goto label4", "label if r0 ! = r1 goto label5", "return 1", "label if r0 ! = r1 goto label5", "label $ i1 = lengthof r0", "$ i0 = lengthof r1", "if $ i1 == $ i0 goto label6", "label i5 = 0", "label $ i2 = lengthof r0", "if i5 > = $ i2 goto label9", "$ i4 = r0 [ i5 ]", "$ i3 = r1 [ i5 ]", "if $ i4 == $ i3 goto label8", "label i5 = i5 + 1", "goto label7", "if i5 > = $ i2 goto label9", "label return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime string groovy method minus r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime default groovy method to list r0", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "$ r3 = org codehaus groovy runtime default groovy method flatten $ r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i2 = r0 length", "i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2", "$ z0 = r0 get i1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = java lang reflect array get length r0", "$ i2 = org codehaus groovy runtime default groovy method normalise index i0 $ i1", "$ r1 = java lang reflect array get r0 $ i2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime invoker helper to string r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime string groovy method plus r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime string groovy method minus r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org codehaus groovy runtime string groovy method multiply r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = r1 int value", "if $ i0 < 0 goto label2", "$ i2 = r0 int value", "$ l3 = long $ i2", "$ r5 = java math big integer value of $ l3", "$ i4 = r1 int value", "r2 = $ r5 pow $ i4", "$ r6 = org codehaus groovy runtime default groovy method bi_int_min", "$ i5 = r2 compare to $ r6", "if $ i5 < 0 goto label1", "$ r7 = org codehaus groovy runtime default groovy method bi_int_max", "$ i6 = r2 compare to $ r7", "if $ i6 > 0 goto label1", "$ i7 = r2 int value", "$ r8 = java lang integer value of $ i7", "return $ r8", "if $ i6 > 0 goto label1", "label return r2", "if $ i0 < 0 goto label2", "label $ i1 = r1 int value", "$ d0 = double $ i1", "$ r3 = java lang double value of $ d0", "$ r4 = org codehaus groovy runtime default groovy method power r0 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ c0 = r0 char value", "$ r2 = java lang integer value of $ c0", "$ r3 = org codehaus groovy runtime default groovy method div $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 boolean value", "if $ z0 == 0 goto label1", "$ z1 = r1 boolean value", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label $ r2 = java lang boolean value of $ z2", "return $ r2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], []]}
{"nodes": ["d0 = @ parameter0", "r0 = @ parameter1", "r1 = @ parameter2", "d1 = r0 double value", "$ b0 = d0 cmpg d1", "if $ b0 > 0 goto label3", "d2 = d0", "label $ b1 = d2 cmpg d1", "if $ b1 > 0 goto label2", "$ r10 = java lang double value of d2", "r1 call $ r10", "d2 = d2 + 1 0", "goto label1", "if $ b1 > 0 goto label2", "label goto label4", "label return", "if $ b0 > 0 goto label3", "label r13 = new groovy lang groovy runtime exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r4 = r12 append \\ `` the argument \\ ``", "$ r5 = $ r4 append r0", "$ r6 = $ r5 append \\ `` to upto can not be less than the value \\ ``", "$ r7 = $ r6 append d0", "$ r8 = $ r7 append \\ `` it\\ 's call on \\ ``", "$ r9 = $ r8 to string", "specialinvoke r13 < init > $ r9", "r14 = java lang throwable r13", "throw r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org codehaus groovy runtime string groovy method to integer r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 boolean value", "if $ z0 == 0 goto label1", "$ z1 = r1 boolean value", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label $ r2 = java lang boolean value of $ z2", "return $ r2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 instanceof org codehaus groovy runtime handle meta class", "if $ z0 == 0 goto label1", "$ r1 = org codehaus groovy runtime handle meta class r2", "r2 = $ r1 get adaptee", "label r0 set meta class r2", "org codehaus groovy runtime default groovy method disable primitive optimization r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new java util array list", "specialinvoke $ r3 < init >", "java util collection add all $ r3 r1", "$ r4 = groovy util proxy generator instance", "$ r5 = $ r4 instantiate delegate $ r3 r0", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 remove r1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java text simple date format", "$ r3 = java util locale u", "specialinvoke $ r2 < init > \\ `` eee mmm dd h hmmss zzz yyyy\\", "$ r4 = $ r2 parse r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = groovy text template execution exception r0", "$ i0 = r1 line number", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = io grpc context r0", "$ r1 = r3 cancellable ancestor", "if $ r1 ! = null goto label1", "return 0", "if $ r1 ! = null goto label1", "label r4 = io grpc context r0", "$ r2 = r4 cancellable ancestor", "$ z0 = $ r2 be cancel", "return $ z0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = io grpc deadline r0", "$ r2 = r4 ticker", "l0 = $ r2 read", "r5 = io grpc deadline r0", "$ z0 = r5 expire", "if $ z0 ! = 0 goto label1", "r6 = io grpc deadline r0", "$ l1 = r6 deadline nanos", "$ l2 = $ l1 - l0", "$ b3 = $ l2 cmp 0l", "if $ b3 > 0 goto label1", "r7 = io grpc deadline r0", "r7 expire = 1", "label r8 = io grpc deadline r0", "$ l4 = r8 deadline nanos", "$ l5 = $ l4 - l0", "$ r3 = java util concurrent time unit nanoseconds", "$ l6 = r1 convert $ l5 $ r3", "return $ l6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new io grpc call option", "r5 = io grpc call option r0", "specialinvoke r4 < init > r5", "r4 authority = r1", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = io grpc compressor registry default_instance", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = io grpc internal abstract stream r0", "$ r1 = r2 transport state", "io grpc internal abstract stream $ transport state access $ 100 $ r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = io grpc internal channelz r0", "$ r3 = r11 per server socket", "r12 = io grpc internal with log id r1", "$ l0 = io grpc internal channelz id r12", "$ r4 = java lang long value of $ l0", "r9 = new io grpc internal channelz $ server socket map", "specialinvoke r9 < init > null", "$ r6 = $ r3 put $ r4 r9", "r2 = io grpc internal channelz $ server socket map $ r6", "$ z0 = io grpc internal channelz $ assertion disable", "if $ z0 ! = 0 goto label1", "if r2 == null goto label1", "r10 = new java lang assertion error", "specialinvoke r10 < init >", "throw r10", "if r2 == null goto label1", "label r13 = io grpc internal channelz r0", "$ r7 = r13 server", "io grpc internal channelz add $ r7 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r5 = io grpc internal channelz r0", "$ r1 = r5 subchannels", "$ r2 = java lang long value of l0", "$ r3 = $ r1 get $ r2", "$ r4 = io grpc internal instrumented $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "entermonitor r0", "label r15 = io grpc internal http2 ping r0", "$ z0 = r15 complete", "if $ z0 == 0 goto label3", "exitmonitor r0", "label return", "if $ z0 == 0 goto label3", "label r16 = io grpc internal http2 ping r0", "r16 complete = 1", "r17 = io grpc internal http2 ping r0", "r17 failure cause = r1", "r18 = io grpc internal http2 ping r0", "r2 = r18 callback", "r19 = io grpc internal http2 ping r0", "r19 callback = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r4 = new java util array list", "r5 = io grpc internal stats trace context r0", "$ r2 = r5 tracer", "$ r3 = java util array a list $ r2", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = io grpc internal transport tracer r0", "$ l0 = r1 keep alives send", "$ l1 = $ l0 + 1l", "r2 = io grpc internal transport tracer r0", "r2 keep alives send = $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init > \\ `` subclass fail to hide static factory\\ ``", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = io grpc forward channel builder r0", "$ r1 = r2 max retry attempt i0", "r3 = io grpc manage channel builder $ r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = io grpc manage channel provider provider", "if $ r0 ! = null goto label1", "r3 = new io grpc manage channel provider $ provider not find exception", "specialinvoke r3 < init > \\ `` no functional channel service provider find try add a dependency on the grpc-okhttp grpc-netty or grpc-netty-shaded artifact\\ ``", "r4 = java lang throwable r3", "throw r4", "if $ r0 ! = null goto label1", "label $ r1 = io grpc manage channel provider provider", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = java util collection empty list", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = io grpc server provider provider", "$ r1 = $ r0 builder for port i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = io grpc status $ code ok", "r3 = io grpc status r0", "$ r1 = r3 code", "if $ r2 ! = $ r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 ! = $ r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = io grpc status exception r0", "$ r1 = r2 trailer", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = io grpc netty grpc http2 connection handler r0", "$ r1 = r3 channel unused", "$ r1 set success null", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = new io grpc netty netty server builder", "specialinvoke $ r0 < init > i0", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "com google common base precondition check not null r0 \\ `` ssl context\\ ``", "r3 = new io grpc netty protocol negotiator $ 2", "specialinvoke r3 < init > r0", "r4 = io grpc netty protocol negotiator r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com google common io char stream a char sink r1", "$ r2 write r0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com google common io file back output stream r0", "$ r1 = r2 supplier", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "com google common base precondition check not null r0", "com google common base precondition check not null r1", "$ z0 = r0 equal r1", "if $ z0 ! = 0 goto label1", "$ z4 = 1", "goto label2", "label $ r4 = newarray java lang object [ 2 ]", "$ r4 [ 0 ] = r0", "$ r4 [ 1 ] = r1", "com google common base precondition check argument $ z4 \\ `` source % s and destination % s must be different\\", "$ z1 = r0 rename to r1", "if $ z1 ! = 0 goto label4", "com google common io file copy r0 r1", "$ z2 = r0 delete", "if $ z2 ! = 0 goto label4", "$ z3 = r1 delete", "if $ z3 ! = 0 goto label3", "$ r10 = new java io i o exception", "$ r11 = new java lang string builder", "specialinvoke $ r11 < init >", "$ r12 = $ r11 append \\ `` unable to delete \\ ``", "$ r13 = $ r12 append r1", "$ r14 = $ r13 to string", "specialinvoke $ r10 < init > $ r14", "throw $ r10", "if $ z3 ! = 0 goto label3", "label $ r5 = new java io i o exception", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` unable to delete \\ ``", "$ r8 = $ r7 append r0", "$ r9 = $ r8 to string", "specialinvoke $ r5 < init > $ r9", "throw $ r5", "if $ z2 ! = 0 goto label4", "label return", "if $ z0 ! = 0 goto label1", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r2 = com google common io file back output stream r0", "$ r1 = r2 a byte source", "r3 = com google common io input supplier $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = new com google common util concurrent async settable future", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r5 = com github rholder retry retryer builder r0", "$ r2 = r5 rejection predicate", "r4 = new com github rholder retry retryer builder $ exception class predicate", "specialinvoke r4 < init > class \\ `` ljava lang exception \\ ``", "r6 = com google common base predicate r4", "$ r3 = com google common base predicate or $ r2 r6", "r7 = com github rholder retry retryer builder r0", "r7 rejection predicate = $ r3", "r8 = com github rholder retry retryer builder r0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["$ r0 = com github rholder retry stop strategy never_stop", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r3 = com google common collect test abstract container tester r0", "r3 expect content $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com google common collect test abstract container tester r0", "$ r3 = r5 get sample element", "r2 = com google common collect test helper copy to list $ r3", "$ r4 = java util array a list r1", "r2 add all $ r4", "r6 = com google common collect test abstract container tester r0", "r6 expect content r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "label r7 = com google common collect test abstract iterator tester r0", "specialinvoke r7 recurse 0", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r5 = com google common collect test feature feature util annotation cache", "entermonitor $ r5", "label $ r6 = com google common collect test feature feature util annotation cache", "$ r7 = $ r6 get r0", "r14 = java util list $ r7", "if r14 ! = null goto label5", "$ r8 = new java util array list", "specialinvoke $ r8 < init >", "r2 = r0 get declare annotation", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label4", "r3 = r2 [ i1 ]", "$ r12 = r3 annotation type", "$ z0 = $ r12 be annotation present class \\ `` lcom google common collect test feature tester annotation \\ ``", "if $ z0 == 0 goto label3", "$ r8 add r3", "label i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label4", "label r14 = java util collection unmodifiable list $ r8", "$ r9 = com google common collect test feature feature util annotation cache", "$ r9 put r0 r14", "label exitmonitor $ r5", "label return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 contain \\ `` \\ ``", "if $ z0 == 0 goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` eclipse hide all character after \\ ' \\ ' please use \\ ' [ ] \\ ' or other character instead of parentheses\\ ``", "throw r4", "if $ z0 == 0 goto label1", "label r5 = com google common collect test feature specific test suite builder r0", "r5 name = r1", "r6 = com google common collect test feature specific test suite builder r0", "$ r2 = r6 self", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com google common collect test google test enum multiset generator r0", "$ r2 = r3 order r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = com google common collect test tester navigable set navigation tester r0", "$ r1 = r11 get subject generator", "$ r5 = com google common collect test one size test container generator $ r1", "$ r2 = newarray java lang object [ 2 ]", "r12 = com google common collect test tester navigable set navigation tester r0", "$ r3 = r12 a", "$ r2 [ 0 ] = $ r3", "r13 = com google common collect test tester navigable set navigation tester r0", "$ r4 = r13 c", "$ r2 [ 1 ] = $ r4", "$ r6 = $ r5 create $ r2", "$ r7 = java util collection $ r6", "specialinvoke r0 reset container $ r7", "r14 = com google common collect test tester navigable set navigation tester r0", "$ r9 = r14 get set", "$ r10 = java util navigable set $ r9", "r15 = com google common collect test tester navigable set navigation tester r0", "r15 navigable set = $ r10", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "c0 = @ parameter2", "r2 = com google common escape escapers compute replacement r0 c0", "junit framework assert assert not null r2", "junit framework assert assert equal r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com google common collect list a list r1 r2", "r5 = com google common test equivalence tester r0", "r5 add equivalence group $ r3", "r6 = com google common test equivalence tester r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new com google common test gc finalization $ 2", "specialinvoke r2 < init > r0", "r3 = com google common test gc finalization $ finalization predicate r2", "com google common test gc finalization await do r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = com google common test platform reserialize r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com google inject internal internal context r0", "$ r2 = r3 state", "$ r2 pop", "r4 = com google inject internal internal context r0", "r4 dependency = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = org h2 util new array list", "if r1 == null goto label4", "r3 = r1 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label4", "$ r5 = r3 next", "r4 = org h2 table column $ r5", "$ z2 = r4 be auto increment", "if $ z2 == 0 goto label2", "r14 = org h2 command ddl command with columns r0", "i0 = r14 get object id", "r15 = org h2 command ddl command with columns r0", "$ r6 = r15 session", "r16 = org h2 command ddl command with columns r0", "$ r7 = r16 get schema", "r4 convert auto increment to sequence $ r6 $ r7 i0 z0", "$ r9 = \\ `` \\'\\'\\ ``", "r17 = org h2 command ddl command with columns r0", "$ r8 = r17 session", "$ r10 = $ r8 get database", "$ r11 = $ r10 get cluster", "$ z4 = $ r9 equal $ r11", "if $ z4 ! = 0 goto label2", "$ r12 = org h2 message db exception get unsupported exception \\ `` cluster & & auto-increment columns\\ ``", "r18 = java lang throwable $ r12", "throw r18", "if $ z4 ! = 0 goto label2", "label r13 = r4 get sequence", "if r13 == null goto label3", "r2 add r13", "label goto label1", "if $ z1 == 0 goto label4", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r2 = org h2 driver default_connection", "$ r2 remove", "goto label2", "label return", "if r0 ! = null goto label1", "label $ r1 = org h2 driver default_connection", "$ r1 set r0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r6 = org h2 fulltext full text setting r0", "$ r3 = r6 ignore list", "entermonitor $ r3", "label r7 = org h2 fulltext full text setting r0", "$ r4 = r7 ignore list", "$ r4 clear", "exitmonitor $ r3", "label goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label $ r3 = org h2 message db exception get unsupported exception r1", "r6 = java lang throwable $ r3", "throw r6"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "label r6 = org h2 mvstore db m v primary index r0", "$ r2 = r6 data map", "$ l0 = $ r2 size a long max", "label return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org h2 mvstore db transaction store r0", "r1 max transaction id = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "label r7 = org h2 mvstore file store r0", "$ r2 = r7 file", "$ r2 force 1", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "i1 = @ parameter1", "r2 = org h2 mvstore file store r0", "$ r1 = r2 free space", "$ r1 free l0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 mvstore m v store r0", "specialinvoke r2 check open", "r3 = org h2 mvstore m v store r0", "r1 = r3 file store", "if r1 == null goto label1", "r1 sync", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org h2 mvstore m v store r0", "r1 version to keep = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 mvstore m v store r0", "$ i0 = r1 auto commit delay", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 mvstore m v store r0", "$ r1 = r2 cache", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org h2 mvstore m v store r0", "$ r1 = r3 file store", "if $ r1 ! = null goto label1", "$ z0 = 0", "goto label2", "label return $ z0", "if $ r1 ! = null goto label1", "label r4 = org h2 mvstore m v store r0", "$ r2 = r4 file store", "$ z0 = $ r2 be read only"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "r3 = org h2 mvstore write buffer r0", "$ r1 = specialinvoke r3 ensure capacity 2", "$ r1 put short s0", "r4 = org h2 mvstore write buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r3 = org h2 mvstore write buffer r0", "$ r1 = specialinvoke r3 ensure capacity 8", "$ r1 put long l0", "r4 = org h2 mvstore write buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r3 = org h2 mvstore write buffer r0", "$ r1 = specialinvoke r3 ensure capacity 1", "$ r1 put b0", "r4 = org h2 mvstore write buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 mvstore write buffer r0", "$ r1 = r2 buff", "$ i0 = $ r1 position", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = org h2 mvstore write buffer r0", "$ r1 = r3 buff", "$ r1 put int i0 i1", "r4 = org h2 mvstore write buffer r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r8 = org h2 mvstore write buffer r0", "$ r1 = r8 buff", "$ i0 = $ r1 limit", "if $ i0 < = 4194304 goto label1", "r9 = org h2 mvstore write buffer r0", "$ r6 = r9 reuse", "r10 = org h2 mvstore write buffer r0", "r10 buff = $ r6", "goto label2", "label r15 = org h2 mvstore write buffer r0", "$ r7 = r15 buff", "$ r7 clear", "r16 = org h2 mvstore write buffer r0", "return r16", "if $ i0 < = 4194304 goto label1", "label r11 = org h2 mvstore write buffer r0", "$ r3 = r11 buff", "r12 = org h2 mvstore write buffer r0", "$ r2 = r12 reuse", "if $ r3 == $ r2 goto label2", "r13 = org h2 mvstore write buffer r0", "$ r5 = r13 buff", "r14 = org h2 mvstore write buffer r0", "r14 reuse = $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org h2 schema schema r0", "$ r4 = r9 database", "entermonitor $ r4", "label r10 = org h2 schema schema r0", "$ r5 = r10 table and view", "$ r6 = $ r5 get r1", "$ r7 = org h2 table table $ r6", "exitmonitor $ r4", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org h2 store f file path get r0", "$ r3 = org h2 store f file path get r1", "$ r2 move to $ r3 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org h2 store f file path get r0", "$ r3 = org h2 store f file path get r1", "$ r2 move to $ r3 1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org h2 table column r0", "$ r2 = r3 convert r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = org h2 table column r0", "r2 table = r1", "r3 = org h2 table column r0", "r3 column id = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r17 = org h2 table column r0", "$ r2 = r17 default expression", "if $ r2 ! = null goto label1", "r18 = org h2 table column r0", "$ r15 = r18 on update expression", "if $ r15 == null goto label3", "label r16 = new org h2 table table filter", "r19 = org h2 table column r0", "$ r4 = r19 table", "specialinvoke r16 < init > r1 $ r4 null 0 null 0 null", "r20 = org h2 table column r0", "r20 compute table filter = r16", "r21 = org h2 table column r0", "$ r5 = r21 default expression", "if $ r5 == null goto label2", "r22 = org h2 table column r0", "$ r12 = r22 default expression", "r23 = org h2 table column r0", "$ r11 = r23 compute table filter", "r24 = org h2 table column resolver $ r11", "$ r12 map column r24 0", "r25 = org h2 table column r0", "$ r13 = r25 default expression", "$ r14 = $ r13 optimize r1", "r26 = org h2 table column r0", "r26 default expression = $ r14", "label r27 = org h2 table column r0", "$ r6 = r27 on update expression", "if $ r6 == null goto label3", "r28 = org h2 table column r0", "$ r8 = r28 on update expression", "r29 = org h2 table column r0", "$ r7 = r29 compute table filter", "r30 = org h2 table column resolver $ r7", "$ r8 map column r30 0", "r31 = org h2 table column r0", "$ r9 = r31 on update expression", "$ r10 = $ r9 optimize r1", "r32 = org h2 table column r0", "r32 on update expression = $ r10", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 table column r0", "r1 check constraint = null", "r2 = org h2 table column r0", "r2 check constraint s q l = null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org h2 table join batch r0", "$ r1 = r4 filter", "$ r2 = $ r1 [ i0 ]", "$ r3 = $ r2 lookup batch", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = org h2 table join batch r0", "r5 current = null", "r6 = org h2 table join batch r0", "r6 start = 0", "r7 = org h2 table join batch r0", "r7 find = 0", "r8 = org h2 table join batch r0", "r1 = r8 filter", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r2 = r1 [ i1 ]", "r2 reset z0", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label if z0 == 0 goto label3", "r9 = org h2 table join batch r0", "$ r3 = r9 additional filter", "if $ r3 == null goto label3", "r10 = org h2 table join batch r0", "$ r4 = r10 additional filter", "$ r4 reset", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 table table view r0", "$ z0 = r1 be recursive query detect", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "r11 = org h2 tool multi dimension r0", "$ i4 = r11 get max value i0", "l1 = long $ i4", "i2 = org h2 tool multi dimension get bit per value i0", "l14 = 0l", "i15 = 0", "label if i15 > = i0 goto label6", "$ i5 = r1 [ i15 ]", "l3 = long $ i5", "$ b6 = l3 cmp 0l", "if $ b6 < 0 goto label2", "$ b7 = l3 cmp l1", "if $ b7 < = 0 goto label3", "label r10 = new java lang illegal argument exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r4 = r9 append \\ `` 0 < \\ ``", "$ r5 = $ r4 append l3", "$ r6 = $ r5 append \\ `` < \\ ``", "$ r7 = $ r6 append l1", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if $ b7 < = 0 goto label3", "label i16 = 0", "label if i16 > = i2 goto label5", "$ l8 = 1l < < i16", "$ l12 = l3 & $ l8", "$ i9 = i0 - 1", "$ i10 = $ i9 * i16", "$ i11 = i15 + $ i10", "$ l13 = $ l12 < < $ i11", "l14 = l14 | $ l13", "i16 = i16 + 1", "goto label4", "label if i16 > = i2 goto label5", "label i15 = i15 + 1", "goto label1", "label if i15 > = i0 goto label6", "label return l14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [], [42], []]}
{"nodes": ["r0 = @ parameter0", "label $ r3 = org h2 util local date time utils local_date_parse", "$ r2 = newarray java lang object [ 1 ]", "$ r2 [ 0 ] = r0", "$ r4 = $ r3 invoke null $ r2", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "label $ r3 = org h2 util local date time utils offset_date_time_parse", "$ r2 = newarray java lang object [ 1 ]", "$ r2 [ 0 ] = r0", "$ r4 = $ r3 invoke null $ r2", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = r0 convert to 24", "r1 = org h2 value value timestamp time zone $ r3", "l0 = r1 get date value", "l1 = r1 get time nanos", "label r15 = org h2 util local date time utils local date time from date nanos l0 l1", "s2 = r1 get time zone offset min", "$ r4 = java util concurrent time unit minute", "$ l4 = long s2", "$ l5 = $ r4 to second $ l4", "i3 = int $ l5", "$ r6 = org h2 util local date time utils zone_offset_of_total_seconds", "$ r5 = newarray java lang object [ 1 ]", "$ r7 = java lang integer value of i3", "$ r5 [ 0 ] = $ r7", "r2 = $ r6 invoke null $ r5", "$ r9 = org h2 util local date time utils offset_date_time_of_local_date_time_zone_offset", "$ r8 = newarray java lang object [ 2 ]", "$ r8 [ 0 ] = r15", "$ r8 [ 1 ] = r2", "$ r10 = $ r9 invoke null $ r8", "label return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "label r3 = java net inet address get by name r0", "$ r1 = r3 get host name", "label return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = new org locationtech jts geom geometry factory", "specialinvoke r12 < init >", "r13 = new org locationtech jts geom envelope", "r14 = org h2 value value geometry r0", "$ r6 = r14 get geometry no copy", "$ r7 = $ r6 get envelope internal", "specialinvoke r13 < init > $ r7", "$ r8 = r1 get geometry no copy", "$ r9 = $ r8 get envelope internal", "r13 expand to include $ r9", "$ r10 = r12 to geometry r13", "$ r11 = org h2 value value geometry get $ r10", "r15 = org h2 value value $ r11", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 api interval r0", "$ l0 = r1 remain", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 api interval r0", "$ r1 = r2 qualifier", "r3 = org h2 api interval r0", "$ z0 = r3 negative", "r4 = org h2 api interval r0", "$ l1 = r4 lead", "r5 = org h2 api interval r0", "$ l0 = r5 remain", "$ l2 = org h2 util interval utils month from interval $ r1 $ z0 $ l1 $ l0", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 api interval r0", "$ r1 = r2 qualifier", "r3 = org h2 api interval r0", "$ z0 = r3 negative", "r4 = org h2 api interval r0", "$ l1 = r4 lead", "r5 = org h2 api interval r0", "$ l0 = r5 remain", "$ l2 = org h2 util interval utils hour from interval $ r1 $ z0 $ l1 $ l0", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 api interval r0", "$ r1 = r2 qualifier", "r3 = org h2 api interval r0", "$ z0 = r3 negative", "r4 = org h2 api interval r0", "$ l1 = r4 lead", "r5 = org h2 api interval r0", "$ l0 = r5 remain", "$ l2 = org h2 util interval utils nanos from interval $ r1 $ z0 $ l1 $ l0", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 command dml query r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 command dml query r0", "r2 order list = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 command dml select group r0", "$ r1 = r2 current group by expr data", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 command dml update r0", "r2 update key collector = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "if r1 ! = null goto label1", "$ r4 = r0 append \\ `` \\\\\\ `` \\\\\\ `` \\ ``", "return $ r4", "if r1 ! = null goto label1", "label if z0 ! = 0 goto label2", "$ z1 = org h2 util parser util be simple identifier r1 0 0", "if $ z1 == 0 goto label2", "$ r3 = r0 append r1", "return $ r3", "if $ z1 == 0 goto label2", "label $ r2 = org h2 util string utils quote identifier r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r14 = org h2 command parser r0", "specialinvoke r14 initialize r1", "r15 = org h2 command parser r0", "r15 parse index = i0", "r16 = org h2 command parser r0", "specialinvoke r16 read", "r17 = org h2 command parser r0", "specialinvoke r17 read 75", "r18 = org h2 command parser r0", "$ z0 = specialinvoke r18 read if 76", "if $ z0 == 0 goto label1", "$ r11 = org h2 util utils empty_int_array", "return $ r11", "if $ z0 == 0 goto label1", "label r19 = org h2 command parser r0", "$ i2 = r19 current token type", "if $ i2 ! = 2 goto label4", "r12 = org h2 util utils new small array list", "label r20 = org h2 command parser r0", "$ i6 = r20 current token type", "if $ i6 == 2 goto label3", "r21 = org h2 command parser r0", "$ r10 = specialinvoke r21 get syntax error", "r22 = java lang throwable $ r10", "throw r22", "if $ i6 == 2 goto label3", "label r23 = org h2 command parser r0", "$ r7 = r23 current token", "r12 add $ r7", "r24 = org h2 command parser r0", "specialinvoke r24 read", "r25 = org h2 command parser r0", "$ z4 = specialinvoke r25 read if more", "if $ z4 ! = 0 goto label2", "$ r8 = newarray java lang string [ 0 ]", "$ r9 = r12 to array $ r8", "return $ r9", "if $ i2 ! = 2 goto label4", "label r26 = org h2 command parser r0", "$ i3 = r26 current token type", "if $ i3 ! = 64 goto label8", "r13 = org h2 util utils new small array list", "label r27 = org h2 command parser r0", "$ i4 = specialinvoke r27 read int", "$ r4 = java lang integer value of $ i4", "r13 add $ r4", "r28 = org h2 command parser r0", "$ z2 = specialinvoke r28 read if more", "if $ z2 ! = 0 goto label5", "i1 = r13 size", "r2 = newarray int [ i1 ]", "i7 = 0", "label if i7 > = i1 goto label7", "$ r5 = r13 get i7", "$ r6 = java lang integer $ r5", "$ i5 = $ r6 int value", "r2 [ i7 ] = $ i5", "i7 = i7 + 1", "goto label6", "label if i7 > = i1 goto label7", "label return r2", "if $ i3 ! = 64 goto label8", "label r29 = org h2 command parser r0", "$ r3 = specialinvoke r29 get syntax error", "r30 = java lang throwable $ r3", "throw r30"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [], [63], [64], [65], [66], [67], [68], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org h2 engine connection info r0", "r2 network connection info = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r15 = org h2 expression analysis window r0", "$ r2 = r15 partition by", "if $ r2 == null goto label2", "r16 = org h2 expression analysis window r0", "$ r9 = r16 partition by", "r11 = $ r9 iterator", "label $ z1 = r11 have next", "if $ z1 == 0 goto label2", "$ r10 = r11 next", "r12 = org h2 expression expression $ r10", "r12 update aggregate r1 i0", "goto label1", "if $ z1 == 0 goto label2", "label r17 = org h2 expression analysis window r0", "$ r3 = r17 order by", "if $ r3 == null goto label4", "r18 = org h2 expression analysis window r0", "$ r6 = r18 order by", "r13 = $ r6 iterator", "label $ z0 = r13 have next", "if $ z0 == 0 goto label4", "$ r7 = r13 next", "r14 = org h2 command dml select order by $ r7", "$ r8 = r14 expression", "$ r8 update aggregate r1 i0", "goto label3", "if $ z0 == 0 goto label4", "label r19 = org h2 expression analysis window r0", "$ r4 = r19 frame", "if $ r4 == null goto label5", "r20 = org h2 expression analysis window r0", "$ r5 = r20 frame", "$ r5 update aggregate r1 i0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r17 = new java util array list", "specialinvoke r17 < init >", "r18 = org h2 expression subquery r0", "$ r7 = r18 query", "$ r7 set session r1", "r19 = org h2 expression subquery r0", "$ r8 = r19 query", "r3 = $ r8 query 2147483647", "r14 = null", "label $ z0 = r3 next", "if $ z0 == 0 goto label02", "$ r9 = org h2 expression subquery read row r3", "r17 add $ r9", "goto label01", "if $ z0 == 0 goto label02", "label if r3 == null goto label12", "goto label03", "label r3 close", "goto label12", "label return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], [], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ b1 = l0 cmp 0l", "if $ b1 < 0 goto label1", "$ l5 = 1l", "goto label2", "label l6 = $ l5", "if r0 == null goto label3", "$ b2 = l0 cmp 0l", "if $ b2 < 0 goto label3", "$ l3 = r0 long value", "$ b4 = $ l3 cmp $ l5", "if $ b4 > = 0 goto label3", "l6 = r0 long value", "label return l6", "if $ b1 < 0 goto label1", "label $ l5 = -9223372036854775808l"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 security auth authentication info r0", "$ r1 = r2 nest identity", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 security auth realm config r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 security auth realm config r0", "$ r1 = r2 validator class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org h2 table table r0", "r2 = r4 column", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r2 [ i1 ]", "r3 set default expression r1 null", "r3 set on update expression r1 null", "r3 remove check constraint", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r2 = org h2 table table filter r0", "$ r1 = r2 common join columns filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org h2 util geometry e w k t utils $ e w k t source", "specialinvoke $ r2 < init > r0", "i0 = $ r2 read dimension system", "$ z0 = $ r2 have data", "if $ z0 ! = 0 goto label1", "if i0 ! = 0 goto label2", "label $ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init >", "throw $ r3", "if i0 ! = 0 goto label2", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["i0 = @ parameter0", "if i0 ! = 0 goto label1", "$ r1 = org h2 util time zone provider utc", "return $ r1", "if i0 ! = 0 goto label1", "label r2 = new org h2 util time zone provider $ simple", "specialinvoke r2 < init > i0", "r3 = org h2 util time zone provider r2", "return r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 value ext type info geometry r0", "$ i0 = r1 type", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java math big decimal zero", "$ z0 = $ r1 equal r0", "if $ z0 == 0 goto label1", "$ r8 = org h2 value value decimal zero", "$ r9 = org h2 value value decimal $ r8", "return $ r9", "if $ z0 == 0 goto label1", "label $ r2 = java math big decimal one", "$ z1 = $ r2 equal r0", "if $ z1 == 0 goto label2", "$ r6 = org h2 value value decimal one", "$ r7 = org h2 value value decimal $ r6", "return $ r7", "if $ z1 == 0 goto label2", "label r10 = new org h2 value value decimal", "specialinvoke r10 < init > r0", "r11 = org h2 value value r10", "$ r4 = org h2 value value cache r11", "$ r5 = org h2 value value decimal $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org h2 value value double r0", "$ d0 = r1 value", "l0 = java lang double double to raw long bit $ d0", "$ l1 = l0 > > > 32", "$ l2 = l0 ^ $ l1", "$ i3 = int $ l2", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org h2 value value result set", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r10 = org apache hadoop security authentication client authenticate u r l $ token access $ 000 r1", "if r10 == null goto label2", "$ z0 = r10 start with \\ `` \\\\\\ `` \\ ``", "if $ z0 ! = 0 goto label1", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` \\\\\\ `` \\ ``", "$ r8 = $ r7 append r10", "$ r9 = $ r8 append \\ `` \\\\\\ `` \\ ``", "r10 = $ r9 to string", "label $ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` hadoop auth=\\ ``", "$ r4 = $ r3 append r10", "$ r5 = $ r4 to string", "r0 add request property \\ `` cookie\\", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r4 = @ parameter0", "if r4 ! = null goto label1", "return 0", "if r4 ! = null goto label1", "label $ r3 = java util locale english", "r5 = r4 to low case $ r3", "z1 = 1", "r6 = org apache hadoop security authentication server alt kerberos authentication handler r0", "r1 = r6 non browser user agent", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label4", "r2 = r1 [ i1 ]", "$ z0 = r5 contain r2", "if $ z0 == 0 goto label3", "z1 = 0", "goto label4", "label return z1", "if $ z0 == 0 goto label3", "label i1 = i1 + 1", "goto label2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r11 = null", "$ r3 = org apache hadoop security authentication util kerberos name rule", "if $ r3 == null goto label3", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = org apache hadoop security authentication util kerberos name rule", "r1 = $ r5 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r7 = r1 next", "r2 = org apache hadoop security authentication util kerberos name $ rule $ r7", "$ r8 = r2 to string", "$ r9 = $ r4 append $ r8", "$ r9 append \\ `` \\n\\ ``", "goto label1", "if $ z0 == 0 goto label2", "label $ r6 = $ r4 to string", "r11 = $ r6 trim", "label return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "$ r10 = org apache hadoop conf configuration deprecation context", "$ r11 = $ r10 get", "r1 = org apache hadoop conf configuration $ deprecation context $ r11", "r20 = org apache hadoop conf configuration r0", "r2 = r20 get prop", "r21 = org apache hadoop conf configuration r0", "r3 = specialinvoke r21 get overlay", "$ r12 = r1 get deprecate key map", "$ r13 = $ r12 entry set", "r4 = $ r13 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label5", "$ r14 = r4 next", "r5 = java util map $ entry $ r14", "$ r15 = r5 get key", "r6 = java lang string $ r15", "$ z1 = r3 contain r6", "if $ z1 ! = 0 goto label4", "$ r16 = r5 get value", "$ r17 = org apache hadoop conf configuration $ deprecate key info $ r16", "r7 = org apache hadoop conf configuration $ deprecate key info access $ 100 $ r17", "i0 = lengthof r7", "i1 = 0", "label if i1 > = i0 goto label4", "r8 = r7 [ i1 ]", "r9 = r3 get property r8", "if r9 == null goto label3", "r2 set property r6 r9", "r3 set property r6 r9", "goto label4", "label goto label1", "if r9 == null goto label3", "label i1 = i1 + 1", "goto label2", "if $ z0 == 0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new org apache hadoop conf configuration $ resource", "specialinvoke r3 < init > r1", "r4 = org apache hadoop conf configuration r0", "specialinvoke r4 add resource object r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop conf configuration r0", "r2 = r4 get r1", "if null ! = r2 goto label1", "return null", "if null ! = r2 goto label1", "label $ r3 = r2 trim", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "$ r2 = java lang double to string d0", "r3 = org apache hadoop conf configuration r0", "r3 set r1 $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ z0 = r3 be assignable from r2", "if $ z0 ! = 0 goto label1", "r13 = new java lang runtime exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r7 = r12 append r2", "$ r8 = $ r7 append \\ `` not \\ ``", "$ r9 = r3 get name", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 to string", "specialinvoke r13 < init > $ r11", "throw r13", "if $ z0 ! = 0 goto label1", "label $ r4 = r2 get name", "r14 = org apache hadoop conf configuration r0", "r14 set r1 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop conf reconfiguration exception r0", "$ r1 = r2 new val", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r12 = org apache hadoop crypto cipher suite r0", "$ r5 = r12 name", "r1 = $ r5 split \\ `` \\ ``", "r11 = new java lang string builder", "specialinvoke r11 < init >", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r4 = r1 [ i1 ]", "$ r8 = r11 append \\ `` \\ ``", "$ r9 = org apache hadoop util string utils to lower case r4", "$ r8 append $ r9", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label $ r7 = r11 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache hadoop crypto key key provider $ option", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 last index of 64", "if i0 ! = -1 goto label1", "$ r2 = new java io i o exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` no version in key path \\ ``", "$ r5 = $ r4 append r0", "$ r6 = $ r5 to string", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "if i0 ! = -1 goto label1", "label $ r1 = r0 substring 0 i0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org apache hadoop crypto random openssl secure random native enable", "if $ z0 == 0 goto label1", "r3 = org apache hadoop crypto random openssl secure random r0", "$ z1 = specialinvoke r3 next rand bytes r1", "if $ z1 ! = 0 goto label2", "label r4 = org apache hadoop crypto random openssl secure random r0", "$ r2 = r4 fallback", "$ r2 next byte r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop fs abstract file system r0", "$ r1 = r3 get uri", "r4 = org apache hadoop fs abstract file system r0", "$ i0 = r4 get uri default port", "$ r2 = org apache hadoop security security util build d t service name $ r1 $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r5 = org apache hadoop f x attr set flag create", "$ r4 = org apache hadoop f x attr set flag replace", "r7 = java lang enum $ r5", "r8 = java lang enum $ r4", "$ r6 = java util enum set of r7 r8", "r9 = org apache hadoop fs abstract file system r0", "r9 set x attr r1 r2 r3 $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = r0 get class", "$ r5 = $ r4 get simple name", "$ r6 = $ r3 append $ r5", "$ r7 = $ r6 append \\ `` doesn\\'t support list x attrs\\ ``", "$ r8 = $ r7 to string", "specialinvoke $ r2 < init > $ r8", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop f block location r0", "$ r1 = r2 topology path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache hadoop f block location r0", "r1 length = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop f content summary r0", "$ r1 = r2 to string 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop f file status r0", "$ z0 = r1 isdir", "if $ z0 ! = 0 goto label1", "r2 = org apache hadoop f file status r0", "$ z1 = r2 be symlink", "if $ z1 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop f file status r0", "$ r1 = r2 owner", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get \\ `` fs default f s\\", "$ r2 = org apache hadoop f file system fix name $ r1", "$ r3 = java net uri create $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache hadoop f file system fix name r1", "$ r3 = java net uri create $ r2", "org apache hadoop f file system set default uri r0 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang unsupported operation exception", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` not implement by the \\ ``", "$ r6 = r0 get class", "$ r7 = $ r6 get simple name", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 append \\ `` file system implementation\\ ``", "$ r10 = $ r9 to string", "specialinvoke $ r3 < init > $ r10", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache hadoop f file system r0", "$ r4 = r7 delete on exit", "entermonitor $ r4", "label r8 = org apache hadoop f file system r0", "$ r5 = r8 delete on exit", "$ z0 = $ r5 remove r1", "exitmonitor $ r4", "label return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r15 = org apache hadoop f file system r0", "r4 = r15 list status r2", "if r4 ! = null goto label1", "r14 = new java io i o exception", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r10 = r13 append \\ `` error accessing \\ ``", "$ r11 = $ r10 append r2", "$ r12 = $ r11 to string", "specialinvoke r14 < init > $ r12", "throw r14", "if r4 ! = null goto label1", "label i1 = 0", "label $ i0 = lengthof r4", "if i1 > = $ i0 goto label4", "$ r5 = r4 [ i1 ]", "$ r6 = $ r5 get path", "$ z0 = r3 accept $ r6", "if $ z0 == 0 goto label3", "$ r7 = r4 [ i1 ]", "r1 add $ r7", "label i1 = i1 + 1", "goto label2", "if i1 > = $ i0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = new java util array list", "specialinvoke r8 < init >", "r9 = org apache hadoop f file system r0", "specialinvoke r9 list status r8 r1 r2", "$ i0 = r8 size", "$ r5 = newarray org apache hadoop f file status [ $ i0 ]", "$ r6 = r8 to array $ r5", "$ r7 = org apache hadoop f file status [ ] $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "z1 = @ parameter3", "r6 = org apache hadoop f file system r0", "r3 = r6 get conf", "if z1 == 0 goto label1", "$ r4 = org apache hadoop f file system get local r3", "r5 = $ r4 get raw file system", "goto label2", "label r7 = org apache hadoop f file system r0", "r8 = org apache hadoop f file system r5", "org apache hadoop f file util copy r7 r1 r8 r2 z0 r3", "return", "if z1 == 0 goto label1", "label r5 = org apache hadoop f file system get local r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache hadoop f file system statistic table", "$ r3 = $ r2 get r1", "r7 = org apache hadoop f file system $ statistic $ r3", "if r7 ! = null goto label1", "$ r4 = new org apache hadoop f file system $ statistic", "specialinvoke $ r4 < init > r0", "r7 = $ r4", "$ r5 = org apache hadoop f file system statistic table", "$ r5 put r1 $ r4", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop f filter file system r0", "$ r1 = r3 f", "$ r2 = $ r1 get work directory", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop f f s output summer r0", "r1 flush buffer 0 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache hadoop f f shell new shell instance", "r6 = new org apache hadoop conf configuration", "specialinvoke r6 < init >", "r6 set quiet mode 0", "r1 set conf r6", "label r7 = org apache hadoop util tool r1", "i0 = org apache hadoop util tool runner run r7 r0", "label r1 close", "goto label5", "label java lang system exit i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = newarray java lang string [ 1 ]", "$ r1 [ 0 ] = \\ `` -chmod\\ ``", "r0 add class class \\ `` lorg apache hadoop f f shell permission $ chmod \\", "$ r2 = newarray java lang string [ 1 ]", "$ r2 [ 0 ] = \\ `` -chown\\ ``", "r0 add class class \\ `` lorg apache hadoop f f shell permission $ chown \\", "$ r3 = newarray java lang string [ 1 ]", "$ r3 [ 0 ] = \\ `` -chgrp\\ ``", "r0 add class class \\ `` lorg apache hadoop f f shell permission $ chgrp \\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache hadoop fs local dir allocator r0", "$ r3 = r4 get local path for write r1 -1l r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache hadoop fs local dir allocator r0", "$ r4 = r5 context cfg item name", "r6 = org apache hadoop fs local dir allocator r0", "r3 = specialinvoke r6 obtain context $ r4", "$ z0 = r3 if exists r1 r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = org apache hadoop fs path r0", "$ z0 = r5 be uri path absolute", "if $ z0 == 0 goto label1", "r6 = org apache hadoop fs path r0", "$ r1 = r6 uri", "$ r2 = $ r1 get scheme", "if $ r2 ! = null goto label1", "r7 = org apache hadoop fs path r0", "$ r3 = r7 uri", "$ r4 = $ r3 get authority", "if $ r4 ! = null goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ r4 ! = null goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop f shell command r0", "r2 command factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache hadoop f shell command r0", "$ r3 = r10 err", "r9 = new java lang string builder", "specialinvoke r9 < init >", "r11 = org apache hadoop f shell command r0", "$ r4 = r11 get name", "$ r5 = r9 append $ r4", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 to string", "$ r3 println $ r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop f shell command factory r0", "$ r2 = r4 get conf", "r5 = org apache hadoop f shell command factory r0", "$ r3 = r5 get instance r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r6 = new java util array list", "$ r4 = java util array a list r1", "specialinvoke r6 < init > $ r4", "$ r5 = r6 sub list 0 i0", "$ r5 clear", "r7 = org apache hadoop f shell command format r0", "r7 parse r6", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop f shell find find option r0", "r2 in = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache hadoop f shell find find option r0", "r1 max depth = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop f trash r0", "$ r1 = r2 trash policy", "$ r1 delete checkpoint", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = org apache hadoop f viewfs config util get config view fs prefix r1", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` \\ ``", "$ r6 = $ r5 append \\ `` homedir\\ ``", "$ r7 = $ r6 to string", "$ r8 = r0 get $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache hadoop http http server r0", "$ r3 = r4 web app context", "$ r3 set attribute r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = r0 get class", "$ r5 = $ r4 get class loader", "$ r6 = new java lang string builder", "specialinvoke $ r6 < init >", "$ r7 = $ r6 append \\ `` webapps \\ ``", "$ r8 = $ r7 append r1", "$ r9 = $ r8 to string", "r2 = $ r5 get resource $ r9", "if r2 ! = null goto label1", "$ r11 = new java io file not find exception", "$ r12 = new java lang string builder", "specialinvoke $ r12 < init >", "$ r13 = $ r12 append \\ `` webapps \\ ``", "$ r14 = $ r13 append r1", "$ r15 = $ r14 append \\ `` not find in classpath\\ ``", "$ r16 = $ r15 to string", "specialinvoke $ r11 < init > $ r16", "throw $ r11", "if r2 ! = null goto label1", "label r3 = r2 to string", "$ i0 = r3 last index of 47", "$ r10 = r3 substring 0 $ i0", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop io array primitive writable r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org apache hadoop io binary comparable r0", "$ r2 = r3 get bytes", "r4 = org apache hadoop io binary comparable r0", "$ i2 = r4 get length", "$ i3 = org apache hadoop io writable comparator compare bytes $ r2 0 $ i2 r1 i0 i1", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache hadoop io compress bzip2 c b zip2 input stream r0", "$ l2 = r1 byte read from compress stream", "$ l1 = long i0", "$ l3 = $ l2 + $ l1", "r2 = org apache hadoop io compress bzip2 c b zip2 input stream r0", "r2 byte read from compress stream = $ l3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop io compress b zip2 codec r0", "r2 conf = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r32 = new java lang string builder", "specialinvoke r32 < init >", "r33 = org apache hadoop io compress compression codec factory r0", "$ r4 = r33 codecs", "$ r5 = $ r4 entry set", "r2 = $ r5 iterator", "r32 append \\ `` { \\ ``", "$ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r9 = r2 next", "r30 = java util map $ entry $ r9", "$ r10 = r30 get key", "$ r11 = java lang string $ r10", "r32 append $ r11", "r32 append \\ `` \\ ``", "$ r14 = r30 get value", "$ r15 = org apache hadoop io compress compression codec $ r14", "$ r16 = $ r15 get class", "$ r17 = $ r16 get name", "r32 append $ r17", "label $ z1 = r2 have next", "if $ z1 == 0 goto label2", "$ r19 = r2 next", "r31 = java util map $ entry $ r19", "r32 append \\", "$ r21 = r31 get key", "$ r22 = java lang string $ r21", "r32 append $ r22", "if $ z1 == 0 goto label2", "label r32 append \\ `` } \\ ``", "$ r8 = r32 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = null", "r15 = org apache hadoop io compress compression codec factory r0", "$ r6 = r15 codecs", "if $ r6 == null goto label1", "r2 = r1 get name", "r14 = new java lang string builder", "specialinvoke r14 < init > r2", "$ r8 = r14 reverse", "r3 = $ r8 to string", "r16 = org apache hadoop io compress compression codec factory r0", "$ r9 = r16 codecs", "r4 = $ r9 head map r3", "$ z0 = r4 be empty", "if $ z0 ! = 0 goto label1", "$ r10 = r4 last key", "r5 = java lang string $ r10", "$ z1 = r3 start with r5", "if $ z1 == 0 goto label1", "r17 = org apache hadoop io compress compression codec factory r0", "$ r11 = r17 codecs", "$ r12 = $ r11 get r5", "r13 = org apache hadoop io compress compression codec $ r12", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop io compress lz4 lz4 compressor r0", "r1 finish = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ z0 = r1 instanceof java io print stream", "if $ z0 == 0 goto label1", "$ r5 = java io print stream r1", "goto label2", "label r2 = $ r5", "r3 = newarray byte [ i0 ]", "i1 = r0 read r3", "label if i1 < 0 goto label5", "r1 write r3 0 i1", "if r2 == null goto label4", "$ z1 = r2 check error", "if $ z1 == 0 goto label4", "$ r4 = new java io i o exception", "specialinvoke $ r4 < init > \\ `` unable to write to output stream \\ ``", "throw $ r4", "if $ z1 == 0 goto label4", "label i1 = r0 read r3", "goto label3", "label if i1 < 0 goto label5", "label return", "if $ z0 == 0 goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = org apache hadoop io m d5 hash digest r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r3 = org apache hadoop io data output buffer r0", "$ r2 = r3 buffer", "$ r2 write r1 i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ b1 = r0 [ i0 ]", "$ s2 = $ b1 & 255", "$ i6 = $ s2 < < 8", "$ i3 = i0 + 1", "$ b4 = r0 [ $ i3 ]", "$ s5 = $ b4 & 255", "$ i7 = $ i6 + $ s5", "return $ i7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ l1 = org apache hadoop io writable comparator read v long r0 i0", "$ i2 = int $ l1", "return $ i2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r8 = org apache hadoop ipc client r0", "$ r6 = r8 conf", "r5 = org apache hadoop ipc client $ connection id get connection id r3 null r4 0 $ r6", "r9 = org apache hadoop ipc client r0", "$ r7 = r9 call r1 r2 r5", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = javax net socket factory get default", "r4 = org apache hadoop ipc client cache r0", "$ r3 = r4 get client r1 $ r2 class \\ `` lorg apache hadoop io object writable \\ ``", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop ipc fair call queue r0", "$ r1 = r2 peek", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop ipc protocol proxy r0", "$ r1 = r2 proxy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = org apache hadoop ipc server cur call", "$ r2 = $ r1 get", "r0 = org apache hadoop ipc server $ call $ r2", "if r0 == null goto label1", "$ r3 = org apache hadoop ipc server $ call access $ 200 r0", "if $ r3 == null goto label1", "$ r4 = org apache hadoop ipc server $ call access $ 200 r0", "$ r5 = $ r4 user", "goto label2", "label return $ r5", "if $ r3 == null goto label1", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache hadoop ipc server r0", "r1 socket send buffer size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r2 = org apache hadoop ipc server log", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r3 = r16 append \\ `` stop server on \\ ``", "r17 = org apache hadoop ipc server r0", "$ i0 = r17 port", "$ r4 = $ r3 append $ i0", "$ r5 = $ r4 to string", "$ r2 info $ r5", "r18 = org apache hadoop ipc server r0", "r18 run = 0", "r19 = org apache hadoop ipc server r0", "$ r6 = r19 handler", "if $ r6 == null goto label3", "i2 = 0", "label r20 = org apache hadoop ipc server r0", "$ i1 = r20 handler count", "if i2 > = $ i1 goto label3", "r21 = org apache hadoop ipc server r0", "$ r12 = r21 handler", "$ r13 = $ r12 [ i2 ]", "if $ r13 == null goto label2", "r22 = org apache hadoop ipc server r0", "$ r14 = r22 handler", "$ r15 = $ r14 [ i2 ]", "$ r15 interrupt", "label i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label3", "label r23 = org apache hadoop ipc server r0", "$ r7 = r23 listener", "$ r7 interrupt", "r24 = org apache hadoop ipc server r0", "$ r8 = r24 listener", "$ r8 do stop", "r25 = org apache hadoop ipc server r0", "$ r9 = r25 responder", "$ r9 interrupt", "r0 notify all", "r26 = org apache hadoop ipc server r0", "$ r10 = r26 rpc metric", "$ r10 shutdown", "r27 = org apache hadoop ipc server r0", "$ r11 = r27 rpc detail metric", "$ r11 shutdown", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop metric context factory r0", "$ r2 = r4 attribute map", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop metric spi abstract metric context r0", "$ z0 = r1 be monitor", "if $ z0 ! = 0 goto label1", "r2 = org apache hadoop metric spi abstract metric context r0", "specialinvoke r2 start timer", "r3 = org apache hadoop metric spi abstract metric context r0", "r3 be monitor = 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache hadoop metric spi abstract metric context r0", "$ r2 = r9 buffer data", "$ r3 = $ r2 get r1", "if $ r3 ! = null goto label1", "r10 = org apache hadoop metric spi abstract metric context r0", "$ r6 = r10 buffer data", "r8 = new org apache hadoop metric spi abstract metric context $ record map", "specialinvoke r8 < init >", "$ r6 put r1 r8", "label r11 = org apache hadoop metric spi abstract metric context r0", "$ r4 = r11 new record r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop metric spi output record r0", "$ r2 = r4 tag map", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop metric util metric time vary rate r0", "$ r1 = r2 previous interval data", "$ l0 = $ r1 time", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache hadoop metrics2 lib intern $ tags instance", "$ r3 = $ r2 cache", "$ r4 = $ r3 add r0 r1", "$ r5 = org apache hadoop metrics2 metric tag $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "$ r3 = org apache hadoop metrics2 lib intern info r1 r2", "r5 = org apache hadoop metrics2 lib metric registry r0", "$ r4 = r5 new counter $ r3 i0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r19 = org apache hadoop metrics2 lib mutable rate r0", "$ r6 = r19 protocol cache", "$ z0 = $ r6 contain r1", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r20 = org apache hadoop metrics2 lib mutable rate r0", "$ r7 = r20 protocol cache", "$ r7 add r1", "r2 = r1 get declare method", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label7", "r3 = r2 [ i1 ]", "r4 = r3 get name", "$ r8 = org apache hadoop metrics2 lib mutable rate log", "$ r8 debug r4", "label r21 = org apache hadoop metrics2 lib mutable rate r0", "$ r9 = r21 registry", "$ r9 new rate r4 r4 0 1", "label goto label6", "label i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label7", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 name", "r4 = org apache hadoop metrics2 metric filter r0", "$ z0 = r4 accept $ r2", "if $ z0 == 0 goto label1", "$ r3 = r1 tag", "r5 = org apache hadoop metrics2 metric filter r0", "$ z1 = r5 accept $ r3", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache hadoop metrics2 sink ganglion abstract ganglia sink r0", "$ r3 = r6 ganglion conf map", "$ r4 = $ r3 get r1", "r2 = org apache hadoop metrics2 sink ganglion ganglia conf $ r4", "if r2 == null goto label1", "$ r5 = r2", "goto label2", "label return $ r5", "if r2 == null goto label1", "label r7 = org apache hadoop metrics2 sink ganglion abstract ganglia sink r0", "$ r5 = r7 default_ganglia_conf"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r35 = org apache hadoop net abstract d n s to switch map r0", "r1 = r35 get switch map", "r33 = new java lang string builder", "specialinvoke r33 < init >", "$ r7 = r33 append \\ `` map \\ ``", "$ r8 = r0 to string", "$ r9 = $ r7 append $ r8", "$ r9 append \\ `` \\n\\ ``", "if r1 == null goto label3", "r33 append \\ `` map\\n\\ ``", "r34 = new java util hash set", "specialinvoke r34 < init >", "$ r15 = r1 entry set", "r4 = $ r15 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r22 = r4 next", "r5 = java util map $ entry $ r22", "$ r23 = r33 append \\ `` \\ ``", "$ r24 = r5 get key", "$ r25 = java lang string $ r24", "$ r26 = $ r23 append $ r25", "$ r27 = $ r26 append \\ `` - > \\ ``", "$ r28 = r5 get value", "$ r29 = java lang string $ r28", "$ r30 = $ r27 append $ r29", "$ r30 append \\ `` \\n\\ ``", "$ r32 = r5 get value", "r34 add $ r32", "goto label1", "if $ z0 == 0 goto label2", "label $ r16 = r33 append \\ `` node \\ ``", "$ i0 = r1 size", "$ r17 = $ r16 append $ i0", "$ r17 append \\ `` \\n\\ ``", "$ r19 = r33 append \\ `` switch \\ ``", "$ i1 = r34 size", "$ r20 = $ r19 append $ i1", "$ r20 append \\ `` \\n\\ ``", "goto label4", "label $ r12 = r33 to string", "return $ r12", "if r1 == null goto label3", "label r33 append \\ `` no topology information\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [], [44], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get class \\ `` net topology impl\\", "$ r2 = org apache hadoop util reflection utils new instance $ r1 r0", "$ r3 = org apache hadoop net network topology $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = r0 get network location", "$ r3 = $ r1 append $ r2", "$ r4 = $ r3 append \\ `` \\ ``", "$ r5 = r0 get name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r4 = org apache hadoop net socket output stream r0", "$ r1 = r4 writer", "$ r2 = $ r1 channel", "$ r2 close", "r5 = org apache hadoop net socket output stream r0", "$ r3 = r5 writer", "$ r3 close", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "$ i0 = 0", "goto label2", "label r3 = org apache hadoop record buffer r0", "r3 count = $ i0", "r4 = org apache hadoop record buffer r0", "r4 bytes = r1", "return", "if r1 ! = null goto label1", "label $ i0 = lengthof r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org apache hadoop record buffer r0", "$ r1 = r4 bytes", "if $ r1 ! = null goto label1", "$ r3 = newarray byte [ 0 ]", "r5 = org apache hadoop record buffer r0", "r5 bytes = $ r3", "label r6 = org apache hadoop record buffer r0", "$ r2 = r6 bytes", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = specialinvoke r0 equal r1", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r2 = org apache hadoop record meta vector type i d r1", "r5 = org apache hadoop record meta vector type i d r0", "$ r4 = r5 type i d element", "$ r3 = r2 type i d element", "$ z1 = $ r4 equal $ r3", "return $ z1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r9 = org apache hadoop security authorize default impersonation provider r0", "$ r3 = r9 config prefix", "$ r4 = r8 append $ r3", "$ r5 = $ r4 append r1", "$ r6 = $ r5 append \\ `` hosts\\ ``", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache hadoop security credential r0", "$ r2 = r5 secret key map", "$ r3 = $ r2 get r1", "$ r4 = byte [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = new java util array list", "specialinvoke r5 < init >", "r6 = org apache hadoop security credential r0", "$ r3 = r6 secret key map", "$ r4 = $ r3 key set", "r5 add all $ r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org apache hadoop security credential token_storage_magic", "$ i1 = lengthof $ r3", "r2 = newarray byte [ $ i1 ]", "r1 read fully r2", "$ r4 = org apache hadoop security credential token_storage_magic", "$ z0 = java util array equal r2 $ r4", "if $ z0 ! = 0 goto label1", "r12 = new java io i o exception", "specialinvoke r12 < init > \\ `` bad header find in token storage \\ ``", "throw r12", "if $ z0 ! = 0 goto label1", "label b0 = r1 read byte", "if b0 == 0 goto label2", "r14 = new java io i o exception", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r7 = r13 append \\ `` unknown version \\ ``", "$ r8 = $ r7 append b0", "$ r9 = $ r8 append \\ `` in token storage \\ ``", "$ r10 = $ r9 to string", "specialinvoke r14 < init > $ r10", "throw r14", "if b0 == 0 goto label2", "label r15 = org apache hadoop security credential r0", "r15 read field r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get class \\ `` hadoop security saslproperties resolver class\\", "$ r2 = org apache hadoop util reflection utils new instance r1 r0", "$ r3 = org apache hadoop security sasl property resolver $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org apache hadoop security user group information be security enable", "if $ z0 == 0 goto label5", "r7 = null", "label r7 = org apache hadoop security user group information get login user", "label goto label4", "label $ r3 = r7 do a r0", "return $ r3", "if $ z0 == 0 goto label5", "label $ r2 = r0 run", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop security user group information get login user", "$ r2 = org apache hadoop security security util do a user $ r1 r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop security ssl file base key store factory r0", "$ r1 = r2 key manager", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = new org apache hadoop io data output buffer", "specialinvoke r8 < init > 4096", "label r10 = org apache hadoop security token token identifier r0", "r11 = java io data output r8", "r10 write r11", "label goto label4", "label $ r4 = r8 get data", "$ i0 = r8 get length", "$ r5 = java util array copy of $ r4 $ i0", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop security user group information r0", "$ z0 = r1 be keytab", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache hadoop security user group information r0", "$ r2 = r4 subject", "$ r3 = $ r2 get public credential", "$ z0 = $ r3 add r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r10 = org apache hadoop security user group information r0", "$ r3 = r10 subject", "entermonitor $ r3", "label r9 = new java util array list", "r11 = org apache hadoop security user group information r0", "$ r5 = specialinvoke r11 get credential internal", "$ r6 = $ r5 get all token", "specialinvoke r9 < init > $ r6", "$ r7 = java util collection unmodifiable collection r9", "exitmonitor $ r3", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r8 = org apache hadoop service composite service r0", "$ r3 = r8 service list", "entermonitor $ r3", "label r7 = new java util array list", "r9 = org apache hadoop service composite service r0", "$ r5 = r9 service list", "specialinvoke r7 < init > $ r5", "exitmonitor $ r3", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r13 = new java lang string builder", "specialinvoke r13 < init >", "r15 = org apache hadoop service service state model r0", "$ r2 = r15 name", "$ z0 = $ r2 be empty", "if $ z0 == 0 goto label1", "$ r12 = \\ `` \\ ``", "goto label2", "label $ r7 = r13 append $ r12", "r17 = org apache hadoop service service state model r0", "$ r8 = r17 state", "$ r9 = $ r8 to string", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 to string", "return $ r11", "if $ z0 == 0 goto label1", "label r14 = new java lang string builder", "specialinvoke r14 < init >", "r16 = org apache hadoop service service state model r0", "$ r4 = r16 name", "$ r5 = r14 append $ r4", "$ r6 = $ r5 append \\ `` \\ ``", "$ r12 = $ r6 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop util closeable reference count r0", "$ r1 = r2 status", "$ i0 = $ r1 get", "$ i1 = $ i0 & 1073741824", "if $ i1 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org apache hadoop util line reader r0", "$ r2 = r3 record delimiter bytes", "if $ r2 == null goto label1", "r4 = org apache hadoop util line reader r0", "$ i3 = specialinvoke r4 read custom line r1 i0 i1", "return $ i3", "if $ r2 == null goto label1", "label r5 = org apache hadoop util line reader r0", "$ i2 = specialinvoke r5 read default line r1 i0 i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r1 set boolean \\ `` io native lib available\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "r3 = org apache hadoop util progress r0", "r2 = r3 add phase f0", "r2 set status r1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "label r11 = org apache hadoop util sequential number r0", "l1 = r11 get current value", "$ b2 = l0 cmp l1", "if $ b2 > = 0 goto label2", "r10 = new java lang illegal state exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r4 = r9 append \\ `` can not skip to less than the current value =\\ ``", "$ r5 = $ r4 append l1", "$ r6 = $ r5 append \\ `` where new value=\\ ``", "$ r7 = $ r6 append l0", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if $ b2 > = 0 goto label2", "label r12 = org apache hadoop util sequential number r0", "$ r1 = r12 current value", "$ z0 = $ r1 compare and set l1 l0", "if $ z0 == 0 goto label3", "return", "if $ z0 == 0 goto label3", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop util shell r0", "$ i0 = r1 exit code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "b2 = @ parameter3", "i3 = @ parameter4", "i4 = -1", "i5 = i0", "i6 = 0", "label if i6 > = i3 goto label3", "i4 = org apache hadoop util u t f8 byte array utils find byte r0 i5 i1 b2", "if i4 > = 0 goto label2", "return i4", "if i4 > = 0 goto label2", "label i5 = i4 + 1", "i6 = i6 + 1", "goto label1", "label if i6 > = i3 goto label3", "label return i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [], [17], []]}
{"nodes": ["$ r0 = org apache hadoop util version info common_version_info", "$ r1 = $ r0 _get build version", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop hdfs client hdfs admin r0", "$ r2 = r3 dfs", "$ r2 set quota r1 9223372036854775807l -1l", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop hdfs client hdfs admin r0", "$ r2 = r3 dfs", "$ r2 allow snapshot r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache hadoop hdfs client hdfs admin r0", "$ r3 = r4 dfs", "$ l0 = $ r3 add cache directive r1 r2", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache hadoop hdfs client hdfs admin r0", "$ r3 = r4 dfs", "$ r3 modify cache directive r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop hdfs client hdfs admin r0", "$ r2 = r3 dfs", "$ r2 modify cache pool r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop hdfs client hdfs admin r0", "$ r2 = r3 dfs", "$ r2 remove cache pool r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs client hdfs data input stream r0", "$ r1 = r2 in", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r25 = org apache hadoop hdfs d f s input stream r0", "$ r2 = r25 close", "$ z0 = $ r2 compare and set 0 1", "if $ z0 ! = 0 goto label1", "$ r21 = org apache hadoop hdfs d f s client log", "$ r21 debug \\ `` d f s input stream have be close already\\ ``", "return", "if $ z0 ! = 0 goto label1", "label r26 = org apache hadoop hdfs d f s input stream r0", "$ r3 = r26 dfs client", "$ r3 check open", "r27 = org apache hadoop hdfs d f s input stream r0", "$ r4 = r27 extend read buffer", "if $ r4 == null goto label2", "r28 = org apache hadoop hdfs d f s input stream r0", "$ r5 = r28 extend read buffer", "$ z1 = $ r5 be empty", "if $ z1 ! = 0 goto label2", "r22 = new java lang string builder", "specialinvoke r22 < init >", "r29 = org apache hadoop hdfs d f s input stream r0", "$ r8 = r29 extend read buffer", "r23 = new org apache hadoop hdfs d f s input stream $ 1", "r30 = org apache hadoop hdfs d f s input stream r0", "specialinvoke r23 < init > r30 r22", "r31 = org apache hadoop util identity hash store $ visitor r23", "$ r8 visit all r31", "$ r10 = org apache hadoop hdfs d f s client log", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r11 = r24 append \\ `` close file \\ ``", "r32 = org apache hadoop hdfs d f s input stream r0", "$ r12 = r32 src", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 append \\", "$ r15 = $ r14 append \\ `` unreleased byte buffer allocate by read \\ ``", "$ r16 = $ r15 append \\ `` please release \\ ``", "$ r17 = r22 to string", "$ r18 = $ r16 append $ r17", "$ r19 = $ r18 append \\ `` \\ ``", "$ r20 = $ r19 to string", "$ r10 warn $ r20", "label r33 = org apache hadoop hdfs d f s input stream r0", "specialinvoke r33 close current block reader", "specialinvoke r0 close"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs d f s output stream r0", "$ l0 = r1 initial file size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r22 = newarray org apache hadoop f block location [ 0 ]", "return $ r22", "if r0 ! = null goto label1", "label i0 = r0 size", "r1 = newarray org apache hadoop f block location [ i0 ]", "if i0 ! = 0 goto label2", "return r1", "if i0 ! = 0 goto label2", "label i8 = 0", "r2 = r0 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label9", "$ r8 = r2 next", "r3 = org apache hadoop hdfs protocol locate block $ r8", "$ z1 = org apache hadoop hdfs d f s util $ assertion disable", "if $ z1 ! = 0 goto label4", "if i8 < i0 goto label4", "$ r21 = new java lang assertion error", "specialinvoke $ r21 < init > \\ `` incorrect index\\ ``", "throw $ r21", "if i8 < i0 goto label4", "label r4 = r3 get location", "$ i1 = lengthof r4", "r5 = newarray java lang string [ $ i1 ]", "$ i2 = lengthof r4", "r6 = newarray java lang string [ $ i2 ]", "$ i3 = lengthof r4", "r7 = newarray java lang string [ $ i3 ]", "i9 = 0", "label $ i10 = lengthof r4", "if i9 > = $ i10 goto label6", "$ r12 = r4 [ i9 ]", "$ r13 = $ r12 get host name", "r5 [ i9 ] = $ r13", "$ r14 = r4 [ i9 ]", "$ r15 = $ r14 get xfer addr", "r6 [ i9 ] = $ r15", "$ r16 = new org apache hadoop net node base", "$ r18 = r6 [ i9 ]", "$ r17 = r4 [ i9 ]", "$ r19 = $ r17 get network location", "specialinvoke $ r16 < init > $ r18 $ r19", "$ r20 = $ r16 to string", "r7 [ i9 ] = $ r20", "i9 = i9 + 1", "goto label5", "if i9 > = $ i10 goto label6", "label r24 = r3 get cache location", "$ i4 = lengthof r24", "r25 = newarray java lang string [ $ i4 ]", "i11 = 0", "label $ i5 = lengthof r24", "if i11 > = $ i5 goto label8", "$ r10 = r24 [ i11 ]", "$ r11 = $ r10 get host name", "r25 [ i11 ] = $ r11", "i11 = i11 + 1", "goto label7", "if i11 > = $ i5 goto label8", "label $ r9 = new org apache hadoop f block location", "$ l6 = r3 get start offset", "$ l7 = r3 get block size", "$ z2 = r3 be corrupt", "specialinvoke $ r9 < init > r6 r5 r25 r7 $ l6 $ l7 $ z2", "r1 [ i8 ] = $ r9", "i8 = i8 + 1", "goto label3", "if $ z0 == 0 goto label9", "label return r1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [], [61], [62], [63], [64], [65], [66], [67], [68], [], [70], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = newarray java lang string [ 2 ]", "$ r1 [ 0 ] = \\ `` dfs namenode servicerpc-address\\ ``", "$ r1 [ 1 ] = \\ `` dfs namenode rpc-address\\ ``", "$ r2 = org apache hadoop hdfs d f s util get name service uris r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label4", "r5 = r3 [ i1 ]", "$ r6 = newarray java lang string [ 2 ]", "$ r6 [ 0 ] = r1", "$ r6 [ 1 ] = r2", "$ r7 = org apache hadoop hdfs d f s util add key suffix r5 $ r6", "r10 = r0 get $ r7", "if r10 == null goto label2", "r0 set r5 r10", "goto label3", "label i1 = i1 + 1", "goto label1", "if r10 == null goto label2", "label $ r8 = newarray java lang string [ 1 ]", "$ r8 [ 0 ] = r1", "$ r9 = org apache hadoop hdfs d f s util add key suffix r5 $ r8", "r11 = r0 get $ r9", "if r11 == null goto label3", "r0 set r5 r11", "label if i1 > = i0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get \\ `` dfs web authentication kerberos keytab\\ ``", "if r2 == null goto label1", "$ z0 = r2 be empty", "if $ z0 == 0 goto label2", "label $ r3 = r1", "goto label3", "label return $ r3", "if $ z0 == 0 goto label2", "label $ r3 = \\ `` dfs web authentication kerberos keytab\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org apache hadoop conf configuration", "specialinvoke $ r2 < init > 0", "$ r3 = r0 get \\ `` dfs http server keystore resource\\", "$ r2 add resource $ r3", "z0 = r0 get boolean \\ `` dfs client https need-auth\\", "$ r2 set boolean \\ `` dfs client https need-auth\\", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop hdfs distribute file system r0", "$ z0 = r2 set safe mode r1 0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop hdfs distribute file system r0", "$ r2 = r3 dfs", "$ r2 meta save r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs protocol block local path info r0", "$ r1 = r2 block", "$ l0 = $ r1 get num byte", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs protocol datanode info r0", "$ l0 = r1 dfs use", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs protocol datanode info r0", "$ l1 = r1 block pool use", "r2 = org apache hadoop hdfs protocol datanode info r0", "$ l0 = r2 capacity", "$ f0 = org apache hadoop hdfs d f s util get percent use $ l1 $ l0", "return $ f0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache hadoop hdfs protocol datanode info r0", "r1 xceiver count = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs protocol datanode local info r0", "$ r1 = r2 software version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ b0 = r0 read byte", "$ r1 = org apache hadoop hdfs protocol datatransfer op value of $ b0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r20 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0", "$ r3 = r20 sasl client", "if $ r3 == null goto label1", "r16 = new org apache hadoop hdfs protocol datatransfer i o stream pair", "r14 = new org apache hadoop security sasl input stream", "r21 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0", "$ r11 = r21 sasl client", "specialinvoke r14 < init > r2 $ r11", "r15 = new org apache hadoop security sasl output stream", "r22 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0", "$ r13 = r22 sasl client", "specialinvoke r15 < init > r1 $ r13", "r23 = java io input stream r14", "r24 = java io output stream r15", "specialinvoke r16 < init > r23 r24", "return r16", "if $ r3 == null goto label1", "label r19 = new org apache hadoop hdfs protocol datatransfer i o stream pair", "r17 = new org apache hadoop security sasl input stream", "r25 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0", "$ r6 = r25 sasl server", "specialinvoke r17 < init > r2 $ r6", "r18 = new org apache hadoop security sasl output stream", "r26 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0", "$ r8 = r26 sasl server", "specialinvoke r18 < init > r1 $ r8", "r27 = java io input stream r17", "r28 = java io output stream r18", "specialinvoke r19 < init > r27 r28", "return r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs protocol directory list r0", "$ i0 = r1 remain entry", "if $ i0 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs protocol hdfs file status r0", "$ r1 = r2 path", "$ i0 = lengthof $ r1", "if $ i0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs protocol locate block r0", "$ r1 = r2 locs", "r3 = org apache hadoop hdfs protocol datanode info [ ] $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r13 = new com google common util concurrent thread factory builder", "specialinvoke r13 < init >", "$ r2 = r13 set daemon 1", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r4 = r14 append \\ `` logger channel from single-thread executor to \\ ``", "r15 = org apache hadoop hdfs qjournal client i p c logger channel r0", "$ r5 = r15 addr", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "$ r8 = $ r2 set name format $ r7", "$ r9 = com google common util concurrent uncaught exception handler system exit", "$ r10 = $ r8 set uncaught exception handler $ r9", "$ r11 = $ r10 build", "$ r12 = java util concurrent executor new single thread executor $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache hadoop hdfs server balancer key manager r0", "$ z0 = r10 be block token enable", "if $ z0 ! = 0 goto label1", "$ r8 = org apache hadoop hdfs security token block block token secret manager dummy_token", "return $ r8", "if $ z0 ! = 0 goto label1", "label r11 = org apache hadoop hdfs server balancer key manager r0", "$ z1 = r11 should run", "if $ z1 ! = 0 goto label2", "r9 = new java io i o exception", "specialinvoke r9 < init > \\ `` can not get access token since block key updater be not running\\ ``", "throw r9", "if $ z1 ! = 0 goto label2", "label r12 = org apache hadoop hdfs server balancer key manager r0", "$ r4 = r12 block token secret manager", "$ r3 = org apache hadoop hdfs security token block block token secret manager $ access mode replace", "$ r2 = org apache hadoop hdfs security token block block token secret manager $ access mode copy", "r13 = java lang enum $ r3", "r14 = java lang enum $ r2", "$ r5 = java util enum set of r13 r14", "$ r6 = $ r4 generate token null r1 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache hadoop hdfs server common hdfs server constant $ block u c state complete", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 add r1", "if $ z0 == 0 goto label1", "$ b0 = 1", "goto label2", "label return $ b0", "if $ z0 == 0 goto label1", "label $ b0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "r2 = r0 [ i1 ]", "$ r3 = r2 get datanode descriptor", "$ r4 = r2 get storage type", "$ r3 increment block schedule $ r4", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r17 = new java lang string builder", "specialinvoke r17 < init >", "r19 = org apache hadoop hdfs server common storage r0", "$ r5 = r19 storage dirs", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r7 = r2 next", "r3 = org apache hadoop hdfs server common storage $ storage directory $ r7", "r18 = new java lang string builder", "specialinvoke r18 < init >", "$ r9 = r3 get root", "$ r10 = r18 append $ r9", "$ r11 = $ r10 append \\ `` \\ ``", "$ r12 = r3 get storage dir type", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 append \\ `` \\ ``", "$ r15 = $ r14 to string", "r17 append $ r15", "goto label1", "if $ z0 == 0 goto label2", "label $ r6 = r17 to string", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = org apache hadoop hdfs server common storage info r0", "r3 set layout version r1 r2", "r4 = org apache hadoop hdfs server common storage info r0", "r4 set namespace i d r1 r2", "r5 = org apache hadoop hdfs server common storage info r0", "r5 setc time r1 r2", "r6 = org apache hadoop hdfs server common storage info r0", "$ i0 = r6 layout version", "r7 = org apache hadoop hdfs server common storage info r0", "r7 set cluster id r1 $ i0 r2", "r8 = org apache hadoop hdfs server common storage info r0", "r8 check storage type r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "$ s0 = r0 read short", "$ r1 = org apache hadoop hdfs server datanode block metadata header read header $ s0 r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ l3 = l0 > > 16", "$ l4 = $ l3 & 255l", "i1 = int $ l4", "$ l5 = l0 > > 8", "$ l6 = $ l5 & 255l", "i2 = int $ l6", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` subdir\\ ``", "$ r4 = $ r3 append i1", "$ r5 = org apache hadoop hdfs server datanode datanode util sep", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` subdir\\ ``", "$ r8 = $ r7 append i2", "r1 = $ r8 to string", "$ r9 = new java io file", "specialinvoke $ r9 < init > r0 r1", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server datanode d n conf r0", "$ r1 = r2 trust channel resolver", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server datanode fsdataset impl volume failure info r0", "$ r1 = r2 fail storage location", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache hadoop hdfs server datanode fsdataset replica output stream r0", "$ r1 = r5 checksum out", "$ z0 = $ r1 instanceof java io file output stream", "if $ z0 == 0 goto label1", "r6 = org apache hadoop hdfs server datanode fsdataset replica output stream r0", "$ r2 = r6 checksum out", "$ r3 = java io file output stream $ r2", "$ r4 = $ r3 get channel", "$ r4 force 1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = new java io file", "r5 = org apache hadoop hdfs server datanode replica info r0", "$ r2 = r5 get dir", "r6 = org apache hadoop hdfs server datanode replica info r0", "$ r3 = r6 get block name", "specialinvoke r4 < init > $ r2 $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "return 0l"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r30 = org apache hadoop hdfs server datanode replica in pipeline r0", "$ r1 = r30 writer", "if $ r1 == null goto label4", "r31 = org apache hadoop hdfs server datanode replica in pipeline r0", "$ r2 = r31 writer", "$ r3 = java lang thread current thread", "if $ r2 == $ r3 goto label4", "r32 = org apache hadoop hdfs server datanode replica in pipeline r0", "$ r4 = r32 writer", "$ z0 = $ r4 be alive", "if $ z0 == 0 goto label4", "r33 = org apache hadoop hdfs server datanode replica in pipeline r0", "$ r5 = r33 writer", "$ r5 interrupt", "label r34 = org apache hadoop hdfs server datanode replica in pipeline r0", "$ r6 = r34 writer", "$ r6 join l0", "r35 = org apache hadoop hdfs server datanode replica in pipeline r0", "$ r7 = r35 writer", "$ z1 = $ r7 be alive", "if $ z1 == 0 goto label2", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r9 = r26 append \\ `` join on writer thread \\ ``", "r36 = org apache hadoop hdfs server datanode replica in pipeline r0", "$ r10 = r36 writer", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 append \\ `` timed out\\ ``", "r24 = $ r12 to string", "$ r14 = org apache hadoop hdfs server datanode data node log", "r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r15 = r27 append r24", "$ r16 = $ r15 append \\ `` \\n\\ ``", "r37 = org apache hadoop hdfs server datanode replica in pipeline r0", "$ r17 = r37 writer", "$ r18 = org apache hadoop util string utils get stack trace $ r17", "$ r19 = $ r16 append $ r18", "$ r20 = $ r19 to string", "$ r14 warn $ r20", "r28 = new java io i o exception", "specialinvoke r28 < init > r24", "throw r28", "if $ z1 == 0 goto label2", "label goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop hdfs server namenode checkpoint signature r0", "r2 blockpool i d = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["z0 = @ parameter0", "org apache hadoop hdfs server namenode edit log file output stream should skip fsync for test = z0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 get late snapshot id", "r2 = r1 get last i node", "$ r4 = r1 get i node -2", "r3 = $ r4 a directory", "$ z0 = r3 remove child r2 i0", "if $ z0 ! = 0 goto label1", "return -1l", "if $ z0 ! = 0 goto label1", "label $ z1 = r2 be in late snapshot i0", "if $ z1 ! = 0 goto label2", "$ i1 = org apache hadoop hdfs server namenode i node reference try remove reference r2", "if $ i1 < = 0 goto label2", "$ l2 = 0l", "goto label3", "label return $ l2", "if $ i1 < = 0 goto label2", "label $ l2 = 1l"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r17 = org apache hadoop hdfs server namenode f s edit log r0", "$ r4 = r17 cache", "$ r5 = $ r4 get", "$ r6 = org apache hadoop hdfs server namenode f s edit log op $ op instance cache $ r5", "$ r7 = org apache hadoop hdfs server namenode f s edit log op $ close op get instance $ r6", "$ r8 = $ r7 set path r1", "$ s0 = r2 get file replication", "$ r9 = $ r8 set replication $ s0", "$ l1 = r2 get modification time", "$ r10 = $ r9 set modification time $ l1", "$ l2 = r2 get access time", "$ r11 = $ r10 set access time $ l2", "$ l3 = r2 get preferred block size", "$ r12 = $ r11 set block size $ l3", "$ r13 = r2 get block", "r18 = org apache hadoop hdfs protocol block [ ] $ r13", "$ r14 = $ r12 set block r18", "$ r15 = r2 get permission status", "$ r16 = $ r14 set permission status $ r15", "r3 = org apache hadoop hdfs server namenode f s edit log op $ close op $ r16", "r19 = org apache hadoop hdfs server namenode f s edit log r0", "r20 = org apache hadoop hdfs server namenode f s edit log op r3", "r19 log edit r20", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache hadoop hdfs server namenode ha h a state r0", "r5 prepare to exit state r1", "r2 prepare to enter state r1", "r1 write lock", "label r6 = org apache hadoop hdfs server namenode ha h a state r0", "r6 exit state r1", "r1 set state r2", "r2 enter state r1", "specialinvoke r2 update last h a transition time", "label r1 write unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], []]}
{"nodes": ["r0 = @ this", "r9 = org apache hadoop hdfs server namenode ha i p failover proxy provider r0", "$ r1 = r9 nn proxy info", "if $ r1 ! = null goto label1", "return", "if $ r1 ! = null goto label1", "label r10 = org apache hadoop hdfs server namenode ha i p failover proxy provider r0", "$ r2 = r10 nn proxy info", "$ r3 = $ r2 proxy", "$ z0 = $ r3 instanceof java io closeable", "if $ z0 == 0 goto label2", "r11 = org apache hadoop hdfs server namenode ha i p failover proxy provider r0", "$ r6 = r11 nn proxy info", "$ r7 = $ r6 proxy", "$ r8 = java io closeable $ r7", "$ r8 close", "goto label3", "label return", "if $ z0 == 0 goto label2", "label r12 = org apache hadoop hdfs server namenode ha i p failover proxy provider r0", "$ r4 = r12 nn proxy info", "$ r5 = $ r4 proxy", "org apache hadoop ipc rpc stop proxy $ r5"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = org apache hadoop hdfs server namenode i node r0", "r2 add space consumed2 parent r1 z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server namenode i node file r0", "$ r1 = r2 get file under construction feature", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ z0 = r0 be snapshot", "if $ z0 ! = 0 goto label1", "$ i0 = r0 length", "if $ i0 < = 0 goto label1", "$ z2 = 1", "goto label2", "label com google common base precondition check argument $ z2", "$ r6 = r0 get last i node", "if $ r6 == null goto label3", "$ r5 = r0 get last i node", "$ z1 = $ r5 be directory", "if $ z1 == 0 goto label3", "$ z3 = 1", "goto label4", "label com google common base precondition check argument $ z3", "$ i1 = r0 length", "$ i2 = $ i1 + 1", "r3 = newarray org apache hadoop hdfs server namenode i node [ $ i2 ]", "$ r7 = r0 inodes", "$ i3 = lengthof r3", "$ i4 = $ i3 - 1", "java lang system arraycopy $ r7 0 r3 0 $ i4", "$ i5 = lengthof r3", "$ i6 = $ i5 - 1", "r3 [ $ i6 ] = r1", "$ r8 = r0 path", "$ i7 = lengthof $ r8", "$ i8 = $ i7 + 1", "r4 = newarray byte [ ] [ $ i8 ]", "$ r9 = r0 path", "$ i9 = lengthof r4", "$ i10 = $ i9 - 1", "java lang system arraycopy $ r9 0 r4 0 $ i10", "$ i11 = lengthof r4", "$ i12 = $ i11 - 1", "r4 [ $ i12 ] = r2", "$ r10 = new org apache hadoop hdfs server namenode i node in path", "$ i13 = r0 snapshot id", "specialinvoke $ r10 < init > r3 r4 0 $ i13", "return $ r10", "if $ z1 == 0 goto label3", "label $ z3 = 0", "if $ i0 < = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server namenode journal set r0", "$ r1 = r2 journal", "r3 = org apache hadoop hdfs server namenode journal set r0", "$ i0 = r3 minimum redundant journal", "$ z0 = org apache hadoop hdfs server namenode name node resource policy be resource available $ r1 $ i0", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache hadoop hdfs server namenode snapshot snapshot id_integer_comparator", "r4 = org apache hadoop hdfs server namenode snapshot abstract i node diff r0", "$ i0 = r4 snapshot id", "$ r3 = java lang integer value of $ i0", "$ i1 = $ r2 compare $ r3 r1", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server namenode startupprogress phase r0", "$ r1 = r2 description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache hadoop hdfs server namenode startupprogress startup progress r0", "$ z0 = specialinvoke r5 be complete", "if $ z0 ! = 0 goto label1", "r6 = org apache hadoop hdfs server namenode startupprogress startup progress r0", "$ r2 = r6 phase", "$ r3 = $ r2 get r1", "$ r4 = org apache hadoop hdfs server namenode startupprogress phase track $ r3", "$ l0 = org apache hadoop util time monotonic now", "$ r4 end time = $ l0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r5 = org apache hadoop hdfs server namenode startupprogress startup progress r0", "$ z0 = specialinvoke r5 be complete", "if $ z0 ! = 0 goto label1", "r6 = org apache hadoop hdfs server namenode startupprogress startup progress r0", "$ r2 = r6 phase", "$ r3 = $ r2 get r1", "$ r4 = org apache hadoop hdfs server namenode startupprogress phase track $ r3", "$ r4 size = l0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache hadoop hdfs server namenode startupprogress startup progress view r0", "$ r3 = r5 get status r1", "$ r4 = org apache hadoop hdfs server namenode startupprogress status complete", "if $ r3 ! = $ r4 goto label1", "return 1 0f", "if $ r3 ! = $ r4 goto label1", "label r6 = org apache hadoop hdfs server namenode startupprogress startup progress view r0", "l0 = r6 get total r1 r2", "r7 = org apache hadoop hdfs server namenode startupprogress startup progress view r0", "l1 = r7 get count r1 r2", "$ b2 = l0 cmp 0l", "if $ b2 < = 0 goto label2", "$ f0 = float l1", "$ f2 = 1 0f * $ f0", "$ f1 = float l0", "$ f3 = $ f2 $ f1", "$ f4 = org apache hadoop hdfs server namenode startupprogress startup progress view get bound percent $ f3", "goto label3", "label return $ f4", "if $ b2 < = 0 goto label2", "label $ f4 = 0 0f"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs server namenode startupprogress step r0", "$ r1 = r2 file", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = r1 [ i0 ]", "r33 = org apache hadoop hdfs tool d f s admin r0", "r3 = r33 get d f s", "r4 = r3 get conf", "r5 = r3 get uri", "z0 = org apache hadoop hdfs h a util be logical uri r4 r5", "if z0 == 0 goto label3", "r6 = r5 get host", "r7 = org apache hadoop hdfs h a util get proxy for all name node in nameservice r4 r6 class \\ `` lorg apache hadoop hdfs protocol client protocol \\ ``", "r8 = r7 iterator", "label $ z1 = r8 have next", "if $ z1 == 0 goto label2", "$ r19 = r8 next", "r9 = org apache hadoop hdfs name node proxy $ proxy and info $ r19", "$ r20 = r9 get proxy", "$ r21 = org apache hadoop hdfs protocol client protocol $ r20", "$ r21 meta save r2", "$ r23 = java lang system out", "r31 = new java lang string builder", "specialinvoke r31 < init >", "$ r24 = r31 append \\ `` create metasave file \\ ``", "$ r25 = $ r24 append r2", "$ r26 = $ r25 append \\ `` in the log \\ ``", "$ r27 = $ r26 append \\ `` directory of namenode \\ ``", "$ r28 = r9 get address", "$ r29 = $ r27 append $ r28", "$ r30 = $ r29 to string", "$ r23 println $ r30", "goto label1", "if $ z1 == 0 goto label2", "label goto label4", "label return 0", "if z0 == 0 goto label3", "label r3 meta save r2", "$ r11 = java lang system out", "r32 = new java lang string builder", "specialinvoke r32 < init >", "$ r12 = r32 append \\ `` create metasave file \\ ``", "$ r13 = $ r12 append r2", "$ r14 = $ r13 append \\ `` in the log \\ ``", "$ r15 = $ r14 append \\ `` directory of namenode \\ ``", "$ r16 = r3 get uri", "$ r17 = $ r15 append $ r16", "$ r18 = $ r17 to string", "$ r11 println $ r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop hdfs util canceler r0", "r2 cancel reason = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r3 = org apache hadoop hdfs util diff r0", "$ r2 = r3 create", "org apache hadoop hdfs util diff remove $ r2 i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache hadoop hdfs util diff $ list type delete", "r7 = org apache hadoop hdfs util diff r0", "$ r3 = r7 get list $ r2", "$ r4 = org apache hadoop hdfs util diff $ list type create", "r8 = org apache hadoop hdfs util diff r0", "$ r5 = r8 get list $ r4", "$ r6 = org apache hadoop hdfs util diff apply2 previous r1 $ r3 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs util enum counter r0", "r1 reset 0l", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop hdfs util light weight hash set r0", "$ i0 = r1 capacity", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org apache hadoop hdfs util reference count map r0", "$ r3 = r7 reference map", "$ r4 = $ r3 get r1", "r2 = org apache hadoop hdfs util reference count map $ reference counter $ r4", "if r2 == null goto label1", "$ i0 = r2 decrement and get ref count", "if $ i0 ! = 0 goto label1", "r8 = org apache hadoop hdfs util reference count map r0", "$ r5 = r8 reference map", "$ r5 remove r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r6 = new com google common collect immutable list $ builder", "specialinvoke r6 < init >", "r7 = org apache hadoop hdfs util reference count map r0", "$ r2 = r7 reference map", "$ r3 = $ r2 key set", "$ r4 = r6 add all $ r3", "$ r5 = $ r4 build", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop hdfs util reference count map r0", "$ r1 = r2 reference map", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r17 = org apache hadoop hdfs web web hdfs file system r0", "$ r4 = r17 statistic", "$ r4 increment write ops 1", "r3 = org apache hadoop hdfs web resource put op param $ op createsymlink", "r16 = new org apache hadoop hdfs web web hdfs file system $ fs path runner", "$ r6 = newarray org apache hadoop hdfs web resource param [ 2 ]", "r14 = new org apache hadoop hdfs web resource destination param", "r18 = org apache hadoop hdfs web web hdfs file system r0", "$ r8 = r18 make qualify r1", "$ r9 = $ r8 to uri", "$ r10 = $ r9 get path", "specialinvoke r14 < init > $ r10", "$ r6 [ 0 ] = r14", "r15 = new org apache hadoop hdfs web resource create parent param", "$ r12 = java lang boolean value of z0", "specialinvoke r15 < init > $ r12", "$ r6 [ 1 ] = r15", "r19 = org apache hadoop hdfs web web hdfs file system r0", "r20 = org apache hadoop hdfs web resource http op param $ op r3", "r21 = org apache hadoop hdfs web resource param [ ] $ r6", "specialinvoke r16 < init > r19 r20 r2 r21", "r16 run", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r8 = new org apache hadoop fs path", "r9 = org apache hadoop mapred yarn output file r0", "$ r3 = specialinvoke r9 get attempt output dir", "specialinvoke r8 < init > $ r3 \\ `` file out\\ ``", "r10 = org apache hadoop mapred yarn output file r0", "$ r4 = r10 l dir alloc", "$ r5 = r8 to string", "r11 = org apache hadoop mapred yarn output file r0", "$ r6 = r11 conf", "r12 = org apache hadoop conf configuration $ r6", "$ r7 = $ r4 get local path for write $ r5 l0 r12", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache hadoop mapreduce v2 app m r app master $ job finish event handler", "r3 = org apache hadoop mapreduce v2 app m r app master r0", "specialinvoke r2 < init > r3 null", "r4 = org apache hadoop yarn event event handler r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "$ r7 = r1 task state", "r2 = $ r7 to string", "r3 = r1 id", "r4 = r3 get task id", "r22 = org apache hadoop mapreduce v2 app speculate default speculator r0", "$ r8 = r22 context", "$ r9 = r4 get job id", "r5 = $ r8 get job $ r9", "if r5 ! = null goto label1", "return", "if r5 ! = null goto label1", "label r6 = r5 get task r4", "if r6 ! = null goto label2", "label r23 = org apache hadoop mapreduce v2 app speculate default speculator r0", "$ r10 = r23 estimator", "$ r10 update attempt r1 l0", "$ r11 = org apache hadoop mapreduce v2 api record task attempt state run", "$ r12 = $ r11 name", "$ z0 = r2 equal $ r12", "if $ z0 == 0 goto label3", "r24 = org apache hadoop mapreduce v2 app speculate default speculator r0", "$ r20 = r24 run task", "$ r19 = java lang boolean true", "$ r20 put if absent r4 $ r19", "goto label4", "label return", "if $ z0 == 0 goto label3", "label r25 = org apache hadoop mapreduce v2 app speculate default speculator r0", "$ r14 = r25 run task", "$ r13 = java lang boolean true", "$ r14 remove r4 $ r13", "$ r15 = org apache hadoop mapreduce v2 api record task attempt state start", "$ r16 = $ r15 name", "$ z2 = r2 equal $ r16", "if $ z2 ! = 0 goto label4", "r26 = org apache hadoop mapreduce v2 app speculate default speculator r0", "$ r17 = r26 run task attempt statistic", "$ r17 remove r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "return class \\ `` lorg apache hadoop mapreduce v2 app webapp single counter block \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org apache hadoop mapred local distribute cache manager r0", "$ r3 = r18 local classpaths", "$ i0 = $ r3 size", "r2 = newarray java net url [ $ i0 ]", "i2 = 0", "label r19 = org apache hadoop mapred local distribute cache manager r0", "$ r4 = r19 local classpaths", "$ i1 = $ r4 size", "if i2 > = $ i1 goto label2", "r16 = new java io file", "r20 = org apache hadoop mapred local distribute cache manager r0", "$ r9 = r20 local classpaths", "$ r10 = $ r9 get i2", "$ r11 = java lang string $ r10", "specialinvoke r16 < init > $ r11", "$ r12 = r16 to u r i", "$ r13 = $ r12 to u r l", "r2 [ i2 ] = $ r13", "$ r15 = org apache hadoop mapred local distribute cache manager log", "$ r14 = r2 [ i2 ]", "$ r15 info $ r14", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label r17 = new org apache hadoop mapred local distribute cache manager $ 1", "r21 = org apache hadoop mapred local distribute cache manager r0", "specialinvoke r17 < init > r21 r2 r1", "r22 = java security privilege action r17", "$ r6 = java security access controller do privilege r22", "$ r7 = java lang class loader $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapred cluster status r0", "$ l0 = r1 tt expiry interval", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapred cluster status r0", "$ i0 = r1 max_reduce_tasks", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache hadoop mapred job tracker $ state run", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r7 = r24 append \\ `` counter \\ ``", "r27 = org apache hadoop mapred counter r0", "$ i0 = r27 size", "$ r8 = $ r7 append $ i0", "$ r9 = $ r8 to string", "r1 info $ r9", "r28 = org apache hadoop mapred counter r0", "r2 = r28 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r10 = r2 next", "r3 = org apache hadoop mapred counter $ group $ r10", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r12 = r25 append \\ `` \\ ``", "$ r13 = r3 get display name", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 to string", "r1 info $ r15", "r4 = r3 iterator", "label $ z1 = r4 have next", "if $ z1 == 0 goto label3", "$ r16 = r4 next", "r5 = org apache hadoop mapred counter $ counter $ r16", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r18 = r26 append \\ `` \\ ``", "$ r19 = r5 get display name", "$ r20 = $ r18 append $ r19", "$ r21 = $ r20 append \\ `` =\\ ``", "$ l1 = r5 get counter", "$ r22 = $ r21 append $ l1", "$ r23 = $ r22 to string", "r1 info $ r23", "goto label2", "if $ z1 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "i0 = @ parameter1", "r3 = org apache hadoop mapred cumulative periodic stats r0", "$ r1 = r3 state", "if $ r1 ! = null goto label1", "return", "if $ r1 ! = null goto label1", "label r4 = org apache hadoop mapred cumulative periodic stats r0", "$ r2 = r4 state", "$ d2 = $ r2 current accumulation", "r5 = org apache hadoop mapred cumulative periodic stats r0", "$ i1 = r5 previous value", "$ i2 = i0 - $ i1", "$ d1 = double $ i2", "$ d3 = $ d2 + $ d1", "$ r2 current accumulation = $ d3", "r6 = org apache hadoop mapred cumulative periodic stats r0", "r6 previous value = i0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred file split r0", "$ r1 = r2 f", "$ l0 = $ r1 get length", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache hadoop mapred job client r0", "r6 = org apache hadoop conf configuration r1", "r5 set conf r6", "r4 = new org apache hadoop mapreduce cluster", "r7 = org apache hadoop conf configuration r1", "specialinvoke r4 < init > r7", "r8 = org apache hadoop mapred job client r0", "r8 cluster = r4", "$ r3 = org apache hadoop security user group information get current user", "r9 = org apache hadoop mapred job client r0", "r9 client ugi = $ r3", "$ i0 = r1 get int \\ `` yarn app mapreduce client job max-retries\\", "r10 = org apache hadoop mapred job client r0", "r10 max retry = $ i0", "$ l1 = r1 get long \\ `` yarn app mapreduce client job retry-interval\\", "r11 = org apache hadoop mapred job client r0", "r11 retry interval = $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred job client r0", "$ r1 = r2 cluster", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred job client r0", "$ r1 = r2 task output filter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred job conf r0", "$ r1 = r2 get \\ `` mapreduce job jar\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = org apache hadoop mapred job conf r0", "r1 = r11 get \\ `` mapreduce job work dir\\ ``", "if r1 == null goto label1", "r9 = new org apache hadoop fs path", "specialinvoke r9 < init > r1", "return r9", "if r1 == null goto label1", "label $ r2 = org apache hadoop f file system get r0", "r7 = $ r2 get work directory", "$ r3 = r7 to string", "r12 = org apache hadoop mapred job conf r0", "r12 set \\ `` mapreduce job work dir\\", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache hadoop mapred job conf r0", "r1 set int \\ `` mapreduce job maps\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred job conf r0", "$ r1 = r2 get \\ `` session id\\", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapred job conf r0", "$ i0 = r1 get int \\ `` mapreduce reduce failure maxpercent\\", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred job conf r0", "$ r1 = r2 get \\ `` mapreduce job queuename\\", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache hadoop mapred job i d for name r1", "r3 = org apache hadoop mapred jobcontrol job r0", "r3 set assign job i d $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred job profile r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org apache hadoop mapred join composite input split r0", "$ r2 = r9 split", "if null ! = $ r2 goto label1", "r7 = new java io i o exception", "specialinvoke r7 < init > \\ `` uninitialized input split\\ ``", "throw r7", "if null ! = $ r2 goto label1", "label r10 = org apache hadoop mapred join composite input split r0", "$ i1 = r10 fill", "r11 = org apache hadoop mapred join composite input split r0", "$ r3 = r11 split", "$ i0 = lengthof $ r3", "if $ i1 ! = $ i0 goto label2", "r8 = new java io i o exception", "specialinvoke r8 < init > \\ `` too many splits\\ ``", "throw r8", "if $ i1 ! = $ i0 goto label2", "label r12 = org apache hadoop mapred join composite input split r0", "$ r4 = r12 split", "r13 = org apache hadoop mapred join composite input split r0", "$ i2 = r13 fill", "$ i3 = $ i2 + 1", "r14 = org apache hadoop mapred join composite input split r0", "r14 fill = $ i3", "$ r4 [ $ i2 ] = r1", "r15 = org apache hadoop mapred join composite input split r0", "$ l4 = r15 totsize", "$ l5 = r1 get length", "$ l6 = $ l4 + $ l5", "r16 = org apache hadoop mapred join composite input split r0", "r16 totsize = $ l6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache hadoop mapred join composite input split r0", "$ r1 = r4 split", "$ r2 = $ r1 [ i0 ]", "$ r3 = $ r2 get location", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r9 = org apache hadoop mapred join composite record reader r0", "$ r1 = r9 jc", "$ z0 = $ r1 have next", "if $ z0 == 0 goto label1", "r10 = org apache hadoop mapred join composite record reader r0", "$ r7 = r10 jc", "$ r8 = $ r7 key", "return $ r8", "if $ z0 == 0 goto label1", "label r11 = org apache hadoop mapred join composite record reader r0", "$ r2 = r11 q", "$ z1 = $ r2 be empty", "if $ z1 ! = 0 goto label2", "r12 = org apache hadoop mapred join composite record reader r0", "$ r3 = r12 q", "$ r4 = $ r3 peek", "$ r5 = org apache hadoop mapred join composable record reader $ r4", "$ r6 = $ r5 key", "return $ r6", "if $ z1 ! = 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r9 = org apache hadoop mapred join composite record reader r0", "$ r2 = r9 kid", "$ i0 = lengthof $ r2", "r1 = newarray org apache hadoop io writable [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "r10 = org apache hadoop mapred join composite record reader r0", "$ r4 = r10 kid", "$ r5 = $ r4 [ i2 ]", "$ r6 = $ r5 create value", "$ r7 = org apache hadoop io writable $ r6", "r1 [ i2 ] = $ r7", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label r8 = new org apache hadoop mapred join tuple writable", "specialinvoke r8 < init > r1", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r6 = org apache hadoop mapred join composite record reader r0", "$ r3 = r6 kid", "if $ r3 == null goto label2", "r7 = org apache hadoop mapred join composite record reader r0", "r1 = r7 kid", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r2 = r1 [ i1 ]", "r8 = org apache hadoop mapred record reader r2", "r8 close", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r9 = org apache hadoop mapred join composite record reader r0", "$ r4 = r9 jc", "if $ r4 == null goto label3", "r10 = org apache hadoop mapred join composite record reader r0", "$ r5 = r10 jc", "$ r5 close", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapred join wrap record reader r0", "$ z0 = r1 empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapred join wrap record reader r0", "$ r1 = r2 create value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache hadoop mapred lib aggregate value aggregator job create value aggregator job r0", "org apache hadoop mapred job client run job r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org apache hadoop mapred lib chain r0", "$ r1 = r5 mapper", "$ i0 = $ r1 size", "if $ i0 < = 0 goto label1", "r6 = org apache hadoop mapred lib chain r0", "$ r2 = r6 mapper", "$ r3 = $ r2 get 0", "$ r4 = org apache hadoop mapred mapper $ r3", "goto label2", "label return $ r4", "if $ i0 < = 0 goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r6 = org apache hadoop mapred lib multiple output r0", "$ r3 = r6 record writer", "$ r4 = $ r3 value", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = org apache hadoop mapred record writer $ r5", "r2 close null", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache hadoop mapred pipe output handler r0", "$ r2 = r3 reporter", "$ r2 set status r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 get boolean \\ `` mapreduce pipe isjavarecordreader\\", "return $ z0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop mapred queue manager r0", "$ r1 = r3 leaf queue", "$ r2 = $ r1 key set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new org apache hadoop util pure java crc32", "specialinvoke r4 < init >", "r5 = org apache hadoop mapred spill record r0", "r6 = java util zip checksum r4", "r5 write to file r1 r2 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r2 = org apache hadoop mapred task r0", "r2 encrypt spill key = r1", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r11 = @ parameter0", "r0 = @ parameter1", "$ r5 = new java util array list", "specialinvoke $ r5 < init >", "$ r6 = r11 get file system r0", "r12 = $ r6 make qualified r11", "$ r7 = r12 to uri", "r2 = $ r7 get scheme", "$ r8 = org apache hadoop f file system get all statistic", "r3 = $ r8 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r9 = r3 next", "r4 = org apache hadoop f file system $ statistic $ r9", "$ r10 = r4 get scheme", "$ z1 = $ r10 equal r2", "if $ z1 == 0 goto label2", "$ r5 add r4", "label goto label1", "if $ z0 == 0 goto label3", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java io file", "$ r2 = org apache hadoop mapred task log get user log dir", "$ r3 = r0 to string", "specialinvoke $ r1 < init > $ r2 $ r3", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = specialinvoke r0 get task i d", "r3 = org apache hadoop mapreduce task i d $ r1", "$ r2 = org apache hadoop mapred task i d downgrade r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop mapred task status r0", "r2 next record range = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 0l"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapred task status r0", "$ l0 = r1 start time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop mapred task r0", "$ r1 = r3 task status", "$ r2 = $ r1 get phase", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapred task status r0", "$ l0 = r1 output size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org apache hadoop crypto crypto codec get instance r0", "$ z0 = org apache hadoop mapreduce crypto utils be encrypt spill enable r0", "if $ z0 == 0 goto label1", "$ r3 = r1 get cipher suite", "$ i0 = $ r3 get algorithm block size", "r2 = newarray byte [ $ i0 ]", "r1 generate secure random r2", "return r2", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org apache hadoop util string utils uri to string r0", "r1 set \\ `` mapreduce job cache files\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = r0 get string collection \\ `` mapreduce job classpath archives\\ ``", "r1 = java util array list $ r3", "$ i0 = r1 size", "if $ i0 ! = 0 goto label1", "return null", "if $ i0 ! = 0 goto label1", "label $ i1 = r1 size", "r2 = newarray org apache hadoop fs path [ $ i1 ]", "i3 = 0", "label $ i2 = r1 size", "if i3 > = $ i2 goto label3", "$ r4 = new org apache hadoop fs path", "$ r5 = r1 get i3", "$ r6 = java lang string $ r5", "specialinvoke $ r4 < init > $ r6", "r2 [ i3 ] = $ r4", "i3 = i3 + 1", "goto label2", "if i3 > = $ i2 goto label3", "label return r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache hadoop mapreduce job $ job state run", "r4 = org apache hadoop mapreduce job r0", "specialinvoke r4 ensure state $ r1", "r5 = org apache hadoop mapreduce job r0", "$ r2 = r5 status", "$ r3 = $ r2 get job file", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache hadoop mapreduce job $ job state run", "r5 = org apache hadoop mapreduce job r0", "specialinvoke r5 ensure state $ r1", "r6 = org apache hadoop mapreduce job r0", "r6 update status", "r7 = org apache hadoop mapreduce job r0", "$ r2 = r7 status", "$ r3 = $ r2 get state", "$ r4 = org apache hadoop mapreduce job status $ state succeed", "if $ r3 ! = $ r4 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r3 ! = $ r4 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop mapreduce job r0", "r2 kill task r1 1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "$ r2 = org apache hadoop mapreduce job $ job state run", "r11 = org apache hadoop mapreduce job r0", "specialinvoke r11 ensure state $ r2", "label r12 = org apache hadoop mapreduce job r0", "$ r4 = r12 ugi", "r9 = new org apache hadoop mapreduce job $ 7", "r13 = org apache hadoop mapreduce job r0", "specialinvoke r9 < init > r13", "r14 = java security privilege exception action r9", "$ r5 = $ r4 do a r14", "$ r6 = org apache hadoop mapreduce counter $ r5", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org apache hadoop mapreduce job $ job state define", "r3 = org apache hadoop mapreduce job r0", "specialinvoke r3 ensure state $ r1", "r4 = org apache hadoop mapreduce job r0", "$ r2 = r4 conf", "$ r2 set num reduce task i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 get int \\ `` mapreduce client completion pollinterval\\", "if i0 > = 1 goto label1", "$ r1 = org apache hadoop mapreduce job log", "$ r1 warn \\ `` mapreduce client completion pollinterval have be set to an invalid value replace with 5000\\ ``", "i0 = 5000", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce jobhistory job finish event r0", "$ r1 = r2 job id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org apache hadoop mapreduce jobhistory job inited event r0", "$ r1 = r4 datum", "$ r2 = $ r1 job status", "$ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce jobhistory job inited event r0", "$ r1 = r2 datum", "$ z0 = $ r1 uberized", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = org apache hadoop mapreduce jobhistory job submit event r0", "$ r1 = r6 datum", "$ r2 = $ r1 workflow id", "if $ r2 == null goto label1", "r7 = org apache hadoop mapreduce jobhistory job submit event r0", "$ r3 = r7 datum", "$ r4 = $ r3 workflow id", "$ r5 = $ r4 to string", "return $ r5", "if $ r2 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapreduce jobhistory reduce attempt finish event r0", "$ l0 = r1 shuffle finish time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop mapreduce job status r0", "r2 history file = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache hadoop fs path", "specialinvoke $ r1 < init > r0 \\ `` job jar\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache hadoop fs path", "specialinvoke $ r1 < init > r0 \\ `` files\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache hadoop mapreduce lib input combine file input format r0", "r1 min split size node = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1l"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache hadoop mapreduce lib join tuple writable r0", "$ r1 = r2 write", "$ z0 = $ r1 get i0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r10 = org apache hadoop mapreduce lib output file output format r0", "$ r4 = r10 get output committer r1", "r3 = org apache hadoop mapreduce lib output file output committer $ r4", "r9 = new org apache hadoop fs path", "$ r6 = r3 get work path", "r11 = org apache hadoop mapreduce job context r1", "$ r7 = org apache hadoop mapreduce lib output file output format get output name r11", "$ r8 = org apache hadoop mapreduce lib output file output format get unique file r1 $ r7 r2", "specialinvoke r9 < init > $ r6 $ r8", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get configuration", "$ r2 = $ r1 get \\ `` mapreduce output basename\\", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i1 < i0 goto label1", "r4 = new org apache hadoop mapreduce lib partition key field helper $ key description", "specialinvoke r4 < init >", "r4 begin field idx = i0", "r4 end field idx = i1", "r5 = org apache hadoop mapreduce lib partition key field helper r0", "r5 key spec see = 1", "r6 = org apache hadoop mapreduce lib partition key field helper r0", "$ r3 = r6 all key spec", "$ r3 add r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r0 unset \\ `` mapreduce job credential binary\\ ``", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce task job context impl r0", "$ r1 = r2 job id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache hadoop mapreduce task job context impl r0", "$ r1 = r3 conf", "r4 = org apache hadoop conf configuration $ r1", "$ r2 = org apache hadoop mapreduce filecache distribute cache get cache archive r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org apache hadoop mapreduce task reduce map host r0", "$ r1 = r5 map", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "$ r4 = org apache hadoop mapreduce task reduce map host $ state idle", "r6 = org apache hadoop mapreduce task reduce map host r0", "r6 state = $ r4", "goto label2", "label r8 = org apache hadoop mapreduce task reduce map host r0", "$ r3 = r8 state", "return $ r3", "if $ z0 == 0 goto label1", "label $ r2 = org apache hadoop mapreduce task reduce map host $ state pending", "r7 = org apache hadoop mapreduce task reduce map host r0", "r7 state = $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce task task attempt context impl r0", "$ r1 = r2 task id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce task i d r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache hadoop mapreduce task report r0", "$ f0 = r1 progress", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop mapreduce task report r0", "$ r1 = r2 counter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "z0 = @ parameter2", "org apache hadoop mapreduce util process tree terminate process r0", "org apache hadoop mapreduce util process tree sig kill r0 0 l0 z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r12 = null", "label $ r1 = newarray java lang string [ 3 ]", "$ r1 [ 0 ] = \\ `` kill\\ ``", "$ r1 [ 1 ] = \\ `` -0\\ ``", "$ r1 [ 2 ] = r0", "$ r2 = new org apache hadoop util shell $ shell command executor", "specialinvoke $ r2 < init > $ r1", "r12 = $ r2", "$ r2 execute", "label goto label5", "label $ i0 = $ r2 get exit code", "if $ i0 ! = 0 goto label6", "$ z0 = 1", "goto label7", "label return $ z0", "if $ i0 ! = 0 goto label6", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop yarn api record timeline timeline domain r0", "$ r1 = r2 reader", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache hadoop yarn api record timeline timeline domain r0", "r2 domains = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache hadoop yarn server api container context r0", "$ r1 = r2 user", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r2 = new org apache hadoop yarn client api impl a h s client impl", "specialinvoke r2 < init >", "r3 = org apache hadoop yarn client api a h s client r2", "return r3"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache hadoop yarn client api n m token cache nm_token_cache", "$ r2 set token r0 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r2 = new org apache hadoop yarn client api impl timeline client impl", "specialinvoke r2 < init >", "r3 = org apache hadoop yarn client api timeline client r2", "return r3"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop yarn client client r m proxy get token service r0 \\ `` yarn resourcemanager address\\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = r0 get scheme", "if $ r2 ! = null goto label1", "$ r14 = \\ `` \\ ``", "goto label2", "label r1 = $ r14", "r15 = \\ `` \\ ``", "$ r3 = r0 get host", "if $ r3 == null goto label4", "r15 = r0 get host", "$ r4 = r0 get user info", "if $ r4 == null goto label3", "$ r9 = new java lang string builder", "specialinvoke $ r9 < init >", "$ r10 = r0 get user info", "$ r11 = $ r9 append $ r10", "$ r12 = $ r11 append \\ `` @ \\ ``", "$ r13 = $ r12 append r15", "r15 = $ r13 to string", "label $ i0 = r0 get port", "if $ i0 < = 0 goto label4", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append r15", "$ r7 = $ r6 append \\ `` \\ ``", "$ i1 = r0 get port", "$ r8 = $ r7 append $ i1", "r15 = $ r8 to string", "label $ r16 = new org apache hadoop fs path", "$ r17 = new java net uri", "$ r18 = r0 get file", "specialinvoke $ r17 < init > r1 r15 $ r18 null null", "$ r19 = $ r17 normalize", "specialinvoke $ r16 < init > $ r19", "return $ r16", "if $ r2 ! = null goto label1", "label $ r14 = r0 get scheme"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop yarn util string helper csv_joiner", "$ r2 = $ r1 join r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache hadoop yarn util string helper _splitter", "$ r2 = $ r1 split r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache hadoop yarn util yarn version info yarn_version_info", "$ r1 = $ r0 _get date", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache hadoop yarn util yarn version info yarn_version_info", "$ r1 = $ r0 _get user", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = org apache hadoop yarn util yarn version info yarn_version_info", "$ r1 = $ r0 _get url", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org hdr histogram abstract histogram r0", "r1 clear count", "r2 = org hdr histogram abstract histogram r0", "specialinvoke r2 reset max value 0l", "r3 = org hdr histogram abstract histogram r0", "specialinvoke r3 reset min non zero value 9223372036854775807l", "r4 = org hdr histogram abstract histogram r0", "r4 set normalize index offset 0", "r5 = org hdr histogram abstract histogram r0", "r5 start time stamp msec = 9223372036854775807l", "r6 = org hdr histogram abstract histogram r0", "r6 end time stamp msec = 0l", "r7 = org hdr histogram abstract histogram r0", "r7 tag = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org hdr histogram abstract histogram r0", "$ d0 = r1 integer to double value conversion ratio", "r2 = org hdr histogram abstract histogram r0", "r2 shift value right i0 $ d0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org hdr histogram double histogram r0", "$ l0 = r1 configure high to lowest value ratio", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org hdr histogram double recorder r0", "$ r1 = r2 get interval histogram null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org hdr histogram histogram log reader r0", "$ d0 = r1 start time sec", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r2 = org hdr histogram histogram log reader r0", "$ r1 = specialinvoke r2 next interval histogram d0 d1 1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org hdr histogram histogram log writer r0", "$ r1 = r2 log", "$ r1 println \\ `` \\\\\\ `` start timestamp\\\\\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org hdr histogram packedarray abstract pack long array r0", "$ l0 = r1 end time stamp msec", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org hdr histogram packedarray iteration value r0", "$ i0 = r1 index", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r7 = org hdr histogram single writer double recorder r0", "$ r2 = r7 record phaser", "l0 = $ r2 writer critical section enter", "label r8 = org hdr histogram single writer double recorder r0", "$ r3 = r8 active histogram", "$ r3 record value with expect interval d0 d1", "label r9 = org hdr histogram single writer double recorder r0", "$ r4 = r9 record phaser", "$ r4 writer critical section exit l0", "goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org hibernate boot metadata source r0", "$ r2 = r5 xml binding", "r6 = org hibernate boot metadata source r0", "$ r3 = r6 get xml mapping binder access", "$ r4 = $ r3 bind r1", "$ r2 add $ r4", "r7 = org hibernate boot metadata source r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = jakarta persistence inheritance type value of r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb basic r0", "$ r1 = r2 temporal", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb basic r0", "r2 convert = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb cascade type r0", "r2 cascade remove = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb cascade type r0", "r2 cascade detach = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb map spi jaxb collection table r0", "$ r1 = r5 unique constraint", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb map spi jaxb collection table r0", "r6 unique constraint = r4", "label r7 = org hibernate boot jaxb map spi jaxb collection table r0", "$ r2 = r7 unique constraint", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb column r0", "$ r1 = r2 updatable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb column r0", "r2 column definition = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb convert r0", "$ r1 = r2 converter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb convert r0", "r2 converter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb element collection r0", "r2 map key temporal = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org hibernate boot jaxb map spi jaxb element collection r0", "$ r1 = r5 map key attribute override", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = org hibernate boot jaxb map spi jaxb element collection r0", "r6 map key attribute override = r4", "label r7 = org hibernate boot jaxb map spi jaxb element collection r0", "$ r2 = r7 map key attribute override", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb element collection r0", "r2 collection table = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb entity r0", "$ r1 = r2 id class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb entity r0", "r2 id class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb entity r0", "r2 entity listener = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb generate value r0", "r2 strategy = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate boot jaxb map spi jaxb index r0", "$ r1 = r2 column list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb name stored procedure query r0", "r2 procedure name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb post load r0", "r2 method name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb sequence generator r0", "r2 allocation size = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate boot jaxb map spi jaxb table generator r0", "r2 pk column name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = @ parameter0", "z0 = @ parameter1", "r1 = @ parameter2", "r6 = org hibernate boot model name camel case to underscore name strategy r0", "$ z1 = r6 be case insensitive r1", "if $ z1 == 0 goto label1", "$ r3 = java util locale root", "r4 = r4 to low case $ r3", "label r5 = new org hibernate boot model name identifier", "specialinvoke r5 < init > r4 z0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get sqm function registry", "$ r2 = $ r1 name descriptor builder \\ `` bit_and\\ ``", "$ r3 = $ r2 set exact argument count 2", "$ r3 register", "$ r5 = r0 get sqm function registry", "$ r5 register alternate key \\ `` bitand\\", "$ r6 = r0 get sqm function registry", "$ r7 = $ r6 name descriptor builder \\ `` bit_or\\ ``", "$ r8 = $ r7 set exact argument count 2", "$ r8 register", "$ r10 = r0 get sqm function registry", "$ r10 register alternate key \\ `` bitor\\", "$ r11 = r0 get sqm function registry", "$ r12 = $ r11 name descriptor builder \\ `` bit_xor\\ ``", "$ r13 = $ r12 set exact argument count 2", "$ r13 register", "$ r15 = r0 get sqm function registry", "$ r15 register alternate key \\ `` bitxor\\", "$ r16 = r0 get sqm function registry", "$ r17 = $ r16 name descriptor builder \\ `` bit_not\\ ``", "$ r18 = $ r17 set exact argument count 1", "$ r18 register", "$ r20 = r0 get sqm function registry", "$ r20 register alternate key \\ `` bitnot\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get sqm function registry", "r9 = new org hibernate dialect function s q l server every any emulation", "$ r3 = r0 get type configuration", "specialinvoke r9 < init > $ r3 1", "r11 = org hibernate query sqm function sqm function descriptor r9", "$ r1 register \\ `` every\\", "$ r5 = r0 get sqm function registry", "r10 = new org hibernate dialect function s q l server every any emulation", "$ r7 = r0 get type configuration", "specialinvoke r10 < init > $ r7 0", "r12 = org hibernate query sqm function sqm function descriptor r10", "$ r5 register \\ `` any\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get sqm function registry", "$ r2 = r0 get type configuration", "$ r3 = $ r2 get basic type registry", "$ r4 = org hibernate type standard basic type string", "$ r5 = $ r3 resolve $ r4", "$ r6 = $ r1 register ternary quaternary pattern \\ `` overlay\\", "$ r6 set argument list signature \\ `` string place replacement from start [ for length ] \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get sqm function registry", "$ r2 = $ r1 name descriptor builder \\ `` format\\", "$ r3 = r0 get type configuration", "$ r4 = $ r3 get basic type registry", "$ r5 = org hibernate type standard basic type string", "$ r6 = $ r4 resolve $ r5", "$ r7 = $ r2 set invariant type $ r6", "$ r8 = $ r7 set exact argument count 2", "$ r9 = $ r8 set argument list signature \\ `` datetime a pattern \\ ``", "$ r9 register", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = org hibernate dialect pagination abstract limit handler for_update_pattern", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label5", "r2 = r0 [ i1 ]", "if r2 == null goto label4", "$ z0 = r2 instanceof java lang string", "if $ z0 == 0 goto label3", "$ r3 = java lang string r2", "$ z1 = org hibernate internal util string helper be not empty $ r3", "if $ z1 == 0 goto label4", "return r2", "if $ z1 == 0 goto label4", "label i1 = i1 + 1", "goto label2", "if $ z0 == 0 goto label3", "label return r2", "label if i1 > = i0 goto label5", "label return null"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org hibernate jpa event internal callback factory jpa call back enable r0", "if $ z0 == 0 goto label1", "r3 = new org hibernate jpa event internal callback registry impl", "specialinvoke r3 < init >", "r5 = org hibernate jpa event internal callback registry implementor r3", "return r5", "if $ z0 == 0 goto label1", "label r4 = new org hibernate jpa event internal empty callback registry impl", "specialinvoke r4 < init >", "r6 = org hibernate jpa event internal callback registry implementor r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org hibernate metamodel internal inflight runtime metamodel r0", "$ r2 = r5 entity persister map", "$ r3 = $ r2 get r1", "$ r4 = org hibernate persister entity entity persister $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = org hibernate query sqm function sqm function registry r0", "$ r4 = r9 function map", "$ r5 = $ r4 put r1 r2", "r3 = org hibernate query sqm function sqm function descriptor $ r5", "$ r6 = org hibernate query sqm function sqm function registry log", "$ r6 debugf \\ `` registered sqm function template [ % s ] under % s prior registration be % s\\", "r10 = org hibernate query sqm function sqm function registry r0", "$ r7 = r10 alternate key map", "$ r7 remove r1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new org hibernate query sqm produce function pattern function descriptor builder", "$ r4 = org hibernate query sqm function function kind aggregate", "r6 = org hibernate query sqm function sqm function registry r0", "specialinvoke r5 < init > r6 r1 $ r4 r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org hibernate query sqm function sqm function registry r0", "$ r3 = r6 name descriptor builder r1 r1", "$ r4 = $ r3 set invariant type r2", "$ r5 = $ r4 register", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org hibernate query sqm function sqm function registry r0", "$ r2 = r3 name descriptor builder r1 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new org hibernate query sqm produce function name function descriptor builder", "$ r4 = org hibernate query sqm function function kind normal", "r6 = org hibernate query sqm function sqm function registry r0", "specialinvoke r5 < init > r6 r1 $ r4 r2", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org hibernate query sqm internal domain parameter xref r0", "$ r1 = r3 sqm params by query param", "if $ r1 == null goto label1", "r4 = org hibernate query sqm internal domain parameter xref r0", "$ r2 = r4 sqm params by query param", "$ z0 = $ r2 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org hibernate jpamodelgen xml jaxb foreign key r0", "$ r1 = r2 disable foreign key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org hibernate jpamodelgen xml jaxb foreign key r0", "r2 disable foreign key = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "return 1", "if r1 ! = null goto label1", "label $ r3 = r1 to string", "$ r4 = $ r3 trim", "$ i0 = $ r4 length", "if $ i0 < = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ i0 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "label r6 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "$ i0 = r6 current position", "r7 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "$ r1 = r7 token list", "$ i1 = $ r1 size", "if $ i0 > = $ i1 goto label2", "r8 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "$ r2 = r8 token list", "r9 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "$ i2 = r9 current position", "$ r3 = $ r2 get $ i2", "$ r4 = org hibernate validator internal engine messageinterpolation parser token $ r3", "r10 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "r10 current token = $ r4", "r11 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "$ i3 = r11 current position", "$ i4 = $ i3 + 1", "r12 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "r12 current position = $ i4", "r13 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "$ r5 = r13 current token", "$ z0 = $ r5 be parameter", "if $ z0 == 0 goto label1", "r14 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "r14 current token available = 1", "return 1", "if $ i0 > = $ i1 goto label2", "label r15 = org hibernate validator internal engine messageinterpolation parser token iterator r0", "r15 all interpolation term process = 1", "return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], []]}
{"nodes": ["r0 = @ parameter0", "org hibernate validator internal util contract assert not null r0", "r1 = org hibernate validator internal util collection helper new array list", "$ r4 = newarray org hibernate validator internal util classhierarchy filter [ 0 ]", "$ r5 = org hibernate validator internal util classhierarchy class hierarchy helper get hierarchy r0 $ r4", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r6 = r2 next", "r3 = java lang class $ r6", "$ r7 = org hibernate validator internal util privilegedactions get method action r3", "r10 = java security privilege action $ r7", "$ r8 = org hibernate validator cdi internal inherited method helper run r10", "$ r9 = java lang object [ ] $ r8", "java util collection add all r1 $ r9", "goto label1", "if $ z0 == 0 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org hibernate validator cdi internal validation provider helper r0", "$ z0 = r1 be hibernate validator", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com boundary high_scale_lib non block hash set long r0", "$ r2 = r6 _map", "$ l0 = r1 long value", "$ r3 = com boundary high_scale_lib non block hash set long v", "$ r4 = $ r2 put if absent $ l0 $ r3", "$ r5 = com boundary high_scale_lib non block hash set long v", "if $ r4 == $ r5 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r4 == $ r5 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = com boundary high_scale_lib non block hash set long r0", "$ r1 = r2 _map", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = org cliffc high_scale_lib abstract entry r0", "$ r1 = r5 _key", "if $ r1 ! = null goto label1", "$ i2 = 0", "goto label2", "label r7 = org cliffc high_scale_lib abstract entry r0", "$ r3 = r7 _val", "if $ r3 ! = null goto label3", "$ i3 = 0", "goto label4", "label $ i4 = $ i2 ^ $ i3", "return $ i4", "if $ r3 ! = null goto label3", "label r8 = org cliffc high_scale_lib abstract entry r0", "$ r4 = r8 _val", "$ i3 = $ r4 hash code", "if $ r1 ! = null goto label1", "label r6 = org cliffc high_scale_lib abstract entry r0", "$ r2 = r6 _key", "$ i2 = $ r2 hash code"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof java lang long", "if $ z0 == 0 goto label1", "$ r2 = java lang long r1", "$ l0 = $ r2 long value", "r3 = org cliffc high_scale_lib non block hash map long r0", "$ z1 = r3 contain key $ l0", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com zaxxer hikari hikari config r0", "$ r1 = r2 metric registry", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com zaxxer hikari util queue sequence synchronizer r0", "$ r1 = r2 sequence", "$ l0 = $ r1 get", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com zaxxer hikari hikari config r0", "$ z0 = r1 be isolate internal query", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "i1 = @ parameter3", "l8 = 0l", "i9 = i0", "i2 = i0 + i1", "label if i9 > = i2 goto label2", "$ l4 = r0 [ i9 ]", "$ l3 = r1 [ i9 ]", "$ l5 = $ l4 & $ l3", "$ i6 = java lang long bit count $ l5", "$ l7 = long $ i6", "l8 = l8 + $ l7", "i9 = i9 + 1", "goto label1", "label if i9 > = i2 goto label2", "label return l8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "b1 = @ parameter1", "r3 = com carrotsearch hppc byte stack r0", "r3 ensure buffer space 2", "r4 = com carrotsearch hppc byte stack r0", "$ r1 = r4 buffer", "r5 = com carrotsearch hppc byte stack r0", "$ i2 = r5 element count", "$ i3 = $ i2 + 1", "r6 = com carrotsearch hppc byte stack r0", "r6 element count = $ i3", "$ r1 [ $ i2 ] = b0", "r7 = com carrotsearch hppc byte stack r0", "$ r2 = r7 buffer", "r8 = com carrotsearch hppc byte stack r0", "$ i4 = r8 element count", "$ i5 = $ i4 + 1", "r9 = com carrotsearch hppc byte stack r0", "r9 element count = $ i5", "$ r2 [ $ i4 ] = b1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "b7 = @ parameter1", "b1 = @ parameter2", "$ z0 = com carrotsearch hppc char byte hash map $ assertion disable", "if $ z0 ! = 0 goto label1", "r3 = com carrotsearch hppc char byte hash map r0", "$ i6 = r3 assign", "r4 = com carrotsearch hppc char byte hash map r0", "$ i4 = r4 mask", "$ i5 = $ i4 + 1", "if $ i6 < $ i5 goto label1", "r2 = new java lang assertion error", "specialinvoke r2 < init >", "throw r2", "if $ i6 < $ i5 goto label1", "label r5 = com carrotsearch hppc char byte hash map r0", "$ z1 = r5 contain key c0", "if $ z1 == 0 goto label2", "r6 = com carrotsearch hppc char byte hash map r0", "b8 = r6 get c0", "$ i3 = b8 + b1", "b7 = byte $ i3", "label r7 = com carrotsearch hppc char byte hash map r0", "r7 put c0 b7", "return b7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "c1 = @ parameter1", "r3 = com carrotsearch hppc char stack r0", "r3 ensure buffer space 2", "r4 = com carrotsearch hppc char stack r0", "$ r1 = r4 buffer", "r5 = com carrotsearch hppc char stack r0", "$ i2 = r5 element count", "$ i3 = $ i2 + 1", "r6 = com carrotsearch hppc char stack r0", "r6 element count = $ i3", "$ r1 [ $ i2 ] = c0", "r7 = com carrotsearch hppc char stack r0", "$ r2 = r7 buffer", "r8 = com carrotsearch hppc char stack r0", "$ i4 = r8 element count", "$ i5 = $ i4 + 1", "r9 = com carrotsearch hppc char stack r0", "r9 element count = $ i5", "$ r2 [ $ i4 ] = c1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "c1 = @ parameter1", "c2 = @ parameter2", "c3 = @ parameter3", "r5 = com carrotsearch hppc char stack r0", "r5 ensure buffer space 4", "r6 = com carrotsearch hppc char stack r0", "$ r1 = r6 buffer", "r7 = com carrotsearch hppc char stack r0", "$ i4 = r7 element count", "$ i5 = $ i4 + 1", "r8 = com carrotsearch hppc char stack r0", "r8 element count = $ i5", "$ r1 [ $ i4 ] = c0", "r9 = com carrotsearch hppc char stack r0", "$ r2 = r9 buffer", "r10 = com carrotsearch hppc char stack r0", "$ i6 = r10 element count", "$ i7 = $ i6 + 1", "r11 = com carrotsearch hppc char stack r0", "r11 element count = $ i7", "$ r2 [ $ i6 ] = c1", "r12 = com carrotsearch hppc char stack r0", "$ r3 = r12 buffer", "r13 = com carrotsearch hppc char stack r0", "$ i8 = r13 element count", "$ i9 = $ i8 + 1", "r14 = com carrotsearch hppc char stack r0", "r14 element count = $ i9", "$ r3 [ $ i8 ] = c2", "r15 = com carrotsearch hppc char stack r0", "$ r4 = r15 buffer", "r16 = com carrotsearch hppc char stack r0", "$ i10 = r16 element count", "$ i11 = $ i10 + 1", "r17 = com carrotsearch hppc char stack r0", "r17 element count = $ i11", "$ r4 [ $ i10 ] = c3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["d0 = @ parameter0", "com carrotsearch hppc hash container check load factor d0 0 0 1 0", "$ i0 = com carrotsearch hppc hash container expand at count 1073741824 d0", "$ i1 = $ i0 - 1", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = nu validator htmlparser dom html document builder r0", "r2 entity resolver = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = nu validator htmlparser impl attribute name r0", "$ i0 = r1 flag", "$ i1 = $ i0 & 16", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "$ r2 = new java lang string", "specialinvoke $ r2 < init > r0 0 i0", "$ r3 = $ r2 intern", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = nu validator htmlparser impl state snapshot r0", "$ z0 = r1 need to drop l f", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = nu validator htmlparser io encode r0", "$ r1 = r2 actual html encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache htrace trace start span r0 r1 null", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r2 = r13 append \\ `` [ request date=\\ ``", "r14 = org apache http client cache http cache entry r0", "$ r3 = r14 request date", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` response date=\\ ``", "r15 = org apache http client cache http cache entry r0", "$ r6 = r15 response date", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` status line=\\ ``", "r16 = org apache http client cache http cache entry r0", "$ r9 = r16 status line", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 append \\ `` ] \\ ``", "$ r12 = $ r11 to string", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http client cache input limit r0", "r1 reach = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl client cache cache config r0", "$ i0 = r1 max cache entry", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache http impl client cache cache config r0", "$ z0 = r1 be share cache", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache http impl client cache cache config r0", "r1 asynchronous worker idle lifetime sec = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = com netflix hystrix collapser request collapser factory global scoped collapsers", "$ r0 clear", "$ r1 = com netflix hystrix collapser request collapser factory request scoped collapsers", "$ r1 clear", "com netflix hystrix util hystrix timer reset", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = com netflix hystrix hystrix collapser r0", "$ r1 = r5 collapser factory", "$ r2 = $ r1 get scope", "$ r3 = $ r2 name", "$ r4 = com netflix hystrix hystrix collapser $ scope value of $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = com netflix hystrix hystrix counter concurrent thread execute", "$ i0 = $ r0 get", "return $ i0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = com netflix hystrix hystrix thread pool metric r0", "$ r2 = r3 cumulative counter stream", "$ r1 = com netflix hystrix hystrix event type $ thread pool reject", "$ l0 = $ r2 get late count $ r1", "return $ l0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com netflix hystrix hystrix thread pool metric r0", "$ r1 = r2 roll thread pool max concurrency stream", "$ l0 = $ r1 get late roll max", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com netflix hystrix strategy concurrency hystrix request context get context for current thread", "$ r4 = $ r2 state", "r6 = new com netflix hystrix strategy concurrency hystrix request variable default $ lazy initializer", "r7 = com netflix hystrix strategy concurrency hystrix request variable default r0", "specialinvoke r6 < init > r7 r1 null", "$ r4 put r0 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new com netflix hystrix strategy hystrix plugins", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = com netflix hystrix strategy hystrix plugins get instance", "$ r1 = $ r0 notifier", "$ r1 set null", "$ r2 = com netflix hystrix strategy hystrix plugins get instance", "$ r3 = $ r2 concurrency strategy", "$ r3 set null", "$ r4 = com netflix hystrix strategy hystrix plugins get instance", "$ r5 = $ r4 metric publisher", "$ r5 set null", "$ r6 = com netflix hystrix strategy hystrix plugins get instance", "$ r7 = $ r6 property factory", "$ r7 set null", "$ r8 = com netflix hystrix strategy hystrix plugins get instance", "$ r9 = $ r8 command execution hook", "$ r9 set null", "com netflix hystrix strategy metric hystrix metric publisher factory reset", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r9 = com netflix hystrix util long max updater r0", "$ r4 = r9 cell", "if $ r4 ! = null goto label1", "r10 = com netflix hystrix util long max updater r0", "$ l10 = r10 base", "$ b11 = $ l10 cmp l0", "if $ b11 > = 0 goto label3", "r11 = com netflix hystrix util long max updater r0", "$ z1 = r11 ca base $ l10 l0", "if $ z1 ! = 0 goto label3", "label z2 = 1", "$ r5 = com netflix hystrix util long max updater thread hash code", "$ r6 = $ r5 get", "$ r7 = com netflix hystrix util striped64 $ hash code $ r6", "i4 = $ r7 code", "if $ r4 == null goto label2", "$ i5 = lengthof $ r4", "if $ i5 < 1 goto label2", "$ i6 = $ i5 - 1", "$ i7 = $ i6 & i4", "$ r8 = $ r4 [ $ i7 ]", "if $ r8 == null goto label2", "$ l8 = $ r8 value", "$ b9 = $ l8 cmp l0", "if $ b9 > = 0 goto label3", "$ z0 = $ r8 cas $ l8 l0", "z2 = $ z0", "if $ z0 ! = 0 goto label3", "label r12 = com netflix hystrix util long max updater r0", "r12 retry update l0 $ r7 z2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new software amazon ion impl bin symbols $ 2", "specialinvoke r2 < init > r0", "r3 = java util iterator r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = software amazon ion system ion text writer builder standard", "$ r1 = $ r0 with pretty print", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = software amazon ion system ion text writer builder r0", "$ r1 = r2 my lst minimize", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = software amazon ion system ion writer builder base r0", "$ r1 = r3 my import", "$ r2 = software amazon ion system ion writer builder base safe copy $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get project", "r17 = r1 get reference \\ `` ivy instance\\ ``", "if r17 == null goto label3", "$ r13 = r17 get class", "$ r14 = $ r13 get class loader", "$ r15 = org apache ivy ant ivy ant setting class $ org $ apache $ ivy $ ant $ ivy ant setting", "if $ r15 ! = null goto label1", "$ r18 = org apache ivy ant ivy ant setting class $ \\ `` org apache ivy ant ivy ant settings\\ ``", "org apache ivy ant ivy ant setting class $ org $ apache $ ivy $ ant $ ivy ant setting = $ r18", "goto label2", "label $ r16 = $ r18 get class loader", "if $ r14 == $ r16 goto label3", "r0 log \\ `` ivy instance reference an ivysettings define in an other classloader an new default one will be use in this project \\", "r17 = null", "label if r17 == null goto label4", "$ z0 = r17 instanceof org apache ivy ant ivy ant setting", "if $ z0 ! = 0 goto label4", "r20 = new org apache tool ant build exception", "r19 = new java lang string buffer", "specialinvoke r19 < init >", "$ r7 = r19 append \\ `` ivy instance reference a \\ ``", "$ r8 = r17 get class", "$ r9 = $ r8 get name", "$ r10 = $ r7 append $ r9", "$ r11 = $ r10 append \\ `` an not an ivy ant setting please don\\'t use this reference id \\ ``", "$ r12 = $ r11 to string", "specialinvoke r20 < init > $ r12", "r22 = java lang throwable r20", "throw r22", "if $ z0 ! = 0 goto label4", "label if r17 ! = null goto label5", "r0 log \\ `` no ivysettings find for the default reference \\'ivy instance\\ ' a default instance will be used\\", "r21 = new org apache ivy ant ivy ant setting", "specialinvoke r21 < init >", "r21 set project r1", "r1 add reference \\ `` ivy instance\\", "r21 create ivy engine r0", "return r21", "label if r17 ! = null goto label5", "label $ r3 = org apache ivy ant ivy ant setting r17", "return $ r3", "if $ r15 ! = null goto label1", "label $ r18 = org apache ivy ant ivy ant setting class $ org $ apache $ ivy $ ant $ ivy ant setting"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = org apache ivy ant ivy ant setting r0", "$ z0 = r12 auto register", "if $ z0 == 0 goto label1", "r13 = org apache ivy ant ivy ant setting r0", "$ r4 = r13 get project", "r14 = org apache ivy ant ivy ant setting r0", "$ r5 = r14 id", "$ r6 = $ r4 get reference $ r5", "if $ r6 ! = r0 goto label1", "r15 = org apache ivy ant ivy ant setting r0", "$ r7 = r15 get project", "$ r8 = $ r7 get reference", "r16 = org apache ivy ant ivy ant setting r0", "$ r9 = r16 id", "$ r8 remove $ r9", "r17 = org apache ivy ant ivy ant setting r0", "r17 auto register = 0", "label r18 = org apache ivy ant ivy ant setting r0", "r18 id = r1", "r19 = org apache ivy ant ivy ant setting r0", "$ r11 = r19 get project", "if $ r11 == null goto label2", "r20 = org apache ivy ant ivy ant setting r0", "$ r2 = r20 get project", "r21 = org apache ivy ant ivy ant setting r0", "$ r3 = r21 id", "$ r2 add reference $ r3 r0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache ivy core deliver deliver option r0", "r2 confs = r1", "r3 = org apache ivy core deliver deliver option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = new java util hash map", "r4 = org apache ivy core event ivy event r0", "$ r2 = r4 attribute", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache ivy core event retrieve end retrieve event r0", "$ l0 = r1 total copied size", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org apache ivy core ivy context", "$ r1 = org apache ivy core ivy context get context", "specialinvoke $ r0 < init > $ r1", "$ r2 = org apache ivy core ivy context push context $ r0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r4 = null", "r1 = org apache ivy core ivy context get current stack", "$ i0 = r1 size", "i1 = $ i0 - 1", "label if i1 < 0 goto label2", "if r4 ! = null goto label2", "$ r3 = r1 get i1", "r2 = org apache ivy core ivy context $ r3", "r4 = r2 peek r0", "i1 = i1 + -1", "goto label1", "if r4 ! = null goto label2", "label return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r22 = org apache ivy core ivy context r0", "$ r6 = r22 context map", "entermonitor $ r6", "label r23 = org apache ivy core ivy context r0", "$ r7 = r23 context map", "$ z0 = $ r7 contain key r1", "if $ z0 ! = 0 goto label2", "r24 = org apache ivy core ivy context r0", "$ r16 = r24 context map", "r19 = new java util link list", "specialinvoke r19 < init >", "$ r16 put r1 r19", "label r25 = org apache ivy core ivy context r0", "$ r8 = r25 context map", "r4 = $ r8 get r1", "$ z1 = r4 instanceof java util list", "if $ z1 == 0 goto label3", "$ r14 = java util list r4", "$ r14 add 0 r2", "goto label4", "label exitmonitor $ r6", "label goto label8", "label return", "if $ z1 == 0 goto label3", "label r21 = new java lang runtime exception", "r20 = new java lang string buffer", "specialinvoke r20 < init >", "$ r11 = r20 append \\ `` can not push to non list object \\ ``", "$ r12 = $ r11 append r4", "$ r13 = $ r12 to string", "specialinvoke r21 < init > $ r13", "throw r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache ivy core module descriptor default dependency artifact descriptor r0", "$ r2 = r3 confs", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "r9 = org apache ivy core module id module id r0", "$ r2 = r9 get organisation", "$ r3 = r8 append $ r2", "$ r4 = $ r3 append \\ `` #@ #\\ ``", "r10 = org apache ivy core module id module id r0", "$ r5 = r10 get name", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache ivy core module id module id r0", "$ r1 = r2 attribute", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r20 = new java util link hash set", "specialinvoke r20 < init >", "r19 = null", "if z0 ! = 0 goto label1", "r21 = org apache ivy core report configuration resolve report r0", "r19 = specialinvoke r21 get evict mrids", "label r22 = org apache ivy core report configuration resolve report r0", "$ r8 = r22 dependency report", "$ r9 = $ r8 value", "r3 = $ r9 iterator", "label $ z3 = r3 have next", "if $ z3 == 0 goto label8", "$ r14 = r3 next", "r4 = java util collection $ r14", "r5 = r4 iterator", "label $ z4 = r5 have next", "if $ z4 == 0 goto label7", "$ r15 = r5 next", "r6 = org apache ivy core report artifact download report $ r15", "if r1 == null goto label4", "$ r18 = r6 get download status", "if $ r18 == r1 goto label4", "goto label3", "if $ r18 == r1 goto label4", "label if z0 ! = 0 goto label5", "$ r16 = r6 get artifact", "$ r17 = $ r16 get module revision id", "$ z2 = r19 contain $ r17", "if $ z2 ! = 0 goto label6", "label r20 add r6", "label goto label3", "if $ z4 == 0 goto label7", "label goto label2", "if $ z3 == 0 goto label8", "label $ i0 = r20 size", "$ r10 = newarray org apache ivy core report artifact download report [ $ i0 ]", "$ r11 = r20 to array $ r10", "$ r12 = org apache ivy core report artifact download report [ ] $ r11", "$ r13 = org apache ivy core report artifact download report [ ] $ r12", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r2 = org apache ivy core repository repository management engine r0", "specialinvoke r2 ensure load", "r3 = org apache ivy core repository repository management engine r0", "$ r1 = r3 revision", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r16 = new java util link hash set", "specialinvoke r16 < init >", "r17 = org apache ivy core resolve ivy node r0", "$ r6 = r17 usage", "$ r7 = $ r6 get configuration r1", "r18 = org apache ivy core resolve ivy node r0", "specialinvoke r18 add all if not null r16 $ r7", "r19 = org apache ivy core resolve ivy node r0", "$ r8 = r19 merge usage", "$ r9 = $ r8 value", "r3 = $ r9 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r14 = r3 next", "r4 = org apache ivy core resolve ivy node usage $ r14", "$ r15 = r4 get configuration r1", "r20 = org apache ivy core resolve ivy node r0", "specialinvoke r20 add all if not null r16 $ r15", "goto label1", "if $ z0 == 0 goto label2", "label $ i0 = r16 size", "$ r10 = newarray java lang string [ $ i0 ]", "$ r11 = r16 to array $ r10", "$ r12 = java lang string [ ] $ r11", "$ r13 = java lang string [ ] $ r12", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org apache ivy core resolve resolve engine r0", "$ r4 = r8 setting", "$ r5 = r1 get artifact", "$ r6 = $ r5 get module revision id", "r3 = $ r4 get resolver $ r6", "$ r7 = r3 download r1 r2", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache ivy core retrieve retrieve report r0", "$ r1 = r2 retrieve root", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new java util array list", "r4 = org apache ivy core retrieve retrieve report r0", "$ r2 = r4 copy file", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r31 = new java util array list", "specialinvoke r31 < init >", "r32 = new java util hash map", "specialinvoke r32 < init >", "$ r14 = r1 get organisation", "r33 = org apache ivy core search search engine r0", "specialinvoke r33 add matcher r2 $ r14 r32 \\ `` organisation\\ ``", "$ r15 = r1 get name", "r34 = org apache ivy core search search engine r0", "specialinvoke r34 add matcher r2 $ r15 r32 \\ `` module\\ ``", "$ r16 = newarray java lang string [ 2 ]", "$ r16 [ 0 ] = \\ `` organisation\\ ``", "$ r16 [ 1 ] = \\ `` module\\ ``", "r35 = org apache ivy core search search engine r0", "$ r17 = r35 setting", "$ r18 = $ r17 get resolvers", "r6 = $ r18 iterator", "label $ z0 = r6 have next", "if $ z0 == 0 goto label4", "$ r23 = r6 next", "r7 = org apache ivy plugins resolver dependency resolver $ r23", "r8 = r7 list token value $ r16 r32", "i2 = 0", "label $ i1 = lengthof r8", "if i2 > = $ i1 goto label3", "$ r24 = r8 [ i2 ]", "$ r25 = $ r24 get \\ `` organisation\\ ``", "r9 = java lang string $ r25", "$ r26 = r8 [ i2 ]", "$ r27 = $ r26 get \\ `` module\\ ``", "r10 = java lang string $ r27", "r11 = org apache ivy core module id module id new instance r9 r10", "$ r28 = r7 get namespace", "$ r29 = $ r28 get to system transformer", "$ r30 = org apache ivy plugins namespace name space helper transform r11 $ r29", "r31 add $ r30", "i2 = i2 + 1", "goto label2", "if i2 > = $ i1 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label $ i0 = r31 size", "$ r19 = newarray org apache ivy core module id module id [ $ i0 ]", "$ r20 = r31 to array $ r19", "$ r21 = org apache ivy core module id module id [ ] $ r20", "$ r22 = org apache ivy core module id module id [ ] $ r21", "return $ r22"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ this", "r7 = org apache ivy core setting ivy setting r0", "$ r2 = r7 list ignore", "r8 = org apache ivy core setting ivy setting r0", "$ r1 = r8 list ignore", "$ i0 = $ r1 size", "$ r3 = newarray java lang string [ $ i0 ]", "$ r4 = $ r2 to array $ r3", "$ r5 = java lang string [ ] $ r4", "$ r6 = java lang string [ ] $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r19 = org apache ivy core sort module in sort r0", "$ r4 = r19 caller", "if $ r4 == null goto label3", "r18 = new java util link list", "specialinvoke r18 < init >", "r20 = org apache ivy core sort module in sort r0", "$ r6 = r20 module", "$ r7 = $ r6 get module revision id", "r18 add $ r7", "r16 = r1", "label if r16 == r0 goto label2", "$ r13 = r16 module", "$ r14 = $ r13 get module revision id", "r18 add $ r14", "r16 be loop intermediate element = 1", "r21 = org apache ivy core sort module in sort r0", "$ r15 = r21 loop element", "$ r15 add r16", "r16 = r16 caller", "goto label1", "label if r16 == r0 goto label2", "label r22 = org apache ivy core sort module in sort r0", "$ r8 = r22 module", "$ r9 = $ r8 get module revision id", "r18 add $ r9", "$ i0 = r18 size", "$ r10 = newarray org apache ivy core module id module revision id [ $ i0 ]", "$ r11 = r18 to array $ r10", "$ r12 = org apache ivy core module id module revision id [ ] $ r11", "r17 = org apache ivy core module id module revision id [ ] $ r12", "r2 handle circular dependency r17", "return 1", "if $ r4 == null goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], []]}
{"nodes": ["r22 = @ parameter0", "r0 = @ parameter1", "if r22 ! = null goto label01", "r22 = \\ `` \\ ``", "label $ r3 = new java util array list", "specialinvoke $ r3 < init >", "$ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "b12 = 7", "i13 = 0", "label $ i14 = r22 length", "if i13 > = $ i14 goto label12", "c3 = r22 char at i13", "$ i6 = r0 index of c3", "if $ i6 < 0 goto label03", "$ z5 = 1", "goto label04", "label z1 = $ z5", "if c3 ! = 34 goto label05", "$ z6 = 1", "goto label06", "label z2 = $ z6", "if z1 == 0 goto label07", "$ b10 = b12 & 2", "if $ b10 < = 0 goto label07", "$ r19 = $ r4 to string", "$ r20 = $ r19 trim", "$ r3 add $ r20", "$ i11 = $ r4 length", "$ r4 delete 0 $ i11", "if $ b10 < = 0 goto label07", "label if z2 == 0 goto label08", "$ b9 = b12 & 4", "if $ b9 < = 0 goto label08", "$ r4 append c3", "b12 = 9", "goto label11", "label i13 = i13 + 1", "goto label02", "if $ b9 < = 0 goto label08", "label if z2 == 0 goto label09", "$ b8 = b12 & 8", "if $ b8 < = 0 goto label09", "label $ b7 = b12 & 1", "if $ b7 < = 0 goto label10", "label $ r11 = new java lang illegal argument exception", "$ r12 = new java lang string buffer", "specialinvoke $ r12 < init >", "$ r13 = $ r12 append \\ `` invalid delimit string \\ ``", "$ r14 = $ r13 append r22", "$ r15 = $ r14 to string", "specialinvoke $ r11 < init > $ r15", "throw $ r11", "if c3 ! = 34 goto label05", "label $ z6 = 0", "if $ i6 < 0 goto label03", "label $ z5 = 0", "if i13 > = $ i14 goto label12", "label $ i4 = $ r4 length", "if $ i4 < = 0 goto label13", "$ r9 = $ r4 to string", "$ r10 = $ r9 trim", "$ r3 add $ r10", "label $ i5 = $ r3 size", "$ r5 = newarray java lang string [ $ i5 ]", "$ r6 = $ r3 to array $ r5", "$ r7 = java lang string [ ] $ r6", "$ r8 = java lang string [ ] $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org apache ivy plugins repository ssh abstract ssh base repository r0", "r2 = specialinvoke r18 parse u r i r1", "r19 = org apache ivy plugins repository ssh abstract ssh base repository r0", "r7 = r19 get host", "r20 = org apache ivy plugins repository ssh abstract ssh base repository r0", "i5 = r20 get port", "r21 = org apache ivy plugins repository ssh abstract ssh base repository r0", "r8 = r21 get user", "r22 = org apache ivy plugins repository ssh abstract ssh base repository r0", "r9 = r22 get user password", "if r2 == null goto label4", "$ r4 = r2 get scheme", "if $ r4 == null goto label4", "$ r5 = r2 get host", "if $ r5 == null goto label1", "r7 = r2 get host", "label $ i0 = r2 get port", "if $ i0 == -1 goto label2", "i5 = r2 get port", "label $ r6 = r2 get user info", "if $ r6 == null goto label4", "r10 = r2 get user info", "$ i1 = r10 index of \\ `` \\ ``", "if $ i1 ! = -1 goto label3", "r8 = r10", "goto label4", "label if r7 ! = null goto label5", "r17 = new java lang illegal argument exception", "specialinvoke r17 < init > \\ `` miss host information host should be provide either directly on the repository or in the connection uri\\ ``", "throw r17", "label if r7 ! = null goto label5", "label if r8 ! = null goto label7", "r23 = org apache ivy plugins repository ssh abstract ssh base repository r0", "r11 = specialinvoke r23 request credential r7", "if r11 == null goto label6", "r8 = r11 get user name", "r9 = r11 get passwd", "goto label7", "label $ r12 = org apache ivy plugins repository ssh ssh cache get instance", "r24 = org apache ivy plugins repository ssh abstract ssh base repository r0", "$ r13 = r24 get key file", "r25 = org apache ivy plugins repository ssh abstract ssh base repository r0", "$ r14 = r25 get key file password", "r26 = org apache ivy plugins repository ssh abstract ssh base repository r0", "$ r15 = r26 get pas file", "$ r16 = $ r12 get session r7 i5 r8 r9 $ r13 $ r14 $ r15", "return $ r16", "if r11 == null goto label6", "label org apache ivy util message error \\ `` username be not set\\ ``", "if $ i1 ! = -1 goto label3", "label $ i2 = r10 index of \\ `` \\ ``", "r8 = r10 substring 0 $ i2", "$ i3 = r10 index of \\ `` \\ ``", "$ i4 = $ i3 + 1", "r9 = r10 substring $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ this", "r18 = org apache ivy plugins repository vfs vfs resource r0", "specialinvoke r18 init", "r17 = new java util array list", "specialinvoke r17 < init >", "label r19 = org apache ivy plugins repository vfs vfs resource r0", "$ r4 = r19 resource impl", "if $ r4 == null goto label3", "r20 = org apache ivy plugins repository vfs vfs resource r0", "$ r5 = r20 resource impl", "$ z0 = $ r5 exist", "if $ z0 == 0 goto label3", "r21 = org apache ivy plugins repository vfs vfs resource r0", "$ r6 = r21 resource impl", "$ r7 = $ r6 get type", "$ r8 = org apache common vfs file type folder", "if $ r7 ! = $ r8 goto label3", "r22 = org apache ivy plugins repository vfs vfs resource r0", "$ r9 = r22 resource impl", "r15 = $ r9 get child", "i1 = 0", "label $ i0 = lengthof r15", "if i1 > = $ i0 goto label3", "r2 = r15 [ i1 ]", "$ r10 = r2 get name", "$ r11 = $ r10 get u r i", "$ r12 = org apache ivy plugins repository vfs vfs resource normalize $ r11", "r17 add $ r12", "i1 = i1 + 1", "goto label2", "if i1 > = $ i0 goto label3", "label goto label5", "label return r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache ivy plugins resolver abstract ssh base resolver r0", "$ r2 = specialinvoke r3 get ssh base repository", "$ r2 set key file password r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org apache ivy plugins resolver abstract ssh base resolver r0", "$ r1 = specialinvoke r2 get ssh base repository", "$ r1 set port i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache ivy plugins resolver basic resolver r0", "$ r2 = r3 get setting", "$ r2 filter ignore r1", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache ivy plugins resolver packager packager cache entry r0", "$ z0 = r1 build", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache ivy plugins resolver packager packager resolver r0", "r2 resource u r l = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache ivy plugins resolver packager packager resolver r0", "r1 restrict = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 == 1 goto label2", "label r11 = new java lang illegal argument exception", "r10 = new java lang string buffer", "specialinvoke r10 < init >", "$ r4 = r10 append \\ `` file separator have to be a single character and not \\ ``", "$ r5 = $ r4 append r1", "$ r6 = $ r5 to string", "specialinvoke r11 < init > $ r6", "throw r11", "if $ i0 == 1 goto label2", "label r12 = org apache ivy plugins resolver ssh resolver r0", "$ r7 = r12 get repository", "$ r8 = org apache ivy plugins repository ssh ssh repository $ r7", "$ r9 = r1 trim", "$ c1 = $ r9 char at 0", "$ r8 set file separator $ c1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 exist", "if $ z0 ! = 0 goto label1", "return 1", "if $ z0 ! = 0 goto label1", "label $ z1 = r0 be directory", "if $ z1 == 0 goto label4", "r1 = r0 list file", "if r1 == null goto label4", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label4", "$ r2 = r1 [ i1 ]", "$ z2 = org apache ivy util file util force delete $ r2", "if $ z2 ! = 0 goto label3", "return 0", "if $ z2 ! = 0 goto label3", "label i1 = i1 + 1", "goto label2", "if i1 > = $ i0 goto label4", "label $ z3 = r0 delete", "return $ z3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org codehaus jackson json node r0", "$ r1 = r2 get i0", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r10 = com fasterxml jackson databind introspect p o j o property builder r0", "$ r1 = r10 _fields", "r11 = com fasterxml jackson databind introspect p o j o property builder r0", "r6 = specialinvoke r11 _find explicit names $ r1 null", "r12 = com fasterxml jackson databind introspect p o j o property builder r0", "$ r2 = r12 _getters", "r13 = com fasterxml jackson databind introspect p o j o property builder r0", "r7 = specialinvoke r13 _find explicit names $ r2 r6", "r14 = com fasterxml jackson databind introspect p o j o property builder r0", "$ r3 = r14 _setters", "r15 = com fasterxml jackson databind introspect p o j o property builder r0", "r8 = specialinvoke r15 _find explicit names $ r3 r7", "r16 = com fasterxml jackson databind introspect p o j o property builder r0", "$ r4 = r16 _ctor parameter", "r17 = com fasterxml jackson databind introspect p o j o property builder r0", "r9 = specialinvoke r17 _find explicit names $ r4 r8", "if r9 ! = null goto label1", "$ r5 = java util collection empty set", "return $ r5", "if r9 ! = null goto label1", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = com fasterxml jackson databind jsontype type serializer r0", "r4 write type prefix for object r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com fasterxml jackson core json generator r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = com fasterxml jackson dataformat cbor c b o r generator r0", "r3 _verify value write \\ `` start an array\\ ``", "r4 = com fasterxml jackson dataformat cbor c b o r generator r0", "$ r1 = r4 _write context", "$ r2 = $ r1 create child array context", "r5 = com fasterxml jackson dataformat cbor c b o r generator r0", "r5 _write context = $ r2", "r6 = com fasterxml jackson dataformat cbor c b o r generator r0", "specialinvoke r6 _write byte -97", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org codehaus jackson map introspect annotate with params r0", "$ r2 = r3 _annotations", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org codehaus jackson map introspect p o j o property builder r0", "$ r1 = r5 _fields", "r6 = org codehaus jackson map introspect p o j o property builder r0", "$ z0 = specialinvoke r6 _any explicit names $ r1", "if $ z0 ! = 0 goto label1", "r7 = org codehaus jackson map introspect p o j o property builder r0", "$ r2 = r7 _getters", "r8 = org codehaus jackson map introspect p o j o property builder r0", "$ z1 = specialinvoke r8 _any explicit names $ r2", "if $ z1 ! = 0 goto label1", "r9 = org codehaus jackson map introspect p o j o property builder r0", "$ r3 = r9 _setters", "r10 = org codehaus jackson map introspect p o j o property builder r0", "$ z2 = specialinvoke r10 _any explicit names $ r3", "if $ z2 ! = 0 goto label1", "r11 = org codehaus jackson map introspect p o j o property builder r0", "$ r4 = r11 _ctor parameter", "r12 = org codehaus jackson map introspect p o j o property builder r0", "$ z3 = specialinvoke r12 _any explicit names $ r4", "if $ z3 == 0 goto label2", "label $ z4 = 1", "goto label3", "label return $ z4", "if $ z3 == 0 goto label2", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org codehaus jackson map serializer factory r0", "$ r2 = r5 get config", "$ r3 = $ r2 with serializer modifier r1", "r6 = org codehaus jackson map serializer factory r0", "$ r4 = r6 with config $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = org codehaus jackson json token start_array", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = r1 get key", "r9 = org janusgraph diskstorage cassandra thrift cassandra thrift key column value store r0", "r10 = org janusgraph diskstorage keycolumnvalue slice query r1", "r3 = r9 get names slice $ r4 r10 r2", "$ r5 = r3 value", "$ r6 = org janusgraph diskstorage entry list empty_list", "$ r7 = com google common collect iterables get only element $ r5 $ r6", "$ r8 = org janusgraph diskstorage entry list $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r2 = org janusgraph core attribute geoshape helper", "r3 = org janusgraph core attribute geoshape r0", "$ r1 = r3 shape", "$ i0 = $ r2 size $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ z0 = org janusgraph core attribute geoshape be valid coordinate d0 d1", "com google common base precondition check argument $ z0 \\ `` invalid coordinate provided\\ ``", "r3 = new org janusgraph core attribute geoshape", "$ r1 = org janusgraph core attribute geoshape get shape factory", "$ r2 = $ r1 point x y d1 d0", "r4 = org locationtech spatial4j shape shape $ r2", "specialinvoke r3 < init > r4", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ b0 = d0 cmpl -90 0", "if $ b0 < 0 goto label1", "$ b1 = d0 cmpg 90 0", "if $ b1 > 0 goto label1", "$ b2 = d1 cmpl -180 0", "if $ b2 < 0 goto label1", "$ b3 = d1 cmpg 180 0", "if $ b3 > 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b3 > 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r5 = org janusgraph diskstorage common distribute store manager r0", "$ r3 = r5 hostnames", "$ r2 = org janusgraph diskstorage common distribute store manager random", "r6 = org janusgraph diskstorage common distribute store manager r0", "$ r1 = r6 hostnames", "$ i0 = lengthof $ r1", "$ i1 = $ r2 next int $ i0", "$ r4 = $ r3 [ $ i1 ]", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org janusgraph diskstorage mutation r0", "$ r2 = r6 deletion", "if $ r2 ! = null goto label1", "r5 = new java util array list", "specialinvoke r5 < init >", "r7 = org janusgraph diskstorage mutation r0", "r7 deletion = r5", "label r8 = org janusgraph diskstorage mutation r0", "$ r3 = r8 deletion", "$ r3 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["i0 = @ parameter0", "r0 = java nio byte buffer allocate 4", "r0 put int i0", "r1 = r0 array", "$ i1 = lengthof r1", "if $ i1 ! = 4 goto label1", "$ z0 = 1", "goto label2", "label com google common base precondition check argument $ z0", "$ r3 = org janusgraph diskstorage util static array buffer of r1", "r4 = org janusgraph diskstorage static buffer $ r3", "return r4", "if $ i1 ! = 4 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org janusgraph graphdb query vertex basic vertex centric query builder r0", "r2 restrict2 partition = 0", "r3 = org janusgraph graphdb query vertex basic vertex centric query builder r0", "$ r1 = r3 get this", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org janusgraph graphdb query vertex basic vertex centric query builder r0", "r2 query only load = 1", "r3 = org janusgraph graphdb query vertex basic vertex centric query builder r0", "$ r1 = r3 get this", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r3 = org janusgraph graphdb util priority queue r0", "specialinvoke r3 down heap", "r4 = org janusgraph graphdb util priority queue r0", "$ r1 = r4 heap", "$ r2 = $ r1 [ 1 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["l0 = @ parameter0", "$ l1 = l0 > > 63", "$ l2 = $ l1 & 9223372036854775807l", "$ l3 = l0 ^ $ l2", "return $ l3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = com jamesmurty utils x m l builder r0", "$ r3 = r9 xml node", "r10 = com jamesmurty utils x m l builder r0", "r10 assert element contain no or whitespace only text node $ r3", "r11 = com jamesmurty utils x m l builder r0", "$ r4 = r11 get document", "$ r5 = r1 root", "$ r6 = $ r5 get element", "r2 = $ r4 import node $ r6 1", "r12 = com jamesmurty utils x m l builder r0", "$ r7 = r12 xml node", "$ r7 append child r2", "r13 = com jamesmurty utils x m l builder r0", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com jamesmurty utils x m l builder r0", "$ r2 = r7 xml node", "r8 = com jamesmurty utils x m l builder r0", "$ r3 = r8 get document", "$ r4 = net iharder base64 encode bytes r1", "$ r5 = $ r3 create c d a t a section $ r4", "$ r2 append child $ r5", "r9 = com jamesmurty utils x m l builder r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 abstract lat lon box r0", "$ r2 = r3 get abstract lat lon box simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 abstract lat lon box r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 abstract view r0", "$ r2 = r3 get abstract view simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 abstract view r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = de micromata opengis kml v_2_2_0 abstract view r0", "r2 abstract view object extension = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 abstract view r0", "$ r2 = r3 get abstract view object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 abstract view r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = de micromata opengis kml v_2_2_0 basic link r0", "r2 basic link simple extension = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 camera r0", "$ r2 = r3 get camera object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 camera r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 document r0", "$ r2 = r3 get document simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 document r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 document r0", "$ r2 = r3 get document object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 document r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 ground overlay r0", "$ r2 = r3 get ground overlay simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 ground overlay r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 ground overlay r0", "$ r2 = r3 get ground overlay object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 ground overlay r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r4 = de micromata opengis kml v_2_2_0 gx lat lon quad r0", "$ r1 = r4 get coordinate", "r3 = new de micromata opengis kml v_2_2_0 coordinate", "specialinvoke r3 < init > d0 d1", "$ r1 add r3", "r5 = de micromata opengis kml v_2_2_0 gx lat lon quad r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 icon style r0", "$ r2 = r3 get icon style object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 icon style r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 look at r0", "$ r2 = r3 get look at simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 look at r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 point r0", "$ r2 = r3 get point simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 point r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 schema r0", "$ r2 = r3 get schema extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 schema r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 style map r0", "$ r2 = r3 get style map simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 style map r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 style map r0", "$ r2 = r3 get style map object extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 style map r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 time stamp r0", "$ r2 = r3 get time stamp simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 time stamp r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 update r0", "$ r2 = r3 get create or delete or change", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 update r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 view volume r0", "$ r2 = r3 get view volume simple extension", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 view volume r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = de micromata opengis kml v_2_2_0 xal dependent locality r0", "r2 dependent locality name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = de micromata opengis kml v_2_2_0 xal large mail user r0", "r2 large mail user name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 xal postal route r0", "$ r2 = r3 get postal route name", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 xal postal route r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = de micromata opengis kml v_2_2_0 xal premise r0", "r2 premise name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 xal premise r0", "$ r2 = r3 get premise name", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 xal premise r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = de micromata opengis kml v_2_2_0 xal premise r0", "$ r2 = r3 get premise number suffix", "$ r2 add r1", "r4 = de micromata opengis kml v_2_2_0 xal premise r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com googlecode javaewah bit counter r0", "$ i1 = r1 one bits", "$ i2 = java lang long bit count l0", "$ i3 = $ i1 + $ i2", "r2 = com googlecode javaewah bit counter r0", "r2 one bits = $ i3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 ! = i1 goto label1", "return", "if i0 ! = i1 goto label1", "label i2 = i0 64", "$ i4 = i1 - 1", "i3 = $ i4 64", "if i2 ! = i3 goto label2", "r5 = com googlecode javaewah datastructure bit set r0", "$ r4 = r5 data", "$ l19 = $ r4 [ i2 ]", "$ l16 = -1l < < i0", "$ i14 = neg i1", "$ l15 = -1l > > > $ i14", "$ l17 = $ l16 & $ l15", "$ l18 = $ l17 ^ -1l", "$ l20 = $ l19 & $ l18", "$ r4 [ i2 ] = $ l20", "if i2 ! = i3 goto label2", "label r6 = com googlecode javaewah datastructure bit set r0", "$ r1 = r6 data", "$ l7 = $ r1 [ i2 ]", "$ l5 = -1l < < i0", "$ l6 = $ l5 ^ -1l", "$ l8 = $ l7 & $ l6", "$ r1 [ i2 ] = $ l8", "i21 = i2 + 1", "label if i21 > = i3 goto label4", "r7 = com googlecode javaewah datastructure bit set r0", "$ r3 = r7 data", "$ r3 [ i21 ] = 0l", "i21 = i21 + 1", "goto label3", "label if i21 > = i3 goto label4", "label r8 = com googlecode javaewah datastructure bit set r0", "$ r2 = r8 data", "$ l12 = $ r2 [ i3 ]", "$ i9 = neg i1", "$ l10 = -1l > > > $ i9", "$ l11 = $ l10 ^ -1l", "$ l13 = $ l12 & $ l11", "$ r2 [ i3 ] = $ l13"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i7 = 0", "label r2 = com googlecode javaewah datastructure bit set r0", "$ i0 = r2 get number of word", "$ i1 = r1 get number of word", "$ i2 = java lang math min $ i0 $ i1", "if i7 > = $ i2 goto label3", "r3 = com googlecode javaewah datastructure bit set r0", "$ l3 = r3 get word i7", "$ l4 = r1 get word i7", "$ l5 = $ l3 & $ l4", "$ b6 = $ l5 cmp 0l", "if $ b6 == 0 goto label2", "return 1", "if $ b6 == 0 goto label2", "label i7 = i7 + 1", "goto label1", "if i7 > = $ i2 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i14 = i0 64", "r4 = com googlecode javaewah datastructure bit set r0", "$ i1 = r4 get number of word", "if i14 < $ i1 goto label1", "return -1", "if i14 < $ i1 goto label1", "label r5 = com googlecode javaewah datastructure bit set r0", "$ r1 = r5 data", "$ l2 = $ r1 [ i14 ]", "l15 = $ l2 ^ -1l", "l16 = l15 > > > i0", "$ b3 = l16 cmp 0l", "if $ b3 == 0 goto label2", "$ i12 = java lang long number of trail zero l16", "$ i13 = i0 + $ i12", "return $ i13", "if $ b3 == 0 goto label2", "label i17 = i14 + 1", "label r6 = com googlecode javaewah datastructure bit set r0", "$ i4 = r6 get number of word", "if i17 > = $ i4 goto label5", "r7 = com googlecode javaewah datastructure bit set r0", "$ r2 = r7 data", "$ l5 = $ r2 [ i17 ]", "$ b6 = $ l5 cmp -1l", "if $ b6 == 0 goto label4", "$ i9 = i17 * 64", "r8 = com googlecode javaewah datastructure bit set r0", "$ r3 = r8 data", "$ l7 = $ r3 [ i17 ]", "$ l8 = $ l7 ^ -1l", "$ i10 = java lang long number of trail zeros $ l8", "$ i11 = $ i9 + $ i10", "return $ i11", "if $ b6 == 0 goto label4", "label i17 = i17 + 1", "goto label3", "if i17 > = $ i4 goto label5", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [], [40], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i13 = 0", "i14 = 0", "label r4 = com googlecode javaewah datastructure bit set r0", "$ i0 = r4 get number of word", "$ i1 = r1 get number of word", "$ i2 = java lang math min $ i0 $ i1", "if i14 > = $ i2 goto label2", "r5 = com googlecode javaewah datastructure bit set r0", "$ l9 = r5 get word i14", "$ l10 = r1 get word i14", "$ l11 = $ l9 | $ l10", "$ i12 = java lang long bit count $ l11", "i13 = i13 + $ i12", "i14 = i14 + 1", "goto label1", "if i14 > = $ i2 goto label2", "label $ i3 = r1 get number of word", "r6 = com googlecode javaewah datastructure bit set r0", "$ i4 = r6 get number of word", "if $ i3 > = $ i4 goto label3", "$ r2 = r0", "goto label4", "label r3 = $ r2", "r7 = com googlecode javaewah datastructure bit set r0", "$ i5 = r7 get number of word", "$ i6 = r1 get number of word", "i15 = java lang math min $ i5 $ i6", "label r8 = com googlecode javaewah datastructure bit set r0", "$ i16 = r8 get number of word", "$ i17 = r1 get number of word", "$ i18 = java lang math max $ i16 $ i17", "if i15 > = $ i18 goto label6", "r9 = com googlecode javaewah datastructure word array r3", "$ l7 = r9 get word i15", "$ i8 = java lang long bit count $ l7", "i13 = i13 + $ i8", "i15 = i15 + 1", "goto label5", "if i15 > = $ i18 goto label6", "label return i13", "if $ i3 > = $ i4 goto label3", "label $ r2 = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = com googlecode javaewah datastructure bit set r0", "$ r1 = r3 data", "$ i1 = i0 + 63", "$ i2 = $ i1 64", "$ r2 = java util array copy of $ r1 $ i2", "r4 = com googlecode javaewah datastructure bit set r0", "r4 data = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "r1 = com googlecode javaewah datastructure bit set r0", "r1 set i0", "goto label2", "label return", "if z0 == 0 goto label1", "label r2 = com googlecode javaewah datastructure bit set r0", "r2 unset i0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = com googlecode javaewah datastructure bit set r0", "$ i0 = r1 get number of word", "$ i1 = $ i0 * 64", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = com googlecode javaewah datastructure bit set r0", "$ r1 = r2 data", "$ i1 = i0 64", "$ l5 = $ r1 [ $ i1 ]", "$ i2 = i0 % 64", "$ l3 = 1l < < $ i2", "$ l4 = $ l3 ^ -1l", "$ l6 = $ l5 & $ l4", "$ r1 [ $ i1 ] = $ l6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = com googlecode javaewah datastructure priority q r0", "specialinvoke r1 percolate down 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r2 clear", "r3 = r1 get e w a h iterator", "r17 = com googlecode javaewah e w a h compress bitmap r0", "r4 = r17 get e w a h iterator", "r15 = new com googlecode javaewah iterate buffer run length word", "specialinvoke r15 < init > r3", "r16 = new com googlecode javaewah iterate buffer run length word", "specialinvoke r16 < init > r4", "label $ l1 = r15 size", "$ b2 = $ l1 cmp 0l", "if $ b2 < = 0 goto label16", "$ l8 = r16 size", "$ b9 = $ l8 cmp 0l", "if $ b9 < = 0 goto label16", "label $ l10 = r15 get run length", "$ b11 = $ l10 cmp 0l", "if $ b11 > 0 goto label03", "$ l20 = r16 get run length", "$ b21 = $ l20 cmp 0l", "if $ b21 < = 0 goto label12", "label $ l12 = r15 get run length", "$ l13 = r16 get run length", "$ b14 = $ l12 cmp $ l13", "if $ b14 > = 0 goto label04", "$ z1 = 1", "goto label05", "label z2 = $ z1", "if $ z1 == 0 goto label06", "$ r10 = r15", "goto label07", "label r11 = $ r10", "if z2 == 0 goto label08", "$ r12 = r16", "goto label09", "label r7 = $ r12", "$ z0 = $ r12 get run bit", "if $ z0 == 0 goto label10", "$ l18 = $ r12 get run length", "r2 add stream of empty word 1 $ l18", "$ l19 = $ r12 get run length", "r11 discard first word $ l19", "goto label11", "label r7 discard run word", "goto label02", "if $ z0 == 0 goto label10", "label $ l15 = $ r12 get run length", "l0 = r11 discharge r2 $ l15", "$ l16 = $ r12 get run length", "$ l17 = $ l16 - l0", "r2 add stream of empty word 0 $ l17", "if z2 == 0 goto label08", "label $ r12 = r15", "if $ z1 == 0 goto label06", "label $ r10 = r16", "if $ b14 > = 0 goto label04", "label $ z1 = 0", "if $ b21 < = 0 goto label12", "label $ i22 = r15 get number of literal word", "$ i23 = r16 get number of literal word", "i29 = java lang math min $ i22 $ i23", "if i29 < = 0 goto label15", "i30 = 0", "label if i30 > = i29 goto label14", "$ l26 = r15 get literal word at i30", "$ l27 = r16 get literal word at i30", "$ l28 = $ l26 | $ l27", "r2 add word $ l28", "i30 = i30 + 1", "goto label13", "label if i30 > = i29 goto label14", "label $ l24 = long i29", "r15 discard first word $ l24", "$ l25 = long i29", "r16 discard first word $ l25", "label goto label01", "if $ b9 < = 0 goto label16", "label $ l3 = r15 size", "$ b4 = $ l3 cmp 0l", "if $ b4 < = 0 goto label17", "$ z3 = 1", "goto label18", "label if $ z3 == 0 goto label19", "$ r13 = r15", "goto label20", "label $ r13 discharge r2", "r18 = com googlecode javaewah e w a h compress bitmap r0", "$ i5 = r18 size in bit", "$ i6 = r1 size in bit", "$ i7 = java lang math max $ i5 $ i6", "r2 set size in bit within last word $ i7", "return", "label if $ z3 == 0 goto label19", "label $ r13 = r16", "if $ b4 < = 0 goto label17", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [], [34], [35], [36], [], [38], [39], [40], [41], [42], [43], [44], [], [46], [], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [], [85], [86], [], [88], [89], [90], [91], [92], [93], [], [95], [96], [97], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com googlecode javaewah e w a h compress bitmap r0", "$ z0 = specialinvoke r1 set i0 0", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "z0 = @ parameter1", "r16 = com googlecode javaewah e w a h compress bitmap r0", "$ i2 = r16 size in bit", "if i0 > $ i2 goto label01", "return 0", "if i0 > $ i2 goto label01", "label r17 = com googlecode javaewah e w a h compress bitmap r0", "$ i3 = r17 size in bit", "$ i4 = $ i3 % 64", "if $ i4 == 0 goto label07", "if z0 ! = 0 goto label04", "r18 = com googlecode javaewah e w a h compress bitmap r0", "$ r11 = r18 rlw", "$ i28 = $ r11 get number of literal word", "if $ i28 < = 0 goto label07", "r19 = com googlecode javaewah e w a h compress bitmap r0", "$ i29 = r19 size in bit", "i41 = i0 - $ i29", "r20 = com googlecode javaewah e w a h compress bitmap r0", "$ i30 = r20 size in bit", "i42 = $ i30 % 64", "i43 = 64 - i42", "r21 = com googlecode javaewah e w a h compress bitmap r0", "$ r12 = r21 buffer", "$ l31 = $ r12 get last word", "$ b32 = $ l31 cmp 0l", "if $ b32 ! = 0 goto label02", "r22 = com googlecode javaewah e w a h compress bitmap r0", "$ r14 = r22 rlw", "r23 = com googlecode javaewah e w a h compress bitmap r0", "$ r13 = r23 rlw", "$ i36 = $ r13 get number of literal word", "$ i37 = $ i36 - 1", "$ l38 = long $ i37", "$ r14 set number of literal word $ l38", "r24 = com googlecode javaewah e w a h compress bitmap r0", "$ r15 = r24 buffer", "$ r15 remove last word", "r25 = com googlecode javaewah e w a h compress bitmap r0", "$ i39 = r25 size in bit", "$ i40 = $ i39 - i42", "r26 = com googlecode javaewah e w a h compress bitmap r0", "r26 size in bit = $ i40", "goto label03", "label goto label07", "label $ i47 = i0 64", "r44 = com googlecode javaewah e w a h compress bitmap r0", "$ i48 = r44 size in bit", "$ i49 = $ i48 64", "$ i50 = $ i47 - $ i49", "$ l51 = long $ i50", "r45 = com googlecode javaewah e w a h compress bitmap r0", "r45 add stream of empty word z0 $ l51", "r46 = com googlecode javaewah e w a h compress bitmap r0", "$ i52 = r46 size in bit", "if $ i52 > = i0 goto label10", "$ i5 = i0 - 1", "r47 = com googlecode javaewah e w a h compress bitmap r0", "i53 = specialinvoke r47 distance in word $ i5", "if i53 < = 0 goto label08", "r48 = com googlecode javaewah e w a h compress bitmap r0", "specialinvoke r48 insert literal word 0l", "label if z0 == 0 goto label09", "r49 = com googlecode javaewah e w a h compress bitmap r0", "$ i6 = r49 size in bit", "i54 = i0 - $ i6", "r50 = com googlecode javaewah e w a h compress bitmap r0", "$ i7 = r50 size in bit", "i55 = $ i7 % 64", "$ i8 = 64 - i54", "$ l9 = -1l > > > $ i8", "l1 = $ l9 < < i55", "r51 = com googlecode javaewah e w a h compress bitmap r0", "$ r1 = r51 buffer", "$ r1 or last word l1", "label r52 = com googlecode javaewah e w a h compress bitmap r0", "r52 size in bit = i0", "label return 1", "if $ b32 ! = 0 goto label02", "label if i42 < = 0 goto label03", "r27 = com googlecode javaewah e w a h compress bitmap r0", "$ i33 = r27 size in bit", "$ i34 = java lang math min i41 i43", "$ i35 = $ i33 + $ i34", "r28 = com googlecode javaewah e w a h compress bitmap r0", "r28 size in bit = $ i35", "if z0 ! = 0 goto label04", "label r29 = com googlecode javaewah e w a h compress bitmap r0", "$ r2 = r29 rlw", "$ i10 = $ r2 get number of literal word", "if $ i10 ! = 0 goto label05", "r30 = com googlecode javaewah e w a h compress bitmap r0", "$ r10 = r30 rlw", "r31 = com googlecode javaewah e w a h compress bitmap r0", "$ r9 = r31 rlw", "$ l26 = $ r9 get run length", "$ l27 = $ l26 - 1l", "$ r10 set run length $ l27", "r32 = com googlecode javaewah e w a h compress bitmap r0", "specialinvoke r32 insert literal word 0l", "label r33 = com googlecode javaewah e w a h compress bitmap r0", "$ i11 = r33 size in bit", "$ i12 = $ i11 % 64", "$ i15 = 64 - $ i12", "r34 = com googlecode javaewah e w a h compress bitmap r0", "$ i13 = r34 size in bit", "$ i14 = i0 - $ i13", "i44 = java lang math min $ i15 $ i14", "r35 = com googlecode javaewah e w a h compress bitmap r0", "$ i16 = r35 size in bit", "i45 = $ i16 % 64", "$ i17 = 64 - i44", "$ l18 = -1l > > > $ i17", "l46 = $ l18 < < i45", "r36 = com googlecode javaewah e w a h compress bitmap r0", "$ r3 = r36 buffer", "$ r3 or last word l46", "r37 = com googlecode javaewah e w a h compress bitmap r0", "$ r4 = r37 buffer", "$ l19 = $ r4 get last word", "$ b20 = $ l19 cmp -1l", "if $ b20 ! = 0 goto label06", "r38 = com googlecode javaewah e w a h compress bitmap r0", "$ r5 = r38 buffer", "$ r5 remove last word", "r39 = com googlecode javaewah e w a h compress bitmap r0", "$ r7 = r39 rlw", "r40 = com googlecode javaewah e w a h compress bitmap r0", "$ r6 = r40 rlw", "$ i23 = $ r6 get number of literal word", "$ i24 = $ i23 - 1", "$ l25 = long $ i24", "$ r7 set number of literal word $ l25", "r41 = com googlecode javaewah e w a h compress bitmap r0", "specialinvoke r41 insert empty word 1", "label r42 = com googlecode javaewah e w a h compress bitmap r0", "$ i21 = r42 size in bit", "$ i22 = $ i21 + i44", "r43 = com googlecode javaewah e w a h compress bitmap r0", "r43 size in bit = $ i22"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r3 = new com googlecode javaewah e w a h compress bitmap", "specialinvoke r3 < init >", "r4 = com googlecode javaewah bitmap storage r3", "com googlecode javaewah e w a h compress bitmap threshold with container r4 i0 r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new com googlecode javaewah bit counter", "specialinvoke r4 < init >", "r5 = com googlecode javaewah e w a h compress bitmap r0", "r6 = com googlecode javaewah bitmap storage r4", "r5 xor to container r1 r6", "$ i0 = r4 get count", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new com googlecode javaewah e w a h compress bitmap", "specialinvoke $ r3 < init >", "i0 = lengthof r0", "i2 = 0", "label if i2 > = i0 goto label2", "i1 = r0 [ i2 ]", "$ r3 set i1", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "r3 = new com googlecode javaewah e w a h compress bitmap", "specialinvoke r3 < init >", "r4 = com googlecode javaewah bitmap storage r3", "com googlecode javaewah fast aggregation bufferedand with container r4 i0 r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r2 = com googlecode javaewah iterate buffer run length word r0", "$ l0 = r2 size", "$ b1 = $ l0 cmp 0l", "if $ b1 < = 0 goto label2", "r3 = com googlecode javaewah iterate buffer run length word r0", "$ l2 = r3 size", "r1 add stream of empty word 0 $ l2", "r4 = com googlecode javaewah iterate buffer run length word r0", "$ l3 = r4 size", "r5 = com googlecode javaewah iterate buffer run length word r0", "r5 discard first word $ l3", "goto label1", "if $ b1 < = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com googlecode javaewah iterate buffer run length word r0", "$ r3 = r6 brlw", "r7 = com googlecode javaewah iterate buffer run length word r0", "$ i0 = r7 literal word start position", "r8 = com googlecode javaewah iterate buffer run length word r0", "$ r2 = r8 iterator", "$ i1 = $ r2 literal word", "$ i2 = $ i0 - $ i1", "$ r3 literal word offset = $ i2", "r9 = com googlecode javaewah iterate buffer run length word r0", "$ r5 = r9 brlw", "r10 = com googlecode javaewah iterate buffer run length word r0", "$ r4 = r10 iterator", "com googlecode javaewah iterate buffer run length word discharge $ r5 $ r4 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com googlecode javaewah symmetric updateable bitmap function r0", "$ r2 = r6 litwlist", "i1 = $ r2 next set bit 0", "label if i1 < 0 goto label2", "r7 = com googlecode javaewah symmetric updateable bitmap function r0", "$ r3 = r7 rw", "$ r4 = $ r3 [ i1 ]", "r1 add $ r4", "r8 = com googlecode javaewah symmetric updateable bitmap function r0", "$ r5 = r8 litwlist", "$ i0 = i1 + 1", "i1 = $ r5 next set bit $ i0", "goto label1", "label if i1 < 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i5 = @ parameter2", "i0 = i5", "label $ i1 = r0 get run length", "if $ i1 < = 0 goto label3", "i6 = r0 get run length", "if i6 < = i5 goto label2", "i6 = i5", "label $ z1 = r0 get run bit", "r1 add stream of empty word $ z1 i6", "i5 = i5 - i6", "label $ i7 = r0 get number of literal word", "l8 = long $ i7", "i9 = 0", "label $ l10 = long i9", "$ b11 = $ l10 cmp l8", "if $ b11 > = 0 goto label5", "$ i4 = r0 get literal word at i9", "r1 add word $ i4", "i9 = i9 + 1", "goto label4", "if $ b11 > = 0 goto label5", "label if i5 < = 0 goto label7", "$ z0 = r0 next", "if $ z0 ! = 0 goto label6", "goto label7", "label $ i2 = i0 - i5", "$ l3 = long $ i2", "return $ l3", "if $ z0 ! = 0 goto label6", "label goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org javaruntype type type r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org javaruntype typedef inner wildcard type def variable r0", "$ r1 = r2 upper bound", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = javassist bytecode signature attribute r0", "$ r1 = r4 get const pool", "r5 = javassist bytecode signature attribute r0", "$ r2 = r5 get", "$ i0 = javassist bytecode byte array read u16bit $ r2 0", "$ r3 = $ r1 get utf8 info $ i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = javassist bytecode stackmap tracer r0", "specialinvoke r2 throw bad bytecode i0 \\ `` jsr\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = javassist ct behavior r0", "$ r1 = r3 declare class", "$ r1 check modify", "r4 = javassist ct behavior r0", "$ r2 = r4 method info", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 2", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 4", "if $ i1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = javax el e l manager r0", "$ r2 = r5 get e l context", "r4 = new javax el bean name e l resolver", "specialinvoke r4 < init > r1", "r6 = javax el e l resolver r4", "$ r2 add e l resolver r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax el e l manager r0", "$ r2 = r3 get e l context", "$ r2 add e l resolver r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = javax el e l processor r0", "$ r2 = r3 get value r1 class \\ `` ljava lang object \\ ``", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r2 instanceof java util resource bundle", "if $ z0 == 0 goto label1", "return class \\ `` ljava lang string \\ ``", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["$ r0 = javax json spi json provider provider", "$ r1 = $ r0 create object builder", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun mail auth md4 r0", "specialinvoke r3 impl reset", "$ i0 = lengthof r1", "r4 = com sun mail auth md4 r0", "specialinvoke r4 engine update r1 0 $ i0", "r2 = newarray byte [ 16 ]", "r5 = com sun mail auth md4 r0", "specialinvoke r5 impl digest r2 0", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r9 = com sun mail iap argument r0", "$ r6 = r9 item", "r7 = new com sun mail iap n string", "specialinvoke r7 < init > null", "$ r6 add r7", "goto label2", "label r11 = com sun mail iap argument r0", "return r11", "if r1 ! = null goto label1", "label r10 = com sun mail iap argument r0", "$ r3 = r10 item", "r8 = new com sun mail iap n string", "$ r4 = com sun mail util a s c i i utility get byte r1", "specialinvoke r8 < init > $ r4", "$ r3 add r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun mail iap protocol r0", "$ r2 = r3 handler", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = com sun mail imap idle manager r0", "r4 die = 1", "r5 = com sun mail imap idle manager r0", "$ r1 = r5 logger", "$ r1 fine \\ `` idle manager stopping\\ ``", "r6 = com sun mail imap idle manager r0", "$ r2 = r6 selector", "$ r2 wakeup", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = com sun mail imap i m a p folder r0", "$ z0 = r3 open", "if $ z0 == 0 goto label1", "r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` this operation be not allow on an open folder\\ ``", "throw r2", "if $ z0 == 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r5 = new com sun mail imap i m a p folder $ 12", "r6 = com sun mail imap i m a p folder r0", "specialinvoke r5 < init > r6", "r7 = com sun mail imap i m a p folder r0", "r8 = com sun mail imap i m a p folder $ protocol command r5", "$ r2 = r7 do optional command \\ `` quota not supported\\", "$ r3 = javax mail quota [ ] $ r2", "$ r4 = javax mail quota [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun mail imap i m a p folder r0", "specialinvoke r2 set a c l r1 43", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new com sun mail imap i m a p folder $ 16", "r7 = com sun mail imap i m a p folder r0", "specialinvoke r6 < init > r7 r1", "r8 = com sun mail imap i m a p folder r0", "r9 = com sun mail imap i m a p folder $ protocol command r6", "$ r3 = r8 do optional command \\ `` acl not supported\\", "$ r4 = com sun mail imap right [ ] $ r3", "$ r5 = com sun mail imap right [ ] $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r8 = com sun mail imap i m a p message r0", "r8 check expunge", "r9 = com sun mail imap i m a p message r0", "$ z0 = r9 body load", "if $ z0 == 0 goto label1", "$ r7 = specialinvoke r0 get content language", "return $ r7", "if $ z0 == 0 goto label1", "label r10 = com sun mail imap i m a p message r0", "specialinvoke r10 load b o d y s t r u c t u r e", "r11 = com sun mail imap i m a p message r0", "$ r1 = r11 b", "$ r2 = $ r1 language", "if $ r2 == null goto label2", "r12 = com sun mail imap i m a p message r0", "$ r3 = r12 b", "$ r4 = $ r3 language", "$ r5 = $ r4 clone", "$ r6 = java lang string [ ] $ r5", "return $ r6", "if $ r2 == null goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r4 = com sun mail imap i m a p message r0", "r4 check expunge", "r5 = com sun mail imap i m a p message r0", "$ z0 = r5 body load", "if $ z0 == 0 goto label1", "$ r3 = specialinvoke r0 get header \\ `` in- reply- to\\", "return $ r3", "if $ z0 == 0 goto label1", "label r6 = com sun mail imap i m a p message r0", "specialinvoke r6 load envelope", "r7 = com sun mail imap i m a p message r0", "$ r1 = r7 envelope", "$ r2 = $ r1 in reply to", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail imap i m a p store r0", "$ r1 = r2 proxy auth user", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "c0 = @ parameter1", "r3 = com sun mail imap i m a p store r0", "$ r2 = r3 new i m a p folder r1 c0 null", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r14 = com sun mail imap message cache r0", "$ r1 = r14 seqnums", "if $ r1 ! = null goto label1", "return i0", "if $ r1 ! = null goto label1", "label r15 = com sun mail imap message cache r0", "$ r3 = r15 logger", "$ r2 = java util log level fine", "$ z0 = $ r3 be loggable $ r2", "if $ z0 == 0 goto label2", "r16 = com sun mail imap message cache r0", "$ r6 = r16 logger", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r7 = r13 append \\ `` msgnum \\ ``", "$ r8 = $ r7 append i0", "$ r9 = $ r8 append \\ `` be seqnum \\ ``", "r17 = com sun mail imap message cache r0", "$ r10 = r17 seqnums", "$ i3 = i0 - 1", "$ i4 = $ r10 [ $ i3 ]", "$ r11 = $ r9 append $ i4", "$ r12 = $ r11 to string", "$ r6 fine $ r12", "label r18 = com sun mail imap message cache r0", "$ r4 = r18 seqnums", "$ i1 = i0 - 1", "$ i2 = $ r4 [ $ i1 ]", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "r1 = @ parameter2", "$ r4 = new java util array list", "specialinvoke $ r4 < init >", "if r0 ! = null goto label1", "return $ r4", "if r0 ! = null goto label1", "label i4 = 0", "label $ i1 = lengthof r0", "if i4 > = $ i1 goto label7", "$ r5 = r0 [ i4 ]", "if $ r5 == null goto label6", "$ r6 = r0 [ i4 ]", "$ z0 = $ r6 instanceof com sun mail imap protocol fetch response", "if $ z0 == 0 goto label6", "$ r7 = r0 [ i4 ]", "$ r8 = com sun mail imap protocol fetch response $ r7", "$ i2 = $ r8 get number", "if $ i2 == i0 goto label3", "goto label6", "label i4 = i4 + 1", "goto label2", "if $ i2 == i0 goto label3", "label $ r9 = r0 [ i4 ]", "r3 = com sun mail imap protocol fetch response $ r9", "i5 = 0", "label $ r10 = r3 item", "$ i3 = lengthof $ r10", "if i5 > = $ i3 goto label6", "$ r11 = r3 item", "$ r12 = $ r11 [ i5 ]", "$ z1 = r1 be instance $ r12", "if $ z1 == 0 goto label5", "$ r13 = r3 item", "$ r14 = $ r13 [ i5 ]", "$ r15 = r1 cast $ r14", "$ r4 add $ r15", "label i5 = i5 + 1", "goto label4", "if i4 > = $ i1 goto label7", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail imap protocol i m a p protocol r0", "$ z0 = r1 rev1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail imap protocol i m a p protocol r0", "$ r1 = r2 proxy auth user", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "r3 = com sun mail imap protocol i m a p protocol r0", "$ r2 = r3 fetch body i0 r1 i1 i2 0 null", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java lang string buffer", "specialinvoke r10 < init >", "i4 = 0", "label $ i0 = lengthof r1", "if i4 > = $ i0 goto label3", "if i4 < = 0 goto label2", "r10 append \\", "label $ l3 = r1 [ i4 ]", "$ r6 = java lang string value of $ l3", "r10 append $ r6", "i4 = i4 + 1", "goto label1", "if i4 > = $ i0 goto label3", "label $ r4 = r10 to string", "r11 = com sun mail imap protocol i m a p protocol r0", "r9 = specialinvoke r11 fetch $ r4 \\ `` uid\\", "r12 = com sun mail imap protocol i m a p protocol r0", "r12 notify response handler r9", "$ i1 = lengthof r9", "$ i2 = $ i1 - 1", "$ r5 = r9 [ $ i2 ]", "r13 = com sun mail imap protocol i m a p protocol r0", "r13 handle result $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail imap referral exception r0", "$ r1 = r2 text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun mail imap right r0", "$ r2 = r3 right", "$ c0 = r1 right", "$ r2 [ $ c0 ] = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail pop3 p o p3 folder r0", "$ z0 = r1 open", "if $ z0 ! = 0 goto label1", "return -1", "if $ z0 ! = 0 goto label1", "label r2 = com sun mail pop3 p o p3 folder r0", "specialinvoke r2 check readable", "r3 = com sun mail pop3 p o p3 folder r0", "$ i0 = r3 total", "return $ i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = com sun mail pop3 p o p3 folder r0", "$ r2 = r5 store", "$ z0 = $ r2 finalize clean close", "if $ z0 ! = 0 goto label1", "$ z2 = 1", "goto label2", "label r6 = com sun mail pop3 p o p3 folder r0", "r6 force close = $ z2", "label r7 = com sun mail pop3 p o p3 folder r0", "$ z1 = r7 open", "if $ z1 == 0 goto label4", "r8 = com sun mail pop3 p o p3 folder r0", "r8 close 0", "label specialinvoke r0 finalize", "r9 = com sun mail pop3 p o p3 folder r0", "r9 force close = 0", "goto label6", "label return", "if $ z0 ! = 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com sun mail pop3 p o p3 store r0", "specialinvoke r4 check connect", "r3 = new com sun mail pop3 p o p3 folder", "r5 = com sun mail pop3 p o p3 store r0", "specialinvoke r3 < init > r5 r1", "r6 = javax mail folder r3", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail smtp s m t p address fail exception r0", "$ i0 = r1 rc", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun mail smtp s m t p message r0", "r2 extension = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i6 = @ parameter2", "r3 = com sun mail smtp s m t p output stream r0", "$ i1 = r3 lastb", "if $ i1 ! = -1 goto label1", "$ i7 = 10", "goto label2", "label i8 = $ i7", "i9 = i0", "i10 = i6 + i0", "i11 = i0", "label if i11 > = i10 goto label6", "if i8 == 10 goto label4", "if i8 ! = 13 goto label5", "label $ b4 = r1 [ i11 ]", "if $ b4 ! = 46 goto label5", "$ i5 = i11 - i9", "specialinvoke r0 write r1 i9 $ i5", "r5 = com sun mail smtp s m t p output stream r0", "$ r2 = r5 out", "$ r2 write 46", "i9 = i11", "label i8 = r1 [ i11 ]", "i11 = i11 + 1", "goto label3", "label if i11 > = i10 goto label6", "label $ i2 = i10 - i9", "if $ i2 < = 0 goto label7", "$ i3 = i10 - i9", "specialinvoke r0 write r1 i9 $ i3", "label return", "if $ i1 ! = -1 goto label1", "label r4 = com sun mail smtp s m t p output stream r0", "$ i7 = r4 lastb"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail util log mail handler r0", "$ r1 = r2 push level", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun mail util log mail handler r0", "$ r1 = r2 comparator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = com sun mail util log mail handler $ tail name formatter of r1", "r5 = com sun mail util log mail handler r0", "r5 set subject $ r3", "goto label2", "label return", "if r1 == null goto label1", "label r6 = com sun mail util log mail handler r0", "specialinvoke r6 check access", "r4 = new java lang null pointer exception", "specialinvoke r4 < init >", "throw r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail util mail connect exception r0", "$ i0 = r1 port", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new com sun mail util mail logger", "r6 = com sun mail util mail logger r0", "$ z0 = r6 debug", "r7 = com sun mail util mail logger r0", "$ r4 = r7 out", "specialinvoke r5 < init > r1 r2 $ z0 $ r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util log level fine", "r3 = com sun mail util mail logger r0", "r3 log $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = com sun mail util trace input stream r0", "r1 trace = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail util u u decoder stream r0", "specialinvoke r1 read prefix", "r2 = com sun mail util u u decoder stream r0", "$ i0 = r2 mode", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = com sun mail util u u encoder stream r0", "r2 name = r1", "r3 = com sun mail util u u encoder stream r0", "r3 mode = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail event message change event r0", "$ r1 = r2 msg", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail event message count event r0", "$ r1 = r2 msg", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = javax mail fetch profile r0", "$ r2 = r6 special", "if $ r2 ! = null goto label1", "$ r5 = newarray javax mail fetch profile $ item [ 0 ]", "return $ r5", "if $ r2 ! = null goto label1", "label r7 = javax mail fetch profile r0", "$ r3 = r7 special", "$ i0 = $ r3 size", "r1 = newarray javax mail fetch profile $ item [ $ i0 ]", "r8 = javax mail fetch profile r0", "$ r4 = r8 special", "$ r4 copy into r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = javax mail flag r0", "$ r2 = r6 user_flags", "if $ r2 ! = null goto label1", "return 0", "if $ r2 ! = null goto label1", "label r7 = javax mail flag r0", "$ r4 = r7 user_flags", "$ r3 = java util locale english", "$ r5 = r1 to low case $ r3", "$ z0 = $ r4 contain key $ r5", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = javax mail folder r0", "$ r3 = r8 folder listener", "if $ r3 == null goto label1", "r7 = new javax mail event folder event", "r9 = javax mail folder r0", "specialinvoke r7 < init > r0 r9 r1 3", "r10 = javax mail folder r0", "$ r6 = r10 folder listener", "r11 = javax mail folder r0", "r12 = javax mail event mail event r7", "specialinvoke r11 queue event r12 $ r6", "label r13 = javax mail folder r0", "$ r4 = r13 store", "r14 = javax mail folder r0", "$ r4 notify folder rename listener r14 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail internet content disposition r0", "$ r1 = r2 list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = javax mail internet content type r0", "$ r1 = r11 primary type", "if $ r1 == null goto label1", "r12 = javax mail internet content type r0", "$ r2 = r12 sub type", "if $ r2 ! = null goto label2", "label return \\ `` \\ ``", "if $ r2 ! = null goto label2", "label r10 = new java lang string builder", "specialinvoke r10 < init >", "r13 = javax mail internet content type r0", "$ r4 = r13 primary type", "$ r5 = r10 append $ r4", "$ r6 = $ r5 append 47", "r14 = javax mail internet content type r0", "$ r7 = r14 sub type", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r13 = javax mail internet internet header r0", "r3 = r13 get header r1", "if r3 ! = null goto label1", "return null", "if r3 ! = null goto label1", "label $ i0 = lengthof r3", "if $ i0 == 1 goto label2", "if r2 ! = null goto label3", "label $ r5 = r3 [ 0 ]", "return $ r5", "if r2 ! = null goto label3", "label r12 = new java lang string buffer", "$ r7 = r3 [ 0 ]", "specialinvoke r12 < init > $ r7", "i2 = 1", "label $ i1 = lengthof r3", "if i2 > = $ i1 goto label5", "r12 append r2", "$ r10 = r3 [ i2 ]", "r12 append $ r10", "i2 = i2 + 1", "goto label4", "if i2 > = $ i1 goto label5", "label $ r8 = r12 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new javax mail internet internet header $ match string enum", "r5 = javax mail internet internet header r0", "$ r3 = r5 header", "specialinvoke r4 < init > $ r3 r1 0", "r6 = java util enumeration r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = javax mail internet mime message r0", "$ r1 = r4 flag", "$ r2 = $ r1 clone", "$ r3 = javax mail flag $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail internet parameter list r0", "$ r1 = r2 to string 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail internet preencoded mime body part r0", "$ r1 = r2 encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax mail message r0", "$ z0 = r1 expunge", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail provider r0", "$ r1 = r2 class name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax mail search address term r0", "$ r1 = r2 address", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = javax mail service r0", "r4 connect r1 -1 r2 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = javax mail session r0", "$ r1 = r3 get property \\ `` mail store protocol\\ ``", "r4 = javax mail session r0", "$ r2 = r4 get store $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = javax mail session r0", "$ r2 = r5 auth table", "$ r3 = $ r2 get r1", "$ r4 = javax mail password authentication $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray javax mail folder [ 1 ]", "r3 = javax mail store r0", "$ r2 = r3 get default folder", "$ r1 [ 0 ] = $ r2", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = javax mail store r0", "$ r4 = r8 folder listener", "if $ r4 ! = null goto label1", "return", "if $ r4 ! = null goto label1", "label r7 = new javax mail event folder event", "specialinvoke r7 < init > r0 r1 r2 3", "r9 = javax mail store r0", "$ r6 = r9 folder listener", "r10 = javax mail store r0", "r11 = javax mail event mail event r7", "r10 queue event r11 $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = javax mail transport r0", "$ r2 = r6 transport listener", "if $ r2 ! = null goto label1", "r5 = new java util vector", "specialinvoke r5 < init >", "r7 = javax mail transport r0", "r7 transport listener = r5", "label r8 = javax mail transport r0", "$ r3 = r8 transport listener", "$ r3 add element r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r5 = com sun tool xjc runtime default j a x b context impl r0", "$ r1 = r5 grammar", "if $ r1 ! = null goto label1", "r6 = com sun tool xjc runtime default j a x b context impl r0", "$ r3 = r6 gi", "$ r4 = $ r3 get grammar", "r7 = com sun tool xjc runtime default j a x b context impl r0", "r7 grammar = $ r4", "label r8 = com sun tool xjc runtime default j a x b context impl r0", "$ r2 = r8 grammar", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new com sun codemodel j assignment", "specialinvoke r5 < init > r1 r2", "r6 = com sun codemodel j block r0", "specialinvoke r6 insert r5", "r7 = com sun codemodel j block r0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new com sun codemodel j switch", "specialinvoke r5 < init > r1", "r6 = com sun codemodel j block r0", "$ r3 = specialinvoke r6 insert r5", "$ r4 = com sun codemodel j switch $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = new com sun codemodel j return", "specialinvoke r3 < init > null", "r4 = com sun codemodel j block r0", "specialinvoke r4 insert r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com sun codemodel class type class", "r4 = com sun codemodel j code model r0", "$ r3 = r4 _class r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun codemodel j code model r0", "r2 build r1 r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = com sun codemodel j conditional r0", "$ r1 = r5 _else", "if $ r1 ! = null goto label1", "r4 = new com sun codemodel j block", "specialinvoke r4 < init >", "r6 = com sun codemodel j conditional r0", "r6 _else = r4", "label r7 = com sun codemodel j conditional r0", "$ r2 = r7 _else", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com sun codemodel j define class r0", "$ r1 = r2 method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = com sun codemodel j define class r0", "$ r1 = r6 jdoc", "if $ r1 ! = null goto label1", "r5 = new com sun codemodel j doc comment", "r7 = com sun codemodel j define class r0", "$ r4 = r7 owner", "specialinvoke r5 < init > $ r4", "r8 = com sun codemodel j define class r0", "r8 jdoc = r5", "label r9 = com sun codemodel j define class r0", "$ r2 = r9 jdoc", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["$ r0 = com sun codemodel j expr __super", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = com sun codemodel j method r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com sun codemodel j package r0", "$ r1 = r3 resource", "$ r2 = $ r1 iterator", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun codemodel j package r0", "$ r1 = r2 name", "$ i0 = $ r1 length", "if $ i0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = com sun codemodel j class r0", "$ r1 = r2 erasure", "r3 = com sun codemodel j type $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = com sun codemodel j type var r0", "$ r2 = r11 bound", "if $ r2 == null goto label1", "r10 = new java lang illegal argument exception", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r5 = r9 append \\ `` type variable have an exist class bound \\ ``", "r12 = com sun codemodel j type var r0", "$ r6 = r12 bound", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 to string", "specialinvoke r10 < init > $ r8", "throw r10", "if $ r2 == null goto label1", "label r13 = com sun codemodel j type var r0", "r13 bound = r1", "r14 = com sun codemodel j type var r0", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "$ r2 = r0 get class", "r1 = $ r2 get name", "label $ r3 = java lang class for name r1", "$ r4 = $ r3 new instance", "$ r5 = com sun org apache xml internal resolver catalog $ r4", "r42 = com sun org apache xml internal resolver catalog $ r5", "r57 = com sun org apache xml internal resolver catalog r0", "$ r6 = r57 catalog manager", "r42 set catalog manager $ r6", "r58 = com sun org apache xml internal resolver catalog r0", "r58 copy reader r42", "label return r42"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 start with \\ `` \\ ``", "if $ z0 == 0 goto label1", "$ r16 = new java net url", "$ r17 = new java lang string builder", "specialinvoke $ r17 < init >", "$ r18 = $ r17 append \\ `` file \\ ``", "$ r19 = $ r18 append r0", "$ r20 = $ r19 to string", "specialinvoke $ r16 < init > $ r20", "return $ r16", "if $ z0 == 0 goto label1", "label r1 = java lang system get property \\ `` user dir\\ ``", "r1 replace 92 47", "$ z1 = r1 end with \\ `` \\ ``", "if $ z1 == 0 goto label2", "$ r10 = new java net url", "$ r11 = new java lang string builder", "specialinvoke $ r11 < init >", "$ r12 = $ r11 append \\ `` file \\ ``", "$ r13 = $ r12 append r1", "$ r14 = $ r13 append r0", "$ r15 = $ r14 to string", "specialinvoke $ r10 < init > $ r15", "return $ r10", "if $ z1 == 0 goto label2", "label $ r3 = new java net url", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` file \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 append r0", "$ r9 = $ r8 to string", "specialinvoke $ r3 < init > $ r9", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r3 = com sun org apache xml internal resolver tool resolve parser r0", "$ r1 = r3 catalog resolver", "$ r2 = $ r1 get catalog", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com sun org apache xml internal resolver tool resolve x m l filter r0", "$ r1 = r3 catalog resolver", "$ r2 = $ r1 get catalog", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "r14 = com sun tool jxc gen config n g c c runtime r0", "$ r6 = r14 att stack", "r12 = new com sun tool jxc gen config attribute impl", "specialinvoke r12 < init > r4", "r15 = com sun tool jxc gen config n g c c runtime r0", "r15 current atts = r12", "$ r6 push r12", "r16 = com sun tool jxc gen config n g c c runtime r0", "$ r9 = r16 ns effective stack", "r13 = new java lang integer", "r17 = com sun tool jxc gen config n g c c runtime r0", "$ i0 = r17 ns effective ptr", "specialinvoke r13 < init > $ i0", "$ r9 push r13", "r18 = com sun tool jxc gen config n g c c runtime r0", "$ r11 = r18 namespaces", "$ i1 = $ r11 size", "r19 = com sun tool jxc gen config n g c c runtime r0", "r19 ns effective ptr = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r2 = com sun tool xjc model c element info r0", "$ r1 = r2 class name", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "if z0 == 0 goto label1", "r2 = com sun tool xjc model c property info r0", "r2 public name = r1", "goto label2", "label return", "if z0 == 0 goto label1", "label r3 = com sun tool xjc model c property info r0", "r3 private name = r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun tool xjc option r0", "$ r2 = specialinvoke r3 file to input source r1", "r4 = com sun tool xjc option r0", "r4 add grammar $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r5 = com sun tool xjc outline class outline r0", "$ r2 = r5 target", "r1 = $ r2 get base class", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r6 = com sun tool xjc outline class outline r0", "$ r3 = r6 parent", "$ r4 = $ r3 get clazz r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 equal \\ `` http java sun com xml n jaxb xjc\\ ``", "if $ z0 ! = 0 goto label1", "r4 = com sun tool xjc reader abstract extension bind checker r0", "$ r2 = r4 option", "$ r3 = $ r2 plugin u r be", "$ z1 = $ r3 contain r1", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r1 get system id", "r0 set attribute n s \\ `` http www sun com xmlns jaxb dom-location\\", "$ i0 = r1 get line number", "$ r3 = java lang integer to string $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r11 = com sun tool xjc reader gbind connect component r0", "$ r1 = r11 element", "r8 = $ r1 to string", "r12 = com sun tool xjc reader gbind connect component r0", "$ z0 = r12 be require", "if $ z0 == 0 goto label1", "r9 = new java lang string builder", "specialinvoke r9 < init >", "$ r6 = r9 append r8", "$ r7 = $ r6 append 33", "r8 = $ r7 to string", "label r13 = com sun tool xjc reader gbind connect component r0", "$ z1 = r13 be collection", "if $ z1 == 0 goto label2", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r3 = r10 append r8", "$ r4 = $ r3 append 42", "r8 = $ r4 to string", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "return \\ `` #sink\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r7 = com sun tool xjc reader internalizer d o m forest r0", "$ r1 = r7 core", "$ r2 = $ r1 value", "r8 = com sun tool xjc reader internalizer d o m forest r0", "$ r3 = r8 core", "$ i0 = $ r3 size", "$ r4 = newarray org w3c dom document [ $ i0 ]", "$ r5 = $ r2 to array $ r4", "$ r6 = org w3c dom document [ ] $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang illegal state exception", "specialinvoke $ r2 < init >", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun tool xjc reader xmlschema bindinfo bind info r0", "$ r1 = r2 builder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = com sun tool xjc reader xmlschema class selector r0", "r6 = com sun xml xsom x s component r1", "$ r3 = r5 _bind to class r6 r2 0", "$ r4 = com sun tool xjc model c element $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label $ l0 = java lang long parse long r1", "r17 = com sun tool xjc x j c2 task r0", "r17 stack size = $ l0", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = com sun tool xjc x j c2 task r0", "$ r1 = r2 option", "$ r1 read only = z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r2 = com sun xml dtdparser d t d parser message", "$ r3 = r1 to string", "$ z0 = $ r2 be locale supported $ r3", "if $ z0 ! = 0 goto label1", "r9 = new org xml sax s a x exception", "$ r7 = com sun xml dtdparser d t d parser message", "r10 = com sun xml dtdparser d t d parser r0", "$ r6 = r10 locale", "$ r5 = newarray java lang object [ 1 ]", "$ r5 [ 0 ] = r1", "$ r8 = $ r7 get message $ r6 \\ `` p-078\\", "specialinvoke r9 < init > $ r8", "throw r9", "if $ z0 ! = 0 goto label1", "label r11 = com sun xml dtdparser d t d parser r0", "r11 locale = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com sun xml dtdparser d t d parser r0", "r4 dtd handler = r1", "if r1 == null goto label1", "r3 = new com sun xml dtdparser d t d parser $ 1", "r5 = com sun xml dtdparser d t d parser r0", "specialinvoke r3 < init > r5", "r6 = org xml sax locator r3", "r1 set document locator r6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r5 = @ parameter0", "r7 = com sun xml dtdparser message catalog r0", "$ r1 = specialinvoke r7 canonicalize r5", "if $ r1 == null goto label3", "i1 = 0", "label $ i0 = lengthof $ r1", "if i1 > = $ i0 goto label3", "$ r2 = $ r1 [ i1 ]", "r8 = com sun xml dtdparser message catalog r0", "$ z0 = r8 be locale supported $ r2", "if $ z0 == 0 goto label2", "$ r3 = $ r1 [ i1 ]", "r9 = com sun xml dtdparser message catalog r0", "$ r4 = specialinvoke r9 get locale $ r3", "return $ r4", "if $ z0 == 0 goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = com sun xml dtdparser simple hashtable r0", "$ i0 = r1 count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = com sun xml dtdparser simple hashtable r0", "$ r1 = r6 current", "if $ r1 == null goto label1", "return 1", "if $ r1 == null goto label1", "label r7 = com sun xml dtdparser simple hashtable r0", "$ i1 = r7 current bucket", "r8 = com sun xml dtdparser simple hashtable r0", "$ r2 = r8 table", "$ i0 = lengthof $ r2", "if $ i1 > = $ i0 goto label2", "r9 = com sun xml dtdparser simple hashtable r0", "$ r3 = r9 table", "r10 = com sun xml dtdparser simple hashtable r0", "$ i2 = r10 current bucket", "$ i3 = $ i2 + 1", "r11 = com sun xml dtdparser simple hashtable r0", "r11 current bucket = $ i3", "$ r4 = $ r3 [ $ i2 ]", "r12 = com sun xml dtdparser simple hashtable r0", "r12 current = $ r4", "r13 = com sun xml dtdparser simple hashtable r0", "$ r5 = r13 current", "if $ r5 == null goto label1", "if $ i1 > = $ i0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = com sun xml xsom impl attribute holder r0", "$ r3 = r5 attribute", "$ r3 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com sun xml xsom impl parser n g c c runtime ex r0", "$ r2 = r4 parser", "$ r3 = $ r2 patcher manager", "$ r3 add patcher r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r11 = com sun xml xsom impl schema set impl r0", "$ r3 = r11 schema", "$ r4 = $ r3 get r1", "r9 = com sun xml xsom impl schema impl $ r4", "if r9 ! = null goto label1", "r10 = new com sun xml xsom impl schema impl", "r12 = com sun xml xsom impl schema set impl r0", "specialinvoke r10 < init > r12 r2 r1", "r9 = r10", "r13 = com sun xml xsom impl schema set impl r0", "$ r6 = r13 schema", "$ r6 put r1 r10", "r14 = com sun xml xsom impl schema set impl r0", "$ r8 = r14 schemas2", "$ r8 add r10", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = com sun xml xsom parser x s o m parser r0", "$ r1 = r3 context", "$ r2 = $ r1 get result", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = com sun xml xsom impl scd iterators singleton r1", "r6 = com sun xml xsom scd r0", "r2 = r6 select $ r3", "$ z0 = r2 have next", "if $ z0 == 0 goto label1", "$ r4 = r2 next", "$ r5 = com sun xml xsom x s component $ r4", "return $ r5", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = r1 get modifier", "$ i2 = $ i1 & -1025", "$ i3 = $ i2 & -257", "$ r6 = r1 get name", "$ r7 = r1 get return type", "$ r8 = org jboss classfilewriter util descriptor utils make descriptor $ r7", "$ r9 = r1 get parameter type", "$ r10 = org jboss classfilewriter util descriptor utils parameter descriptor $ r9", "r23 = org jboss classfilewriter class file r0", "r2 = r23 add method $ i3 $ r6 $ r8 $ r10", "r18 = r1 get exception type", "i4 = lengthof r18", "i5 = 0", "label if i5 > = i4 goto label2", "r19 = r18 [ i5 ]", "$ r17 = newarray java lang class [ 1 ]", "$ r17 [ 0 ] = r19", "r2 add check exception $ r17", "i5 = i5 + 1", "goto label1", "label if i5 > = i4 goto label2", "label r20 = r1 get declare annotation", "i6 = lengthof r20", "i7 = 0", "label if i7 > = i6 goto label4", "r21 = r20 [ i7 ]", "$ r14 = r2 get runtime visible annotation attribute", "r24 = org jboss classfilewriter class file r0", "$ r15 = r24 const pool", "$ r16 = org jboss classfilewriter annotation annotation builder create annotation $ r15 r21", "$ r14 add annotation $ r16", "i7 = i7 + 1", "goto label3", "label if i7 > = i6 goto label4", "label i8 = 0", "r22 = r1 get parameter annotation", "i9 = lengthof r22", "i10 = 0", "label if i10 > = i9 goto label8", "r3 = r22 [ i10 ]", "i0 = lengthof r3", "i11 = 0", "label if i11 > = i0 goto label7", "r5 = r3 [ i11 ]", "$ r11 = r2 get runtime visible parameter annotation attribute", "r25 = org jboss classfilewriter class file r0", "$ r12 = r25 const pool", "$ r13 = org jboss classfilewriter annotation annotation builder create annotation $ r12 r5", "$ r11 add annotation i8 $ r13", "i11 = i11 + 1", "goto label6", "label if i11 > = i0 goto label7", "label i8 = i8 + 1", "i10 = i10 + 1", "goto label5", "label if i10 > = i9 goto label8", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [], [58], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org jboss classfilewriter class file r0", "$ r3 = specialinvoke r4 define internal r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org jboss classfilewriter code stack frame r0", "$ r3 = r8 stack state", "r2 = $ r3 push r1", "r7 = new org jboss classfilewriter code stack frame", "r9 = org jboss classfilewriter code stack frame r0", "$ r5 = r9 local variable state", "r10 = org jboss classfilewriter code stack frame r0", "$ r6 = specialinvoke r10 type no local change r2", "specialinvoke r7 < init > r2 $ r5 $ r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org jboss classfilewriter code stack frame r0", "$ r3 = r8 stack state", "r2 = $ r3 push r1", "r7 = new org jboss classfilewriter code stack frame", "r9 = org jboss classfilewriter code stack frame r0", "$ r5 = r9 local variable state", "r10 = org jboss classfilewriter code stack frame r0", "$ r6 = specialinvoke r10 type no local change r2", "specialinvoke r7 < init > r2 $ r5 $ r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r7 = org jboss classfilewriter code stack frame r0", "$ r2 = r7 stack state", "r1 = $ r2 pop 1", "r6 = new org jboss classfilewriter code stack frame", "r8 = org jboss classfilewriter code stack frame r0", "$ r4 = r8 local variable state", "r9 = org jboss classfilewriter code stack frame r0", "$ r5 = specialinvoke r9 type no local change r1", "specialinvoke r6 < init > r1 $ r4 $ r5", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss classfilewriter constpool const pool entry type r0", "$ i0 = r1 slot", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com machinepublishers glass ui monocle monocle window r0", "$ i0 = r1 id", "$ l1 = long $ i0", "return $ l1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "label r9 = com machinepublishers jbrowserdriver j browser driver r0", "$ r2 = r9 lock", "$ r3 = $ r2 validate", "entermonitor $ r3", "label r10 = com machinepublishers jbrowserdriver j browser driver r0", "$ r4 = r10 remote", "$ r4 page wait", "exitmonitor $ r3", "label goto label6", "label goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 split \\", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r2 [ i1 ]", "r4 = r3 split \\ `` \\ ``", "r11 = com jcabi log multicolor layout r0", "$ r9 = r11 color", "$ r8 = r4 [ 0 ]", "$ r7 = r4 [ 1 ]", "$ r9 put $ r8 $ r7", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r12 = com jcabi log multicolor layout r0", "$ r5 = r12 base", "if $ r5 == null goto label3", "r13 = com jcabi log multicolor layout r0", "$ r6 = r13 base", "r14 = com jcabi log multicolor layout r0", "r14 set conversion pattern $ r6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r3 = org jdom2 element r0", "$ r1 = r3 attribute", "if $ r1 == null goto label1", "r4 = org jdom2 element r0", "$ r2 = r4 attribute", "$ z0 = $ r2 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r3 = org jdom2 element r0", "$ r1 = r3 additional namespaces", "if $ r1 == null goto label1", "r4 = org jdom2 element r0", "$ r2 = r4 additional namespaces", "$ z0 = $ r2 be empty", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org jdom2 element r0", "$ r2 = r4 attribute", "if $ r2 == null goto label1", "r5 = org jdom2 element r0", "$ r3 = r5 attribute", "$ r3 sort r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "throw r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org jdom2 input s a x builder r0", "r1 ignore white = z0", "r2 = org jdom2 input s a x builder r0", "r2 engine = null", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org jdom2 output d o m outputter r0", "$ r3 = r7 processor", "r8 = org jdom2 output d o m outputter r0", "$ r2 = r8 adapter", "$ r4 = $ r2 create document", "r9 = org jdom2 output d o m outputter r0", "$ r5 = r9 format", "$ r6 = $ r3 process $ r4 $ r5 r1", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r8 = org jdom2 util namespace stack r0", "$ r1 = r8 add", "r9 = org jdom2 util namespace stack r0", "$ i0 = r9 depth", "$ r2 = $ r1 [ $ i0 ]", "$ i1 = lengthof $ r2", "if $ i1 ! = 0 goto label1", "$ r6 = org jdom2 util namespace stack emptyiter", "return $ r6", "if $ i1 ! = 0 goto label1", "label r7 = new org jdom2 util namespace stack $ namespace iterable", "r10 = org jdom2 util namespace stack r0", "$ r4 = r10 add", "r11 = org jdom2 util namespace stack r0", "$ i2 = r11 depth", "$ r5 = $ r4 [ $ i2 ]", "specialinvoke r7 < init > $ r5 1", "r12 = java lang iterable r7", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r8 = org jdom2 util namespace stack r0", "$ r1 = r8 add", "r9 = org jdom2 util namespace stack r0", "$ i0 = r9 depth", "$ r2 = $ r1 [ $ i0 ]", "$ i1 = lengthof $ r2", "if $ i1 ! = 0 goto label1", "$ r6 = org jdom2 util namespace stack emptyiter", "return $ r6", "if $ i1 ! = 0 goto label1", "label r7 = new org jdom2 util namespace stack $ namespace iterable", "r10 = org jdom2 util namespace stack r0", "$ r4 = r10 add", "r11 = org jdom2 util namespace stack r0", "$ i2 = r11 depth", "$ r5 = $ r4 [ $ i2 ]", "specialinvoke r7 < init > $ r5 0", "r12 = java lang iterable r7", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["c0 = @ parameter0", "$ r0 = org jdom2 verifier charflags", "$ b1 = $ r0 [ c0 ]", "$ b2 = $ b1 & 2", "$ b3 = byte $ b2", "if 0 == $ b3 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if 0 == $ b3 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r6 = new java lang null pointer exception", "specialinvoke r6 < init > \\ `` null qname\\ ``", "throw r6", "if r1 ! = null goto label1", "label r7 = org jdom2 xpath x path builder r0", "$ r2 = r7 variable", "if $ r2 ! = null goto label2", "return null", "if $ r2 ! = null goto label2", "label r8 = org jdom2 xpath x path builder r0", "$ r3 = r8 variable", "$ r4 = $ r3 get r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api client abstract client request adapter r0", "$ r1 = r2 cra", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api client async view resource r0", "$ r1 = r2 u", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang illegal state exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api client filter client filter r0", "$ r1 = r2 next", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey servlet init internal localization message localizer", "$ r3 = org glassfish jersey servlet init internal localization message localizable j e r s e y_ a p p_ n o_ m a p p i n g_ o r_ a n n o t a t i o n r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey servlet internal localization message localizer", "$ r3 = org glassfish jersey servlet internal localization message localizable s e r v l e t_ p a t h_ m i s m a t c h r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org glassfish jersey servlet servlet container r0", "$ r1 = r5 filter config", "if $ r1 == null goto label1", "r6 = org glassfish jersey servlet servlet container r0", "$ r3 = r6 filter config", "$ r4 = $ r3 get servlet context", "return $ r4", "if $ r1 == null goto label1", "label $ r2 = specialinvoke r0 get servlet context", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = r1 length", "jersey repackaged com google common base precondition check position index i0 i1", "i4 = i0", "label if i4 > = i1 goto label3", "$ c3 = r1 char at i4", "r2 = jersey repackaged com google common base char matcher r0", "$ z0 = r2 match $ c3", "if $ z0 == 0 goto label2", "return i4", "if $ z0 == 0 goto label2", "label i4 = i4 + 1", "goto label1", "label if i4 > = i1 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey jaxb internal localization message localizer", "$ r2 = org glassfish jersey jaxb internal localization message localizable s a x_ c a n n o t_ d i s a b l e_ p a r a m e t e r_ e n t i t y_ p r o c e s s i n g_ f e a t u r e r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey jaxb internal localization message localizer", "$ r2 = org glassfish jersey jaxb internal localization message localizable e r r o r_ u n m a r s h a l l i n g_ j a x b r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org glassfish jersey jaxb internal localization message localizer", "$ r1 = org glassfish jersey jaxb internal localization message localizable u n a b l e_ t o_ s e c u r e_ x m l_ t r a n s f o r m e r_ p r o c e s s i n g", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api j response r0", "$ r1 = r2 status type", "$ i0 = $ r1 get status code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api j response r0", "$ r1 = r2 entity", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey api param exception r0", "$ r1 = r2 parameter type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com sun jersey server impl model method resource method r0", "$ r4 = r7 consume mime", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label4", "$ r5 = r2 next", "r3 = javax w r core medium type $ r5", "$ r6 = r3 get type", "$ z1 = $ r6 equal \\ `` * \\ ``", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label $ z2 = r1 be compatible r3", "if $ z2 == 0 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i8 = @ parameter1", "r6 = com sun jersey server impl uri rule automata trie arc r0", "$ r2 = r6 code", "$ i0 = lengthof $ r2", "$ i1 = i8 + $ i0", "$ i2 = r1 length", "if $ i1 < = $ i2 goto label1", "return 0", "if $ i1 < = $ i2 goto label1", "label i9 = 0", "label r7 = com sun jersey server impl uri rule automata trie arc r0", "$ r3 = r7 code", "$ i3 = lengthof $ r3", "if i9 > = $ i3 goto label4", "r8 = com sun jersey server impl uri rule automata trie arc r0", "$ r5 = r8 code", "$ c6 = $ r5 [ i9 ]", "$ i5 = i8", "i8 = i8 + 1", "$ c7 = r1 char at $ i5", "if $ c6 == $ c7 goto label3", "label i9 = i9 + 1", "goto label2", "if i9 > = $ i3 goto label4", "label r9 = com sun jersey server impl uri rule automata trie arc r0", "$ r4 = r9 code", "$ i4 = lengthof $ r4", "return $ i4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey server impl uri rule base rule r0", "$ r1 = r2 template", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r2 = r0 get raw path", "$ z1 = $ r2 contain \\ `` \\ ``", "if $ z1 ! = 0 goto label1", "$ r9 = r0 normalize", "return $ r9", "if $ z1 ! = 0 goto label1", "label $ r3 = r0 get raw path", "r1 = com sun jersey server impl uri uri helper remove dot segment $ r3 z0", "$ r4 = r0 get raw path", "$ z2 = r1 equal $ r4", "if $ z2 == 0 goto label2", "return r0", "if $ z2 == 0 goto label2", "label $ r5 = javax w r core uri builder from uri r0", "$ r6 = $ r5 replace path r1", "$ r7 = newarray java lang object [ 0 ]", "$ r8 = $ r6 build $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = com sun jersey server wadl generator resourcedoc model method doc type r0", "$ r1 = r2 comment text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun jersey server wadl generator resourcedoc model method doc type r0", "r2 comment text = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun jersey spi container adapt container response r0", "$ r2 = r3 acr", "$ r2 map mappable container exception r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = com sun research w wadl application r0", "$ r1 = r5 doc", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = com sun research w wadl application r0", "r6 doc = r4", "label r7 = com sun research w wadl application r0", "$ r2 = r7 doc", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = com sun research w wadl doc r0", "$ r1 = r2 title", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com sun research w wadl link r0", "r2 resource type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com sun research w wadl link r0", "$ r1 = r2 rel", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun research w wadl param r0", "$ r1 = r2 style", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com sun research w wadl param r0", "$ r1 = r2 fix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com sun research w wadl resource r0", "$ r1 = r5 method or resource", "if $ r1 ! = null goto label1", "r4 = new java util array list", "specialinvoke r4 < init >", "r6 = com sun research w wadl resource r0", "r6 method or resource = r4", "label r7 = com sun research w wadl resource r0", "$ r2 = r7 method or resource", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org glassfish jersey server chunk output r0", "$ z0 = r1 close", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org glassfish jersey server container request r0", "r1 = specialinvoke r5 get inflector", "$ z0 = r1 instanceof org glassfish jersey server model resource method invoker", "if $ z0 == 0 goto label1", "$ r3 = org glassfish jersey server model resource method invoker r1", "$ r4 = $ r3 get reader interceptor", "goto label2", "label return $ r4", "if $ z0 == 0 goto label1", "label r6 = org glassfish jersey server container request r0", "$ r2 = r6 processing provider", "$ r4 = $ r2 get sort global reader interceptor"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey server container request r0", "$ r1 = r2 vary value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org glassfish jersey server container response r0", "r1 map from exception = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = org glassfish jersey server container response r0", "$ z0 = r4 close", "if $ z0 ! = 0 goto label1", "r5 = org glassfish jersey server container response r0", "r5 close = 1", "r6 = org glassfish jersey server container response r0", "$ r1 = r6 message context", "$ r1 close", "r7 = org glassfish jersey server container response r0", "$ r2 = r7 request context", "$ r3 = $ r2 get response writer", "$ r3 commit", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i1 = r0 length", "if $ i1 ! = 0 goto label2", "label return r0", "if $ i1 ! = 0 goto label2", "label i4 = 0", "label if i4 == $ i1 goto label4", "$ r3 = \\ `` \\ ``", "$ c2 = r0 char at i4", "$ i3 = $ r3 index of $ c2", "if $ i3 == -1 goto label4", "i4 = i4 + 1", "goto label3", "if $ i3 == -1 goto label4", "label if i4 < = 0 goto label5", "$ i5 = i4 - 1", "goto label6", "label $ r1 = r0 substring $ i5", "return $ r1", "label if i4 < = 0 goto label5", "label $ i5 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [], [21], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable r e s o u r c e_ c o n f i g_ e r r o r_ n u l l_ a p p l i c a t i o n c l a s s", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable e x c e p t i o n_ m a p p e r_ f a i l e d_ f o r_ e x c e p t i o n", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable e r r o r_ m o n i t o r i n g_ m b e a n s_ u n r e g i s t r a t i o n_ d e s t r o y", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable e r r o r_ p r i m i t i v e_ t y p e_ n u l l", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable e r r o r_ r e q u e s t_ s e t_ e n t i t y_ s t r e a m_ i n_ r e s p o n s e_ p h a s e", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org glassfish jersey server internal localization message localizer", "$ r4 = org glassfish jersey server internal localization message localizable r e s o u r c e_ a m b i g u o u s r0 r1 r2", "$ r5 = $ r3 localize $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable e r r o r_ c o m m i t t i n g_ o u t p u t_ s t r e a m", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey server internal localization message localizer", "$ r2 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ g e n e r a t o r_ c o n f i g_ l o a d e r r0", "$ r3 = $ r1 localize $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey server internal localization message localizer", "$ r3 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ b u i l d e r_ g e n e r a t i o n_ m e t h o d r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org glassfish jersey server internal localization message localizer", "$ r1 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ g r a m m a r_ a l r e a d y_ c o n t a i n s", "$ r2 = $ r0 localize $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey server internal localization message localizer", "$ r3 = org glassfish jersey server internal localization message localizable m e t h o d_ e m p t y_ p a t h_ a n n o t a t i o n r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org glassfish jersey server internal localization message localizer", "$ r4 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ b u i l d e r_ g e n e r a t i o n_ p a r a m r0 r1 r2", "$ r5 = $ r3 localize $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey server internal localization message localizer", "$ r3 = org glassfish jersey server internal localization message localizable w a d l_ d o c_ s i m p l e_ w a d l r0 r1", "$ r4 = $ r2 localize $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org glassfish jersey server internal monitoring jmx execution statistic dynamic bean r0", "r2 execution statistic = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey server internal process request processing context r0", "$ r1 = r2 rout context", "r3 = org glassfish jersey server internal routing rout context $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = new org glassfish jersey server internal scanning annotation accept listener", "$ r1 = newarray java lang class [ 2 ]", "$ r1 [ 0 ] = class \\ `` ljavax w rs path \\ ``", "$ r1 [ 1 ] = class \\ `` ljavax w r ext provider \\ ``", "specialinvoke $ r0 < init > $ r1", "return $ r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org glassfish jersey server model invocable create r0 r1 0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org glassfish jersey server model method handler create r0", "$ r2 = org glassfish jersey server model invocable apply_inflector_method", "$ r3 = org glassfish jersey server model invocable create $ r1 $ r2 0", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new org glassfish jersey server model method list $ 3", "r5 = org glassfish jersey server model method list r0", "specialinvoke r4 < init > r5 r1", "r6 = org glassfish jersey server model method list r0", "r7 = org glassfish jersey server model method list $ filter r4", "$ r3 = r6 filter r7", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["$ r0 = new org glassfish jersey server model resource $ builder", "specialinvoke $ r0 < init > null", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org glassfish jersey server model resource r0", "$ r1 = r2 child resource", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = org glassfish jersey server resource config r0", "return r4", "if r1 ! = null goto label1", "label $ r2 = jersey repackaged com google common collect set new hash set r1", "r5 = org glassfish jersey server resource config r0", "$ r3 = r5 register instance $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 get value be adjust", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label $ r2 = r1 get source", "r8 = org jets3t apps cockpit cockpit r0", "$ r3 = r8 bucket table", "$ r4 = $ r3 get selection model", "$ z1 = $ r2 equal $ r4", "if $ z1 == 0 goto label2", "r9 = org jets3t apps cockpit cockpit r0", "specialinvoke r9 bucket select action", "goto label3", "label return", "if $ z1 == 0 goto label2", "label $ r5 = r1 get source", "r10 = org jets3t apps cockpit cockpit r0", "$ r6 = r10 object table", "$ r7 = $ r6 get selection model", "$ z2 = $ r5 equal $ r7", "if $ z2 == 0 goto label3", "r11 = org jets3t apps cockpit cockpit r0", "specialinvoke r11 object select action"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org jets3t apps cockpit cockpit r0", "$ z0 = r6 be stand alone application", "if $ z0 ! = 0 goto label2", "if r2 ! = null goto label1", "r7 = org jets3t apps cockpit cockpit r0", "$ r5 = r7 get applet context", "$ r5 show document r1", "goto label3", "label return", "if r2 ! = null goto label1", "label r8 = org jets3t apps cockpit cockpit r0", "$ r4 = r8 get applet context", "$ r4 show document r1 r2", "if $ z0 ! = 0 goto label2", "label $ r3 = r1 to string", "contribs com centerkey utils bare bone browser launch open u r l $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = java lang class loader get system resource a stream \\ `` sample properties\\ ``", "if r0 ! = null goto label1", "$ r9 = new java lang runtime exception", "specialinvoke $ r9 < init > \\ `` unable to load test property file from classpath sample properties\\ ``", "throw $ r9", "if r0 ! = null goto label1", "label $ r3 = new java util property", "specialinvoke $ r3 < init >", "$ r3 load r0", "$ z0 = $ r3 contain key \\ `` aws access key\\ ``", "if $ z0 ! = 0 goto label2", "$ r8 = new java lang runtime exception", "specialinvoke $ r8 < init > \\ `` property file \\'samples properties\\ ' do not contain required property aws access key\\ ``", "throw $ r8", "if $ z0 ! = 0 goto label2", "label $ z1 = $ r3 contain key \\ `` aws secret key\\ ``", "if $ z1 ! = 0 goto label3", "$ r7 = new java lang runtime exception", "specialinvoke $ r7 < init > \\ `` property file \\'samples properties\\ ' do not contain required property aws secret key\\ ``", "throw $ r7", "if $ z1 ! = 0 goto label3", "label $ r4 = new org jets3t service security a w s credential", "$ r5 = $ r3 get property \\ `` aws access key\\ ``", "$ r6 = $ r3 get property \\ `` aws secret key\\ ``", "specialinvoke $ r4 < init > $ r5 $ r6", "return $ r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label2", "r3 = r1 [ i1 ]", "$ r4 = r3 get grantee", "$ r5 = r3 get permission", "r6 = org jets3t service acl access control list r0", "r6 grant permission $ r4 $ r5", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service acl group grantee r0", "r2 id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jets3t service cloud front service r0", "$ r1 = r2 list distribution 100", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jets3t service cloud front service r0", "$ r1 = r2 list stream distribution 100", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jets3t service impl rest httpclient google storage service r0", "$ r1 = r2 list all bucket null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org jets3t service impl rest httpclient rest storage service r0", "$ r1 = r5 get jet s3t property", "r6 = org jets3t service impl rest httpclient rest storage service r0", "$ r2 = r6 get invoke application description", "r7 = org jets3t service impl rest httpclient rest storage service r0", "$ r3 = r7 get credential provider", "$ r4 = org jets3t service utils rest utils init http connection r0 $ r1 $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org jets3t service model a w s dev pay product r0", "$ r2 = r5 get product name", "$ r3 = org jets3t service model a w s dev pay product r1", "$ r4 = $ r3 get product name", "$ i0 = $ r2 compare to $ r4", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service model g s object r0", "r2 acl = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org jets3t service model storage object r0", "$ r1 = r3 data input stream", "if $ r1 == null goto label1", "r4 = org jets3t service model storage object r0", "$ r2 = r4 data input stream", "$ r2 close", "r5 = org jets3t service model storage object r0", "r5 data input stream = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service model storage object r0", "r2 add metadata \\ `` last- modified\\", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "$ r1 = java lang string value of l0", "r2 = org jets3t service model storage object r0", "r2 add metadata \\ `` content- length\\", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set name r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append \\ `` { \\\\\\ `` \\ ``", "$ r4 = $ r3 append r0", "$ r5 = $ r4 append \\ `` \\\\\\ `` \\\\\\ `` \\ ``", "$ r6 = $ r5 append r1", "$ r7 = $ r6 append \\ `` \\\\\\ `` } \\ ``", "$ r8 = $ r7 to string", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get upload id", "$ r3 = r1 get bucket name", "$ r4 = r1 get object key", "r5 = org jets3t service s3 service r0", "r5 multipart abort upload impl $ r2 $ r3 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "label $ r1 = new org jets3t service security encryption util", "specialinvoke $ r1 < init > \\ `` sample key\\", "$ r1 encrypt \\ `` test encryption \\ ``", "label goto label6", "label return 1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service service exception r0", "r2 request path = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "$ r3 = r1 get name", "if $ r3 == null goto label1", "$ r4 = r1 get name", "$ i0 = $ r4 length", "if $ i0 ! = 0 goto label2", "label r13 = new org jets3t service service exception", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r7 = r12 append \\ `` the action \\ ``", "$ r8 = $ r7 append r2", "$ r9 = $ r8 append \\ `` can not be perform with an invalid bucket \\ ``", "$ r10 = $ r9 append r1", "$ r11 = $ r10 to string", "specialinvoke r13 < init > $ r11", "r14 = java lang throwable r13", "throw r14", "if $ i0 ! = 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service storage service r0", "r2 delete bucket impl r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = new java util date", "$ l0 = java lang system current time millis", "r3 = org jets3t service storage service r0", "$ l1 = r3 time offset", "$ l2 = $ l0 + $ l1", "specialinvoke r2 < init > $ l2", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org jets3t service utils gatekeeper gatekeeper message r0", "$ r2 = r3 message property", "$ r2 put all r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r6 = org jets3t service utils gatekeeper gatekeeper message log", "$ z0 = $ r6 be debug enabled", "if $ z0 == 0 goto label1", "$ r68 = org jets3t service utils gatekeeper gatekeeper message log", "$ r68 debug \\ `` encode gatekeeper message to properties\\ ``", "label r82 = new java util property", "specialinvoke r82 < init >", "r93 = org jets3t service utils gatekeeper gatekeeper message r0", "$ r8 = r93 application property", "$ r9 = $ r8 entry set", "r69 = $ r9 iterator", "label $ z3 = r69 have next", "if $ z3 == 0 goto label3", "$ r60 = r69 next", "r70 = java util map $ entry $ r60", "$ r61 = r70 get key", "r71 = java lang string $ r61", "$ r62 = r70 get value", "r72 = java lang string $ r62", "r83 = new java lang string builder", "specialinvoke r83 < init >", "$ r64 = r83 append \\ `` application\\ ``", "$ r65 = $ r64 append \\ `` |\\ ``", "$ r66 = $ r65 append r71", "$ r67 = $ r66 to string", "r94 = org jets3t service utils gatekeeper gatekeeper message r0", "specialinvoke r94 encode property r82 $ r67 r72", "goto label2", "if $ z3 == 0 goto label3", "label r95 = org jets3t service utils gatekeeper gatekeeper message r0", "$ r10 = r95 message property", "$ r11 = $ r10 entry set", "r73 = $ r11 iterator", "label $ z1 = r73 have next", "if $ z1 == 0 goto label5", "$ r52 = r73 next", "r74 = java util map $ entry $ r52", "$ r53 = r74 get key", "r75 = java lang string $ r53", "$ r54 = r74 get value", "r76 = java lang string $ r54", "r84 = new java lang string builder", "specialinvoke r84 < init >", "$ r56 = r84 append \\ `` message\\ ``", "$ r57 = $ r56 append \\ `` |\\ ``", "$ r58 = $ r57 append r75", "$ r59 = $ r58 to string", "r96 = org jets3t service utils gatekeeper gatekeeper message r0", "specialinvoke r96 encode property r82 $ r59 r76", "goto label4", "if $ z1 == 0 goto label5", "label r97 = org jets3t service utils gatekeeper gatekeeper message r0", "r77 = r97 get signature request", "i1 = 0", "label $ i0 = lengthof r77", "if i1 > = $ i0 goto label9", "r78 = r77 [ i1 ]", "r85 = new java lang string builder", "specialinvoke r85 < init >", "$ r13 = r85 append \\ `` request\\ ``", "$ r14 = $ r13 append \\ `` |\\ ``", "$ r15 = $ r14 append i1", "$ r16 = $ r15 append \\ `` |\\ ``", "r79 = $ r16 to string", "r86 = new java lang string builder", "specialinvoke r86 < init >", "$ r18 = r86 append r79", "$ r19 = $ r18 append \\ `` signature type\\ ``", "$ r20 = $ r19 to string", "$ r21 = r78 get signature type", "r98 = org jets3t service utils gatekeeper gatekeeper message r0", "specialinvoke r98 encode property r82 $ r20 $ r21", "r87 = new java lang string builder", "specialinvoke r87 < init >", "$ r23 = r87 append r79", "$ r24 = $ r23 append \\ `` object key\\ ``", "$ r25 = $ r24 to string", "$ r26 = r78 get object key", "r99 = org jets3t service utils gatekeeper gatekeeper message r0", "specialinvoke r99 encode property r82 $ r25 $ r26", "r88 = new java lang string builder", "specialinvoke r88 < init >", "$ r28 = r88 append r79", "$ r29 = $ r28 append \\ `` bucket name\\ ``", "$ r30 = $ r29 to string", "$ r31 = r78 get bucket name", "r100 = org jets3t service utils gatekeeper gatekeeper message r0", "specialinvoke r100 encode property r82 $ r30 $ r31", "r89 = new java lang string builder", "specialinvoke r89 < init >", "$ r33 = r89 append r79", "$ r34 = $ r33 append \\ `` sign url\\ ``", "$ r35 = $ r34 to string", "$ r36 = r78 get sign url", "r101 = org jets3t service utils gatekeeper gatekeeper message r0", "specialinvoke r101 encode property r82 $ r35 $ r36", "r90 = new java lang string builder", "specialinvoke r90 < init >", "$ r38 = r90 append r79", "$ r39 = $ r38 append \\ `` decline reason\\ ``", "$ r40 = $ r39 to string", "$ r41 = r78 get decline reason", "r102 = org jets3t service utils gatekeeper gatekeeper message r0", "specialinvoke r102 encode property r82 $ r40 $ r41", "r91 = new java lang string builder", "specialinvoke r91 < init >", "$ r43 = r91 append r79", "$ r44 = $ r43 append \\ `` metadata|\\ ``", "r80 = $ r44 to string", "r2 = r78 get object metadata", "$ r45 = r2 entry set", "r81 = $ r45 iterator", "label $ z2 = r81 have next", "if $ z2 == 0 goto label8", "$ r46 = r81 next", "r3 = java util map $ entry $ r46", "$ r47 = r3 get key", "r4 = java lang string $ r47", "r5 = r3 get value", "r92 = new java lang string builder", "specialinvoke r92 < init >", "$ r49 = r92 append r80", "$ r50 = $ r49 append r4", "$ r51 = $ r50 to string", "r103 = org jets3t service utils gatekeeper gatekeeper message r0", "specialinvoke r103 encode property r82 $ r51 r5", "goto label7", "if $ z2 == 0 goto label8", "label i1 = i1 + 1", "goto label6", "if i1 > = $ i0 goto label9", "label return r82"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [], [129], [130], [], [132], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service utils gatekeeper signature request r0", "r2 sign url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jets3t service utils gatekeeper signature request r0", "r2 decline reason = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r29 = org jets3t service utils oauth o auth utils r0", "$ r4 = r29 implementation", "$ r3 = org jets3t service utils oauth o auth utils $ o auth implementation google_storage_oauth2_10", "if $ r4 ! = $ r3 goto label1", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r12 = r25 append \\ `` https account google com o oauth2 auth ? response_type=code & redirect_uri=urnietfwgoauth2 oob & client_id=\\ ``", "r30 = org jets3t service utils oauth o auth utils r0", "$ r13 = r30 client id", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` & scope=\\ ``", "$ r16 = $ r15 append r1", "r2 = $ r16 to string", "$ r18 = org jets3t service utils oauth o auth utils log", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r19 = r26 append \\ `` generated authorization url for o auth implementation \\ ``", "r31 = org jets3t service utils oauth o auth utils r0", "$ r20 = r31 implementation", "$ r21 = $ r19 append $ r20", "$ r22 = $ r21 append \\ `` \\ ``", "$ r23 = $ r22 append r2", "$ r24 = $ r23 to string", "$ r18 debug $ r24", "return r2", "if $ r4 ! = $ r3 goto label1", "label r28 = new java lang illegal state exception", "r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r7 = r27 append \\ `` unsupported implementation \\ ``", "r32 = org jets3t service utils oauth o auth utils r0", "$ r8 = r32 implementation", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 to string", "specialinvoke r28 < init > $ r10", "throw r28"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "org jets3t service utils rest utils init http proxy r0 r1 1 null -1 null null null r2", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r3 = new org apache http params sync basic http params", "specialinvoke r3 < init >", "$ r2 = org apache http http version http_1_1", "r4 = org apache http params http params r3", "r5 = org apache http protocol version $ r2", "org apache http params http protocol params set version r4 r5", "r6 = org apache http params http params r3", "org apache http params http protocol params set content charset r6 \\ `` iso-8859-1\\ ``", "r7 = org apache http params http params r3", "org apache http params http connection params set tcp no delay r7 1", "r8 = org apache http params http params r3", "org apache http params http connection params set socket buffer size r8 8192", "r9 = org apache http params http params r3", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r2 = newarray org jets3t service model s3 object [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r1", "if i2 > = $ i1 goto label2", "$ r3 = new org jets3t service model s3 object", "$ r4 = r1 [ i2 ]", "$ r5 = $ r4 get object key", "specialinvoke $ r3 < init > $ r5", "r2 [ i2 ] = $ r3", "$ r7 = r2 [ i2 ]", "$ r6 = r1 [ i2 ]", "$ r8 = $ r6 get object metadata", "$ r7 add all metadata $ r8", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["i0 = @ parameter0", "if 300 > i0 goto label1", "if i0 > 399 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 > 399 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse jetty io abstract connection log", "$ z0 = $ r1 be debug enabled", "if $ z0 == 0 goto label1", "$ r5 = org eclipse jetty io abstract connection log", "$ r4 = newarray java lang object [ 1 ]", "$ r4 [ 0 ] = r0", "$ r5 debug \\ `` fill interested { } \\", "label r6 = org eclipse jetty io abstract connection r0", "$ r2 = r6 get end point", "r7 = org eclipse jetty io abstract connection r0", "$ r3 = r7 _read callback", "$ r2 fill interested $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org eclipse jetty io abstract connection log", "$ z0 = $ r2 be debug enabled", "if $ z0 == 0 goto label1", "$ r8 = org eclipse jetty io abstract connection log", "$ r7 = newarray java lang object [ 2 ]", "$ r7 [ 0 ] = r0", "$ r7 [ 1 ] = r1", "$ r8 debug \\ `` { } on fill interested fail { } \\", "label r9 = org eclipse jetty io abstract connection r0", "$ r3 = r9 _end point", "$ z1 = $ r3 be open", "if $ z1 == 0 goto label4", "z4 = 1", "$ z2 = r1 instanceof java util concurrent timeout exception", "if $ z2 == 0 goto label2", "r10 = org eclipse jetty io abstract connection r0", "z4 = r10 on read timeout", "label if z4 == 0 goto label4", "r11 = org eclipse jetty io abstract connection r0", "$ r4 = r11 _end point", "$ z3 = $ r4 be output shutdown", "if $ z3 == 0 goto label3", "r12 = org eclipse jetty io abstract connection r0", "$ r6 = r12 _end point", "$ r6 close", "goto label4", "label return", "if $ z3 == 0 goto label3", "label r13 = org eclipse jetty io abstract connection r0", "$ r5 = r13 _end point", "$ r5 shutdown output", "r14 = org eclipse jetty io abstract connection r0", "r14 fill interested"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jetty security hash login service r0", "r2 _config = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org eclipse jetty server handler handler collection r0", "$ r2 = r5 get handler", "$ r3 = org eclipse jetty util array util add to array $ r2 r1 class \\ `` lorg eclipse jetty server handler \\ ``", "$ r4 = org eclipse jetty server handler [ ] $ r3", "r6 = org eclipse jetty server handler handler collection r0", "r6 set handler $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = java lang boolean true", "r5 = org eclipse jetty server http configuration r0", "$ r2 = r5 _form encode method", "$ r4 = $ r2 get r1", "$ z0 = $ r3 equal $ r4", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jetty server session abstract session manager r0", "r1 _secure request only = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r5 = org eclipse jetty servlet error page error handler r0", "$ r2 = r5 _error page", "$ r3 = java lang integer to string i0", "$ r2 put $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jetty util ssl ssl context factory r0", "$ i0 = r1 _ssl session cache size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jetty util ssl ssl context factory r0", "r1 _ssl session cache size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com kenai jffi array r0", "$ r1 = r2 element type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com kenai jffi page manager r0", "$ i0 = r1 page size", "if $ i0 == 0 goto label1", "r2 = com kenai jffi page manager r0", "$ i1 = r2 page size", "$ l2 = long $ i1", "goto label2", "label return $ l2", "if $ i0 == 0 goto label1", "label r3 = com kenai jffi page manager r0", "$ l2 = specialinvoke r3 calculate page size"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return \\ `` lib * \\\\ so * $ \\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = java_cup runtime lr_parser r0", "r2 _scanner = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r7 = java_cup runtime virtual_parse_stack r0", "$ r1 = r7 vstack", "$ z0 = $ r1 empty", "if $ z0 == 0 goto label1", "r6 = new java lang exception", "specialinvoke r6 < init > \\ `` internal parser error top call on empty virtual stack\\ ``", "throw r6", "if $ z0 == 0 goto label1", "label r8 = java_cup runtime virtual_parse_stack r0", "$ r2 = r8 vstack", "$ r3 = $ r2 peek", "$ r4 = java lang integer $ r3", "$ i0 = $ r4 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new jflex int char set", "specialinvoke r4 < init > r1", "r5 = jflex char class r0", "$ r3 = specialinvoke r5 get class code r4 0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r12 = jflex char class r0", "$ r4 = r12 class", "i0 = $ r4 size", "i7 = 0", "i8 = 0", "label if i8 > = i0 goto label2", "r13 = jflex char class r0", "$ r8 = r13 class", "$ r9 = $ r8 get i8", "$ r10 = jflex int char set $ r9", "$ i6 = $ r10 num interval", "i7 = i7 + $ i6", "i8 = i8 + 1", "goto label1", "label if i8 > = i0 goto label2", "label r1 = newarray jflex char class interval [ i7 ]", "i9 = 0", "i10 = 0", "label if i9 > = i7 goto label4", "r14 = jflex char class r0", "i1 = r14 get class code i10", "r15 = jflex char class r0", "$ r5 = r15 class", "$ r6 = $ r5 get i1", "r2 = jflex int char set $ r6", "r3 = r2 get next", "$ i2 = i9", "i9 = i9 + 1", "r11 = new jflex char class interval", "$ i4 = r3 start", "$ i3 = r3 end", "specialinvoke r11 < init > $ i4 $ i3 i1", "r1 [ $ i2 ] = r11", "$ i5 = r3 end", "i10 = $ i5 + 1", "goto label3", "label if i9 > = i7 goto label4", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [], [38], []]}
{"nodes": ["r0 = @ this", "$ r1 = jflex lex parse _production_table", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "label jflex main generate r0", "label goto label5", "label return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be file", "if $ z0 == 0 goto label1", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r8 = r13 append \\ `` error \\\\\\ `` \\ ``", "$ r9 = $ r8 append r0", "$ r10 = $ r9 append \\ `` \\\\\\ `` be not a directory \\ ``", "$ r11 = $ r10 to string", "jflex out error $ r11", "r14 = new jflex generator exception", "specialinvoke r14 < init >", "r17 = java lang throwable r14", "throw r17", "if $ z0 == 0 goto label1", "label $ z1 = r0 be directory", "if $ z1 ! = 0 goto label2", "$ z2 = r0 mkdirs", "if $ z2 ! = 0 goto label2", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r2 = r15 append \\ `` error couldn\\'t create directory \\\\\\ `` \\ ``", "$ r3 = $ r2 append r0", "$ r4 = $ r3 append \\ `` \\\\\\ `` \\ ``", "$ r5 = $ r4 to string", "jflex out error $ r5", "r16 = new jflex generator exception", "specialinvoke r16 < init >", "r18 = java lang throwable r16", "throw r18", "if $ z2 ! = 0 goto label2", "label jflex option directory = r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = jflex option time", "if $ z0 == 0 goto label1", "$ r3 = r1 to string", "r2 = jflex error message get r0 $ r3", "$ r4 = jflex out out", "$ r4 println r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["$ i0 = jflex out error", "if $ i0 < = 0 goto label1", "r1 = new jflex generator exception", "specialinvoke r1 < init >", "r2 = java lang throwable r1", "throw r2", "if $ i0 < = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r12 = jline console kill ring r0", "r12 last yank = 0", "r13 = jline console kill ring r0", "$ z0 = r13 last kill", "if $ z0 == 0 goto label1", "r14 = jline console kill ring r0", "$ r3 = r14 slot", "r15 = jline console kill ring r0", "$ i1 = r15 head", "$ r4 = $ r3 [ $ i1 ]", "if $ r4 == null goto label1", "r11 = new java lang string builder", "specialinvoke r11 < init >", "r16 = jline console kill ring r0", "$ r6 = r16 slot", "r17 = jline console kill ring r0", "$ i2 = r17 head", "$ r7 = $ r6 [ $ i2 ]", "$ r8 = r11 append $ r7", "$ r9 = $ r8 append r1", "$ r10 = $ r9 to string", "$ r6 [ $ i2 ] = $ r10", "return", "if $ r4 == null goto label1", "label r18 = jline console kill ring r0", "r18 last kill = 1", "r19 = jline console kill ring r0", "specialinvoke r19 next", "r20 = jline console kill ring r0", "$ r2 = r20 slot", "r21 = jline console kill ring r0", "$ i0 = r21 head", "$ r2 [ $ i0 ] = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "r8 = jline internal input stream reader r0", "$ r4 = r8 lock", "entermonitor $ r4", "label r9 = jline internal input stream reader r0", "$ z0 = specialinvoke r9 be open", "if $ z0 ! = 0 goto label2", "r7 = new java io i o exception", "specialinvoke r7 < init > \\ `` input stream reader be close \\ ``", "throw r7", "if $ z0 ! = 0 goto label2", "label r2 = newarray char [ 4 ]", "r10 = jline internal input stream reader r0", "$ i0 = r10 read r2 0 4", "if $ i0 == -1 goto label3", "$ i1 = java lang character code point at r2 0", "goto label4", "label exitmonitor $ r4", "label return $ i1", "if $ i0 == -1 goto label3", "label $ i1 = -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = jline unix terminal r0", "$ r1 = r2 setting", "$ r1 restore", "specialinvoke r0 restore", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = r1 get lhs expr", "$ r6 = $ r5 accept r0 r2", "r3 = com fasterxml jackson databind json node $ r6", "$ r7 = r1 get rhs expr", "$ r8 = $ r7 accept r0 r2", "r4 = com fasterxml jackson databind json node $ r8", "$ z0 = r1 match r3 r4", "if $ z0 == 0 goto label1", "$ r10 = com fasterxml jackson databind node boolean node true", "r11 = com fasterxml jackson databind json node $ r10", "return r11", "if $ z0 == 0 goto label1", "label $ r9 = com fasterxml jackson databind node boolean node false", "r12 = com fasterxml jackson databind json node $ r9", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = r1 get lhs expr", "$ r6 = $ r5 accept r0 r2", "r3 = com fasterxml jackson databind json node $ r6", "$ r7 = r1 get rhs expr", "$ r8 = $ r7 accept r0 r2", "r4 = com fasterxml jackson databind json node $ r8", "$ z0 = r1 match r3 r4", "if $ z0 == 0 goto label1", "$ r10 = com fasterxml jackson databind node boolean node true", "r11 = com fasterxml jackson databind json node $ r10", "return r11", "if $ z0 == 0 goto label1", "label $ r9 = com fasterxml jackson databind node boolean node false", "r12 = com fasterxml jackson databind json node $ r9", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r5 = r1 get lhs expr", "$ r6 = $ r5 accept r0 r2", "r3 = com fasterxml jackson databind json node $ r6", "$ r7 = r1 get rhs expr", "$ r8 = $ r7 accept r0 r2", "r4 = com fasterxml jackson databind json node $ r8", "$ z0 = r1 match r3 r4", "if $ z0 == 0 goto label1", "$ r10 = com fasterxml jackson databind node boolean node true", "r11 = com fasterxml jackson databind json node $ r10", "return r11", "if $ z0 == 0 goto label1", "label $ r9 = com fasterxml jackson databind node boolean node false", "r12 = com fasterxml jackson databind json node $ r9", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = r1 get 0", "r2 = com fasterxml jackson databind json node $ r3", "$ z0 = r2 be textual", "if $ z0 == 0 goto label1", "$ r6 = com amazonaws jmespath jmes path length function get string length r2", "r9 = com fasterxml jackson databind json node $ r6", "return r9", "if $ z0 == 0 goto label1", "label $ z1 = r2 be array", "if $ z1 ! = 0 goto label2", "$ z2 = r2 be object", "if $ z2 == 0 goto label3", "label r7 = new com fasterxml jackson databind node int node", "$ i0 = r2 size", "specialinvoke r7 < init > $ i0", "r10 = com fasterxml jackson databind json node r7", "return r10", "if $ z2 == 0 goto label3", "label r8 = new com amazonaws jmespath invalid type exception", "specialinvoke r8 < init > \\ `` type mismatch expect a string or an array or an object \\ ``", "r11 = java lang throwable r8", "throw r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 equal r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = r1 compare to r2", "if $ i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org openjdk jmh infra thread params r0", "$ i0 = r1 group thread count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org openjdk jmh infra thread params r0", "$ i0 = r1 subgroup thread count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r31 = org openjdk jmh result run result r0", "$ r5 = r31 benchmark result", "$ z0 = $ r5 be empty", "if $ z0 == 0 goto label01", "return null", "if $ z0 == 0 goto label01", "label r29 = new java util array list", "specialinvoke r29 < init >", "r32 = org openjdk jmh result run result r0", "$ r7 = r32 benchmark result", "r21 = $ r7 iterator", "label $ z1 = r21 have next", "if $ z1 == 0 goto label05", "$ r18 = r21 next", "r22 = org openjdk jmh result benchmark result $ r18", "$ r19 = r22 get iteration result", "r23 = $ r19 iterator", "label $ z5 = r23 have next", "if $ z5 == 0 goto label04", "$ r20 = r23 next", "r24 = org openjdk jmh result iteration result $ r20", "r29 add r24", "goto label03", "if $ z5 == 0 goto label04", "label goto label02", "if $ z1 == 0 goto label05", "label r30 = new org openjdk jmh result benchmark result", "r33 = org openjdk jmh result run result r0", "$ r9 = r33 params", "specialinvoke r30 < init > $ r9 r29", "r34 = org openjdk jmh result run result r0", "$ r10 = r34 benchmark result", "r26 = $ r10 iterator", "label $ z2 = r26 have next", "if $ z2 == 0 goto label11", "$ r11 = r26 next", "r27 = org openjdk jmh result benchmark result $ r11", "$ r12 = r27 get benchmark result", "$ r13 = $ r12 key", "r28 = $ r13 iterator", "label $ z3 = r28 have next", "if $ z3 == 0 goto label10", "$ r14 = r28 next", "r2 = java lang string $ r14", "$ r15 = r27 get benchmark result", "$ r16 = $ r15 get r2", "r3 = $ r16 iterator", "label $ z4 = r3 have next", "if $ z4 == 0 goto label09", "$ r17 = r3 next", "r4 = org openjdk jmh result result $ r17", "r30 add benchmark result r4", "goto label08", "if $ z4 == 0 goto label09", "label goto label07", "if $ z3 == 0 goto label10", "label goto label06", "if $ z2 == 0 goto label11", "label return r30"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [], [55], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = newarray double [ 2 ]", "r5 = org openjdk jmh util abstract statistic r0", "$ l0 = r5 get n", "$ b1 = $ l0 cmp 2l", "if $ b1 > 0 goto label1", "r1 [ 1 ] = #na n", "r1 [ 0 ] = #na n", "return r1", "if $ b1 > 0 goto label1", "label r4 = new org apache common math3 distribution t distribution", "r6 = org openjdk jmh util abstract statistic r0", "$ l2 = r6 get n", "$ l3 = $ l2 - 1l", "$ d2 = double $ l3", "specialinvoke r4 < init > $ d2", "$ d3 = 1 0 - d0", "$ d4 = $ d3 2 0", "$ d5 = 1 0 - $ d4", "d1 = r4 inverse cumulative probability $ d5", "r7 = org openjdk jmh util abstract statistic r0", "$ d6 = r7 get mean", "r8 = org openjdk jmh util abstract statistic r0", "$ d7 = r8 get standard deviation", "$ d8 = d1 * $ d7", "r9 = org openjdk jmh util abstract statistic r0", "$ l4 = r9 get n", "$ d9 = double $ l4", "$ d10 = java lang math sqrt $ d9", "$ d11 = $ d8 $ d10", "$ d12 = $ d6 - $ d11", "r1 [ 0 ] = $ d12", "r10 = org openjdk jmh util abstract statistic r0", "$ d13 = r10 get mean", "r11 = org openjdk jmh util abstract statistic r0", "$ d14 = r11 get standard deviation", "$ d15 = d1 * $ d14", "r12 = org openjdk jmh util abstract statistic r0", "$ l5 = r12 get n", "$ d16 = double $ l5", "$ d17 = java lang math sqrt $ d16", "$ d18 = $ d15 $ d17", "$ d19 = $ d13 + $ d18", "r1 [ 1 ] = $ d19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = mockit internal util field reflection get field r0 r1 null", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = mockit internal util constructor reflection new instance r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = mockit internal util constructor reflection new instance r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = mockit internal startup startup activate code coverage if request r0 r1", "if $ z0 ! = 0 goto label1", "r2 = mockit internal startup mock bridge field create synthetic field in j r e class to hold mock bridge r1", "r3 = mockit internal startup instrumentation holder set r1 r2", "mockit internal startup startup initialize r3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "z0 = @ parameter1", "r2 = com sun jna pointer r0", "$ r1 = r2 get string array l0 -1 z0", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com sun jna structure r0", "$ z0 = r1 auto read", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = jnr constant constant set r0", "$ r2 = r5 name to constant", "$ r3 = $ r2 get r1", "$ r4 = jnr constant constant $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = jnr constant constant set r0", "$ r1 = r4 max value", "if $ r1 ! = null goto label1", "r5 = jnr constant constant set r0", "$ r3 = specialinvoke r5 get long field \\ `` max_value\\", "r6 = jnr constant constant set r0", "r6 max value = $ r3", "label r7 = jnr constant constant set r0", "$ r2 = r7 max value", "$ i0 = $ r2 int value", "$ l1 = long $ i0", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 address size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "$ b1 = r2 get byte l0", "$ r3 = java lang byte value of $ b1", "r4 = jnr ffi byref byte by reference r0", "r4 value = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "$ d0 = r2 get double l0", "$ r3 = java lang double value of $ d0", "r4 = jnr ffi byref double by reference r0", "r4 value = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "l0 = @ parameter2", "r5 = jnr ffi byref long long by reference r0", "$ r3 = r5 value", "$ r4 = java lang long $ r3", "$ l1 = $ r4 long value", "r2 put long long l0 $ l1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = jnr ffi object reference manager r0", "$ r2 = r3 add r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = jnr ffi pointer r0", "$ l0 = r1 address", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = jnr ffi struct r0", "r4 array begin", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "r3 = new jnr ffi struct $ address", "r5 = jnr ffi struct r0", "specialinvoke r3 < init > r5", "r1 [ i1 ] = r3", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r6 = jnr ffi struct r0", "r6 array end", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = jnr ffi struct r0", "r4 array begin", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "r3 = new jnr ffi struct $ address", "r5 = jnr ffi struct r0", "specialinvoke r3 < init > r5", "r1 [ i1 ] = r3", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r6 = jnr ffi struct r0", "r6 array end", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = jnr ffi struct r0", "r4 array begin", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "r3 = new jnr ffi struct $ address", "r5 = jnr ffi struct r0", "specialinvoke r3 < init > r5", "r1 [ i1 ] = r3", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r6 = jnr ffi struct r0", "r6 array end", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 ! = null goto label1", "r19 = new java lang illegal argument exception", "specialinvoke r19 < init > \\ `` parameter \\'name\\ ' must be not null\\ ``", "throw r19", "if r1 ! = null goto label1", "label if r2 ! = null goto label2", "r20 = new java lang illegal argument exception", "specialinvoke r20 < init > \\ `` parameter \\'value\\ ' must be not null\\ ``", "throw r20", "label if r2 ! = null goto label2", "label r23 = jnr ffi util annotation proxy r0", "$ r3 = r23 property", "$ z0 = $ r3 contain key r1", "if $ z0 ! = 0 goto label3", "r22 = new java lang illegal argument exception", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r9 = r21 append \\ `` annotation \\'\\ ``", "r24 = jnr ffi util annotation proxy r0", "$ r10 = r24 annotation type", "$ r11 = $ r10 get name", "$ r12 = $ r9 append $ r11", "$ r13 = $ r12 append \\ `` \\ ' do not contain a property name \\'\\ ``", "$ r14 = $ r13 append r1", "$ r15 = $ r14 append \\ `` \\'\\ ``", "$ r16 = $ r15 to string", "specialinvoke r22 < init > $ r16", "throw r22", "if $ z0 ! = 0 goto label3", "label r25 = jnr ffi util annotation proxy r0", "$ r4 = r25 property", "$ r5 = $ r4 get r1", "$ r6 = jnr ffi util annotation property $ r5", "$ r6 set value r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang runtime exception", "$ r4 = new java lang string builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` native error \\ ``", "$ r6 = r1 description", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` \\ ``", "$ r9 = $ r8 append r2", "$ r10 = $ r9 to string", "specialinvoke $ r3 < init > $ r10", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "l0 = @ parameter1", "$ r1 = com kenai jnr x86asm asm _ptr_build r0 l0 16", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_cpuid", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_enter", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_mov", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com kenai jnr x86asm inst_code inst_not", "r3 = com kenai jnr x86asm serializer intrinsics r0", "r4 = com kenai jnr x86asm operand r1", "r3 emit x86 $ r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_ud2", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = com kenai jnr x86asm serializer intrinsics $ assertion disable", "if $ z0 ! = 0 goto label1", "$ i0 = r1 size", "if $ i0 == 2 goto label1", "$ i1 = r1 size", "if $ i1 == 4 goto label1", "r4 = new java lang assertion error", "specialinvoke r4 < init >", "throw r4", "if $ i1 == 4 goto label1", "label $ r3 = com kenai jnr x86asm inst_code inst_ficom", "r5 = com kenai jnr x86asm serializer intrinsics r0", "r6 = com kenai jnr x86asm operand r1", "r5 emit x86 $ r3 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_fldl2e", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_psrld", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pfmax", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pfmul", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pfsub", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = com kenai jnr x86asm inst_code inst_cmpss", "r5 = com kenai jnr x86asm serializer intrinsics r0", "r6 = com kenai jnr x86asm operand r1", "r7 = com kenai jnr x86asm operand r2", "r8 = com kenai jnr x86asm operand r3", "r5 emit x86 $ r4 r6 r7 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com kenai jnr x86asm inst_code inst_ldmxcsr", "r3 = com kenai jnr x86asm serializer intrinsics r0", "r4 = com kenai jnr x86asm operand r1", "r3 emit x86 $ r2 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_movhps", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_movups", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_mulps", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_psadbw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_cvtpd2ps", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_cvtps2dq", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_cvtss2sd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_cvttps2dq", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "$ r1 = com kenai jnr x86asm inst_code inst_mfence", "r2 = com kenai jnr x86asm serializer intrinsics r0", "r2 emit x86 $ r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_movapd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_movdq2q", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pavgb", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pcmpgtw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pcmpgtd", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_psrld", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_haddps", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pmulhrsw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "$ r4 = com kenai jnr x86asm inst_code inst_pextrb", "r5 = com kenai jnr x86asm serializer intrinsics r0", "r6 = com kenai jnr x86asm operand r1", "r7 = com kenai jnr x86asm operand r2", "r8 = com kenai jnr x86asm operand r3", "r5 emit x86 $ r4 r6 r7 r8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pmovsxbw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = com kenai jnr x86asm inst_code inst_pmovzxbw", "r4 = com kenai jnr x86asm serializer intrinsics r0", "r5 = com kenai jnr x86asm operand r1", "r6 = com kenai jnr x86asm operand r2", "r4 emit x86 $ r3 r5 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq chart format r0", "$ z0 = r1 category a text", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq chart format r0", "$ z0 = r1 show horizontal legend", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq comparator r0", "$ r1 = r2 sql", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq comparator r0", "$ z0 = r1 support subselect", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf render format r0", "r2 indentation = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 render schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 render format = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 render scalar subqueries for stored function", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 backslash escape", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 execute with optimistic lock exclude unversioned", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 fetch warning", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 query timeout", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 max row", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 max row = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 fetch size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 parse with meta lookup = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "r1 = r0 get statement type", "if r1 == null goto label1", "return r1", "if r1 == null goto label1", "label $ r2 = org jooq conf statement type prepared_statement", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new org jooq c s v format", "r9 = org jooq c s v format r0", "$ r7 = r9 delimiter", "r10 = org jooq c s v format r0", "$ r6 = r10 null string", "r11 = org jooq c s v format r0", "$ r5 = r11 empty string", "r12 = org jooq c s v format r0", "$ r4 = r12 newline", "r13 = org jooq c s v format r0", "$ r3 = r13 quote string", "r14 = org jooq c s v format r0", "$ z0 = r14 header", "specialinvoke r8 < init > $ r7 $ r6 $ r5 $ r4 $ r3 r1 $ z0", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r3 = org jooq impl abstract store r0", "$ r1 = r3 configuration", "$ r2 = org jooq impl dsl use $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "r1 = newarray org jooq diagnostics listener provider [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r0", "if i2 > = $ i1 goto label2", "r4 = new org jooq impl default diagnostics listener provider", "$ r3 = r0 [ i2 ]", "specialinvoke r4 < init > $ r3", "r1 [ i2 ] = r4", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label r5 = org jooq diagnostics listener provider [ ] r1", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl dsl dsl", "$ r3 = $ r2 create view if not exist r0 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl dsl", "$ r2 = $ r1 create sequence if not exist r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl dsl", "$ r2 = $ r1 drop view r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl val r0", "r3 = org jooq field $ r1", "$ r2 = org jooq impl dsl any r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl dsl dsl", "$ r2 = $ r1 grant r0", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "$ r0 = org jooq impl dsl val i0", "$ r1 = org jooq impl dsl val i1", "$ r2 = org jooq impl dsl val i2", "r4 = org jooq field $ r0", "r5 = org jooq field $ r1", "r6 = org jooq field $ r2", "$ r3 = org jooq impl dsl generate series r4 r5 r6", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = newarray java lang object [ 0 ]", "$ r2 = org jooq impl dsl field r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl dsl nvl r0 r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "c1 = @ parameter2", "$ r1 = java lang character to string c1", "$ r2 = org jooq impl dsl lpad r0 i0 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl tool field r0", "$ r3 = org jooq impl tool field r1", "r5 = org jooq field $ r2", "r6 = org jooq field $ r3", "$ r4 = org jooq impl dsl position r5 r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "$ r2 = org jooq impl tool empty_field", "$ r3 = $ r1 to array $ r2", "$ r4 = org jooq field [ ] $ r3", "$ r5 = org jooq impl dsl concat $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl tool field r0", "$ r3 = org jooq impl tool field r1", "r5 = org jooq field $ r2", "r6 = org jooq field $ r3", "$ r4 = org jooq impl dsl date diff r5 r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "$ r2 = org jooq impl dsl inline 0", "r4 = org jooq field $ r2", "$ r3 = org jooq impl dsl trunc $ r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq tool convert convert r0 class \\ `` ljava sql date \\ ``", "$ r2 = java sql date $ r1", "$ r3 = org jooq impl tool field $ r2", "r4 = org jooq field $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl tool field r0", "$ r3 = org jooq impl tool field r1", "r5 = org jooq field $ r2", "r6 = org jooq field $ r3", "$ r4 = org jooq impl dsl to timestamp r5 r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "r1 = newarray org jooq impl wrap list [ $ i0 ]", "i2 = 0", "label $ i1 = lengthof r0", "if i2 > = $ i1 goto label2", "r8 = new org jooq impl wrap list", "r7 = new org jooq impl query part list", "$ r6 = r0 [ i2 ]", "specialinvoke r7 < init > $ r6", "specialinvoke r8 < init > r7", "r1 [ i2 ] = r8", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label r9 = new org jooq impl function", "$ r3 = org jooq impl s q l data type other", "r10 = org jooq query part [ ] r1", "specialinvoke r9 < init > \\ `` group sets\\", "r11 = org jooq group field r9", "return r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "$ r2 = org jooq impl dsl bit not $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "$ r2 = org jooq impl dsl round $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq impl tool field r0", "$ r2 = org jooq impl dsl ln $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl tool field r0", "$ r3 = org jooq impl tool field r1", "$ r4 = org jooq impl dsl atan2 $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org jooq impl function asterisk", "$ r1 = org jooq impl dsl count $ r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r7 = new org jooq impl function", "$ r2 = org jooq impl term array_agg", "$ r3 = r0 get data type", "$ r4 = $ r3 get array data type", "$ r5 = newarray org jooq query part [ 1 ]", "$ r6 = org jooq impl dsl null safe r0", "$ r5 [ 0 ] = $ r6", "r8 = org jooq query part [ ] $ r5", "specialinvoke r7 < init > $ r2 $ r4 r8", "r9 = org jooq array agg order by step r7", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r6 = new org jooq impl function", "$ r3 = org jooq impl s q l data type numeric", "$ r2 = org jooq impl tool empty_querypart", "$ r4 = r0 to array $ r2", "$ r5 = org jooq query part [ ] $ r4", "specialinvoke r6 < init > \\ `` cume_dist\\", "r7 = org jooq order aggregate function r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq impl default data type get data type null r1", "$ r3 = org jooq impl dsl param r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = org jooq impl dsl inline 2", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r1 = new org jooq impl current user", "specialinvoke r1 < init >", "r2 = org jooq field r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r1 = new org jooq impl current schema", "specialinvoke r1 < init >", "r2 = org jooq field r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq impl parser exception r0", "$ r1 = r2 sql", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq tool jdbc mock execute context r0", "$ r1 = r2 binding", "$ i0 = lengthof $ r1", "if $ i0 < = 1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq tool jdbc mock execute context r0", "$ i0 = r1 auto generate key", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org jooq tool reflect reflect", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org jooq tool string utils be blank r0", "if $ z0 == 0 goto label1", "$ r2 = r1", "goto label2", "label return $ r2", "if $ z0 == 0 goto label1", "label $ r2 = r0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = org jooq tool string utils abbreviate r0 0 i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = r1 goto label01", "return 1", "if r0 ! = r1 goto label01", "label if r0 == null goto label02", "if r1 ! = null goto label03", "label return 0", "if r1 ! = null goto label03", "label $ r2 = r0 get class", "$ z0 = $ r2 be array", "if $ z0 == 0 goto label13", "$ z2 = r0 instanceof java lang object [ ]", "if $ z2 == 0 goto label04", "$ z27 = r1 instanceof java lang object [ ]", "if $ z27 == 0 goto label04", "$ r35 = java lang object [ ] r0", "$ r38 = java lang object [ ] $ r35", "$ r36 = java lang object [ ] r1", "$ r37 = java lang object [ ] $ r36", "$ z28 = java util array deep equal $ r38 $ r37", "return $ z28", "if $ z27 == 0 goto label04", "label $ z3 = r0 instanceof byte [ ]", "if $ z3 == 0 goto label05", "$ z25 = r1 instanceof byte [ ]", "if $ z25 == 0 goto label05", "$ r31 = byte [ ] r0", "$ r34 = byte [ ] $ r31", "$ r32 = byte [ ] r1", "$ r33 = byte [ ] $ r32", "$ z26 = java util array equal $ r34 $ r33", "return $ z26", "if $ z25 == 0 goto label05", "label $ z4 = r0 instanceof short [ ]", "if $ z4 == 0 goto label06", "$ z23 = r1 instanceof short [ ]", "if $ z23 == 0 goto label06", "$ r27 = short [ ] r0", "$ r30 = short [ ] $ r27", "$ r28 = short [ ] r1", "$ r29 = short [ ] $ r28", "$ z24 = java util array equal $ r30 $ r29", "return $ z24", "if $ z23 == 0 goto label06", "label $ z5 = r0 instanceof int [ ]", "if $ z5 == 0 goto label07", "$ z21 = r1 instanceof int [ ]", "if $ z21 == 0 goto label07", "$ r23 = int [ ] r0", "$ r26 = int [ ] $ r23", "$ r24 = int [ ] r1", "$ r25 = int [ ] $ r24", "$ z22 = java util array equal $ r26 $ r25", "return $ z22", "if $ z21 == 0 goto label07", "label $ z6 = r0 instanceof long [ ]", "if $ z6 == 0 goto label08", "$ z19 = r1 instanceof long [ ]", "if $ z19 == 0 goto label08", "$ r19 = long [ ] r0", "$ r22 = long [ ] $ r19", "$ r20 = long [ ] r1", "$ r21 = long [ ] $ r20", "$ z20 = java util array equal $ r22 $ r21", "return $ z20", "if $ z19 == 0 goto label08", "label $ z7 = r0 instanceof float [ ]", "if $ z7 == 0 goto label09", "$ z17 = r1 instanceof float [ ]", "if $ z17 == 0 goto label09", "$ r15 = float [ ] r0", "$ r18 = float [ ] $ r15", "$ r16 = float [ ] r1", "$ r17 = float [ ] $ r16", "$ z18 = java util array equal $ r18 $ r17", "return $ z18", "if $ z17 == 0 goto label09", "label $ z8 = r0 instanceof double [ ]", "if $ z8 == 0 goto label10", "$ z15 = r1 instanceof double [ ]", "if $ z15 == 0 goto label10", "$ r11 = double [ ] r0", "$ r14 = double [ ] $ r11", "$ r12 = double [ ] r1", "$ r13 = double [ ] $ r12", "$ z16 = java util array equal $ r14 $ r13", "return $ z16", "if $ z15 == 0 goto label10", "label $ z9 = r0 instanceof char [ ]", "if $ z9 == 0 goto label11", "$ z13 = r1 instanceof char [ ]", "if $ z13 == 0 goto label11", "$ r7 = char [ ] r0", "$ r10 = char [ ] $ r7", "$ r8 = char [ ] r1", "$ r9 = char [ ] $ r8", "$ z14 = java util array equal $ r10 $ r9", "return $ z14", "if $ z13 == 0 goto label11", "label $ z10 = r0 instanceof boolean [ ]", "if $ z10 == 0 goto label12", "$ z11 = r1 instanceof boolean [ ]", "if $ z11 == 0 goto label12", "$ r3 = boolean [ ] r0", "$ r6 = boolean [ ] $ r3", "$ r4 = boolean [ ] r1", "$ r5 = boolean [ ] $ r4", "$ z12 = java util array equal $ r6 $ r5", "return $ z12", "if $ z11 == 0 goto label12", "label return 0", "if $ z0 == 0 goto label13", "label $ z1 = r0 equal r1", "return $ z1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [], [111], [112], [113], [114], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq t x t format r0", "$ i0 = r1 max col width", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq t x t format r0", "$ z0 = r1 horizontal header border", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq t x t format r0", "$ z0 = r1 intersect line", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq type day to second r0", "$ i0 = r1 minute", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq util mariadb maria d b d s l val r0", "$ r3 = org jooq util mariadb maria d b d s l val r1", "r5 = org jooq field $ r2", "r6 = org jooq field $ r3", "$ r4 = org jooq util mariadb maria d b d s l decode r5 r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq util mariadb maria d b d s l val r0", "r3 = org jooq field $ r1", "$ r2 = org jooq util mariadb maria d b d s l uncompress r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq util mysql my s q l d s l val r0", "$ r3 = org jooq util mysql my s q l d s l val r1", "r5 = org jooq field $ r2", "r6 = org jooq field $ r3", "$ r4 = org jooq util mysql my s q l d s l encode r5 r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq util mysql my s q l d s l val r0", "r3 = org jooq field $ r1", "$ r2 = org jooq util mysql my s q l d s l compress r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq util mysql my s q l d s l val r0", "r3 = org jooq field $ r1", "$ r2 = org jooq util mysql my s q l d s l uncompress r3", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org jooq util postgres postgres d s l val r0", "$ r3 = org jooq util postgres postgres d s l val r1", "r5 = org jooq field $ r2", "r6 = org jooq field $ r3", "$ r4 = org jooq util postgres postgres d s l array remove0 r5 r6", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = newarray org jooq query part [ 1 ]", "$ r1 [ 0 ] = r0", "r3 = org jooq query part [ ] $ r1", "$ r2 = org jooq util postgres postgres d s l field \\ `` { 0 } oid\\", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org jooq tool reflect reflect on \\ `` org postgresql util p g interval\\ ``", "$ r2 = newarray java lang object [ 6 ]", "$ r3 = java lang integer value of 0", "$ r2 [ 0 ] = $ r3", "$ r4 = java lang integer value of 0", "$ r2 [ 1 ] = $ r4", "$ i0 = r0 get sign", "$ i1 = r0 get day", "$ i2 = $ i0 * $ i1", "$ r5 = java lang integer value of $ i2", "$ r2 [ 2 ] = $ r5", "$ i3 = r0 get sign", "$ i4 = r0 get hour", "$ i5 = $ i3 * $ i4", "$ r6 = java lang integer value of $ i5", "$ r2 [ 3 ] = $ r6", "$ i6 = r0 get sign", "$ i7 = r0 get minute", "$ i8 = $ i6 * $ i7", "$ r7 = java lang integer value of $ i8", "$ r2 [ 4 ] = $ r7", "$ i9 = r0 get sign", "$ i10 = r0 get second", "$ i11 = $ i9 * $ i10", "$ d0 = double $ i11", "$ i12 = r0 get sign", "$ i13 = r0 get nano", "$ i14 = $ i12 * $ i13", "$ d1 = double $ i14", "$ d2 = $ d1 1 0e9", "$ d3 = $ d0 + $ d2", "$ r8 = java lang double value of $ d3", "$ r2 [ 5 ] = $ r8", "$ r9 = $ r1 create $ r2", "$ r10 = $ r9 get", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb column r0", "$ r1 = r2 data type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb column r0", "$ r1 = r2 numeric precision", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb column r0", "r2 ordinal position = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb index r0", "$ r1 = r2 index catalog", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb index r0", "r2 index catalog = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb index column usage r0", "$ r1 = r2 be descend", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb key column usage r0", "r2 constraint catalog = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb parameter r0", "r2 specific catalog = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb referential constraint r0", "$ r1 = r2 unique constraint name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb routine r0", "$ r1 = r2 routine schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb routine r0", "r2 routine package = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq util xml jaxb table constraint r0", "r2 constraint type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq x m l format r0", "$ z0 = r1 header", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf interpreter search schema r0", "$ r1 = r2 schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 render optional outer keyword", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq conf setting r0", "$ r1 = r2 render parenthesis around set operation query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 interpreter delay foreign key declaration = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq conf setting r0", "r2 parse meta default expression = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org jooq migration configuration r0", "$ z0 = r1 drop schema cascade", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq util xml jaxb table constraint r0", "$ r1 = r2 enforce", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 include = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 include package routine", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 include package constant = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 include u d t = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 include sequence", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 include foreign key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 override primary key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 unsigned type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 input schema", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 output schema to default", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 relation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 deprecate = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 key = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 immutable interface", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 serializable interface", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 jpa annotation = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 global object reference", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 comment on catalog", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 comment on catalog = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 comment on column", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 comment on attribute = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 comment on sequence", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 vararg setter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 fully qualify type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb jdbc r0", "$ r1 = r2 driver", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb jdbc r0", "r2 username = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb jdbc r0", "r2 password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb matcher enum type r0", "r2 enum class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb matcher routine type r0", "r2 routine class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb matcher table type r0", "r2 table class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb matcher table type r0", "$ r1 = r2 pojo class", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org jooq meta postgres pg_catalog routine format type _2", "r3 = org jooq meta postgres pg_catalog routine format type r0", "r3 set value $ r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 include system index = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb database r0", "$ r1 = r2 synthetic object", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb database r0", "r2 integer display width = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb embeddable definition type r0", "$ r1 = r2 comment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 sequence flag", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 nullable annotation = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 pojos a kotlin data class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb generate r0", "$ r1 = r2 kotlin setter jvm name annotation on be prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jooq meta jaxb generate r0", "r2 comment on embeddables = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb matcher enum type r0", "$ r1 = r2 expression", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb synthetic primary key type r0", "$ r1 = r2 table", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jooq meta jaxb synthetic view type r0", "$ r1 = r2 comment", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org jose4j jca provider context r0", "$ r1 = r2 general provider context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org jose4j jwt consumer jwt consumer builder r0", "r1 skip all validators = 1", "r2 = org jose4j jwt consumer jwt consumer builder r0", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "r3 = new org jose4j jwt consumer i validator", "specialinvoke r3 < init > z0 r1", "r4 = org jose4j jwt consumer jwt consumer builder r0", "r4 iss validator = r3", "r5 = org jose4j jwt consumer jwt consumer builder r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com jcraft jsch channel session r0", "r2 terminal_mode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com jcraft jsch identity file r0", "$ r1 = r2 identity", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = com jcraft jsch j sch r0", "$ r3 = r4 get session r1 r2 22", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "if r2 ! = null goto label1", "r6 = new com jcraft jsch j sch exception", "specialinvoke r6 < init > \\ `` host must not be null \\ ``", "r8 = java lang throwable r6", "throw r8", "if r2 ! = null goto label1", "label r7 = new com jcraft jsch session", "r9 = com jcraft jsch j sch r0", "specialinvoke r7 < init > r9 r1 r2 i0", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = javax servlet jsp tagext tag extra info r0", "$ r1 = r2 tag info", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = javax servlet jsp tagext tag library validator r0", "r1 init parameter = null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = javax servlet jsp tagext tag support r0", "$ r3 = r8 value", "if $ r3 ! = null goto label1", "r7 = new java util hashtable", "specialinvoke r7 < init >", "r9 = javax servlet jsp tagext tag support r0", "r9 value = r7", "label r10 = javax servlet jsp tagext tag support r0", "$ r4 = r10 value", "$ r4 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = fr bmartel speedtest speed test socket r0", "$ r2 = r3 m listener list", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = fr bmartel speedtest speed test socket r0", "$ i0 = r1 m socket timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = fr bmartel speedtest speed test socket r0", "$ r1 = r2 m computation method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = fr bmartel speedtest speed test socket r0", "$ l0 = r1 m download setup time", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = fr bmartel speedtest speed test socket r0", "$ r1 = r2 m upload storage type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = newarray byte [ i0 ]", "i1 = i0 64000", "i2 = i0 % 64000", "i5 = 0", "label if i5 > = i1 goto label2", "r2 = newarray byte [ 64000 ]", "r6 = fr bmartel speedtest utils random gen r0", "$ r4 = r6 m random", "$ r4 next byte r2", "$ i4 = i5 * 64000", "java lang system arraycopy r2 0 r1 $ i4 64000", "i5 = i5 + 1", "goto label1", "label if i5 > = i1 goto label2", "label if i2 < = 0 goto label3", "r5 = newarray byte [ i2 ]", "r7 = fr bmartel speedtest utils random gen r0", "$ r3 = r7 m random", "$ r3 next byte r5", "$ i3 = i1 * 64000", "java lang system arraycopy r5 0 r1 $ i3 i2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["$ r0 = new java math big integer", "$ r1 = fr bmartel speedtest utils speed test utils random", "specialinvoke $ r0 < init > 130 $ r1", "$ r2 = $ r0 to string 32", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "d0 = org locationtech jts algorithm angle angle r1 r0", "d1 = org locationtech jts algorithm angle angle r1 r2", "$ d2 = org locationtech jts algorithm angle diff d0 d1", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ d3 = d1 - d0", "d2 = java lang math sin $ d3", "$ b0 = d2 cmpl 0 0", "if $ b0 < = 0 goto label1", "return 1", "if $ b0 < = 0 goto label1", "label $ b1 = d2 cmpg 0 0", "if $ b1 > = 0 goto label2", "return -1", "if $ b1 > = 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = org locationtech jts algorithm ray cross counter locate point in ring r0 r1", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts algorithm line intersector r0", "$ z0 = r1 have intersection", "if $ z0 == 0 goto label1", "r2 = org locationtech jts algorithm line intersector r0", "$ z1 = r2 be proper", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts algorithm minimum diameter r0", "specialinvoke r1 compute minimum diameter", "r2 = org locationtech jts algorithm minimum diameter r0", "$ d0 = r2 min width", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r4 = r2 next", "r3 = org locationtech jts geom geometry $ r4", "r5 = org locationtech jts dissolve line dissolver r0", "r5 add r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = org locationtech jts edgegraph edge graph be valid edge r1 r2", "if $ z0 ! = 0 goto label1", "return null", "if $ z0 ! = 0 goto label1", "label r8 = org locationtech jts edgegraph edge graph r0", "$ r5 = r8 vertex map", "$ r6 = $ r5 get r1", "r3 = org locationtech jts edgegraph half edge $ r6", "r7 = null", "if r3 == null goto label2", "r7 = r3 find r2", "label if r7 == null goto label3", "return r7", "label if r7 == null goto label3", "label r9 = org locationtech jts edgegraph edge graph r0", "r4 = specialinvoke r9 insert r1 r2 r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "$ r1 = org locationtech jts geom coordinate list coord array type", "r5 = org locationtech jts geom coordinate list r0", "$ r2 = r5 to array $ r1", "$ r3 = org locationtech jts geom coordinate [ ] $ r2", "$ r4 = org locationtech jts geom coordinate [ ] $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ b0 = d0 cmpg d1", "if $ b0 > = 0 goto label1", "return -1", "if $ b0 > = 0 goto label1", "label $ b1 = d0 cmpl d1", "if $ b1 < = 0 goto label2", "return 1", "if $ b1 < = 0 goto label2", "label $ z0 = java lang double be na n d0", "if $ z0 == 0 goto label4", "$ z2 = java lang double be na n d1", "if $ z2 == 0 goto label3", "return 0", "if $ z2 == 0 goto label3", "label return -1", "if $ z0 == 0 goto label4", "label $ z1 = java lang double be na n d1", "if $ z1 == 0 goto label5", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts geom envelope r0", "$ d0 = r1 miny", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ d1 = r1 x", "$ d0 = r1 y", "r2 = org locationtech jts geom envelope r0", "r2 expand to include $ d1 $ d0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r1 = org locationtech jts geom envelope r0", "$ z0 = r1 be null", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label r2 = org locationtech jts geom envelope r0", "$ d2 = r2 get min x", "$ d3 = $ d2 + d0", "r3 = org locationtech jts geom envelope r0", "$ d4 = r3 get max x", "$ d5 = $ d4 + d0", "r4 = org locationtech jts geom envelope r0", "$ d6 = r4 get min y", "$ d7 = $ d6 + d1", "r5 = org locationtech jts geom envelope r0", "$ d8 = r5 get max y", "$ d9 = $ d8 + d1", "r6 = org locationtech jts geom envelope r0", "r6 init $ d3 $ d5 $ d7 $ d9"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ d1 = r1 x", "$ d0 = r1 y", "r2 = org locationtech jts geom envelope r0", "$ z0 = r2 intersect $ d1 $ d0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts geom geometry r0", "$ r1 = r2 get envelope internal", "$ i0 = $ r1 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "c1 = @ parameter1", "if c1 ! = 42 goto label1", "return 1", "if c1 ! = 42 goto label1", "label if c1 ! = 84 goto label3", "if i0 > = 0 goto label2", "if i0 ! = -2 goto label3", "label return 1", "if i0 ! = -2 goto label3", "label if c1 ! = 70 goto label4", "if i0 ! = -1 goto label4", "label if c1 ! = 48 goto label5", "if i0 ! = 0 goto label5", "label if c1 ! = 49 goto label6", "if i0 ! = 1 goto label6", "label if c1 ! = 50 goto label7", "if i0 ! = 2 goto label7", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r13 = org locationtech jts geom intersection matrix r0", "$ r1 = r13 matrix", "$ r2 = $ r1 [ 0 ]", "$ i0 = $ r2 [ 0 ]", "$ z1 = org locationtech jts geom intersection matrix be true $ i0", "if $ z1 ! = 0 goto label1", "r14 = org locationtech jts geom intersection matrix r0", "$ r7 = r14 matrix", "$ r8 = $ r7 [ 0 ]", "$ i3 = $ r8 [ 1 ]", "$ z2 = org locationtech jts geom intersection matrix be true $ i3", "if $ z2 ! = 0 goto label1", "r15 = org locationtech jts geom intersection matrix r0", "$ r9 = r15 matrix", "$ r10 = $ r9 [ 1 ]", "$ i4 = $ r10 [ 0 ]", "$ z3 = org locationtech jts geom intersection matrix be true $ i4", "if $ z3 ! = 0 goto label1", "r16 = org locationtech jts geom intersection matrix r0", "$ r11 = r16 matrix", "$ r12 = $ r11 [ 1 ]", "$ i5 = $ r12 [ 1 ]", "$ z4 = org locationtech jts geom intersection matrix be true $ i5", "if $ z4 == 0 goto label2", "label $ z5 = 1", "goto label3", "label if $ z5 == 0 goto label4", "r17 = org locationtech jts geom intersection matrix r0", "$ r3 = r17 matrix", "$ r4 = $ r3 [ 2 ]", "$ i1 = $ r4 [ 0 ]", "if $ i1 ! = -1 goto label4", "r18 = org locationtech jts geom intersection matrix r0", "$ r5 = r18 matrix", "$ r6 = $ r5 [ 2 ]", "$ i2 = $ r6 [ 1 ]", "if $ i2 ! = -1 goto label4", "$ z6 = 1", "goto label5", "label return $ z6", "if $ i2 ! = -1 goto label4", "label $ z6 = 0", "if $ z4 == 0 goto label2", "label $ z5 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r25 = org locationtech jts geom intersection matrix r0", "$ r1 = r25 matrix", "$ r2 = $ r1 [ 1 ]", "i3 = $ r2 [ 0 ]", "r26 = org locationtech jts geom intersection matrix r0", "$ r3 = r26 matrix", "$ r6 = $ r3 [ 1 ]", "r27 = org locationtech jts geom intersection matrix r0", "$ r4 = r27 matrix", "$ r5 = $ r4 [ 0 ]", "$ i0 = $ r5 [ 1 ]", "$ r6 [ 0 ] = $ i0", "r28 = org locationtech jts geom intersection matrix r0", "$ r7 = r28 matrix", "$ r8 = $ r7 [ 0 ]", "$ r8 [ 1 ] = i3", "r29 = org locationtech jts geom intersection matrix r0", "$ r9 = r29 matrix", "$ r10 = $ r9 [ 2 ]", "i4 = $ r10 [ 0 ]", "r30 = org locationtech jts geom intersection matrix r0", "$ r11 = r30 matrix", "$ r14 = $ r11 [ 2 ]", "r31 = org locationtech jts geom intersection matrix r0", "$ r12 = r31 matrix", "$ r13 = $ r12 [ 0 ]", "$ i1 = $ r13 [ 2 ]", "$ r14 [ 0 ] = $ i1", "r32 = org locationtech jts geom intersection matrix r0", "$ r15 = r32 matrix", "$ r16 = $ r15 [ 0 ]", "$ r16 [ 2 ] = i4", "r33 = org locationtech jts geom intersection matrix r0", "$ r17 = r33 matrix", "$ r18 = $ r17 [ 2 ]", "i5 = $ r18 [ 1 ]", "r34 = org locationtech jts geom intersection matrix r0", "$ r19 = r34 matrix", "$ r22 = $ r19 [ 2 ]", "r35 = org locationtech jts geom intersection matrix r0", "$ r20 = r35 matrix", "$ r21 = $ r20 [ 1 ]", "$ i2 = $ r21 [ 2 ]", "$ r22 [ 1 ] = $ i2", "r36 = org locationtech jts geom intersection matrix r0", "$ r23 = r36 matrix", "$ r24 = $ r23 [ 1 ]", "$ r24 [ 2 ] = i5", "r37 = org locationtech jts geom intersection matrix r0", "return r37"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org locationtech jts geom line segment r0", "$ r3 = r4 p0", "r5 = org locationtech jts geom line segment r0", "$ r2 = r5 p1", "$ d0 = org locationtech jts algorithm distance point to line perpendicular r1 $ r3 $ r2", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts geom precision model r0", "$ r1 = r2 model type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = new org locationtech jts geom coordinate", "specialinvoke $ r3 < init > r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new org locationtech jts algorithm point locator", "specialinvoke r8 < init >", "r9 = org locationtech jts geom prep basic prepared geometry r0", "$ r6 = r9 representative pt", "r3 = $ r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r7 = r3 next", "r4 = org locationtech jts geom coordinate $ r7", "$ z1 = r8 intersects r4 r1", "if $ z1 == 0 goto label2", "return 1", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts geom prep prepare polygon cover r0", "$ z0 = r2 eval r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ d3 = r0 x", "$ d2 = r1 x", "$ d5 = $ d3 + $ d2", "$ d4 = r2 x", "$ d6 = $ d5 + $ d4", "d0 = $ d6 3 0", "$ d8 = r0 y", "$ d7 = r1 y", "$ d10 = $ d8 + $ d7", "$ d9 = r2 y", "$ d11 = $ d10 + $ d9", "d1 = $ d11 3 0", "$ r3 = new org locationtech jts geom coordinate", "specialinvoke $ r3 < init > d0 d1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r4 = org locationtech jts geom triangle r0", "$ r3 = r4 p0", "r5 = org locationtech jts geom triangle r0", "$ r2 = r5 p1", "r6 = org locationtech jts geom triangle r0", "$ r1 = r6 p2", "$ d0 = org locationtech jts geom triangle sign area $ r3 $ r2 $ r1", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ r1 = new org locationtech jts geom util affine transformation", "specialinvoke $ r1 < init >", "$ r1 set to scale d0 d1", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray double [ 6 ]", "r2 = org locationtech jts geom util affine transformation r0", "$ d0 = r2 m00", "$ r1 [ 0 ] = $ d0", "r3 = org locationtech jts geom util affine transformation r0", "$ d1 = r3 m01", "$ r1 [ 1 ] = $ d1", "r4 = org locationtech jts geom util affine transformation r0", "$ d2 = r4 m02", "$ r1 [ 2 ] = $ d2", "r5 = org locationtech jts geom util affine transformation r0", "$ d3 = r5 m10", "$ r1 [ 3 ] = $ d3", "r6 = org locationtech jts geom util affine transformation r0", "$ d4 = r6 m11", "$ r1 [ 4 ] = $ d4", "r7 = org locationtech jts geom util affine transformation r0", "$ d5 = r7 m12", "$ r1 [ 5 ] = $ d5", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "$ r1 = org locationtech jts geom util affine transformation rotation instance d0 d1", "r3 = org locationtech jts geom util affine transformation r0", "r3 compose $ r1", "r4 = org locationtech jts geom util affine transformation r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org locationtech jts geomgraph edge", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label r2 = org locationtech jts geomgraph edge r1", "r15 = org locationtech jts geomgraph edge r0", "$ r3 = r15 pt", "$ i1 = lengthof $ r3", "$ r4 = r2 pt", "$ i0 = lengthof $ r4", "if $ i1 == $ i0 goto label2", "label z3 = 1", "z4 = 1", "r16 = org locationtech jts geomgraph edge r0", "$ r5 = r16 pt", "i3 = lengthof $ r5", "i4 = 0", "label r17 = org locationtech jts geomgraph edge r0", "$ r6 = r17 pt", "$ i2 = lengthof $ r6", "if i4 > = $ i2 goto label7", "r18 = org locationtech jts geomgraph edge r0", "$ r7 = r18 pt", "$ r10 = $ r7 [ i4 ]", "$ r8 = r2 pt", "$ r9 = $ r8 [ i4 ]", "$ z1 = $ r10 equals2 d $ r9", "if $ z1 ! = 0 goto label4", "z3 = 0", "label r19 = org locationtech jts geomgraph edge r0", "$ r11 = r19 pt", "$ r14 = $ r11 [ i4 ]", "$ r12 = r2 pt", "i3 = i3 + -1", "$ r13 = $ r12 [ i3 ]", "$ z2 = $ r14 equals2 d $ r13", "if $ z2 ! = 0 goto label5", "z4 = 0", "label if z3 ! = 0 goto label6", "if z4 ! = 0 goto label6", "label i4 = i4 + 1", "goto label3", "if i4 > = $ i2 goto label7", "label return 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts geomgraph edge ring r0", "$ r1 = r2 edge", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts geomgraph index sweep line event r1", "r3 = org locationtech jts geomgraph index sweep line event r0", "$ d1 = r3 x value", "$ d0 = r2 x value", "$ b0 = $ d1 cmpg $ d0", "if $ b0 > = 0 goto label1", "return -1", "if $ b0 > = 0 goto label1", "label r4 = org locationtech jts geomgraph index sweep line event r0", "$ d3 = r4 x value", "$ d2 = r2 x value", "$ b1 = $ d3 cmpl $ d2", "if $ b1 < = 0 goto label2", "return 1", "if $ b1 < = 0 goto label2", "label r5 = org locationtech jts geomgraph index sweep line event r0", "$ i3 = r5 event type", "$ i2 = r2 event type", "if $ i3 > = $ i2 goto label3", "label r6 = org locationtech jts geomgraph index sweep line event r0", "$ i5 = r6 event type", "$ i4 = r2 event type", "if $ i5 < = $ i4 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org locationtech jts geomgraph planar graph r0", "$ r4 = r7 get edge end", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = org locationtech jts geomgraph edge end $ r5", "$ r6 = r3 get edge", "if $ r6 ! = r1 goto label2", "return r3", "if $ r6 ! = r1 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i5 = 0", "label r12 = org locationtech jts geomgraph planar graph r0", "$ r5 = r12 edge", "$ i0 = $ r5 size", "if i5 > = $ i0 goto label4", "r13 = org locationtech jts geomgraph planar graph r0", "$ r6 = r13 edge", "$ r7 = $ r6 get i5", "r3 = org locationtech jts geomgraph edge $ r7", "r4 = r3 get coordinate", "$ r9 = r4 [ 0 ]", "$ r8 = r4 [ 1 ]", "r14 = org locationtech jts geomgraph planar graph r0", "$ z0 = specialinvoke r14 match in same direction r1 r2 $ r9 $ r8", "if $ z0 == 0 goto label2", "return r3", "if $ z0 == 0 goto label2", "label $ i1 = lengthof r4", "$ i2 = $ i1 - 1", "$ r11 = r4 [ $ i2 ]", "$ i3 = lengthof r4", "$ i4 = $ i3 - 2", "$ r10 = r4 [ $ i4 ]", "r15 = org locationtech jts geomgraph planar graph r0", "$ z1 = specialinvoke r15 match in same direction r1 r2 $ r11 $ r10", "if $ z1 == 0 goto label3", "label i5 = i5 + 1", "goto label1", "if i5 > = $ i0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ b0 = d0 cmpl 0 0", "if $ b0 ! = 0 goto label1", "$ b4 = d1 cmpl 0 0", "if $ b4 ! = 0 goto label1", "$ r0 = new java lang illegal argument exception", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` can not compute the quadrant for point \\ ``", "$ r3 = $ r2 append d0", "$ r4 = $ r3 append \\", "$ r5 = $ r4 append d1", "$ r6 = $ r5 append \\ `` \\ ``", "$ r7 = $ r6 to string", "specialinvoke $ r0 < init > $ r7", "throw $ r0", "if $ b4 ! = 0 goto label1", "label $ b1 = d0 cmpl 0 0", "if $ b1 < 0 goto label3", "$ b3 = d1 cmpl 0 0", "if $ b3 < 0 goto label2", "return 0", "if $ b3 < 0 goto label2", "label return 3", "if $ b1 < 0 goto label3", "label $ b2 = d1 cmpl 0 0", "if $ b2 < 0 goto label4", "return 1", "if $ b2 < 0 goto label4", "label return 2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [], [30], []]}
{"nodes": ["i0 = @ parameter0", "if i0 == 0 goto label1", "if i0 ! = 1 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if i0 ! = 1 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts index kdtree kd node r0", "$ r1 = r2 right", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts index kdtree kd node r0", "$ i0 = r1 count", "if $ i0 < = 1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r6 = org locationtech jts index kdtree kd tree r0", "$ r4 = r6 root", "r5 = new org locationtech jts index kdtree kd tree $ 1", "r7 = org locationtech jts index kdtree kd tree r0", "specialinvoke r5 < init > r7 r2", "r8 = org locationtech jts index kdtree kd tree r0", "r9 = org locationtech jts index kdtree kd node visitor r5", "specialinvoke r8 query node $ r4 r1 1 r9", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org locationtech jts index strtree s t rtree r0", "$ r2 = specialinvoke r3 near neighbour r1 #infinity", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r26 = org locationtech jts io gml2 g m l handler r0", "$ r2 = r26 stack", "$ i0 = $ r2 size", "if $ i0 ! = 1 goto label2", "r27 = org locationtech jts io gml2 g m l handler r0", "$ r10 = r27 stack", "$ r11 = $ r10 peek", "r1 = org locationtech jts io gml2 g m l handler $ handler $ r11", "$ r12 = r1 child", "$ i2 = $ r12 size", "if $ i2 ! = 1 goto label1", "$ r21 = r1 child", "$ r22 = $ r21 get 0", "$ r23 = org locationtech jts geom geometry $ r22", "return $ r23", "if $ i2 ! = 1 goto label1", "label r28 = org locationtech jts io gml2 g m l handler r0", "$ r14 = r28 gf", "$ r15 = r1 child", "r29 = org locationtech jts io gml2 g m l handler r0", "$ r13 = r29 stack", "$ i3 = $ r13 size", "$ r16 = newarray org locationtech jts geom geometry [ $ i3 ]", "$ r17 = $ r15 to array $ r16", "$ r18 = org locationtech jts geom geometry [ ] $ r17", "$ r19 = org locationtech jts geom geometry [ ] $ r18", "$ r20 = $ r14 create geometry collection $ r19", "r30 = org locationtech jts geom geometry $ r20", "return r30", "if $ i0 ! = 1 goto label2", "label r25 = new java lang illegal state exception", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r5 = r24 append \\ `` parse do not complete a expect there be \\ ``", "r31 = org locationtech jts io gml2 g m l handler r0", "$ r6 = r31 stack", "$ i1 = $ r6 size", "$ r7 = $ r5 append $ i1", "$ r8 = $ r7 append \\ `` element on the stack\\ ``", "$ r9 = $ r8 to string", "specialinvoke r25 < init > $ r9", "throw r25"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts io kml k m l writer r0", "r2 line prefix = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ i5 = r0 length", "i0 = $ i5 2", "r1 = newarray byte [ i0 ]", "i16 = 0", "label $ i6 = r0 length", "$ i7 = $ i6 2", "if i16 > = $ i7 goto label3", "i1 = 2 * i16", "$ i8 = i1 + 1", "$ i9 = r0 length", "if $ i8 < = $ i9 goto label2", "$ r2 = new java lang illegal argument exception", "specialinvoke $ r2 < init > \\ `` hex string have odd length\\ ``", "throw $ r2", "if $ i8 < = $ i9 goto label2", "label $ c10 = r0 char at i1", "i2 = org locationtech jts io w k b reader hex to int $ c10", "$ i11 = i1 + 1", "$ c12 = r0 char at $ i11", "i3 = org locationtech jts io w k b reader hex to int $ c12", "$ i14 = i2 < < 4", "$ b13 = byte i3", "$ i15 = $ i14 + $ b13", "b4 = byte $ i15", "r1 [ i16 ] = b4", "i16 = i16 + 1", "goto label1", "if i16 > = $ i7 goto label3", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r2 = org locationtech jts linearref linear location r0", "$ d4 = r2 segment fraction", "$ b0 = $ d4 cmpg 0 0", "if $ b0 < = 0 goto label1", "r3 = org locationtech jts linearref linear location r0", "$ d5 = r3 segment fraction", "$ b1 = $ d5 cmpl 1 0", "if $ b1 < 0 goto label2", "label return", "if $ b1 < 0 goto label2", "label r4 = org locationtech jts linearref linear location r0", "d1 = r4 get segment length r1", "r5 = org locationtech jts linearref linear location r0", "$ d6 = r5 segment fraction", "d2 = $ d6 * d1", "d3 = d1 - d2", "$ b2 = d2 cmpg d3", "if $ b2 > 0 goto label3", "$ b5 = d2 cmpg d0", "if $ b5 > = 0 goto label3", "r6 = org locationtech jts linearref linear location r0", "r6 segment fraction = 0 0", "goto label4", "label return", "if $ b5 > = 0 goto label3", "label $ b3 = d3 cmpg d2", "if $ b3 > 0 goto label4", "$ b4 = d3 cmpg d0", "if $ b4 > = 0 goto label4", "r7 = org locationtech jts linearref linear location r0", "r7 segment fraction = 1 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts linearref linear location r0", "$ d0 = r1 segment fraction", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new org locationtech jts linearref location index of line", "specialinvoke $ r3 < init > r0", "$ r4 = $ r3 index of r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts math dd r0", "$ d1 = r2 hi", "$ d0 = r1 hi", "$ b0 = $ d1 cmpl $ d0", "if $ b0 > 0 goto label1", "r3 = org locationtech jts math dd r0", "$ d3 = r3 hi", "$ d2 = r1 hi", "$ b1 = $ d3 cmpl $ d2", "if $ b1 ! = 0 goto label2", "r4 = org locationtech jts math dd r0", "$ d5 = r4 lo", "$ d4 = r1 lo", "$ b2 = $ d5 cmpl $ d4", "if $ b2 < = 0 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ b2 < = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts math dd r0", "$ d1 = r2 hi", "$ d0 = r1 hi", "$ b0 = $ d1 cmpl $ d0", "if $ b0 > 0 goto label1", "r3 = org locationtech jts math dd r0", "$ d3 = r3 hi", "$ d2 = r1 hi", "$ b1 = $ d3 cmpl $ d2", "if $ b1 ! = 0 goto label2", "r4 = org locationtech jts math dd r0", "$ d5 = r4 lo", "$ d4 = r1 lo", "$ b2 = $ d5 cmpl $ d4", "if $ b2 < 0 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ b2 < 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts nod fast nod validator r0", "$ r1 = r3 seg int", "$ r2 = $ r1 get intersection", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org locationtech jts nod interior intersection finder r0", "r1 keep intersection = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org locationtech jts nod interior intersection finder r0", "r1 be check end segment only = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts nod intersection adder r0", "$ z0 = r1 have interior", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org locationtech jts nod iterated noder r0", "r1 max iter = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts nod segment intersection detector r0", "$ z0 = r1 have non proper intersection", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org locationtech jts nod single pas noder r0", "r2 seg int = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org locationtech jts operation buffer buffer parameter r0", "r1 quadrant segment = i0", "r2 = org locationtech jts operation buffer buffer parameter r0", "$ i1 = r2 quadrant segment", "if $ i1 ! = 0 goto label1", "r3 = org locationtech jts operation buffer buffer parameter r0", "r3 join style = 3", "label r4 = org locationtech jts operation buffer buffer parameter r0", "$ i2 = r4 quadrant segment", "if $ i2 > = 0 goto label2", "r5 = org locationtech jts operation buffer buffer parameter r0", "r5 join style = 2", "r6 = org locationtech jts operation buffer buffer parameter r0", "$ i4 = r6 quadrant segment", "$ i5 = java lang math ab $ i4", "$ d0 = double $ i5", "r7 = org locationtech jts operation buffer buffer parameter r0", "r7 mitre limit = $ d0", "label if i0 > 0 goto label3", "r8 = org locationtech jts operation buffer buffer parameter r0", "r8 quadrant segment = 1", "label r9 = org locationtech jts operation buffer buffer parameter r0", "$ i3 = r9 join style", "if $ i3 == 1 goto label4", "r10 = org locationtech jts operation buffer buffer parameter r0", "r10 quadrant segment = 8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org locationtech jts operation buffer buffer subgraph r0", "specialinvoke r6 add reachable r1", "r7 = org locationtech jts operation buffer buffer subgraph r0", "$ r3 = r7 finder", "r8 = org locationtech jts operation buffer buffer subgraph r0", "$ r2 = r8 dir edge list", "$ r3 find edge $ r2", "r9 = org locationtech jts operation buffer buffer subgraph r0", "$ r4 = r9 finder", "$ r5 = $ r4 get coordinate", "r10 = org locationtech jts operation buffer buffer subgraph r0", "r10 right most coord = $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new org locationtech jts operation distance distance op", "specialinvoke $ r3 < init > r0 r1", "$ d0 = $ r3 distance", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r6 = org locationtech jts operation overlay maximal edge ring r0", "r5 = r6 start de", "label r1 = r5 get node", "$ r2 = r1 get edge", "$ r3 = org locationtech jts geomgraph direct edge star $ r2", "$ r3 link minimal direct edge r0", "r5 = r5 get next", "r7 = org locationtech jts operation overlay maximal edge ring r0", "$ r4 = r7 start de", "if r5 ! = $ r4 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts operation polygonize edge ring r0", "$ z0 = r2 be hole", "if $ z0 == 0 goto label1", "r3 = org locationtech jts operation polygonize edge ring r0", "$ r1 = r3 shell", "return $ r1", "if $ z0 == 0 goto label1", "label r4 = org locationtech jts operation polygonize edge ring r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts operation polygonize polygonizer r0", "specialinvoke r2 polygonize", "r3 = org locationtech jts operation polygonize polygonizer r0", "$ r1 = r3 poly list", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts operation polygonize polygonizer r0", "specialinvoke r2 polygonize", "r3 = org locationtech jts operation polygonize polygonizer r0", "$ r1 = r3 invalid ring line", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts operation valid be valid op r0", "$ r1 = r3 parent geometry", "r4 = org locationtech jts operation valid be valid op r0", "specialinvoke r4 check valid $ r1", "r5 = org locationtech jts operation valid be valid op r0", "$ r2 = r5 valid err", "if $ r2 ! = null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r2 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts planargraph graph component r0", "$ r1 = r2 data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts planargraph node map r0", "$ r1 = r3 node map", "$ r2 = $ r1 value", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org locationtech jts precision geometry precision reducer r0", "r1 remove collapse = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org locationtech jts precision geometry precision reducer r0", "r1 be pointwise = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org locationtech jts shape random random point in grid builder r0", "r1 gutter fraction = d0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org locationtech jts simplify douglas peucker simplifier r0", "r1 be ensure valid topology = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts triangulate conform delaunay triangulator r0", "$ r1 = r2 vertex factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts triangulate conform delaunay triangulator r0", "$ r1 = r2 convex hull", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = org locationtech jts triangulate quadedge quad edge r0", "$ r1 = r4 rot", "$ r2 = $ r1 next", "$ r3 = $ r2 rot", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r5 = org locationtech jts triangulate quadedge quad edge r0", "$ r1 = r5 orig", "$ r2 = $ r1 get coordinate", "r6 = org locationtech jts triangulate quadedge quad edge r0", "$ r3 = r6 d", "$ r4 = $ r3 get coordinate", "$ d0 = $ r2 distance $ r4", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 orig", "r4 = org locationtech jts triangulate quadedge quad edge subdivision r0", "$ z0 = r4 be frame vertex $ r2", "if $ z0 ! = 0 goto label1", "$ r3 = r1 d", "r5 = org locationtech jts triangulate quadedge quad edge subdivision r0", "$ z1 = r5 be frame vertex $ r3", "if $ z1 == 0 goto label2", "label return 1", "if $ z1 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = newarray org locationtech jts triangulate quadedge vertex [ 3 ]", "i0 = 0", "label if i0 > = 3 goto label2", "r3 = org locationtech jts triangulate quadedge quad edge triangle r0", "$ r2 = r3 get vertex i0", "r1 [ i0 ] = $ r2", "i0 = i0 + 1", "goto label1", "label if i0 > = 3 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org locationtech jts triangulate quadedge vertex r0", "r3 = r4 circle center r1 r2", "r5 = org locationtech jts triangulate quadedge vertex r0", "d0 = specialinvoke r5 distance r3 r1", "r6 = org locationtech jts triangulate quadedge vertex r0", "r7 = org locationtech jts triangulate quadedge vertex r0", "d2 = specialinvoke r6 distance r7 r1", "r8 = org locationtech jts triangulate quadedge vertex r0", "d3 = specialinvoke r8 distance r1 r2", "$ b0 = d3 cmpg d2", "if $ b0 > = 0 goto label1", "d2 = d3", "label r9 = org locationtech jts triangulate quadedge vertex r0", "r10 = org locationtech jts triangulate quadedge vertex r0", "d4 = specialinvoke r9 distance r2 r10", "$ b1 = d4 cmpg d2", "if $ b1 > = 0 goto label2", "d2 = d4", "label $ d1 = d0 d2", "return $ d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org locationtech jts triangulate segment r0", "$ r1 = r2 data", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org locationtech jts triangulate segment r0", "$ r2 = r4 l", "$ r3 = r1 get line segment", "$ z0 = $ r2 equal topo $ r3", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org locationtech jts triangulate segment r0", "$ r2 = r5 l", "$ r3 = r1 get line segment", "$ r4 = $ r2 intersection $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts util coordinate count filter r0", "$ i0 = r1 n", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org locationtech jts util debug debug on", "if $ z0 ! = 0 goto label1", "return", "if $ z0 ! = 0 goto label1", "label $ r1 = org locationtech jts util debug debug", "$ r1 instance print r0"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org locationtech jts util geometric shape factory r0", "$ r2 = r3 dim", "$ r2 set centre r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts util priority queue r0", "$ i0 = r1 size", "if $ i0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = new java io byte array output stream", "specialinvoke $ r3 < init >", "$ r4 = new java io print stream", "specialinvoke $ r4 < init > $ r3", "r0 print stack trace $ r4", "$ r5 = $ r3 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i3 = -1", "r2 = null", "i4 = i0", "label if i4 > i1 goto label4", "r1 = r0 get coordinate i4", "if r2 == null goto label2", "$ i2 = r2 compare to r1", "if $ i2 < = 0 goto label3", "label r2 = r1", "i3 = i4", "label i4 = i4 + 1", "goto label1", "label if i4 > i1 goto label4", "label return i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 ! = 0 goto label1", "if i1 == 0 goto label2", "label if i0 ! = 2 goto label5", "if i1 ! = 2 goto label5", "label r13 = org locationtech jts geom intersection matrix r0", "$ r7 = r13 matrix", "$ r8 = $ r7 [ 0 ]", "$ i5 = $ r8 [ 0 ]", "$ z2 = org locationtech jts geom intersection matrix be true $ i5", "if $ z2 == 0 goto label3", "r14 = org locationtech jts geom intersection matrix r0", "$ r9 = r14 matrix", "$ r10 = $ r9 [ 0 ]", "$ i6 = $ r10 [ 2 ]", "$ z3 = org locationtech jts geom intersection matrix be true $ i6", "if $ z3 == 0 goto label3", "r15 = org locationtech jts geom intersection matrix r0", "$ r11 = r15 matrix", "$ r12 = $ r11 [ 2 ]", "$ i7 = $ r12 [ 0 ]", "$ z4 = org locationtech jts geom intersection matrix be true $ i7", "if $ z4 == 0 goto label3", "$ z5 = 1", "goto label4", "label return $ z5", "if $ z4 == 0 goto label3", "label $ z5 = 0", "if i1 ! = 2 goto label5", "label if i0 ! = 1 goto label8", "if i1 ! = 1 goto label8", "r16 = org locationtech jts geom intersection matrix r0", "$ r1 = r16 matrix", "$ r2 = $ r1 [ 0 ]", "$ i2 = $ r2 [ 0 ]", "if $ i2 ! = 1 goto label6", "r17 = org locationtech jts geom intersection matrix r0", "$ r3 = r17 matrix", "$ r4 = $ r3 [ 0 ]", "$ i3 = $ r4 [ 2 ]", "$ z0 = org locationtech jts geom intersection matrix be true $ i3", "if $ z0 == 0 goto label6", "r18 = org locationtech jts geom intersection matrix r0", "$ r5 = r18 matrix", "$ r6 = $ r5 [ 2 ]", "$ i4 = $ r6 [ 0 ]", "$ z1 = org locationtech jts geom intersection matrix be true $ i4", "if $ z1 == 0 goto label6", "$ z6 = 1", "goto label7", "label return $ z6", "if $ z1 == 0 goto label6", "label $ z6 = 0", "if i1 ! = 1 goto label8", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org locationtech jts index array list visitor r0", "$ r2 = r3 item", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org locationtech jts index strtree boundable pair r0", "$ r1 = r7 boundable1", "$ r2 = $ r1 get bound", "$ r4 = org locationtech jts geom envelope $ r2", "r8 = org locationtech jts index strtree boundable pair r0", "$ r3 = r8 boundable2", "$ r5 = $ r3 get bound", "$ r6 = org locationtech jts geom envelope $ r5", "$ d0 = org locationtech jts index strtree envelope distance maximum distance $ r4 $ r6", "return $ d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "d0 = org locationtech jts math vector3 d length r0", "$ r1 = new org locationtech jts geom coordinate", "$ d1 = r0 x", "$ d3 = $ d1 d0", "$ d2 = r0 y", "$ d4 = $ d2 d0", "$ d5 = r0 get z", "$ d6 = $ d5 d0", "specialinvoke $ r1 < init > $ d3 $ d4 $ d6", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts nod snapround hot pixel r0", "$ d0 = r1 scale factor", "$ d1 = 1 0 $ d0", "return $ d1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r4 = r0 get envelope internal", "r2 = $ r4 copy", "if r1 == null goto label1", "$ r6 = r1 get envelope internal", "r2 expand to include $ r6", "label $ r5 = new org locationtech jts operation overlayng elevation model", "specialinvoke $ r5 < init > r2 3 3", "if r0 == null goto label2", "$ r5 add r0", "label if r1 == null goto label3", "$ r5 add r1", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts operation overlayng input geometry r0", "$ i0 = r1 get dimension 0", "if $ i0 ! = 2 goto label1", "return 0", "if $ i0 ! = 2 goto label1", "label r2 = org locationtech jts operation overlayng input geometry r0", "$ i1 = r2 get dimension 1", "if $ i1 ! = 2 goto label2", "return 1", "if $ i1 ! = 2 goto label2", "label return -1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new org locationtech jts operation overlayng overlay n g", "specialinvoke $ r3 < init > r0 r1", "$ i0 = r0 get dimension", "if $ i0 ! = 2 goto label1", "$ r3 set area result only 1", "label r7 = $ r3 get result", "label return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r8 = org locationtech jts operation polygonize edge ring r0", "$ z0 = r8 be hole", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label i1 = 0", "label r9 = org locationtech jts operation polygonize edge ring r0", "$ r3 = r9 de list", "$ i0 = $ r3 size", "if i1 > = $ i0 goto label4", "r10 = org locationtech jts operation polygonize edge ring r0", "$ r4 = r10 de list", "$ r5 = $ r4 get i1", "r1 = org locationtech jts operation polygonize polygonize direct edge $ r5", "$ r6 = r1 get sym", "$ r7 = org locationtech jts operation polygonize polygonize direct edge $ r6", "r2 = $ r7 get ring", "$ z1 = r2 be out hole", "if $ z1 == 0 goto label3", "return r2", "if $ z1 == 0 goto label3", "label i1 = i1 + 1", "goto label2", "if i1 > = $ i0 goto label4", "label return null"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r1 = org locationtech jts operation valid be simple op r0", "specialinvoke r1 compute", "r2 = org locationtech jts operation valid be simple op r0", "$ z0 = r2 be simple", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org locationtech jts util int array list r0", "$ i0 = r3 size", "r1 = newarray int [ $ i0 ]", "r4 = org locationtech jts util int array list r0", "$ r2 = r4 data", "r5 = org locationtech jts util int array list r0", "$ i1 = r5 size", "java lang system arraycopy $ r2 0 r1 0 $ i1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com pholser junit quickcheck internal generator array generator r0", "r5 length range = r1", "$ r2 = com pholser junit quickcheck internal range $ type integral", "$ i0 = r1 min", "$ r3 = java lang integer value of $ i0", "$ i1 = r1 max", "$ r4 = java lang integer value of $ i1", "com pholser junit quickcheck internal range check range $ r2 $ r3 $ r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["l0 = @ parameter0", "i1 = @ parameter1", "$ r1 = com esotericsoftware kryo util unsafe util direct byte buffer constr", "if $ r1 ! = null goto label1", "return null", "if $ r1 ! = null goto label1", "label $ r3 = com esotericsoftware kryo util unsafe util direct byte buffer constr", "$ r2 = newarray java lang object [ 3 ]", "$ r4 = java lang long value of l0", "$ r2 [ 0 ] = $ r4", "$ r5 = java lang integer value of i1", "$ r2 [ 1 ] = $ r5", "$ r2 [ 2 ] = null", "$ r6 = $ r3 new instance $ r2", "$ r7 = java nio byte buffer $ r6", "label return $ r7"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 & 255", "$ i4 = $ i1 < < 24", "$ i2 = i0 & 65280", "$ i3 = $ i2 < < 8", "$ i7 = $ i4 | $ i3", "$ i5 = i0 & 16711680", "$ i6 = $ i5 > > 8", "$ i10 = $ i7 | $ i6", "$ i8 = i0 > > 24", "$ i9 = $ i8 & 255", "$ i11 = $ i10 | $ i9", "return $ i11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "label r9 = org latency utils latency stats r0", "$ r3 = r9 record phaser", "$ r3 reader lock", "r10 = org latency utils latency stats r0", "specialinvoke r10 update histogram", "r11 = org latency utils latency stats r0", "$ r4 = r11 inactive raw data histogram", "r12 = org hdr histogram abstract histogram r1", "$ r4 copy into r12", "r13 = org latency utils latency stats r0", "$ r5 = r13 inactive pause correction histogram", "r14 = org hdr histogram abstract histogram $ r5", "r1 add r14", "label r15 = org latency utils latency stats r0", "$ r6 = r15 record phaser", "$ r6 reader unlock", "goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = @ parameter1", "r4 = org latency utils pause detector r0", "$ r2 = r4 message", "r3 = new org latency utils pause detector $ pause notification", "specialinvoke r3 < init > l0 l1", "$ r2 add r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = org fusesource leveldbjni internal util $ util j n i on_windows", "if $ i0 ! = 1 goto label1", "$ r10 = r1 get canonical path", "$ r11 = r0 get canonical path", "$ i2 = org fusesource leveldbjni internal util $ util j n i create hard link w $ r10 $ r11 0l", "if $ i2 ! = 0 goto label2", "$ r12 = new java io i o exception", "specialinvoke $ r12 < init > \\ `` link failed\\ ``", "throw $ r12", "if $ i2 ! = 0 goto label2", "label return", "if $ i0 ! = 1 goto label1", "label $ r2 = r0 get canonical path", "$ r3 = r1 get canonical path", "$ i1 = org fusesource leveldbjni internal util $ util j n i link $ r2 $ r3", "if $ i1 == 0 goto label2", "$ r4 = new java io i o exception", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` link fail \\ ``", "$ r7 = org fusesource leveldbjni internal util strerror", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "specialinvoke $ r4 < init > $ r9", "throw $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r5 = r0 graph", "$ r6 = r0 make op name \\ `` abort\\ ``", "r2 = $ r5 op builder \\ `` abort\\", "if r1 == null goto label4", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label4", "r4 = r1 [ i1 ]", "$ r9 = org tensorflow op core abort $ option access $ 000 r4", "if $ r9 == null goto label2", "$ r13 = org tensorflow op core abort $ option access $ 000 r4", "r2 set attr \\ `` error_msg\\", "label $ r10 = org tensorflow op core abort $ option access $ 100 r4", "if $ r10 == null goto label3", "$ r11 = org tensorflow op core abort $ option access $ 100 r4", "$ z0 = $ r11 boolean value", "r2 set attr \\ `` exit_without_error\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label $ r7 = new org tensorflow op core abort", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` accumulator num accumulated\\ ``", "r2 = $ r3 op builder \\ `` accumulator num accumulated\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core accumulator num accumulate", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r9 = r0 graph", "$ r10 = r0 make op name \\ `` all candidate sampler\\ ``", "r6 = $ r9 op builder \\ `` all candidate sampler\\", "$ r11 = r1 a output", "r6 add input $ r11", "$ l1 = r2 long value", "r6 set attr \\ `` num_true\\", "$ l2 = r3 long value", "r6 set attr \\ `` num_sampled\\", "$ z0 = r4 boolean value", "r6 set attr \\ `` unique\\", "if r5 == null goto label4", "i0 = lengthof r5", "i5 = 0", "label if i5 > = i0 goto label4", "r8 = r5 [ i5 ]", "$ r18 = org tensorflow op core all candidate sampler $ option access $ 000 r8", "if $ r18 == null goto label2", "$ r22 = org tensorflow op core all candidate sampler $ option access $ 000 r8", "$ l4 = $ r22 long value", "r6 set attr \\ `` seed\\", "label $ r19 = org tensorflow op core all candidate sampler $ option access $ 100 r8", "if $ r19 == null goto label3", "$ r20 = org tensorflow op core all candidate sampler $ option access $ 100 r8", "$ l3 = $ r20 long value", "r6 set attr \\ `` seed2\\", "label i5 = i5 + 1", "goto label1", "label if i5 > = i0 goto label4", "label $ r16 = new org tensorflow op core all candidate sampler", "$ r17 = r6 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core all candidate sampler r0", "$ r1 = r2 true expect count", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` any\\ ``", "r4 = $ r7 op builder \\ `` any\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ r11 = r2 a output", "r4 add input $ r11", "if r3 == null goto label3", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label3", "r6 = r3 [ i1 ]", "$ r15 = org tensorflow op core any $ option access $ 000 r6", "if $ r15 == null goto label2", "$ r16 = org tensorflow op core any $ option access $ 000 r6", "$ z0 = $ r16 boolean value", "r4 set attr \\ `` keep_dims\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r13 = new org tensorflow op core any", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core assign r0", "$ r1 = r2 output ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` atan2\\ ``", "r3 = $ r4 op builder \\ `` atan2\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core atan2", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` audio summary\\ ``", "r5 = $ r8 op builder \\ `` audio summary v2\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = r3 a output", "r5 add input $ r14", "if r4 == null goto label3", "i0 = lengthof r4", "i2 = 0", "label if i2 > = i0 goto label3", "r7 = r4 [ i2 ]", "$ r18 = org tensorflow op core audio summary $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r19 = org tensorflow op core audio summary $ option access $ 000 r7", "$ l1 = $ r19 long value", "r5 set attr \\ `` max_outputs\\", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label3", "label $ r16 = new org tensorflow op core audio summary", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core avg pool grad r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core barrier incomplete size r0", "$ r1 = r2 size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` batch matrix set diag\\ ``", "r3 = $ r4 op builder \\ `` batch matrix set diag\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core batch matrix set diag", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` batch matrix solve ls\\ ``", "r5 = $ r8 op builder \\ `` batch matrix solve ls\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = r3 a output", "r5 add input $ r14", "if r4 == null goto label3", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label3", "r7 = r4 [ i1 ]", "$ r18 = org tensorflow op core batch matrix solve ls $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r19 = org tensorflow op core batch matrix solve ls $ option access $ 000 r7", "$ z0 = $ r19 boolean value", "r5 set attr \\ `` fast\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r16 = new org tensorflow op core batch matrix solve l", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core batch to space r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core boost tree calculate best gain per feature r0", "$ r1 = r2 leave node contribs list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core boost tree predict r0", "$ r1 = r2 logits", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core bucketize r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` batch cholesky\\ ``", "r2 = $ r3 op builder \\ `` batch cholesky\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core batch cholesky", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` collective bcast send\\ ``", "r6 = $ r7 op builder \\ `` collective bcast send\\", "$ r9 = r1 a output", "r6 add input $ r9", "$ l0 = r2 long value", "r6 set attr \\ `` group_size\\", "$ l1 = r3 long value", "r6 set attr \\ `` group_key\\", "$ l2 = r4 long value", "r6 set attr \\ `` instance_key\\", "r6 set attr \\ `` shape\\", "$ r15 = new org tensorflow op core collective bcast send", "$ r16 = r6 build", "specialinvoke $ r15 < init > $ r16", "return $ r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "$ r11 = r0 graph", "$ r12 = r0 make op name \\ `` conv3 d backprop input\\ ``", "r7 = $ r11 op builder \\ `` conv3 d backprop input\\", "$ r13 = r1 a output", "r7 add input $ r13", "$ r15 = r2 a output", "r7 add input $ r15", "$ r17 = r3 a output", "r7 add input $ r17", "$ i1 = r4 size", "r8 = newarray long [ $ i1 ]", "i7 = 0", "label $ i2 = lengthof r8", "if i7 > = $ i2 goto label2", "$ r29 = r4 get i7", "$ r30 = java lang long $ r29", "$ l6 = $ r30 long value", "r8 [ i7 ] = $ l6", "i7 = i7 + 1", "goto label1", "if i7 > = $ i2 goto label2", "label r7 set attr \\ `` strides\\", "r7 set attr \\ `` padding\\", "if r6 == null goto label7", "i0 = lengthof r6", "i8 = 0", "label if i8 > = i0 goto label7", "r9 = r6 [ i8 ]", "$ r23 = org tensorflow op core conv3 d backprop input $ option access $ 000 r9", "if $ r23 == null goto label6", "$ r24 = org tensorflow op core conv3 d backprop input $ option access $ 000 r9", "$ i3 = $ r24 size", "r10 = newarray long [ $ i3 ]", "i9 = 0", "label $ i4 = lengthof r10", "if i9 > = $ i4 goto label5", "$ r26 = org tensorflow op core conv3 d backprop input $ option access $ 000 r9", "$ r27 = $ r26 get i9", "$ r28 = java lang long $ r27", "$ l5 = $ r28 long value", "r10 [ i9 ] = $ l5", "i9 = i9 + 1", "goto label4", "if i9 > = $ i4 goto label5", "label r7 set attr \\ `` dilations\\", "label i8 = i8 + 1", "goto label3", "label if i8 > = i0 goto label7", "label $ r21 = new org tensorflow op core conv3 d backprop input", "$ r22 = r7 build", "specialinvoke $ r21 < init > $ r22", "return $ r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [], [55], [56], [57], [58], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` cos\\ ``", "r2 = $ r3 op builder \\ `` cos\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core co", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r9 = r0 graph", "$ r10 = r0 make op name \\ `` crop and resize grad boxes\\ ``", "r6 = $ r9 op builder \\ `` crop and resize grad boxes\\", "$ r11 = r1 a output", "r6 add input $ r11", "$ r13 = r2 a output", "r6 add input $ r13", "$ r15 = r3 a output", "r6 add input $ r15", "$ r17 = r4 a output", "r6 add input $ r17", "if r5 == null goto label3", "i0 = lengthof r5", "i1 = 0", "label if i1 > = i0 goto label3", "r8 = r5 [ i1 ]", "$ r21 = org tensorflow op core crop and resize grad box $ option access $ 000 r8", "if $ r21 == null goto label2", "$ r22 = org tensorflow op core crop and resize grad box $ option access $ 000 r8", "r6 set attr \\ `` method\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r19 = new org tensorflow op core crop and resize grad box", "$ r20 = r6 build", "specialinvoke $ r19 < init > $ r20", "return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core crop and resize grad box r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core crop and resize grad image r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r9 = r0 graph", "$ r10 = r0 make op name \\ `` c t c loss\\ ``", "r6 = $ r9 op builder \\ `` c t c loss\\", "$ r11 = r1 a output", "r6 add input $ r11", "$ r13 = r2 a output", "r6 add input $ r13", "$ r15 = r3 a output", "r6 add input $ r15", "$ r17 = r4 a output", "r6 add input $ r17", "if r5 == null goto label5", "i0 = lengthof r5", "i1 = 0", "label if i1 > = i0 goto label5", "r8 = r5 [ i1 ]", "$ r21 = org tensorflow op core c t c loss $ option access $ 000 r8", "if $ r21 == null goto label2", "$ r28 = org tensorflow op core c t c loss $ option access $ 000 r8", "$ z2 = $ r28 boolean value", "r6 set attr \\ `` preprocess_collapse_repeated\\", "label $ r22 = org tensorflow op core c t c loss $ option access $ 100 r8", "if $ r22 == null goto label3", "$ r26 = org tensorflow op core c t c loss $ option access $ 100 r8", "$ z1 = $ r26 boolean value", "r6 set attr \\ `` ctc_merge_repeated\\", "label $ r23 = org tensorflow op core c t c loss $ option access $ 200 r8", "if $ r23 == null goto label4", "$ r24 = org tensorflow op core c t c loss $ option access $ 200 r8", "$ z0 = $ r24 boolean value", "r6 set attr \\ `` ignore_longer_outputs_than_inputs\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label5", "label $ r19 = new org tensorflow op core c t c loss", "$ r20 = r6 build", "specialinvoke $ r19 < init > $ r20", "return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r9 = r0 graph", "$ r10 = r0 make op name \\ `` cudnn r n n\\ ``", "r6 = $ r9 op builder \\ `` cudnn r n n\\", "$ r11 = r1 a output", "r6 add input $ r11", "$ r13 = r2 a output", "r6 add input $ r13", "$ r15 = r3 a output", "r6 add input $ r15", "$ r17 = r4 a output", "r6 add input $ r17", "if r5 == null goto label9", "i0 = lengthof r5", "i3 = 0", "label if i3 > = i0 goto label9", "r8 = r5 [ i3 ]", "$ r21 = org tensorflow op core cudnn r n n $ option access $ 000 r8", "if $ r21 == null goto label2", "$ r40 = org tensorflow op core cudnn r n n $ option access $ 000 r8", "r6 set attr \\ `` rnn_mode\\", "label $ r22 = org tensorflow op core cudnn r n n $ option access $ 100 r8", "if $ r22 == null goto label3", "$ r38 = org tensorflow op core cudnn r n n $ option access $ 100 r8", "r6 set attr \\ `` input_mode\\", "label $ r23 = org tensorflow op core cudnn r n n $ option access $ 200 r8", "if $ r23 == null goto label4", "$ r36 = org tensorflow op core cudnn r n n $ option access $ 200 r8", "r6 set attr \\ `` direction\\", "label $ r24 = org tensorflow op core cudnn r n n $ option access $ 300 r8", "if $ r24 == null goto label5", "$ r34 = org tensorflow op core cudnn r n n $ option access $ 300 r8", "$ f0 = $ r34 float value", "r6 set attr \\ `` dropout\\", "label $ r25 = org tensorflow op core cudnn r n n $ option access $ 400 r8", "if $ r25 == null goto label6", "$ r32 = org tensorflow op core cudnn r n n $ option access $ 400 r8", "$ l2 = $ r32 long value", "r6 set attr \\ `` seed\\", "label $ r26 = org tensorflow op core cudnn r n n $ option access $ 500 r8", "if $ r26 == null goto label7", "$ r30 = org tensorflow op core cudnn r n n $ option access $ 500 r8", "$ l1 = $ r30 long value", "r6 set attr \\ `` seed2\\", "label $ r27 = org tensorflow op core cudnn r n n $ option access $ 600 r8", "if $ r27 == null goto label8", "$ r28 = org tensorflow op core cudnn r n n $ option access $ 600 r8", "$ z0 = $ r28 boolean value", "r6 set attr \\ `` is_training\\", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label9", "label $ r19 = new org tensorflow op core cudnn r n n", "$ r20 = r6 build", "specialinvoke $ r19 < init > $ r20", "return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r9 = r0 graph", "$ r10 = r0 make op name \\ `` cudnn r n n v2\\ ``", "r6 = $ r9 op builder \\ `` cudnn r n n v2\\", "$ r11 = r1 a output", "r6 add input $ r11", "$ r13 = r2 a output", "r6 add input $ r13", "$ r15 = r3 a output", "r6 add input $ r15", "$ r17 = r4 a output", "r6 add input $ r17", "if r5 == null goto label9", "i0 = lengthof r5", "i3 = 0", "label if i3 > = i0 goto label9", "r8 = r5 [ i3 ]", "$ r21 = org tensorflow op core cudnn r n n v2 $ option access $ 000 r8", "if $ r21 == null goto label2", "$ r40 = org tensorflow op core cudnn r n n v2 $ option access $ 000 r8", "r6 set attr \\ `` rnn_mode\\", "label $ r22 = org tensorflow op core cudnn r n n v2 $ option access $ 100 r8", "if $ r22 == null goto label3", "$ r38 = org tensorflow op core cudnn r n n v2 $ option access $ 100 r8", "r6 set attr \\ `` input_mode\\", "label $ r23 = org tensorflow op core cudnn r n n v2 $ option access $ 200 r8", "if $ r23 == null goto label4", "$ r36 = org tensorflow op core cudnn r n n v2 $ option access $ 200 r8", "r6 set attr \\ `` direction\\", "label $ r24 = org tensorflow op core cudnn r n n v2 $ option access $ 300 r8", "if $ r24 == null goto label5", "$ r34 = org tensorflow op core cudnn r n n v2 $ option access $ 300 r8", "$ f0 = $ r34 float value", "r6 set attr \\ `` dropout\\", "label $ r25 = org tensorflow op core cudnn r n n v2 $ option access $ 400 r8", "if $ r25 == null goto label6", "$ r32 = org tensorflow op core cudnn r n n v2 $ option access $ 400 r8", "$ l2 = $ r32 long value", "r6 set attr \\ `` seed\\", "label $ r26 = org tensorflow op core cudnn r n n v2 $ option access $ 500 r8", "if $ r26 == null goto label7", "$ r30 = org tensorflow op core cudnn r n n v2 $ option access $ 500 r8", "$ l1 = $ r30 long value", "r6 set attr \\ `` seed2\\", "label $ r27 = org tensorflow op core cudnn r n n v2 $ option access $ 600 r8", "if $ r27 == null goto label8", "$ r28 = org tensorflow op core cudnn r n n v2 $ option access $ 600 r8", "$ z0 = $ r28 boolean value", "r6 set attr \\ `` is_training\\", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label9", "label $ r19 = new org tensorflow op core cudnn r n n v2", "$ r20 = r6 build", "specialinvoke $ r19 < init > $ r20", "return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` data format dim map\\ ``", "r3 = $ r6 op builder \\ `` data format dim map\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label4", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label4", "r5 = r2 [ i1 ]", "$ r12 = org tensorflow op core data format dim map $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r16 = org tensorflow op core data format dim map $ option access $ 000 r5", "r3 set attr \\ `` src_format\\", "label $ r13 = org tensorflow op core data format dim map $ option access $ 100 r5", "if $ r13 == null goto label3", "$ r14 = org tensorflow op core data format dim map $ option access $ 100 r5", "r3 set attr \\ `` dst_format\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label4", "label $ r10 = new org tensorflow op core data format dim map", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` decode compressed\\ ``", "r3 = $ r6 op builder \\ `` decode compressed\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label3", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r5 = r2 [ i1 ]", "$ r12 = org tensorflow op core decode compress $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r13 = org tensorflow op core decode compress $ option access $ 000 r5", "r3 set attr \\ `` compression_type\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r10 = new org tensorflow op core decode compress", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core decode j s o n example r0", "$ r1 = r2 binary example", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core decode proto v2 r0", "$ r1 = r2 size", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core decode wav r0", "$ r1 = r2 audio", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core depthwise conv2d native backprop input r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` destroy resource op\\ ``", "r3 = $ r6 op builder \\ `` destroy resource op\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label3", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r5 = r2 [ i1 ]", "$ r12 = org tensorflow op core destroy resource op $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r13 = org tensorflow op core destroy resource op $ option access $ 000 r5", "$ z0 = $ r13 boolean value", "r3 set attr \\ `` ignore_lookup_error\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r10 = new org tensorflow op core destroy resource op", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` div no nan\\ ``", "r3 = $ r4 op builder \\ `` div no nan\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core div no nan", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core draw bound box r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core elu grad r0", "$ r1 = r2 backprops", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` encode base64\\ ``", "r3 = $ r6 op builder \\ `` encode base64\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label3", "i0 = lengthof r2", "i1 = 0", "label if i1 > = i0 goto label3", "r5 = r2 [ i1 ]", "$ r12 = org tensorflow op core encode base64 $ option access $ 000 r5", "if $ r12 == null goto label2", "$ r13 = org tensorflow op core encode base64 $ option access $ 000 r5", "$ z0 = $ r13 boolean value", "r3 set attr \\ `` pad\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r10 = new org tensorflow op core encode base64", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` encode jpeg\\ ``", "r3 = $ r6 op builder \\ `` encode jpeg\\", "$ r8 = r1 a output", "r3 add input $ r8", "if r2 == null goto label11", "i0 = lengthof r2", "i4 = 0", "label if i4 > = i0 goto label11", "r5 = r2 [ i4 ]", "$ r12 = org tensorflow op core encode jpeg $ option access $ 000 r5", "if $ r12 == null goto label02", "$ r37 = org tensorflow op core encode jpeg $ option access $ 000 r5", "r3 set attr \\ `` format\\", "label $ r13 = org tensorflow op core encode jpeg $ option access $ 100 r5", "if $ r13 == null goto label03", "$ r35 = org tensorflow op core encode jpeg $ option access $ 100 r5", "$ l3 = $ r35 long value", "r3 set attr \\ `` quality\\", "label $ r14 = org tensorflow op core encode jpeg $ option access $ 200 r5", "if $ r14 == null goto label04", "$ r33 = org tensorflow op core encode jpeg $ option access $ 200 r5", "$ z2 = $ r33 boolean value", "r3 set attr \\ `` progressive\\", "label $ r15 = org tensorflow op core encode jpeg $ option access $ 300 r5", "if $ r15 == null goto label05", "$ r31 = org tensorflow op core encode jpeg $ option access $ 300 r5", "$ z1 = $ r31 boolean value", "r3 set attr \\ `` optimize_size\\", "label $ r16 = org tensorflow op core encode jpeg $ option access $ 400 r5", "if $ r16 == null goto label06", "$ r29 = org tensorflow op core encode jpeg $ option access $ 400 r5", "$ z0 = $ r29 boolean value", "r3 set attr \\ `` chroma_downsampling\\", "label $ r17 = org tensorflow op core encode jpeg $ option access $ 500 r5", "if $ r17 == null goto label07", "$ r27 = org tensorflow op core encode jpeg $ option access $ 500 r5", "r3 set attr \\ `` density_unit\\", "label $ r18 = org tensorflow op core encode jpeg $ option access $ 600 r5", "if $ r18 == null goto label08", "$ r25 = org tensorflow op core encode jpeg $ option access $ 600 r5", "$ l2 = $ r25 long value", "r3 set attr \\ `` x_density\\", "label $ r19 = org tensorflow op core encode jpeg $ option access $ 700 r5", "if $ r19 == null goto label09", "$ r23 = org tensorflow op core encode jpeg $ option access $ 700 r5", "$ l1 = $ r23 long value", "r3 set attr \\ `` y_density\\", "label $ r20 = org tensorflow op core encode jpeg $ option access $ 800 r5", "if $ r20 == null goto label10", "$ r21 = org tensorflow op core encode jpeg $ option access $ 800 r5", "r3 set attr \\ `` xmp_metadata\\", "label i4 = i4 + 1", "goto label01", "label if i4 > = i0 goto label11", "label $ r10 = new org tensorflow op core encode jpeg", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core expand dim r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` experimental iterator get device\\ ``", "r2 = $ r3 op builder \\ `` experimental iterator get device\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core experimental iterator get device", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` experimental unbatch dataset\\ ``", "r4 = $ r6 op builder \\ `` experimental unbatch dataset\\", "$ r8 = r1 a output", "r4 add input $ r8", "$ i0 = r2 size", "r5 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r5", "if i4 > = $ i1 goto label2", "$ r16 = r2 get i4", "$ r17 = java lang class $ r16", "$ r18 = org tensorflow data type from class $ r17", "r5 [ i4 ] = $ r18", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r4 set attr \\ `` output_types\\", "$ i2 = r3 size", "r19 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r19", "if i5 > = $ i3 goto label4", "$ r14 = r3 get i5", "$ r15 = org tensorflow shape $ r14", "r19 [ i5 ] = $ r15", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r4 set attr \\ `` output_shapes\\", "$ r12 = new org tensorflow op core experimental unbatch dataset", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core extract jpeg shape r0", "$ r1 = r2 image shape", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core fake quant with min max var per channel gradient r0", "$ r1 = r2 backprop wrt min", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core fake quant with min max var per channel gradient r0", "$ r1 = r2 backprop wrt max", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` flush summary writer\\ ``", "r2 = $ r3 op builder \\ `` flush summary writer\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core flush summary writer", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core fuse batch norm grad r0", "$ r1 = r2 reserve space4", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core get session tensor r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r4 = org tensorflow op core histogram fix width create r0 r1 r2 r3 class \\ `` ljava lang integer \\ ``", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` import event\\ ``", "r3 = $ r4 op builder \\ `` import event\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core import event", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` irfft\\ ``", "r3 = $ r4 op builder \\ `` irfft\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core irfft", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` be boosted tree ensemble initialized\\ ``", "r2 = $ r3 op builder \\ `` be boosted tree ensemble initialized\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core be boost tree ensemble initialized", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` iterator from string handle\\ ``", "r4 = $ r8 op builder \\ `` iterator from string handle\\", "$ r10 = r1 a output", "r4 add input $ r10", "$ i1 = r2 size", "r5 = newarray org tensorflow data type [ $ i1 ]", "i5 = 0", "label $ i2 = lengthof r5", "if i5 > = $ i2 goto label2", "$ r21 = r2 get i5", "$ r22 = java lang class $ r21", "$ r23 = org tensorflow data type from class $ r22", "r5 [ i5 ] = $ r23", "i5 = i5 + 1", "goto label1", "if i5 > = $ i2 goto label2", "label r4 set attr \\ `` output_types\\", "if r3 == null goto label7", "i0 = lengthof r3", "i6 = 0", "label if i6 > = i0 goto label7", "r6 = r3 [ i6 ]", "$ r15 = org tensorflow op core iterator from string handle $ option access $ 000 r6", "if $ r15 == null goto label6", "$ r16 = org tensorflow op core iterator from string handle $ option access $ 000 r6", "$ i3 = $ r16 size", "r7 = newarray org tensorflow shape [ $ i3 ]", "i7 = 0", "label $ i4 = lengthof r7", "if i7 > = $ i4 goto label5", "$ r18 = org tensorflow op core iterator from string handle $ option access $ 000 r6", "$ r19 = $ r18 get i7", "$ r20 = org tensorflow shape $ r19", "r7 [ i7 ] = $ r20", "i7 = i7 + 1", "goto label4", "if i7 > = $ i4 goto label5", "label r4 set attr \\ `` output_shapes\\", "label i6 = i6 + 1", "goto label3", "label if i6 > = i0 goto label7", "label $ r13 = new org tensorflow op core iterator from string handle", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` iterator get next\\ ``", "r4 = $ r6 op builder \\ `` iterator get next\\", "$ r8 = r1 a output", "r4 add input $ r8", "$ i0 = r2 size", "r5 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r5", "if i4 > = $ i1 goto label2", "$ r16 = r2 get i4", "$ r17 = java lang class $ r16", "$ r18 = org tensorflow data type from class $ r17", "r5 [ i4 ] = $ r18", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r4 set attr \\ `` output_types\\", "$ i2 = r3 size", "r19 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r19", "if i5 > = $ i3 goto label4", "$ r14 = r3 get i5", "$ r15 = org tensorflow shape $ r14", "r19 [ i5 ] = $ r15", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r4 set attr \\ `` output_shapes\\", "$ r12 = new org tensorflow op core iterator get next", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` iterator v2\\ ``", "r5 = $ r7 op builder \\ `` iterator v2\\", "r5 set attr \\ `` shared_name\\", "r5 set attr \\ `` container\\", "$ i0 = r3 size", "r6 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r6", "if i4 > = $ i1 goto label2", "$ r17 = r3 get i4", "$ r18 = java lang class $ r17", "$ r19 = org tensorflow data type from class $ r18", "r6 [ i4 ] = $ r19", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r5 set attr \\ `` output_types\\", "$ i2 = r4 size", "r20 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r20", "if i5 > = $ i3 goto label4", "$ r15 = r4 get i5", "$ r16 = org tensorflow shape $ r15", "r20 [ i5 ] = $ r16", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r5 set attr \\ `` output_shapes\\", "$ r13 = new org tensorflow op core iterator v2", "$ r14 = r5 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [], [34], [35], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core leaky relu grad r0", "$ r1 = r2 backprops", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` less equal\\ ``", "r3 = $ r4 op builder \\ `` less equal\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core less equal", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` log matrix determinant\\ ``", "r2 = $ r3 op builder \\ `` log matrix determinant\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core log matrix determinant", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core low bound r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` map clear\\ ``", "r3 = $ r6 op builder \\ `` map clear\\", "$ i1 = r1 size", "r4 = newarray org tensorflow data type [ $ i1 ]", "i5 = 0", "label $ i2 = lengthof r4", "if i5 > = $ i2 goto label2", "$ r23 = r1 get i5", "$ r24 = java lang class $ r23", "$ r25 = org tensorflow data type from class $ r24", "r4 [ i5 ] = $ r25", "i5 = i5 + 1", "goto label1", "if i5 > = $ i2 goto label2", "label r3 set attr \\ `` dtypes\\", "if r2 == null goto label8", "i0 = lengthof r2", "i6 = 0", "label if i6 > = i0 goto label8", "r5 = r2 [ i6 ]", "$ r11 = org tensorflow op core map clear $ option access $ 000 r5", "if $ r11 == null goto label4", "$ r21 = org tensorflow op core map clear $ option access $ 000 r5", "$ l4 = $ r21 long value", "r3 set attr \\ `` capacity\\", "label $ r12 = org tensorflow op core map clear $ option access $ 100 r5", "if $ r12 == null goto label5", "$ r19 = org tensorflow op core map clear $ option access $ 100 r5", "$ l3 = $ r19 long value", "r3 set attr \\ `` memory_limit\\", "label $ r13 = org tensorflow op core map clear $ option access $ 200 r5", "if $ r13 == null goto label6", "$ r17 = org tensorflow op core map clear $ option access $ 200 r5", "r3 set attr \\ `` container\\", "label $ r14 = org tensorflow op core map clear $ option access $ 300 r5", "if $ r14 == null goto label7", "$ r15 = org tensorflow op core map clear $ option access $ 300 r5", "r3 set attr \\ `` shared_name\\", "label i6 = i6 + 1", "goto label3", "label if i6 > = i0 goto label8", "label $ r9 = new org tensorflow op core map clear", "$ r10 = r3 build", "specialinvoke $ r9 < init > $ r10", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core batch matrix determinant r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core batch matrix set diag r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` maximum\\ ``", "r3 = $ r4 op builder \\ `` maximum\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core maximum", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core max pool grad with argmax r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r9 = r0 graph", "$ r10 = r0 make op name \\ `` max pool v2\\ ``", "r6 = $ r9 op builder \\ `` max pool v2\\", "$ r11 = r1 a output", "r6 add input $ r11", "$ r13 = r2 a output", "r6 add input $ r13", "$ r15 = r3 a output", "r6 add input $ r15", "r6 set attr \\ `` padding\\", "if r5 == null goto label3", "i0 = lengthof r5", "i1 = 0", "label if i1 > = i0 goto label3", "r8 = r5 [ i1 ]", "$ r20 = org tensorflow op core max pool v2 $ option access $ 000 r8", "if $ r20 == null goto label2", "$ r21 = org tensorflow op core max pool v2 $ option access $ 000 r8", "r6 set attr \\ `` data_format\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r18 = new org tensorflow op core max pool v2", "$ r19 = r6 build", "specialinvoke $ r18 < init > $ r19", "return $ r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` merge\\ ``", "r2 = $ r3 op builder \\ `` merge\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core merge", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` merge summary\\ ``", "r2 = $ r3 op builder \\ `` merge summary\\", "$ r5 = org tensorflow op operands a output r1", "r2 add input list $ r5", "$ r7 = new org tensorflow op core merge summary", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` model dataset\\ ``", "r4 = $ r6 op builder \\ `` model dataset\\", "$ r8 = r1 a output", "r4 add input $ r8", "$ i0 = r2 size", "r5 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r5", "if i4 > = $ i1 goto label2", "$ r16 = r2 get i4", "$ r17 = java lang class $ r16", "$ r18 = org tensorflow data type from class $ r17", "r5 [ i4 ] = $ r18", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r4 set attr \\ `` output_types\\", "$ i2 = r3 size", "r19 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r19", "if i5 > = $ i3 goto label4", "$ r14 = r3 get i5", "$ r15 = org tensorflow shape $ r14", "r19 [ i5 ] = $ r15", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r4 set attr \\ `` output_shapes\\", "$ r12 = new org tensorflow op core model dataset", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` multi device iterator get next from shard\\ ``", "r6 = $ r8 op builder \\ `` multi device iterator get next from shard\\", "$ r10 = r1 a output", "r6 add input $ r10", "$ r12 = r2 a output", "r6 add input $ r12", "$ r14 = r3 a output", "r6 add input $ r14", "$ i0 = r4 size", "r7 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r7", "if i4 > = $ i1 goto label2", "$ r22 = r4 get i4", "$ r23 = java lang class $ r22", "$ r24 = org tensorflow data type from class $ r23", "r7 [ i4 ] = $ r24", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r6 set attr \\ `` output_types\\", "$ i2 = r5 size", "r25 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r25", "if i5 > = $ i3 goto label4", "$ r20 = r5 get i5", "$ r21 = org tensorflow shape $ r20", "r25 [ i5 ] = $ r21", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r6 set attr \\ `` output_shapes\\", "$ r18 = new org tensorflow op core multi device iterator get next from shard", "$ r19 = r6 build", "specialinvoke $ r18 < init > $ r19", "return $ r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` non max suppression\\ ``", "r5 = $ r8 op builder \\ `` non max suppression\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = r3 a output", "r5 add input $ r14", "if r4 == null goto label3", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label3", "r7 = r4 [ i1 ]", "$ r18 = org tensorflow op core non max suppression $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r19 = org tensorflow op core non max suppression $ option access $ 000 r7", "$ f0 = $ r19 float value", "r5 set attr \\ `` iou_threshold\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r16 = new org tensorflow op core non max suppression", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core non max suppression v4 r0", "$ r1 = r2 valid output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` non max suppression with overlaps\\ ``", "r6 = $ r7 op builder \\ `` non max suppression with overlaps\\", "$ r9 = r1 a output", "r6 add input $ r9", "$ r11 = r2 a output", "r6 add input $ r11", "$ r13 = r3 a output", "r6 add input $ r13", "$ r15 = r4 a output", "r6 add input $ r15", "$ r17 = r5 a output", "r6 add input $ r17", "$ r19 = new org tensorflow op core non max suppression with overlap", "$ r20 = r6 build", "specialinvoke $ r19 < init > $ r20", "return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` pad f i f o queue\\ ``", "r3 = $ r7 op builder \\ `` pad f i f o queue v2\\", "$ i1 = r1 size", "r4 = newarray org tensorflow data type [ $ i1 ]", "i6 = 0", "label $ i2 = lengthof r4", "if i6 > = $ i2 goto label02", "$ r27 = r1 get i6", "$ r28 = java lang class $ r27", "$ r29 = org tensorflow data type from class $ r28", "r4 [ i6 ] = $ r29", "i6 = i6 + 1", "goto label01", "if i6 > = $ i2 goto label02", "label r3 set attr \\ `` component_types\\", "if r2 == null goto label10", "i0 = lengthof r2", "i7 = 0", "label if i7 > = i0 goto label10", "r5 = r2 [ i7 ]", "$ r12 = org tensorflow op core pad f i f o queue $ option access $ 000 r5", "if $ r12 == null goto label06", "$ r22 = org tensorflow op core pad f i f o queue $ option access $ 000 r5", "$ i4 = $ r22 size", "r6 = newarray org tensorflow shape [ $ i4 ]", "i8 = 0", "label $ i5 = lengthof r6", "if i8 > = $ i5 goto label05", "$ r24 = org tensorflow op core pad f i f o queue $ option access $ 000 r5", "$ r25 = $ r24 get i8", "$ r26 = org tensorflow shape $ r25", "r6 [ i8 ] = $ r26", "i8 = i8 + 1", "goto label04", "if i8 > = $ i5 goto label05", "label r3 set attr \\ `` shapes\\", "label $ r13 = org tensorflow op core pad f i f o queue $ option access $ 100 r5", "if $ r13 == null goto label07", "$ r20 = org tensorflow op core pad f i f o queue $ option access $ 100 r5", "$ l3 = $ r20 long value", "r3 set attr \\ `` capacity\\", "label $ r14 = org tensorflow op core pad f i f o queue $ option access $ 200 r5", "if $ r14 == null goto label08", "$ r18 = org tensorflow op core pad f i f o queue $ option access $ 200 r5", "r3 set attr \\ `` container\\", "label $ r15 = org tensorflow op core pad f i f o queue $ option access $ 300 r5", "if $ r15 == null goto label09", "$ r16 = org tensorflow op core pad f i f o queue $ option access $ 300 r5", "r3 set attr \\ `` shared_name\\", "label i7 = i7 + 1", "goto label03", "label if i7 > = i0 goto label10", "label $ r10 = new org tensorflow op core pad f i f o queue", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [], [56], [57], [58], [59], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "r7 = @ parameter7", "$ r10 = r0 graph", "$ r11 = r0 make op name \\ `` parse example\\ ``", "r8 = $ r10 op builder \\ `` parse example\\", "$ r12 = r1 a output", "r8 add input $ r12", "$ r14 = r2 a output", "r8 add input $ r14", "$ r16 = org tensorflow op operands a output r3", "r8 add input list $ r16", "$ r18 = org tensorflow op operands a output r4", "r8 add input list $ r18", "$ r20 = org tensorflow op operands a output r5", "r8 add input list $ r20", "$ i0 = r6 size", "r9 = newarray org tensorflow data type [ $ i0 ]", "i4 = 0", "label $ i1 = lengthof r9", "if i4 > = $ i1 goto label2", "$ r28 = r6 get i4", "$ r29 = java lang class $ r28", "$ r30 = org tensorflow data type from class $ r29", "r9 [ i4 ] = $ r30", "i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label2", "label r8 set attr \\ `` sparse_types\\", "$ i2 = r7 size", "r31 = newarray org tensorflow shape [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r31", "if i5 > = $ i3 goto label4", "$ r26 = r7 get i5", "$ r27 = org tensorflow shape $ r26", "r31 [ i5 ] = $ r27", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label r8 set attr \\ `` dense_shapes\\", "$ r24 = new org tensorflow op core parse example", "$ r25 = r8 build", "specialinvoke $ r24 < init > $ r25", "return $ r24"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` priority queue\\ ``", "r4 = $ r7 op builder \\ `` priority queue v2\\", "$ i1 = r1 size", "r5 = newarray org tensorflow data type [ $ i1 ]", "i6 = 0", "label $ i2 = lengthof r5", "if i6 > = $ i2 goto label2", "$ r24 = r1 get i6", "$ r25 = java lang class $ r24", "$ r26 = org tensorflow data type from class $ r25", "r5 [ i6 ] = $ r26", "i6 = i6 + 1", "goto label1", "if i6 > = $ i2 goto label2", "label r4 set attr \\ `` component_types\\", "$ i3 = r2 size", "r27 = newarray org tensorflow shape [ $ i3 ]", "i7 = 0", "label $ i4 = lengthof r27", "if i7 > = $ i4 goto label4", "$ r22 = r2 get i7", "$ r23 = org tensorflow shape $ r22", "r27 [ i7 ] = $ r23", "i7 = i7 + 1", "goto label3", "if i7 > = $ i4 goto label4", "label r4 set attr \\ `` shapes\\", "if r3 == null goto label9", "i0 = lengthof r3", "i8 = 0", "label if i8 > = i0 goto label9", "r6 = r3 [ i8 ]", "$ r13 = org tensorflow op core priority queue $ option access $ 000 r6", "if $ r13 == null goto label6", "$ r20 = org tensorflow op core priority queue $ option access $ 000 r6", "$ l5 = $ r20 long value", "r4 set attr \\ `` capacity\\", "label $ r14 = org tensorflow op core priority queue $ option access $ 100 r6", "if $ r14 == null goto label7", "$ r18 = org tensorflow op core priority queue $ option access $ 100 r6", "r4 set attr \\ `` container\\", "label $ r15 = org tensorflow op core priority queue $ option access $ 200 r6", "if $ r15 == null goto label8", "$ r16 = org tensorflow op core priority queue $ option access $ 200 r6", "r4 set attr \\ `` shared_name\\", "label i8 = i8 + 1", "goto label5", "label if i8 > = i0 goto label9", "label $ r11 = new org tensorflow op core priority queue", "$ r12 = r4 build", "specialinvoke $ r11 < init > $ r12", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` quantize and dequantize v2\\ ``", "r5 = $ r8 op builder \\ `` quantize and dequantize v2\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = r3 a output", "r5 add input $ r14", "if r4 == null goto label6", "i0 = lengthof r4", "i2 = 0", "label if i2 > = i0 goto label6", "r7 = r4 [ i2 ]", "$ r18 = org tensorflow op core quantize and dequantize v2 $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r28 = org tensorflow op core quantize and dequantize v2 $ option access $ 000 r7", "$ z1 = $ r28 boolean value", "r5 set attr \\ `` signed_input\\", "label $ r19 = org tensorflow op core quantize and dequantize v2 $ option access $ 100 r7", "if $ r19 == null goto label3", "$ r26 = org tensorflow op core quantize and dequantize v2 $ option access $ 100 r7", "$ l1 = $ r26 long value", "r5 set attr \\ `` num_bits\\", "label $ r20 = org tensorflow op core quantize and dequantize v2 $ option access $ 200 r7", "if $ r20 == null goto label4", "$ r24 = org tensorflow op core quantize and dequantize v2 $ option access $ 200 r7", "$ z0 = $ r24 boolean value", "r5 set attr \\ `` range_given\\", "label $ r21 = org tensorflow op core quantize and dequantize v2 $ option access $ 300 r7", "if $ r21 == null goto label5", "$ r22 = org tensorflow op core quantize and dequantize v2 $ option access $ 300 r7", "r5 set attr \\ `` round_mode\\", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label6", "label $ r16 = new org tensorflow op core quantize and dequantize v2", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` quantize concat\\ ``", "r5 = $ r6 op builder \\ `` quantize concat\\", "$ r8 = r1 a output", "r5 add input $ r8", "$ r10 = r2 a output", "r5 add input $ r10", "$ r12 = org tensorflow op operands a output r3", "r5 add input list $ r12", "$ r14 = org tensorflow op operands a output r4", "r5 add input list $ r14", "$ r16 = new org tensorflow op core quantize concat", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core quantize relu r0", "$ r1 = r2 min activation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core quantize reshape r0", "$ r1 = r2 output max", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core quantize v2 r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` random crop\\ ``", "r4 = $ r7 op builder \\ `` random crop\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ r11 = r2 a output", "r4 add input $ r11", "if r3 == null goto label4", "i0 = lengthof r3", "i3 = 0", "label if i3 > = i0 goto label4", "r6 = r3 [ i3 ]", "$ r15 = org tensorflow op core random crop $ option access $ 000 r6", "if $ r15 == null goto label2", "$ r19 = org tensorflow op core random crop $ option access $ 000 r6", "$ l2 = $ r19 long value", "r4 set attr \\ `` seed\\", "label $ r16 = org tensorflow op core random crop $ option access $ 100 r6", "if $ r16 == null goto label3", "$ r17 = org tensorflow op core random crop $ option access $ 100 r6", "$ l1 = $ r17 long value", "r4 set attr \\ `` seed2\\", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label4", "label $ r13 = new org tensorflow op core random crop", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` reader serialize state\\ ``", "r2 = $ r3 op builder \\ `` reader serialize state v2\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core reader serialize state", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` read file\\ ``", "r2 = $ r3 op builder \\ `` read file\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core read file", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` reciprocal\\ ``", "r2 = $ r3 op builder \\ `` reciprocal\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core reciprocal", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` ref merge\\ ``", "r2 = $ r3 op builder \\ `` ref merge\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core ref merge", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` resize area\\ ``", "r4 = $ r7 op builder \\ `` resize area\\", "$ r9 = r1 a output", "r4 add input $ r9", "$ r11 = r2 a output", "r4 add input $ r11", "if r3 == null goto label3", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label3", "r6 = r3 [ i1 ]", "$ r15 = org tensorflow op core resize area $ option access $ 000 r6", "if $ r15 == null goto label2", "$ r16 = org tensorflow op core resize area $ option access $ 000 r6", "$ z0 = $ r16 boolean value", "r4 set attr \\ `` align_corners\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r13 = new org tensorflow op core resize area", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core irfft3d r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` rint\\ ``", "r2 = $ r3 op builder \\ `` rint\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core rint", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core sample distort bound box r0", "$ r1 = r2 begin", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core scalar summary r0", "$ r1 = r2 summary", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core batch self adjoint eig v2 r0", "$ r1 = r2 e", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` sigmoid\\ ``", "r2 = $ r3 op builder \\ `` sigmoid\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core sigmoid", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r4 = r0 graph", "$ r5 = r0 make op name \\ `` sigmoid grad\\ ``", "r3 = $ r4 op builder \\ `` sigmoid grad\\", "$ r6 = r1 a output", "r3 add input $ r6", "$ r8 = r2 a output", "r3 add input $ r8", "$ r10 = new org tensorflow op core sigmoid grad", "$ r11 = r3 build", "specialinvoke $ r10 < init > $ r11", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core skipgram r0", "$ r1 = r2 vocab freq", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` sparse accumulator apply gradient\\ ``", "r7 = $ r8 op builder \\ `` sparse accumulator apply gradient\\", "$ r10 = r1 a output", "r7 add input $ r10", "$ r12 = r2 a output", "r7 add input $ r12", "$ r14 = r3 a output", "r7 add input $ r14", "$ r16 = r4 a output", "r7 add input $ r16", "$ r18 = r5 a output", "r7 add input $ r18", "$ z0 = r6 boolean value", "r7 set attr \\ `` has_known_shape\\", "$ r21 = new org tensorflow op core sparse accumulator apply gradient", "$ r22 = r7 build", "specialinvoke $ r21 < init > $ r22", "return $ r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core sparse accumulator take gradient r0", "$ r1 = r2 shape", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r6 = r0 graph", "$ r7 = r0 make op name \\ `` sparse dense cwise div\\ ``", "r5 = $ r6 op builder \\ `` sparse dense cwise div\\", "$ r8 = r1 a output", "r5 add input $ r8", "$ r10 = r2 a output", "r5 add input $ r10", "$ r12 = r3 a output", "r5 add input $ r12", "$ r14 = r4 a output", "r5 add input $ r14", "$ r16 = new org tensorflow op core sparse dense cwise div", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "$ r9 = r0 graph", "$ r10 = r0 make op name \\ `` sparse reduce max\\ ``", "r6 = $ r9 op builder \\ `` sparse reduce max\\", "$ r11 = r1 a output", "r6 add input $ r11", "$ r13 = r2 a output", "r6 add input $ r13", "$ r15 = r3 a output", "r6 add input $ r15", "$ r17 = r4 a output", "r6 add input $ r17", "if r5 == null goto label3", "i0 = lengthof r5", "i1 = 0", "label if i1 > = i0 goto label3", "r8 = r5 [ i1 ]", "$ r21 = org tensorflow op core sparse reduce max $ option access $ 000 r8", "if $ r21 == null goto label2", "$ r22 = org tensorflow op core sparse reduce max $ option access $ 000 r8", "$ z0 = $ r22 boolean value", "r6 set attr \\ `` keep_dims\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r19 = new org tensorflow op core sparse reduce max", "$ r20 = r6 build", "specialinvoke $ r19 < init > $ r20", "return $ r19"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core split v r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core take many sparse from tensor map r0", "$ r1 = r2 sparse shape", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = r0 graph", "$ r8 = r0 make op name \\ `` temporary variable\\ ``", "r4 = $ r7 op builder \\ `` temporary variable\\", "r4 set attr \\ `` shape\\", "$ r10 = org tensorflow data type from class r2", "r4 set attr \\ `` dtype\\", "if r3 == null goto label3", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label3", "r6 = r3 [ i1 ]", "$ r14 = org tensorflow op core temporary variable $ option access $ 000 r6", "if $ r14 == null goto label2", "$ r15 = org tensorflow op core temporary variable $ option access $ 000 r6", "r4 set attr \\ `` var_name\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r12 = new org tensorflow op core temporary variable", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core tensor array concat r0", "$ r1 = r2 lengths", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` tensor array pack\\ ``", "r5 = $ r8 op builder \\ `` tensor array pack\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = org tensorflow data type from class r3", "r5 set attr \\ `` dtype\\", "if r4 == null goto label3", "i0 = lengthof r4", "i1 = 0", "label if i1 > = i0 goto label3", "r7 = r4 [ i1 ]", "$ r18 = org tensorflow op core tensor array pack $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r19 = org tensorflow op core tensor array pack $ option access $ 000 r7", "r5 set attr \\ `` element_shape\\", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label $ r16 = new org tensorflow op core tensor array pack", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r5 = r0 graph", "$ r6 = r0 make op name \\ `` tensor array unpack\\ ``", "r4 = $ r5 op builder \\ `` tensor array unpack\\", "$ r7 = r1 a output", "r4 add input $ r7", "$ r9 = r2 a output", "r4 add input $ r9", "$ r11 = r3 a output", "r4 add input $ r11", "$ r13 = new org tensorflow op core tensor array unpack", "$ r14 = r4 build", "specialinvoke $ r13 < init > $ r14", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r5 = r0 graph", "$ r6 = r0 make op name \\ `` tensor forest tree predict\\ ``", "r4 = $ r5 op builder \\ `` tensor forest tree predict\\", "$ r7 = r1 a output", "r4 add input $ r7", "$ r9 = r2 a output", "r4 add input $ r9", "$ l0 = r3 long value", "r4 set attr \\ `` logits_dimension\\", "$ r12 = new org tensorflow op core tensor forest tree predict", "$ r13 = r4 build", "specialinvoke $ r12 < init > $ r13", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core top k r0", "$ r1 = r2 index", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "$ r8 = r0 graph", "$ r9 = r0 make op name \\ `` try rpc\\ ``", "r5 = $ r8 op builder \\ `` try rpc\\", "$ r10 = r1 a output", "r5 add input $ r10", "$ r12 = r2 a output", "r5 add input $ r12", "$ r14 = r3 a output", "r5 add input $ r14", "if r4 == null goto label5", "i0 = lengthof r4", "i2 = 0", "label if i2 > = i0 goto label5", "r7 = r4 [ i2 ]", "$ r18 = org tensorflow op core try rpc $ option access $ 000 r7", "if $ r18 == null goto label2", "$ r25 = org tensorflow op core try rpc $ option access $ 000 r7", "r5 set attr \\ `` protocol\\", "label $ r19 = org tensorflow op core try rpc $ option access $ 100 r7", "if $ r19 == null goto label3", "$ r23 = org tensorflow op core try rpc $ option access $ 100 r7", "$ z0 = $ r23 boolean value", "r5 set attr \\ `` fail_fast\\", "label $ r20 = org tensorflow op core try rpc $ option access $ 200 r7", "if $ r20 == null goto label4", "$ r21 = org tensorflow op core try rpc $ option access $ 200 r7", "$ l1 = $ r21 long value", "r5 set attr \\ `` timeout_in_ms\\", "label i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label5", "label $ r16 = new org tensorflow op core try rpc", "$ r17 = r5 build", "specialinvoke $ r16 < init > $ r17", "return $ r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r2 = org tensorflow op core unicode encode r0", "$ r1 = r2 output", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = r0 graph", "$ r4 = r0 make op name \\ `` unwrap dataset variant\\ ``", "r2 = $ r3 op builder \\ `` unwrap dataset variant\\", "$ r5 = r1 a output", "r2 add input $ r5", "$ r7 = new org tensorflow op core unwrap dataset variant", "$ r8 = r2 build", "specialinvoke $ r7 < init > $ r8", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r6 = org tensorflow operation r0", "$ r4 = r6 graph", "r1 = $ r4 ref", "label r7 = org tensorflow operation r0", "$ l0 = r7 unsafe native handle", "r2 = org tensorflow operation name $ l0", "label r1 close", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org tensorflow server r0", "$ l0 = r1 native handle", "org tensorflow server stop $ l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org tensorflow tensor r0", "r2 = specialinvoke r4 buffer", "r1 put r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = org apache log log4j level fatal", "r3 = org apache log log4j spi abstract logger r0", "$ r2 = r3 at level $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r6 = lombok core annotation value r0", "$ r4 = r6 value", "$ r5 = $ r4 get r1", "r3 = lombok core annotation value $ annotation value $ r5", "if r3 ! = null goto label1", "return", "if r3 ! = null goto label1", "label r3 set warn r2 i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = lombok core ast r0", "r2 top = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = new java util array list", "specialinvoke r6 < init >", "r7 = lombok core ast r0", "specialinvoke r7 build with field0 r1 r2 r3 r6", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = lombok core lombok node r0", "$ r4 = r8 ast", "$ r4 set change", "r9 = lombok core lombok node r0", "$ r5 = r9 ast", "r3 = $ r5 build tree r1 r2", "if r3 ! = null goto label1", "return null", "if r3 ! = null goto label1", "label r10 = lombok core lombok node r0", "r3 parent = r10", "r11 = lombok core lombok node r0", "$ r6 = r11 child", "$ r7 = $ r6 append r3", "r12 = lombok core lombok node r0", "r12 child = $ r7", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = java lang thread current thread", "$ r2 = $ r1 get context class loader", "$ r3 = lombok core spi load util find service r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r12 = @ parameter1", "if r12 ! = null goto label1", "r12 = java lang class loader get system class loader", "label r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r5 = r15 append \\ `` meta-inf service \\ ``", "$ r6 = r0 get name", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 to string", "r1 = r12 get resource $ r8", "r16 = new java util link hash set", "specialinvoke r16 < init >", "label $ z0 = r1 have more element", "if $ z0 == 0 goto label3", "$ r11 = r1 next element", "r13 = java net url $ r11", "lombok core spi load util read service from url r16 r13", "goto label2", "if $ z0 == 0 goto label3", "label r14 = r16 iterator", "r17 = new lombok core spi load util $ 1", "specialinvoke r17 < init > r14 r0 r12", "r18 = java lang iterable r17", "return r18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], []]}
{"nodes": ["return \\ `` 1 14 8\\ ``"], "adj": [[]]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = lombok delombok pretty comment printer r0", "r3 print \\ `` { \\ ``", "r4 = lombok delombok pretty comment printer r0", "r4 println", "r5 = lombok delombok pretty comment printer r0", "r5 indent", "r6 = lombok delombok pretty comment printer r0", "r6 print stats r1", "r7 = lombok delombok pretty comment printer r0", "$ i0 = specialinvoke r7 end po r2", "r8 = lombok delombok pretty comment printer r0", "specialinvoke r8 consume comment $ i0", "r9 = lombok delombok pretty comment printer r0", "r9 undent", "r10 = lombok delombok pretty comment printer r0", "r10 align", "r11 = lombok delombok pretty comment printer r0", "r11 print \\ `` } \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "$ r1 = r0 get class", "$ r2 = lombok core spi load util find annotation class $ r1 class \\ `` llombok eclipse eclipse annotation handler \\ ``", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = new lombok eclipse handler library", "specialinvoke $ r1 < init >", "lombok eclipse handler library load annotation handler $ r1", "lombok eclipse handler library load visitor handler $ r1", "specialinvoke $ r1 calculate priority", "return $ r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = lombok installer eclipse eclipse location r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i4 = 0", "label $ r2 = org apache lucene analysis ar arabic stemmer prefix", "$ i1 = lengthof $ r2", "if i4 > = $ i1 goto label3", "$ r3 = org apache lucene analysis ar arabic stemmer prefix", "$ r4 = $ r3 [ i4 ]", "r7 = org apache lucene analysis ar arabic stemmer r0", "$ z0 = r7 start with check length r1 i0 $ r4", "if $ z0 == 0 goto label2", "$ r5 = org apache lucene analysis ar arabic stemmer prefix", "$ r6 = $ r5 [ i4 ]", "$ i2 = lengthof $ r6", "$ i3 = org apache lucene analysis util stemmer util delete n r1 0 i0 $ i2", "return $ i3", "if $ z0 == 0 goto label2", "label i4 = i4 + 1", "goto label1", "if i4 > = $ i1 goto label3", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org apache lucene analysis compound hyphenation hyphenation tree r0", "$ r3 = r5 ivalues", "i2 = $ r3 find r2", "if i2 > 0 goto label1", "r6 = org apache lucene analysis compound hyphenation hyphenation tree r0", "i2 = r6 pack value r2", "r7 = org apache lucene analysis compound hyphenation hyphenation tree r0", "$ r4 = r7 ivalues", "$ c1 = char i2", "$ r4 insert r2 $ c1", "label $ c0 = char i2", "r8 = org apache lucene analysis compound hyphenation hyphenation tree r0", "r8 insert r1 $ c0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "$ r3 = new org apache lucene analysis util char array set", "$ i0 = lengthof r1", "specialinvoke $ r3 < init > r0 $ i0 z0", "$ r4 = java util array a list r1", "$ r3 add all $ r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r5 = org apache lucene analysis hunspell hunspell dictionary r0", "$ r2 = r5 suffix", "$ r3 = $ r2 get r1 i0 i1", "$ r4 = java util list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene analysis hunspell hunspell word r0", "$ r1 = r2 flag", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache lucene analysis miscellaneous pattern analyzer r0", "$ r3 = r4 create component r1 r2 null", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = new org apache lucene analysis pattern pattern tokenizer", "r6 = org apache lucene analysis pattern pattern tokenizer factory r0", "$ r4 = r6 pattern", "r7 = org apache lucene analysis pattern pattern tokenizer factory r0", "$ i0 = r7 group", "specialinvoke r5 < init > r1 r2 $ r4 $ i0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r1 to char array", "$ i0 = lengthof r2", "org apache lucene analysis reverse reverse string filter reverse r0 r2 0 $ i0", "$ r3 = new java lang string", "specialinvoke $ r3 < init > r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if null ! = r1 goto label1", "$ r3 = \\ `` \\ ``", "goto label2", "label r4 = org apache lucene analysis shingle shingle filter r0", "r4 token separator = $ r3", "return", "if null ! = r1 goto label1", "label $ r3 = r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r2 = @ parameter3", "i2 = @ parameter4", "if i1 > = 0 goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` src len must be > = 0\\ ``", "throw r4", "if i1 > = 0 goto label1", "label i9 = 0", "i10 = 0", "label if i10 > = i1 goto label3", "$ i6 = i0 + i10", "$ i5 = i0 + i1", "r5 = org apache lucene analysis util character utils r0", "i3 = r5 code point at r1 $ i6 $ i5", "i4 = java lang character char count i3", "$ i7 = i9", "i9 = i9 + 1", "$ i8 = i2 + $ i7", "r2 [ $ i8 ] = i3", "i10 = i10 + i4", "goto label2", "label if i10 > = i1 goto label3", "label return i9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene analysis util stopword analyzer base r0", "$ r1 = r2 stopwords", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r4 = new org apache lucene analysis util classpath resource loader", "$ r1 = class \\ `` lorg apache lucene analysis custom custom analyzer \\ ``", "$ r2 = $ r1 get class loader", "specialinvoke r4 < init > $ r2", "r5 = org apache lucene analysis util resource loader r4", "$ r3 = org apache lucene analysis custom custom analyzer builder r5", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org apache lucene analysis custom custom analyzer r0", "$ r1 = r4 char filter", "$ r2 = java util array a list $ r1", "$ r3 = java util collection unmodifiable list $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "label r1 = org apache lucene analysis sink tee sink token filter r0", "$ z0 = r1 increment token", "if $ z0 == 0 goto label2", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org apache lucene analysis analyzer r0", "$ r4 = r8 reuse strategy", "r9 = org apache lucene analysis analyzer r0", "r7 = $ r4 get reusable component r9 r1", "r10 = org apache lucene analysis analyzer r0", "r3 = r10 init reader r1 r2", "if r7 ! = null goto label1", "r11 = org apache lucene analysis analyzer r0", "r7 = r11 create component r1 r3", "r12 = org apache lucene analysis analyzer r0", "$ r6 = r12 reuse strategy", "r13 = org apache lucene analysis analyzer r0", "$ r6 set reusable component r13 r1 r7", "goto label2", "label $ r5 = r7 get token stream", "return $ r5", "if r7 ! = null goto label1", "label r7 set reader r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r7 = new java lang null pointer exception", "specialinvoke r7 < init > \\ `` input must not be null\\ ``", "throw r7", "if r1 ! = null goto label1", "label r10 = org apache lucene analysis tokenizer r0", "$ r3 = r10 input", "$ r2 = org apache lucene analysis tokenizer illegal_state_reader", "if $ r3 == $ r2 goto label2", "r8 = new java lang illegal state exception", "specialinvoke r8 < init > \\ `` token stream contract violation close call missing\\ ``", "throw r8", "if $ r3 == $ r2 goto label2", "label r11 = org apache lucene analysis tokenizer r0", "r11 input pending = r1", "$ z0 = org apache lucene analysis tokenizer $ assertion disable", "if $ z0 ! = 0 goto label3", "r12 = org apache lucene analysis tokenizer r0", "$ z1 = r12 set reader test point", "if $ z1 ! = 0 goto label3", "r9 = new java lang assertion error", "specialinvoke r9 < init >", "throw r9", "if $ z1 ! = 0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene store data input r1", "i0 = org apache lucene codecs codec util check header r2 \\ `` block_tree_terms_index\\", "if i0 > = 1 goto label1", "$ l1 = r1 read long", "r3 = org apache lucene codecs block tree term reader r0", "r3 index dir offset = $ l1", "label return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "r1 write long l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "$ r3 = new org apache lucene util byte ref", "specialinvoke $ r3 < init > r1", "$ i1 = $ r3 length", "$ i2 = r1 length", "if $ i1 ! = $ i2 goto label1", "$ i3 = $ r3 length", "if $ i3 < 128 goto label2", "label $ r4 = new java lang illegal argument exception", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` codec must be simple ascii less than 128 character in length [ get \\ ``", "$ r7 = $ r6 append r1", "$ r8 = $ r7 append \\ `` ] \\ ``", "$ r9 = $ r8 to string", "specialinvoke $ r4 < init > $ r9", "throw $ r4", "if $ i3 < 128 goto label2", "label r0 write int 1071082519", "r0 write string r1", "r0 write int i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene codecs lucene3x lucene3x skip list reader r0", "$ i0 = r1 last payload length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r14 = org apache lucene codecs lucene40 bit vector r0", "$ i4 = r14 size", "if i0 < $ i4 goto label1", "r12 = new java lang array index out of bound exception", "r11 = new java lang string builder", "specialinvoke r11 < init >", "$ r6 = r11 append \\ `` bit=\\ ``", "$ r7 = $ r6 append i0", "$ r8 = $ r7 append \\ `` size=\\ ``", "r15 = org apache lucene codecs lucene40 bit vector r0", "$ i14 = r15 size", "$ r9 = $ r8 append $ i14", "$ r10 = $ r9 to string", "specialinvoke r12 < init > $ r10", "throw r12", "if i0 < $ i4 goto label1", "label i1 = i0 > > 3", "r16 = org apache lucene codecs lucene40 bit vector r0", "$ r1 = r16 bit", "b2 = $ r1 [ i1 ]", "$ i5 = i0 & 7", "i3 = 1 < < $ i5", "$ i6 = i3 & b2", "if $ i6 == 0 goto label2", "return 1", "if $ i6 == 0 goto label2", "label r17 = org apache lucene codecs lucene40 bit vector r0", "$ r2 = r17 bit", "$ i7 = b2 | i3", "$ b8 = byte $ i7", "$ r2 [ i1 ] = $ b8", "r18 = org apache lucene codecs lucene40 bit vector r0", "$ i9 = r18 count", "if $ i9 == -1 goto label3", "r19 = org apache lucene codecs lucene40 bit vector r0", "$ i10 = r19 count", "$ i11 = $ i10 + 1", "r20 = org apache lucene codecs lucene40 bit vector r0", "r20 count = $ i11", "$ z0 = org apache lucene codecs lucene40 bit vector $ assertion disable", "if $ z0 ! = 0 goto label3", "r21 = org apache lucene codecs lucene40 bit vector r0", "$ i13 = r21 count", "r22 = org apache lucene codecs lucene40 bit vector r0", "$ i12 = r22 size", "if $ i13 < = $ i12 goto label3", "r13 = new java lang assertion error", "specialinvoke r13 < init >", "throw r13", "if $ i13 < = $ i12 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [], [52], []]}
{"nodes": ["r0 = @ this", "r5 = org apache lucene codecs lucene40 bit vector r0", "$ i0 = r5 count", "if $ i0 == -1 goto label1", "r6 = org apache lucene codecs lucene40 bit vector r0", "$ i7 = r6 size", "r7 = org apache lucene codecs lucene40 bit vector r0", "$ i6 = r7 count", "$ i8 = $ i7 - $ i6", "r8 = org apache lucene codecs lucene40 bit vector r0", "r8 count = $ i8", "label r9 = org apache lucene codecs lucene40 bit vector r0", "$ r1 = r9 bit", "$ i1 = lengthof $ r1", "if $ i1 < = 0 goto label4", "i9 = 0", "label r10 = org apache lucene codecs lucene40 bit vector r0", "$ r2 = r10 bit", "$ i2 = lengthof $ r2", "if i9 > = $ i2 goto label3", "r11 = org apache lucene codecs lucene40 bit vector r0", "$ r4 = r11 bit", "r12 = org apache lucene codecs lucene40 bit vector r0", "$ r3 = r12 bit", "$ b3 = $ r3 [ i9 ]", "$ b4 = $ b3 ^ -1", "$ b5 = byte $ b4", "$ r4 [ i9 ] = $ b5", "i9 = i9 + 1", "goto label2", "if i9 > = $ i2 goto label3", "label r13 = org apache lucene codecs lucene40 bit vector r0", "specialinvoke r13 clear unused bit", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [32], [33], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene codecs map multi doc and position enum r0", "$ i0 = r1 num sub", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = @ parameter3", "i6 = 0", "l7 = 0l", "$ r5 = org apache lucene index field info $ index option docs_only", "if r2 ! = $ r5 goto label04", "label i8 = r3 next doc", "if i8 ! = 2147483647 goto label02", "goto label03", "label l7 = -1l", "goto label19", "label r17 = new org apache lucene codecs term stats", "$ i3 = i6", "$ r15 = org apache lucene index field info $ index option docs_only", "if r2 ! = $ r15 goto label20", "$ l19 = -1l", "goto label21", "label specialinvoke r17 < init > $ i3 $ l19", "return r17", "if r2 ! = $ r15 goto label20", "label $ l19 = l7", "if i8 ! = 2147483647 goto label02", "label r4 set i8", "r18 = org apache lucene codecs posting consumer r0", "r18 start doc i8 -1", "r19 = org apache lucene codecs posting consumer r0", "r19 finish doc", "i6 = i6 + 1", "goto label01", "if r2 ! = $ r5 goto label04", "label $ r6 = org apache lucene index field info $ index option docs_and_freqs", "if r2 ! = $ r6 goto label07", "label i9 = r3 next doc", "if i9 ! = 2147483647 goto label06", "label r4 set i9", "i10 = r3 freq", "r20 = org apache lucene codecs posting consumer r0", "r20 start doc i9 i10", "r21 = org apache lucene codecs posting consumer r0", "r21 finish doc", "if r2 ! = $ r6 goto label07", "label $ r7 = org apache lucene index field info $ index option docs_and_freqs_and_positions", "if r2 ! = $ r7 goto label13", "r11 = org apache lucene index doc and position enum r3", "label i11 = r11 next doc", "if i11 ! = 2147483647 goto label09", "goto label12", "label goto label19", "if i11 ! = 2147483647 goto label09", "label r4 set i11", "i12 = r11 freq", "r22 = org apache lucene codecs posting consumer r0", "r22 start doc i11 i12", "$ l4 = long i12", "l7 = l7 + $ l4", "i13 = 0", "label if i13 > = i12 goto label11", "i14 = r11 next position", "r12 = r11 get payload", "r23 = org apache lucene codecs posting consumer r0", "r23 add position i14 r12 -1 -1", "i13 = i13 + 1", "goto label10", "label if i13 > = i12 goto label11", "label r24 = org apache lucene codecs posting consumer r0", "r24 finish doc", "if r2 ! = $ r7 goto label13", "label $ z0 = org apache lucene codecs posting consumer $ assertion disable", "if $ z0 ! = 0 goto label14", "$ r9 = org apache lucene index field info $ index option docs_and_freqs_and_positions_and_offsets", "if r2 == $ r9 goto label14", "r16 = new java lang assertion error", "specialinvoke r16 < init >", "throw r16", "if r2 == $ r9 goto label14", "label r13 = org apache lucene index doc and position enum r3", "label i15 = r13 next doc", "if i15 ! = 2147483647 goto label16", "label r4 set i15", "i16 = r13 freq", "r25 = org apache lucene codecs posting consumer r0", "r25 start doc i15 i16", "$ l0 = long i16", "l7 = l7 + $ l0", "i17 = 0", "label if i17 > = i16 goto label18", "i18 = r13 next position", "r14 = r13 get payload", "$ i1 = r13 start offset", "$ i2 = r13 end offset", "r26 = org apache lucene codecs posting consumer r0", "r26 add position i18 r14 $ i1 $ i2", "i17 = i17 + 1", "goto label17", "label if i17 > = i16 goto label18", "label r27 = org apache lucene codecs posting consumer r0", "r27 finish doc"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [], [15], [16], [17], [18], [19], [], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [], [98], [99], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = org apache lucene document compression tool decompress r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = org apache lucene document compression tool decompress string r0 0 $ i0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene document field type r0", "specialinvoke r1 check if frozen", "r2 = org apache lucene document field type r0", "r2 store term vector = z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene document field type r0", "specialinvoke r2 check if frozen", "r3 = org apache lucene document field type r0", "r3 index option = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene document field type r0", "$ r1 = r2 numeric type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene document field type r0", "$ i0 = r1 numeric precision step", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index concurrent merge scheduler r0", "specialinvoke r1 init merge thread priority", "r2 = org apache lucene index concurrent merge scheduler r0", "$ i0 = r2 merge thread priority", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get directory", "$ r2 = org apache lucene index standard directory reader open $ r1 r0 1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 do open if change r1", "$ z0 = org apache lucene index directory reader $ assertion disable", "if $ z0 ! = 0 goto label1", "if r2 ! = r0 goto label1", "$ r3 = new java lang assertion error", "specialinvoke $ r3 < init >", "throw $ r3", "if r2 ! = r0 goto label1", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org apache lucene index doc term ords r0", "$ z0 = r5 be empty", "if $ z0 == 0 goto label1", "$ r3 = org apache lucene index sort set doc value empty", "return $ r3", "if $ z0 == 0 goto label1", "label r4 = new org apache lucene index doc term ords $ iterator", "r6 = org apache lucene index doc term ords r0", "specialinvoke r4 < init > r6 r1", "r7 = org apache lucene index sort set doc value r4", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field info r0", "$ z0 = r1 omit norm", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index field info r0", "$ r1 = r2 norm type", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field info r0", "$ z0 = r1 have doc value", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field invert state r0", "$ i0 = r1 offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field invert state r0", "$ f0 = r1 boost", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache lucene index index writer r0", "r3 ensure open", "r4 = org apache lucene index index writer r0", "$ r1 = r4 doc writer", "$ i0 = $ r1 get num doc", "r5 = org apache lucene index index writer r0", "$ r2 = r5 segment info", "$ i1 = $ r2 total doc count", "$ i2 = $ i0 + $ i1", "return $ i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r7 = org apache lucene index index writer r0", "r7 ensure open", "r8 = org apache lucene index index writer r0", "$ r3 = r8 doc writer", "i3 = $ r3 get num doc", "r9 = org apache lucene index index writer r0", "$ r4 = r9 segment info", "r1 = $ r4 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r5 = r1 next", "r2 = org apache lucene index segment commit info $ r5", "$ r6 = r2 info", "$ i0 = $ r6 get doc count", "r10 = org apache lucene index index writer r0", "$ i1 = r10 num delete docs r2", "$ i2 = $ i0 - $ i1", "i3 = i3 + $ i2", "goto label1", "if $ z0 == 0 goto label2", "label return i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index index writer r0", "r1 ensure open", "r2 = org apache lucene index index writer r0", "specialinvoke r2 commit internal", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index index writer r0", "r2 ensure open", "r3 = org apache lucene index index writer r0", "$ r1 = r3 doc writer", "$ i0 = $ r1 get num doc", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = new org apache lucene index thread affinity document writer thread pool", "specialinvoke r2 < init > i0", "r3 = org apache lucene index index writer config r0", "r4 = org apache lucene index document writer per thread pool r2", "r3 indexer thread pool = r4", "r5 = org apache lucene index index writer config r0", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene index index writer config r0", "r1 reader pool = z0", "r2 = org apache lucene index index writer config r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index log byte size merge policy r0", "$ l0 = r1 max merge size for force merge", "$ d0 = double $ l0", "$ d1 = $ d0 1024 0", "$ d2 = $ d1 1024 0", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 leave", "i0 = r2 size", "if i0 ! = 0 goto label1", "return null", "if i0 ! = 0 goto label1", "label if i0 ! = 1 goto label2", "$ r12 = r2 get 0", "$ r13 = org apache lucene index atomic reader context $ r12", "$ r14 = $ r13 reader", "$ r15 = $ r14 get norm value r1", "return $ r15", "label if i0 ! = 1 goto label2", "label $ r7 = org apache lucene index multi field get merge field info r0", "r3 = $ r7 field info r1", "if r3 == null goto label3", "$ z0 = r3 have norm", "if $ z0 ! = 0 goto label4", "label return null", "if $ z0 ! = 0 goto label4", "label z2 = 0", "r4 = newarray org apache lucene index numeric doc value [ i0 ]", "$ i1 = i0 + 1", "r5 = newarray int [ $ i1 ]", "i4 = 0", "label if i4 > = i0 goto label8", "$ r10 = r2 get i4", "r6 = org apache lucene index atomic reader context $ r10", "$ r11 = r6 reader", "r16 = $ r11 get norm value r1", "if r16 ! = null goto label6", "r16 = org apache lucene index numeric doc value empty", "goto label7", "label r4 [ i4 ] = r16", "$ i3 = r6 doc base", "r5 [ i4 ] = $ i3", "i4 = i4 + 1", "goto label5", "if r16 ! = null goto label6", "label z2 = 1", "label if i4 > = i0 goto label8", "label $ i2 = r0 max doc", "r5 [ i0 ] = $ i2", "$ z1 = org apache lucene index multi doc value $ assertion disable", "if $ z1 ! = 0 goto label9", "if z2 ! = 0 goto label9", "r17 = new java lang assertion error", "specialinvoke r17 < init >", "throw r17", "if z2 ! = 0 goto label9", "label r18 = new org apache lucene index multi doc value $ 1", "specialinvoke r18 < init > r5 r4", "r19 = org apache lucene index numeric doc value r18", "return r19"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 leave", "i0 = r2 size", "if i0 ! = 0 goto label1", "return null", "if i0 ! = 0 goto label1", "label if i0 ! = 1 goto label2", "$ r12 = r2 get 0", "$ r13 = org apache lucene index atomic reader context $ r12", "$ r14 = $ r13 reader", "$ r15 = $ r14 get sort set doc value r1", "return $ r15", "label if i0 ! = 1 goto label2", "label z0 = 0", "r3 = newarray org apache lucene index sort set doc value [ i0 ]", "$ i1 = i0 + 1", "r4 = newarray int [ $ i1 ]", "i6 = 0", "label if i6 > = i0 goto label6", "$ r10 = r2 get i6", "r16 = org apache lucene index atomic reader context $ r10", "$ r11 = r16 reader", "r17 = $ r11 get sort set doc value r1", "if r17 ! = null goto label4", "r17 = org apache lucene index sort set doc value empty", "goto label5", "label r3 [ i6 ] = r17", "$ i5 = r16 doc base", "r4 [ i6 ] = $ i5", "i6 = i6 + 1", "goto label3", "if r17 ! = null goto label4", "label z0 = 1", "label if i6 > = i0 goto label6", "label $ i2 = r0 max doc", "r4 [ i0 ] = $ i2", "if z0 ! = 0 goto label7", "label $ i3 = lengthof r3", "r18 = newarray org apache lucene index term enum [ $ i3 ]", "i7 = 0", "label $ i4 = lengthof r3", "if i7 > = $ i4 goto label9", "$ r8 = r3 [ i7 ]", "$ r9 = $ r8 term enum", "r18 [ i7 ] = $ r9", "i7 = i7 + 1", "goto label8", "if i7 > = $ i4 goto label9", "label r20 = new org apache lucene index multi doc value $ ordinal map", "$ r6 = r0 get core cache key", "specialinvoke r20 < init > $ r6 r18", "r21 = new org apache lucene index multi doc value $ multi sort set doc value", "specialinvoke r21 < init > r3 r4 r20", "r22 = org apache lucene index sort set doc value r21", "return r22"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], [52], [53], [54], [55], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index segment commit info r0", "$ l0 = r1 field info gen", "$ b1 = $ l0 cmp -1l", "if $ b1 == 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b1 == 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index segment commit info r0", "$ i0 = r1 del count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache lucene index segment info r0", "specialinvoke r3 check file name r1", "r4 = org apache lucene index segment info r0", "$ r2 = r4 set file", "$ r2 add all r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org apache lucene index term r1", "r3 = org apache lucene index term r0", "$ i0 = r3 compare to $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r30 = org apache lucene index multi term enum r0", "$ r3 = r30 queue", "$ r3 clear", "r31 = org apache lucene index multi term enum r0", "r31 num top = 0", "z2 = 0", "r32 = org apache lucene index multi term enum r0", "$ r4 = r32 last seek", "if $ r4 == null goto label01", "r33 = org apache lucene index multi term enum r0", "$ r28 = r33 term comp", "r34 = org apache lucene index multi term enum r0", "$ r27 = r34 last seek", "$ i4 = $ r28 compare $ r27 r1", "if $ i4 > 0 goto label01", "z2 = 1", "label r35 = org apache lucene index multi term enum r0", "r35 last seek = null", "r36 = org apache lucene index multi term enum r0", "r36 last seek exact = 1", "i5 = 0", "label r37 = org apache lucene index multi term enum r0", "$ i6 = r37 num sub", "if i5 > = $ i6 goto label11", "if z2 == 0 goto label08", "r38 = org apache lucene index multi term enum r0", "$ r21 = r38 current sub", "$ r22 = $ r21 [ i5 ]", "r2 = $ r22 current", "if r2 == null goto label06", "r39 = org apache lucene index multi term enum r0", "$ r23 = r39 term comp", "i0 = $ r23 compare r1 r2", "if i0 ! = 0 goto label03", "z3 = 1", "goto label05", "label goto label07", "label goto label09", "label if z3 == 0 goto label10", "r42 = org apache lucene index multi term enum r0", "$ r8 = r42 top", "r43 = org apache lucene index multi term enum r0", "$ i2 = r43 num top", "$ i3 = $ i2 + 1", "r44 = org apache lucene index multi term enum r0", "r44 num top = $ i3", "r45 = org apache lucene index multi term enum r0", "$ r9 = r45 current sub", "$ r10 = $ r9 [ i5 ]", "$ r8 [ $ i2 ] = $ r10", "r46 = org apache lucene index multi term enum r0", "$ r11 = r46 current sub", "$ r15 = $ r11 [ i5 ]", "r47 = org apache lucene index multi term enum r0", "$ r12 = r47 current sub", "$ r13 = $ r12 [ i5 ]", "$ r14 = $ r13 term", "$ r16 = $ r14 term", "$ r15 current = $ r16", "r48 = org apache lucene index multi term enum r0", "r48 current = $ r16", "$ z0 = org apache lucene index multi term enum $ assertion disable", "if $ z0 ! = 0 goto label10", "r49 = org apache lucene index multi term enum r0", "$ r17 = r49 current sub", "$ r18 = $ r17 [ i5 ]", "$ r19 = $ r18 current", "$ z1 = r1 equal $ r19", "if $ z1 ! = 0 goto label10", "r29 = new java lang assertion error", "specialinvoke r29 < init >", "throw r29", "if $ z1 ! = 0 goto label10", "label i5 = i5 + 1", "goto label02", "if i0 ! = 0 goto label03", "label if i0 > = 0 goto label04", "z3 = 0", "label if i0 > = 0 goto label04", "label r40 = org apache lucene index multi term enum r0", "$ r24 = r40 current sub", "$ r25 = $ r24 [ i5 ]", "$ r26 = $ r25 term", "z3 = $ r26 seek exact r1", "if r2 == null goto label06", "label z3 = 0", "if z2 == 0 goto label08", "label r41 = org apache lucene index multi term enum r0", "$ r5 = r41 current sub", "$ r6 = $ r5 [ i5 ]", "$ r7 = $ r6 term", "z3 = $ r7 seek exact r1", "if i5 > = $ i6 goto label11", "label r50 = org apache lucene index multi term enum r0", "$ i1 = r50 num top", "if $ i1 < = 0 goto label12", "$ z4 = 1", "goto label13", "label return $ z4", "if $ i1 < = 0 goto label12", "label $ z4 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [], [75], [76], [], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [], [101], [102], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index tiered merge policy r0", "$ i0 = r1 max merge at once explicit", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r3 = org apache lucene util constant lucene_main_version", "$ r2 = r1 info", "$ r4 = $ r2 get version", "$ z0 = $ r3 equal $ r4", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache lucene search boolean query r0", "r1 min nr should match = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search boolean query r0", "$ i0 = r1 min nr should match", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search doc term ords range filter r0", "$ r1 = r2 field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search fuzzy query r0", "$ i0 = r1 prefix length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = org apache lucene search index searcher default similarity", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org apache lucene search index searcher r0", "$ r1 = r3 reader", "$ r2 = $ r1 document i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r4 = org apache lucene search index searcher r0", "$ r2 = r4 create normalized weight r1", "r5 = org apache lucene search index searcher r0", "$ r3 = r5 explain $ r2 i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search query wrapper filter r0", "$ r1 = r2 query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r4 = new java lang null pointer exception", "specialinvoke r4 < init > \\ `` listener can not be null\\ ``", "throw r4", "if r1 ! = null goto label1", "label r5 = org apache lucene search reference manager r0", "$ r2 = r5 refresh listener", "$ r2 add r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "r13 = new org apache lucene search explanation", "specialinvoke r13 < init >", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r5 = r0 get class", "$ r6 = $ r5 get simple name", "$ r7 = r14 append $ r6", "$ r8 = $ r7 append \\", "$ r9 = $ r8 to string", "r13 set description $ r9", "r18 = org apache lucene search similarity basic model r0", "$ f1 = r18 score r1 f0", "r13 set value $ f1", "r15 = new org apache lucene search explanation", "specialinvoke r15 < init > f0 \\ `` tfn\\ ``", "r13 add detail r15", "r16 = new org apache lucene search explanation", "$ l0 = r1 get number of document", "$ f2 = float $ l0", "specialinvoke r16 < init > $ f2 \\ `` number of documents\\ ``", "r13 add detail r16", "r17 = new org apache lucene search explanation", "$ l1 = r1 get total term freq", "$ f3 = float $ l1", "specialinvoke r17 < init > $ f3 \\ `` total term freq\\ ``", "r13 add detail r17", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org apache lucene search similarity basic stats r0", "r1 doc freq = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search similarity basic stats r0", "$ f0 = r1 query boost", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "f1 = @ parameter2", "r5 = new org apache lucene search explanation", "r6 = org apache lucene search similarity distribution r0", "$ f2 = r6 score r1 f0 f1", "$ r3 = r0 get class", "$ r4 = $ r3 get simple name", "specialinvoke r5 < init > $ f2 $ r4", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "f1 = @ parameter2", "r13 = new org apache lucene search explanation", "specialinvoke r13 < init >", "r14 = new java lang string builder", "specialinvoke r14 < init >", "$ r5 = r0 get class", "$ r6 = $ r5 get simple name", "$ r7 = r14 append $ r6", "$ r8 = $ r7 append \\", "$ r9 = $ r8 to string", "r13 set description $ r9", "r18 = org apache lucene search similarity normalization r0", "$ f2 = r18 tfn r1 f0 f1", "r13 set value $ f2", "r15 = new org apache lucene search explanation", "specialinvoke r15 < init > f0 \\ `` tf\\ ``", "r13 add detail r15", "r16 = new org apache lucene search explanation", "$ f3 = r1 get avg field length", "specialinvoke r16 < init > $ f3 \\ `` avg field length\\ ``", "r13 add detail r16", "r17 = new org apache lucene search explanation", "specialinvoke r17 < init > f1 \\ `` len\\ ``", "r13 add detail r17", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "f0 = @ parameter1", "$ r2 = new org apache lucene search similarity basic stats", "specialinvoke $ r2 < init > r1 f0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "f1 = @ parameter1", "$ d0 = double f1", "$ d1 = java lang math sqrt $ d0", "$ f2 = float $ d1", "$ f3 = f0 $ f2", "$ b0 = org apache lucene util small float float to byte315 $ f3", "return $ b0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search span span not query r0", "$ r1 = r2 include", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene store file switch directory r0", "$ r1 = r2 secondary dir", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r32 = org apache lucene store lock r0", "r32 failure reason = null", "r33 = org apache lucene store lock r0", "z0 = r33 obtain", "$ b2 = l0 cmp 0l", "if $ b2 > = 0 goto label1", "$ b8 = l0 cmp -1l", "if $ b8 == 0 goto label1", "r27 = new java lang illegal argument exception", "r26 = new java lang string builder", "specialinvoke r26 < init >", "$ r18 = r26 append \\ `` lock wait timeout should be lock_obtain_wait_forever or a non-negative number get \\ ``", "$ r19 = $ r18 append l0", "$ r20 = $ r19 append \\ `` \\ ``", "$ r21 = $ r20 to string", "specialinvoke r27 < init > $ r21", "throw r27", "if $ b8 == 0 goto label1", "label $ l3 = org apache lucene store lock lock_poll_interval", "l1 = l0 $ l3", "l9 = 0l", "label if z0 ! = 0 goto label9", "$ b4 = l0 cmp -1l", "if $ b4 == 0 goto label5", "$ l6 = l9", "l9 = l9 + 1l", "$ b7 = $ l6 cmp l1", "if $ b7 < 0 goto label5", "r28 = new java lang string builder", "specialinvoke r28 < init >", "$ r3 = r28 append \\ `` lock obtain time out \\ ``", "$ r4 = r0 to string", "$ r5 = $ r3 append $ r4", "r24 = $ r5 to string", "r34 = org apache lucene store lock r0", "$ r6 = r34 failure reason", "if $ r6 == null goto label3", "r29 = new java lang string builder", "specialinvoke r29 < init >", "$ r12 = r29 append r24", "$ r13 = $ r12 append \\ `` \\ ``", "r35 = org apache lucene store lock r0", "$ r14 = r35 failure reason", "$ r15 = $ r13 append $ r14", "r24 = $ r15 to string", "label r30 = new org apache lucene store lock obtain failed exception", "specialinvoke r30 < init > r24", "r36 = org apache lucene store lock r0", "$ r8 = r36 failure reason", "if $ r8 == null goto label4", "r37 = org apache lucene store lock r0", "$ r9 = r37 failure reason", "r30 init cause $ r9", "label r38 = java lang throwable r30", "throw r38", "if $ b7 < 0 goto label5", "label $ l5 = org apache lucene store lock lock_poll_interval", "java lang thread sleep $ l5", "label goto label8", "label r40 = org apache lucene store lock r0", "z0 = r40 obtain", "goto label2", "label if z0 ! = 0 goto label9", "label return z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], [62], [63], [], [65], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene store lock factory r0", "$ r1 = r2 lock prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r21 = org apache lucene store m map directory r0", "r21 ensure open", "r17 = new java io file", "r22 = org apache lucene store m map directory r0", "$ r8 = r22 get directory", "specialinvoke r17 < init > $ r8 r1", "r18 = new java io random access file", "specialinvoke r18 < init > r17 \\ `` r\\ ``", "label r20 = new org apache lucene store m map directory $ m map index input", "r19 = new java lang string builder", "specialinvoke r19 < init >", "$ r12 = r19 append \\ `` m map index input path=\\\\\\ `` \\ ``", "$ r13 = $ r12 append r17", "$ r14 = $ r13 append \\ `` \\\\\\ `` \\ ``", "$ r15 = $ r14 to string", "r23 = org apache lucene store m map directory r0", "specialinvoke r20 < init > r23 $ r15 r18", "label r18 close", "r24 = org apache lucene store index input r20", "return r24"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = newarray byte [ i0 ]", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r16 = @ parameter0", "if r16 ! = null goto label1", "return", "if r16 ! = null goto label1", "label r19 = org apache lucene util attribute source r0", "$ r3 = r19 attribute impls", "$ r2 = r16 attribute", "$ r4 = $ r2 get class", "$ r5 = $ r3 get $ r4", "r1 = org apache lucene util attribute impl $ r5", "if r1 ! = null goto label2", "r18 = new java lang illegal argument exception", "r17 = new java lang string builder", "specialinvoke r17 < init >", "$ r9 = r17 append \\ `` state contains attribute impl of type \\ ``", "$ r10 = r16 attribute", "$ r11 = $ r10 get class", "$ r12 = $ r11 get name", "$ r13 = $ r9 append $ r12", "$ r14 = $ r13 append \\ `` that be not in in this attribute source\\ ``", "$ r15 = $ r14 to string", "specialinvoke r18 < init > $ r15", "throw r18", "if r1 ! = null goto label2", "label $ r6 = r16 attribute", "$ r6 copy to r1", "r16 = r16 next"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r2 = r0 get class", "$ r3 = $ r2 get simple name", "$ r4 = r12 append $ r3", "$ r5 = $ r4 append 64", "$ i0 = java lang system identity hash code r0", "$ r6 = java lang integer to hex string $ i0", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` \\ ``", "r13 = org apache lucene util attribute source r0", "$ r9 = r13 reflect a string 0", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 to string", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r4 = org apache lucene util automaton automaton r0", "r1 = r4 get number state", "r5 = org apache lucene util automaton automaton r0", "$ z0 = r5 be singleton", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r3 = r1 [ i1 ]", "r3 reduce", "i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r10 = org apache lucene util automaton automaton r0", "r1 = r10 get number state", "$ i1 = lengthof r1", "r2 = newarray org apache lucene util automaton transition [ ] [ $ i1 ]", "i0 = lengthof r1", "i3 = 0", "label if i3 > = i0 goto label3", "r4 = r1 [ i3 ]", "$ r5 = org apache lucene util automaton transition compare by min max then d", "r4 sort transition $ r5", "r4 trim transition array", "$ i2 = r4 number", "$ r6 = r4 transition array", "r2 [ $ i2 ] = $ r6", "$ z0 = org apache lucene util automaton automaton $ assertion disable", "if $ z0 ! = 0 goto label2", "$ r7 = r4 transition array", "if $ r7 ! = null goto label2", "r9 = new java lang assertion error", "specialinvoke r9 < init >", "throw r9", "if $ r7 ! = null goto label2", "label i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label3", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [], [26], []]}
{"nodes": ["r0 = @ this", "r24 = new java lang string builder", "specialinvoke r24 < init > \\ `` digraph automaton { \\n\\ ``", "r24 append \\ `` rankdir = lr \\n\\ ``", "r25 = org apache lucene util automaton automaton r0", "r2 = r25 get number state", "i0 = lengthof r2", "i4 = 0", "label if i4 > = i0 goto label7", "r4 = r2 [ i4 ]", "$ r11 = r24 append \\ `` \\ ``", "$ i1 = r4 number", "$ r11 append $ i1", "$ z0 = r4 accept", "if $ z0 == 0 goto label2", "r24 append \\ `` [ shape=doublecircle label=\\\\\\ `` \\\\\\ `` ] \\n\\ ``", "goto label3", "label r26 = org apache lucene util automaton automaton r0", "$ r14 = r26 initial", "if r4 ! = $ r14 goto label4", "r24 append \\ `` initial [ shape=plaintext label=\\\\\\ `` \\\\\\ `` ] \\n\\ ``", "$ r20 = r24 append \\ `` initial - > \\ ``", "$ i3 = r4 number", "$ r21 = $ r20 append $ i3", "$ r21 append \\ `` \\n\\ ``", "label $ r15 = r4 get transition", "r5 = $ r15 iterator", "label $ z1 = r5 have next", "if $ z1 == 0 goto label6", "$ r16 = r5 next", "r6 = org apache lucene util automaton transition $ r16", "$ r17 = r24 append \\ `` \\ ``", "$ i2 = r4 number", "$ r17 append $ i2", "r6 append dot r24", "goto label5", "if $ z1 == 0 goto label6", "label i4 = i4 + 1", "goto label1", "if $ z0 == 0 goto label2", "label r24 append \\ `` [ shape=circle label=\\\\\\ `` \\\\\\ `` ] \\n\\ ``", "label if i4 > = i0 goto label7", "label $ r9 = r24 append \\ `` } \\n\\ ``", "$ r10 = $ r9 to string", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r3 = org apache lucene util automaton character run automaton r0", "i5 = r3 initial", "i2 = i0 + i1", "i6 = i0", "label if i6 > = i2 goto label3", "$ i3 = java lang character code point at r1 i6 i2", "r4 = org apache lucene util automaton character run automaton r0", "i5 = r4 step i5 $ i3", "if i5 ! = -1 goto label2", "return 0", "if i5 ! = -1 goto label2", "label $ i4 = java lang character char count $ i3", "i6 = i6 + $ i4", "goto label1", "label if i6 > = i2 goto label3", "label r5 = org apache lucene util automaton character run automaton r0", "$ r2 = r5 accept", "$ z0 = $ r2 [ i5 ]", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util automaton state r0", "$ z0 = r1 accept", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "i1 = @ parameter2", "i2 = @ parameter3", "if i2 ! = 0 goto label1", "return", "if i2 ! = 0 goto label1", "label i7 = i1", "i8 = i2", "$ l4 = l0 > > 15", "i9 = int $ l4", "r5 = org apache lucene util byte block pool r0", "$ r2 = r5 buffer", "r4 = $ r2 [ i9 ]", "$ l5 = l0 & 32767l", "i10 = int $ l5", "$ i6 = i10 + i2", "i11 = $ i6 - 32768", "label if i11 > 0 goto label3", "java lang system arraycopy r4 i10 r1 i7 i8", "goto label4", "label return", "label if i11 > 0 goto label3", "label i3 = i2 - i11", "java lang system arraycopy r4 i10 r1 i7 i3", "i10 = 0", "i8 = i8 - i3", "i7 = i7 + i3", "r6 = org apache lucene util byte block pool r0", "$ r3 = r6 buffer", "i9 = i9 + 1", "r4 = $ r3 [ i9 ]", "i11 = i11 - 32768", "goto label2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ this", "i5 = 0", "r2 = org apache lucene util byte ref r0", "$ i2 = r2 offset", "r3 = org apache lucene util byte ref r0", "$ i1 = r3 length", "i0 = $ i2 + $ i1", "r4 = org apache lucene util byte ref r0", "i6 = r4 offset", "label if i6 > = i0 goto label2", "$ i4 = 31 * i5", "r5 = org apache lucene util byte ref r0", "$ r1 = r5 bytes", "$ b3 = $ r1 [ i6 ]", "i5 = $ i4 + $ b3", "i6 = i6 + 1", "goto label1", "label if i6 > = i0 goto label2", "label return i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r5 = org apache lucene util char ref r0", "$ r2 = r5 char", "$ i3 = lengthof $ r2", "r6 = org apache lucene util char ref r0", "$ i2 = r6 offset", "$ i4 = $ i3 - $ i2", "if $ i4 > = i1 goto label1", "$ r4 = newarray char [ i1 ]", "r7 = org apache lucene util char ref r0", "r7 char = $ r4", "r8 = org apache lucene util char ref r0", "r8 offset = 0", "label r9 = org apache lucene util char ref r0", "$ r3 = r9 char", "r10 = org apache lucene util char ref r0", "$ i5 = r10 offset", "java lang system arraycopy r1 i0 $ r3 $ i5 i1", "r11 = org apache lucene util char ref r0", "r11 length = i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache lucene util command line util adjust directory class name r0", "$ r2 = java lang class for name $ r1", "$ r3 = $ r2 a subclass class \\ `` lorg apache lucene store directory \\ ``", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new org apache lucene util field cache sanity checker", "specialinvoke $ r2 < init >", "$ r2 set ram usage estimator 1", "$ r3 = $ r2 check r0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org apache lucene util open bit set iterator", "if $ z0 == 0 goto label1", "$ i0 = r1 doc i d", "if $ i0 ! = -1 goto label1", "r3 = org apache lucene util open bit set iterator r1", "$ r2 = r3 arr", "$ i1 = r3 word", "r4 = org apache lucene util fixed bit set r0", "specialinvoke r4 and not $ r2 $ i1", "r5 = org apache lucene util fixed bit set r0", "$ i2 = r5 num bit", "r3 advance $ i2", "goto label2", "label return", "if $ i0 ! = -1 goto label1", "label $ i4 = r1 next doc", "r6 = org apache lucene util fixed bit set r0", "$ i6 = r6 num bit", "if $ i4 > = $ i6 goto label2", "r7 = org apache lucene util fixed bit set r0", "r7 clear $ i4", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "i1 = @ parameter2", "i16 = @ parameter3", "$ z0 = org apache lucene util fst byte store $ assertion disable", "if $ z0 ! = 0 goto label1", "$ l11 = long i16", "$ l12 = l0 + $ l11", "r18 = org apache lucene util fst byte store r0", "$ l13 = r18 get position", "$ b14 = $ l12 cmp $ l13", "if $ b14 < = 0 goto label1", "r17 = new java lang assertion error", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r8 = r16 append \\ `` dest=\\ ``", "$ r9 = $ r8 append l0", "$ r10 = $ r9 append \\ `` pos=\\ ``", "r19 = org apache lucene util fst byte store r0", "$ l15 = r19 get position", "$ r11 = $ r10 append $ l15", "$ r12 = $ r11 append \\ `` len=\\ ``", "$ r13 = $ r12 append i16", "$ r14 = $ r13 to string", "specialinvoke r17 < init > $ r14", "throw r17", "if $ b14 < = 0 goto label1", "label $ l3 = long i16", "l2 = l0 + $ l3", "r20 = org apache lucene util fst byte store r0", "$ i4 = r20 block bit", "$ l5 = l2 > > $ i4", "i17 = int $ l5", "r21 = org apache lucene util fst byte store r0", "$ i6 = r21 block mask", "$ l7 = long $ i6", "$ l8 = l2 & $ l7", "i18 = int $ l8", "if i18 ! = 0 goto label2", "i17 = i17 + -1", "r22 = org apache lucene util fst byte store r0", "i18 = r22 block size", "label r23 = org apache lucene util fst byte store r0", "$ r2 = r23 block", "$ r3 = $ r2 get i17", "r15 = byte [ ] $ r3", "label if i16 < = 0 goto label5", "if i16 > i18 goto label4", "$ i10 = i18 - i16", "java lang system arraycopy r1 i1 r15 $ i10 i16", "goto label5", "label return", "if i16 > i18 goto label4", "label i16 = i16 - i18", "$ i9 = i1 + i16", "java lang system arraycopy r1 $ i9 r15 0 i18"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [], [53], [54], [55], [56], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r9 = null", "r10 = null", "label $ r4 = new java io file input stream", "specialinvoke $ r4 < init > r0", "r9 = $ r4", "$ r5 = new java io file output stream", "specialinvoke $ r5 < init > r1", "r10 = $ r5", "r2 = newarray byte [ 8192 ]", "label $ i1 = $ r4 read r2", "if $ i1 < = 0 goto label3", "$ r5 write r2 0 $ i1", "goto label2", "if $ i1 < = 0 goto label3", "label $ r6 = newarray java io closeable [ 2 ]", "$ r6 [ 0 ] = $ r4", "$ r6 [ 1 ] = $ r5", "org apache lucene util i o utils close $ r6", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [], []]}
{"nodes": ["l0 = @ parameter0", "i1 = @ parameter1", "r0 = @ parameter2", "org apache lucene util numeric utils long to prefix coded byte l0 i1 r0", "$ i2 = r0 hash code", "return $ i2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 bit", "$ r3 = r1 bit", "$ i1 = r0 wlen", "$ i0 = r1 wlen", "$ i2 = java lang math min $ i1 $ i0", "l10 = org apache lucene util bit util pop_andnot $ r2 $ r3 0 $ i2", "$ i4 = r0 wlen", "$ i3 = r1 wlen", "if $ i4 < = $ i3 goto label1", "$ r4 = r0 bit", "$ i8 = r1 wlen", "$ i6 = r0 wlen", "$ i5 = r1 wlen", "$ i7 = $ i6 - $ i5", "$ l9 = org apache lucene util bit util pop_array $ r4 $ i8 $ i7", "l10 = l10 + $ l9", "label return l10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache lucene util pack abstract append long buffer $ iterator", "r3 = org apache lucene util pack abstract append long buffer r0", "specialinvoke r2 < init > r3", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util pack elias fano decoder r0", "$ l0 = specialinvoke r1 current high value", "r2 = org apache lucene util pack elias fano decoder r0", "$ l1 = specialinvoke r2 current low value", "r3 = org apache lucene util pack elias fano decoder r0", "$ l2 = specialinvoke r3 combine high low value $ l0 $ l1", "return $ l2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l14 = @ parameter1", "label $ b0 = l14 cmp 0l", "if $ b0 < = 0 goto label6", "r10 = org apache lucene util page byte r0", "$ i2 = r10 block size", "r11 = org apache lucene util page byte r0", "$ i1 = r11 upto", "i15 = $ i2 - $ i1", "if i15 ! = 0 goto label3", "r12 = org apache lucene util page byte r0", "$ r4 = r12 current block", "if $ r4 == null goto label2", "r13 = org apache lucene util page byte r0", "$ r7 = r13 block", "r14 = org apache lucene util page byte r0", "$ r6 = r14 current block", "$ r7 add $ r6", "r15 = org apache lucene util page byte r0", "$ r8 = r15 block end", "r16 = org apache lucene util page byte r0", "$ i13 = r16 upto", "$ r9 = java lang integer value of $ i13", "$ r8 add $ r9", "label r17 = org apache lucene util page byte r0", "$ i12 = r17 block size", "$ r5 = newarray byte [ $ i12 ]", "r18 = org apache lucene util page byte r0", "r18 current block = $ r5", "r19 = org apache lucene util page byte r0", "r19 upto = 0", "r20 = org apache lucene util page byte r0", "i15 = r20 block size", "label $ l16 = long i15", "$ b17 = $ l16 cmp l14", "if $ b17 > = 0 goto label4", "r21 = org apache lucene util page byte r0", "$ r3 = r21 current block", "r22 = org apache lucene util page byte r0", "$ i9 = r22 upto", "r1 read bytes $ r3 $ i9 i15 0", "r23 = org apache lucene util page byte r0", "$ i10 = r23 block size", "r24 = org apache lucene util page byte r0", "r24 upto = $ i10", "$ l11 = long i15", "l14 = l14 - $ l11", "goto label5", "label goto label1", "if $ b17 > = 0 goto label4", "label r25 = org apache lucene util page byte r0", "$ r2 = r25 current block", "r26 = org apache lucene util page byte r0", "$ i4 = r26 upto", "$ i3 = int l14", "r1 read bytes $ r2 $ i4 $ i3 0", "r27 = org apache lucene util page byte r0", "$ i5 = r27 upto", "$ l6 = long $ i5", "$ l7 = $ l6 + l14", "$ i8 = int $ l7", "r28 = org apache lucene util page byte r0", "r28 upto = $ i8", "goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = org apache lucene search boolean clause $ occur should", "r5 = org apache lucene util query builder r0", "$ r4 = r5 create boolean query r1 r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util query builder r0", "$ z0 = r1 enable position increment", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = org apache lucene util ram usage estimator num_bytes_array_header", "$ l3 = long $ i0", "$ i1 = lengthof r0", "$ l2 = long $ i1", "$ l4 = $ l3 + $ l2", "$ l5 = org apache lucene util ram usage estimator align object size $ l4", "return $ l5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = org apache lucene util weak identity map r0", "$ r1 = r3 back store", "$ z0 = $ r1 be empty", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r4 = org apache lucene util weak identity map r0", "$ z1 = r4 reap on read", "if $ z1 == 0 goto label2", "r5 = org apache lucene util weak identity map r0", "r5 reap", "label r6 = org apache lucene util weak identity map r0", "$ r2 = r6 back store", "$ i0 = $ r2 size", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene analysis cache token filter r0", "$ r1 = r2 cache", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 clear", "r1 = org apache lucene analysis tokenattributes pack token attribute impl r0", "r1 position length = 1", "r2 = org apache lucene analysis tokenattributes pack token attribute impl r0", "r2 position increment = 1", "r3 = org apache lucene analysis tokenattributes pack token attribute impl r0", "r3 term frequency = 1", "r4 = org apache lucene analysis tokenattributes pack token attribute impl r0", "r4 end offset = 0", "r5 = org apache lucene analysis tokenattributes pack token attribute impl r0", "r5 start offset = 0", "r6 = org apache lucene analysis tokenattributes pack token attribute impl r0", "r6 type = \\ `` word\\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene analysis token stream to automaton r0", "r1 final offset gap a hole = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = @ parameter2", "r2 = @ parameter3", "r3 = @ parameter4", "$ i1 = lengthof r2", "if $ i1 == 16 goto label1", "$ r13 = new java lang illegal argument exception", "$ r14 = new java lang string builder", "specialinvoke $ r14 < init >", "$ r15 = $ r14 append \\ `` invalid id \\ ``", "$ r16 = org apache lucene util string helper id to string r2", "$ r17 = $ r15 append $ r16", "$ r18 = $ r17 to string", "specialinvoke $ r13 < init > $ r18", "throw $ r13", "if $ i1 == 16 goto label1", "label org apache lucene codecs codec util write header r0 r1 i0", "$ i2 = lengthof r2", "r0 write byte r2 0 $ i2", "$ r5 = new org apache lucene util byte ref", "specialinvoke $ r5 < init > r3", "$ i3 = $ r5 length", "$ i4 = r3 length", "if $ i3 ! = $ i4 goto label2", "$ i5 = $ r5 length", "if $ i5 < 256 goto label3", "label $ r6 = new java lang illegal argument exception", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = $ r7 append \\ `` suffix must be simple ascii less than 256 character in length [ get \\ ``", "$ r9 = $ r8 append r3", "$ r10 = $ r9 append \\ `` ] \\ ``", "$ r11 = $ r10 to string", "specialinvoke $ r6 < init > $ r11", "throw $ r6", "if $ i5 < 256 goto label3", "label $ i6 = $ r5 length", "$ b7 = byte $ i6", "r0 write byte $ b7", "$ r12 = $ r5 bytes", "$ i9 = $ r5 offset", "$ i8 = $ r5 length", "r0 write bytes $ r12 $ i9 $ i8", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r5 = org apache lucene codecs competitive impact accumulator r0", "$ r1 = r5 max freqs", "java util array fill $ r1 0", "r6 = org apache lucene codecs competitive impact accumulator r0", "$ r2 = r6 other freq norm pair", "$ r2 clear", "$ z0 = org apache lucene codecs competitive impact accumulator $ assertion disable", "if $ z0 ! = 0 goto label1", "r7 = org apache lucene codecs competitive impact accumulator r0", "$ z1 = specialinvoke r7 assert consistent", "if $ z1 ! = 0 goto label1", "r4 = new java lang assertion error", "specialinvoke r4 < init >", "throw r4", "if $ z1 ! = 0 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r4 = new java lang illegal argument exception", "specialinvoke $ r4 < init > \\ `` point must not be null\\ ``", "throw $ r4", "if r0 ! = null goto label1", "label $ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "$ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init > \\ `` point must not be 0 dimensions\\ ``", "throw $ r3", "if $ i0 ! = 0 goto label2", "label $ i1 = lengthof r0", "$ i2 = $ i1 * 4", "r1 = newarray byte [ $ i2 ]", "i5 = 0", "label $ i3 = lengthof r0", "if i5 > = $ i3 goto label4", "$ f0 = r0 [ i5 ]", "$ i4 = i5 * 4", "org apache lucene document float point encode dimension $ f0 r1 $ i4", "i5 = i5 + 1", "goto label3", "if i5 > = $ i3 goto label4", "label $ r2 = new org apache lucene util byte ref", "specialinvoke $ r2 < init > r1", "return $ r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "f0 = @ parameter1", "$ r1 = org apache lucene document float point new range query r0 f0 f0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "f0 = @ parameter1", "f1 = @ parameter2", "f2 = @ parameter3", "f3 = @ parameter4", "r5 = new org apache lucene geo x y rectangle", "specialinvoke r5 < init > f0 f1 f2 f3", "r6 = new org apache lucene document x y point in geometry query", "$ r4 = newarray org apache lucene geo x y geometry [ 1 ]", "$ r4 [ 0 ] = r5", "r7 = org apache lucene geo x y geometry [ ] $ r4", "specialinvoke r6 < init > r0 r7", "r8 = org apache lucene search query r6", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = org apache lucene geo x y geometry [ ] r2", "$ r3 = org apache lucene document x y shape new geometry query r0 r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "d4 = @ parameter4", "d5 = @ parameter5", "d6 = @ parameter6", "d7 = @ parameter7", "$ i0 = org apache lucene geo geo utils orient d4 d5 d6 d7 d0 d1", "$ i1 = org apache lucene geo geo utils orient d4 d5 d6 d7 d2 d3", "$ i2 = $ i0 * $ i1", "if $ i2 > 0 goto label1", "$ i3 = org apache lucene geo geo utils orient d0 d1 d2 d3 d4 d5", "$ i4 = org apache lucene geo geo utils orient d0 d1 d2 d3 d6 d7", "$ i5 = $ i3 * $ i4", "if $ i5 > 0 goto label1", "return 1", "if $ i5 > 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r4 = org apache lucene geo polygon2 d r0", "$ d5 = r4 min x", "r5 = org apache lucene geo polygon2 d r0", "$ d4 = r5 max x", "r6 = org apache lucene geo polygon2 d r0", "$ d3 = r6 min y", "r7 = org apache lucene geo polygon2 d r0", "$ d2 = r7 max y", "$ z0 = org apache lucene geo component2 d contain point d0 d1 $ d5 $ d4 $ d3 $ d2", "if $ z0 == 0 goto label4", "r8 = org apache lucene geo polygon2 d r0", "$ r1 = r8 tree", "$ z1 = $ r1 contain d0 d1", "if $ z1 == 0 goto label4", "r9 = org apache lucene geo polygon2 d r0", "$ r2 = r9 hole", "if $ r2 == null goto label1", "r10 = org apache lucene geo polygon2 d r0", "$ r3 = r10 hole", "$ z2 = $ r3 contain d0 d1", "if $ z2 ! = 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 ! = 0 goto label2", "label $ z3 = 0", "if $ z1 == 0 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], [28], [29], [30], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "d4 = @ parameter4", "d5 = @ parameter5", "d6 = @ parameter6", "d7 = @ parameter7", "$ d8 = org apache lucene geo tessellator area d0 d1 d2 d3 d4 d5", "$ b0 = $ d8 cmpl 0 0", "if $ b0 < = 0 goto label01", "$ z3 = 1", "goto label02", "label $ d9 = org apache lucene geo tessellator area d0 d1 d2 d3 d6 d7", "$ b1 = $ d9 cmpl 0 0", "if $ b1 < = 0 goto label03", "$ z4 = 1", "goto label04", "label if $ z3 == $ z4 goto label09", "$ d10 = org apache lucene geo tessellator area d4 d5 d6 d7 d0 d1", "$ b2 = $ d10 cmpl 0 0", "if $ b2 < = 0 goto label05", "$ z6 = 1", "goto label06", "label $ d11 = org apache lucene geo tessellator area d4 d5 d6 d7 d2 d3", "$ b3 = $ d11 cmpl 0 0", "if $ b3 < = 0 goto label07", "$ z7 = 1", "goto label08", "label if $ z6 == $ z7 goto label09", "$ z8 = 1", "goto label10", "label return $ z8", "label if $ z6 == $ z7 goto label09", "label $ z8 = 0", "if $ b3 < = 0 goto label07", "label $ z7 = 0", "if $ b2 < = 0 goto label05", "label $ z6 = 0", "if $ b1 < = 0 goto label03", "label $ z4 = 0", "if $ b0 < = 0 goto label01", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index concurrent merge scheduler r0", "$ d0 = r1 force merge m b per sec", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index corrupt index exception r0", "$ r1 = r2 resource description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "z0 = @ parameter2", "if z0 == 0 goto label1", "if i0 < = 1 goto label1", "r3 = new org apache lucene index doc i d merger $ sort doc i d merger", "specialinvoke r3 < init > r0 i0 null", "r5 = org apache lucene index doc i d merger r3", "return r5", "if i0 < = 1 goto label1", "label r4 = new org apache lucene index doc i d merger $ sequential doc i d merger", "specialinvoke r4 < init > r0 null", "r6 = org apache lucene index doc i d merger r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org apache lucene index singleton sort numeric doc value", "if $ z0 == 0 goto label1", "$ r1 = org apache lucene index singleton sort numeric doc value r0", "$ r2 = $ r1 get numeric doc value", "return $ r2", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof org apache lucene index singleton sort numeric doc value", "if $ z0 == 0 goto label1", "$ r1 = org apache lucene index singleton sort numeric doc value r0", "$ r2 = $ r1 get numeric doc value", "return $ r2", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index field info r0", "$ i0 = r1 point dimension count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index field info r0", "$ r1 = r2 index option", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index index format too old exception r0", "$ r1 = r2 resource description", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = org apache lucene index index writer r0", "r8 ensure open", "r9 = org apache lucene index index writer r0", "$ r3 = r9 buffer update stream", "$ z0 = $ r3 any", "if $ z0 ! = 0 goto label1", "r10 = org apache lucene index index writer r0", "$ r4 = r10 doc writer", "$ z1 = $ r4 any deletion", "if $ z1 ! = 0 goto label1", "r11 = org apache lucene index index writer r0", "$ r5 = r11 reader pool", "$ z2 = $ r5 any deletion", "if $ z2 == 0 goto label2", "label return 1", "if $ z2 == 0 goto label2", "label r12 = org apache lucene index index writer r0", "$ r6 = r12 segment info", "r1 = $ r6 iterator", "label $ z3 = r1 have next", "if $ z3 == 0 goto label5", "$ r7 = r1 next", "r2 = org apache lucene index segment commit info $ r7", "$ z4 = r2 have deletion", "if $ z4 == 0 goto label4", "return 1", "if $ z4 == 0 goto label4", "label goto label3", "if $ z3 == 0 goto label5", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index index writer r0", "$ r1 = r2 change count", "$ l0 = $ r1 get", "r3 = org apache lucene index index writer r0", "$ l1 = r3 last commit change count", "$ b2 = $ l0 cmp $ l1", "if $ b2 ! = 0 goto label1", "r4 = org apache lucene index index writer r0", "$ z0 = r4 have change in ram", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index live index writer config r0", "$ i0 = r1 create version major", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r2 spliterator", "$ r4 = java util stream stream support stream $ r3 0", "$ r5 = merge policy $ lambda_seg string_0__1 bootstrap $ r1", "$ r6 = $ r4 map $ r5", "$ r7 = java util stream collector join \\ `` \\ ``", "$ r8 = $ r6 collect $ r7", "$ r9 = java lang string $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r10 = org apache lucene index multi posting enum r0", "r10 num sub = i0", "i1 = 0", "label if i1 > = i0 goto label2", "r11 = org apache lucene index multi posting enum r0", "$ r2 = r11 sub", "$ r5 = $ r2 [ i1 ]", "$ r3 = r1 [ i1 ]", "$ r4 = $ r3 posting enum", "$ r5 posting enum = $ r4", "r12 = org apache lucene index multi posting enum r0", "$ r6 = r12 sub", "$ r9 = $ r6 [ i1 ]", "$ r7 = r1 [ i1 ]", "$ r8 = $ r7 slice", "$ r9 slice = $ r8", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label r13 = org apache lucene index multi posting enum r0", "r13 upto = -1", "r14 = org apache lucene index multi posting enum r0", "r14 doc = -1", "r15 = org apache lucene index multi posting enum r0", "r15 current = null", "r16 = org apache lucene index multi posting enum r0", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene index pending deletes r0", "$ i0 = r1 pending delete count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i1 = 0", "$ r5 = r0 leave", "r2 = $ r5 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r6 = r2 next", "r3 = org apache lucene index leaf reader context $ r6", "$ r7 = r3 reader", "r4 = $ r7 get point value r1", "if r4 == null goto label2", "$ i0 = r4 get doc count", "i1 = i1 + $ i0", "label goto label1", "if $ z0 == 0 goto label3", "label return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r10 = null", "$ r6 = r0 leave", "r2 = $ r6 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label8", "$ r7 = r2 next", "r3 = org apache lucene index leaf reader context $ r7", "$ r8 = r3 reader", "r4 = $ r8 get point value r1", "if r4 ! = null goto label2", "goto label1", "if r4 ! = null goto label2", "label r5 = r4 get min pack value", "if r5 ! = null goto label3", "label if r10 ! = null goto label4", "$ r9 = r5 clone", "r10 = byte [ ] $ r9", "goto label7", "label goto label1", "label if r10 ! = null goto label4", "label i0 = r4 get num index dimension", "i1 = r4 get bytes per dimension", "i6 = 0", "label if i6 > = i0 goto label7", "i2 = i6 * i1", "$ i4 = i2 + i1", "$ i3 = i2 + i1", "$ i5 = org apache lucene util future array compare unsigned r5 i2 $ i4 r10 i2 $ i3", "if $ i5 > = 0 goto label6", "java lang system arraycopy r5 i2 r10 i2 i1", "label i6 = i6 + 1", "goto label5", "if $ z0 == 0 goto label8", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], []]}
{"nodes": ["r0 = @ this", "r3 = org apache lucene index reader and update r0", "$ r1 = r3 pending deletes", "$ r2 = $ r1 get live doc", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene index segment info r0", "$ r1 = r2 index sort", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 size", "if $ i0 > = 2 goto label1", "$ r9 = new java lang illegal argument exception", "specialinvoke $ r9 < init > \\ `` can not make a conjunction d i s i of less than 2 iterators\\ ``", "throw $ r9", "if $ i0 > = 2 goto label1", "label $ r5 = new java util array list", "specialinvoke $ r5 < init >", "$ r6 = new java util array list", "specialinvoke $ r6 < init >", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r8 = r3 next", "r4 = org apache lucene search doc id set iterator $ r8", "org apache lucene search conjunction d i s i add iterator r4 $ r5 $ r6", "goto label2", "if $ z0 == 0 goto label3", "label $ r7 = org apache lucene search conjunction d i s i create conjunction $ r5 $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "$ r4 = r2 get value", "$ d0 = $ r4 double value", "$ r5 = org apache lucene search double value source constant $ d0", "$ r6 = $ r5 get value r1 null", "r14 = org apache lucene search double value source r0", "r3 = r14 get value r1 $ r6", "$ z0 = r3 advance exact i0", "if $ z0 == 0 goto label1", "$ d1 = r3 double value", "$ r10 = java lang double value of $ d1", "r15 = org apache lucene search double value source r0", "$ r11 = r15 to string", "$ r12 = newarray org apache lucene search explanation [ 0 ]", "$ r13 = org apache lucene search explanation match $ r10 $ r11 $ r12", "return $ r13", "if $ z0 == 0 goto label1", "label r16 = org apache lucene search double value source r0", "$ r7 = r16 to string", "$ r8 = newarray org apache lucene search explanation [ 0 ]", "$ r9 = org apache lucene search explanation no match $ r7 $ r8", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = double value source $ lambda_from float field_0__2 bootstrap $", "$ r2 = org apache lucene search double value source from field r0 $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org apache lucene search double value source $ query double value source", "specialinvoke r2 < init > r0 null", "r3 = org apache lucene search double value source r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search explanation r0", "$ z0 = r1 match", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search fuzzy term enum r0", "$ r1 = r2 boost att", "$ f0 = $ r1 get boost", "return $ f0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "l0 = @ parameter1", "$ z0 = org apache lucene search l r u query cache $ assertion disable", "if $ z0 ! = 0 goto label1", "r6 = org apache lucene search l r u query cache r0", "$ r2 = r6 lock", "$ z1 = $ r2 be hold by current thread", "if $ z1 ! = 0 goto label1", "r5 = new java lang assertion error", "specialinvoke r5 < init >", "throw r5", "if $ z1 ! = 0 goto label1", "label r7 = org apache lucene search l r u query cache r0", "$ l1 = r7 ram byte use", "$ l2 = $ l1 + l0", "r8 = org apache lucene search l r u query cache r0", "r8 ram byte use = $ l2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search phrase query r0", "$ r1 = r2 field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache lucene search n gram phrase query r0", "$ r1 = r3 phrase query", "$ r2 = $ r1 get term", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search term statistic r0", "$ l0 = r1 doc freq", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["i0 = @ parameter0", "r0 = @ parameter1", "$ r1 = org apache lucene search top doc merge 0 i0 r0 1", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r1 = new org apache lucene util automaton automaton", "specialinvoke $ r1 < init >", "i0 = $ r1 create state", "$ r1 set accept i0 1", "$ r1 add transition i0 i0 0 255", "$ r1 finish state", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "i2 = r0 create state", "r0 add transition i0 i2 i1 i1", "return i2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util automaton automaton r0", "$ i0 = r1 next transition", "$ i1 = $ i0 3", "return $ i1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ z0 = org apache lucene util automaton automaton $ assertion disable", "if $ z0 ! = 0 goto label1", "r12 = org apache lucene util automaton automaton r0", "$ i4 = r12 next state", "$ i5 = $ i4 2", "if i0 < $ i5 goto label1", "r11 = new java lang assertion error", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r5 = r10 append \\ `` state=\\ ``", "$ r6 = $ r5 append i0", "$ r7 = $ r6 append \\ `` next state=\\ ``", "r13 = org apache lucene util automaton automaton r0", "$ i6 = r13 next state", "$ r8 = $ r7 append $ i6", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "throw r11", "if i0 < $ i5 goto label1", "label r1 source = i0", "r14 = org apache lucene util automaton automaton r0", "$ r2 = r14 state", "$ i1 = 2 * i0", "$ i2 = $ r2 [ $ i1 ]", "r1 transition upto = $ i2", "r15 = org apache lucene util automaton automaton r0", "$ i3 = r15 get num transition i0", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ z0 = r0 be accept 0", "if $ z0 == 0 goto label3", "$ i2 = r0 get num transition 0", "if $ i2 ! = 1 goto label3", "$ r2 = new org apache lucene util automaton transition", "specialinvoke $ r2 < init >", "r0 get transition 0 0 $ r2", "$ i3 = $ r2 d", "if $ i3 ! = 0 goto label1", "$ i4 = $ r2 min", "if $ i4 ! = i0 goto label1", "$ i5 = $ r2 max", "if $ i5 ! = i1 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ i5 ! = i1 goto label1", "label $ z1 = 0", "if $ i2 ! = 1 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene util bit set r0", "$ i0 = r1 cardinality", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 doc i d", "if $ i0 == -1 goto label1", "$ r2 = new java lang illegal state exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append \\ `` this operation only work with an unpositioned iterator get current position = \\ ``", "$ i1 = r1 doc i d", "$ r5 = $ r4 append $ i1", "$ r6 = $ r5 to string", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "if $ i0 == -1 goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene util bit set r0", "r2 check unpositioned r1", "i0 = r1 next doc", "label if i0 == 2147483647 goto label2", "r3 = org apache lucene util bit set r0", "r3 set i0", "label if i0 == 2147483647 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 length", "r2 = org apache lucene util bytes ref builder r0", "r2 copy char r1 0 $ i0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache lucene store f s lock factory get default", "r4 = org apache lucene store lock factory $ r2", "$ r3 = org apache lucene util command line util new f s directory r0 r1 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene util query builder r0", "r1 enable graph query = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = org apache lucene util ram usage estimator num_bytes_array_header", "$ l3 = long $ i0", "$ i1 = lengthof r0", "$ l2 = long $ i1", "$ l4 = $ l3 + $ l2", "$ l5 = org apache lucene util ram usage estimator align object size $ l4", "return $ l5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "$ i0 = org apache lucene util ram usage estimator num_bytes_object_ref", "$ i1 = 12 + $ i0", "$ l2 = long $ i1", "$ l3 = org apache lucene util ram usage estimator align object size $ l2", "r2 = org apache lucene util sentinel int set r0", "$ r1 = r2 key", "$ l4 = org apache lucene util ram usage estimator size of $ r1", "$ l5 = $ l3 + $ l4", "return $ l5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["d0 = @ parameter0", "$ d1 = d0 * 0 5", "$ d2 = java lang math sqrt $ d1", "$ d3 = java lang math min 1 0 $ d2", "$ d4 = org apache lucene util sloppy math asin $ d3", "$ d5 = 1 27420175428e7 * $ d4", "return $ d5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["d0 = @ parameter0", "$ d1 = d0 * 0 017453292519943295", "return $ d1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene search group group search r0", "r2 group sort = r1", "r3 = org apache lucene search group group search r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache lucene search group group search r0", "r1 group docs offset = i0", "r2 = org apache lucene search group group search r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache lucene search group group search r0", "r1 group docs limit = i0", "r2 = org apache lucene search group group search r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene search highlight query scorer r0", "r1 expand multi term query = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache lucene search highlight weight span term extractor r0", "r1 max doc char to analyze = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search uhighlight passage r0", "$ i0 = r1 end offset", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search vectorhighlight field phrase list r0", "$ r1 = r2 phrase list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r7 = r0 leave", "r2 = $ r7 iterator", "label $ z3 = r2 have next", "if $ z3 == 0 goto label12", "$ r8 = r2 next", "r3 = org apache lucene index leaf reader context $ r8", "$ r9 = r3 reader", "$ i0 = $ r9 max doc", "if $ i0 ! = 0 goto label02", "goto label01", "if $ i0 ! = 0 goto label02", "label r4 = r1 get bit set r3", "if r4 == null goto label03", "$ i1 = r4 cardinality", "if $ i1 ! = 0 goto label04", "label r48 = new java lang illegal state exception", "r47 = new java lang string builder", "specialinvoke r47 < init >", "$ r12 = r47 append \\ `` every segment should have at least one parent but \\ ``", "$ r13 = r3 reader", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` do not have any\\ ``", "$ r16 = $ r15 to string", "specialinvoke r48 < init > $ r16", "throw r48", "if $ i1 ! = 0 goto label04", "label $ r17 = r3 reader", "$ i2 = $ r17 max doc", "$ i3 = $ i2 - 1", "$ z2 = r4 get $ i3", "if $ z2 ! = 0 goto label05", "r50 = new java lang illegal state exception", "r49 = new java lang string builder", "specialinvoke r49 < init >", "$ r42 = r49 append \\ `` the last document of a segment must always be a parent but \\ ``", "$ r43 = r3 reader", "$ r44 = $ r42 append $ r43", "$ r45 = $ r44 append \\ `` have a child a a last doc\\ ``", "$ r46 = $ r45 to string", "specialinvoke r50 < init > $ r46", "throw r50", "if $ z2 ! = 0 goto label05", "label $ r18 = r3 reader", "r5 = $ r18 get live doc", "if r5 == null goto label11", "i4 = -1", "r51 = new org apache lucene util bit set iterator", "specialinvoke r51 < init > r4 0l", "r56 = org apache lucene search doc id set iterator r51", "i5 = r56 next doc", "label if i5 == 2147483647 goto label11", "z0 = r5 get i5", "i6 = i4 + 1", "label if i6 == i5 goto label10", "z1 = r5 get i6", "if z0 == z1 goto label09", "if z1 == 0 goto label08", "r53 = new java lang illegal state exception", "r52 = new java lang string builder", "specialinvoke r52 < init >", "$ r32 = r52 append \\ `` parent doc \\ ``", "$ r33 = $ r32 append i5", "$ r34 = $ r33 append \\ `` of segment \\ ``", "$ r35 = r3 reader", "$ r36 = $ r34 append $ r35", "$ r37 = $ r36 append \\ `` be live but have a delete child document \\ ``", "$ r38 = $ r37 append i6", "$ r39 = $ r38 to string", "specialinvoke r53 < init > $ r39", "throw r53", "if z1 == 0 goto label08", "label r55 = new java lang illegal state exception", "r54 = new java lang string builder", "specialinvoke r54 < init >", "$ r22 = r54 append \\ `` parent doc \\ ``", "$ r23 = $ r22 append i5", "$ r24 = $ r23 append \\ `` of segment \\ ``", "$ r25 = r3 reader", "$ r26 = $ r24 append $ r25", "$ r27 = $ r26 append \\ `` be delete but have a live child document \\ ``", "$ r28 = $ r27 append i6", "$ r29 = $ r28 to string", "specialinvoke r55 < init > $ r29", "throw r55", "if z0 == z1 goto label09", "label i6 = i6 + 1", "goto label07", "label if i6 == i5 goto label10", "label i4 = i5", "r57 = org apache lucene search doc id set iterator r51", "i5 = r57 next doc", "goto label06", "label if i5 == 2147483647 goto label11", "label goto label01", "if $ z3 == 0 goto label12", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [], [87], [88], [], [90], [91], [92], [93], [], [95], [96], [97], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "f0 = @ parameter2", "z0 = @ parameter3", "r1 = org apache lucene misc sweet spot similarity r0", "r1 ln_min = i0", "r2 = org apache lucene misc sweet spot similarity r0", "r2 ln_max = i1", "r3 = org apache lucene misc sweet spot similarity r0", "r3 ln_steep = f0", "r4 = org apache lucene misc sweet spot similarity r0", "r4 discount overlap = z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache lucene misc sweet spot similarity r0", "i1 = r1 ln_min", "r2 = org apache lucene misc sweet spot similarity r0", "i2 = r2 ln_max", "r3 = org apache lucene misc sweet spot similarity r0", "f0 = r3 ln_steep", "$ i3 = i0 - i1", "$ i4 = java lang math ab $ i3", "$ i5 = i0 - i2", "$ i6 = java lang math ab $ i5", "$ i8 = $ i4 + $ i6", "$ i7 = i2 - i1", "$ i9 = $ i8 - $ i7", "$ f1 = float $ i9", "$ f2 = f0 * $ f1", "$ f3 = $ f2 + 1 0f", "$ d0 = double $ f3", "$ d1 = java lang math sqrt $ d0", "$ d2 = 1 0 $ d1", "$ f4 = float $ d2", "return $ f4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search doc value stats r0", "$ r1 = r2 field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene queryparser classic query parser base r0", "$ f0 = r1 fuzzy min sim", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org apache lucene search prefix query", "specialinvoke r5 < init > r1", "r6 = org apache lucene queryparser classic query parser base r0", "$ r4 = r6 multi term rewrite method", "r5 set rewrite method $ r4", "r7 = org apache lucene search query r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache lucene queryparser flexible core builder query tree builder r0", "specialinvoke r4 process r1", "$ r2 = org apache lucene queryparser flexible core builder query tree builder query_tree_builder_tagid", "$ r3 = r1 get tag $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene queryparser flexible core node path query node r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get child", "if r2 == null goto label8", "$ i0 = r2 size", "if $ i0 < = 0 goto label8", "r13 = org apache lucene queryparser flexible core processor query node processor impl r0", "r3 = specialinvoke r13 allocate child list", "label r8 = r2 iterator", "label $ z0 = r8 have next", "if $ z0 == 0 goto label4", "$ r5 = r8 next", "r9 = org apache lucene queryparser flexible core node query node $ r5", "r14 = org apache lucene queryparser flexible core processor query node processor impl r0", "r10 = specialinvoke r14 process iteration r9", "if r10 ! = null goto label3", "r12 = new java lang null pointer exception", "specialinvoke r12 < init >", "throw r12", "if r10 ! = null goto label3", "label r3 add r10", "goto label2", "if $ z0 == 0 goto label4", "label r15 = org apache lucene queryparser flexible core processor query node processor impl r0", "r16 = java util list r3", "r11 = r15 set child order r16", "r1 set r11", "label r3 be use = 0", "goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [25], [26], [27], [28], [], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` text parser should not be null ! \\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = org apache lucene queryparser flexible core query parser helper r0", "r4 syntax parser = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene queryparser flexible core query parser helper r0", "$ r1 = r2 builder", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene queryparser flexible core query parser helper r0", "$ r1 = r2 syntax parser", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache lucene queryparser flexible standard node abstract range query node r0", "r2 = r4 get low bound", "r5 = org apache lucene queryparser flexible standard node abstract range query node r0", "r3 = r5 get upper bound", "if r2 == null goto label1", "r2 set field r1", "label if r3 == null goto label2", "r3 set field r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache lucene queryparser flexible standard standard query parser r0", "$ r2 = r4 get query config handler", "$ r3 = org apache lucene queryparser flexible standard config standard query config handler $ configuration key default_operator", "$ r2 set $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache lucene queryparser flexible standard standard query parser r0", "$ r2 = r4 get query config handler", "$ r3 = org apache lucene queryparser flexible standard config standard query config handler $ configuration key multi_term_rewrite_method", "$ r2 set $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org apache lucene queryparser surround query srnd query r0", "$ z0 = r6 be weight", "if $ z0 == 0 goto label1", "r7 = org apache lucene queryparser surround query srnd query r0", "$ r2 = r7 get weight operator", "r1 append $ r2", "r8 = org apache lucene queryparser surround query srnd query r0", "$ r4 = r8 get weight string", "r1 append $ r4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "d3 = @ parameter3", "org apache lucene document lat lon bound box check args d0 d1 d2 d3", "r7 = org apache lucene document lat lon bound box r0", "$ r1 = r7 field data", "if $ r1 ! = null goto label1", "r5 = newarray byte [ 16 ]", "r6 = new org apache lucene util byte ref", "specialinvoke r6 < init > r5", "r8 = org apache lucene document lat lon bound box r0", "r8 field data = r6", "goto label2", "label org apache lucene document lat lon bound box encode d0 d1 r5 0", "org apache lucene document lat lon bound box encode d2 d3 r5 8", "return", "if $ r1 ! = null goto label1", "label r9 = org apache lucene document lat lon bound box r0", "$ r2 = r9 field data", "$ r3 = org apache lucene util bytes ref $ r2", "r5 = $ r3 byte"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache lucene spatial composite composite spatial strategy r0", "r1 optimize predicate = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = org apache lucene spatial prefix tree date range prefix tree r0", "$ r2 = r10 max l v", "i7 = org apache lucene spatial prefix tree date range prefix tree compare prefix r1 $ r2", "$ z0 = org apache lucene spatial prefix tree date range prefix tree $ assertion disable", "if $ z0 ! = 0 goto label1", "if i7 < = 0 goto label1", "r8 = new java lang assertion error", "specialinvoke r8 < init >", "throw r8", "if i7 < = 0 goto label1", "label if i7 ! = 0 goto label2", "r11 = org apache lucene spatial prefix tree date range prefix tree r0", "$ r6 = r11 max l v", "$ i3 = r1 get level", "$ i4 = $ i3 + 1", "$ i5 = $ r6 get val at level $ i4", "$ i6 = $ i5 + 1", "return $ i6", "label if i7 ! = 0 goto label2", "label r12 = org apache lucene spatial prefix tree date range prefix tree r0", "$ r3 = r12 gregorian change date l v", "if $ r3 == null goto label3", "r13 = org apache lucene spatial prefix tree date range prefix tree r0", "$ r5 = r13 gregorian change date l v", "$ i8 = org apache lucene spatial prefix tree date range prefix tree compare prefix r1 $ r5", "goto label4", "label if $ i8 < 0 goto label6", "r14 = org apache lucene spatial prefix tree date range prefix tree r0", "i0 = specialinvoke r14 fast sub cell r1", "$ z1 = org apache lucene spatial prefix tree date range prefix tree $ assertion disable", "if $ z1 ! = 0 goto label5", "r15 = org apache lucene spatial prefix tree date range prefix tree r0", "$ i2 = specialinvoke r15 slow sub cell r1", "if i0 == $ i2 goto label5", "r9 = new java lang assertion error", "specialinvoke r9 < init > \\ `` fast slow num sub cell inconsistency\\ ``", "throw r9", "if i0 == $ i2 goto label5", "label return i0", "label if $ i8 < 0 goto label6", "label r16 = org apache lucene spatial prefix tree date range prefix tree r0", "$ i1 = specialinvoke r16 slow sub cell r1", "return $ i1", "if $ r3 == null goto label3", "label $ i8 = -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [], [46], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = 30 i0", "$ i2 = $ i1 + 1", "return $ i2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r7 = org apache lucene spatial query spatial args r0", "$ r2 = r7 dist err", "if $ r2 == null goto label1", "r8 = org apache lucene spatial query spatial args r0", "$ r6 = r8 dist err", "$ d3 = $ r6 double value", "return $ d3", "if $ r2 == null goto label1", "label r9 = org apache lucene spatial query spatial args r0", "$ r3 = r9 dist err pct", "if $ r3 == null goto label2", "r10 = org apache lucene spatial query spatial args r0", "$ r5 = r10 dist err pct", "$ d4 = $ r5 double value", "goto label3", "label r11 = org apache lucene spatial query spatial args r0", "$ r4 = r11 shape", "$ d2 = org apache lucene spatial query spatial args calc distance from err pct $ r4 $ d4 r1", "return $ d2", "if $ r3 == null goto label2", "label $ d4 = d0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "r5 = org apache lucene spatial query spatial args r0", "$ r1 = r5 dist err", "if $ r1 == null goto label1", "r6 = org apache lucene spatial query spatial args r0", "$ r2 = r6 dist err pct", "if $ r2 == null goto label1", "r4 = new java lang illegal argument exception", "specialinvoke r4 < init > \\ `` only dist err or dist err pct can be specify \\ ``", "throw r4", "if $ r2 == null goto label1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene spatial query spatial args r0", "$ r1 = r2 dist err pct", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "d0 = @ parameter2", "d1 = @ parameter3", "d2 = @ parameter4", "d3 = @ parameter5", "r2 = org apache lucene spatial3d geo3 d util from box r1 d0 d1 d2 d3", "r4 = org apache lucene spatial3d geom geo shape r2", "$ r3 = org apache lucene spatial3d geo3 d point new shape query r0 r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 get edge point", "$ i1 = lengthof r2", "if $ i1 ! = 0 goto label1", "return 3", "if $ i1 ! = 0 goto label1", "label z1 = 0", "z2 = 0", "i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label6", "r4 = r2 [ i2 ]", "r5 = org apache lucene spatial3d geom base x y z solid r0", "r6 = org apache lucene spatial3d geom vector r4", "$ z0 = r5 be within r6", "if $ z0 == 0 goto label3", "z2 = 1", "goto label4", "label if z2 == 0 goto label5", "if z1 == 0 goto label5", "return 1", "if z1 == 0 goto label5", "label i2 = i2 + 1", "goto label2", "if $ z0 == 0 goto label3", "label z1 = 1", "label if i2 > = i0 goto label6", "label if z2 ! = 0 goto label7", "if z1 ! = 0 goto label7", "return 2", "if z1 ! = 0 goto label7", "label if z2 == 0 goto label8", "if z1 ! = 0 goto label8", "return 0", "if z1 ! = 0 goto label8", "label if z1 == 0 goto label9", "if z2 ! = 0 goto label9", "label return 1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [], [23], [24], [], [26], [27], [28], [29], [30], [], [32], [33], [34], [], [36], [37], [38], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r7 = org apache lucene spatial3d geom geo degenerate path r0", "$ z0 = r7 be do", "if $ z0 == 0 goto label1", "r5 = new java lang illegal state exception", "specialinvoke r5 < init > \\ `` can\\'t call add point if do already called\\ ``", "throw r5", "if $ z0 == 0 goto label1", "label r8 = org apache lucene spatial3d geom geo degenerate path r0", "$ r3 = r8 point", "r6 = new org apache lucene spatial3d geom geo point", "r9 = org apache lucene spatial3d geom geo degenerate path r0", "$ r2 = r9 planet model", "specialinvoke r6 < init > $ r2 d0 d1", "$ r3 add r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ d2 = r2 x", "$ d1 = r2 y", "$ d0 = r2 z", "r3 = org apache lucene spatial3d geom geo distance r0", "$ d3 = r3 compute delta distance r1 $ d2 $ d1 $ d0", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene spatial3d geom geo point r0", "$ d0 = r2 dot product r1", "r3 = org apache lucene spatial3d geom geo point r0", "$ d1 = r3 magnitude", "$ d2 = r1 magnitude", "$ d3 = $ d1 * $ d2", "$ d4 = $ d0 $ d3", "$ d5 = org apache lucene spatial3d geom tool safe acos $ d4", "return $ d5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org apache lucene spatial3d geom geo convex polygon", "specialinvoke r3 < init > r0 r1", "r4 = org apache lucene spatial3d geom geo polygon r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org apache lucene spatial3d geom geo polygon factory make geo polygon r0 r1 null", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ d2 = r1 x", "$ d1 = r1 y", "$ d0 = r1 z", "r3 = org apache lucene spatial3d geom plane r0", "$ d3 = r3 normal distance $ d2 $ d1 $ d0 r2", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene spatial3d geom planet model r0", "$ d1 = r1 xy scale", "r2 = org apache lucene spatial3d geom planet model r0", "$ d0 = r2 z scale", "$ b0 = $ d1 cmpl $ d0", "if $ b0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ d2 = r1 x", "$ d1 = r1 y", "$ d0 = r1 z", "r2 = org apache lucene spatial3d geom planet model r0", "$ z0 = r2 point outside $ d2 $ d1 $ d0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene spatial3d geom vector r0", "$ d1 = r2 x", "$ d0 = r1 x", "$ d5 = $ d1 * $ d0", "r3 = org apache lucene spatial3d geom vector r0", "$ d3 = r3 y", "$ d2 = r1 y", "$ d4 = $ d3 * $ d2", "$ d9 = $ d5 + $ d4", "r4 = org apache lucene spatial3d geom vector r0", "$ d7 = r4 z", "$ d6 = r1 z", "$ d8 = $ d7 * $ d6", "$ d10 = $ d9 + $ d8", "return $ d10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "r2 = new org apache lucene spatial3d geom vector", "r3 = org apache lucene spatial3d geom vector r0", "$ d2 = r3 x", "$ d5 = $ d2 * d1", "r4 = org apache lucene spatial3d geom vector r0", "$ d3 = r4 z", "$ d4 = $ d3 * d0", "$ d12 = $ d5 - $ d4", "r5 = org apache lucene spatial3d geom vector r0", "$ d11 = r5 y", "r6 = org apache lucene spatial3d geom vector r0", "$ d6 = r6 x", "$ d9 = $ d6 * d0", "r7 = org apache lucene spatial3d geom vector r0", "$ d7 = r7 z", "$ d8 = $ d7 * d1", "$ d10 = $ d9 + $ d8", "specialinvoke r2 < init > $ d12 $ d11 $ d10", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache lucene spatial3d geom vector r0", "$ d0 = r2 normal distance square r1", "$ d1 = java lang math sqrt $ d0", "return $ d1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "d2 = @ parameter2", "r1 = org apache lucene spatial3d geom vector r0", "$ d6 = r1 y", "$ d9 = $ d6 * d2", "r2 = org apache lucene spatial3d geom vector r0", "$ d7 = r2 z", "$ d8 = $ d7 * d1", "d3 = $ d9 - $ d8", "r3 = org apache lucene spatial3d geom vector r0", "$ d10 = r3 z", "$ d13 = $ d10 * d0", "r4 = org apache lucene spatial3d geom vector r0", "$ d11 = r4 x", "$ d12 = $ d11 * d2", "d4 = $ d13 - $ d12", "r5 = org apache lucene spatial3d geom vector r0", "$ d14 = r5 x", "$ d17 = $ d14 * d1", "r6 = org apache lucene spatial3d geom vector r0", "$ d15 = r6 y", "$ d16 = $ d15 * d0", "d5 = $ d17 - $ d16", "$ d19 = d3 * d3", "$ d18 = d4 * d4", "$ d21 = $ d19 + $ d18", "$ d20 = d5 * d5", "$ d22 = $ d21 + $ d20", "$ b0 = $ d22 cmpg 1 0e-24", "if $ b0 > = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ b0 > = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache lucene spatial3d geom x y z bound r0", "$ r2 = r4 max z", "if $ r2 ! = null goto label1", "return 0", "if $ r2 ! = null goto label1", "label $ d0 = r1 get maximum z value", "r5 = org apache lucene spatial3d geom x y z bound r0", "$ r3 = r5 max z", "$ d1 = $ r3 double value", "$ d2 = $ d0 - $ d1", "$ b0 = $ d2 cmpg 1 0e-12", "if $ b0 > = 0 goto label2", "$ z0 = 1", "goto label3", "label return $ z0", "if $ b0 > = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "d2 = @ parameter3", "d3 = @ parameter4", "d4 = @ parameter5", "d5 = @ parameter6", "$ d6 = d1 - d0", "$ d7 = java lang math ab $ d6", "$ b0 = $ d7 cmpg 1 0e-12", "if $ b0 > = 0 goto label4", "$ d22 = d3 - d2", "$ d23 = java lang math ab $ d22", "$ b4 = $ d23 cmpg 1 0e-12", "if $ b4 > = 0 goto label2", "$ d32 = d5 - d4", "$ d33 = java lang math ab $ d32", "$ b6 = $ d33 cmpg 1 0e-12", "if $ b6 > = 0 goto label1", "r9 = new org apache lucene spatial3d geom d xd yd z solid", "$ d38 = d0 + d1", "$ d41 = $ d38 * 0 5", "$ d39 = d2 + d3", "$ d40 = $ d39 * 0 5", "specialinvoke r9 < init > r0 $ d41 $ d40 d4", "r17 = org apache lucene spatial3d geom x y z solid r9", "return r17", "if $ b6 > = 0 goto label1", "label r10 = new org apache lucene spatial3d geom d xd y z solid", "$ d34 = d0 + d1", "$ d37 = $ d34 * 0 5", "$ d35 = d2 + d3", "$ d36 = $ d35 * 0 5", "specialinvoke r10 < init > r0 $ d37 $ d36 d4 d5", "r18 = org apache lucene spatial3d geom x y z solid r10", "return r18", "if $ b4 > = 0 goto label2", "label $ d24 = d5 - d4", "$ d25 = java lang math ab $ d24", "$ b5 = $ d25 cmpg 1 0e-12", "if $ b5 > = 0 goto label3", "r11 = new org apache lucene spatial3d geom d x yd z solid", "$ d28 = d0 + d1", "$ d31 = $ d28 * 0 5", "$ d29 = d4 + d5", "$ d30 = $ d29 * 0 5", "specialinvoke r11 < init > r0 $ d31 d2 d3 $ d30", "r19 = org apache lucene spatial3d geom x y z solid r11", "return r19", "if $ b5 > = 0 goto label3", "label r12 = new org apache lucene spatial3d geom d x y z solid", "$ d26 = d0 + d1", "$ d27 = $ d26 * 0 5", "specialinvoke r12 < init > r0 $ d27 d2 d3 d4 d5", "r20 = org apache lucene spatial3d geom x y z solid r12", "return r20", "if $ b0 > = 0 goto label4", "label $ d8 = d3 - d2", "$ d9 = java lang math ab $ d8", "$ b1 = $ d9 cmpg 1 0e-12", "if $ b1 > = 0 goto label6", "$ d14 = d5 - d4", "$ d15 = java lang math ab $ d14", "$ b3 = $ d15 cmpg 1 0e-12", "if $ b3 > = 0 goto label5", "r13 = new org apache lucene spatial3d geom xd yd z solid", "$ d18 = d2 + d3", "$ d21 = $ d18 * 0 5", "$ d19 = d4 + d5", "$ d20 = $ d19 * 0 5", "specialinvoke r13 < init > r0 d0 d1 $ d21 $ d20", "r21 = org apache lucene spatial3d geom x y z solid r13", "return r21", "if $ b3 > = 0 goto label5", "label r14 = new org apache lucene spatial3d geom xd y z solid", "$ d16 = d2 + d3", "$ d17 = $ d16 * 0 5", "specialinvoke r14 < init > r0 d0 d1 $ d17 d4 d5", "r22 = org apache lucene spatial3d geom x y z solid r14", "return r22", "if $ b1 > = 0 goto label6", "label $ d10 = d5 - d4", "$ d11 = java lang math ab $ d10", "$ b2 = $ d11 cmpg 1 0e-12", "if $ b2 > = 0 goto label7", "r15 = new org apache lucene spatial3d geom x yd z solid", "$ d12 = d4 + d5", "$ d13 = $ d12 * 0 5", "specialinvoke r15 < init > r0 d0 d1 d2 d3 $ d13", "r23 = org apache lucene spatial3d geom x y z solid r15", "return r23", "if $ b2 > = 0 goto label7", "label r16 = new org apache lucene spatial3d geom standard x y z solid", "specialinvoke r16 < init > r0 d0 d1 d2 d3 d4 d5", "r24 = org apache lucene spatial3d geom x y z solid r16", "return r24"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [], [74], [75], [76], [77], [78], [79], [], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [], [92], [93], [94], [95], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "r1 = org apache lucene search spell direct spell checker r0", "r1 accuracy = f0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search spell direct spell checker r0", "$ r1 = r2 comparator", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache lucene search suggest analyze suggest stop filter factory r0", "$ z0 = r1 ignore case", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r4 = org apache lucene search suggest document completion scorer r0", "$ r2 = r4 filter doc", "if $ r2 == null goto label1", "r5 = org apache lucene search suggest document completion scorer r0", "$ r3 = r5 filter doc", "$ z1 = $ r3 get i0", "if $ z1 == 0 goto label3", "label if r1 == null goto label2", "$ z0 = r1 get i0", "if $ z0 == 0 goto label3", "label $ z2 = 1", "goto label4", "label return $ z2", "if $ z0 == 0 goto label3", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache lucene search suggest fst f s t completion r0", "$ r1 = r2 root arc", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r6 = new org apache mahout math map open int long hash map", "specialinvoke $ r6 < init >", "$ r7 = new org apache hadoop fs path", "specialinvoke $ r7 < init > r0", "$ r8 = new org apache mahout common iterator sequencefile sequence file dir iterable", "$ r9 = org apache mahout common iterator sequencefile path type list", "$ r10 = org apache mahout common iterator sequencefile path filter part filter", "specialinvoke $ r8 < init > $ r7 $ r9 $ r10 null 1 r1", "r4 = $ r8 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r11 = r4 next", "r5 = org apache mahout common pair $ r11", "$ r12 = r5 get first", "$ r13 = org apache mahout math var int writable $ r12", "$ i0 = $ r13 get", "$ r14 = r5 get second", "$ r15 = org apache mahout math var long writable $ r14", "$ l1 = $ r15 get", "$ r6 put $ i0 $ l1", "goto label1", "if $ z0 == 0 goto label2", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ this", "d10 = 0 0", "d11 = 0 0", "i10 = 0", "label r9 = org apache mahout classifier confusion matrix r0", "$ r3 = r9 confusion matrix", "$ i1 = lengthof $ r3", "if i10 > = $ i1 goto label6", "r10 = org apache mahout classifier confusion matrix r0", "$ r4 = r10 confusion matrix", "$ r5 = $ r4 [ i10 ]", "$ i6 = $ r5 [ i10 ]", "$ d6 = double $ i6", "d10 = d10 + $ d6", "d12 = 0 0", "i11 = 0", "label r11 = org apache mahout classifier confusion matrix r0", "$ r6 = r11 confusion matrix", "$ i7 = lengthof $ r6", "if i11 > = $ i7 goto label3", "r12 = org apache mahout classifier confusion matrix r0", "$ r7 = r12 confusion matrix", "$ r8 = $ r7 [ i10 ]", "$ i9 = $ r8 [ i11 ]", "$ d9 = double $ i9", "d12 = d12 + $ d9", "i11 = i11 + 1", "goto label2", "if i11 > = $ i7 goto label3", "label d13 = 0 0", "r13 = org apache mahout classifier confusion matrix r0", "r1 = r13 confusion matrix", "i0 = lengthof r1", "i12 = 0", "label if i12 > = i0 goto label5", "r2 = r1 [ i12 ]", "$ i8 = r2 [ i10 ]", "$ d8 = double $ i8", "d13 = d13 + $ d8", "i12 = i12 + 1", "goto label4", "label if i12 > = i0 goto label5", "label $ d7 = d12 * d13", "d11 = d11 + $ d7", "i10 = i10 + 1", "goto label1", "if i10 > = $ i1 goto label6", "label r14 = org apache mahout classifier confusion matrix r0", "$ i2 = r14 sample", "$ d0 = double $ i2", "$ d1 = $ d0 * d10", "$ d4 = $ d1 - d11", "r15 = org apache mahout classifier confusion matrix r0", "$ i4 = r15 sample", "r16 = org apache mahout classifier confusion matrix r0", "$ i3 = r16 sample", "$ i5 = $ i4 * $ i3", "$ d2 = double $ i5", "$ d3 = $ d2 - d11", "$ d5 = $ d4 $ d3", "return $ d5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], [43], [44], [45], [], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], []]}
{"nodes": ["r0 = @ this", "r9 = new org apache mahout cf taste impl common full running average and std dev", "specialinvoke r9 < init >", "i4 = 0", "label r10 = org apache mahout classifier confusion matrix r0", "$ r3 = r10 confusion matrix", "$ i0 = lengthof $ r3", "if i4 > = $ i0 goto label4", "d4 = 0 0", "i5 = 0", "label r11 = org apache mahout classifier confusion matrix r0", "$ r4 = r11 confusion matrix", "$ i1 = lengthof $ r4", "if i5 > = $ i1 goto label3", "r12 = org apache mahout classifier confusion matrix r0", "$ r7 = r12 confusion matrix", "$ r8 = $ r7 [ i4 ]", "$ i3 = $ r8 [ i5 ]", "$ d3 = double $ i3", "d4 = d4 + $ d3", "i5 = i5 + 1", "goto label2", "if i5 > = $ i1 goto label3", "label r13 = org apache mahout classifier confusion matrix r0", "$ r5 = r13 confusion matrix", "$ r6 = $ r5 [ i4 ]", "$ i2 = $ r6 [ i4 ]", "$ d1 = double $ i2", "$ d0 = d4 + 1 0e-6", "$ d2 = $ d1 $ d0", "r14 = org apache mahout cf taste impl common running average and std dev r9", "r14 add datum $ d2", "i4 = i4 + 1", "goto label1", "if i4 > = $ i0 goto label4", "label r15 = org apache mahout cf taste impl common running average and std dev r9", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], [36], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com google common collect set new hash set", "r11 = org apache mahout classifier df data data r0", "$ r4 = r11 instance", "r8 = $ r4 iterator", "label $ z0 = r8 have next", "if $ z0 == 0 goto label2", "$ r6 = r8 next", "r9 = org apache mahout classifier df data instance $ r6", "$ d1 = r9 get i0", "$ r7 = java lang double value of $ d1", "r1 add $ r7", "goto label1", "if $ z0 == 0 goto label2", "label $ i1 = r1 size", "r10 = newarray double [ $ i1 ]", "i3 = 0", "r2 = r1 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label4", "$ r5 = r2 next", "r3 = java lang double $ r5", "$ i2 = i3", "i3 = i3 + 1", "$ d0 = r3 double value", "r10 [ $ i2 ] = $ d0", "goto label3", "if $ z1 == 0 goto label4", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ parameter0", "i2 = 0", "i0 = lengthof r0", "i3 = 0", "label if i3 > = i0 goto label2", "i1 = r0 [ i3 ]", "i2 = i2 + i1", "i3 = i3 + 1", "goto label1", "label if i3 > = i0 goto label2", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "i0 = r0 read int", "r1 = newarray org apache mahout classifier df node node [ i0 ]", "i1 = 0", "label if i1 > = i0 goto label2", "$ r2 = org apache mahout classifier df node node read r0", "r1 [ i1 ] = $ r2", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = org apache mahout classifier df tool tree visualizer get reflect map", "$ r4 = org apache mahout classifier df tool tree visualizer to string node r0 r1 r2 $ r3 0", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache mahout classifier mlp neural network r0", "r2 training method = r1", "r3 = org apache mahout classifier mlp neural network r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r4 = org apache mahout classifier mlp neural network r0", "$ r1 = r4 weight matrix list", "$ r2 = $ r1 get i0", "$ r3 = org apache mahout math matrix $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label2", "r9 = org apache mahout classifier mlp neural network r0", "$ r3 = r9 weight matrix list", "$ r4 = $ r3 get i1", "r2 = org apache mahout math matrix $ r4", "r10 = org apache mahout classifier mlp neural network r0", "$ r6 = r10 weight matrix list", "$ r5 = r1 [ i1 ]", "$ r7 = r2 plus $ r5", "$ r6 set i1 $ r7", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com google common collect list new array list", "r4 = org apache mahout classifier mlp neural network r0", "r4 weight matrix list = $ r2", "r5 = org apache mahout classifier mlp neural network r0", "$ r3 = r5 weight matrix list", "java util collection add all $ r3 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache mahout classifier mlp neural network r0", "r2 = r3 train by instance r1", "r4 = org apache mahout classifier mlp neural network r0", "r4 update weight matrix r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = new org apache mahout math dense vector", "r16 = org apache mahout classifier sgd gradient machine r0", "$ i0 = r16 num hidden", "specialinvoke r15 < init > $ i0", "i2 = 0", "label r17 = org apache mahout classifier sgd gradient machine r0", "$ i1 = r17 num hidden", "if i2 > = $ i1 goto label2", "r18 = org apache mahout classifier sgd gradient machine r0", "$ r13 = r18 hidden weight", "$ r14 = $ r13 [ i2 ]", "$ d0 = $ r14 dot r1", "r15 set quick i2 $ d0", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label r19 = org apache mahout classifier sgd gradient machine r0", "$ r5 = r19 hidden bias", "$ r4 = org apache mahout math function function plus", "r15 assign $ r5 $ r4", "$ r7 = org apache mahout math function function min 40 0", "$ r8 = r15 assign $ r7", "$ r9 = org apache mahout math function function max -40 0", "$ r8 assign $ r9", "$ r11 = org apache mahout math function function sigmoid", "r15 assign $ r11", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ parameter0", "d1 = 0 0", "r1 = r0 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label4", "$ r3 = r1 next", "r2 = org apache mahout math vector $ r3", "com google common base precondition check not null r2", "$ z1 = r2 instanceof org apache mahout math weight vector", "if $ z1 == 0 goto label2", "$ r5 = org apache mahout math weight vector r2", "$ d0 = $ r5 get weight", "d1 = d1 + $ d0", "goto label3", "label goto label1", "if $ z1 == 0 goto label2", "label d1 = d1 + 1 0", "if $ z0 == 0 goto label4", "label return d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org apache mahout cluster lda cvb in memory collapse variational bayes0 r0", "r1 train document 0 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r3 = new org apache mahout cluster stream mapreduce stream k mean utils m r $ 1", "specialinvoke r3 < init >", "r4 = com google common base function r3", "$ r2 = com google common collect iterables transform r0 r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = new org apache common cli2 builder default option builder", "specialinvoke $ r0 < init >", "$ r1 = $ r0 with long name \\ `` analyzer name\\ ``", "$ r2 = $ r1 with required 0", "$ r3 = $ r2 with description \\ `` if present the name of a lucene analyzer class to use\\ ``", "$ r4 = new org apache common cli2 builder argument builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 with name \\ `` analyzer name\\ ``", "$ r6 = class \\ `` lorg apache lucene analysis standard standard analyzer \\ ``", "$ r7 = $ r6 get name", "$ r8 = $ r5 with default $ r7", "$ r9 = $ r8 with minimum 1", "$ r10 = $ r9 with maximum 1", "$ r11 = $ r10 create", "$ r12 = $ r3 with argument $ r11", "$ r13 = $ r12 with short name \\ `` an\\ ``", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["$ r0 = new org apache common cli2 builder default option builder", "specialinvoke $ r0 < init >", "$ r1 = $ r0 with long name \\ `` threshold\\ ``", "$ r2 = $ r1 with required 0", "$ r3 = $ r2 with short name \\ `` t\\ ``", "$ r4 = new org apache common cli2 builder argument builder", "specialinvoke $ r4 < init >", "$ r5 = $ r4 with name \\ `` threshold\\ ``", "$ r6 = $ r5 with default \\ `` 0\\ ``", "$ r7 = $ r6 with minimum 1", "$ r8 = $ r7 with maximum 1", "$ r9 = $ r8 create", "$ r10 = $ r3 with argument $ r9", "$ r11 = $ r10 with description \\ `` the pdf threshold use for cluster determination default be 0\\ ``", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["$ r0 = new org apache common cli2 builder default option builder", "specialinvoke $ r0 < init >", "$ r1 = $ r0 with long name \\ `` outlier threshold\\ ``", "$ r2 = $ r1 with required 0", "$ r3 = new org apache common cli2 builder argument builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 with name \\ `` outlier threshold\\ ``", "$ r5 = $ r4 with minimum 1", "$ r6 = $ r5 with maximum 1", "$ r7 = $ r6 create", "$ r8 = $ r2 with argument $ r7", "$ r9 = $ r8 with description \\ `` outlier threshold value\\ ``", "$ r10 = $ r9 with short name \\ `` outlier threshold\\ ``", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org apache mahout ep state r0", "$ r3 = r5 params", "r6 = org apache mahout ep state r0", "$ r2 = r6 params", "$ i0 = lengthof $ r2", "r1 = java util array copy of $ r3 $ i0", "i2 = 0", "label r7 = org apache mahout ep state r0", "$ r4 = r7 params", "$ i1 = lengthof $ r4", "if i2 > = $ i1 goto label2", "r8 = org apache mahout ep state r0", "$ d0 = r8 get i2", "r1 [ i2 ] = $ d0", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = com google common collect list new array list", "i3 = 0", "label r7 = org apache mahout fpm pfpgrowth fpgrowth2 f p tree r0", "$ r2 = r7 attr count list", "$ i0 = $ r2 size", "if i3 > = $ i0 goto label3", "r8 = org apache mahout fpm pfpgrowth fpgrowth2 f p tree r0", "$ r5 = r8 attr count list", "$ l1 = $ r5 get i3", "$ b2 = $ l1 cmp 0l", "if $ b2 < = 0 goto label2", "$ r6 = java lang integer value of i3", "r1 add $ r6", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label3", "label r9 = org apache mahout fpm pfpgrowth fpgrowth2 f p tree r0", "$ r3 = r9 attr comparator", "r10 = java util comparator $ r3", "$ r4 = java util collection reverse order r10", "java util collection sort r1 $ r4", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache mahout math hadoop stochasticsvd s s v d solver r0", "r1 compute v = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache mahout math hadoop stochasticsvd s s v d solver r0", "r1 min split size = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "$ l2 = org apache mahout math murmur hash hash64 a r0 i0", "$ l3 = long i1", "l7 = $ l2 % $ l3", "$ b4 = l7 cmp 0l", "if $ b4 > = 0 goto label1", "$ l6 = long i1", "l7 = l7 + $ l6", "label $ i5 = int l7", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "d0 = @ parameter1", "r2 = @ parameter2", "$ r3 = new java lang unsupported operation exception", "specialinvoke $ r3 < init > \\ `` add to vector be not support for interaction vector encoder\\ ``", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new org apache mahout math dense vector", "r6 = org apache mahout math abstract matrix r0", "$ i1 = r6 num row", "specialinvoke r5 < init > $ i1", "r7 = org apache mahout math abstract matrix r0", "i0 = r7 num row", "i2 = 0", "label if i2 > = i0 goto label2", "r8 = org apache mahout math abstract matrix r0", "$ r4 = r8 view row i2", "$ d0 = r1 apply $ r4", "r9 = org apache mahout math vector r5", "r9 set i2 $ d0", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label2", "label r10 = org apache mahout math vector r5", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache mahout math matrix vector view", "specialinvoke r2 < init > r0 0 0 1 1", "r3 = org apache mahout math vector r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ d2 = java lang math ab d0", "$ d3 = java lang math ab d1", "$ b0 = $ d2 cmpl $ d3", "if $ b0 < = 0 goto label1", "d12 = d1 d0", "$ d8 = java lang math ab d0", "$ d9 = d12 * d12", "$ d10 = 1 0 + $ d9", "$ d11 = java lang math sqrt $ d10", "d13 = $ d8 * $ d11", "goto label3", "label return d13", "if $ b0 < = 0 goto label1", "label $ b1 = d1 cmpl 0 0", "if $ b1 == 0 goto label2", "d14 = d0 d1", "$ d4 = java lang math ab d1", "$ d5 = d14 * d14", "$ d6 = 1 0 + $ d5", "$ d7 = java lang math sqrt $ d6", "d13 = $ d4 * $ d7", "if $ b1 == 0 goto label2", "label d13 = 0 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r1 = @ parameter0", "i0 = @ parameter1", "$ i1 = lengthof r1", "if $ i1 < = i0 goto label1", "r0 = r1", "r1 = newarray boolean [ i0 ]", "java lang system arraycopy r0 0 r1 0 i0", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init > \\ `` default operation\\ ``", "throw $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "$ d1 = 1 0 d0", "$ r0 = org apache mahout math function function mult $ d1", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["d0 = @ parameter0", "r1 = new org apache mahout math function function $ 61", "specialinvoke r1 < init > d0", "r2 = org apache mahout math function double procedure r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["d0 = @ parameter0", "r1 = new org apache mahout math function function $ 70", "specialinvoke r1 < init > d0", "r2 = org apache mahout math function double function r1", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r1 = org apache mahout math jet random uniform r0", "$ d1 = r1 min", "$ b0 = d0 cmpg $ d1", "if $ b0 > 0 goto label1", "return 0 0", "if $ b0 > 0 goto label1", "label r2 = org apache mahout math jet random uniform r0", "$ d2 = r2 max", "$ b1 = d0 cmpl $ d2", "if $ b1 < 0 goto label2", "return 1 0", "if $ b1 < 0 goto label2", "label r3 = org apache mahout math jet random uniform r0", "$ d3 = r3 min", "$ d7 = d0 - $ d3", "r4 = org apache mahout math jet random uniform r0", "$ d5 = r4 max", "r5 = org apache mahout math jet random uniform r0", "$ d4 = r5 min", "$ d6 = $ d5 - $ d4", "$ d8 = $ d7 $ d6", "return $ d8"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "d1 = @ parameter1", "$ b0 = d1 cmpg d0", "if $ b0 > = 0 goto label1", "r1 = org apache mahout math jet random uniform r0", "r1 set state d1 d0", "return", "if $ b0 > = 0 goto label1", "label r2 = org apache mahout math jet random uniform r0", "r2 min = d0", "r3 = org apache mahout math jet random uniform r0", "r3 max = d1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ b0 = d1 cmpg 0 0", "if $ b0 < = 0 goto label1", "$ b1 = d0 cmpg 0 0", "if $ b1 > 0 goto label2", "label return 0 0", "if $ b1 > 0 goto label2", "label $ b2 = d1 cmpl 1 0", "if $ b2 < = 0 goto label3", "$ b5 = d1 cmpl d0", "if $ b5 < = 0 goto label3", "$ d10 = org apache mahout math jet stat gamma incomplete gamma complement d0 d1", "$ d11 = 1 0 - $ d10", "return $ d11", "if $ b5 < = 0 goto label3", "label $ d2 = java lang math log d1", "$ d3 = d0 * $ d2", "$ d4 = $ d3 - d1", "$ d5 = org apache mahout math jet stat gamma log gamma d0", "d12 = $ d4 - $ d5", "$ b3 = d12 cmpg -709 782712893384", "if $ b3 > = 0 goto label4", "return 0 0", "if $ b3 > = 0 goto label4", "label d13 = java lang math exp d12", "d14 = d0", "d15 = 1 0", "d16 = 1 0", "label d14 = d14 + 1 0", "$ d6 = d1 d14", "d15 = d15 * $ d6", "d16 = d16 + d15", "$ d7 = d15 d16", "$ b4 = $ d7 cmpl 1 1102230246251565e-16", "if $ b4 > 0 goto label5", "$ d8 = d16 * d13", "$ d9 = $ d8 d0", "return $ d9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], []]}
{"nodes": ["d0 = @ parameter0", "d1 = @ parameter1", "$ b0 = d1 cmpg 0 0", "if $ b0 < = 0 goto label1", "$ b1 = d0 cmpg 0 0", "if $ b1 > 0 goto label2", "label return 1 0", "if $ b1 > 0 goto label2", "label $ b2 = d1 cmpg 1 0", "if $ b2 < 0 goto label3", "$ b3 = d1 cmpg d0", "if $ b3 > = 0 goto label4", "label $ d6 = org apache mahout math jet stat gamma incomplete gamma d0 d1", "$ d7 = 1 0 - $ d6", "return $ d7", "if $ b3 > = 0 goto label4", "label $ d8 = java lang math log d1", "$ d9 = d0 * $ d8", "$ d10 = $ d9 - d1", "$ d11 = org apache mahout math jet stat gamma log gamma d0", "d21 = $ d10 - $ d11", "$ b4 = d21 cmpg -709 782712893384", "if $ b4 > = 0 goto label5", "return 0 0", "if $ b4 > = 0 goto label5", "label d22 = java lang math exp d21", "d23 = 1 0 - d0", "$ d12 = d1 + d23", "d24 = $ d12 + 1 0", "d25 = 0 0", "d26 = 1 0", "d27 = d1", "d28 = d1 + 1 0", "d29 = d24 * d1", "d30 = d28 d29", "label d25 = d25 + 1 0", "d23 = d23 + 1 0", "d24 = d24 + 2 0", "d2 = d23 * d25", "$ d14 = d28 * d24", "$ d13 = d26 * d2", "d3 = $ d14 - $ d13", "$ d16 = d29 * d24", "$ d15 = d27 * d2", "d4 = $ d16 - $ d15", "$ b5 = d4 cmpl 0 0", "if $ b5 == 0 goto label7", "d5 = d3 d4", "$ d19 = d30 - d5", "$ d20 = $ d19 d5", "d31 = java lang math ab $ d20", "d30 = d5", "goto label8", "label d26 = d28", "d28 = d3", "d27 = d29", "d29 = d4", "$ d17 = java lang math ab d3", "$ b6 = $ d17 cmpl 4 503599627370496e15", "if $ b6 < = 0 goto label9", "d26 = d26 * 2 220446049250313e-16", "d28 = d3 * 2 220446049250313e-16", "d27 = d27 * 2 220446049250313e-16", "d29 = d4 * 2 220446049250313e-16", "label $ b7 = d31 cmpl 1 1102230246251565e-16", "if $ b7 > 0 goto label6", "$ d18 = d30 * d22", "return $ d18", "if $ b5 == 0 goto label7", "label d31 = 1 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [], [69], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "d0 = @ parameter2", "$ b2 = d0 cmpg 0 0", "if $ b2 < 0 goto label1", "$ b3 = d0 cmpl 1 0", "if $ b3 < = 0 goto label2", "label $ r0 = new java lang illegal argument exception", "specialinvoke $ r0 < init >", "throw $ r0", "if $ b3 < = 0 goto label2", "label if i0 > = 0 goto label3", "return 0 0", "label if i0 > = 0 goto label3", "label $ d2 = double i1", "$ i4 = i0 + 1", "$ d1 = double $ i4", "$ d3 = org apache mahout math jet stat gamma incomplete beta $ d2 $ d1 d0", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 size", "$ i1 = $ i0 - 1", "r2 = org apache mahout math list abstract byte list r0", "r2 add all of from to r1 0 $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "b1 = @ parameter1", "r1 = org apache mahout math list abstract byte list r0", "r1 before insert dummy i0 1", "r2 = org apache mahout math list abstract byte list r0", "r2 set i0 b1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "r1 = org apache mahout math list abstract byte list r0", "$ i1 = r1 size", "$ i2 = $ i1 - 1", "r2 = org apache mahout math list abstract byte list r0", "$ i3 = r2 index of from to b0 0 $ i2", "if $ i3 < 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i3 < 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r4 = org apache mahout math list abstract byte list r0", "$ i3 = r4 size", "org apache mahout math list abstract byte list check range from to i0 i1 $ i3", "$ i4 = i1 - i0", "i2 = $ i4 + 1", "r3 = new org apache mahout math list byte array list", "specialinvoke r3 < init > i2", "r5 = org apache mahout math list abstract byte list r0", "r3 add all of from to r5 i0 i1", "r6 = org apache mahout math list abstract byte list r3", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "i2 = @ parameter2", "$ i3 = i0 - 1", "if i1 ! = $ i3 goto label1", "return", "if i1 ! = $ i3 goto label1", "label if i0 < 0 goto label2", "if i0 > i1 goto label2", "if i1 < i2 goto label3", "label $ r0 = new java lang index out of bound exception", "$ r1 = new java lang string builder", "specialinvoke $ r1 < init >", "$ r2 = $ r1 append \\ `` from \\ ``", "$ r3 = $ r2 append i0", "$ r4 = $ r3 append \\", "$ r5 = $ r4 append i1", "$ r6 = $ r5 append \\", "$ r7 = $ r6 append i2", "$ r8 = $ r7 to string", "specialinvoke $ r0 < init > $ r8", "throw $ r0", "if i1 < i2 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ i1 = r1 size", "r2 = org apache mahout math list abstract object list r0", "r2 before insert dummy i0 $ i1", "r3 = org apache mahout math list abstract object list r0", "r3 replace from with i0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache mahout math list byte array list r0", "$ r1 = r2 element", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new org apache mahout math list byte array list", "r4 = org apache mahout math map abstract byte byte map r0", "$ i0 = r4 size", "specialinvoke r3 < init > $ i0", "r5 = org apache mahout math map abstract byte byte map r0", "r5 value r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "b0 = @ parameter0", "b4 = @ parameter1", "b1 = @ parameter2", "r1 = org apache mahout math map abstract byte byte map r0", "z0 = r1 contain key b0", "if z0 == 0 goto label1", "r2 = org apache mahout math map abstract byte byte map r0", "$ b2 = r2 get b0", "$ i3 = $ b2 + b1", "b4 = byte $ i3", "r3 = org apache mahout math map abstract byte byte map r0", "r3 put b0 b4", "goto label2", "label return b4", "if z0 == 0 goto label1", "label r4 = org apache mahout math map abstract byte byte map r0", "r4 put b0 b4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["i0 = @ parameter0", "r3 = new org apache mahout math matrix $ 3", "specialinvoke r3 < init >", "$ r1 = org apache mahout math matrix uniform symmetric generator i0", "r4 = org apache mahout math function double function r3", "$ r2 = org apache mahout math function function chain r4 $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = new org apache mahout math random access sparse vector $ non zero iterator", "r3 = org apache mahout math random access sparse vector r0", "specialinvoke r2 < init > r3 null", "r4 = java util iterator r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "d0 = @ parameter1", "d1 = @ parameter2", "$ i3 = i0 + 1", "$ i1 = 2 * i0", "$ d3 = double $ i1", "$ d2 = d0 + d1", "$ d4 = $ d3 $ d2", "$ i2 = int $ d4", "$ i4 = java lang math max $ i3 $ i2", "r1 = org apache mahout math set abstract set r0", "$ i5 = r1 next prime $ i4", "return $ i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r5 = org apache mahout math solver eigen decomposition r0", "$ r1 = r5 v", "$ r2 = $ r1 like", "r6 = org apache mahout math solver eigen decomposition r0", "$ r3 = r6 v", "$ r4 = $ r2 assign $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org apache mahout math solver eigen decomposition r0", "$ r1 = r2 d", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "com google common base precondition check not null r0", "$ i2 = lengthof r0", "org apache mahout math sort check bound $ i2 i0 i1", "org apache mahout math sort quick sort0 i0 i1 r0 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "i2 = -1", "d1 = #infinity", "i3 = 0", "label $ r4 = org apache mahout math vector binary aggregate operation", "$ i0 = lengthof $ r4", "if i3 > = $ i0 goto label3", "$ r7 = org apache mahout math vector binary aggregate operation", "$ r8 = $ r7 [ i3 ]", "$ z0 = $ r8 be valid r0 r1 r2 r3", "if $ z0 == 0 goto label2", "$ r9 = org apache mahout math vector binary aggregate operation", "$ r10 = $ r9 [ i3 ]", "d0 = $ r10 estimate cost r0 r1 r2 r3", "$ b1 = d0 cmpg d1", "if $ b1 > = 0 goto label2", "d1 = d0", "i2 = i3", "label i3 = i3 + 1", "goto label1", "if i3 > = $ i0 goto label3", "label $ r5 = org apache mahout math vector binary aggregate operation", "$ r6 = $ r5 [ i2 ]", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = org apache mahout utils vector arff a r f f vector iterable r0", "$ r1 = r2 model", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com sun mail imap i m a p message r0", "r3 check expunge", "r4 = com sun mail imap i m a p message r0", "specialinvoke r4 load header", "$ r2 = specialinvoke r0 get match header r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = com sun mail imap i m a p store r0", "r2 = specialinvoke r7 get namespaces", "if r2 == null goto label1", "$ r4 = r2 other user", "if $ r4 ! = null goto label2", "label $ r3 = specialinvoke r0 get user namespaces r1", "return $ r3", "if $ r4 ! = null goto label2", "label $ r5 = r2 other user", "r8 = com sun mail imap i m a p store r0", "$ r6 = specialinvoke r8 namespace to folders $ r5 r1", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r20 = com sun mail imap i m a p store r0", "specialinvoke r20 check connect", "r12 = null", "label r21 = com sun mail imap i m a p store r0", "r12 = specialinvoke r21 get store protocol", "r13 = r12 get quota root r1", "label goto label10", "label r29 = com sun mail imap i m a p store r0", "specialinvoke r29 release store protocol r12", "goto label03", "label goto label09", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r1 = com sun mail imap protocol i m a p protocol r0", "$ z0 = r1 rev1", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ z0 = com sun mail util log log manager property $ assertion disable", "if $ z0 ! = 0 goto label1", "r3 = new java lang assertion error", "r4 = com sun mail util log log manager property r0", "$ r2 = r4 prefix", "$ i1 = $ r2 hash code", "specialinvoke r3 < init > $ i1", "throw r3", "if $ z0 ! = 0 goto label1", "label $ i0 = specialinvoke r0 hash code", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r16 = new org apache lucene search boolean query $ builder", "specialinvoke r16 < init >", "r2 = r0 get term array", "i0 = lengthof r2", "i2 = 0", "label if i2 > = i0 goto label4", "r3 = r2 [ i2 ]", "r17 = new org apache lucene search boolean query $ builder", "specialinvoke r17 < init >", "i1 = lengthof r3", "i3 = 0", "label if i3 > = i1 goto label3", "r6 = r3 [ i3 ]", "r18 = new org apache lucene search term query", "specialinvoke r18 < init > r6", "$ r14 = org apache lucene search boolean clause $ occur should", "r19 = org apache lucene search query r18", "r17 add r19 $ r14", "i3 = i3 + 1", "goto label2", "label if i3 > = i1 goto label3", "label $ r10 = r17 build", "$ r11 = org apache lucene search boolean clause $ occur filter", "r20 = org apache lucene search query $ r10", "r16 add r20 $ r11", "i2 = i2 + 1", "goto label1", "label if i2 > = i0 goto label4", "label $ r8 = r16 build", "r21 = org apache lucene search query $ r8", "return r21"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model activation o s r0", "$ r1 = r2 family", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model activation o s r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model build base r0", "r2 filter = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model build base r0", "r2 test resource = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model ci management r0", "r2 url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model contributor r0", "$ r1 = r2 email", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model dependency r0", "r2 type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model distribution management r0", "$ r1 = r2 relocation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model distribution management r0", "$ r1 = r2 snapshot repository", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model issue management r0", "r2 url = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 group id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 model version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 organization", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 packaging", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 group id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model model r0", "r2 license = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model model base r0", "$ r1 = r2 distribution management", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model plugin r0", "r2 goal = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model report plugin r0", "$ r1 = r2 configuration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven model report plugin r0", "r2 report set = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven model repository policy r0", "$ z0 = r1 enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model resource r0", "$ r1 = r2 target path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven model resource r0", "$ z0 = r1 filter", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven model site r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven profile activation r0", "r2 property = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven profile activation file r0", "$ r1 = r2 miss", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven profile activation o s r0", "$ r1 = r2 family", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven profile profile r0", "r2 plugin repository = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven profile profile r0", "r2 repository = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven profile repository base r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven profile repository base r0", "r2 layout = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven artifact repository metadata metadata r0", "r2 group id = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven artifact repository metadata plugin r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting mirror r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting mirror r0", "r2 mirror of = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting proxy r0", "$ r1 = r2 protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting proxy r0", "r2 username = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting server r0", "$ r1 = r2 configuration", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache maven setting server r0", "$ r1 = r2 password", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache maven setting server r0", "r2 directory permission = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = com codahale metric clock default", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com codahale metric ewma r0", "$ d0 = r2 rate", "$ l0 = r1 to nanos 1l", "$ d1 = double $ l0", "$ d2 = $ d0 * $ d1", "return $ d2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r3 = com codahale metric jmx reporter r0", "$ r2 = r3 registry", "r4 = com codahale metric jmx reporter r0", "$ r1 = r4 listener", "r5 = com codahale metric metric registry listener $ r1", "$ r2 add listener r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 get name", "$ r3 = com codahale metric metric registry name $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com codahale metric snapshot r0", "$ d0 = r1 get value 0 95", "return $ d0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io micrometer core instrument distribution distribution statistic config r0", "$ r1 = r2 percentile", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io micrometer core instrument meter registry r0", "$ r1 = r2 close", "$ z0 = $ r1 get", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ i1 = r0 length", "if $ i1 < = i0 goto label1", "$ r1 = r0 substring 0 i0", "return $ r1", "if $ i1 < = i0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io micrometer core instrument abstract timer builder r0", "$ r2 = r3 service level objective r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = java time zone date time from r1", "$ r4 = $ r3 with nano 0", "$ r5 = $ r4 plus second 1l", "r33 = $ r5 with nano 0", "label r35 = io micronaut schedule cron cron expression r0", "$ r34 = r35 second field", "$ i3 = r33 get second", "$ z5 = $ r34 match $ i3", "if $ z5 == 0 goto label02", "goto label03", "label r36 = io micronaut schedule cron cron expression r0", "$ r7 = r36 minute field", "$ i0 = r33 get minute", "$ z0 = $ r7 match $ i0", "if $ z0 == 0 goto label04", "goto label05", "label r37 = io micronaut schedule cron cron expression r0", "$ r10 = r37 hour field", "$ i1 = r33 get hour", "$ z1 = $ r10 match $ i1", "if $ z1 == 0 goto label06", "goto label07", "label r38 = io micronaut schedule cron cron expression r0", "$ r14 = r38 day of month field", "$ r15 = r33 to local date", "$ z2 = $ r14 match $ r15", "if $ z2 == 0 goto label08", "goto label09", "label r39 = io micronaut schedule cron cron expression r0", "$ r20 = r39 month field", "$ r21 = r33 get month", "$ i2 = $ r21 get value", "$ z3 = $ r20 match $ i2", "if $ z3 == 0 goto label10", "goto label11", "label r40 = io micronaut schedule cron cron expression r0", "$ r27 = r40 day of week field", "$ r28 = r33 to local date", "$ z4 = $ r27 match $ r28", "if $ z4 == 0 goto label12", "goto label13", "label return r33", "if $ z4 == 0 goto label12", "label $ r29 = r33 plus day 1l", "$ r30 = $ r29 with hour 0", "$ r31 = $ r30 with minute 0", "$ r32 = $ r31 with second 0", "r33 = $ r32 with nano 0", "io micronaut schedule cron cron expression check if date time barrier be reach r33 r2", "goto label01", "if $ z3 == 0 goto label10", "label $ r22 = r33 plus month 1l", "$ r23 = $ r22 with day of month 1", "$ r24 = $ r23 with hour 0", "$ r25 = $ r24 with minute 0", "$ r26 = $ r25 with second 0", "r33 = $ r26 with nano 0", "if $ z2 == 0 goto label08", "label $ r16 = r33 plus day 1l", "$ r17 = $ r16 with hour 0", "$ r18 = $ r17 with minute 0", "$ r19 = $ r18 with second 0", "r33 = $ r19 with nano 0", "if $ z1 == 0 goto label06", "label $ r11 = r33 plus hour 1l", "$ r12 = $ r11 with minute 0", "$ r13 = $ r12 with second 0", "r33 = $ r13 with nano 0", "if $ z0 == 0 goto label04", "label $ r8 = r33 plus minute 1l", "$ r9 = $ r8 with second 0", "r33 = $ r9 with nano 0", "if $ z5 == 0 goto label02", "label $ r6 = r33 plus second 1l", "r33 = $ r6 with nano 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [43], [], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = io micronaut schedule io watch default watch thread r0", "$ r6 = r8 watch service", "$ r2 = newarray java nio file watch event $ kind [ 3 ]", "$ r3 = java nio file standard watch event kind entry_create", "$ r2 [ 0 ] = $ r3", "$ r4 = java nio file standard watch event kinds entry_delete", "$ r2 [ 1 ] = $ r4", "$ r5 = java nio file standard watch event kinds entry_modify", "$ r2 [ 2 ] = $ r5", "$ r7 = r1 register $ r6 $ r2", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut schedule io watch file watch configuration r0", "$ r1 = r2 check interval", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut core annotation annotation value r0", "$ r1 = r2 string value \\ `` value\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "io micronaut core util argument utils require non null \\ `` annotation\\", "$ r3 = new io micronaut core annotation annotation value builder", "specialinvoke $ r3 < init > r0 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = io micronaut core annotation annotation value builder r0", "$ r2 = r3 member \\ `` value\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = io micronaut core annotation annotation value builder r0", "$ r1 = r2 member \\ `` value\\", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r5 = io micronaut core annotation annotation value builder r0", "$ r2 = r5 value", "$ r3 = java lang boolean value of z0", "$ r2 put r1 $ r3", "r6 = io micronaut core annotation annotation value builder r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io micronaut core graal automatic feature utils find class r0 r1", "$ r3 = automatic feature utils $ register for reflective instantiation__7 bootstrap $", "$ r2 if present $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = io micronaut core graal automatic feature utils find class r0 r1", "$ r3 = automatic feature utils $ register all for runtime reflection__11 bootstrap $", "$ r2 if present $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "io micronaut core util argument utils require non null \\ `` path\\", "r8 = io micronaut core io resource resolver r0", "r2 = r8 get support loader r1", "$ z0 = r2 be present", "if $ z0 == 0 goto label1", "$ r5 = r2 get", "$ r6 = io micronaut core io resource loader $ r5", "$ r7 = $ r6 get resource r1", "return $ r7", "if $ z0 == 0 goto label1", "label $ r4 = java util optional empty", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = io micronaut core order order util comparator", "$ r2 = r0 sort $ r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r1 = @ parameter0", "r2 = r1 replace 47 46", "$ z0 = r2 end with \\ `` class\\ ``", "if $ z0 == 0 goto label1", "$ i0 = r2 length", "$ r0 = \\ `` class\\ ``", "$ i1 = $ r0 length", "$ i2 = $ i0 - $ i1", "r2 = r2 substring 0 $ i2", "label return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new io micronaut core util argument utils $ argument check", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "i0 = lengthof r1", "if i0 ! = 0 goto label1", "return r0", "if i0 ! = 0 goto label1", "label i1 = lengthof r0", "if i1 ! = 0 goto label2", "return r1", "if i1 ! = 0 goto label2", "label $ i2 = i1 + i0", "r2 = newarray byte [ $ i2 ]", "java lang system arraycopy r0 0 r2 0 i1", "java lang system arraycopy r1 0 r2 i1 i0", "return r2"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = io micronaut core util array utils to string \\", "return $ r2"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get previous", "if $ r2 ! = null goto label1", "$ r3 = r1 get next", "if $ r3 ! = null goto label1", "r5 = io micronaut core util clhm link deque r0", "$ r4 = r5 first", "if r1 ! = $ r4 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if r1 ! = $ r4 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 instanceof java util list", "if $ z0 == 0 goto label2", "r7 = java util list r0", "i1 = r7 size", "if i1 < = 0 goto label1", "$ i0 = i1 - 1", "$ r6 = r7 get $ i0", "return $ r6", "if i1 < = 0 goto label1", "label return null", "if $ z0 == 0 goto label2", "label $ z1 = r0 instanceof java util deque", "if $ z1 == 0 goto label4", "$ r4 = java util deque r0", "r8 = $ r4 descend iterator", "$ z5 = r8 have next", "if $ z5 == 0 goto label3", "$ r5 = r8 next", "return $ r5", "if $ z5 == 0 goto label3", "label return null", "if $ z1 == 0 goto label4", "label $ z2 = r0 instanceof java util navigable set", "if $ z2 == 0 goto label6", "$ r2 = java util navigable set r0", "r9 = $ r2 descend iterator", "$ z4 = r9 have next", "if $ z4 == 0 goto label5", "$ r3 = r9 next", "return $ r3", "if $ z4 == 0 goto label5", "label return null", "if $ z2 == 0 goto label6", "label r10 = null", "r11 = r0 iterator", "label $ z3 = r11 have next", "if $ z3 == 0 goto label8", "r1 = r11 next", "r10 = r1", "goto label7", "if $ z3 == 0 goto label8", "label return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], [40], [], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut http codec codec configuration r0", "r2 additional type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut http simple simple http response r0", "$ r1 = r2 cooky", "r3 = io micronaut http cookie cookies $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut http client http client configuration r0", "r2 proxy address = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r4 = new io netty channel nio nio event loop group", "specialinvoke r4 < init > i0", "$ r3 = io micronaut http netty channel nio event loop group factory with io ratio r4 r1", "r5 = io netty channel event loop group $ r3", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut http netty netty mutable http response r0", "$ r1 = r2 http response status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = io micronaut core async publisher publisher convert publisher r2 class \\ `` lio reactivex flowable \\ ``", "r3 = io reactivex flowable $ r4", "$ r5 = r1 channel", "$ r6 = $ r5 event loop", "r9 = java util concurrent executor $ r6", "$ r7 = io reactivex scheduler scheduler from r9", "$ r8 = r3 subscribe on $ r7", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r2 = io micronaut http server cors cors origin configuration r0", "r2 allow header = r1", "label return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut http server http server configuration r0", "r2 cors = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut http server type file stream file r0", "r2 attachment name = r1", "r3 = io micronaut http server type file stream file r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut http server netty configuration netty http server configuration r0", "r2 access logger = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["$ r0 = io micronaut http server netty handler accesslog element cooky element response_cookies_element", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = r1 pipeline", "$ r4 = $ r3 get class \\ `` lio netty handler ssl ssl handler \\ ``", "if $ r4 == null goto label1", "$ z1 = 1", "goto label2", "label r16 = new java lang string builder", "specialinvoke r16 < init >", "if $ z1 == 0 goto label3", "$ r15 = \\ `` wss \\ ``", "goto label4", "label $ r6 = r16 append $ r15", "$ r7 = r2 get header", "$ r8 = io netty handler codec http http header name host", "r17 = java lang char sequence $ r8", "$ r9 = $ r7 get r17", "$ r10 = java lang string $ r9", "$ r11 = $ r6 append $ r10", "$ r12 = r2 get uri", "$ r13 = $ r11 append $ r12", "$ r14 = $ r13 to string", "return $ r14", "if $ z1 == 0 goto label3", "label $ r15 = \\ `` ws \\ ``", "if $ r4 == null goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = io micronaut context default bean context r0", "$ r4 = r8 get bean registration r1 r2 r3", "$ r5 = $ r4 stream", "$ r6 = default bean context $ get bean__13 bootstrap $", "$ r7 = $ r5 map $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "io micronaut core util argument utils require non null \\ `` bean type\\", "r17 = io micronaut context default bean context r0", "$ r5 = r17 this interfaces", "$ z0 = $ r5 contain r2", "if $ z0 == 0 goto label1", "$ r8 = java util optional of r0", "return $ r8", "if $ z0 == 0 goto label1", "label r18 = io micronaut context default bean context r0", "r15 = specialinvoke r18 get bean internal r1 r2 r3 1 0", "if r15 ! = null goto label3", "$ r7 = java util optional empty", "label return $ r7", "if r15 ! = null goto label3", "label $ r6 = java util optional of r15", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new io micronaut context provider utils $ memoizing provider", "specialinvoke r2 < init > r0", "r3 = javax inject provider r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = io micronaut core util string utils be not empty r1", "if $ z0 == 0 goto label1", "$ z1 = io micronaut core util string utils be not empty r2", "if $ z1 == 0 goto label1", "r8 = io micronaut context static message source r0", "$ r4 = r8 message map", "r7 = new io micronaut context abstract message source $ message key", "$ r5 = java util locale get default", "specialinvoke r7 < init > r0 $ r5 r1", "$ r4 put r7 r2", "label r9 = io micronaut context static message source r0", "return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = io micronaut inject annotation abstract annotation metadata builder annotation_mappers", "$ r3 = $ r2 get r1", "$ r4 = java util list $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r9 = @ parameter1", "$ z0 = r9 instanceof io micronaut inject annotation annotation metadata hierarchy", "if $ z0 == 0 goto label1", "$ r8 = io micronaut inject annotation annotation metadata hierarchy r9", "r9 = $ r8 get declare metadata", "label $ z1 = r0 instanceof io micronaut inject annotation default annotation metadata", "if $ z1 == 0 goto label4", "$ z2 = r9 instanceof io micronaut inject annotation default annotation metadata", "if $ z2 == 0 goto label4", "$ r2 = io micronaut inject annotation default annotation metadata r0", "r1 = $ r2 annotation default value", "if r1 == null goto label3", "$ r7 = io micronaut inject annotation default annotation metadata r9", "r10 = $ r7 annotation default value", "if r10 == null goto label2", "r1 put all r10", "label goto label4", "label return", "if r1 == null goto label3", "label $ r3 = io micronaut inject annotation default annotation metadata r9", "r11 = $ r3 annotation default value", "if r11 == null goto label4", "$ r4 = io micronaut inject annotation default annotation metadata r0", "$ r4 get class", "$ r6 = default annotation metadata $ add default annotation values__6 bootstrap $ $ r4", "r11 for each $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io micronaut web router version resolution header version resolver configuration r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io micronaut discovery registration registration configuration r0", "r1 prefer ip address = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "label $ r3 = class \\ `` ljava lang char sequence \\ ``", "$ r4 = r1 get type", "$ z0 = $ r3 be assignable from $ r4", "if $ z0 == 0 goto label3", "r25 = new java lang string", "r28 = io micronaut jackson codec jackson medium type codec r0", "$ r11 = r28 application configuration", "$ r12 = $ r11 get default charset", "specialinvoke r25 < init > r2 $ r12", "label return r25", "if $ z0 == 0 goto label3", "label $ z1 = r1 have type variable", "if $ z1 == 0 goto label5", "r29 = io micronaut jackson codec jackson medium type codec r0", "r23 = specialinvoke r29 construct java type r1", "r30 = io micronaut jackson codec jackson medium type codec r0", "$ r8 = r30 get object mapper", "$ r9 = $ r8 read value r2 r23", "label return $ r9", "if $ z1 == 0 goto label5", "label r31 = io micronaut jackson codec jackson medium type codec r0", "$ r5 = r31 get object mapper", "$ r6 = r1 get type", "$ r7 = $ r5 read value r2 $ r6", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = io micronaut jackson jackson configuration r0", "$ z0 = r1 always serialize error a list", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io micronaut jackson jackson configuration r0", "$ z0 = r1 trim string", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io micronaut jackson jackson configuration r0", "r1 always serialize error a list = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = io micronaut jackson jackson configuration r0", "r1 trim string = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r7 = io micronaut retry intercept simple retry r0", "$ r2 = r7 predicate", "$ z0 = $ r2 test r1", "if $ z0 ! = 0 goto label2", "label r8 = io micronaut retry intercept simple retry r0", "$ r3 = r8 attempt number", "$ i0 = $ r3 increment and get", "r9 = io micronaut retry intercept simple retry r0", "$ i1 = r9 max attempt", "$ i2 = $ i1 + 1", "if $ i0 > = $ i2 goto label4", "r10 = io micronaut retry intercept simple retry r0", "$ r4 = r10 max delay", "if $ r4 == null goto label3", "r11 = io micronaut retry intercept simple retry r0", "$ r5 = r11 overall delay", "$ l3 = $ r5 get", "r12 = io micronaut retry intercept simple retry r0", "$ r6 = r12 max delay", "$ l4 = $ r6 to millis", "$ b5 = $ l3 cmp $ l4", "if $ b5 > = 0 goto label4", "label $ z1 = 1", "goto label5", "label return $ z1", "if $ b5 > = 0 goto label4", "label $ z1 = 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = io micronaut test extension abstract micronaut extension r0", "$ r3 = r13 refresh scope", "if $ r3 == null goto label1", "r14 = io micronaut test extension abstract micronaut extension r0", "$ r4 = r14 old value", "$ z0 = $ r4 be empty", "if $ z0 ! = 0 goto label1", "r15 = io micronaut test extension abstract micronaut extension r0", "$ r6 = r15 test property", "r16 = io micronaut test extension abstract micronaut extension r0", "$ r5 = r16 old value", "$ r6 put all $ r5", "r17 = io micronaut test extension abstract micronaut extension r0", "$ r7 = r17 application context", "$ r8 = $ r7 get environment", "r2 = $ r8 refresh and diff", "r18 = io micronaut test extension abstract micronaut extension r0", "$ r10 = r18 refresh scope", "r12 = new io micronaut runtime context scope refresh refresh event", "specialinvoke r12 < init > r2", "$ r10 on refresh event r12", "label r19 = io micronaut test extension abstract micronaut extension r0", "$ r11 = r19 old value", "$ r11 clear", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = io micronaut validation validator extractor default value extractor r0", "$ r1 = r2 optional value extractor", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init >", "throw $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ i0 = r1 length", "if $ i0 < = 0 goto label1", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = $ r2 append r1", "$ r4 = $ r3 append \\ `` \\ ``", "$ r5 = r0 to string", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 append \\ `` \\ ``", "$ r8 = $ r7 to string", "goto label2", "label return $ r8", "if $ i0 < = 0 goto label1", "label $ r8 = r0 to string"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org mockito internal stubbing defaultanswers forward invocation", "specialinvoke r2 < init > r0", "r3 = org mockito stub answer r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new java util array list", "specialinvoke $ r2 < init >", "$ r3 = r0 get class", "$ r4 = $ r3 get declare field", "$ r5 = org mockito internal util reflection field instance field in r0 $ r4", "$ r2 add all $ r5", "$ r6 = new org mockito internal util reflection field $ instance field", "specialinvoke $ r6 < init > r0 $ r2", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mockito internal invocation finder all invocation finder find stubbings r1", "r6 = new org mockito internal junit unused stubbings finder $ 1", "r8 = org mockito internal junit unused stubbings finder r0", "specialinvoke r6 < init > r8", "r9 = org mockito internal util collection list util $ filter r6", "r3 = org mockito internal util collection list util filter r2 r9", "r7 = new org mockito internal junit unused stubbings", "specialinvoke r7 < init > r3", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org apache ibatis datasource pool pool data source r0", "r1 pool maximum checkout time = i0", "r2 = org apache ibatis datasource pool pool data source r0", "r2 force close all", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache ibatis io class loader wrapper r0", "$ r2 = r4 get class loader null", "r5 = org apache ibatis io class loader wrapper r0", "$ r3 = r5 get resource a stream r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache ibatis io resource charset", "if $ r1 ! = null goto label1", "$ r5 = new java io input stream reader", "$ r6 = org apache ibatis io resource get url a stream r0", "specialinvoke $ r5 < init > $ r6", "r7 = $ r5", "goto label2", "label return r7", "if $ r1 ! = null goto label1", "label $ r2 = new java io input stream reader", "$ r3 = org apache ibatis io resource get url a stream r0", "$ r4 = org apache ibatis io resource charset", "specialinvoke $ r2 < init > $ r3 $ r4", "r7 = $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache ibatis session configuration r0", "r2 default fetch size = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r22 = org apache ibatis session configuration r0", "specialinvoke r22 parse pending result map", "r23 = org apache ibatis session configuration r0", "$ r4 = r23 incomplete cache ref", "$ z0 = $ r4 be empty", "if $ z0 ! = 0 goto label05", "r24 = org apache ibatis session configuration r0", "$ r13 = r24 incomplete cache ref", "entermonitor $ r13", "label r25 = org apache ibatis session configuration r0", "$ r14 = r25 incomplete cache ref", "$ r15 = configuration $ lambda_build all statements_1__4 bootstrap $", "$ r14 remove if $ r15", "exitmonitor $ r13", "label goto label05", "label r26 = org apache ibatis session configuration r0", "$ r5 = r26 incomplete statement", "$ z1 = $ r5 be empty", "if $ z1 ! = 0 goto label10", "r27 = org apache ibatis session configuration r0", "$ r10 = r27 incomplete statement", "entermonitor $ r10", "label r28 = org apache ibatis session configuration r0", "$ r11 = r28 incomplete statement", "$ r12 = configuration $ lambda_build all statements_2__3 bootstrap $", "$ r11 remove if $ r12", "exitmonitor $ r10", "label goto label10", "label r29 = org apache ibatis session configuration r0", "$ r6 = r29 incomplete method", "$ z2 = $ r6 be empty", "if $ z2 ! = 0 goto label15", "r30 = org apache ibatis session configuration r0", "$ r7 = r30 incomplete method", "entermonitor $ r7", "label r31 = org apache ibatis session configuration r0", "$ r8 = r31 incomplete method", "$ r9 = configuration $ lambda_build all statements_3__2 bootstrap $", "$ r8 remove if $ r9", "exitmonitor $ r7", "label goto label15", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache ibatis type base type handler r0", "r2 configuration = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java lang integer value of i0", "r2 = org mybatis spring batch builder my batis cursor item reader builder r0", "r2 max item count = $ r1", "r3 = org mybatis spring batch builder my batis cursor item reader builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org mybatis spring batch my batis cursor item reader r0", "$ r1 = r3 sql session factory", "org springframework util assert not null $ r1 \\ `` a sql session factory be require \\ ``", "r4 = org mybatis spring batch my batis cursor item reader r0", "$ r2 = r4 query id", "org springframework util assert not null $ r2 \\ `` a query id be require \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org mybatis spring mapper class path mapper scanner r0", "r1 lazy initialization = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mybatis spring sql session factory bean r0", "r2 object factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mybatis spring sql session factory bean r0", "r2 plugins = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org mybatis spring sql session factory bean r0", "r2 type aliases package = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r8 = io netty channel epoll epoll server channel config r0", "$ i1 = r8 pending fast open request threshold", "if $ i1 > = 0 goto label1", "r7 = new java lang illegal argument exception", "r6 = new java lang string builder", "specialinvoke r6 < init >", "$ r3 = r6 append \\ `` pending fast open request threshold \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "specialinvoke r7 < init > $ r5", "throw r7", "if $ i1 > = 0 goto label1", "label r9 = io netty channel epoll epoll server channel config r0", "r9 pending fast open request threshold = i0", "r10 = io netty channel epoll epoll server channel config r0", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = io netty handler codec haproxy h a proxy s s l t l v r0", "$ i0 = r1 verify", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec xml xml document start r0", "$ r1 = r2 version", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io netty handler codec xml xml document start r0", "$ r1 = r2 encode scheme", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ i1 = io netty util internal object util check positive i0 \\ `` max message per write\\ ``", "r1 = io netty channel default channel config r0", "r1 max message per write = $ i1", "return r0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org noggit j s o n writer r0", "$ r2 = r4 out", "$ r3 = $ r2 to string", "r5 = org noggit j s o n writer r0", "r5 write string $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = ognl evaluation r0", "$ r1 = r4 last child", "if $ r1 == null goto label1", "r5 = ognl evaluation r0", "$ r2 = r5 last child", "$ r3 = $ r2 get last descendant", "return $ r3", "if $ r1 == null goto label1", "label r6 = ognl evaluation r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = ognl evaluation r0", "$ r2 = r10 first child", "if $ r2 ! = null goto label1", "r11 = ognl evaluation r0", "r11 last child = r1", "r12 = ognl evaluation r0", "r12 first child = r1", "goto label3", "label r22 = ognl evaluation r0", "r1 parent = r22", "return", "if $ r2 ! = null goto label1", "label r13 = ognl evaluation r0", "$ r4 = r13 first child", "r14 = ognl evaluation r0", "$ r3 = r14 last child", "if $ r4 ! = $ r3 goto label2", "r15 = ognl evaluation r0", "$ r7 = r15 first child", "$ r7 next = r1", "r16 = ognl evaluation r0", "r16 last child = r1", "r17 = ognl evaluation r0", "$ r9 = r17 last child", "r18 = ognl evaluation r0", "$ r8 = r18 first child", "$ r9 previous = $ r8", "if $ r4 ! = $ r3 goto label2", "label r19 = ognl evaluation r0", "$ r5 = r19 last child", "r1 previous = $ r5", "r20 = ognl evaluation r0", "$ r6 = r20 last child", "$ r6 next = r1", "r21 = ognl evaluation r0", "r21 last child = r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r15 = @ parameter0", "z0 = @ parameter1", "$ r2 = new java lang string buffer", "specialinvoke $ r2 < init >", "if r15 == null goto label2", "$ z1 = r15 instanceof java lang reflect proxy", "if $ z1 == 0 goto label1", "$ r10 = r15 get class", "$ r11 = $ r10 get interface", "r1 = $ r11 [ 0 ]", "$ r12 = ognl ognl runtime get class name r1 z0", "$ r2 append $ r12", "$ r2 append 94", "r15 = java lang reflect proxy get invocation handler r15", "label $ r5 = ognl ognl runtime get class name r15 z0", "$ r2 append $ r5", "$ r2 append 64", "$ r8 = ognl ognl runtime get pointer string r15", "$ r2 append $ r8", "goto label3", "label $ r4 = new java lang string", "specialinvoke $ r4 < init > $ r2", "return $ r4", "if r15 == null goto label2", "label $ r2 append \\ `` < null > \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [], [24], []]}
{"nodes": ["r0 = @ parameter0", "ognl ognl runtime _security manager = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label $ r3 = r0 a subclass r1", "$ r4 = newarray java lang class [ 0 ]", "$ r5 = $ r3 get constructor $ r4", "$ r6 = newarray java lang object [ 0 ]", "$ r7 = $ r5 new instance $ r6", "label return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get iterator", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "l5 = 0l", "i6 = 0", "label if i6 > = 8 goto label2", "l7 = l5 < < 8", "r2 = io opencensus trace trace id r0", "$ r1 = r2 bytes", "$ b2 = $ r1 [ i6 ]", "$ s3 = $ b2 & 255", "$ l4 = long $ s3", "l5 = l7 | $ l4", "i6 = i6 + 1", "goto label1", "label if i6 > = 8 goto label2", "label $ b0 = l5 cmp 0l", "if $ b0 > = 0 goto label3", "$ l1 = neg l5", "return $ l1", "if $ b0 > = 0 goto label3", "label return l5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["$ r0 = io opencensus stats stats get view manager", "io opencensus contrib grpc metric rpc view register all cumulative view $ r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["$ r0 = io opencensus stats stats get view manager", "io opencensus contrib grpc metric rpc view register all interval view $ r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r2 = new java lang null pointer exception", "specialinvoke $ r2 < init >", "throw $ r2", "if r0 ! = null goto label1", "label $ z0 = r0 be empty", "if $ z0 == 0 goto label2", "$ r1 = new java lang illegal argument exception", "specialinvoke $ r1 < init >", "throw $ r1", "if $ z0 == 0 goto label2", "label return r0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api add command r0", "r2 work tree iterator = r1", "r3 = org eclipse jgit api add command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit api checkout result r0", "$ r1 = r2 modify list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "r4 = org eclipse jgit api cherry pick command r0", "$ r3 = r4 include $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "r4 = org eclipse jgit api cherry pick command r0", "$ r3 = r4 include $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r1 = \\ `` origin\\ ``", "label r2 = org eclipse jgit api clone command r0", "r2 remote = r1", "r3 = org eclipse jgit api clone command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r1 = \\ `` head\\ ``", "label r2 = org eclipse jgit api clone command r0", "r2 branch = r1", "r3 = org eclipse jgit api clone command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit api error abort by hook exception r0", "$ i0 = r1 return code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit api fetch command r0", "$ z0 = r1 be force update", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = new org eclipse jgit api stash apply command", "r4 = org eclipse jgit api git r0", "$ r2 = r4 repo", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse jgit api log command r0", "r4 check callable", "r5 = org eclipse jgit api log command r0", "$ r2 = r5 path filter", "$ r3 = org eclipse jgit treewalk filter path filter create r1", "$ r2 add $ r3", "r6 = org eclipse jgit api log command r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api log command r0", "r2 check callable", "r3 = org eclipse jgit api log command r0", "r3 rev filter = r1", "r4 = org eclipse jgit api log command r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "r4 = org eclipse jgit api merge command r0", "$ r3 = r4 include $ r2 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api push command r0", "r2 check callable", "r3 = org eclipse jgit api push command r0", "r3 remote = r1", "r4 = org eclipse jgit api push command r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api push command r0", "r2 check callable", "r3 = org eclipse jgit api push command r0", "r3 receive pack = r1", "r4 = org eclipse jgit api push command r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api remote remove command r0", "r2 name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jgit api stash apply command r0", "r1 apply index = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api stash create command r0", "r2 ref = r1", "r3 = org eclipse jgit api stash create command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api status command r0", "r2 ignore submodule mode = r1", "r3 = org eclipse jgit api status command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit api submodule init command r0", "$ r2 = r3 path", "$ r2 add r1", "r4 = org eclipse jgit api submodule init command r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit api submodule status command r0", "$ r2 = r3 path", "$ r2 add r1", "r4 = org eclipse jgit api submodule status command r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jgit api submodule update command r0", "r1 fetch = z0", "r2 = org eclipse jgit api submodule update command r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit api submodule update command r0", "r2 callback = r1", "r3 = org eclipse jgit api submodule update command r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit api tag command r0", "$ z0 = r1 force update", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jgit api tag command r0", "r1 force update = z0", "r2 = org eclipse jgit api tag command r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = new java util array list", "r5 = org eclipse jgit attribute attribute r0", "$ r2 = r5 map", "$ r3 = $ r2 value", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "label r5 = org eclipse jgit blame blame generator r0", "r1 = org eclipse jgit blame blame result create r5", "if r1 == null goto label2", "r1 compute all", "label r6 = org eclipse jgit blame blame generator r0", "r6 close", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit blame blame generator r0", "$ r1 = r2 out region", "$ i0 = $ r1 source start", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org eclipse jgit blame blame result r0", "$ r1 = r3 source author", "$ r2 = $ r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit diff diff config r0", "$ r2 = r3 rename detection type", "$ r1 = org eclipse jgit diff diff config $ rename detection type false", "if $ r2 == $ r1 goto label1", "return 1", "if $ r2 == $ r1 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit diff diff formatter r0", "r2 diff algorithm = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit diff diff formatter r0", "$ r1 = r2 rename detector", "if $ r1 == null goto label1", "return 1", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jgit diff patch id diff formatter r0", "$ r1 = r4 digest", "$ r2 = $ r1 digest", "$ r3 = org eclipse jgit lib object id from raw $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "r3 = org eclipse jgit diff raw text r0", "$ r1 = r3 content", "$ r2 = org eclipse jgit util raw parse utils decode $ r1 i0 i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ z0 = org eclipse jgit diff raw text be binary r0 $ i0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = new org eclipse jgit dircache dir cache builder", "r3 = org eclipse jgit dircache dir cache r0", "$ i0 = r3 entry cnt", "$ i1 = $ i0 + 16", "r4 = org eclipse jgit dircache dir cache r0", "specialinvoke r2 < init > r4 $ i1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit lib constant encode r1", "$ i0 = lengthof r2", "r3 = org eclipse jgit dircache dir cache r0", "$ i1 = r3 find entry r2 $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = org eclipse jgit dircache dir cache r0", "$ i1 = r2 find entry 0 r1 i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = org eclipse jgit dircache dir cache r0", "$ r2 = r5 sort entry", "r4 = $ r2 [ i0 ]", "i3 = i0 + 1", "goto label3", "label r7 = org eclipse jgit dircache dir cache r0", "$ i1 = r7 entry cnt", "if i3 < $ i1 goto label1", "label r6 = org eclipse jgit dircache dir cache r0", "$ r3 = r6 sort entry", "r1 = $ r3 [ i3 ]", "$ i2 = org eclipse jgit dircache dir cache cmp r4 r1", "if $ i2 == 0 goto label2", "goto label4", "label return i3", "if $ i2 == 0 goto label2", "label r4 = r1", "i3 = i3 + 1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit dircache dir cache iterator r0", "$ r1 = r3 current subtree", "if $ r1 ! = null goto label1", "r4 = org eclipse jgit dircache dir cache iterator r0", "$ r2 = r4 current entry", "goto label2", "label return $ r2", "if $ r1 ! = null goto label1", "label $ r2 = null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit dircache dir cache tree r0", "$ r1 = r2 id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jgit dircache dir cache tree r0", "$ r2 = r6 encode name", "r1 = java nio byte buffer wrap $ r2", "$ r3 = java nio charset standard charsets utf_8", "$ r4 = $ r3 decode r1", "$ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit error ambiguous object exception r0", "$ r1 = r2 candidate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit error checkout conflict exception r0", "$ r1 = r2 conflict", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit event repository event r0", "$ r2 = r3 repository", "if $ r2 ! = null goto label1", "r4 = org eclipse jgit event repository event r0", "r4 repository = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit gitrepo repo project r0", "$ r1 = r2 remote", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit gitrepo repo project r0", "$ r1 = r2 recommend shallow", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse jgit util f detect", "r5 = org eclipse jgit hook git hook r0", "$ r2 = r5 get repository", "r6 = org eclipse jgit hook git hook r0", "$ r3 = r6 get hook name", "$ r4 = $ r1 find hook $ r2 $ r3", "if $ r4 == null goto label1", "return 1", "if $ r4 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal ketch ketch replica r0", "$ r1 = r2 participation", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal ketch ketch system r0", "$ r1 = r2 txn commit", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit internal ketch proposal r0", "r2 push cert = r1", "r3 = org eclipse jgit internal ketch proposal r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal ketch remote git replica r0", "$ r1 = r2 uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit internal ketch replica config r0", "$ l0 = r3 min retry", "$ r2 = java util concurrent time unit milliseconds", "$ l1 = r1 convert $ l0 $ r2", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit internal ketch replica config r0", "$ l0 = r3 max retry", "$ r2 = java util concurrent time unit milliseconds", "$ l1 = r1 convert $ l0 $ r2", "return $ l1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit internal ketch replica snapshot r0", "$ r1 = r2 state", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org eclipse jgit internal storage dfs dfs block cache r0", "$ r4 = r7 table", "r8 = org eclipse jgit internal storage dfs dfs block cache r0", "$ i0 = specialinvoke r8 slot r1 0l", "$ r5 = $ r4 get $ i0", "r2 = org eclipse jgit internal storage dfs dfs block cache $ hash entry $ r5", "r9 = org eclipse jgit internal storage dfs dfs block cache r0", "$ r6 = specialinvoke r9 scan r2 r1 0l", "r3 = org eclipse jgit internal storage dfs dfs block $ r6", "if r3 == null goto label1", "$ z0 = r3 contain r1 0l", "if $ z0 == 0 goto label1", "return 1", "if $ z0 == 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit internal storage dfs dfs pack compactor r0", "$ r2 = r3 src pack", "$ r2 add r1", "r4 = org eclipse jgit internal storage dfs dfs pack compactor r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = new org eclipse jgit internal storage dfs dfs reader io stats", "r4 = org eclipse jgit internal storage dfs dfs reader r0", "$ r2 = r4 stats", "specialinvoke r3 < init > $ r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = org eclipse jgit internal storage file lock file r0", "$ r2 = r7 ref", "r1 = org eclipse jgit internal storage file file snapshot save $ r2", "r8 = org eclipse jgit internal storage file lock file r0", "$ r3 = r8 lck", "r6 = org eclipse jgit internal storage file file snapshot save $ r3", "goto label2", "label $ z0 = r1 equal r6", "if $ z0 ! = 0 goto label1", "label java lang thread sleep 25l", "r9 = org eclipse jgit internal storage file lock file r0", "$ r4 = r9 lck", "$ l0 = java lang system current time millis", "$ r4 set last modified $ l0", "r10 = org eclipse jgit internal storage file lock file r0", "$ r5 = r10 lck", "r6 = org eclipse jgit internal storage file file snapshot save $ r5", "if $ z0 ! = 0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jgit internal storage file object directory pack parser r0", "r1 keep empty = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new java lang string builder", "$ r2 = java lang string value of r0", "specialinvoke $ r1 < init > $ r2", "$ r3 = $ r1 append \\ `` lock\\ ``", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit internal storage file simple data input r0", "$ r1 = r3 buf", "r4 = org eclipse jgit internal storage file simple data input r0", "r4 read fully $ r1 0 4", "r5 = org eclipse jgit internal storage file simple data input r0", "$ r2 = r5 buf", "$ l0 = org eclipse jgit util nb decode u int32 $ r2 0", "return $ l0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 * 3", "$ i2 = $ i1 4", "$ i3 = i0 + $ i2", "$ l4 = long $ i3", "return $ l4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jgit internal storage pack object to pack r0", "$ r1 = r4 delta base", "$ z0 = $ r1 instanceof org eclipse jgit internal storage pack object to pack", "if $ z0 == 0 goto label1", "r5 = org eclipse jgit internal storage pack object to pack r0", "$ r2 = r5 delta base", "$ r3 = org eclipse jgit internal storage pack object to pack $ r2", "return $ r3", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit internal storage pack pack writer r0", "$ z0 = r1 thin", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org eclipse jgit internal storage pack pack writer r0", "$ r3 = r7 exclude in pack", "if $ r3 ! = null goto label1", "$ r6 = newarray org eclipse jgit lib object id set [ 1 ]", "$ r6 [ 0 ] = r1", "r8 = org eclipse jgit internal storage pack pack writer r0", "r8 exclude in pack = $ r6", "r9 = org eclipse jgit internal storage pack pack writer r0", "r9 exclude in pack last = r1", "goto label2", "label return", "if $ r3 ! = null goto label1", "label r10 = org eclipse jgit internal storage pack pack writer r0", "$ r4 = r10 exclude in pack", "i0 = lengthof $ r4", "$ i1 = i0 + 1", "r2 = newarray org eclipse jgit lib object id set [ $ i1 ]", "r11 = org eclipse jgit internal storage pack pack writer r0", "$ r5 = r11 exclude in pack", "java lang system arraycopy $ r5 0 r2 0 i0", "r2 [ i0 ] = r1", "r12 = org eclipse jgit internal storage pack pack writer r0", "r12 exclude in pack = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jgit internal storage reftable ref cursor r0", "r1 = r5 get ref", "$ r2 = r1 get storage", "$ r3 = org eclipse jgit lib ref $ storage new", "if $ r2 ! = $ r3 goto label1", "$ r4 = r1 get object id", "if $ r4 ! = null goto label1", "return 1", "if $ r4 ! = null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = org eclipse jgit internal storage reftable reftable compactor r0", "r1 max update index = l0", "r2 = org eclipse jgit internal storage reftable reftable compactor r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = org eclipse jgit internal storage reftable reftable compactor r0", "$ r4 = r7 table", "$ r4 add all r1", "r3 = r1 iterator", "goto label2", "label $ z2 = r3 have next", "if $ z2 ! = 0 goto label1", "label $ r5 = r3 next", "r2 = org eclipse jgit internal storage reftable reftable $ r5", "$ z1 = r2 instanceof org eclipse jgit internal storage reftable reftable reader", "if $ z1 == 0 goto label2", "$ r6 = org eclipse jgit internal storage reftable reftable reader r2", "r8 = org eclipse jgit internal storage reftable reftable compactor r0", "specialinvoke r8 adjust update index $ r6", "if $ z2 ! = 0 goto label1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit internal storage reftable reftable reader r0", "$ i0 = r1 block size", "if $ i0 ! = -1 goto label1", "r2 = org eclipse jgit internal storage reftable reftable reader r0", "specialinvoke r2 read file header", "label r3 = org eclipse jgit internal storage reftable reftable reader r0", "$ i1 = r3 block size", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r9 = @ parameter1", "if r9 == null goto label1", "$ z0 = r9 be empty", "if $ z0 == 0 goto label2", "label $ r3 = org eclipse jgit internal j git text get", "r9 = $ r3 transaction abort", "label r2 = r0 iterator", "goto label4", "label $ z1 = r2 have next", "if $ z1 ! = 0 goto label3", "label $ r4 = r2 next", "r1 = org eclipse jgit internal storage reftree command $ r4", "$ r5 = r1 get result", "$ r6 = org eclipse jgit transport receive command $ result not_attempted", "if $ r5 ! = $ r6 goto label4", "$ r7 = org eclipse jgit transport receive command $ result rejected_other_reason", "r1 set result $ r7 r9", "$ r8 = org eclipse jgit internal j git text get", "r9 = $ r8 transaction abort", "if $ z1 ! = 0 goto label3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r4 = org eclipse jgit internal storage reftree command r0", "$ r1 = r4 cmd", "if $ r1 == null goto label1", "r5 = org eclipse jgit internal storage reftree command r0", "$ r2 = r5 cmd", "$ r3 = $ r2 get message", "goto label2", "label return $ r3", "if $ r1 == null goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ z0 = r0 instanceof org eclipse jgit internal storage reftree ref tree database", "if $ z0 == 0 goto label2", "r2 = org eclipse jgit internal storage reftree ref tree database r0", "$ r4 = r2 get txn commit", "$ z1 = r1 equal $ r4", "if $ z1 == 0 goto label1", "return 1", "if $ z1 == 0 goto label1", "label r3 = r2 get txn namespace", "if r3 == null goto label2", "$ z2 = r1 start with r3", "if $ z2 == 0 goto label2", "$ r5 = new java lang string builder", "$ r6 = java lang string value of r3", "specialinvoke $ r5 < init > $ r6", "$ r7 = $ r5 append \\ `` stage \\ ``", "$ r8 = $ r7 to string", "$ z3 = r1 start with $ r8", "if $ z3 ! = 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit lib base repository builder r0", "r3 index file = r1", "r4 = org eclipse jgit lib base repository builder r0", "$ r2 = r4 self", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = org eclipse jgit util system reader get instance", "r3 = org eclipse jgit lib base repository builder r0", "$ r2 = r3 read environment $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label3", "i0 = lengthof r1", "i1 = 0", "goto label2", "label if i1 < i0 goto label1", "label r2 = r1 [ i1 ]", "r6 = org eclipse jgit lib base repository builder r0", "r6 add ceiling directory r2", "i1 = i1 + 1", "label if i1 < i0 goto label1", "label r7 = org eclipse jgit lib base repository builder r0", "$ r4 = r7 self", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r7 = new org eclipse jgit internal storage file file repository", "r9 = org eclipse jgit lib base repository builder r0", "$ r3 = r9 setup", "specialinvoke r7 < init > $ r3", "r10 = org eclipse jgit lib base repository builder r0", "$ z0 = r10 be must exist", "if $ z0 == 0 goto label1", "r11 = org eclipse jgit lib repository r7", "$ r4 = r11 get object database", "$ z1 = $ r4 exist", "if $ z1 ! = 0 goto label1", "r8 = new org eclipse jgit error repository not find exception", "r12 = org eclipse jgit lib base repository builder r0", "$ r6 = r12 get git dir", "specialinvoke r8 < init > $ r6", "r13 = java lang throwable r8", "throw r13", "if $ z1 ! = 0 goto label1", "label r14 = org eclipse jgit lib repository r7", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = org eclipse jgit lib batch progress monitor r0", "r2 delay start time = l0", "r3 = org eclipse jgit lib batch progress monitor r0", "r3 delay start unit = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = org eclipse jgit lib commit builder r0", "$ r3 = r9 parent id", "$ i0 = lengthof $ r3", "if $ i0 ! = 0 goto label1", "r10 = org eclipse jgit lib commit builder r0", "r10 set parent id r1", "goto label2", "label return", "if $ i0 ! = 0 goto label1", "label r11 = org eclipse jgit lib commit builder r0", "$ r4 = r11 parent id", "$ i1 = lengthof $ r4", "$ i2 = $ i1 + 1", "r2 = newarray org eclipse jgit lib object id [ $ i2 ]", "r12 = org eclipse jgit lib commit builder r0", "$ r6 = r12 parent id", "r13 = org eclipse jgit lib commit builder r0", "$ r5 = r13 parent id", "$ i3 = lengthof $ r5", "java lang system arraycopy $ r6 0 r2 0 $ i3", "r14 = org eclipse jgit lib commit builder r0", "$ r7 = r14 parent id", "$ i4 = lengthof $ r7", "$ r8 = r1 copy", "r2 [ $ i4 ] = $ r8", "r15 = org eclipse jgit lib commit builder r0", "r15 parent id = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib core config r0", "$ r1 = r2 attributesfile", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit lib gpg config r0", "$ r1 = r3 config", "$ r2 = $ r1 get string \\ `` user\\", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib gpg config r0", "$ r1 = r2 config", "$ z0 = $ r1 get boolean \\ `` commit\\", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit lib index diff r0", "$ r1 = r3 conflict", "$ r2 = $ r1 key set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = new java lang string builder", "specialinvoke r6 < init > \\ `` abbreviate object id [ \\ ``", "r7 = org eclipse jgit lib abbreviate object id r0", "$ r2 = r7 name", "$ r3 = r6 append $ r2", "$ r4 = $ r3 append \\ `` ] \\ ``", "$ r5 = $ r4 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit lib object inserter r0", "$ r1 = r3 hasher", "$ r2 = $ r1 reset", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "$ i1 = lengthof r1", "r3 = org eclipse jgit lib object inserter r0", "$ r2 = r3 id for i0 r1 0 $ i1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit lib object reader r0", "$ z0 = r2 have r1 -1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib rebase todo line r0", "$ r1 = r2 short message", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = r0 get name", "$ i0 = $ r2 compare to r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new java util hash map", "$ i1 = lengthof r1", "specialinvoke r8 < init > $ i1", "i0 = lengthof r1", "i2 = 0", "goto label3", "label if i2 < i0 goto label1", "label r3 = r1 [ i2 ]", "r9 = org eclipse jgit lib ref database r0", "r5 = r9 exact ref r3", "if r5 == null goto label2", "r8 put r3 r5", "label i2 = i2 + 1", "label if i2 < i0 goto label1", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 copy", "r3 = org eclipse jgit lib ref update r0", "r3 new value = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib ref update r0", "$ r1 = r2 exp value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib ref update r0", "$ r1 = r2 old value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib ref rename r0", "$ r1 = r2 result", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = org eclipse jgit lib repository cache cache", "$ r2 = specialinvoke $ r1 open repository r0 z0", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit lib tag builder r0", "$ r1 = r2 tagger", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit lib tag builder r0", "r2 tagger = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit merge merger r0", "$ r1 = r2 db", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit merge merger r0", "$ z0 = r2 merge 1 r1", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit merge resolve merger r0", "$ r1 = r2 fail path", "$ i0 = $ r1 size", "if $ i0 < = 0 goto label1", "return 1", "if $ i0 < = 0 goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit patch combine file header r0", "$ r1 = r2 get old id 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = org eclipse jgit patch file header r0", "$ r2 = r5 change type", "$ r1 = org eclipse jgit diff diff entry $ change type modify", "if $ r2 ! = $ r1 goto label1", "r6 = org eclipse jgit patch file header r0", "$ r4 = r6 new mode", "r7 = org eclipse jgit patch file header r0", "$ r3 = r7 old mode", "if $ r4 ! = $ r3 goto label1", "return 0", "if $ r4 ! = $ r3 goto label1", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit revplot plot commit r0", "$ r1 = r2 ref", "$ i0 = lengthof $ r1", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org eclipse jgit revwalk filter or rev filter all", "if r0 == $ r2 goto label1", "$ r4 = org eclipse jgit revwalk filter or rev filter all", "if r1 ! = $ r4 goto label2", "label $ r3 = org eclipse jgit revwalk filter or rev filter all", "return $ r3", "if r1 ! = $ r4 goto label2", "label r6 = new org eclipse jgit revwalk filter or rev filter $ binary", "specialinvoke r6 < init > r0 r1", "r7 = org eclipse jgit revwalk filter rev filter r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = r0 size", "if $ i0 > = 2 goto label1", "r10 = new java lang illegal argument exception", "$ r8 = org eclipse jgit internal j git text get", "$ r9 = $ r8 at least two filter need", "specialinvoke r10 < init > $ r9", "throw r10", "if $ i0 > = 2 goto label1", "label $ i1 = r0 size", "r1 = newarray org eclipse jgit revwalk filter rev filter [ $ i1 ]", "r0 to array r1", "$ i2 = lengthof r1", "if $ i2 ! = 2 goto label2", "$ r5 = r1 [ 0 ]", "$ r4 = r1 [ 1 ]", "$ r6 = org eclipse jgit revwalk filter or rev filter create $ r5 $ r4", "return $ r6", "if $ i2 ! = 2 goto label2", "label r11 = new org eclipse jgit revwalk filter or rev filter $ list", "specialinvoke r11 < init > r1", "r12 = org eclipse jgit revwalk filter rev filter r11", "return r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit revwalk filter pattern match rev filter r0", "$ r1 = r2 pattern text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit revwalk rev tag r0", "r1 = r3 buffer", "i0 = org eclipse jgit util raw parse utils tagger r1 0", "if i0 > = 0 goto label1", "return null", "if i0 > = 0 goto label1", "label $ r2 = org eclipse jgit util raw parse utils parse person ident r1 i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit storage pack pack config r0", "$ z0 = r1 preserve old pack", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit storage pack pack config r0", "$ z0 = r1 delta base a offset", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit storage pack pack config r0", "$ i0 = r1 delta search window size", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 > 2 goto label1", "r1 = org eclipse jgit storage pack pack config r0", "r1 set delta compress 0", "goto label2", "label return", "if i0 > 2 goto label1", "label r2 = org eclipse jgit storage pack pack config r0", "r2 delta search window size = i0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit storage pack pack config r0", "$ i0 = r1 index version", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit storage pack pack config r0", "$ i0 = r1 bitmap contiguous commit count", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit storage pack pack statistic r0", "$ r1 = r3 statistic", "$ r2 = $ r1 root commits", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit storage pack pack statistic r0", "$ r1 = r2 statistic", "$ l0 = $ r1 total object", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit storage pack pack statistic r0", "$ r1 = r2 statistic", "$ l0 = $ r1 reuse delta", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit storage pack pack statistic r0", "$ r1 = r2 statistic", "$ i0 = $ r1 depth", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit submodule submodule status r0", "$ r1 = r2 index id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org eclipse jgit util f detect", "$ r3 = org eclipse jgit submodule submodule walk get submodule repository r0 r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be bare", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label $ r2 = new java io file", "$ r3 = r0 get work tree", "specialinvoke $ r2 < init > $ r3 \\ `` gitmodules\\ ``", "$ z1 = $ r2 exist", "return $ z1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit submodule submodule walk r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit submodule submodule walk r0", "$ r1 = r3 path", "r4 = org eclipse jgit submodule submodule walk r0", "$ r2 = specialinvoke r4 get module name $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r7 = null", "label r10 = org eclipse jgit submodule submodule walk r0", "r1 = r10 get repository", "label if r1 ! = null goto label05", "label if r1 == null goto label04", "r1 close", "label return null", "label if r1 ! = null goto label05", "label r2 = r1 exact ref \\ `` head\\ ``", "if r2 == null goto label06", "$ r3 = r2 get leaf", "$ r4 = $ r3 get name", "$ r8 = $ r4", "goto label07", "label if r1 == null goto label08", "label return $ r8", "if r2 == null goto label06", "label $ r8 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org eclipse jgit transport base pack connection r0", "$ r2 = r3 remote capablities", "$ z0 = $ r2 contain r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit transport user agent get", "if r2 == null goto label1", "r8 = org eclipse jgit transport base pack connection r0", "$ r3 = r8 remote capablities", "$ z0 = org eclipse jgit transport user agent have agent $ r3", "if $ z0 == 0 goto label1", "$ r4 = r1 append 32", "$ r5 = $ r4 append \\ `` agent\\ ``", "$ r6 = $ r5 append 61", "$ r6 append r2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org eclipse jgit transport bundle writer r0", "$ r2 = r3 assume", "$ r2 add r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "r3 = org eclipse jgit transport daemon r0", "r3 upload pack factory = r1", "goto label2", "label return", "if r1 == null goto label1", "label $ r2 = org eclipse jgit transport resolver upload pack factory disable", "r4 = org eclipse jgit transport daemon r0", "r4 upload pack factory = $ r2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "entermonitor r0", "label r5 = org eclipse jgit transport daemon r0", "r4 = r5 accept thread", "r6 = org eclipse jgit transport daemon r0", "r6 stop", "exitmonitor r0", "label goto label5", "label if r4 == null goto label6", "r7 = java lang thread r4", "r7 join", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport operation result r0", "$ r1 = r2 peer user agent", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit transport pack object info r0", "$ l0 = r1 offset", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org eclipse jgit lib constant encode r1", "r3 = org eclipse jgit transport packet line out r0", "r3 write packet $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport packet line out r0", "$ r1 = r2 out", "$ r1 flush", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r6 = org eclipse jgit transport push certificate parser r0", "r1 = specialinvoke r6 sent nonce", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r5 = new java lang string builder", "specialinvoke r5 < init > \\ `` push-cert=\\ ``", "$ r3 = r5 append r1", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit transport receive pack statistic r0", "$ l0 = r1 num ref delta", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit transport receive pack statistic r0", "$ l0 = r1 num delta blob", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 == null goto label1", "$ r3 = r1", "goto label2", "label r4 = org eclipse jgit transport receive pack r0", "r4 post receive = $ r3", "return", "if r1 == null goto label1", "label $ r3 = org eclipse jgit transport post receive hook null"], "adj": [[1], [2], [3], [4], [], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r15 = new org eclipse jgit transport ref spec", "r18 = org eclipse jgit transport ref spec r0", "specialinvoke r15 < init > r18", "$ r4 = org eclipse jgit transport ref spec check valid r1", "r15 src name = $ r4", "$ r5 = r15 src name", "$ z0 = org eclipse jgit transport ref spec be wildcard $ r5", "if $ z0 == 0 goto label1", "$ r11 = r15 dst name", "if $ r11 ! = null goto label1", "r16 = new java lang illegal state exception", "$ r13 = org eclipse jgit internal j git text get", "$ r14 = $ r13 destination be not a wildcard", "specialinvoke r16 < init > $ r14", "throw r16", "if $ r11 ! = null goto label1", "label $ r6 = r15 src name", "$ z1 = org eclipse jgit transport ref spec be wildcard $ r6", "$ r7 = r15 dst name", "$ z2 = org eclipse jgit transport ref spec be wildcard $ r7", "if $ z1 == $ z2 goto label2", "r17 = new java lang illegal state exception", "$ r9 = org eclipse jgit internal j git text get", "$ r10 = $ r9 source destination must match", "specialinvoke r17 < init > $ r10", "throw r17", "if $ z1 == $ z2 goto label2", "label return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r3 = org eclipse jgit transport remote config r0", "$ r1 = r3 uris", "$ r2 = java util collection unmodifiable list $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org eclipse jgit transport remote config r0", "$ r2 = r4 fetch", "$ z0 = $ r2 contain r1", "if $ z0 == 0 goto label1", "return 0", "if $ z0 == 0 goto label1", "label r5 = org eclipse jgit transport remote config r0", "$ r3 = r5 fetch", "$ z1 = $ r3 add r1", "return $ z1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport remote ref update r0", "$ r1 = r2 new object id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport remote ref update r0", "$ r1 = r2 track ref update", "if $ r1 == null goto label1", "return 1", "if $ r1 == null goto label1", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org eclipse jgit transport resolver file resolver r0", "r1 export all = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org eclipse jgit transport sign push config r0", "r2 cert nonce seed = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org eclipse jgit transport sign push config r0", "r1 cert nonce slop limit = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport transport r0", "$ r1 = r2 object checker", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit transport transport r0", "$ z0 = r1 remove delete refs", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit transport u r iish r0", "$ r1 = r2 user", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org eclipse jgit util string utils be empty or null r0", "if $ z0 == 0 goto label1", "$ r1 = null", "goto label2", "label org eclipse jgit transport user agent user agent = $ r1", "return", "if $ z0 == 0 goto label1", "label $ r1 = org eclipse jgit transport user agent clean r0"], "adj": [[1], [2], [3], [4], [], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 mode", "r2 = org eclipse jgit treewalk abstract tree iterator r0", "$ i1 = r2 path compare r1 $ i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "goto label4", "label r5 = org eclipse jgit treewalk abstract tree iterator r0", "$ z0 = r5 eof", "if $ z0 == 0 goto label1", "label $ i2 = lengthof r1", "r2 = org eclipse jgit treewalk abstract tree iterator r0", "$ i1 = r2 path offset", "r3 = org eclipse jgit treewalk abstract tree iterator r0", "i0 = specialinvoke r3 path compare r1 0 $ i2 0 $ i1", "if i0 ! = 0 goto label2", "return 1", "if i0 ! = 0 goto label2", "label if i0 < = 0 goto label3", "return 0", "label if i0 < = 0 goto label3", "label r4 = org eclipse jgit treewalk abstract tree iterator r0", "r4 next 1"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [], [17], [18], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit treewalk file tree iterator r0", "$ r1 = r2 directory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jgit treewalk work tree option r0", "$ r1 = r2 eol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse jgit util file utils delete r0 0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse jgit util file utils mkdir r0 0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = org eclipse jgit util system reader get instance", "$ z0 = $ r2 be mac o s", "if $ z0 == 0 goto label1", "$ r3 = r0 get path", "$ r4 = java text normalizer $ form nfc", "r1 = java text normalizer normalize $ r3 $ r4", "$ r5 = new java io file", "specialinvoke $ r5 < init > r1", "return $ r5", "if $ z0 == 0 goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ l0 = org eclipse jgit util file utils get length r1", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org eclipse jgit util file utils delete r1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = new java io file", "specialinvoke $ r4 < init > r2", "$ z0 = $ r4 be absolute", "if $ z0 == 0 goto label1", "return $ r4", "if $ z0 == 0 goto label1", "label $ r5 = new java io file", "specialinvoke $ r5 < init > r1 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r7 = java io file path separator", "$ r8 = r0 split $ r7", "i0 = lengthof $ r8", "i2 = 0", "goto label6", "label if i2 < i0 goto label2", "label r2 = $ r8 [ i2 ]", "i1 = lengthof r1", "i3 = 0", "goto label5", "label if i3 < i1 goto label3", "label r4 = r1 [ i3 ]", "$ r9 = new java io file", "specialinvoke $ r9 < init > r2 r4", "$ z0 = $ r9 be file", "if $ z0 == 0 goto label4", "$ r10 = $ r9 get absolute file", "return $ r10", "if $ z0 == 0 goto label4", "label i3 = i3 + 1", "label if i3 < i1 goto label3", "i2 = i2 + 1"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 list file", "if r3 ! = null goto label1", "$ r7 = org eclipse jgit util fs no_entries", "return $ r7", "if r3 ! = null goto label1", "label $ i0 = lengthof r3", "r4 = newarray org eclipse jgit treewalk work tree iterator $ entry [ $ i0 ]", "i2 = 0", "goto label3", "label $ i1 = lengthof r4", "if i2 < $ i1 goto label2", "label r8 = new org eclipse jgit treewalk file tree iterator $ file entry", "$ r6 = r3 [ i2 ]", "r9 = org eclipse jgit util fs r0", "specialinvoke r8 < init > $ r6 r9 r2", "r4 [ i2 ] = r8", "i2 = i2 + 1", "if i2 < $ i1 goto label2", "r10 = org eclipse jgit treewalk work tree iterator $ entry [ ] r4", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i3 = 0", "goto label3", "label r3 = org eclipse jgit util int list r0", "$ i1 = r3 count", "if i3 < $ i1 goto label1", "label r2 = org eclipse jgit util int list r0", "$ r1 = r2 entry", "$ i2 = $ r1 [ i3 ]", "if $ i2 ! = i0 goto label2", "return 1", "if $ i2 ! = i0 goto label2", "label i3 = i3 + 1", "if i3 < $ i1 goto label1", "return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "$ r1 = java lang string value of c0", "r2 = org eclipse jgit util io throw print writer r0", "r2 print $ r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ b1 = r0 [ i0 ]", "$ s2 = $ b1 & 255", "i11 = $ s2 < < 8", "$ i3 = i0 + 1", "$ b4 = r0 [ $ i3 ]", "$ s5 = $ b4 & 255", "i12 = i11 | $ s5", "$ i9 = i12 < < 8", "$ i6 = i0 + 2", "$ b7 = r0 [ $ i6 ]", "$ s8 = $ b7 & 255", "$ i10 = $ i9 | $ s8", "return $ i10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit util process result r0", "$ i0 = r1 exit code", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["b0 = @ parameter0", "$ r0 = org eclipse jgit util raw char util whitespace", "$ s1 = b0 & 255", "$ z0 = $ r0 [ $ s1 ]", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = org eclipse jgit util ref list r0", "$ r1 = r3 list", "$ r2 = $ r1 [ i0 ]", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r7 = new java lang null pointer exception", "$ r8 = org eclipse jgit internal j git text get", "$ r9 = $ r8 expect boolean string value", "specialinvoke $ r7 < init > $ r9", "throw $ r7", "if r0 ! = null goto label1", "label r1 = org eclipse jgit util string utils to boolean or null r0", "if r1 ! = null goto label2", "$ r2 = new java lang illegal argument exception", "$ r3 = org eclipse jgit internal j git text get", "$ r5 = $ r3 not a boolean", "$ r4 = newarray java lang object [ 1 ]", "$ r4 [ 0 ] = r0", "$ r6 = java text message format format $ r5 $ r4", "specialinvoke $ r2 < init > $ r6", "throw $ r2", "if r1 ! = null goto label2", "label $ z0 = r1 boolean value", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "org eclipse jgit util system reader be mac o s = null", "org eclipse jgit util system reader be windows = null", "if r0 ! = null goto label1", "$ r1 = org eclipse jgit util system reader default", "org eclipse jgit util system reader instance = $ r1", "goto label2", "label return", "if r0 ! = null goto label1", "label specialinvoke r0 init", "org eclipse jgit util system reader instance = r0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org eclipse jgit util temporary buffer r0", "$ r2 = r11 block", "if $ r2 == null goto label5", "label r12 = org eclipse jgit util temporary buffer r0", "r8 = specialinvoke r12 last", "$ z0 = r8 be full", "if $ z0 == 0 goto label3", "r13 = org eclipse jgit util temporary buffer r0", "$ z1 = specialinvoke r13 reach in core limit", "if $ z1 == 0 goto label2", "goto label5", "label r9 = newarray byte [ 8192 ]", "goto label7", "label $ i0 = r1 read r9", "if $ i0 > 0 goto label6", "label r15 = org eclipse jgit util temporary buffer r0", "$ r3 = r15 overflow", "$ r3 write r9 0 $ i0", "if $ i0 > 0 goto label6", "return", "if $ z1 == 0 goto label2", "label r10 = new org eclipse jgit util temporary buffer $ block", "specialinvoke r10 < init >", "r8 = r10", "r14 = org eclipse jgit util temporary buffer r0", "$ r7 = r14 block", "$ r7 add r10", "label $ r5 = r8 buffer", "$ i4 = r8 count", "$ r4 = r8 buffer", "$ i2 = lengthof $ r4", "$ i1 = r8 count", "$ i3 = $ i2 - $ i1", "i7 = r1 read $ r5 $ i4 $ i3", "if i7 > = 1 goto label4", "label $ i5 = r8 count", "$ i6 = $ i5 + i7", "r8 count = $ i6", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], []]}
{"nodes": ["r0 = @ this", "r1 = org eclipse jgit util temporary buffer r0", "$ l0 = specialinvoke r1 in core length", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = org eclipse jgit util temporary buffer r0", "l0 = r11 length", "$ b1 = 2147483647l cmp l0", "if $ b1 > = 0 goto label1", "r10 = new java lang out of memory error", "$ r8 = org eclipse jgit internal j git text get", "$ r9 = $ r8 length exceed maximum array size", "specialinvoke r10 < init > $ r9", "throw r10", "if $ b1 > = 0 goto label1", "label $ i2 = int l0", "r1 = newarray byte [ $ i2 ]", "i5 = 0", "r12 = org eclipse jgit util temporary buffer r0", "$ r4 = r12 block", "r3 = $ r4 iterator", "goto label3", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label2", "label $ r5 = r3 next", "r2 = org eclipse jgit util temporary buffer $ block $ r5", "$ r6 = r2 buffer", "$ i3 = r2 count", "java lang system arraycopy $ r6 0 r1 i5 $ i3", "$ i4 = r2 count", "i5 = i5 + $ i4", "if $ z0 ! = 0 goto label2", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r11 = org eclipse jgit util temporary buffer r0", "l0 = r11 length", "$ b1 = 2147483647l cmp l0", "if $ b1 > = 0 goto label1", "r10 = new java lang out of memory error", "$ r8 = org eclipse jgit internal j git text get", "$ r9 = $ r8 length exceed maximum array size", "specialinvoke r10 < init > $ r9", "throw r10", "if $ b1 > = 0 goto label1", "label $ i2 = int l0", "r1 = newarray byte [ $ i2 ]", "i5 = 0", "r12 = org eclipse jgit util temporary buffer r0", "$ r4 = r12 block", "r3 = $ r4 iterator", "goto label3", "label $ z0 = r3 have next", "if $ z0 ! = 0 goto label2", "label $ r5 = r3 next", "r2 = org eclipse jgit util temporary buffer $ block $ r5", "$ r6 = r2 buffer", "$ i3 = r2 count", "java lang system arraycopy $ r6 0 r1 i5 $ i3", "$ i4 = r2 count", "i5 = i5 + $ i4", "if $ z0 ! = 0 goto label2", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 > = 0 goto label1", "r8 = new java lang illegal argument exception", "specialinvoke r8 < init > \\ `` [ has_child ] require non-negative \\'min_children\\ ' field\\ ``", "throw r8", "if i0 > = 0 goto label1", "label if i0 ! = 0 goto label2", "$ r5 = org elasticsearch join query have child query builder deprecation logger", "$ r4 = org elasticsearch common log deprecation category query", "$ r3 = newarray java lang object [ 0 ]", "$ r5 deprecate $ r4 \\ `` min_children\\", "label if i1 > = 0 goto label3", "r9 = new java lang illegal argument exception", "specialinvoke r9 < init > \\ `` [ has_child ] require non-negative \\'max_children\\ ' field\\ ``", "throw r9", "label if i1 > = 0 goto label3", "label if i1 > = i0 goto label4", "r10 = new java lang illegal argument exception", "specialinvoke r10 < init > \\ `` [ has_child ] \\'max_children\\ ' be less than \\'min_children\\'\\ ``", "throw r10", "label if i1 > = i0 goto label4", "label r11 = org elasticsearch join query have child query builder r0", "r11 min child = i0", "r12 = org elasticsearch join query have child query builder r0", "r12 max child = i1", "r13 = org elasticsearch join query have child query builder r0", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r2 = org elasticsearch join query have parent query builder r0", "$ r1 = r2 query", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = new org elasticsearch join query have child query builder", "specialinvoke $ r3 < init > r0 r1 r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = new org elasticsearch join query parent id query builder", "specialinvoke $ r2 < init > r0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org passay abstract dictionary rule r0", "$ r1 = r2 dictionary", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org passay abstract dictionary rule r0", "$ z0 = r1 match backwards", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org passay allow character rule r0", "$ r1 = r2 match behavior", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org passay character characteristic rule r0", "r1 report rule failure = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = org passay character rule r0", "$ r1 = r3 character data", "$ r2 = $ r1 get character", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r1 = org passay dictionary ternary node r0", "r1 splitchar = c0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org passay dictionary ternary node r0", "$ r1 = r2 lokid", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org passay dictionary ternary node r0", "r2 eqkid = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org passay dictionary ternary tree r0", "$ r2 = r3 root", "r4 = org passay dictionary ternary tree r0", "$ z0 = specialinvoke r4 search node $ r2 r1 0", "return $ z0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org passay length rule r0", "$ i0 = r1 minimum length", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org passay rule result r0", "$ z0 = r1 valid", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org passay rule result metadata r0", "$ r2 = r3 count", "$ z0 = $ r2 contain key r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r2 get salt", "if r3 ! = null goto label1", "$ r10 = r1", "goto label2", "label r11 = org passay digest source rule r0", "$ r5 = r11 hash bean", "$ r6 = r2 get password", "$ r7 = newarray java lang object [ 1 ]", "r12 = org passay digest source rule r0", "$ r8 = r12 charset", "$ r9 = $ r10 get bytes $ r8", "$ r7 [ 0 ] = $ r9", "$ z0 = $ r5 compare $ r6 $ r7", "return $ z0", "if r3 ! = null goto label1", "label $ r10 = r3 apply to r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org passay username rule r0", "$ z0 = r1 match backwards", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdfwriter c o s writer r0", "$ r1 = r3 compress parameter", "if $ r1 == null goto label1", "r4 = org apache pdfbox pdfwriter c o s writer r0", "$ r2 = r4 compress parameter", "$ z0 = $ r2 be compress", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "r6 = specialinvoke r8 get e f dictionary", "if r6 ! = null goto label1", "if r1 == null goto label1", "r7 = new org apache pdfbox co c o s dictionary", "specialinvoke r7 < init >", "r6 = r7", "r9 = org apache pdfbox pdmodel common filespecification p d complex file specification r0", "$ r5 = r9 f", "$ r4 = org apache pdfbox co c o s name ef", "r10 = org apache pdfbox co c o s base r7", "$ r5 set item $ r4 r10", "label if r6 == null goto label2", "$ r2 = org apache pdfbox co c o s name uf", "r11 = org apache pdfbox pdmodel common c o s objectable r1", "r6 set item $ r2 r11", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org apache pdfbox pdmodel encryption security handler r0", "r1 decrypt metadata = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org apache pdfbox pdmodel encryption security handler r0", "$ r1 = r2 protection policy", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox pdmodel fdf f d f annotation polyline r0", "$ r3 = r5 annot", "$ r2 = org apache pdfbox co c o s name vertex", "r1 = $ r3 get c o s array $ r2", "if r1 == null goto label1", "$ r4 = r1 to float array", "goto label2", "label return $ r4", "if r1 == null goto label1", "label $ r4 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = org apache pdfbox pdmodel graphic form p d form x object r0", "$ r1 = r3 get c o s object", "$ r2 = org apache pdfbox co c o s name struct_parents", "$ i0 = $ r1 get int $ r2", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "f1 = @ parameter1", "f2 = @ parameter2", "f3 = @ parameter3", "r9 = new org apache pdfbox co c o s array", "specialinvoke r9 < init >", "r10 = new org apache pdfbox co c o s float", "specialinvoke r10 < init > f0", "r14 = org apache pdfbox co c o s base r10", "r9 add r14", "r11 = new org apache pdfbox co c o s float", "specialinvoke r11 < init > f1", "r15 = org apache pdfbox co c o s base r11", "r9 add r15", "r12 = new org apache pdfbox co c o s float", "specialinvoke r12 < init > f2", "r16 = org apache pdfbox co c o s base r12", "r9 add r16", "r13 = new org apache pdfbox co c o s float", "specialinvoke r13 < init > f3", "r17 = org apache pdfbox co c o s base r13", "r9 add r17", "r18 = org apache pdfbox pdmodel interactive annotation p d annotation caret r0", "$ r7 = r18 get c o s object", "$ r8 = org apache pdfbox co c o s name rd", "r19 = org apache pdfbox co c o s base r9", "$ r7 set item $ r8 r19", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache pdfbox pdmodel interactive annotation p d annotation free text r0", "$ r2 = r4 get c o s object", "$ r3 = org apache pdfbox co c o s name be", "r5 = org apache pdfbox pdmodel common c o s objectable r1", "$ r2 set item $ r3 r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r14 = org apache pdfbox pdmodel interactive annotation p d annotation ink r0", "$ r10 = r14 get c o s object", "$ r11 = org apache pdfbox co c o s name inklist", "$ r10 remove item $ r11", "return", "if r1 ! = null goto label1", "label r12 = new org apache pdfbox co c o s array", "specialinvoke r12 < init >", "i0 = lengthof r1", "i1 = 0", "label if i1 > = i0 goto label3", "r4 = r1 [ i1 ]", "r13 = new org apache pdfbox co c o s array", "specialinvoke r13 < init >", "r13 set float array r4", "r15 = org apache pdfbox co c o s base r13", "r12 add r15", "i1 = i1 + 1", "goto label2", "label if i1 > = i0 goto label3", "label r16 = org apache pdfbox pdmodel interactive annotation p d annotation ink r0", "$ r7 = r16 get c o s object", "$ r8 = org apache pdfbox co c o s name inklist", "r17 = org apache pdfbox co c o s base r12", "$ r7 set item $ r8 r17"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "$ z0 = java lang float be finite f0", "if $ z0 ! = 0 goto label1", "r14 = new java lang illegal argument exception", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r10 = r13 append f0", "$ r11 = $ r10 append \\ `` be not a finite number\\ ``", "$ r12 = $ r11 to string", "specialinvoke r14 < init > $ r12", "throw r14", "if $ z0 ! = 0 goto label1", "label r15 = org apache pdfbox pdmodel p d abstract content stream r0", "$ r1 = r15 format decimal", "$ i1 = $ r1 get maximum fraction digit", "r16 = org apache pdfbox pdmodel p d abstract content stream r0", "$ r2 = r16 format buffer", "i0 = org apache pdfbox util number format util format float fast f0 $ i1 $ r2", "if i0 ! = -1 goto label2", "r17 = org apache pdfbox pdmodel p d abstract content stream r0", "$ r6 = r17 format decimal", "$ d0 = double f0", "$ r7 = $ r6 format $ d0", "r18 = org apache pdfbox pdmodel p d abstract content stream r0", "r18 write $ r7", "goto label3", "label r21 = org apache pdfbox pdmodel p d abstract content stream r0", "$ r5 = r21 output stream", "$ r5 write 32", "return", "if i0 ! = -1 goto label2", "label r19 = org apache pdfbox pdmodel p d abstract content stream r0", "$ r4 = r19 output stream", "r20 = org apache pdfbox pdmodel p d abstract content stream r0", "$ r3 = r20 format buffer", "$ r4 write $ r3 0 i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [], [32], [33], [34], [35], [36], []]}
{"nodes": ["r0 = @ this", "r9 = org apache pdfbox pdmodel p d page r0", "$ r3 = r9 page", "$ r2 = org apache pdfbox co c o s name crop_box", "r1 = org apache pdfbox pdmodel p d page tree get inheritable attribute $ r3 $ r2", "$ z0 = r1 instanceof org apache pdfbox co c o s array", "if $ z0 == 0 goto label1", "r8 = new org apache pdfbox pdmodel common p d rectangle", "$ r6 = org apache pdfbox co c o s array r1", "specialinvoke r8 < init > $ r6", "r10 = org apache pdfbox pdmodel p d page r0", "$ r7 = specialinvoke r10 clip to medium box r8", "return $ r7", "if $ z0 == 0 goto label1", "label r11 = org apache pdfbox pdmodel p d page r0", "$ r4 = r11 get medium box", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = new org apache pdfbox util matrix", "r8 = org apache pdfbox util matrix r0", "$ r4 = r8 single", "$ r3 = r1 single", "r9 = org apache pdfbox util matrix r0", "$ r5 = specialinvoke r9 multiply array $ r4 $ r3", "r10 = org apache pdfbox util matrix r0", "$ r6 = specialinvoke r10 check float value $ r5", "specialinvoke r7 < init > $ r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r5 = org apache pdfbox util matrix r0", "$ r1 = r5 single", "$ f0 = $ r1 [ 1 ]", "$ i0 = java lang float compare $ f0 0 0f", "if $ i0 == 0 goto label1", "r6 = org apache pdfbox util matrix r0", "$ r3 = r6 single", "$ f2 = $ r3 [ 0 ]", "$ d0 = double $ f2", "$ d1 = java lang math pow $ d0 2 0", "r7 = org apache pdfbox util matrix r0", "$ r4 = r7 single", "$ f3 = $ r4 [ 1 ]", "$ d2 = double $ f3", "$ d3 = java lang math pow $ d2 2 0", "$ d4 = $ d1 + $ d3", "$ d5 = java lang math sqrt $ d4", "$ f4 = float $ d5", "return $ f4", "if $ i0 == 0 goto label1", "label r8 = org apache pdfbox util matrix r0", "$ r2 = r8 single", "$ f1 = $ r2 [ 0 ]", "return $ f1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org codehaus plexus util cache map r0", "$ r2 = r3 _backing map", "$ r2 put all r1", "r4 = org codehaus plexus util cache map r0", "r4 flush", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org codehaus plexus util directory scanner r0", "r2 basedir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r46 = org codehaus plexus util directory scanner r0", "$ r1 = r46 basedir", "if $ r1 ! = null goto label1", "r33 = new java lang illegal state exception", "specialinvoke r33 < init > \\ `` no basedir set\\ ``", "throw r33", "if $ r1 ! = null goto label1", "label r47 = org codehaus plexus util directory scanner r0", "$ r2 = r47 basedir", "$ z0 = $ r2 exist", "if $ z0 ! = 0 goto label2", "r35 = new java lang illegal state exception", "r34 = new java lang string buffer", "specialinvoke r34 < init >", "$ r26 = r34 append \\ `` basedir \\ ``", "r48 = org codehaus plexus util directory scanner r0", "$ r27 = r48 basedir", "$ r28 = $ r26 append $ r27", "$ r29 = $ r28 append \\ `` do not exist\\ ``", "$ r30 = $ r29 to string", "specialinvoke r35 < init > $ r30", "throw r35", "if $ z0 ! = 0 goto label2", "label r49 = org codehaus plexus util directory scanner r0", "$ r3 = r49 basedir", "$ z1 = $ r3 be directory", "if $ z1 ! = 0 goto label3", "r37 = new java lang illegal state exception", "r36 = new java lang string buffer", "specialinvoke r36 < init >", "$ r19 = r36 append \\ `` basedir \\ ``", "r50 = org codehaus plexus util directory scanner r0", "$ r20 = r50 basedir", "$ r21 = $ r19 append $ r20", "$ r22 = $ r21 append \\ `` be not a directory\\ ``", "$ r23 = $ r22 to string", "specialinvoke r37 < init > $ r23", "throw r37", "if $ z1 ! = 0 goto label3", "label r51 = org codehaus plexus util directory scanner r0", "r51 setup default filter", "r38 = new java util vector", "specialinvoke r38 < init >", "r52 = org codehaus plexus util directory scanner r0", "r52 file include = r38", "r39 = new java util vector", "specialinvoke r39 < init >", "r53 = org codehaus plexus util directory scanner r0", "r53 file not include = r39", "r40 = new java util vector", "specialinvoke r40 < init >", "r54 = org codehaus plexus util directory scanner r0", "r54 file exclude = r40", "r41 = new java util vector", "specialinvoke r41 < init >", "r55 = org codehaus plexus util directory scanner r0", "r55 file deselected = r41", "r42 = new java util vector", "specialinvoke r42 < init >", "r56 = org codehaus plexus util directory scanner r0", "r56 dirs include = r42", "r43 = new java util vector", "specialinvoke r43 < init >", "r57 = org codehaus plexus util directory scanner r0", "r57 dirs not include = r43", "r44 = new java util vector", "specialinvoke r44 < init >", "r58 = org codehaus plexus util directory scanner r0", "r58 dirs exclude = r44", "r45 = new java util vector", "specialinvoke r45 < init >", "r59 = org codehaus plexus util directory scanner r0", "r59 dirs deselected = r45", "r60 = org codehaus plexus util directory scanner r0", "$ z2 = r60 be include \\ `` \\ ``", "if $ z2 == 0 goto label6", "r61 = org codehaus plexus util directory scanner r0", "$ z3 = r61 be exclude \\ `` \\ ``", "if $ z3 ! = 0 goto label5", "r62 = org codehaus plexus util directory scanner r0", "$ r14 = r62 basedir", "r63 = org codehaus plexus util directory scanner r0", "$ z4 = r63 be select \\ `` \\", "if $ z4 == 0 goto label4", "r64 = org codehaus plexus util directory scanner r0", "$ r16 = r64 dirs include", "$ r16 add element \\ `` \\ ``", "goto label7", "label r68 = org codehaus plexus util directory scanner r0", "$ r32 = r68 basedir", "r69 = org codehaus plexus util directory scanner r0", "r69 scandir $ r32 \\ `` \\", "return", "if $ z4 == 0 goto label4", "label r65 = org codehaus plexus util directory scanner r0", "$ r15 = r65 dirs deselected", "$ r15 add element \\ `` \\ ``", "if $ z3 ! = 0 goto label5", "label r66 = org codehaus plexus util directory scanner r0", "$ r13 = r66 dirs exclude", "$ r13 add element \\ `` \\ ``", "if $ z2 == 0 goto label6", "label r67 = org codehaus plexus util directory scanner r0", "$ r12 = r67 dirs not include", "$ r12 add element \\ `` \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [], [90], [91], [92], [93], [], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], []]}
{"nodes": ["r0 = @ this", "r4 = org codehaus plexus util directory scanner r0", "r4 slow scan", "r5 = org codehaus plexus util directory scanner r0", "$ r2 = r5 dirs not include", "$ i0 = $ r2 size", "r1 = newarray java lang string [ $ i0 ]", "r6 = org codehaus plexus util directory scanner r0", "$ r3 = r6 dirs not include", "$ r3 copy into r1", "return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org codehaus plexus util fast map r0", "$ r1 = r2 _values", "r3 = java util collection $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r8 = net sourceforge pmd cache cache rule mapper r0", "$ r4 = r8 cache rule instance", "r9 = net sourceforge pmd cache cache rule mapper r0", "$ r5 = specialinvoke r9 get rule key r1 r2 r3", "$ r6 = $ r4 get $ r5", "$ r7 = net sourceforge pmd rule $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r4 = r1 get all rule", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r5 = r2 next", "r3 = net sourceforge pmd rule $ r5", "r13 = net sourceforge pmd cache cache rule mapper r0", "$ r6 = r13 cache rule instance", "$ r7 = r3 get rule class", "$ r8 = r3 get name", "$ r9 = r3 get language", "$ r10 = $ r9 get terse name", "r14 = net sourceforge pmd cache cache rule mapper r0", "$ r11 = specialinvoke r14 get rule key $ r7 $ r8 $ r10", "$ r6 put $ r11 r3", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new net sourceforge pmd lang ast xpath document navigator $ 3", "$ r3 = net sourceforge pmd lang ast node r1", "r5 = net sourceforge pmd lang ast xpath document navigator r0", "specialinvoke r4 < init > r5 $ r3", "r6 = java util iterator r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "$ r3 = new java lang string builder", "specialinvoke $ r3 < init >", "$ r4 = $ r3 append r1", "$ r5 = $ r4 append \\ `` be not implement by \\ ``", "$ r6 = r0 get class", "$ r7 = $ r6 get name", "$ r8 = $ r5 append $ r7", "$ r9 = $ r8 to string", "specialinvoke $ r2 < init > $ r9", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = net sourceforge pmd lang document internal language discoverer r0", "$ r3 = r7 force language", "if $ r3 == null goto label1", "r8 = net sourceforge pmd lang document internal language discoverer r0", "$ r5 = r8 force language", "$ r6 = java util collection singleton list $ r5", "return $ r6", "if $ r3 == null goto label1", "label r9 = net sourceforge pmd lang document internal language discoverer r0", "r2 = specialinvoke r9 get extension r1", "$ r4 = net sourceforge pmd lang language registry find by extension r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "r4 = net sourceforge pmd lang language version discoverer r0", "$ r3 = r4 get default language version for file $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new net sourceforge pmd lang metric metric option $ metric option builder", "specialinvoke $ r2 < init > null", "$ r2 add all r0", "$ r3 = $ r2 build", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = net sourceforge pmd lang rule abstract rule chain visitor r0", "$ r3 = r6 node name to node", "$ r4 = r1 get x path node name", "$ r5 = $ r3 get $ r4", "r2 = java util list $ r5", "if r2 == null goto label1", "r2 add r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r12 = net sourceforge pmd lang rule rule reference r0", "$ r1 = r12 deprecate", "if $ r1 ! = null goto label1", "r13 = net sourceforge pmd lang rule rule reference r0", "$ r2 = r13 description", "if $ r2 ! = null goto label1", "r14 = net sourceforge pmd lang rule rule reference r0", "$ r3 = r14 example", "if $ r3 ! = null goto label1", "r15 = net sourceforge pmd lang rule rule reference r0", "$ r4 = r15 external info url", "if $ r4 ! = null goto label1", "r16 = net sourceforge pmd lang rule rule reference r0", "$ r5 = r16 maximum language version", "if $ r5 ! = null goto label1", "r17 = net sourceforge pmd lang rule rule reference r0", "$ r6 = r17 minimum language version", "if $ r6 ! = null goto label1", "r18 = net sourceforge pmd lang rule rule reference r0", "$ r7 = r18 message", "if $ r7 ! = null goto label1", "r19 = net sourceforge pmd lang rule rule reference r0", "$ r8 = r19 name", "if $ r8 ! = null goto label1", "r20 = net sourceforge pmd lang rule rule reference r0", "$ r9 = r20 priority", "if $ r9 ! = null goto label1", "r21 = net sourceforge pmd lang rule rule reference r0", "$ r10 = r21 property descriptor", "if $ r10 ! = null goto label1", "r22 = net sourceforge pmd lang rule rule reference r0", "$ r11 = r22 property value", "if $ r11 == null goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ r11 == null goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], [38], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = new net sourceforge pmd lang rule xpath internal split union", "specialinvoke $ r2 < init >", "$ r2 visit r0", "$ r4 = $ r2 get expression", "$ z0 = $ r4 be empty", "if $ z0 == 0 goto label1", "$ r6 = java util collection singleton list r0", "return $ r6", "if $ z0 == 0 goto label1", "label $ r5 = $ r2 get expression", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd p m d configuration r0", "$ r1 = r2 suppress marker", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd p m d configuration r0", "$ r1 = r2 input path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sourceforge pmd p m d configuration r0", "r1 show suppress violation = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r3 = net sourceforge pmd property builder multi value property builder r0", "r3 default value = $ r2", "r4 = net sourceforge pmd property builder multi value property builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java util array a list r1", "r3 = net sourceforge pmd property builder multi value property builder r0", "r3 default value = $ r2", "r4 = net sourceforge pmd property builder multi value property builder r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd property builders property descriptor builder r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = net sourceforge pmd property value parser constant character_parser", "$ r2 = $ r1 value of r0", "$ r3 = java lang character $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new net sourceforge pmd property property builder $ generic property builder", "$ r2 = net sourceforge pmd property value parser constant long_parser", "specialinvoke $ r1 < init > r0 $ r2 class \\ `` ljava lang long \\ ``", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new net sourceforge pmd property property builder $ regex property builder", "specialinvoke $ r1 < init > r0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd property property type id r0", "$ r1 = r2 string id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd property property type id r0", "$ r1 = r2 factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "c0 = @ parameter1", "r2 = new net sourceforge pmd property value parser constant $ 13", "specialinvoke r2 < init > c0 r0", "r3 = net sourceforge pmd property value parser r2", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sourceforge pmd renderers internal sarif sarif log r0", "r2 schema = r1", "r3 = net sourceforge pmd renderers internal sarif sarif log r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = net sourceforge pmd report r0", "$ r4 = r7 metric", "$ r4 add r1", "r8 = net sourceforge pmd report r0", "$ r5 = r8 listener", "r2 = $ r5 iterator", "label $ z1 = r2 have next", "if $ z1 == 0 goto label2", "$ r6 = r2 next", "r3 = net sourceforge pmd thread safe report listener $ r6", "r3 metric add r1", "goto label1", "if $ z1 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sourceforge pmd rule context r0", "$ r2 = specialinvoke r4 get default message", "$ r3 = net sourceforge pmd rule context no_args", "r5 = net sourceforge pmd rule context r0", "r5 add violation with message r1 $ r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sourceforge pmd rule context r0", "$ r2 = r4 attribute", "$ r3 = $ r2 remove r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["i0 = @ parameter0", "label $ r1 = net sourceforge pmd rule priority value", "$ i1 = i0 - 1", "$ r2 = $ r1 [ $ i1 ]", "label return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = net sourceforge pmd rule set r0", "$ r4 = r7 rule", "r2 = $ r4 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = net sourceforge pmd rule $ r5", "$ r6 = r3 get language", "$ z1 = $ r6 equal r1", "if $ z1 == 0 goto label2", "$ z2 = r3 be multifile", "if $ z2 == 0 goto label2", "return 1", "if $ z2 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = new java util array list", "$ i0 = r1 size", "specialinvoke r8 < init > $ i0", "r3 = r1 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r6 = r3 next", "r4 = java lang string $ r6", "r9 = net sourceforge pmd rule set loader r0", "$ r7 = r9 load from resource r4", "r8 add $ r7", "goto label1", "if $ z0 == 0 goto label2", "label return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = net sourceforge pmd rule set reference id r0", "$ z0 = r1 external", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sourceforge pmd rule set reference id r0", "$ z0 = r1 all rule", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd rule set reference id r0", "$ r1 = r2 rule set file name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = net sourceforge pmd util class util types_by_name", "r4 = $ r1 type for r0", "if r4 == null goto label1", "return r4", "if r4 == null goto label1", "label $ r2 = net sourceforge pmd util class util primitive_type_names", "r5 = $ r2 type for r0", "if r5 == null goto label2", "return r5", "if r5 == null goto label2", "label $ r3 = net sourceforge pmd util collection util get collection type for r0", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [], [11], [12], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang object [ 4 ]", "r7 = net sourceforge pmd util database source object r0", "$ r2 = r7 get schema", "$ r1 [ 0 ] = $ r2", "r8 = net sourceforge pmd util database source object r0", "$ r3 = r8 get type", "$ r1 [ 1 ] = $ r3", "r9 = net sourceforge pmd util database source object r0", "$ r4 = r9 get name", "$ r1 [ 2 ] = $ r4", "r10 = net sourceforge pmd util database source object r0", "$ r5 = r10 get suffix from type", "$ r1 [ 3 ] = $ r5", "$ r6 = java lang string format \\ `` database % s % s % s % s\\", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0", "i0 = r0 last index of 46", "if i0 == -1 goto label1", "r1 = r0 substring 0 i0", "label return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = net sourceforge pmd util filter directory filter instance", "r1 = net sourceforge pmd util filter filter $ r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sourceforge pmd util log internal message reporter base r0", "r2 min level = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = net sourceforge pmd util treeexport tree renderers registry", "entermonitor $ r3", "label $ r4 = net sourceforge pmd util treeexport tree renderers registry", "$ r5 = $ r4 get r0", "$ r6 = net sourceforge pmd util treeexport tree renderer descriptor $ r5", "exitmonitor $ r3", "label return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r3 = net sourceforge pmd util treeexport tree renderers registry", "entermonitor $ r3", "label $ r4 = net sourceforge pmd util treeexport tree renderers registry", "$ r5 = r0 id", "$ z0 = $ r4 contain key $ r5", "if $ z0 == 0 goto label3", "exitmonitor $ r3", "label return 0", "if $ z0 == 0 goto label3", "label $ r6 = net sourceforge pmd util treeexport tree renderers registry", "$ r7 = r0 id", "$ r6 put $ r7 r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sourceforge pmd util type map r0", "$ r2 = r3 type by name", "$ z0 = $ r2 contain value r1", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = net sourceforge pmd util type map r0", "$ r2 = r5 type by name", "$ r3 = $ r2 get r1", "$ r4 = java lang class $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang java ast a s t allocation expression r0", "$ r1 = r2 get qualify name", "r3 = net sourceforge pmd lang ast qualified name $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang java ast a s t switch statement r0", "$ r1 = r2 get first child of type class \\ `` lnet sourceforge pmd lang java ast a s t switch label \\ ``", "if $ r1 == null goto label1", "r3 = net sourceforge pmd lang java ast a s t switch statement r0", "$ i0 = r3 get num child", "if $ i0 == 1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 == 1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang java ast a s t try statement r0", "$ r1 = r2 find child of type class \\ `` lnet sourceforge pmd lang java ast a s t catch statement \\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang java ast a s t type argument r0", "$ r1 = r2 get type node", "if $ r1 ! = null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 ! = null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang java ast a s t type parameter r0", "$ r1 = r2 get type bound node", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd lang java ast a s t type pattern r0", "$ r1 = r3 get first child of type class \\ `` lnet sourceforge pmd lang java ast a s t variable declarator id \\ ``", "$ r2 = net sourceforge pmd lang java ast a s t variable declarator id $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd lang java ast a s t variable declarator r0", "$ r1 = r3 get child 0", "$ r2 = net sourceforge pmd lang java ast a s t variable declarator id $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sourceforge pmd lang java ast a s t variable declarator id r0", "$ r1 = r2 get parent", "$ z0 = $ r1 instanceof net sourceforge pmd lang java ast a s t pattern", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sourceforge pmd lang java ast a s t wildcard bound r0", "$ z0 = r1 be upper bound", "if $ z0 ! = 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 ! = 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd lang java ast a s t wildcard bound r0", "$ r1 = r3 get first child of type class \\ `` lnet sourceforge pmd lang java ast a s t reference type \\ ``", "$ r2 = net sourceforge pmd lang java ast a s t reference type $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sourceforge pmd lang java ast a s t yield statement r0", "$ r1 = r3 get child 0", "$ r2 = net sourceforge pmd lang java ast a s t expression $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "if r0 == null goto label1", "$ i2 = r0 length", "if i0 < $ i2 goto label2", "label return null", "if i0 < $ i2 goto label2", "label i1 = i0 + 1", "i4 = i1", "c5 = r0 char at i1", "label $ z0 = java lang character be letter or digit c5", "if $ z0 == 0 goto label4", "$ i3 = r0 length", "if i4 > = $ i3 goto label4", "i4 = i4 + 1", "c5 = r0 char at i4", "goto label3", "if i4 > = $ i3 goto label4", "label $ r1 = r0 substring i1 i4", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = net sourceforge pmd lang java ast a s t any type declaration r1", "r3 = net sourceforge pmd lang java metric impl abstract java class metric r0", "$ z0 = r3 support $ r2", "return $ z0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = net sourceforge pmd lang ast node r1", "$ d0 = net sourceforge pmd lang metric metric util compute metric or na n r0 r3 r2", "return $ d0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = net sourceforge pmd lang java multifile signature java field sig mask r0", "r1 cover static = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sourceforge pmd lang java multifile signature java operation sig mask r0", "$ r2 = r4 role mask", "$ r3 = java util array a list r1", "$ r2 remove all $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = net sourceforge pmd lang java qname java operation qualify name r0", "$ z0 = r1 be lambda", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = r1 find descendant of type class \\ `` lnet sourceforge pmd lang java ast a s t primary expression \\ ``", "r4 = r3 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r7 = r4 next", "r5 = net sourceforge pmd lang java ast a s t primary expression $ r7", "r6 = net sourceforge pmd lang java rule design law of demeter rule $ method call create method call r5", "$ r8 = net sourceforge pmd rule context r2", "r9 = net sourceforge pmd lang java rule design law of demeter rule r0", "specialinvoke r9 add violation r6 $ r8", "goto label1", "if $ z0 == 0 goto label2", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = net sourceforge pmd lang java typeresolution p m d a s m class loader r0", "$ r3 = r9 dont bother", "$ z0 = $ r3 contain key r1", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label $ r4 = specialinvoke r0 load class r1", "label return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org postgresql core encode r0", "$ r1 = r5 encode", "$ z0 = java nio charset charset be support $ r1", "if $ z0 == 0 goto label1", "r6 = org postgresql core encode r0", "$ r2 = r6 encode", "$ r3 = java nio charset charset for name $ r2", "$ r4 = $ r3 name", "goto label2", "label return $ r4", "if $ z0 == 0 goto label1", "label r7 = org postgresql core encode r0", "$ r4 = r7 encode"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r4 = new java lang string", "r5 = org postgresql core encode r0", "$ r3 = r5 encode", "specialinvoke r4 < init > r1 i0 i1 $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r7 = org postgresql core p g stream r0", "$ r2 = r7 pg_input", "r8 = org postgresql core p g stream r0", "$ r1 = r8 _int2buf", "$ i0 = $ r2 read $ r1", "if $ i0 == 2 goto label1", "r6 = new java io e o f exception", "specialinvoke r6 < init >", "throw r6", "if $ i0 == 2 goto label1", "label r9 = org postgresql core p g stream r0", "$ r3 = r9 _int2buf", "$ b1 = $ r3 [ 0 ]", "$ s2 = $ b1 & 255", "$ i5 = $ s2 < < 8", "r10 = org postgresql core p g stream r0", "$ r4 = r10 _int2buf", "$ b3 = $ r4 [ 1 ]", "$ s4 = $ b3 & 255", "$ i6 = $ i5 | $ s4", "return $ i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = newarray byte [ i0 ]", "r2 = org postgresql core p g stream r0", "r2 receive r1 0 i0", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r4 = org postgresql core p g stream r0", "$ r1 = r4 encode writer", "if $ r1 == null goto label1", "r5 = org postgresql core p g stream r0", "$ r3 = r5 encode writer", "$ r3 flush", "label r6 = org postgresql core p g stream r0", "$ r2 = r6 pg_output", "$ r2 flush", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org postgresql core server version r0", "$ i0 = r1 version", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = org postgresql core visible buffer input stream r0", "$ i1 = r1 end index", "$ i3 = i0 - $ i1", "r2 = org postgresql core visible buffer input stream r0", "$ i2 = r2 index", "i7 = $ i3 + $ i2", "label if i7 < = 0 goto label3", "r3 = org postgresql core visible buffer input stream r0", "$ z0 = specialinvoke r3 read more i7", "if $ z0 ! = 0 goto label2", "return 0", "if $ z0 ! = 0 goto label2", "label r4 = org postgresql core visible buffer input stream r0", "$ i4 = r4 end index", "$ i6 = i0 - $ i4", "r5 = org postgresql core visible buffer input stream r0", "$ i5 = r5 index", "i7 = $ i6 + $ i5", "goto label1", "label if i7 < = 0 goto label3", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r18 = org postgresql d p g pool data source r0", "$ r3 = r18 lock", "entermonitor $ r3", "label r19 = org postgresql d p g pool data source r0", "$ r4 = r19 available", "$ z0 = $ r4 be empty", "if $ z0 ! = 0 goto label06", "r20 = org postgresql d p g pool data source r0", "$ r9 = r20 available", "$ r10 = $ r9 pop", "r14 = javax sql pool connection $ r10", "label r14 close", "label goto label05", "label goto label01", "if $ z0 ! = 0 goto label06", "label r21 = org postgresql d p g pool data source r0", "r21 available = null", "label r22 = org postgresql d p g pool data source r0", "$ r5 = r22 use", "$ z1 = $ r5 be empty", "if $ z1 ! = 0 goto label12", "r23 = org postgresql d p g pool data source r0", "$ r6 = r23 use", "$ r7 = $ r6 pop", "r16 = javax sql pool connection $ r7", "r24 = org postgresql d p g pool data source r0", "$ r8 = r24 connection event listener", "r16 remove connection event listener $ r8", "label r16 close", "label goto label11", "label goto label07", "if $ z1 ! = 0 goto label12", "label r25 = org postgresql d p g pool data source r0", "r25 use = null", "exitmonitor $ r3", "label goto label16", "label r26 = org postgresql d p g pool data source r0", "r26 remove store data source", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org postgresql jdbc escape function two argument function call \\ `` trunc \\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = r1 size", "if $ i0 == 3 goto label1", "r21 = new org postgresql util p s q l exception", "$ r18 = newarray java lang object [ 1 ]", "$ r18 [ 0 ] = \\ `` timestampdiff\\ ``", "$ r19 = org postgresql util gt tr \\ `` { 0 } function take three and only three argument \\", "$ r20 = org postgresql util p s q l state syntax_error", "specialinvoke r21 < init > $ r19 $ r20", "r22 = java lang throwable r21", "throw r22", "if $ i0 == 3 goto label1", "label $ r2 = r0 append \\ `` extract \\ ``", "$ r3 = r1 get 0", "$ r4 = java lang char sequence $ r3", "$ r5 = $ r4 to string", "$ r6 = org postgresql jdbc escape functions2 constant to date part r0 $ r5", "$ r7 = $ r2 append $ r6", "$ r8 = $ r7 append \\ `` from \\ ``", "$ r9 = r1 get 2", "$ r10 = java lang char sequence $ r9", "$ r11 = $ r8 append $ r10", "$ r12 = $ r11 append \\ `` -\\ ``", "$ r13 = r1 get 1", "$ r14 = java lang char sequence $ r13", "$ r15 = $ r12 append $ r14", "$ r15 append \\ `` \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r8 = org postgresql largeobject blob input stream r0", "specialinvoke r8 check close", "label r9 = org postgresql largeobject blob input stream r0", "$ l0 = r9 mpos", "$ b1 = $ l0 cmp 2147483647l", "if $ b1 > 0 goto label2", "r10 = org postgresql largeobject blob input stream r0", "$ r3 = r10 lo", "r11 = org postgresql largeobject blob input stream r0", "$ l4 = r11 mpos", "$ i5 = int $ l4", "$ r3 seek $ i5", "goto label3", "label r14 = org postgresql largeobject blob input stream r0", "r14 buffer = null", "r15 = org postgresql largeobject blob input stream r0", "$ l3 = r15 mpos", "r16 = org postgresql largeobject blob input stream r0", "r16 apos = $ l3", "label goto label6", "label return", "if $ b1 > 0 goto label2", "label r12 = org postgresql largeobject blob input stream r0", "$ r2 = r12 lo", "r13 = org postgresql largeobject blob input stream r0", "$ l2 = r13 mpos", "$ r2 seek64 $ l2 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], []]}
{"nodes": ["r0 = @ this", "r1 = org postgresql largeobject large object r0", "i0 = r1 tell", "r2 = org postgresql largeobject large object r0", "r2 seek 0 2", "r3 = org postgresql largeobject large object r0", "i1 = r3 tell", "r4 = org postgresql largeobject large object r0", "r4 seek i0 0", "return i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = org postgresql sspi s s p i client r0", "$ r1 = r5 sspi context", "if $ r1 == null goto label1", "r6 = org postgresql sspi s s p i client r0", "$ r4 = r6 sspi context", "$ r4 dispose", "r7 = org postgresql sspi s s p i client r0", "r7 sspi context = null", "label r8 = org postgresql sspi s s p i client r0", "$ r2 = r8 client credential", "if $ r2 == null goto label2", "r9 = org postgresql sspi s s p i client r0", "$ r3 = r9 client credential", "$ r3 dispose", "r10 = org postgresql sspi s s p i client r0", "r10 client credential = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ parameter0", "$ i0 = lengthof r0", "$ r1 = org postgresql util base64 encode bytes r0 0 $ i0 0", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ b1 = r0 [ i0 ]", "$ s2 = $ b1 & 255", "$ i6 = $ s2 < < 8", "$ i3 = i0 + 1", "$ b4 = r0 [ $ i3 ]", "$ s5 = $ b4 & 255", "$ i7 = $ i6 + $ s5", "$ s8 = short $ i7", "return $ s8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ l1 = org postgresql util byte converter int8 r0 i0", "$ d0 = java lang double long bit to double $ l1", "return $ d0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org postgresql util lru cache r0", "$ r2 = r3 get r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org postgresql util p gobject r0", "r2 value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org postgresql util p g timestamp r0", "$ r1 = r2 calendar", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org postgresql util p gtokenizer remove r0 \\ `` { \\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "if r1 == null goto label1", "$ z0 = r1 equal \\ `` \\ ``", "if $ z0 == 0 goto label2", "label r6 = new java lang illegal state exception", "specialinvoke r6 < init > \\ `` attempt to set guc_report parameter with null or empty-string name\\ ``", "throw r6", "if $ z0 == 0 goto label2", "label r7 = org postgresql core query executor base r0", "$ r4 = r7 parameter statuses", "$ r4 put r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "if z0 == 0 goto label2", "r11 = org postgresql core v3 adaptivefetch adaptive fetch cache r0", "$ l0 = r11 maximum result buffer size", "$ b1 = $ l0 cmp -1l", "if $ b1 == 0 goto label2", "$ r3 = r1 get native sql", "r2 = $ r3 trim", "r12 = org postgresql core v3 adaptivefetch adaptive fetch cache r0", "$ r4 = r12 adaptive fetch info map", "$ r5 = $ r4 get r2", "r9 = org postgresql core v3 adaptivefetch adaptive fetch cache entry $ r5", "if r9 ! = null goto label1", "r10 = new org postgresql core v3 adaptivefetch adaptive fetch cache entry", "specialinvoke r10 < init >", "r9 = r10", "label r9 increment counter", "r13 = org postgresql core v3 adaptivefetch adaptive fetch cache r0", "$ r6 = r13 adaptive fetch info map", "$ r6 put r2 r9", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "if z0 == 0 goto label2", "r11 = org postgresql core v3 adaptivefetch adaptive fetch cache r0", "$ l0 = r11 maximum result buffer size", "$ b1 = $ l0 cmp -1l", "if $ b1 == 0 goto label2", "$ r4 = r1 get native sql", "r2 = $ r4 trim", "r12 = org postgresql core v3 adaptivefetch adaptive fetch cache r0", "$ r5 = r12 adaptive fetch info map", "$ r6 = $ r5 get r2", "r3 = org postgresql core v3 adaptivefetch adaptive fetch cache entry $ r6", "if r3 == null goto label2", "r3 decrement counter", "$ i2 = r3 get counter", "if $ i2 > = 1 goto label1", "r13 = org postgresql core v3 adaptivefetch adaptive fetch cache r0", "$ r9 = r13 adaptive fetch info map", "$ r9 remove r2", "goto label2", "label return", "if $ i2 > = 1 goto label1", "label r14 = org postgresql core v3 adaptivefetch adaptive fetch cache r0", "$ r7 = r14 adaptive fetch info map", "$ r7 put r2 r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = class \\ `` lorg powermock api support class loader util \\ ``", "$ r2 = $ r1 get class loader", "$ r3 = org powermock api support class loader util load class r0 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r13 = new java lang illegal argument exception", "specialinvoke $ r13 < init > \\ `` you need to supply at least one class \\ ``", "throw $ r13", "if r0 ! = null goto label1", "label $ r5 = new java util hash set", "specialinvoke $ r5 < init >", "$ r6 = org powermock reflect internal whitebox impl get all constructor r0", "$ r7 = java util array a list $ r6", "$ r5 add all $ r7", "i0 = lengthof r1", "i2 = 0", "label if i2 > = i0 goto label3", "r4 = r1 [ i2 ]", "$ r11 = org powermock reflect internal whitebox impl get all constructor r4", "$ r12 = java util array a list $ r11", "$ r5 add all $ r12", "i2 = i2 + 1", "goto label2", "label if i2 > = i0 goto label3", "label $ i1 = $ r5 size", "$ r8 = newarray java lang reflect constructor [ $ i1 ]", "$ r9 = $ r5 to array $ r8", "$ r10 = java lang reflect constructor [ ] $ r9", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 ! = null goto label1", "$ r13 = new java lang illegal argument exception", "specialinvoke $ r13 < init > \\ `` you need to supply at least one class \\ ``", "throw $ r13", "if r0 ! = null goto label1", "label $ r3 = new java util hash set", "specialinvoke $ r3 < init >", "$ r4 = org powermock api support membermodification member matcher method declare in r0 r1", "$ r5 = java util array a list $ r4", "$ r6 = java util collection unmodifiable collection $ r5", "$ r3 add all $ r6", "$ r7 = org powermock api support membermodification member matcher constructor declare in r0 r1", "$ r8 = java util array a list $ r7", "$ r9 = java util collection unmodifiable collection $ r8", "$ r3 add all $ r9", "$ i0 = $ r3 size", "$ r10 = newarray java lang reflect accessible object [ $ i0 ]", "$ r11 = $ r3 to array $ r10", "$ r12 = java lang reflect accessible object [ ] $ r11", "return $ r12"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ r9 = new java lang illegal argument exception", "specialinvoke $ r9 < init > \\ `` accessible object can not be null\\ ``", "throw $ r9", "if r0 ! = null goto label1", "label i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label6", "r2 = r0 [ i1 ]", "$ z0 = r2 instanceof java lang reflect constructor", "if $ z0 == 0 goto label3", "$ r7 = newarray java lang reflect constructor [ 1 ]", "$ r8 = java lang reflect constructor r2", "$ r7 [ 0 ] = $ r8", "org powermock api support suppress code suppress constructor $ r7", "goto label5", "label i1 = i1 + 1", "goto label2", "if $ z0 == 0 goto label3", "label $ z1 = r2 instanceof java lang reflect field", "if $ z1 == 0 goto label4", "$ r5 = newarray java lang reflect field [ 1 ]", "$ r6 = java lang reflect field r2", "$ r5 [ 0 ] = $ r6", "org powermock api support suppress code suppress field $ r5", "if $ z1 == 0 goto label4", "label $ z2 = r2 instanceof java lang reflect method", "if $ z2 == 0 goto label5", "$ r3 = newarray java lang reflect method [ 1 ]", "$ r4 = java lang reflect method r2", "$ r3 [ 0 ] = $ r4", "org powermock api support suppress code suppress method $ r3", "label if i1 > = i0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i1 = lengthof r0", "if $ i1 ! = 0 goto label2", "label $ r3 = new java lang illegal argument exception", "specialinvoke $ r3 < init > \\ `` you must supply at least one class \\ ``", "throw $ r3", "if $ i1 ! = 0 goto label2", "label i0 = lengthof r0", "i2 = 0", "label if i2 > = i0 goto label4", "r2 = r0 [ i2 ]", "$ r4 = r2 get declare field", "org powermock api support suppress code suppress field $ r4", "i2 = i2 + 1", "goto label3", "label if i2 > = i0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "if z0 == 0 goto label1", "r3 = r0 get method", "goto label2", "label r1 = r3", "i0 = lengthof r3", "i1 = 0", "label if i1 > = i0 goto label4", "r2 = r1 [ i1 ]", "org powermock core mock repository add method to suppress r2", "i1 = i1 + 1", "goto label3", "label if i1 > = i0 goto label4", "label return", "if z0 == 0 goto label1", "label r3 = r0 get declare method"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org powermock core mock repository suppress static initializers", "$ r1 add r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label2", "r2 = r0 [ i1 ]", "$ r3 = org powermock core mock repository object to automatically replay and verify", "$ r3 add r2", "i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = org powermock core mock repository substitute return value", "$ r3 = $ r2 put r0 r1", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "if r2 ! = null goto label2", "r21 = \\ `` \\ ``", "if r1 == null goto label1", "r22 = new java lang string builder", "specialinvoke r22 < init >", "$ r18 = r22 append \\ `` with name \\'\\ ``", "$ r19 = $ r18 append r1", "$ r20 = $ r19 append \\ `` \\ ' \\ ``", "r21 = $ r20 to string", "label r24 = new org powermock reflect exception method not find exception", "r23 = new java lang string builder", "specialinvoke r23 < init >", "$ r6 = r23 append \\ `` no method find \\ ``", "$ r7 = $ r6 append r21", "$ r8 = $ r7 append \\ `` with parameter type [ \\ ``", "$ r9 = org powermock reflect internal whitebox impl get argument type a string r3", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 append \\ `` ] in class \\ ``", "$ r12 = org powermock reflect internal whitebox impl get unmocked type r0", "$ r13 = $ r12 get name", "$ r14 = $ r11 append $ r13", "$ r15 = $ r14 append \\ `` \\ ``", "$ r16 = $ r15 to string", "specialinvoke r24 < init > $ r16", "r25 = java lang throwable r24", "throw r25", "if r2 ! = null goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], []]}
{"nodes": ["r0 = @ parameter0", "label $ r2 = org powermock reflect internal whitebox impl get unmocked type r0", "$ r3 = $ r2 get superclass", "$ r4 = $ r3 get declare constructor", "$ r5 = $ r4 [ 0 ]", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = org powermock reflect internal whitebox impl get all method r0", "$ r8 = new java util array list", "specialinvoke $ r8 < init >", "i0 = lengthof r3", "i5 = 0", "label if i5 > = i0 goto label6", "r6 = r3 [ i5 ]", "$ r12 = r6 get name", "$ z0 = $ r12 equal r1", "if $ z0 == 0 goto label4", "if r2 == null goto label5", "$ i1 = lengthof r2", "if $ i1 < = 0 goto label5", "r7 = r6 get parameter type", "if r7 == null goto label4", "$ i3 = lengthof r7", "$ i2 = lengthof r2", "if $ i3 ! = $ i2 goto label4", "i6 = 0", "label $ i4 = lengthof r7", "if i6 > = $ i4 goto label4", "$ r14 = r7 [ i6 ]", "$ r13 = r2 [ i6 ]", "$ r15 = org powermock reflect internal whitebox impl get unmocked type $ r13", "$ z2 = $ r14 be assignable from $ r15", "if $ z2 == 0 goto label3", "goto label5", "label i5 = i5 + 1", "goto label1", "if $ z2 == 0 goto label3", "label i6 = i6 + 1", "goto label2", "if i6 > = $ i4 goto label4", "label $ r8 add r6", "label if i5 > = i0 goto label6", "label $ r9 = newarray java lang reflect method [ 0 ]", "$ r10 = $ r8 to array $ r9", "$ r11 = java lang reflect method [ ] $ r10", "return $ r11"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [], [31], [], [33], [34], [], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r5 = com google api auth provider r0", "r1 = r5 id_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api auth provider r0", "r6 id_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google api config change r0", "r1 = r5 old value_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api config change r0", "r6 old value_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google api config change r0", "$ r1 = r2 advices_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google api monitor resource descriptor r0", "r1 = r5 display name_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api monitor resource descriptor r0", "r6 display name_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google api project property r0", "$ r1 = r2 properties_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google api service r0", "r1 = r5 title_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google api service r0", "r6 title_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google api service r0", "$ r1 = r2 documentation_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com google api service r0", "$ r1 = r2 backend_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com google api service r0", "$ r1 = r2 quota_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com google api service r0", "$ r1 = r2 control_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = com google api source info r0", "$ r1 = r2 source files_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com google cloud audit audit log r0", "$ r1 = r2 response_", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = com google cloud audit authorization info r0", "$ z0 = r1 granted_", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google cloud audit request metadata r0", "r1 = r5 caller supply user agent_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google cloud audit request metadata r0", "r6 caller supply user agent_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google log type http request r0", "r1 = r5 request method_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google log type http request r0", "r6 request method_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r5 = com google rpc resource info r0", "r1 = r5 resource type_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google rpc resource info r0", "r6 resource type_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = com google rpc status r0", "$ r1 = r2 details_", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com google type color r0", "$ f0 = r1 red_", "return $ f0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google type postal address r0", "r1 = r5 organization_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google type postal address r0", "r6 organization_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = new java util hash set", "specialinvoke r13 < init >", "r14 = com google protobuf extension registry r0", "$ r6 = r14 immutable extension by number", "$ r7 = $ r6 key set", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r8 = r3 next", "r4 = com google protobuf extension registry $ descriptor int pair $ r8", "$ r9 = com google protobuf extension registry $ descriptor int pair access $ 000 r4", "$ r10 = $ r9 get full name", "$ z1 = $ r10 equal r1", "if $ z1 == 0 goto label2", "r15 = com google protobuf extension registry r0", "$ r11 = r15 immutable extension by number", "$ r12 = $ r11 get r4", "r13 add $ r12", "label goto label1", "if $ z0 == 0 goto label3", "label return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = com google protobuf rope byte string r0", "$ i1 = r1 total length", "r2 = com google protobuf rope byte string r0", "$ i0 = r2 tree depth", "$ i2 = com google protobuf rope byte string min length $ i0", "if $ i1 < $ i2 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i1 < $ i2 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = com google protobuf structural message info r0", "$ r1 = r2 field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com google protobuf any r0", "r1 = r5 type url_", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "$ r4 = java lang string r1", "return $ r4", "if $ z0 == 0 goto label1", "label r2 = com google protobuf byte string r1", "r3 = r2 to string utf8", "r6 = com google protobuf any r0", "r6 type url_ = r3", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z0 = @ parameter2", "$ r3 = new java io output stream writer", "specialinvoke $ r3 < init > r1 \\ `` utf-8\\ ``", "net razorvine pickle pretty print print r0 $ r3 z0", "$ r3 flush", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = org elasticsearch index rankeval precision at k r0", "$ z0 = r1 ignore unlabeled", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = class \\ `` lorg reflection reflection \\ ``", "$ r1 = $ r0 get class loader", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org reflection util configuration builder r0", "r2 input filter = r1", "r3 = org reflection util configuration builder r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org reflection util configuration builder r0", "r1 be parallel = z0", "r2 = org reflection util configuration builder r0", "return r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = org reflection util reflection utils predicate with modifier 1", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "org reflection vfs vfs default url type = r0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org reflection store r0", "$ r1 = r3 store map", "$ r2 = $ r1 key set", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r11 = org reflection util configuration builder r0", "$ r2 = r11 metadata adapter", "if $ r2 == null goto label1", "r12 = org reflection util configuration builder r0", "$ r4 = r12 metadata adapter", "return $ r4", "if $ r2 == null goto label1", "label r9 = new org reflection adapter javassist adapter", "specialinvoke r9 < init >", "r13 = org reflection util configuration builder r0", "r14 = org reflection adapter metadata adapter r9", "r13 metadata adapter = r14", "label r15 = org reflection adapter metadata adapter r9", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = lengthof r0", "if $ i0 ! = 0 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if $ i0 ! = 0 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 annotation type", "r7 = org reflection reflection r0", "$ r3 = r7 get field annotate with $ r2", "$ r4 = newarray com google common base predicate [ 1 ]", "$ r5 = org reflection reflection utils with annotation r1", "$ r4 [ 0 ] = $ r5", "$ r6 = org reflection reflection utils get all $ r3 $ r4", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org reflection store r0", "r2 = r6 get class \\ `` lorg reflection scanner type annotation scanner \\ ``", "if r2 == null goto label1", "$ r3 = class \\ `` ljava lang annotation inherit \\ ``", "$ r4 = $ r3 get name", "$ r5 = r2 get $ r4", "$ z0 = $ r5 contain r1", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org roaringbitmap buffer buffer fast aggregation naive_or r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = org roaringbitmap buffer immutable roar array r0", "$ i0 = r1 size", "if $ i0 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r14 = new org roaringbitmap buffer mutable roar bitmap", "specialinvoke r14 < init >", "i8 = 0", "i9 = 0", "label if i8 > = i0 goto label4", "r15 = org roaringbitmap buffer immutable roar bitmap r0", "$ r5 = r15 high low container", "$ i2 = $ r5 size", "if i9 > = $ i2 goto label4", "r16 = org roaringbitmap buffer immutable roar bitmap r0", "$ r6 = r16 high low container", "r2 = $ r6 get container at index i9", "$ i3 = r2 get cardinality", "$ i4 = $ i3 + i8", "if $ i4 > i0 goto label2", "$ r10 = r14 high low container", "$ r12 = org roaringbitmap buffer mutable roar array $ r10", "r17 = org roaringbitmap buffer immutable roar bitmap r0", "$ r11 = r17 high low container", "$ s6 = $ r11 get key at index i9", "$ r13 = r2 clone", "$ r12 append $ s6 $ r13", "$ i7 = r2 get cardinality", "i8 = i8 + $ i7", "goto label3", "label i9 = i9 + 1", "goto label1", "if $ i4 > i0 goto label2", "label i1 = i0 - i8", "r3 = r2 limit i1", "$ r7 = r14 high low container", "$ r9 = org roaringbitmap buffer mutable roar array $ r7", "r18 = org roaringbitmap buffer immutable roar bitmap r0", "$ r8 = r18 high low container", "$ s5 = $ r8 get key at index i9", "$ r9 append $ s5 r3", "goto label4", "label return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [], []]}
{"nodes": ["r0 = @ this", "$ z0 = r0 instanceof org roaringbitmap buffer mappeable bitmap container", "if $ z0 == 0 goto label1", "return \\ `` mappeablebitmap \\ ``", "if $ z0 == 0 goto label1", "label $ z1 = r0 instanceof org roaringbitmap buffer mappeable array container", "if $ z1 == 0 goto label2", "return \\ `` mappeablearray\\ ``", "if $ z1 == 0 goto label2", "label return \\ `` mappeablerun\\ ``"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r0 instanceof org roaringbitmap buffer mappeable array container", "if $ z0 == 0 goto label3", "$ z6 = r1 instanceof org roaringbitmap buffer mappeable array container", "if $ z6 == 0 goto label1", "$ r25 = org roaringbitmap buffer mappeable array container r1", "r27 = org roaringbitmap buffer mappeable container r0", "$ r26 = r27 or $ r25", "return $ r26", "if $ z6 == 0 goto label1", "label $ z7 = r1 instanceof org roaringbitmap buffer mappeable bitmap container", "if $ z7 == 0 goto label2", "$ r23 = org roaringbitmap buffer mappeable bitmap container r1", "$ r22 = org roaringbitmap buffer mappeable array container r0", "$ r24 = $ r23 lazyor $ r22", "return $ r24", "if $ z7 == 0 goto label2", "label $ r20 = org roaringbitmap buffer mappeable run container r1", "$ r19 = org roaringbitmap buffer mappeable array container r0", "$ r21 = $ r20 lazyor $ r19", "return $ r21", "if $ z0 == 0 goto label3", "label $ z1 = r0 instanceof org roaringbitmap buffer mappeable run container", "if $ z1 == 0 goto label6", "$ z4 = r1 instanceof org roaringbitmap buffer mappeable array container", "if $ z4 == 0 goto label4", "$ r17 = org roaringbitmap buffer mappeable run container r0", "$ r16 = org roaringbitmap buffer mappeable array container r1", "$ r18 = $ r17 lazyor $ r16", "return $ r18", "if $ z4 == 0 goto label4", "label $ z5 = r1 instanceof org roaringbitmap buffer mappeable bitmap container", "if $ z5 == 0 goto label5", "$ r14 = org roaringbitmap buffer mappeable bitmap container r1", "$ r13 = org roaringbitmap buffer mappeable run container r0", "$ r15 = $ r14 lazyor $ r13", "return $ r15", "if $ z5 == 0 goto label5", "label $ r11 = org roaringbitmap buffer mappeable run container r1", "r28 = org roaringbitmap buffer mappeable container r0", "$ r12 = r28 or $ r11", "return $ r12", "if $ z1 == 0 goto label6", "label $ z2 = r1 instanceof org roaringbitmap buffer mappeable array container", "if $ z2 == 0 goto label7", "$ r9 = org roaringbitmap buffer mappeable bitmap container r0", "$ r8 = org roaringbitmap buffer mappeable array container r1", "$ r10 = $ r9 lazyor $ r8", "return $ r10", "if $ z2 == 0 goto label7", "label $ z3 = r1 instanceof org roaringbitmap buffer mappeable bitmap container", "if $ z3 == 0 goto label8", "$ r6 = org roaringbitmap buffer mappeable bitmap container r0", "$ r5 = org roaringbitmap buffer mappeable bitmap container r1", "$ r7 = $ r6 lazyor $ r5", "return $ r7", "if $ z3 == 0 goto label8", "label $ r3 = org roaringbitmap buffer mappeable bitmap container r0", "$ r2 = org roaringbitmap buffer mappeable run container r1", "$ r4 = $ r3 lazyor $ r2", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [], [51], [52], [53], [54], [55], [56], [], [58], [59], [60], [61], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org roaringbitmap array container r0", "$ i2 = r18 get cardinality", "$ i3 = r1 get cardinality", "i0 = $ i2 + $ i3", "if i0 < = 4096 goto label8", "r16 = new org roaringbitmap bitmap container", "specialinvoke r16 < init >", "i21 = 0", "label $ i7 = r1 cardinality", "if i21 > = $ i7 goto label2", "$ r11 = r1 content", "s22 = $ r11 [ i21 ]", "$ i17 = org roaringbitmap util to int unsigned s22", "i23 = $ i17 > > > 6", "$ r12 = r16 bitmap", "$ l19 = $ r12 [ i23 ]", "$ l18 = 1l < < s22", "$ l20 = $ l19 ^ $ l18", "$ r12 [ i23 ] = $ l20", "i21 = i21 + 1", "goto label1", "if i21 > = $ i7 goto label2", "label i24 = 0", "label r19 = org roaringbitmap array container r0", "$ i8 = r19 cardinality", "if i24 > = $ i8 goto label4", "r20 = org roaringbitmap array container r0", "$ r9 = r20 content", "s25 = $ r9 [ i24 ]", "$ i13 = org roaringbitmap util to int unsigned s25", "i26 = $ i13 > > > 6", "$ r10 = r16 bitmap", "$ l15 = $ r10 [ i26 ]", "$ l14 = 1l < < s25", "$ l16 = $ l15 ^ $ l14", "$ r10 [ i26 ] = $ l16", "i24 = i24 + 1", "goto label3", "if i24 > = $ i8 goto label4", "label r16 cardinality = 0", "r14 = r16 bitmap", "i27 = lengthof r14", "i28 = 0", "label if i28 > = i27 goto label6", "l1 = r14 [ i28 ]", "$ i10 = r16 cardinality", "$ i11 = java lang long bit count l1", "$ i12 = $ i10 + $ i11", "r16 cardinality = $ i12", "i28 = i28 + 1", "goto label5", "label if i28 > = i27 goto label6", "label $ i9 = r16 cardinality", "if $ i9 > 4096 goto label7", "$ r8 = r16 to array container", "r21 = org roaringbitmap container $ r8", "return r21", "if $ i9 > 4096 goto label7", "label r22 = org roaringbitmap container r16", "return r22", "if i0 < = 4096 goto label8", "label r17 = new org roaringbitmap array container", "specialinvoke r17 < init > i0", "r23 = org roaringbitmap array container r0", "$ r4 = r23 content", "r24 = org roaringbitmap array container r0", "$ i4 = r24 get cardinality", "$ r5 = r1 content", "$ i5 = r1 get cardinality", "$ r6 = r17 content", "$ i6 = org roaringbitmap util unsigned exclusive union2by2 $ r4 $ i4 $ r5 $ i5 $ r6", "r17 cardinality = $ i6", "r25 = org roaringbitmap container r17", "return r25"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [56], [57], [58], [], [60], [61], [], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed atom category r0", "$ r1 = r2 label", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed atom category r0", "$ r1 = r2 scheme", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom category r0", "r2 scheme = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed atom content r0", "$ r1 = r2 mode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools utils date copy r1", "r3 = com rometools rome feed atom entry r0", "r3 publish = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom entry r0", "r2 summary = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com rometools rome feed atom entry r0", "$ r2 = r6 title", "if $ r2 ! = null goto label1", "r5 = new com rometools rome feed atom content", "specialinvoke r5 < init >", "r7 = com rometools rome feed atom entry r0", "r7 title = r5", "label r8 = com rometools rome feed atom entry r0", "$ r3 = r8 title", "$ r3 set value r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools utils date copy r1", "r3 = com rometools rome feed atom entry r0", "r3 update = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom fee r0", "r2 other link = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com rometools rome feed atom fee r0", "$ r1 = r3 contributor", "$ r2 = com rometools utils list create when null $ r1", "r4 = com rometools rome feed atom fee r0", "r4 contributor = $ r2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom fee r0", "r2 module = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed atom generator r0", "r2 version = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed atom link r0", "$ r1 = r2 hreflang", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed module d c module impl r0", "r2 creator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com rometools rome feed module d c module impl r0", "$ r1 = r3 type", "$ r2 = com rometools utils list create when null $ r1", "r4 = com rometools rome feed module d c module impl r0", "r4 type = $ r2", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools utils list create r1", "r3 = com rometools rome feed module d c module impl r0", "r3 language = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed module d c module impl r0", "r2 right = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = com rometools rome feed module d c module impl r0", "$ r1 = r4 right", "$ r2 = com rometools utils list first entry $ r1", "$ r3 = java lang string $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools utils list create r1", "r3 = com rometools rome feed module d c module impl r0", "r3 right = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com rometools rome feed module sy module impl r0", "$ i0 = r1 update frequency", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com rometools rome feed module sy module impl r0", "r1 update frequency = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r channel r0", "$ r1 = r2 web master", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = com rometools rome feed r channel r0", "$ r1 = r3 skip hour", "$ r2 = com rometools utils list create when null $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = com rometools rome feed r channel r0", "$ r1 = r3 skip day", "$ r2 = com rometools utils list create when null $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r channel r0", "r2 category = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r channel r0", "r2 generator = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r cloud r0", "$ r1 = r2 domain", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r cloud r0", "$ r1 = r2 path", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r content r0", "r2 value = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r enclosure r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r guid r0", "$ r1 = r2 value", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r image r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r image r0", "r2 width = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r image r0", "$ r1 = r2 height", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r item r0", "$ r1 = r2 source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r item r0", "r2 guid = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed r item r0", "r2 module = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com rometools utils date copy r1", "r3 = com rometools rome feed r item r0", "r3 expiration date = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed r text input r0", "$ r1 = r2 name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com rometools rome feed synd synd entry impl r0", "$ r2 = specialinvoke r3 get d c module", "$ r2 set date r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = com rometools rome feed synd synd entry impl r0", "$ r1 = r3 update date", "$ r2 = com rometools utils date copy $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = new java util date", "$ l0 = r1 get time", "specialinvoke r3 < init > $ l0", "r4 = com rometools rome feed synd synd entry impl r0", "r4 update date = r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome feed synd synd feed impl r0", "$ r1 = r2 encode", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = com rometools rome feed synd synd feed impl r0", "$ r1 = r4 description", "if $ r1 == null goto label1", "r5 = com rometools rome feed synd synd feed impl r0", "$ r2 = r5 description", "$ r3 = $ r2 get value", "return $ r3", "if $ r1 == null goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = com rometools rome feed synd synd feed impl r0", "$ r2 = r6 description", "if $ r2 ! = null goto label1", "r5 = new com rometools rome feed synd synd content impl", "specialinvoke r5 < init >", "r7 = com rometools rome feed synd synd feed impl r0", "r8 = com rometools rome feed synd synd content r5", "r7 description = r8", "label r9 = com rometools rome feed synd synd feed impl r0", "$ r3 = r9 description", "$ r3 set value r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com rometools rome feed synd synd feed impl r0", "$ r2 = specialinvoke r3 get d c module", "$ r2 set right r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com rometools rome feed synd synd feed impl r0", "$ r2 = specialinvoke r4 get d c module", "$ r3 = com rometools rome feed synd synd category list facade convert element synd category to subject r1", "$ r2 set subject $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed wire feed r0", "r2 feed type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com rometools rome feed wire feed r0", "r2 encode = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r2 = com rometools rome io impl date parser additional_masks", "$ i0 = lengthof $ r2", "if $ i0 < = 0 goto label1", "$ r3 = com rometools rome io impl date parser additional_masks", "r4 = com rometools rome io impl date parser parse use mask $ r3 r0 r1", "if r4 == null goto label1", "return r4", "if r4 == null goto label1", "label r5 = com rometools rome io impl date parser parse w3 c date time r0 r1", "if r5 ! = null goto label2", "r5 = com rometools rome io impl date parser parse r f c822 r0 r1", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "$ r1 = com rometools rome io impl d c module generator namespaces", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = new java util array list", "specialinvoke r9 < init >", "r4 = r2 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label2", "$ r7 = r4 next", "r5 = java lang string $ r7", "r10 = com rometools rome io impl d c module generator r0", "$ r8 = r10 generate simple element r1 r5", "r9 add $ r8", "goto label1", "if $ z0 == 0 goto label2", "label return r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "return \\ `` text input\\ ``"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = com rometools rome io synd feed input r0", "$ r1 = r2 feed input", "$ r1 set xml healer on z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = com rometools rome io synd feed input r0", "$ r1 = r2 feed input", "$ z0 = $ r1 get xml healer on", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = com rometools rome io synd feed output r0", "$ r2 = r5 feed output", "$ r3 = r1 create wire feed", "$ r4 = $ r2 output j dom $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = com rometools rome io wire feed output get fee generator", "$ r1 = $ r0 get support feed type", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "i0 = lengthof r0", "i1 = 0", "label if i1 > = i0 goto label3", "r2 = r0 [ i1 ]", "if r2 == null goto label2", "return r2", "if r2 == null goto label2", "label i1 = i1 + 1", "goto label1", "label if i1 > = i0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ parameter0", "rx completable require non null r0", "$ r2 = rx observable from r0", "$ r3 = rx completable from observable $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r4 = rx completable r0", "$ r3 = r4 delay l0 r1 r2 0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "rx completable require non null r2", "$ r4 = rx scheduler scheduler computation", "r6 = rx completable r0", "$ r5 = r6 timeout0 l0 r1 $ r4 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "rx completable require non null r2", "$ r4 = rx scheduler scheduler computation", "r6 = rx completable r0", "$ r5 = r6 timeout0 l0 r1 $ r4 r2", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = rx internal util utility function identity", "rx internal operator backpressure utils post complete do r0 r1 r2 $ r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = rx internal operator defer scalar subscriber r0", "$ r1 = r2 actual", "$ r1 on complete", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = rx internal operator defer scalar subscriber r0", "r3 setup downstream", "r1 unsafe subscribe r0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["$ r0 = rx internal operator never observable holder never", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = rx plugins rx java hook get on generic schedule executor service", "if r0 ! = null goto label1", "$ r3 = rx internal scheduler generic schedule executor service factory create default", "return $ r3", "if r0 ! = null goto label1", "label $ r1 = r0 call", "$ r2 = java util concurrent schedule executor service $ r1", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = rx internal scheduler new thread worker executor", "$ r1 remove r0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get", "r5 = java lang throwable $ r1", "$ r2 = rx internal util exception utils terminate", "if r5 == $ r2 goto label1", "$ r3 = rx internal util exception utils terminate", "$ r4 = r0 get and set $ r3", "r5 = java lang throwable $ r4", "label return r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new rx internal util internal observable utils $ replay supplier no params", "specialinvoke r2 < init > r0", "r3 = rx function func0 r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "label r7 = r0 get declare field r1", "$ r3 = rx internal util unsafe unsafe access unsafe", "$ l0 = $ r3 object field offset r7", "label return $ l0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = rx notification r0", "$ z0 = r2 be on error", "if $ z0 == 0 goto label1", "r3 = rx notification r0", "$ r1 = r3 throwable", "if $ r1 == null goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ r1 == null goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = rx internal util scalar synchronous observable create r0", "r2 = rx observable $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r12 = new java util array list", "specialinvoke r12 < init >", "r3 = r0 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r11 = r3 next", "r4 = rx observable $ r11", "r12 add r4", "goto label1", "if $ z0 == 0 goto label2", "label $ i0 = r12 size", "$ r6 = newarray rx observable [ $ i0 ]", "$ r7 = r12 to array $ r6", "$ r8 = rx observable just $ r7", "r13 = new rx internal operator operator zip", "specialinvoke r13 < init > r1", "r14 = rx observable $ operator r13", "$ r10 = $ r8 lift r14", "return $ r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r2 = rx observable r0", "$ r1 = rx internal operator cache observable from r2", "r3 = rx observable $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "$ r2 = rx scheduler scheduler computation", "r4 = rx observable r0", "$ r3 = r4 delay subscription l0 r1 $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "$ r1 = rx observable from r0", "$ r2 = rx internal util utility function identity", "$ r3 = $ r1 concat map eager $ r2 i0", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = rx observable r0", "$ r2 = r4 take 1", "$ r3 = $ r2 single or default r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = rx internal operator operator on backpressure late instance", "r3 = rx observable r0", "r4 = rx observable $ operator $ r1", "$ r2 = r3 lift r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r1 = rx internal operator operator serialize instance", "r3 = rx observable r0", "r4 = rx observable $ operator $ r1", "$ r2 = r3 lift r4", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r3 = rx observable r0", "$ r2 = r3 debounce l0 r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = rx scheduler scheduler computation", "r5 = rx observable r0", "$ r4 = r5 timeout l0 r1 r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r6 = new rx internal operator operator timeout", "specialinvoke r6 < init > l0 r1 r2 r3", "r7 = rx observable r0", "r8 = rx observable $ operator r6", "$ r5 = r7 lift r8", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = rx observable r0", "$ r1 = r2 window i0 i0", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = rx internal observer assertable subscriber observable create 9223372036854775807l", "r3 = rx observable r0", "r4 = rx observer r1", "r3 subscribe r4", "r5 = rx observer assertable subscriber r1", "return r5"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new rx observer test subscriber", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["$ z0 = rx plugins rx java hook lockdown", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label rx plugins rx java hook init", "rx plugins rx java hook on computation scheduler = null", "rx plugins rx java hook on i o scheduler = null", "rx plugins rx java hook on new thread scheduler = null", "rx plugins rx java hook on generic schedule executor service = null"], "adj": [[1], [2], [], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = rx plugins rx java hook on observable subscribe error", "if r1 == null goto label1", "$ r2 = r1 call r0", "$ r3 = java lang throwable $ r2", "return $ r3", "if r1 == null goto label1", "label return r0"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = rx plugins rx java hook lockdown", "if $ z0 == 0 goto label1", "return", "if $ z0 == 0 goto label1", "label rx plugins rx java hook on generic schedule executor service = r0"], "adj": [[1], [2], [3], [], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "$ r3 = rx single a observable r0", "$ r4 = rx single a observable r1", "$ r5 = rx single a observable r2", "$ r6 = rx observable merge $ r3 $ r4 $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r5 = @ parameter5", "r6 = @ parameter6", "$ r7 = newarray rx single [ 6 ]", "$ r7 [ 0 ] = r0", "$ r7 [ 1 ] = r1", "$ r7 [ 2 ] = r2", "$ r7 [ 3 ] = r3", "$ r7 [ 4 ] = r4", "$ r7 [ 5 ] = r5", "r10 = new rx single $ 7", "specialinvoke r10 < init > r6", "r11 = rx function func n r10", "$ r9 = rx internal operator single operator zip zip $ r7 r11", "return $ r9"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = new rx internal operator single take until completable", "r6 = rx single r0", "$ r3 = r6 on subscribe", "specialinvoke r5 < init > $ r3 r1", "r7 = rx single $ on subscribe r5", "$ r4 = rx single create r7", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "$ r2 = rx scheduler scheduler computation", "r4 = rx single r0", "$ r3 = r4 timeout l0 r1 null $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon augment source r0", "$ r1 = r3 option", "$ r2 = $ r1 get top level element", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon augment source r0", "$ r1 = r2 option", "$ z0 = $ r1 be x include aware set", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon augment source r0", "$ r1 = r2 option", "$ z0 = $ r1 be x include aware", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon augment source r0", "$ r1 = r3 option", "$ r2 = $ r1 get error listener", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "if 56320 > i0 goto label1", "if i0 > 57343 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if i0 > 57343 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 65536 goto label2", "$ r0 = net sf saxon charcode x m l character data data", "$ b1 = $ r0 [ i0 ]", "$ b2 = $ b1 & 1", "if $ b2 == 0 goto label1", "$ z0 = 1", "goto label4", "label return $ z0", "if $ b2 == 0 goto label1", "label $ z0 = 0", "if i0 > = 65536 goto label2", "label if 65536 > i0 goto label3", "if i0 > 1114111 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["i0 = @ parameter0", "if i0 > = 65536 goto label2", "$ r0 = net sf saxon charcode x m l character data data", "$ b1 = $ r0 [ i0 ]", "$ b2 = $ b1 & 8", "if $ b2 == 0 goto label1", "$ z0 = 1", "goto label4", "label return $ z0", "if $ b2 == 0 goto label1", "label $ z0 = 0", "if i0 > = 65536 goto label2", "label if 65536 > i0 goto label3", "if i0 > 1114111 goto label3", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon controller r0", "$ r1 = r3 initial mode", "$ r2 = $ r1 get clark name", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon controller r0", "$ z0 = r1 there have be an explicit result document", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r5 = net sf saxon controller r0", "$ r2 = r5 reusable sequence outputter", "if $ r2 == null goto label1", "r6 = net sf saxon controller r0", "r1 = r6 reusable sequence outputter", "r7 = net sf saxon controller r0", "r7 reusable sequence outputter = null", "return r1", "if $ r2 == null goto label1", "label r4 = new net sf saxon event sequence outputter", "r8 = net sf saxon controller r0", "specialinvoke r4 < init > r8 i0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon controller r0", "$ r1 = r2 executable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon controller r0", "r3 = net sf saxon om item r1", "r2 initial context item = r3", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon controller r0", "$ r1 = r2 bindery", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon controller r0", "r2 rule manager = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon controller r0", "r1 trace pause = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon controller r0", "$ r1 = r2 path map", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon event builder r0", "r1 line number = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon event builder r0", "$ z0 = r1 time", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon event content handler proxy r0", "$ l0 = r1 current location id", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon event content handler proxy locator r0", "$ r2 = r4 parent", "r1 = $ r2 get location provider", "if r1 ! = null goto label1", "return -1", "if r1 ! = null goto label1", "label r5 = net sf saxon event content handler proxy locator r0", "$ r3 = r5 parent", "$ l0 = $ r3 get current location id", "$ i1 = r1 get line number $ l0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon event emitter r0", "$ r1 = r2 output stream", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon event name pool converter r0", "r2 next receiver = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon event pipeline configuration r0", "$ z0 = r1 use xsi schema location", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon event receive content handler r0", "r2 pipe = null", "r3 = net sf saxon event receive content handler r0", "r3 pool = null", "r4 = net sf saxon event receive content handler r0", "r4 receiver = null", "r5 = net sf saxon event receive content handler r0", "r5 ignore ignorable = 0", "r6 = net sf saxon event receive content handler r0", "r6 retain d t d attribute type = 0", "r7 = net sf saxon event receive content handler r0", "r7 char use = 0", "r8 = net sf saxon event receive content handler r0", "$ r1 = r8 slice", "$ r1 set length 0", "r9 = net sf saxon event receive content handler r0", "r9 namespaces use = 0", "r10 = net sf saxon event receive content handler r0", "r10 locator = null", "r11 = net sf saxon event receive content handler r0", "r11 allow disable output escape = 0", "r12 = net sf saxon event receive content handler r0", "r12 escape disable = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r5 = net sf saxon event sequence writer r0", "$ r1 = r5 builder", "$ z0 = $ r1 instanceof net sf saxon tinytree tiny builder", "if $ z0 == 0 goto label1", "r6 = net sf saxon event sequence writer r0", "$ r2 = r6 builder", "$ r3 = net sf saxon tinytree tiny builder $ r2", "$ r4 = $ r3 get tree", "$ i0 = $ r4 get number of node", "if $ i0 > = 20000 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ i0 > = 20000 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon event sequence writer r0", "r2 in start tag = 0", "r3 = net sf saxon event sequence writer r0", "$ r1 = r3 outputter", "$ r1 start content", "r4 = net sf saxon event sequence writer r0", "r4 previous atomic = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r4 = new net sf saxon event meta tag adjuster", "specialinvoke $ r4 < init >", "$ r4 set pipeline configuration r1", "$ r4 set output property r2", "$ r4 set be x h t m l 1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon event start tag buffer r0", "$ r1 = r2 buffer attribute", "$ i0 = $ r1 get length", "if $ i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "specialinvoke r0 set system id r1", "r3 = net sf saxon event transformer receiver r0", "$ r2 = r3 controller", "$ r2 set base output u r i r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "r3 = new java lang illegal argument exception", "specialinvoke r3 < init > \\ `` result must not be null\\ ``", "throw r3", "if r1 ! = null goto label1", "label r4 = net sf saxon event transformer receiver r0", "r4 result = r1", "return"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = net sf saxon event tree receiver r0", "$ r1 = r5 next receiver", "if $ r1 ! = null goto label1", "r4 = new java lang illegal state exception", "specialinvoke r4 < init > \\ `` tree receiver open no underlie receiver provided\\ ``", "throw r4", "if $ r1 ! = null goto label1", "label r6 = net sf saxon event tree receiver r0", "$ r2 = r6 next receiver", "$ r2 open", "r7 = net sf saxon event tree receiver r0", "r7 previous atomic = 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i4 = 0", "label $ i2 = r1 length", "if i4 > = $ i2 goto label5", "c0 = r1 char at i4", "if c0 < = 127 goto label4", "$ z0 = net sf saxon charcode utf16 be high surrogate c0", "if $ z0 == 0 goto label3", "i4 = i4 + 1", "$ c3 = r1 char at i4", "i1 = net sf saxon charcode utf16 combine pair c0 $ c3", "r4 = net sf saxon event x m l emitter r0", "$ r3 = r4 character set", "$ z2 = $ r3 in charset i1", "if $ z2 ! = 0 goto label2", "return i1", "if $ z2 ! = 0 goto label2", "label goto label4", "label i4 = i4 + 1", "goto label1", "if $ z0 == 0 goto label3", "label r5 = net sf saxon event x m l emitter r0", "$ r2 = r5 character set", "$ z1 = $ r2 in charset c0", "if $ z1 ! = 0 goto label4", "return c0", "if i4 > = $ i2 goto label5", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [], [22], [23], [24], [25], [26], [], [28], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof java lang string", "if $ z0 == 0 goto label1", "r12 = net sf saxon event x m l emitter r0", "$ r11 = r12 writer", "$ r10 = java lang string r1", "$ r11 write $ r10", "goto label5", "label return", "if $ z0 == 0 goto label1", "label $ z1 = r1 instanceof net sf saxon tinytree char slice", "if $ z1 == 0 goto label2", "$ r9 = net sf saxon tinytree char slice r1", "r13 = net sf saxon event x m l emitter r0", "$ r8 = r13 writer", "$ r9 write $ r8", "if $ z1 == 0 goto label2", "label $ z2 = r1 instanceof net sf saxon om fast string buffer", "if $ z2 == 0 goto label3", "$ r7 = net sf saxon om fast string buffer r1", "r14 = net sf saxon event x m l emitter r0", "$ r6 = r14 writer", "$ r7 write $ r6", "if $ z2 == 0 goto label3", "label $ z3 = r1 instanceof net sf saxon tinytree compress whitespace", "if $ z3 == 0 goto label4", "$ r5 = net sf saxon tinytree compress whitespace r1", "r15 = net sf saxon event x m l emitter r0", "$ r4 = r15 writer", "$ r5 write $ r4", "if $ z3 == 0 goto label4", "label r16 = net sf saxon event x m l emitter r0", "$ r2 = r16 writer", "$ r3 = r1 to string", "$ r2 write $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init > \\ `` get another\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon evpull start element event r0", "r1 name code = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r17 = net sf saxon evpull start element event r0", "$ r4 = r17 pipe", "$ r5 = $ r4 get configuration", "r1 = $ r5 get name pool", "r18 = net sf saxon evpull start element event r0", "$ i2 = r18 name code", "r19 = net sf saxon evpull start element event r0", "$ i3 = specialinvoke r19 fixup r1 $ i2 0", "r20 = net sf saxon evpull start element event r0", "r20 name code = $ i3", "r21 = net sf saxon evpull start element event r0", "$ r6 = r21 attribute", "if $ r6 == null goto label3", "i6 = 0", "label r22 = net sf saxon evpull start element event r0", "$ r7 = r22 attribute", "$ i4 = $ r7 size", "if i6 > = $ i4 goto label3", "r23 = net sf saxon evpull start element event r0", "$ r8 = r23 attribute", "$ r9 = $ r8 get i6", "r2 = net sf saxon om node info $ r9", "i0 = r2 get name code", "r24 = net sf saxon evpull start element event r0", "i1 = specialinvoke r24 fixup r1 i0 i6", "if i0 == i1 goto label2", "r16 = new net sf saxon om orphan", "$ r11 = r2 get configuration", "specialinvoke r16 < init > $ r11", "r16 set node kind 2", "r16 set name code i1", "$ r12 = r2 get string value", "r16 set string value $ r12", "$ i5 = r2 get type annotation", "r16 set type annotation $ i5", "$ r13 = r2 get system id", "r16 set system id $ r13", "r25 = net sf saxon evpull start element event r0", "$ r14 = r25 attribute", "$ r14 set i6 r16", "label i6 = i6 + 1", "goto label1", "if i6 > = $ i4 goto label3", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon evpull stax to event bridge r0", "r2 reader = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = net sf saxon expr atomic sequence converter r0", "$ r3 = r11 operand", "$ r4 = r1 simplify $ r3", "r12 = net sf saxon expr atomic sequence converter r0", "r12 operand = $ r4", "r13 = net sf saxon expr atomic sequence converter r0", "$ r5 = r13 operand", "$ z0 = $ r5 instanceof net sf saxon expr literal", "if $ z0 == 0 goto label1", "$ r6 = r1 get static context", "$ r7 = $ r6 make early evaluation context", "r14 = net sf saxon expr atomic sequence converter r0", "$ r8 = r14 iterate $ r7", "r2 = net sf saxon value sequence extent make sequence extent $ r8", "$ r9 = net sf saxon value value a value r2", "$ r10 = net sf saxon expr literal make literal $ r9", "r15 = net sf saxon expr expression $ r10", "return r15", "if $ z0 == 0 goto label1", "label r16 = net sf saxon expr expression r0", "return r16"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], []]}
{"nodes": ["i3 = @ parameter0", "i0 = @ parameter1", "if i3 == 632 goto label1", "if i3 ! = 15 goto label2", "label return 1", "if i3 ! = 15 goto label2", "label if i3 ! = 635 goto label3", "i3 = 517", "label $ r1 = net sf saxon expr cast expression cast table", "$ r2 = $ r1 get i3", "$ r3 = int [ ] $ r2", "r0 = int [ ] $ r3", "if r0 ! = null goto label4", "return 0", "if r0 ! = null goto label4", "label i4 = 0", "label $ i1 = lengthof r0", "if i4 > = $ i1 goto label7", "$ i2 = r0 [ i4 ]", "if $ i2 ! = i0 goto label6", "return 1", "if $ i2 ! = i0 goto label6", "label i4 = i4 + 1", "goto label5", "if i4 > = $ i1 goto label7", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [], [22], [23], [], [25], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sf saxon expr cast expression r0", "$ r2 = r3 target type", "r4 = net sf saxon type item type $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon expr collation map r0", "r2 default collation name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = new net sf saxon expr context item expression", "specialinvoke r4 < init >", "r5 = net sf saxon expr context item expression r0", "$ r3 = r5 item type", "r4 item type = $ r3", "r6 = net sf saxon expr expression r4", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r4 = new net sf saxon expr pair iterator", "r5 = net sf saxon expr assignation r0", "$ r3 = r5 sequence", "r6 = net sf saxon expr assignation r0", "$ r2 = r6 action", "specialinvoke r4 < init > $ r3 $ r2", "r7 = java util iterator r4", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = new java lang unsupported operation exception", "$ r4 = new java lang string buffer", "specialinvoke $ r4 < init >", "$ r5 = $ r4 append \\ `` expression \\ ``", "$ r6 = r0 get class", "$ r7 = $ r5 append $ r6", "$ r8 = $ r7 append \\ `` be not an updating expression\\ ``", "$ r9 = $ r8 to string", "specialinvoke $ r3 < init > $ r9", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr expression r0", "$ r1 = r2 container", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return", "if r1 ! = null goto label1", "label r5 = net sf saxon expr expression r0", "$ r2 = r5 container", "if $ r2 ! = null goto label2", "$ r4 = r1 container", "r6 = net sf saxon expr expression r0", "r6 container = $ r4", "goto label3", "label r8 = net sf saxon expr expression r0", "$ i0 = r8 location id", "if $ i0 ! = -1 goto label4", "r9 = net sf saxon expr expression r0", "net sf saxon expr expression tool copy location info r1 r9", "goto label5", "label r11 = net sf saxon expr expression r0", "r11 reset local static property", "if $ i0 ! = -1 goto label4", "label $ i1 = r1 location id", "if $ i1 ! = -1 goto label5", "r10 = net sf saxon expr expression r0", "net sf saxon expr expression tool copy location info r10 r1", "if $ r2 ! = null goto label2", "label r7 = net sf saxon expr expression r0", "$ r3 = r7 container", "r1 set container $ r3"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon expr expression r0", "$ i0 = r1 compute dependency", "r2 = net sf saxon expr expression r0", "$ i1 = r2 compute cardinality", "$ i2 = $ i0 | $ i1", "r3 = net sf saxon expr expression r0", "$ i3 = r3 compute special property", "$ i4 = $ i2 | $ i3", "r4 = net sf saxon expr expression r0", "r4 static property = $ i4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 2"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "return 0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r6 = new net sf saxon trans x path exception", "specialinvoke r6 < init > r1 r0", "r6 set be type error 1", "r6 set error code r2", "r6 set x path context r3", "r7 = java lang throwable r6", "throw r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon expr expression r0", "$ i0 = r4 location id", "if $ i0 ! = -1 goto label1", "return null", "if $ i0 ! = -1 goto label1", "label r5 = net sf saxon expr expression r0", "r1 = r5 get executable", "if r1 ! = null goto label2", "label r2 = r1 get location map", "if r2 ! = null goto label3", "label r6 = net sf saxon expr expression r0", "$ i1 = r6 location id", "$ l2 = long $ i1", "$ r3 = r2 get system id $ l2", "return $ r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr expression visitor r0", "$ r1 = r2 static context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon expr expression visitor r0", "r2 static context = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = specialinvoke r0 optimize r1 r2", "if r3 ! = r0 goto label2", "$ r5 = r1 get configuration", "r4 = $ r5 get type hierarchy", "r17 = net sf saxon expr atomizer r0", "$ r6 = r17 operand", "$ r7 = $ r6 get item type r4", "$ r8 = net sf saxon type build in atomic type any_atomic", "r18 = net sf saxon type item type $ r8", "$ z0 = r4 be sub type $ r7 r18", "if $ z0 == 0 goto label1", "r19 = net sf saxon expr atomizer r0", "$ r16 = r19 operand", "return $ r16", "if $ z0 == 0 goto label1", "label r20 = net sf saxon expr atomizer r0", "$ r9 = r20 operand", "$ z1 = $ r9 instanceof net sf saxon instruct value of", "if $ z1 == 0 goto label2", "r21 = net sf saxon expr atomizer r0", "$ r10 = r21 operand", "$ r11 = net sf saxon instruct value of $ r10", "$ i0 = $ r11 get option", "$ i1 = $ i0 & 1", "if $ i1 ! = 0 goto label2", "r22 = net sf saxon expr atomizer r0", "$ r12 = r22 operand", "$ r13 = net sf saxon instruct value of $ r12", "$ r14 = r1 get static context", "$ r15 = $ r13 convert to string join $ r14", "return $ r15", "if $ i1 ! = 0 goto label2", "label return r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [], [35], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr for expression r0", "$ r1 = r2 position variable", "if $ r1 ! = null goto label1", "$ b0 = 1", "goto label2", "label return $ b0", "if $ r1 ! = null goto label1", "label $ b0 = 2"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = net sf saxon expr for expression r0", "$ r4 = r9 sequence", "r2 = $ r4 iterate r1", "i3 = 1", "r10 = net sf saxon expr for expression r0", "i0 = r10 get local slot number", "i4 = -1", "r11 = net sf saxon expr for expression r0", "$ r5 = r11 position variable", "if $ r5 == null goto label1", "r12 = net sf saxon expr for expression r0", "$ r8 = r12 position variable", "i4 = $ r8 get local slot number", "label r3 = r2 next", "if r3 ! = null goto label2", "goto label4", "label return", "if r3 ! = null goto label2", "label r13 = net sf saxon om value representation r3", "r1 set local variable i0 r13", "if i4 < 0 goto label3", "$ i1 = i3", "i3 = i3 + 1", "$ l2 = long $ i1", "$ r7 = net sf saxon value int64 value make integer value $ l2", "r14 = net sf saxon om value representation $ r7", "r1 set local variable i4 r14", "label r15 = net sf saxon expr for expression r0", "$ r6 = r15 action", "$ r6 process r1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon expr iterate instr r0", "$ r1 = r3 action", "$ i0 = $ r1 get special property", "r4 = net sf saxon expr iterate instr r0", "$ r2 = r4 finally exp", "$ i1 = $ r2 get special property", "$ i2 = $ i0 & $ i1", "$ i3 = $ i2 & 4194304", "if $ i3 ! = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i3 ! = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = net sf saxon expr literal r0", "$ r5 = r6 value", "r2 = $ r5 iterate", "r3 = r1 get receiver", "label r4 = r2 next", "if r4 ! = null goto label2", "goto label3", "label return", "if r4 ! = null goto label2", "label r3 append r4 0 2", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon expr local variable reference r0", "$ i0 = r1 slot number", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon expr mono iterator r0", "$ z0 = r4 go", "if $ z0 == 0 goto label1", "r3 = new java util no such element exception", "specialinvoke r3 < init >", "throw r3", "if $ z0 == 0 goto label1", "label r5 = net sf saxon expr mono iterator r0", "r5 go = 1", "r6 = net sf saxon expr mono iterator r0", "$ r1 = r6 thing", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = net sf saxon expr optimizer r0", "$ r3 = r5 config", "r2 = $ r3 get type hierarchy", "$ r4 = r1 get item type r2", "$ z0 = $ r4 be atomic type", "if $ z0 == 0 goto label1", "return r1", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = @ parameter2", "if i0 ! = 1 goto label1", "r5 = new net sf saxon value closure", "specialinvoke r5 < init >", "r7 = net sf saxon value value r5", "return r7", "if i0 ! = 1 goto label1", "label r6 = new net sf saxon value memo closure", "specialinvoke r6 < init >", "r8 = net sf saxon value value r6", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "z0 = @ parameter2", "r3 = net sf saxon expr expression r1", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = r0 get external object model", "i1 = 0", "label $ i0 = r2 size", "if i1 > = $ i0 goto label3", "$ r6 = r2 get i1", "r3 = net sf saxon om external object model $ r6", "r4 = r3 get node list creator r1", "if r4 == null goto label2", "return r4", "if r4 == null goto label2", "label i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label3", "label $ r5 = net sf saxon expr p j converter $ to collection instance", "r7 = net sf saxon expr p j converter $ r5", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon expr simple expression r0", "$ i0 = r1 get implementation method", "$ i1 = $ i0 & 1", "if $ i1 ! = 0 goto label1", "return 49152", "if $ i1 ! = 0 goto label1", "label return 24576"], "adj": [[1], [2], [3], [4], [5], [], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = net sf saxon expr slash expression r0", "$ r2 = r4 step", "$ r3 = $ r2 get item type r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon expr subsequence iterator r0", "$ r1 = r3 base", "$ r2 = net sf saxon expr last position finder $ r1", "i0 = $ r2 get last position", "r4 = net sf saxon expr subsequence iterator r0", "$ i2 = r4 max", "i1 = java lang math min i0 $ i2", "r5 = net sf saxon expr subsequence iterator r0", "$ i3 = r5 min", "$ i4 = i1 - $ i3", "$ i5 = $ i4 + 1", "$ i6 = java lang math max $ i5 0", "return $ i6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 ! = r1 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if r0 ! = r1 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r8 = new net sf saxon expr role locator", "specialinvoke r8 < init > 2 \\ `` treat as\\", "r8 set error code \\ `` xpdy0050\\ ``", "$ i0 = r1 get cardinality", "r3 = net sf saxon expr cardinality checker make cardinality checker r0 $ i0 r8", "r9 = new net sf saxon expr item checker", "$ r7 = r1 get primary type", "specialinvoke r9 < init > r3 $ r7 r8", "r10 = net sf saxon expr expression r9", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr unary expression r0", "$ r1 = r2 operand", "$ i0 = $ r1 get cardinality", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon expr user function call r0", "r1 confirm = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon expr variable reference r0", "r1 filter = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon expr x path context major r0", "r1 = r2 tail call function", "r3 = net sf saxon expr x path context major r0", "r3 tail call function = null", "return r1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = r0 get current date time", "$ r2 = $ r1 get string value", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ d0 = net sf saxon exslt date day in year r0", "i0 = int $ d0", "$ r3 = new java lang string buffer", "specialinvoke $ r3 < init >", "$ r4 = r0 substring 0 4", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 append \\ `` -01-01\\ ``", "r1 = $ r6 to string", "$ d1 = net sf saxon exslt date day in week r1", "$ i5 = int $ d1", "$ i6 = $ i5 + 5", "i1 = $ i6 % 7", "if i1 ! = 0 goto label1", "$ i11 = 0", "goto label2", "label $ i7 = i0 - $ i11", "$ i8 = $ i7 + 6", "i3 = $ i8 7", "if $ i11 < 4 goto label3", "$ i10 = i3 + 1", "$ d4 = double $ i10", "return $ d4", "if $ i11 < 4 goto label3", "label if i3 < = 0 goto label4", "$ d3 = double i3", "return $ d3", "label if i3 < = 0 goto label4", "label $ r7 = r0 substring 0 4", "$ i9 = java lang integer parse int $ r7", "i4 = $ i9 - 1", "$ r8 = new java lang string buffer", "specialinvoke $ r8 < init >", "$ r9 = $ r8 append i4", "$ r10 = $ r9 append \\ `` -12-31\\ ``", "r2 = $ r10 to string", "$ d2 = net sf saxon exslt date week in year r2", "return $ d2", "if i1 ! = 0 goto label1", "label $ i11 = 7 - i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], [20], [21], [22], [], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [], [39], []]}
{"nodes": ["r0 = @ parameter0", "d0 = net sf saxon exslt date day in month r0", "$ z0 = java lang double be na n d0", "if $ z0 == 0 goto label1", "return d0", "if $ z0 == 0 goto label1", "label $ i0 = int d0", "$ i1 = $ i0 - 1", "$ i2 = $ i1 7", "$ i3 = $ i2 + 1", "$ d1 = double $ i3", "return $ d1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "d0 = net sf saxon exslt date year r0", "d1 = net sf saxon exslt date month in year r0", "d2 = net sf saxon exslt date day in month r0", "$ z0 = java lang double be na n d0", "if $ z0 ! = 0 goto label1", "$ z1 = java lang double be na n d1", "if $ z1 ! = 0 goto label1", "$ z2 = java lang double be na n d2", "if $ z2 == 0 goto label2", "label return #na n", "if $ z2 == 0 goto label2", "label $ r2 = new java util gregorian calendar", "$ i3 = int d0", "$ i0 = int d1", "$ i2 = $ i0 - 1", "$ i1 = int d2", "specialinvoke $ r2 < init > $ i3 $ i2 $ i1", "$ r2 set first day of week 1", "$ i4 = $ r2 get 7", "$ d3 = double $ i4", "return $ d3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon function collate function r0", "$ r1 = r2 expression base u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r12 = net sf saxon function doc r0", "$ r6 = r12 argument", "$ r7 = $ r6 [ 0 ]", "$ r8 = $ r7 evaluate item r1", "r3 = net sf saxon value atomic value $ r8", "if r3 ! = null goto label1", "return", "if r3 ! = null goto label1", "label r4 = r3 get string value", "label r13 = net sf saxon function doc r0", "$ r9 = r13 expression base u r i", "r14 = javax xml transform source locator r0", "net sf saxon function document send doc r4 $ r9 r1 r14 r2", "label goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon function extension function call r0", "$ r1 = r2 the method", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r9 = net sf saxon function function library list r0", "$ r6 = r9 library list", "r3 = $ r6 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label3", "$ r7 = r3 next", "r4 = net sf saxon function function library $ r7", "$ z1 = r4 instanceof net sf saxon query x query function binder", "if $ z1 == 0 goto label2", "$ r8 = net sf saxon query x query function binder r4", "r5 = $ r8 get declaration r1 r2", "if r5 == null goto label2", "return r5", "if r5 == null goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], [18], [19], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon function function library list r0", "$ r1 = r2 library list", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r8 = new net sf saxon function id $ id mapping function", "specialinvoke r8 < init > null", "r8 document = r0", "r9 = new net sf saxon expr map iterator", "r11 = net sf saxon expr map function r8", "specialinvoke r9 < init > r1 r11", "r10 = new net sf saxon sort document order iterator", "$ r7 = net sf saxon sort local order comparer get instance", "r12 = net sf saxon om sequence iterator r9", "r13 = net sf saxon sort node order comparer $ r7", "specialinvoke r10 < init > r12 r13", "r14 = net sf saxon om sequence iterator r10", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "r1 = net sf saxon function nilled get nilled property r0", "if r1 == null goto label1", "$ z0 = r1 get boolean value", "if $ z0 == 0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ z0 == 0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = lengthof r1", "r2 = net sf saxon function standard function get function r0 $ i0", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r3 = r2 implementation class", "label $ r4 = r3 new instance", "r8 = net sf saxon function system function $ r4", "r8 set detail r2", "r11 = new net sf saxon om structure q name", "specialinvoke r11 < init > \\ `` \\", "r8 set function name r11", "r8 set argument r1", "label r12 = net sf saxon expr function call r8", "return r12"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon function system function r0", "$ r1 = r2 detail", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon identity transformer handler r0", "$ r1 = r2 system id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct analyze string r0", "$ r1 = r2 match", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct attribute creator r0", "$ i0 = r1 option", "$ i1 = $ i0 | 4", "r2 = net sf saxon instruct attribute creator r0", "r2 option = $ i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = net sf saxon instruct bindery r0", "r3 define global variable r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon instruct block r0", "$ r1 = r2 child", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct element creator r0", "$ z0 = r1 inherit namespaces", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon instruct executable r0", "r2 character map index = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r5 = net sf saxon instruct executable r0", "$ r1 = r5 character map index", "if $ r1 ! = null goto label1", "r4 = new java util hash map", "specialinvoke r4 < init > 10", "r6 = net sf saxon instruct executable r0", "r6 character map index = r4", "label r7 = net sf saxon instruct executable r0", "$ r2 = r7 character map index", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r6 = net sf saxon instruct executable r0", "$ r1 = r6 key manager", "if $ r1 ! = null goto label1", "r5 = new net sf saxon trans key manager", "r7 = net sf saxon instruct executable r0", "$ r4 = r7 get configuration", "specialinvoke r5 < init > $ r4", "r8 = net sf saxon instruct executable r0", "r8 key manager = r5", "label r9 = net sf saxon instruct executable r0", "$ r2 = r9 key manager", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r8 = net sf saxon instruct executable r0", "$ r2 = r8 collation table", "if $ r2 ! = null goto label1", "r7 = new net sf saxon expr collation map", "r9 = net sf saxon instruct executable r0", "$ r6 = r9 config", "specialinvoke r7 < init > $ r6", "r10 = net sf saxon instruct executable r0", "r10 collation table = r7", "label r11 = net sf saxon instruct executable r0", "$ r3 = r11 collation table", "$ r4 = $ r3 get name collation r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r1 = net sf saxon instruct general variable r0", "$ b3 = r1 property", "$ b4 = $ b3 | 4", "$ b5 = byte $ b4", "r2 = net sf saxon instruct general variable r0", "r2 property = $ b5", "goto label2", "label return", "if z0 == 0 goto label1", "label r3 = net sf saxon instruct general variable r0", "$ b0 = r3 property", "$ b1 = $ b0 & -5", "$ b2 = byte $ b1", "r4 = net sf saxon instruct general variable r0", "r4 property = $ b2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r1 = net sf saxon instruct general variable r0", "$ b3 = r1 property", "$ b4 = $ b3 | 16", "$ b5 = byte $ b4", "r2 = net sf saxon instruct general variable r0", "r2 property = $ b5", "goto label2", "label return", "if z0 == 0 goto label1", "label r3 = net sf saxon instruct general variable r0", "$ b0 = r3 property", "$ b1 = $ b0 & -17", "$ b2 = byte $ b1", "r4 = net sf saxon instruct general variable r0", "r4 property = $ b2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "return 8192"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct global variable r0", "$ i0 = r1 host language", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon instruct instruction detail r0", "r1 construct type = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct instruction detail r0", "$ i0 = r1 construct type", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon instruct result document r0", "r1 resolve against static base = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon instruct template r0", "r1 have require params = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon instruct template r0", "r2 require type = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sf saxon instruct user function r0", "r2 = r3 get body", "r4 = net sf saxon instruct user function r0", "specialinvoke r4 gather direct contribute callees r2 r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon instruct user function parameter r0", "r1 slot number = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon instruct value of r0", "r1 be number instruction = 1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = new java lang unsupported operation exception", "specialinvoke $ r2 < init >", "throw $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "i0 = @ parameter2", "r3 = r2 get extension binder \\ `` java\\ ``", "$ z0 = r3 instanceof net sf saxon function java extension library", "if $ z0 == 0 goto label3", "$ r4 = net sf saxon function java extension library r3", "if i0 == 50 goto label1", "$ z1 = 1", "goto label2", "label $ r4 set strict java uri format $ z1", "label r1 add function library r3", "return", "if i0 == 50 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [], [15], []]}
{"nodes": ["r0 = @ this", "r4 = new net sf saxon java j regex iterator", "r5 = net sf saxon java j regex iterator r0", "$ r3 = r5 the string", "r6 = net sf saxon java j regex iterator r0", "$ r2 = r6 pattern", "specialinvoke r4 < init > $ r3 $ r2", "r7 = net sf saxon om sequence iterator r4", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["i0 = @ parameter0", "$ r0 = net sf saxon number alphanumeric alphanumerics", "$ z0 = $ r0 contain i0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "return 0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon om array iterator r0", "$ i0 = r1 start", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon om fast string buffer r0", "$ i0 = r1 use", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "if i0 < 0 goto label1", "r10 = net sf saxon om fast string buffer r0", "$ i1 = r10 use", "if i0 < = $ i1 goto label2", "label r9 = new java lang index out of bound exception", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "$ r3 = r8 append \\ `` \\ ``", "$ r4 = $ r3 append i0", "$ r5 = $ r4 to string", "specialinvoke r9 < init > $ r5", "throw r9", "if i0 < = $ i1 goto label2", "label r11 = net sf saxon om fast string buffer r0", "$ i2 = r11 use", "$ i3 = $ i2 - 1", "r12 = net sf saxon om fast string buffer r0", "r12 use = $ i3", "r13 = net sf saxon om fast string buffer r0", "$ r7 = r13 array", "$ i6 = i0 + 1", "r14 = net sf saxon om fast string buffer r0", "$ r6 = r14 array", "r15 = net sf saxon om fast string buffer r0", "$ i4 = r15 use", "$ i5 = $ i4 - i0", "java lang system arraycopy $ r7 $ i6 $ r6 i0 $ i5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], []]}
{"nodes": ["r0 = @ this", "c0 = @ parameter0", "r4 = net sf saxon om fast string buffer r0", "$ r2 = r4 array", "$ i1 = lengthof $ r2", "$ i2 = $ i1 + 1", "r1 = newarray char [ $ i2 ]", "r5 = net sf saxon om fast string buffer r0", "$ r3 = r5 array", "r6 = net sf saxon om fast string buffer r0", "$ i3 = r6 use", "java lang system arraycopy $ r3 0 r1 1 $ i3", "r1 [ 0 ] = c0", "r7 = net sf saxon om fast string buffer r0", "$ i4 = r7 use", "$ i5 = $ i4 + 1", "r8 = net sf saxon om fast string buffer r0", "r8 use = $ i5", "r9 = net sf saxon om fast string buffer r0", "r9 array = r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ z0 = net sf saxon charcode x m l character data be n c name start10 i0", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = newarray java lang string [ 2 ]", "i4 = -1", "i0 = r1 length", "i5 = 0", "label if i5 > = i0 goto label3", "$ c3 = r1 char at i5", "if $ c3 ! = 58 goto label2", "i4 = i5", "goto label3", "label if i4 > = 0 goto label4", "r2 [ 0 ] = \\ `` \\ ``", "$ r27 = r1 to string", "r2 [ 1 ] = $ r27", "$ r28 = r2 [ 1 ]", "r43 = net sf saxon om name checker r0", "$ z1 = r43 be valid n c name $ r28", "if $ z1 ! = 0 goto label7", "r36 = new net sf saxon om q name exception", "r35 = new java lang string buffer", "specialinvoke r35 < init >", "$ r31 = r35 append \\ `` invalid q name \\ ``", "$ r32 = net sf saxon trans err wrap r1", "$ r33 = $ r31 append $ r32", "$ r34 = $ r33 to string", "specialinvoke r36 < init > $ r34", "r44 = java lang throwable r36", "throw r44", "if $ z1 ! = 0 goto label7", "label return r2", "label if i4 > = 0 goto label4", "label if i4 ! = 0 goto label5", "r38 = new net sf saxon om q name exception", "r37 = new java lang string buffer", "specialinvoke r37 < init >", "$ r23 = r37 append \\ `` q name can not start with colon \\ ``", "$ r24 = net sf saxon trans err wrap r1", "$ r25 = $ r23 append $ r24", "$ r26 = $ r25 to string", "specialinvoke r38 < init > $ r26", "r45 = java lang throwable r38", "throw r45", "label if i4 ! = 0 goto label5", "label $ i1 = i0 - 1", "if i4 ! = $ i1 goto label6", "r40 = new net sf saxon om q name exception", "r39 = new java lang string buffer", "specialinvoke r39 < init >", "$ r17 = r39 append \\ `` q name can not end with colon \\ ``", "$ r18 = net sf saxon trans err wrap r1", "$ r19 = $ r17 append $ r18", "$ r20 = $ r19 to string", "specialinvoke r40 < init > $ r20", "r46 = java lang throwable r40", "throw r46", "if i4 ! = $ i1 goto label6", "label $ r3 = r1 sub sequence 0 i4", "$ r4 = $ r3 to string", "r2 [ 0 ] = $ r4", "$ i2 = i4 + 1", "$ r5 = r1 sub sequence $ i2 i0", "$ r6 = $ r5 to string", "r2 [ 1 ] = $ r6", "$ r7 = r2 [ 1 ]", "r47 = net sf saxon om name checker r0", "$ z0 = r47 be valid n c name $ r7", "if $ z0 ! = 0 goto label7", "r42 = new net sf saxon om q name exception", "r41 = new java lang string buffer", "specialinvoke r41 < init >", "$ r10 = r41 append \\ `` invalid q name local part \\ ``", "$ r11 = r2 [ 1 ]", "$ r12 = net sf saxon trans err wrap $ r11", "$ r13 = $ r10 append $ r12", "$ r14 = $ r13 to string", "specialinvoke r42 < init > $ r14", "r48 = java lang throwable r42", "throw r48", "if $ c3 ! = 58 goto label2", "label i5 = i5 + 1", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [], [80], [81], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = r1 length", "if $ i0 ! = 0 goto label1", "return 0", "if $ i0 ! = 0 goto label1", "label c2 = r1 char at 0", "r2 = net sf saxon om name checker r0", "$ z0 = r2 be n c name start char c2", "if $ z0 ! = 0 goto label2", "label i3 = 1", "label $ i1 = r1 length", "if i3 > = $ i1 goto label5", "c4 = r1 char at i3", "r3 = net sf saxon om name checker r0", "$ z1 = r3 be n c name char c4", "if $ z1 ! = 0 goto label4", "label i3 = i3 + 1", "goto label3", "if i3 > = $ i1 goto label5", "label return 1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], []]}
{"nodes": ["$ r0 = net sf saxon om name pool default name pool", "if $ r0 ! = null goto label1", "$ r2 = new net sf saxon om name pool", "specialinvoke $ r2 < init >", "net sf saxon om name pool default name pool = $ r2", "label $ r1 = net sf saxon om name pool default name pool", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "$ i1 = i0 > > 20", "$ i2 = $ i1 & 1023", "return $ i2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "s2 = 0", "label r4 = net sf saxon om name pool r0", "$ s0 = r4 prefix use", "if s2 > = $ s0 goto label3", "r5 = net sf saxon om name pool r0", "$ r2 = r5 prefix", "$ r3 = $ r2 [ s2 ]", "$ z0 = $ r3 equal r1", "if $ z0 == 0 goto label2", "return s2", "if $ z0 == 0 goto label2", "label $ i1 = s2 + 1", "s2 = short $ i1", "goto label1", "if s2 > = $ s0 goto label3", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = net sf saxon om name pool r0", "$ r2 = r5 client data", "if $ r2 ! = null goto label1", "return null", "if $ r2 ! = null goto label1", "label r6 = net sf saxon om name pool r0", "$ r3 = r6 client data", "$ r4 = $ r3 get r1", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon om strip document r0", "$ r1 = r2 node", "$ i0 = $ r1 get document number", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon om structure q name r0", "$ i0 = r4 local name start", "if $ i0 ! = 0 goto label1", "return \\ `` \\ ``", "if $ i0 ! = 0 goto label1", "label r3 = new java lang string", "r5 = net sf saxon om structure q name r0", "$ r2 = r5 content", "r6 = net sf saxon om structure q name r0", "$ i1 = r6 local name start", "specialinvoke r3 < init > $ r2 0 $ i1", "return r3"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon om virtual copy r0", "$ r1 = r2 original", "$ i0 = $ r1 get node kind", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon om virtual copy r0", "$ r1 = r2 system id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = net sf saxon om navigator get base u r i r0", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = net sf saxon om virtual copy r0", "$ r4 = r5 original", "$ r2 = net sf saxon om virtual copy r1", "$ r3 = $ r2 original", "$ i0 = $ r4 compare order $ r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon om virtual copy r0", "$ r1 = r2 original", "$ i0 = $ r1 get name code", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon om virtual copy r0", "r1 = r3 get root", "$ i0 = r1 get node kind", "if $ i0 ! = 9 goto label1", "$ r2 = net sf saxon om document info r1", "return $ r2", "if $ i0 ! = 9 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon om virtual copy r0", "$ r1 = r3 original", "$ r2 = $ r1 atomize", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon om virtual copy r0", "$ r1 = r2 original", "$ z0 = $ r1 be idref", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 get node kind", "if i0 == 1 goto label1", "if i0 == 3 goto label1", "if i0 == 8 goto label1", "if i0 ! = 7 goto label2", "label $ z0 = 1", "goto label3", "label return $ z0", "if i0 ! = 7 goto label2", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon pattern content type test r0", "r1 match d t d type = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon type item type r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof net sf saxon pattern i d pattern", "if $ z0 == 0 goto label1", "$ r2 = net sf saxon pattern i d pattern r1", "$ r4 = $ r2 id expression", "r5 = net sf saxon pattern i d pattern r0", "$ r3 = r5 id expression", "$ z1 = $ r4 equal $ r3", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = net sf saxon pattern location path pattern r0", "$ r3 = r9 filter", "if $ r3 ! = null goto label1", "$ r6 = newarray net sf saxon expr expression [ 3 ]", "r10 = net sf saxon pattern location path pattern r0", "r10 filter = $ r6", "goto label2", "label r17 = net sf saxon pattern location path pattern r0", "$ r7 = r17 filter", "r18 = net sf saxon pattern location path pattern r0", "$ i5 = r18 number of filter", "$ i6 = $ i5 + 1", "r19 = net sf saxon pattern location path pattern r0", "r19 number of filter = $ i6", "$ r7 [ $ i5 ] = r1", "r20 = net sf saxon expr container r0", "r1 set container r20", "return", "if $ r3 ! = null goto label1", "label r11 = net sf saxon pattern location path pattern r0", "$ i1 = r11 number of filter", "r12 = net sf saxon pattern location path pattern r0", "$ r4 = r12 filter", "$ i0 = lengthof $ r4", "if $ i1 ! = $ i0 goto label2", "r13 = net sf saxon pattern location path pattern r0", "$ i2 = r13 number of filter", "$ i3 = $ i2 * 2", "r2 = newarray net sf saxon expr expression [ $ i3 ]", "r14 = net sf saxon pattern location path pattern r0", "$ r5 = r14 filter", "r15 = net sf saxon pattern location path pattern r0", "$ i4 = r15 number of filter", "java lang system arraycopy $ r5 0 r2 0 $ i4", "r16 = net sf saxon pattern location path pattern r0", "r16 filter = r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon pattern location path pattern r0", "$ r1 = r2 node test", "$ i0 = $ r1 get fingerprint", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon pattern node test pattern r0", "$ r1 = r2 node test", "$ i0 = $ r1 get fingerprint", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 start element \\ `` stylesheet\\ ``", "r27 = net sf saxon prepared stylesheet r0", "$ r7 = r27 get executable", "$ r8 = $ r7 get key manager", "$ r8 explain key r1", "r28 = net sf saxon prepared stylesheet r0", "$ r9 = r28 get executable", "$ r9 explain global variable r1", "r29 = net sf saxon prepared stylesheet r0", "$ r10 = r29 get executable", "$ r11 = $ r10 get rule manager", "$ r11 explain template rule r1", "r30 = net sf saxon prepared stylesheet r0", "$ r12 = r30 get executable", "$ r12 explain name templates r1", "r31 = net sf saxon prepared stylesheet r0", "$ r13 = r31 get executable", "$ r14 = $ r13 get function library", "r2 = net sf saxon function function library list $ r14", "r3 = r2 get library list", "r1 start element \\ `` functions\\ ``", "i8 = 0", "label $ i2 = r3 size", "if i8 > = $ i2 goto label4", "$ r15 = r3 get i8", "r4 = net sf saxon function function library $ r15", "$ z0 = r4 instanceof net sf saxon function executable function library", "if $ z0 == 0 goto label3", "$ r16 = net sf saxon function executable function library r4", "r5 = $ r16 iterate function", "label $ z1 = r5 have next", "if $ z1 == 0 goto label3", "$ r17 = r5 next", "r6 = net sf saxon instruct user function $ r17", "r1 start element \\ `` function\\ ``", "$ r18 = r6 get function name", "$ r19 = $ r18 get display name", "r1 emit attribute \\ `` name\\", "r26 = new java lang string buffer", "specialinvoke r26 < init >", "$ i6 = r6 get line number", "$ r21 = r26 append $ i6", "$ r22 = $ r21 append \\ `` \\ ``", "$ r23 = $ r22 to string", "r1 emit attribute \\ `` line\\", "$ r24 = r6 get system id", "r1 emit attribute \\ `` module\\", "$ r25 = r6 get body", "$ r25 explain r1", "r1 end element", "goto label2", "if $ z1 == 0 goto label3", "label i8 = i8 + 1", "goto label1", "if i8 > = $ i2 goto label4", "label r1 end element"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [], [54], [55], [], [57], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r7 = net sf saxon pull namespace context impl r0", "r2 = r7 iterate prefix", "label $ z0 = r2 have next", "if $ z0 == 0 goto label3", "$ r5 = r2 next", "r3 = java lang string $ r5", "r8 = net sf saxon pull namespace context impl r0", "$ r6 = r8 resolver", "r4 = $ r6 get u r i for prefix r3 1", "$ z1 = r4 equal r1", "if $ z1 == 0 goto label2", "return r3", "if $ z1 == 0 goto label2", "label goto label1", "if $ z0 == 0 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon pull pull filter r0", "$ r1 = r4 get pipeline configuration", "$ r2 = $ r1 get configuration", "$ r3 = $ r2 get name pool", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon query dynamic query context r0", "r2 error listener = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon query global variable definition r0", "r1 line number = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon query global variable definition r0", "$ r1 = r2 compile var", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon query query module r0", "r1 preserve namespaces = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon query query module r0", "r1 construction mode = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon query query module r0", "$ r1 = r2 global function library", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon query query module r0", "$ r1 = r3 active namespaces", "$ r1 pop", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon query query module r0", "$ z0 = r1 be update", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = net sf saxon query static query context r0", "r1 generate code = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon query static query context r0", "$ r1 = r2 require context item type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon query x query expression r0", "$ r1 = r2 stack frame map", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = net sf saxon query x query function library r0", "$ r2 = r5 function", "$ r3 = $ r2 get r1", "$ r4 = net sf saxon query x query function $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ z0 = r1 start with r2", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sort conditional sorter r0", "$ r1 = r2 document sorter", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 57344"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon sort group by iterator r0", "$ r1 = r4 group key", "r5 = net sf saxon sort group by iterator r0", "$ i0 = r5 position", "$ i1 = $ i0 - 1", "$ r2 = $ r1 get $ i1", "$ r3 = net sf saxon value atomic value $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ i0 = r2 next", "r3 = net sf saxon sort int hash set r0", "$ z1 = r3 contain $ i0", "if $ z1 == 0 goto label1", "return 1", "if $ z0 == 0 goto label2", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sort int range set r0", "$ r1 = r2 end point", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sort sort key definition r0", "$ r1 = r2 sort key", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sort sort key definition r0", "$ r1 = r2 base u r i", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sort tuple sorter r0", "$ r1 = r2 select", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon standard error listener r0", "$ i0 = r1 recovery policy", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 equal \\ `` name\\ ``", "if $ z0 == 0 goto label1", "r3 = net sf saxon style literal result element r0", "$ r2 = r3 get display name", "return $ r2", "if $ z0 == 0 goto label1", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon style style element r0", "$ z0 = r1 explain", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon style style element r0", "$ r1 = r2 get contain stylesheet", "$ i0 = $ r1 get precedence", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon style style element r0", "$ r1 = r3 get version", "$ r2 = java math big decimal value of 2l", "$ i0 = $ r1 compare to $ r2", "if $ i0 < = 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < = 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "s0 = @ parameter0", "if s0 == 2 goto label1", "if s0 ! = 1 goto label2", "label return 1", "if s0 ! = 1 goto label2", "label r3 = net sf saxon style style element r0", "$ z0 = r3 be extension namespace s0", "if $ z0 == 0 goto label3", "return 1", "if $ z0 == 0 goto label3", "label r2 = r0", "label $ z1 = r2 instanceof net sf saxon style style element", "if $ z1 == 0 goto label6", "$ r1 = net sf saxon style style element r2", "$ z2 = $ r1 defines exclude namespace s0", "if $ z2 == 0 goto label5", "label r4 = net sf saxon om node info r2", "r2 = r4 get parent", "goto label4", "if $ z1 == 0 goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon style style element r0", "r2 object name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon style use when static context r0", "$ r1 = r2 namespace context", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon style x s l attribute set r0", "$ r1 = r2 stack frame map", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon style x s l key r0", "$ r1 = r2 stack frame map", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon style x s l param r0", "$ r1 = r4 require type", "if $ r1 == null goto label1", "r5 = net sf saxon style x s l param r0", "$ r3 = r5 require type", "return $ r3", "if $ r1 == null goto label1", "label $ r2 = net sf saxon value sequence type any_sequence", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = net sf saxon style x s l stylesheet r0", "$ r1 = r5 importer", "if $ r1 == null goto label1", "r6 = net sf saxon style x s l stylesheet r0", "$ r3 = r6 importer", "$ r4 = $ r3 get prepared stylesheet", "return $ r4", "if $ r1 == null goto label1", "label r7 = net sf saxon style x s l stylesheet r0", "$ r2 = r7 stylesheet", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon style x s l stylesheet r0", "r1 precedence = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon style x s l stylesheet r0", "$ z0 = r2 be include", "if $ z0 == 0 goto label1", "r3 = net sf saxon style x s l stylesheet r0", "$ r1 = r3 importer", "$ i1 = $ r1 get precedence", "return $ i1", "if $ z0 == 0 goto label1", "label r4 = net sf saxon style x s l stylesheet r0", "$ i0 = r4 precedence", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "specialinvoke r0 validate", "r3 = net sf saxon style x s l variable declaration r0", "$ z0 = r3 global", "if $ z0 == 0 goto label1", "r4 = net sf saxon style x s l variable declaration r0", "$ z1 = r4 redundant", "if $ z1 ! = 0 goto label1", "r5 = net sf saxon style x s l variable declaration r0", "$ r1 = r5 get principal stylesheet", "r6 = net sf saxon style x s l variable declaration r0", "$ r2 = r6 get variable q name", "$ i0 = $ r1 allocate global slot $ r2", "r7 = net sf saxon style x s l variable declaration r0", "r7 slot number = $ i0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon sxpath abstract static context r0", "$ r1 = r2 executable", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get namespace u r i", "$ r3 = r1 get local name", "r5 = net sf saxon sxpath independent context r0", "$ r4 = r5 declare variable $ r2 $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r12 = net sf saxon sxpath independent context r0", "$ r4 = r12 get configuration", "r1 = $ r4 make slot manager", "r13 = net sf saxon sxpath independent context r0", "$ r5 = r13 variable", "$ i0 = $ r5 size", "r2 = newarray net sf saxon sxpath x path variable [ $ i0 ]", "r14 = net sf saxon sxpath independent context r0", "$ r6 = r14 variable", "$ r7 = $ r6 value", "r11 = $ r7 iterator", "label $ z0 = r11 have next", "if $ z0 == 0 goto label2", "$ r10 = r11 next", "r3 = net sf saxon sxpath x path variable $ r10", "$ i3 = r3 get local slot number", "r2 [ $ i3 ] = r3", "goto label1", "if $ z0 == 0 goto label2", "label i4 = 0", "label $ i1 = lengthof r2", "if i4 > = $ i1 goto label4", "$ r8 = r2 [ i4 ]", "$ r9 = $ r8 get variable q name", "r1 allocate slot number $ r9", "i4 = i4 + 1", "goto label3", "if i4 > = $ i1 goto label4", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], [22], [23], [24], [25], [26], [27], [], [29], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon sxpath x path evaluator r0", "$ r1 = r3 static context", "$ r2 = $ r1 get configuration", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = new net sf saxon expr x path context major", "r11 = net sf saxon sxpath x path expression r0", "$ r4 = r11 evaluator", "$ r5 = $ r4 get executable", "specialinvoke r9 < init > r1 $ r5", "r12 = net sf saxon sxpath x path expression r0", "$ r6 = r12 stack frame map", "r9 open stack frame $ r6", "r10 = new net sf saxon sxpath x path dynamic context", "r13 = net sf saxon sxpath x path expression r0", "$ r8 = r13 stack frame map", "specialinvoke r10 < init > r9 $ r8", "return r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sf saxon sxpath x path variable r0", "$ i0 = r3 slot number", "$ r2 = r1 evaluate local variable $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon tinytree char slice r0", "r1 count = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = net sf saxon tinytree compress whitespace r0", "l0 = r3 value", "i9 = 56", "label if i9 < 0 goto label5", "$ l4 = l0 > > > i9", "$ l5 = $ l4 & 255l", "$ i6 = int $ l5", "b1 = byte $ i6", "if b1 ! = 0 goto label2", "goto label5", "label return", "if b1 ! = 0 goto label2", "label $ r2 = net sf saxon tinytree compress whitespace white_chars", "$ b7 = b1 > > > 6", "$ b8 = $ b7 & 3", "c2 = $ r2 [ $ b8 ]", "b3 = b1 & 63", "i10 = 0", "label if i10 > = b3 goto label4", "r1 write c2", "i10 = i10 + 1", "goto label3", "label if i10 > = b3 goto label4", "label i9 = i9 + -8", "goto label1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = net sf saxon tinytree compress whitespace r0", "l0 = r5 value", "i9 = 56", "label if i9 < 0 goto label11", "$ l4 = l0 > > > i9", "$ l5 = $ l4 & 255l", "$ i6 = int $ l5", "b1 = byte $ i6", "if b1 ! = 0 goto label02", "goto label11", "label return", "if b1 ! = 0 goto label02", "label $ r3 = net sf saxon tinytree compress whitespace white_chars", "$ b7 = b1 > > > 6", "$ b8 = $ b7 & 3", "c2 = $ r3 [ $ b8 ]", "b3 = b1 & 63", "$ z0 = r1 [ c2 ]", "if $ z0 == 0 goto label08", "if c2 ! = 10 goto label03", "r4 = net sf saxon tinytree compress whitespace escape_n", "goto label05", "label i10 = 0", "label if i10 > = b3 goto label07", "r2 write r4", "i10 = i10 + 1", "goto label06", "label if i10 > = b3 goto label07", "label goto label10", "label i9 = i9 + -8", "goto label01", "if c2 ! = 10 goto label03", "label if c2 ! = 13 goto label04", "r4 = net sf saxon tinytree compress whitespace escape_r", "label if c2 ! = 13 goto label04", "label r4 = net sf saxon tinytree compress whitespace escape_t", "if $ z0 == 0 goto label08", "label i11 = 0", "label if i11 > = b3 goto label10", "r2 write c2", "i11 = i11 + 1", "goto label09"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [], [31], [32], [33], [], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = r1 length", "if i0 ! = 0 goto label1", "return", "if i0 ! = 0 goto label1", "label r16 = net sf saxon tinytree large string buffer r0", "$ r4 = r16 segment", "r17 = net sf saxon tinytree large string buffer r0", "$ r3 = r17 segment", "$ i1 = $ r3 size", "$ i2 = $ i1 - 1", "$ r5 = $ r4 get $ i2", "r13 = net sf saxon om fast string buffer $ r5", "$ i3 = r13 length", "$ i5 = $ i3 + i0", "r18 = net sf saxon tinytree large string buffer r0", "$ i4 = r18 max allocation", "if $ i5 > $ i4 goto label2", "r13 append r1", "goto label3", "label r27 = net sf saxon tinytree large string buffer r0", "$ i13 = r27 length", "$ i14 = $ i13 + i0", "r28 = net sf saxon tinytree large string buffer r0", "r28 length = $ i14", "if $ i5 > $ i4 goto label2", "label r19 = net sf saxon tinytree large string buffer r0", "$ r6 = r19 start offset", "$ i6 = lengthof $ r6", "$ i7 = $ i6 + 1", "r2 = newarray int [ $ i7 ]", "r20 = net sf saxon tinytree large string buffer r0", "$ r8 = r20 start offset", "r21 = net sf saxon tinytree large string buffer r0", "$ r7 = r21 start offset", "$ i8 = lengthof $ r7", "java lang system arraycopy $ r8 0 r2 0 $ i8", "r22 = net sf saxon tinytree large string buffer r0", "$ r9 = r22 start offset", "$ i10 = lengthof $ r9", "r23 = net sf saxon tinytree large string buffer r0", "$ i9 = r23 length", "r2 [ $ i10 ] = $ i9", "r24 = net sf saxon tinytree large string buffer r0", "r24 start offset = r2", "r15 = new net sf saxon om fast string buffer", "r25 = net sf saxon tinytree large string buffer r0", "$ i11 = r25 min allocation", "$ i12 = java lang math max $ i11 i0", "specialinvoke r15 < init > $ i12", "r26 = net sf saxon tinytree large string buffer r0", "$ r11 = r26 segment", "$ r11 add r15", "r15 append r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r3 = net sf saxon tinytree tiny attribute collection r0", "$ r1 = r3 tree", "$ r2 = $ r1 att code", "r4 = net sf saxon tinytree tiny attribute collection r0", "$ i1 = r4 first attribute", "$ i2 = $ i1 + i0", "$ i3 = $ r2 [ $ i2 ]", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r5 = net sf saxon tinytree tiny attribute impl r0", "$ r3 = r5 tree", "r6 = net sf saxon tinytree tiny attribute impl r0", "$ r1 = r6 tree", "$ r2 = $ r1 att parent", "r7 = net sf saxon tinytree tiny attribute impl r0", "$ i0 = r7 node nr", "$ i1 = $ r2 [ $ i0 ]", "$ r4 = $ r3 get node $ i1", "r8 = net sf saxon om node info $ r4", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r6 = net sf saxon tinytree tiny attribute impl r0", "$ r1 = r6 tree", "$ r2 = $ r1 get name pool", "r7 = net sf saxon tinytree tiny attribute impl r0", "$ r3 = r7 tree", "$ r4 = $ r3 att code", "r8 = net sf saxon tinytree tiny attribute impl r0", "$ i0 = r8 node nr", "$ i1 = $ r4 [ $ i0 ]", "$ r5 = $ r2 get local name $ i1", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "return 8"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r4 = net sf saxon tinytree tiny parent node impl r0", "$ r1 = r4 tree", "r5 = net sf saxon tinytree tiny parent node impl r0", "$ i0 = r5 node nr", "$ r2 = net sf saxon tinytree tiny parent node impl get string value $ r1 $ i0", "$ r3 = $ r2 to string", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon trace context stack frame r0", "$ r1 = r2 module uri", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = net sf saxon trace context stack frame r0", "r1 line number = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon trace expression presenter r0", "r1 end element", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = net sf saxon trace trace event multicaster r0", "$ r2 = r6 a", "$ r3 = net sf saxon trace trace listener $ r2", "$ r3 end current item r1", "r7 = net sf saxon trace trace event multicaster r0", "$ r4 = r7 b", "$ r5 = net sf saxon trace trace listener $ r4", "$ r5 end current item r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r4 = java util event listener r0", "r5 = java util event listener r1", "$ r2 = net sf saxon trace trace event multicaster add internal r4 r5", "$ r3 = net sf saxon trace trace listener $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "z0 = @ parameter1", "r2 = @ parameter2", "r14 = net sf saxon trans dynamic loader r0", "r3 = r14 get class r1 z0 r2", "label $ r5 = r3 new instance", "label return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon trans key definition r0", "$ z0 = r1 backwards compatible", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon trans key definition r0", "$ z0 = r1 convert untyped to other", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon trans key definition r0", "$ r1 = r2 use", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r4 = new net sf saxon trans mode", "$ r2 = net sf saxon trans mode default_mode_name", "specialinvoke r4 < init > -1 $ r2", "r6 = net sf saxon trans rule manager r0", "r6 default mode = r4", "r5 = new java util hash map", "specialinvoke r5 < init > 5", "r7 = net sf saxon trans rule manager r0", "r7 mode = r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon trans x path exception r0", "r2 context = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "r2 = net sf saxon tree proc inst impl r0", "r2 system id = r1", "r3 = net sf saxon tree proc inst impl r0", "r3 line number = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = net sf saxon tree tree builder r0", "r2 node factory = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon tree tree enumeration r0", "$ r1 = r2 current", "r3 = net sf saxon om item $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon tree tree enumeration r0", "$ i0 = r1 position", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon type schema type r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "return 0"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "return 1"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = net sf saxon type schema type r0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof net sf saxon type external object type", "if $ z0 == 0 goto label1", "r3 = net sf saxon type external object type r0", "$ i1 = r3 fingerprint", "$ r2 = net sf saxon type external object type r1", "$ i0 = $ r2 fingerprint", "if $ i1 ! = $ i0 goto label1", "$ z1 = 1", "goto label2", "label return $ z1", "if $ i1 ! = $ i0 goto label1", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], []]}
{"nodes": ["r0 = @ this", "r2 = net sf saxon type type hierarchy r0", "$ r1 = r2 config", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = net sf saxon type validation exception r0", "r3 schema part = i0", "r4 = net sf saxon type validation exception r0", "r4 constraint name = r1", "r5 = net sf saxon type validation exception r0", "r5 constraint clause number = r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string buffer", "specialinvoke r8 < init >", "r9 = net sf saxon type validation exception r0", "$ r2 = r9 constraint name", "$ r3 = r8 append $ r2", "$ r4 = $ r3 append 46", "r10 = net sf saxon type validation exception r0", "$ r5 = r10 constraint clause number", "$ r6 = $ r4 append $ r5", "$ r7 = $ r6 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "$ r1 = net sf saxon om singleton iterator make iterator r0", "r2 = net sf saxon om sequence iterator $ r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "i1 = @ parameter1", "if i0 > 0 goto label1", "$ i2 = i0 + i1", "if $ i2 < = 0 goto label1", "return r0", "if $ i2 < = 0 goto label1", "label $ r1 = net sf saxon value empty sequence get instance", "r2 = net sf saxon om ground value $ r1", "return r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon value calendar value r0", "$ r1 = r3 get string value c s", "$ r2 = $ r1 to string", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "if z0 == 0 goto label1", "$ z2 = r0 instanceof java lang comparable", "if $ z2 ! = 0 goto label1", "return null", "if $ z2 ! = 0 goto label1", "label r4 = net sf saxon value calendar value r0", "$ z1 = r4 have timezone", "if $ z1 == 0 goto label2", "$ r3 = r0", "goto label3", "label return $ r3", "if $ z1 == 0 goto label2", "label $ i0 = r2 get implicit timezone", "r5 = net sf saxon value calendar value r0", "$ r3 = r5 adjust timezone $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r3 = net sf saxon value closure r0", "$ r1 = r3 expression", "if $ r1 ! = null goto label1", "return 57344", "if $ r1 ! = null goto label1", "label r4 = net sf saxon value closure r0", "$ r2 = r4 expression", "$ i0 = $ r2 get cardinality", "return $ i0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["$ r0 = new java lang string buffer", "specialinvoke $ r0 < init >", "$ r1 = $ r0 append \\ `` sa \\ ``", "$ r2 = net sf saxon version get product version", "$ r3 = $ r1 append $ r2", "$ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = java lang string value of i0", "r2 = com thoughtworks selenium browser configuration option r0", "specialinvoke r2 put \\ `` timeout in seconds\\", "r3 = com thoughtworks selenium browser configuration option r0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["i0 = @ parameter0", "r0 = org openqa selenium html5 app cache status value", "i1 = lengthof r0", "i3 = 0", "label if i3 > = i1 goto label3", "r1 = r0 [ i3 ]", "$ i2 = r1 value", "if i0 ! = $ i2 goto label2", "return r1", "if i0 ! = $ i2 goto label2", "label i3 = i3 + 1", "goto label1", "label if i3 > = i1 goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [], [13], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium interaction action r0", "$ r1 = r2 click null", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r3 = new org openqa selenium log composite local log", "specialinvoke r3 < init > r0 r1", "r4 = org openqa selenium log local log r3", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r0 == r1 goto label1", "r3 = org openqa selenium platform r0", "$ r2 = r3 family", "$ z0 = $ r2 be r1", "if $ z0 == 0 goto label2", "label $ z1 = 1", "goto label3", "label return $ z1", "if $ z0 == 0 goto label2", "label $ z1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = org openqa selenium platform r0", "$ i0 = r1 minor version", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium proxy r0", "$ r1 = r2 sock proxy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` request id be required\\ ``", "r6 = new org openqa selenium devtools command", "$ r3 = r0 to string", "$ r4 = com google common collect immutable map of \\ `` request id\\", "$ r5 = org openqa selenium devtools converter function map \\ `` stream\\", "r7 = java util map $ r4", "specialinvoke r6 < init > \\ `` fetch take response body a stream\\", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model call frame r0", "$ r1 = r2 line number", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model request r0", "$ r1 = r2 initial priority", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model request r0", "$ r1 = r2 be link preload", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model resource time r0", "$ r1 = r2 worker start", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model response r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model response r0", "$ r1 = r2 status", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model response r0", "$ r1 = r2 from service worker", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model security detail r0", "$ r1 = r2 protocol", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model security detail r0", "$ r1 = r2 valid from", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model security detail r0", "$ r1 = r2 certificate transparency compliance", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa selenium devtools network model sign exchange error r0", "$ r1 = r2 error field", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r2 = new org openqa selenium devtools command", "$ r1 = com google common collect immutable map of", "r3 = java util map $ r1", "specialinvoke r2 < init > \\ `` network disable\\", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` origin must be set \\ ``", "r8 = new org openqa selenium devtools command", "$ r3 = com google common collect immutable map of \\ `` origin\\", "r7 = new org openqa selenium devtools network network $ 1", "specialinvoke r7 < init >", "$ r5 = r7 get type", "$ r6 = org openqa selenium devtools converter function map \\ `` table names\\", "r9 = java util map $ r3", "specialinvoke r8 < init > \\ `` network get certificate\\", "return r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` request id must be set \\ ``", "r6 = new org openqa selenium devtools command", "$ r3 = r0 to string", "$ r4 = com google common collect immutable map of \\ `` request id\\", "$ r5 = org openqa selenium devtools converter function map \\ `` post data\\", "r7 = java util map $ r4", "specialinvoke r6 < init > \\ `` network get request post data\\", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` pattern must be set \\ ``", "r4 = new org openqa selenium devtools command", "$ r3 = com google common collect immutable map of \\ `` patterns\\", "r5 = java util map $ r3", "specialinvoke r4 < init > \\ `` network set request interception\\", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new org openqa selenium devtools event", "$ r1 = org openqa selenium devtools converter function map \\ `` request id\\", "specialinvoke $ r0 < init > \\ `` network request serve from cache\\", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new org openqa selenium devtools event", "$ r1 = org openqa selenium devtools converter function map \\ `` request id\\", "specialinvoke $ r0 < init > \\ `` network web socket created\\", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r6 = new org openqa selenium devtools command", "$ r1 = com google common collect immutable map of", "r5 = new org openqa selenium devtools target target $ 1", "specialinvoke r5 < init >", "$ r3 = r5 get type", "$ r4 = org openqa selenium devtools converter function map \\ `` browser context ids\\", "r7 = java util map $ r1", "specialinvoke r6 < init > \\ `` target get browser contexts\\", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` browser context id be required\\ ``", "r4 = new org openqa selenium devtools command", "$ r3 = com google common collect immutable map of \\ `` browser context id\\", "r5 = java util map $ r3", "specialinvoke r4 < init > \\ `` target dispose browser context\\", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = new org openqa selenium devtools event", "$ r1 = org openqa selenium devtools converter function map \\ `` target info\\", "specialinvoke $ r0 < init > \\ `` target target destroyed\\", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org openqa selenium remote http http message r0", "$ r2 = r4 attribute", "$ r3 = $ r2 get r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org openqa selenium remote http http request r0", "r2 = r6 get query parameter r1", "if r2 ! = null goto label1", "return null", "if r2 ! = null goto label1", "label r3 = r2 iterator", "$ z0 = r3 have next", "if $ z0 == 0 goto label2", "$ r4 = r3 next", "$ r5 = java lang string $ r4", "goto label3", "label return $ r5", "if $ z0 == 0 goto label2", "label $ r5 = null"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "$ r1 = newarray java lang string [ 3 ]", "$ r2 = new java lang string builder", "specialinvoke $ r2 < init >", "$ r3 = org openqa selenium o windows utils get local app data path", "$ r4 = $ r2 append $ r3", "$ r5 = $ r4 append \\ `` \\\\ google\\\\ chrome\\\\ application\\ ``", "$ r6 = $ r5 to string", "$ r1 [ 0 ] = $ r6", "$ r7 = new java lang string builder", "specialinvoke $ r7 < init >", "$ r8 = org openqa selenium o windows utils get program files86 path", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` \\\\ google\\\\ chrome\\\\ application\\ ``", "$ r11 = $ r10 to string", "$ r1 [ 1 ] = $ r11", "$ r12 = new java lang string builder", "specialinvoke $ r12 < init >", "$ r13 = org openqa selenium o windows utils get program file path", "$ r14 = $ r12 append $ r13", "$ r15 = $ r14 append \\ `` \\\\ google\\\\ chrome\\\\ application\\ ``", "$ r16 = $ r15 to string", "$ r1 [ 2 ] = $ r16", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return null"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa grid internal utils configuration json grid json configuration r0", "$ r1 = r2 servlets", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org openqa grid internal utils configuration json node json configuration r0", "$ r1 = r2 proxy", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org openqa selenium support pagefactory default element locator r0", "$ z0 = r1 should cache", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org openqa selenium support page factory instantiate page r0 r1", "org openqa selenium support page factory init element r0 r2", "return r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openqa selenium support ui expect condition $ 3", "specialinvoke r2 < init > r0", "r3 = org openqa selenium support ui expect condition r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openqa selenium support ui expect condition $ 6", "specialinvoke r2 < init > r0", "r3 = org openqa selenium support ui expect condition r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openqa selenium support ui expect condition $ 10", "specialinvoke r2 < init > r0", "r3 = org openqa selenium support ui expect condition r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openqa selenium support ui expect condition $ 22", "specialinvoke r2 < init > r0", "r3 = org openqa selenium support ui expect condition r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "r2 = new org openqa selenium support ui expect condition $ 25", "specialinvoke r2 < init > r0", "r3 = org openqa selenium support ui expect condition r2", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r5 = org openqa selenium support ui fluent wait r0", "$ r2 = specialinvoke r5 to chrono unit r1", "$ r3 = java time duration of l0 $ r2", "r6 = org openqa selenium support ui fluent wait r0", "$ r4 = r6 with timeout $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org openrdf model datatypes x m l datatype util be decimal datatype r0", "if $ z0 ! = 0 goto label1", "$ z1 = org openrdf model datatypes x m l datatype util be float point datatype r0", "if $ z1 == 0 goto label2", "label $ z2 = 1", "goto label3", "label return $ z2", "if $ z1 == 0 goto label2", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org openrdf model vocabulary x m l schema integer", "$ z0 = r0 equal $ r1", "if $ z0 ! = 0 goto label1", "$ r2 = org openrdf model vocabulary x m l schema long", "$ z1 = r0 equal $ r2", "if $ z1 ! = 0 goto label1", "$ r3 = org openrdf model vocabulary x m l schema int", "$ z2 = r0 equal $ r3", "if $ z2 ! = 0 goto label1", "$ r4 = org openrdf model vocabulary x m l schema short", "$ z3 = r0 equal $ r4", "if $ z3 ! = 0 goto label1", "$ r5 = org openrdf model vocabulary x m l schema byte", "$ z4 = r0 equal $ r5", "if $ z4 ! = 0 goto label1", "$ r6 = org openrdf model vocabulary x m l schema non_positive_integer", "$ z5 = r0 equal $ r6", "if $ z5 ! = 0 goto label1", "$ r7 = org openrdf model vocabulary x m l schema negative_integer", "$ z6 = r0 equal $ r7", "if $ z6 ! = 0 goto label1", "$ r8 = org openrdf model vocabulary x m l schema non_negative_integer", "$ z7 = r0 equal $ r8", "if $ z7 ! = 0 goto label1", "$ r9 = org openrdf model vocabulary x m l schema positive_integer", "$ z8 = r0 equal $ r9", "if $ z8 ! = 0 goto label1", "$ r10 = org openrdf model vocabulary x m l schema unsigned_long", "$ z9 = r0 equal $ r10", "if $ z9 ! = 0 goto label1", "$ r11 = org openrdf model vocabulary x m l schema unsigned_int", "$ z10 = r0 equal $ r11", "if $ z10 ! = 0 goto label1", "$ r12 = org openrdf model vocabulary x m l schema unsigned_short", "$ z11 = r0 equal $ r12", "if $ z11 ! = 0 goto label1", "$ r13 = org openrdf model vocabulary x m l schema unsigned_byte", "$ z12 = r0 equal $ r13", "if $ z12 == 0 goto label2", "label $ z13 = 1", "goto label3", "label return $ z13", "if $ z12 == 0 goto label2", "label $ z13 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org openrdf model vocabulary x m l schema datetime", "$ z0 = r0 equal $ r1", "if $ z0 ! = 0 goto label1", "$ r2 = org openrdf model vocabulary x m l schema date", "$ z1 = r0 equal $ r2", "if $ z1 ! = 0 goto label1", "$ r3 = org openrdf model vocabulary x m l schema time", "$ z2 = r0 equal $ r3", "if $ z2 ! = 0 goto label1", "$ r4 = org openrdf model vocabulary x m l schema gyearmonth", "$ z3 = r0 equal $ r4", "if $ z3 ! = 0 goto label1", "$ r5 = org openrdf model vocabulary x m l schema gmonthday", "$ z4 = r0 equal $ r5", "if $ z4 ! = 0 goto label1", "$ r6 = org openrdf model vocabulary x m l schema gyear", "$ z5 = r0 equal $ r6", "if $ z5 ! = 0 goto label1", "$ r7 = org openrdf model vocabulary x m l schema gmonth", "$ z6 = r0 equal $ r7", "if $ z6 ! = 0 goto label1", "$ r8 = org openrdf model vocabulary x m l schema gday", "$ z7 = r0 equal $ r8", "if $ z7 == 0 goto label2", "label $ z8 = 1", "goto label3", "label return $ z8", "if $ z7 == 0 goto label2", "label $ z8 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "z28 = 1", "$ r2 = org openrdf model vocabulary x m l schema decimal", "$ z0 = r1 equal $ r2", "if $ z0 == 0 goto label01", "z28 = org openrdf model datatypes x m l datatype util be valid decimal r0", "goto label28", "label return z28", "if $ z0 == 0 goto label01", "label $ r3 = org openrdf model vocabulary x m l schema integer", "$ z1 = r1 equal $ r3", "if $ z1 == 0 goto label02", "z28 = org openrdf model datatypes x m l datatype util be valid integer r0", "if $ z1 == 0 goto label02", "label $ r4 = org openrdf model vocabulary x m l schema negative_integer", "$ z2 = r1 equal $ r4", "if $ z2 == 0 goto label03", "z28 = org openrdf model datatypes x m l datatype util be valid negative integer r0", "if $ z2 == 0 goto label03", "label $ r5 = org openrdf model vocabulary x m l schema non_positive_integer", "$ z3 = r1 equal $ r5", "if $ z3 == 0 goto label04", "z28 = org openrdf model datatypes x m l datatype util be valid non positive integer r0", "if $ z3 == 0 goto label04", "label $ r6 = org openrdf model vocabulary x m l schema non_negative_integer", "$ z4 = r1 equal $ r6", "if $ z4 == 0 goto label05", "z28 = org openrdf model datatypes x m l datatype util be valid non negative integer r0", "if $ z4 == 0 goto label05", "label $ r7 = org openrdf model vocabulary x m l schema positive_integer", "$ z5 = r1 equal $ r7", "if $ z5 == 0 goto label06", "z28 = org openrdf model datatypes x m l datatype util be valid positive integer r0", "if $ z5 == 0 goto label06", "label $ r8 = org openrdf model vocabulary x m l schema long", "$ z6 = r1 equal $ r8", "if $ z6 == 0 goto label07", "z28 = org openrdf model datatypes x m l datatype util be valid long r0", "if $ z6 == 0 goto label07", "label $ r9 = org openrdf model vocabulary x m l schema int", "$ z7 = r1 equal $ r9", "if $ z7 == 0 goto label08", "z28 = org openrdf model datatypes x m l datatype util be valid int r0", "if $ z7 == 0 goto label08", "label $ r10 = org openrdf model vocabulary x m l schema short", "$ z8 = r1 equal $ r10", "if $ z8 == 0 goto label09", "z28 = org openrdf model datatypes x m l datatype util be valid short r0", "if $ z8 == 0 goto label09", "label $ r11 = org openrdf model vocabulary x m l schema byte", "$ z9 = r1 equal $ r11", "if $ z9 == 0 goto label10", "z28 = org openrdf model datatypes x m l datatype util be valid byte r0", "if $ z9 == 0 goto label10", "label $ r12 = org openrdf model vocabulary x m l schema unsigned_long", "$ z10 = r1 equal $ r12", "if $ z10 == 0 goto label11", "z28 = org openrdf model datatypes x m l datatype util be valid unsigned long r0", "if $ z10 == 0 goto label11", "label $ r13 = org openrdf model vocabulary x m l schema unsigned_int", "$ z11 = r1 equal $ r13", "if $ z11 == 0 goto label12", "z28 = org openrdf model datatypes x m l datatype util be valid unsigned int r0", "if $ z11 == 0 goto label12", "label $ r14 = org openrdf model vocabulary x m l schema unsigned_short", "$ z12 = r1 equal $ r14", "if $ z12 == 0 goto label13", "z28 = org openrdf model datatypes x m l datatype util be valid unsigned short r0", "if $ z12 == 0 goto label13", "label $ r15 = org openrdf model vocabulary x m l schema unsigned_byte", "$ z13 = r1 equal $ r15", "if $ z13 == 0 goto label14", "z28 = org openrdf model datatypes x m l datatype util be valid unsigned byte r0", "if $ z13 == 0 goto label14", "label $ r16 = org openrdf model vocabulary x m l schema float", "$ z14 = r1 equal $ r16", "if $ z14 == 0 goto label15", "z28 = org openrdf model datatypes x m l datatype util be valid float r0", "if $ z14 == 0 goto label15", "label $ r17 = org openrdf model vocabulary x m l schema double", "$ z15 = r1 equal $ r17", "if $ z15 == 0 goto label16", "z28 = org openrdf model datatypes x m l datatype util be valid double r0", "if $ z15 == 0 goto label16", "label $ r18 = org openrdf model vocabulary x m l schema boolean", "$ z16 = r1 equal $ r18", "if $ z16 == 0 goto label17", "z28 = org openrdf model datatypes x m l datatype util be valid boolean r0", "if $ z16 == 0 goto label17", "label $ r19 = org openrdf model vocabulary x m l schema datetime", "$ z17 = r1 equal $ r19", "if $ z17 == 0 goto label18", "z28 = org openrdf model datatypes x m l datatype util be valid date time r0", "if $ z17 == 0 goto label18", "label $ r20 = org openrdf model vocabulary x m l schema date", "$ z18 = r1 equal $ r20", "if $ z18 == 0 goto label19", "z28 = org openrdf model datatypes x m l datatype util be valid date r0", "if $ z18 == 0 goto label19", "label $ r21 = org openrdf model vocabulary x m l schema time", "$ z19 = r1 equal $ r21", "if $ z19 == 0 goto label20", "z28 = org openrdf model datatypes x m l datatype util be valid time r0", "if $ z19 == 0 goto label20", "label $ r22 = org openrdf model vocabulary x m l schema gday", "$ z20 = r1 equal $ r22", "if $ z20 == 0 goto label21", "z28 = org openrdf model datatypes x m l datatype util be valid g day r0", "if $ z20 == 0 goto label21", "label $ r23 = org openrdf model vocabulary x m l schema gmonth", "$ z21 = r1 equal $ r23", "if $ z21 == 0 goto label22", "z28 = org openrdf model datatypes x m l datatype util be valid g month r0", "if $ z21 == 0 goto label22", "label $ r24 = org openrdf model vocabulary x m l schema gmonthday", "$ z22 = r1 equal $ r24", "if $ z22 == 0 goto label23", "z28 = org openrdf model datatypes x m l datatype util be valid g month day r0", "if $ z22 == 0 goto label23", "label $ r25 = org openrdf model vocabulary x m l schema gyear", "$ z23 = r1 equal $ r25", "if $ z23 == 0 goto label24", "z28 = org openrdf model datatypes x m l datatype util be valid g year r0", "if $ z23 == 0 goto label24", "label $ r26 = org openrdf model vocabulary x m l schema gyearmonth", "$ z24 = r1 equal $ r26", "if $ z24 == 0 goto label25", "z28 = org openrdf model datatypes x m l datatype util be valid g year month r0", "if $ z24 == 0 goto label25", "label $ r27 = org openrdf model vocabulary x m l schema duration", "$ z25 = r1 equal $ r27", "if $ z25 == 0 goto label26", "z28 = org openrdf model datatypes x m l datatype util be valid duration r0", "if $ z25 == 0 goto label26", "label $ r28 = org openrdf model vocabulary x m l schema daytimeduration", "$ z26 = r1 equal $ r28", "if $ z26 == 0 goto label27", "z28 = org openrdf model datatypes x m l datatype util be valid day time duration r0", "if $ z26 == 0 goto label27", "label $ r29 = org openrdf model vocabulary x m l schema qname", "$ z27 = r1 equal $ r29", "if $ z27 == 0 goto label28", "z28 = org openrdf model datatypes x m l datatype util be valid q name r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], [94], [95], [96], [97], [98], [99], [100], [101], [102], [103], [104], [105], [106], [107], [108], [109], [110], [111], [112], [113], [114], [115], [116], [117], [118], [119], [120], [121], [122], [123], [124], [125], [126], [127], [128], [129], [130], [131], [132], [133], [134], [135], [136], [137], [138], [139], [140], [141], [142], [143], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r20 = r0", "$ r2 = org openrdf model vocabulary x m l schema decimal", "$ z0 = r1 equal $ r2", "if $ z0 == 0 goto label01", "r20 = org openrdf model datatypes x m l datatype util normalize decimal r0", "goto label18", "label return r20", "if $ z0 == 0 goto label01", "label $ r3 = org openrdf model vocabulary x m l schema integer", "$ z1 = r1 equal $ r3", "if $ z1 == 0 goto label02", "r20 = org openrdf model datatypes x m l datatype util normalize integer r0", "if $ z1 == 0 goto label02", "label $ r4 = org openrdf model vocabulary x m l schema negative_integer", "$ z2 = r1 equal $ r4", "if $ z2 == 0 goto label03", "r20 = org openrdf model datatypes x m l datatype util normalize negative integer r0", "if $ z2 == 0 goto label03", "label $ r5 = org openrdf model vocabulary x m l schema non_positive_integer", "$ z3 = r1 equal $ r5", "if $ z3 == 0 goto label04", "r20 = org openrdf model datatypes x m l datatype util normalize non positive integer r0", "if $ z3 == 0 goto label04", "label $ r6 = org openrdf model vocabulary x m l schema non_negative_integer", "$ z4 = r1 equal $ r6", "if $ z4 == 0 goto label05", "r20 = org openrdf model datatypes x m l datatype util normalize non negative integer r0", "if $ z4 == 0 goto label05", "label $ r7 = org openrdf model vocabulary x m l schema positive_integer", "$ z5 = r1 equal $ r7", "if $ z5 == 0 goto label06", "r20 = org openrdf model datatypes x m l datatype util normalize positive integer r0", "if $ z5 == 0 goto label06", "label $ r8 = org openrdf model vocabulary x m l schema long", "$ z6 = r1 equal $ r8", "if $ z6 == 0 goto label07", "r20 = org openrdf model datatypes x m l datatype util normalize long r0", "if $ z6 == 0 goto label07", "label $ r9 = org openrdf model vocabulary x m l schema int", "$ z7 = r1 equal $ r9", "if $ z7 == 0 goto label08", "r20 = org openrdf model datatypes x m l datatype util normalize int r0", "if $ z7 == 0 goto label08", "label $ r10 = org openrdf model vocabulary x m l schema short", "$ z8 = r1 equal $ r10", "if $ z8 == 0 goto label09", "r20 = org openrdf model datatypes x m l datatype util normalize short r0", "if $ z8 == 0 goto label09", "label $ r11 = org openrdf model vocabulary x m l schema byte", "$ z9 = r1 equal $ r11", "if $ z9 == 0 goto label10", "r20 = org openrdf model datatypes x m l datatype util normalize byte r0", "if $ z9 == 0 goto label10", "label $ r12 = org openrdf model vocabulary x m l schema unsigned_long", "$ z10 = r1 equal $ r12", "if $ z10 == 0 goto label11", "r20 = org openrdf model datatypes x m l datatype util normalize unsigned long r0", "if $ z10 == 0 goto label11", "label $ r13 = org openrdf model vocabulary x m l schema unsigned_int", "$ z11 = r1 equal $ r13", "if $ z11 == 0 goto label12", "r20 = org openrdf model datatypes x m l datatype util normalize unsigned int r0", "if $ z11 == 0 goto label12", "label $ r14 = org openrdf model vocabulary x m l schema unsigned_short", "$ z12 = r1 equal $ r14", "if $ z12 == 0 goto label13", "r20 = org openrdf model datatypes x m l datatype util normalize unsigned short r0", "if $ z12 == 0 goto label13", "label $ r15 = org openrdf model vocabulary x m l schema unsigned_byte", "$ z13 = r1 equal $ r15", "if $ z13 == 0 goto label14", "r20 = org openrdf model datatypes x m l datatype util normalize unsigned byte r0", "if $ z13 == 0 goto label14", "label $ r16 = org openrdf model vocabulary x m l schema float", "$ z14 = r1 equal $ r16", "if $ z14 == 0 goto label15", "r20 = org openrdf model datatypes x m l datatype util normalize float r0", "if $ z14 == 0 goto label15", "label $ r17 = org openrdf model vocabulary x m l schema double", "$ z15 = r1 equal $ r17", "if $ z15 == 0 goto label16", "r20 = org openrdf model datatypes x m l datatype util normalize double r0", "if $ z15 == 0 goto label16", "label $ r18 = org openrdf model vocabulary x m l schema boolean", "$ z16 = r1 equal $ r18", "if $ z16 == 0 goto label17", "r20 = org openrdf model datatypes x m l datatype util normalize boolean r0", "if $ z16 == 0 goto label17", "label $ r19 = org openrdf model vocabulary x m l schema datetime", "$ z17 = r1 equal $ r19", "if $ z17 == 0 goto label18", "r20 = org openrdf model datatypes x m l datatype util normalize date time r0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], [73], [74], [75], [76], [77], [78], [79], [80], [81], [82], [83], [84], [85], [86], [87], [88], [89], [90], [91], [92], [93], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org openrdf model datatypes x m l datatype util normalize f p number r0 \\ `` -16777215 0\\", "return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org openrdf model datatypes x m l datatype util normalize float r0", "r3 = org openrdf model datatypes x m l datatype util normalize float r1", "$ i0 = org openrdf model datatypes x m l datatype util compare canonical float r2 r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ i0 = org openrdf model datatypes x m l datatype util compare canonical f p number r0 r1", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = org openrdf model datatypes x m l datatype util normalize f p number r0", "r3 = org openrdf model datatypes x m l datatype util normalize f p number r1", "$ i0 = org openrdf model datatypes x m l datatype util compare canonical f p number r2 r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org openrdf model datatypes x m l datatype util trim plus sign r0", "$ b0 = java lang byte parse byte r1", "return $ b0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org openrdf model datatypes x m l datatype util trim plus sign r0", "$ i0 = java lang integer parse int r1", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = org openrdf model datatypes x m l datatype util trim plus sign r0", "$ l0 = java lang long parse long r1", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = r0 match r1 r2 null r3", "r6 = new org openrdf model util graph util $ 2", "specialinvoke r6 < init > r4", "r7 = java util iterator r6", "return r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "if r0 == null goto label1", "$ r2 = r0 get label", "goto label2", "label return $ r2", "if r0 == null goto label1", "label $ r2 = r1"], "adj": [[1], [2], [3], [4], [], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "label $ i1 = r0 int value", "label return $ i1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r3 = org openrdf rio parser config r0", "$ r1 = r3 non fatal error", "$ r2 = java util collection unmodifiable set $ r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["i0 = @ parameter0", "i1 = @ parameter1", "if i0 > = 0 goto label1", "return \\ `` \\ ``", "if i0 > = 0 goto label1", "label $ r1 = new java lang string builder", "specialinvoke $ r1 < init > 16", "$ r1 append \\ `` [ line \\ ``", "$ r1 append i0", "if i1 < 0 goto label2", "$ r1 append \\", "$ r1 append i1", "label $ r1 append \\ `` ] \\ ``", "$ r5 = $ r1 to string", "return $ r5"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["$ r0 = org openrdf rio r d f parser registry default registry", "if $ r0 ! = null goto label1", "$ r2 = new org openrdf rio r d f parser registry", "specialinvoke $ r2 < init >", "org openrdf rio r d f parser registry default registry = $ r2", "label $ r1 = org openrdf rio r d f parser registry default registry", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r2 = org openrdf rio rio config r0", "$ r1 = r2 setting", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "label $ r1 = new java lang string builder", "$ r2 = r0 get i d", "$ i0 = $ r2 length", "$ i1 = $ i0 + 1", "specialinvoke $ r1 < init > $ i1", "org openrdf rio ntriples n triple util append r0 $ r1", "$ r3 = $ r1 to string", "label return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r16 = new java lang string builder", "specialinvoke r16 < init >", "r16 append \\ `` atts [ \\ ``", "i1 = 0", "label r17 = org openrdf rio rdfxml atts r0", "$ r5 = r17 attribute", "$ i0 = $ r5 size", "if i1 > = $ i0 goto label2", "r18 = org openrdf rio rdfxml atts r0", "$ r8 = r18 attribute", "$ r9 = $ r8 get i1", "r2 = org openrdf rio rdfxml att $ r9", "$ r10 = r2 get q name", "r16 append $ r10", "r16 append \\ `` =\\ ``", "$ r13 = r2 get value", "r16 append $ r13", "r16 append \\ `` \\ ``", "i1 = i1 + 1", "goto label1", "if i1 > = $ i0 goto label2", "label r16 append \\ `` ] \\ ``", "$ r7 = r16 to string", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], [23], [24], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org openrdf rio rdfxml s a x filter r0", "r4 locator = r1", "r5 = org openrdf rio rdfxml s a x filter r0", "$ r3 = r5 rdf parser", "r2 = $ r3 get parse location listener", "if r2 == null goto label1", "if r1 == null goto label1", "$ i0 = r1 get line number", "$ i1 = r1 get column number", "r2 parse location update $ i0 $ i1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ parameter0", "i3 = @ parameter1", "i4 = @ parameter2", "b0 = @ parameter3", "i5 = -1", "if i3 > = 0 goto label1", "i3 = 0", "label $ i1 = lengthof r0", "i6 = java lang math min i4 $ i1", "i7 = i3", "label if i3 > = i6 goto label4", "if i5 ! = -1 goto label4", "if i7 > = i6 goto label4", "$ b2 = r0 [ i7 ]", "if $ b2 ! = b0 goto label3", "i5 = i7", "label i7 = i7 + 1", "goto label2", "if i7 > = i6 goto label4", "label return i5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ parameter0", "z3 = 1", "$ z0 = r0 be directory", "if $ z0 == 0 goto label5", "r1 = r0 list file", "i1 = lengthof r1", "label $ i0 = i1", "i1 = i1 + -1", "if $ i0 < = 0 goto label5", "r2 = r1 [ i1 ]", "$ z1 = r2 be file", "if $ z1 == 0 goto label4", "if z3 == 0 goto label2", "$ z2 = r2 delete", "if $ z2 == 0 goto label2", "$ z4 = 1", "goto label3", "label z3 = $ z4", "label goto label1", "if $ z2 == 0 goto label2", "label $ z4 = 0", "if $ i0 < = 0 goto label5", "label return z3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return 0", "if r1 ! = null goto label1", "label r6 = r1", "$ i0 = r1 index of 59", "if $ i0 < = 0 goto label2", "$ i1 = r1 index of 59", "r6 = r1 substring 0 $ i1", "label r7 = info aduna lang file format r0", "$ r4 = r7 mime type", "r2 = $ r4 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label6", "$ r5 = r2 next", "r3 = java lang string $ r5", "$ z0 = r3 equal ignore case r1", "if $ z0 == 0 goto label4", "return 1", "if $ z0 == 0 goto label4", "label if r1 == r6 goto label5", "$ z1 = r3 equal ignore case r6", "if $ z1 == 0 goto label5", "label goto label3", "if $ z2 == 0 goto label6", "label return 0"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], []]}
{"nodes": ["r0 = @ this", "r2 = info aduna lang file format r0", "$ r1 = r2 charset", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "$ i0 = 0", "goto label2", "label return $ i0", "if r0 ! = null goto label1", "label $ i0 = r0 hash code"], "adj": [[1], [2], [3], [], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "z0 = 0", "$ r1 = r0 trim", "$ i0 = $ r1 length", "if $ i0 > = 3 goto label1", "z0 = 1", "goto label4", "label return z0", "if $ i0 > = 3 goto label1", "label $ i1 = r0 length", "if $ i1 < = 30 goto label4"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ parameter0", "r1 = info aduna text string util gsub \\ `` & \\", "r2 = info aduna text string util gsub \\ `` < \\", "r3 = info aduna text string util gsub \\ `` > \\", "r4 = info aduna text string util gsub \\ `` \\r\\", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss shrinkwrap api asset byte array asset r0", "$ r1 = r2 content", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang string value of r1", "r4 = org jboss shrinkwrap descriptor spi node node r0", "$ r3 = r4 text $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss shrinkwrap descriptor spi node node r0", "$ r1 = r2 text", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new java util array list", "specialinvoke r10 < init >", "r11 = org jboss shrinkwrap descriptor spi node node r0", "r3 = r11 get r1", "r4 = r3 iterator", "label $ z0 = r4 have next", "if $ z0 == 0 goto label3", "$ r9 = r4 next", "r5 = org jboss shrinkwrap descriptor spi node node $ r9", "r6 = r5 get text", "if r6 == null goto label2", "r10 add r6", "label goto label1", "if $ z0 == 0 goto label3", "label $ r8 = java util collection unmodifiable list r10", "return $ r8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r5 = org jboss shrinkwrap impl base io tar tar archive r0", "r5 debug = z0", "r6 = org jboss shrinkwrap impl base io tar tar archive r0", "$ r1 = r6 tar in", "if $ r1 == null goto label1", "r7 = org jboss shrinkwrap impl base io tar tar archive r0", "$ r4 = r7 tar in", "$ r4 set debug z0", "goto label2", "label return", "if $ r1 == null goto label1", "label r8 = org jboss shrinkwrap impl base io tar tar archive r0", "$ r2 = r8 tar out", "if $ r2 == null goto label2", "r9 = org jboss shrinkwrap impl base io tar tar archive r0", "$ r3 = r9 tar out", "$ r3 set debug z0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss shrinkwrap impl base io tar tar archive r0", "$ i0 = r1 user id", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 instanceof org jboss shrinkwrap impl base io tar tar entry", "if $ z0 ! = 0 goto label1", "return 0", "if $ z0 ! = 0 goto label1", "label $ r2 = org jboss shrinkwrap impl base io tar tar entry r1", "r3 = org jboss shrinkwrap impl base io tar tar entry r0", "$ z1 = r3 equal $ r2", "return $ z1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss shrinkwrap impl base io tar tar output stream impl r0", "r2 finish", "r3 = org jboss shrinkwrap impl base io tar tar output stream impl r0", "$ r1 = r3 buffer", "$ r1 close", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "$ r1 = new java lang unsupported operation exception", "specialinvoke $ r1 < init > \\ `` enterprise archive do not support classes\\ ``", "throw $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = io prometheus client collector r0", "r1 register r2", "r3 = io prometheus client collector r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = io prometheus client counter r0", "r1 inc 1 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = io prometheus client gauge r0", "r1 dec 1 0", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r0 = new io prometheus client summary $ builder", "specialinvoke $ r0 < init >", "return $ r0"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "d0 = @ parameter0", "r3 = io prometheus client summary r0", "$ r1 = r3 no label child", "$ r2 = io prometheus client summary $ child $ r1", "$ r2 observe d0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org yaml snakeyaml type description r0", "$ z0 = r1 root", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r1 = @ parameter3", "i2 = @ parameter4", "$ r2 = org xerial snappy snappy impl", "$ r2 array copy r0 i0 i1 r1 i2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r2 = org xerial snappy snappy output stream r0", "r2 raw write r1 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "i1 = @ parameter2", "r2 = org xerial snappy snappy output stream r0", "r2 raw write r1 i0 i1", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["$ r0 = spark globalstate servlet flag be run from servlet", "$ r0 set 1", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = spark redirect r0", "r3 get r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = spark redirect r0", "r3 delete r1 r2 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = spark response r0", "$ r1 = r2 response", "$ i0 = $ r1 get status", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ r3 = spark route http method connect", "$ r4 = $ r3 name", "$ r5 = spark route impl create r1 r2", "r6 = spark routable r0", "r6 add route $ r4 $ r5", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "$ r2 = spark route http method method", "$ r3 = $ r2 get r0", "r1 = spark route http method $ r3", "if r1 == null goto label1", "$ r4 = r1", "goto label2", "label return $ r4", "if r1 == null goto label1", "label $ r4 = spark route http method unsupported"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r3 = spark service r0", "$ z0 = r3 initialize", "if $ z0 == 0 goto label1", "r4 = spark service r0", "$ i0 = r4 port", "return $ i0", "if $ z0 == 0 goto label1", "label r2 = new java lang illegal state exception", "specialinvoke r2 < init > \\ `` this must be do after route mapping have begun\\ ``", "throw r2"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = spark service r0", "$ r1 = r2 thread pool i0 -1 -1", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = new spark embeddedserver jetty websocket web socket handler class wrapper", "specialinvoke r4 < init > r2", "r5 = spark service r0", "r6 = spark embeddedserver jetty websocket web socket handler wrapper r4", "specialinvoke r5 add web socket handler r1 r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = spark session r0", "$ r3 = r4 session", "$ r3 set attribute r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = r0 get protocol", "$ r2 = \\ `` jar\\ ``", "$ z0 = $ r2 equal r1", "if $ z0 ! = 0 goto label1", "$ r3 = \\ `` zip\\ ``", "$ z1 = $ r3 equal r1", "if $ z1 ! = 0 goto label1", "$ r4 = \\ `` wsjar\\ ``", "$ z2 = $ r4 equal r1", "if $ z2 == 0 goto label2", "label $ z3 = 1", "goto label3", "label return $ z3", "if $ z2 == 0 goto label2", "label $ z3 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], [15], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "l1 = l0 * 8l", "r16 = org apache spark memory memory consumer r0", "$ r2 = r16 task memory manager", "r17 = org apache spark memory memory consumer r0", "r1 = $ r2 allocate page l1 r17", "if r1 == null goto label1", "$ l2 = r1 size", "$ b3 = $ l2 cmp l1", "if $ b3 > = 0 goto label3", "label l6 = 0l", "if r1 == null goto label2", "l6 = r1 size", "r18 = org apache spark memory memory consumer r0", "$ r11 = r18 task memory manager", "r19 = org apache spark memory memory consumer r0", "$ r11 free page r1 r19", "label r20 = org apache spark memory memory consumer r0", "$ r3 = r20 task memory manager", "$ r3 show memory usage", "r14 = new java lang out of memory error", "r13 = new java lang string builder", "specialinvoke r13 < init >", "$ r6 = r13 append \\ `` unable to acquire \\ ``", "$ r7 = $ r6 append l1", "$ r8 = $ r7 append \\ `` byte of memory get \\ ``", "$ r9 = $ r8 append l6", "$ r10 = $ r9 to string", "specialinvoke r14 < init > $ r10", "throw r14", "if $ b3 > = 0 goto label3", "label r21 = org apache spark memory memory consumer r0", "$ l4 = r21 use", "$ l5 = $ l4 + l1", "r22 = org apache spark memory memory consumer r0", "r22 use = $ l5", "r15 = new org apache spark unsafe array long array", "specialinvoke r15 < init > r1", "return r15"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 memory block", "r3 = org apache spark memory memory consumer r0", "r3 free page $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r12 = org apache spark shuffle sort shuffle external sorter r0", "specialinvoke r12 free memory", "r13 = org apache spark shuffle sort shuffle external sorter r0", "$ r3 = r13 in mem sorter", "if $ r3 == null goto label1", "r14 = org apache spark shuffle sort shuffle external sorter r0", "$ r11 = r14 in mem sorter", "$ r11 free", "r15 = org apache spark shuffle sort shuffle external sorter r0", "r15 in mem sorter = null", "label r16 = org apache spark shuffle sort shuffle external sorter r0", "$ r4 = r16 spill", "r1 = $ r4 iterator", "label $ z2 = r1 have next", "if $ z2 == 0 goto label4", "$ r5 = r1 next", "r2 = org apache spark shuffle sort spill info $ r5", "$ r6 = r2 file", "$ z0 = $ r6 exist", "if $ z0 == 0 goto label3", "$ r7 = r2 file", "$ z1 = $ r7 delete", "if $ z1 ! = 0 goto label3", "$ r9 = org apache spark shuffle sort shuffle external sorter logger", "$ r8 = r2 file", "$ r10 = $ r8 get path", "$ r9 error \\ `` unable to delete spill file { } \\", "label goto label2", "if $ z2 == 0 goto label4", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r6 = org apache spark unsafe map byte to byte map r0", "r6 num key = 0", "r7 = org apache spark unsafe map byte to byte map r0", "r7 num value = 0", "r8 = org apache spark unsafe map byte to byte map r0", "$ r2 = r8 long array", "r9 = org apache spark unsafe map byte to byte map r0", "r9 free array $ r2", "label r10 = org apache spark unsafe map byte to byte map r0", "$ r3 = r10 data page", "$ i0 = $ r3 size", "if $ i0 < = 0 goto label2", "r11 = org apache spark unsafe map byte to byte map r0", "$ r4 = r11 data page", "$ r5 = $ r4 remove last", "r1 = org apache spark unsafe memory memory block $ r5", "r12 = org apache spark unsafe map byte to byte map r0", "r12 free page r1", "goto label1", "if $ i0 < = 0 goto label2", "label r13 = org apache spark unsafe map byte to byte map r0", "$ i1 = r13 initial capacity", "r14 = org apache spark unsafe map byte to byte map r0", "specialinvoke r14 allocate $ i1", "r15 = org apache spark unsafe map byte to byte map r0", "r15 can grow array = 1", "r16 = org apache spark unsafe map byte to byte map r0", "r16 current page = null", "r17 = org apache spark unsafe map byte to byte map r0", "r17 page cursor = 0l", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org apache spark launcher command builder utils check not null r1 \\ `` spark home\\ ``", "r5 = org apache spark launcher spark launcher r0", "$ r2 = r5 builder", "$ r3 = $ r2 child env", "$ r3 put \\ `` spark_home\\", "r6 = org apache spark launcher spark launcher r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = org apache spark network client transport client r0", "$ r1 = r2 client id", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache spark network crypto transport cipher r0", "$ r1 = r2 out iv", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 pipeline", "r7 = new org apache spark network crypto transport cipher $ encryption handler", "r9 = org apache spark network crypto transport cipher r0", "specialinvoke r7 < init > r9", "r10 = io netty channel channel handler r7", "$ r4 = $ r2 add first \\ `` transport encryption\\", "r8 = new org apache spark network crypto transport cipher $ decryption handler", "r11 = org apache spark network crypto transport cipher r0", "specialinvoke r8 < init > r11", "r12 = io netty channel channel handler r8", "$ r4 add first \\ `` transport decryption\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ parameter0", "org spark_project guava base precondition check not null r0 \\ `` password can not be null if sasl be enabled\\ ``", "$ r2 = org apache spark network sasl spark sasl server get base64 encode string r0", "$ r3 = $ r2 to char array", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = r1 remain", "r5 = org apache spark network util byte array writable channel r0", "$ r2 = r5 data", "$ i3 = lengthof $ r2", "r6 = org apache spark network util byte array writable channel r0", "$ i2 = r6 offset", "$ i4 = $ i3 - $ i2", "i0 = java lang math min $ i1 $ i4", "r7 = org apache spark network util byte array writable channel r0", "$ r3 = r7 data", "r8 = org apache spark network util byte array writable channel r0", "$ i5 = r8 offset", "r1 get $ r3 $ i5 i0", "r9 = org apache spark network util byte array writable channel r0", "$ i6 = r9 offset", "$ i7 = $ i6 + i0", "r10 = org apache spark network util byte array writable channel r0", "r10 offset = $ i7", "return i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = org apache spark network util byte unit byte", "$ l0 = org apache spark network util java utils byte string a r0 $ r1", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r11 = org apache spark network util transport conf r0", "$ r1 = r11 conf", "$ r2 = $ r1 get \\ `` spark network timeout\\", "l0 = org apache spark network util java utils time string a sec $ r2", "r12 = org apache spark network util transport conf r0", "$ r4 = r12 conf", "r13 = org apache spark network util transport conf r0", "$ r5 = r13 spark_network_io_connectiontimeout_key", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r6 = r10 append l0", "$ r7 = $ r6 append \\ `` s\\ ``", "$ r8 = $ r7 to string", "$ r9 = $ r4 get $ r5 $ r8", "$ l2 = org apache spark network util java utils time string a sec $ r9", "l1 = $ l2 * 1000l", "$ i3 = int l1", "return $ i3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r4 = r3 split \\ `` _\\ ``", "$ i3 = lengthof r4", "if $ i3 > = 4 goto label1", "r28 = new java lang illegal argument exception", "r27 = new java lang string builder", "specialinvoke r27 < init >", "$ r24 = r27 append \\ `` unexpected block id format \\ ``", "$ r25 = $ r24 append r3", "$ r26 = $ r25 to string", "specialinvoke r28 < init > $ r26", "throw r28", "if $ i3 > = 4 goto label1", "label $ r6 = r4 [ 0 ]", "$ z0 = $ r6 equal \\ `` shuffle\\ ``", "if $ z0 ! = 0 goto label2", "r30 = new java lang illegal argument exception", "r29 = new java lang string builder", "specialinvoke r29 < init >", "$ r19 = r29 append \\ `` expect shuffle block id get \\ ``", "$ r20 = $ r19 append r3", "$ r21 = $ r20 to string", "specialinvoke r30 < init > $ r21", "throw r30", "if $ z0 ! = 0 goto label2", "label $ r7 = r4 [ 1 ]", "i0 = java lang integer parse int $ r7", "$ r8 = r4 [ 2 ]", "i1 = java lang integer parse int $ r8", "$ r9 = r4 [ 3 ]", "i2 = java lang integer parse int $ r9", "r33 = org apache spark network shuffle external shuffle block resolver r0", "$ r11 = r33 executor", "r31 = new org apache spark network shuffle external shuffle block resolver $ app exec id", "specialinvoke r31 < init > r1 r2", "$ r12 = $ r11 get r31", "r5 = org apache spark network shuffle protocol executor shuffle info $ r12", "if r5 ! = null goto label3", "r32 = new java lang runtime exception", "$ r15 = newarray java lang object [ 2 ]", "$ r15 [ 0 ] = r1", "$ r15 [ 1 ] = r2", "$ r16 = java lang string format \\ `` executor be not registered app id= % s exec id= % s \\", "specialinvoke r32 < init > $ r16", "throw r32", "if r5 ! = null goto label3", "label r34 = org apache spark network shuffle external shuffle block resolver r0", "$ r13 = specialinvoke r34 get sort base shuffle block data r5 i0 i1 i2", "return $ r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [], [49], [50], [51], []]}
{"nodes": ["r0 = @ this", "r1 = org apache spark network shuffle retry block fetcher r0", "specialinvoke r1 fetch all outstanding", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "$ r1 = new org apache spark unsafe memory memory block", "$ i0 = org apache spark unsafe platform long_array_offset", "$ l4 = long $ i0", "$ i1 = lengthof r0", "$ l2 = long $ i1", "$ l3 = $ l2 * 8l", "specialinvoke $ r1 < init > r0 $ l4 $ l3", "return $ r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i1 = r1 num bytes", "if $ i1 ! = 0 goto label1", "return 1", "if $ i1 ! = 0 goto label1", "label b0 = specialinvoke r1 get byte 0", "i6 = 0", "label r2 = org apache spark unsafe type u t f8 string r0", "$ i3 = r2 num bytes", "$ i2 = r1 num bytes", "$ i4 = $ i3 - $ i2", "if i6 > $ i4 goto label4", "r3 = org apache spark unsafe type u t f8 string r0", "$ b5 = specialinvoke r3 get byte i6", "if $ b5 ! = b0 goto label3", "r4 = org apache spark unsafe type u t f8 string r0", "$ z0 = specialinvoke r4 match at r1 i6", "if $ z0 == 0 goto label3", "label i6 = i6 + 1", "goto label2", "if i6 > $ i4 goto label4", "label return 0"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [], [22], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = com netflix spectator api extend registry r0", "$ r4 = r7 impl", "$ r5 = $ r4 create id r1 r2", "r8 = com netflix spectator api extend registry r0", "$ r6 = r8 gauge $ r5 r3", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jdbc core callable statement creator factory r0", "r1 updatable result = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = new org springframework jdbc core callable statement creator factory $ callable statement creator impl", "if r1 == null goto label1", "$ r4 = r1", "goto label2", "label r7 = org springframework jdbc core callable statement creator factory r0", "specialinvoke r6 < init > r7 $ r4", "r8 = org springframework jdbc core callable statement creator r6", "return r8", "if r1 == null goto label1", "label r5 = new java util hash map", "$ r4 = r5", "specialinvoke r5 < init >"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core jdbc template r0", "$ i0 = r1 query timeout", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core jdbc template r0", "$ z0 = r1 skip result process", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jdbc core metadata call meta data context r0", "r1 return value require = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework jdbc core metadata call meta data context r0", "$ r2 = org springframework jdbc core metadata call meta data provider factory create meta data provider r1 r3", "r4 = org springframework jdbc core metadata call meta data context r0", "r4 meta data provider = $ r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata call parameter meta data r0", "$ i0 = r1 sql type", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jdbc core metadata generic call meta data provider r0", "r1 support schema in procedure call = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata generic call meta data provider r0", "$ z0 = r1 support schema in procedure call", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jdbc core metadata table meta data context r0", "r2 table name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core metadata table meta data context r0", "$ r1 = r2 table name", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jdbc core metadata table meta data context r0", "r1 override include synonyms default = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc core metadata table parameter meta data r0", "$ i0 = r1 sql type", "return $ i0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` parameter name must not be null\\ ``", "r6 = org springframework jdbc core namedparam abstract sql parameter source r0", "$ r2 = r6 sql type", "$ r3 = java lang integer value of -2147483648", "$ r4 = $ r2 get or default r1 $ r3", "$ r5 = java lang integer $ r4", "$ i0 = $ r5 int value", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core namedparam name parameter jdbc template r0", "$ r1 = r2 classic jdbc template", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core prepared statement creator factory r0", "$ r1 = r2 sql", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core simple abstract jdbc call r0", "$ r1 = r2 call meta data context", "$ z0 = $ r1 be function", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core simple abstract jdbc call r0", "$ r1 = r2 call meta data context", "$ z0 = $ r1 be return value require", "return $ z0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "org springframework util assert not null r1 \\ `` the supplied parameter must not be null\\ ``", "$ r2 = r1 get name", "$ z0 = org springframework util string utils have text $ r2", "if $ z0 ! = 0 goto label1", "r22 = new org springframework dao invalid data access api usage exception", "r21 = new java lang string builder", "specialinvoke r21 < init >", "$ r16 = r21 append \\ `` you must specify a parameter name when declare parameter for \\\\\\ `` \\ ``", "r24 = org springframework jdbc core simple abstract jdbc call r0", "$ r17 = r24 get procedure name", "$ r18 = $ r16 append $ r17", "$ r19 = $ r18 append \\ `` \\\\\\ `` \\ ``", "$ r20 = $ r19 to string", "specialinvoke r22 < init > $ r20", "r25 = java lang throwable r22", "throw r25", "if $ z0 ! = 0 goto label1", "label r26 = org springframework jdbc core simple abstract jdbc call r0", "$ r3 = r26 declare parameter", "$ r3 add r1", "r27 = org springframework jdbc core simple abstract jdbc call r0", "$ r4 = r27 logger", "$ z2 = $ r4 be debug enabled", "if $ z2 == 0 goto label2", "r28 = org springframework jdbc core simple abstract jdbc call r0", "$ r6 = r28 logger", "r23 = new java lang string builder", "specialinvoke r23 < init >", "$ r7 = r23 append \\ `` added declare parameter for [ \\ ``", "r29 = org springframework jdbc core simple abstract jdbc call r0", "$ r8 = r29 get procedure name", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` ] \\ ``", "$ r11 = r1 get name", "$ r12 = $ r10 append $ r11", "$ r13 = $ r12 to string", "$ r6 debug $ r13", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core simple abstract jdbc call r0", "$ z0 = r2 be compile", "if $ z0 ! = 0 goto label1", "r3 = org springframework jdbc core simple abstract jdbc call r0", "$ r1 = r3 logger", "$ r1 debug \\ `` jdbc call call not compile before execution - invoking compile\\ ``", "r4 = org springframework jdbc core simple abstract jdbc call r0", "r4 compile", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc core support jdbc dao support r0", "$ r1 = r2 jdbc template", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework jdbc datasource abstract driver base data source r0", "r2 password = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jdbc datasource connection holder r0", "r1 transaction active = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r8 = org springframework jdbc datasource connection holder r0", "$ i0 = r8 savepoint counter", "$ i1 = $ i0 + 1", "r9 = org springframework jdbc datasource connection holder r0", "r9 savepoint counter = $ i1", "r10 = org springframework jdbc datasource connection holder r0", "$ r1 = r10 get connection", "r7 = new java lang string builder", "specialinvoke r7 < init >", "$ r3 = r7 append \\ `` savepoint_\\ ``", "r11 = org springframework jdbc datasource connection holder r0", "$ i2 = r11 savepoint counter", "$ r4 = $ r3 append $ i2", "$ r5 = $ r4 to string", "$ r6 = $ r1 set savepoint $ r5", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc datasource data source transaction manager r0", "$ r1 = r2 data source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "label $ r1 = org springframework jdbc datasource data source utils do get connection r0", "label return $ r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org springframework jdbc datasource embed embedded database builder r0", "$ r1 = r3 database factory", "$ r2 = $ r1 get database", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc datasource jdbc transaction object support r0", "$ r1 = r2 previous isolation level", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc datasource jdbc transaction object support r0", "$ z0 = r1 read only", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework jdbc datasource lazy connection data source proxy constant", "$ r3 = $ r2 a number r1", "$ i0 = $ r3 int value", "r4 = org springframework jdbc datasource lazy connection data source proxy r0", "r4 set default transaction isolation $ i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jdbc datasource lookup abstract rout data source r0", "r1 lenient fallback = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jdbc datasource lookup abstract rout data source r0", "$ r1 = r2 resolve default data source", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = org springframework bean bean utils instantiate class r1", "$ r3 = java sql driver $ r2", "r4 = org springframework jdbc datasource simple driver data source r0", "r4 driver = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc datasource single connection data source r0", "$ z0 = r1 suppress close", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r8 = org springframework jdbc datasource single connection data source r0", "$ r3 = r8 get username", "$ z0 = org springframework util object utils null safe equal r1 $ r3", "if $ z0 == 0 goto label1", "r9 = org springframework jdbc datasource single connection data source r0", "$ r5 = r9 get password", "$ z1 = org springframework util object utils null safe equal r2 $ r5", "if $ z1 == 0 goto label1", "r10 = org springframework jdbc datasource single connection data source r0", "$ r6 = r10 get connection", "return $ r6", "if $ z1 == 0 goto label1", "label r7 = new java sql s q l exception", "specialinvoke r7 < init > \\ `` single connection data source do not support custom username and password\\ ``", "throw r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r7 = org springframework jdbc object batch sql update r0", "$ r2 = r7 row affect", "$ i0 = $ r2 size", "r1 = newarray int [ $ i0 ]", "i3 = 0", "label r8 = org springframework jdbc object batch sql update r0", "$ r3 = r8 row affect", "$ i1 = $ r3 size", "if i3 > = $ i1 goto label2", "r9 = org springframework jdbc object batch sql update r0", "$ r4 = r9 row affect", "$ r5 = $ r4 get i3", "$ r6 = java lang integer $ r5", "$ i2 = $ r6 int value", "r1 [ i3 ] = $ i2", "i3 = i3 + 1", "goto label1", "if i3 > = $ i1 goto label2", "label return r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [], [19], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r18 = org springframework jdbc object rdbms operation r0", "$ z0 = r18 be compile", "if $ z0 == 0 goto label1", "r15 = new org springframework dao invalid data access api usage exception", "specialinvoke r15 < init > \\ `` can not add parameter once the query be compiled\\ ``", "r19 = java lang throwable r15", "throw r19", "if $ z0 == 0 goto label1", "label i1 = 0", "label $ i0 = lengthof r1", "if i1 > = $ i0 goto label5", "$ r2 = r1 [ i1 ]", "if $ r2 == null goto label3", "r20 = org springframework jdbc object rdbms operation r0", "$ r13 = r20 declare parameter", "$ r12 = r1 [ i1 ]", "$ r13 add $ r12", "goto label4", "label i1 = i1 + 1", "goto label2", "if $ r2 == null goto label3", "label r17 = new org springframework dao invalid data access api usage exception", "r16 = new java lang string builder", "specialinvoke r16 < init >", "$ r5 = r16 append \\ `` can not add parameter at index \\ ``", "$ r6 = $ r5 append i1", "$ r7 = $ r6 append \\ `` from \\ ``", "$ r8 = java util array a list r1", "$ r9 = $ r7 append $ r8", "$ r10 = $ r9 append \\ `` since it be \\'null\\'\\ ``", "$ r11 = $ r10 to string", "specialinvoke r17 < init > $ r11", "r21 = java lang throwable r17", "throw r21", "if i1 > = $ i0 goto label5", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [], [21], [], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [], [37], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework jdbc object sql call r0", "$ z0 = r1 function", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r1 = java lang object [ ] null", "r3 = org springframework jdbc object sql query r0", "$ r2 = r3 execute $ r1 null", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = org springframework jdbc object sql query r0", "$ r1 = r2 find object i0 null", "return $ r1"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r13 = org springframework jdbc object batch sql update r0", "r13 validate parameter r1", "r14 = org springframework jdbc object batch sql update r0", "$ r2 = r14 parameter queue", "$ r3 = r1 clone", "$ r2 add $ r3", "r15 = org springframework jdbc object batch sql update r0", "$ r4 = r15 parameter queue", "$ i0 = $ r4 size", "r16 = org springframework jdbc object batch sql update r0", "$ i1 = r16 batch size", "if $ i0 ! = $ i1 goto label2", "r17 = org springframework jdbc object batch sql update r0", "$ r5 = r17 logger", "$ z1 = $ r5 be debug enabled", "if $ z1 == 0 goto label1", "r18 = org springframework jdbc object batch sql update r0", "$ r8 = r18 logger", "r12 = new java lang string builder", "specialinvoke r12 < init >", "$ r9 = r12 append \\ `` trigger auto-flush because queue reach batch size of \\ ``", "r19 = org springframework jdbc object batch sql update r0", "$ i2 = r19 batch size", "$ r10 = $ r9 append $ i2", "$ r11 = $ r10 to string", "$ r8 debug $ r11", "label r20 = org springframework jdbc object batch sql update r0", "r20 flush", "label return -1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get name", "if $ r2 ! = null goto label1", "r4 = new org springframework dao invalid data access api usage exception", "specialinvoke r4 < init > \\ `` parameter to stored procedure must have name as well a types\\ ``", "r5 = java lang throwable r4", "throw r5", "if $ r2 ! = null goto label1", "label specialinvoke r0 declare parameter r1", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework jdbc support incrementer abstract identity column max value incrementer r0", "r1 delete specific value = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "label r5 = r0 get meta data", "if r5 == null goto label4", "$ z0 = r5 support batch update", "if $ z0 == 0 goto label3", "$ r2 = org springframework jdbc support jdbc utils logger", "$ r2 debug \\ `` jdbc driver support batch updates\\ ``", "label return 1", "if $ z0 == 0 goto label3", "label $ r1 = org springframework jdbc support jdbc utils logger", "$ r1 debug \\ `` jdbc driver do not support batch updates\\ ``", "label goto label6", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = org springframework util collection utils be empty r0", "if $ z0 == 0 goto label1", "return null", "if $ z0 == 0 goto label1", "label $ z1 = org springframework util collection utils have unique object r0", "if $ z1 ! = 0 goto label2", "r4 = new org springframework dao incorrect result size data access exception", "$ i0 = r0 size", "specialinvoke r4 < init > 1 $ i0", "r5 = java lang throwable r4", "throw r5", "if $ z1 ! = 0 goto label2", "label $ r1 = r0 iterator", "$ r2 = $ r1 next", "return $ r2"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = org springframework dao support persistence exception translation interceptor r0", "r1 always translate = z0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org springframework jca cci connection connection spec connection factory adapter r0", "$ r2 = r3 thread bound spec", "$ r2 set r1", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = class \\ `` ljavax resource cci connection \\ ``", "$ r3 = $ r2 get class loader", "$ r4 = newarray java lang class [ 1 ]", "$ r4 [ 0 ] = class \\ `` ljavax resource cci connection \\ ``", "r8 = new org springframework jca cci connection single connection factory $ close suppress invocation handler", "specialinvoke r8 < init > r1 null", "r9 = java lang reflect invocation handler r8", "$ r6 = java lang reflect proxy new proxy instance $ r3 $ r4 r9", "$ r7 = javax resource cci connection $ r6", "return $ r7"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework jca cci core support cci dao support r0", "$ r1 = r4 cci template", "if $ r1 == null goto label1", "r5 = org springframework jca cci core support cci dao support r0", "$ r2 = r5 cci template", "$ r3 = $ r2 get connection factory", "goto label2", "label return $ r3", "if $ r1 == null goto label1", "label $ r3 = null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework jca context spring context resource adapter r0", "$ r1 = r4 logger", "$ r1 debug \\ `` stop spring context resource adapter\\ ``", "r5 = org springframework jca context spring context resource adapter r0", "$ r2 = r5 application context", "if $ r2 == null goto label1", "r6 = org springframework jca context spring context resource adapter r0", "$ r3 = r6 application context", "$ r3 close", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jca endpoint generic message endpoint manager r0", "$ r1 = r2 message endpoint factory", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework jca work delegate work r0", "$ r1 = r2 delegate", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r10 = new org springframework transaction interceptor transaction attribute editor", "specialinvoke r10 < init >", "r3 = r1 property name", "label $ z0 = r3 have more element", "if $ z0 == 0 goto label2", "$ r8 = r3 next element", "r4 = java lang string $ r8", "r5 = r1 get property r4", "r10 set a text r5", "$ r9 = r10 get value", "r6 = org springframework transaction interceptor transaction attribute $ r9", "r11 = org springframework transaction interceptor name match transaction attribute source r0", "r11 add transactional method r4 r6", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [], [17], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework transaction jta jta transaction manager r0", "r2 transaction manager = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org springframework transaction jta jta transaction manager r0", "r2 transaction manager name = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "org springframework transaction support transaction synchronization utils trigger flush", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r2 = org springframework transaction reactive transaction synchronization manager r0", "$ r1 = r2 transaction context", "$ r1 set actual transaction active z0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = r1 be complete", "if $ z0 == 0 goto label1", "r4 = new org springframework transaction illegal transaction state exception", "specialinvoke r4 < init > \\ `` transaction be already complete - do not call commit or rollback more than once per transaction\\ ``", "r5 = java lang throwable r4", "throw r5", "if $ z0 == 0 goto label1", "label r2 = org springframework transaction support default transaction status r1", "r6 = org springframework transaction support abstract platform transaction manager r0", "specialinvoke r6 process rollback r2 0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = new org springframework transaction transaction suspension not support exception", "r10 = new java lang string builder", "specialinvoke r10 < init >", "$ r4 = r10 append \\ `` transaction manager [ \\ ``", "$ r5 = r0 get class", "$ r6 = $ r5 get name", "$ r7 = $ r4 append $ r6", "$ r8 = $ r7 append \\ `` ] do not support transaction suspension\\ ``", "$ r9 = $ r8 to string", "specialinvoke r11 < init > $ r9", "r12 = java lang throwable r11", "throw r12"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "$ r1 = org springframework transaction support default transaction definition constant", "$ r2 = $ r1 get value \\ `` isolation_\\ ``", "$ r3 = java lang integer value of i0", "$ z0 = $ r2 contain $ r3", "if $ z0 ! = 0 goto label1", "r5 = new java lang illegal argument exception", "specialinvoke r5 < init > \\ `` only value of isolation constant allowed\\ ``", "throw r5", "if $ z0 ! = 0 goto label1", "label r6 = org springframework transaction support default transaction definition r0", "r6 isolation level = i0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r4 = org springframework transaction support default transaction status r0", "$ r1 = r4 transaction", "$ z0 = $ r1 instanceof org springframework transaction support smart transaction object", "if $ z0 == 0 goto label1", "r5 = org springframework transaction support default transaction status r0", "$ r2 = r5 transaction", "$ r3 = org springframework transaction support smart transaction object $ r2", "$ z1 = $ r3 be rollback only", "if $ z1 == 0 goto label1", "$ z2 = 1", "goto label2", "label return $ z2", "if $ z1 == 0 goto label1", "label $ z2 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework transaction support resource holder support r0", "$ z0 = r1 rollback only", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org springframework transaction support resource holder support r0", "$ r1 = r2 deadline", "if $ r1 == null goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ r1 == null goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = org springframework transaction support resource holder support r0", "r1 clear", "r2 = org springframework transaction support resource holder support r0", "r2 reference count = 0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = net schmizz concurrent promise r0", "$ r1 = r2 lock", "$ r1 unlock", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = net schmizz sshj common buffer r0", "r2 ensure available 1", "r3 = net schmizz sshj common buffer r0", "$ r1 = r3 data", "r4 = net schmizz sshj common buffer r0", "$ i0 = r4 rpos", "$ i1 = $ i0 + 1", "r5 = net schmizz sshj common buffer r0", "r5 rpos = $ i1", "$ b2 = $ r1 [ $ i0 ]", "return $ b2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = lengthof r1", "r3 = net schmizz sshj common buffer r0", "$ r2 = r3 put byte r1 0 $ i0", "return $ r2"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r2 = net schmizz sshj s s h client r0", "$ r1 = r2 remote charset", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org stringtemplate v4 compiler compiler r0", "r3 = r4 compile null r1 null r2 null", "r3 have formal args = 0", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r9 = null", "r11 = org stringtemplate v4 st r0", "$ r2 = r11 impl", "$ r3 = $ r2 formal argument", "if $ r3 == null goto label1", "r12 = org stringtemplate v4 st r0", "$ r6 = r12 impl", "$ r7 = $ r6 formal argument", "$ r8 = $ r7 get r1", "r9 = org stringtemplate v4 compiler formal argument $ r8", "label if r9 == null goto label3", "r13 = org stringtemplate v4 st r0", "$ r4 = r13 local", "$ i0 = r9 index", "r10 = $ r4 [ $ i0 ]", "$ r5 = org stringtemplate v4 st empty_attr", "if r10 ! = $ r5 goto label2", "r10 = null", "label return r10", "label if r9 == null goto label3", "label return null"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "return null"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r9 = com clearspring analytics stream cardinality linear count r0", "r2 = r9 map", "i0 = lengthof r2", "i4 = 0", "label if i4 > = i0 goto label4", "b1 = r2 [ i4 ]", "r3 = java lang integer to binary string b1", "i5 = 0", "label $ i2 = r3 length", "$ i3 = 8 - $ i2", "if i5 > = $ i3 goto label3", "r8 append 48", "i5 = i5 + 1", "goto label2", "if i5 > = $ i3 goto label3", "label r8 append r3", "i4 = i4 + 1", "goto label1", "label if i4 > = i0 goto label4", "label $ r5 = r8 to string", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [], [22], [23], []]}
{"nodes": ["$ r0 = io swagger v3 core util primitive type custom exclude class", "return $ r0"], "adj": [[1], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = io swagger v3 core util reflection utils get repeatable annotation array r0 r1", "if r2 == null goto label1", "$ i0 = lengthof r2", "if $ i0 ! = 0 goto label2", "label return null", "if $ i0 ! = 0 goto label2", "label $ r3 = java util array a list r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model info contact r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium file schema r0", "$ r1 = r2 format", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium schema r0", "$ r1 = r2 exclusive minimum", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium schema r0", "$ r1 = r2 max length", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium schema r0", "$ r1 = r2 pattern", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium schema r0", "$ r1 = r2 additional property", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium schema r0", "$ r1 = r2 xml", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium u u i d schema r0", "$ r1 = r2 type", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium xml r0", "$ r1 = r2 namespace", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model medium xml r0", "$ r1 = r2 prefix", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model operation r0", "$ r1 = r2 external doc", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model parameter cookie parameter r0", "$ r1 = r2 in", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model responses api response r0", "$ r1 = r2 $ ref", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model security o auth flow r0", "$ r1 = r2 authorization url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model security o auth flow r0", "$ r1 = r2 client credential", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = io swagger v3 oas model server server r0", "$ r1 = r2 url", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r1 put int 3", "r18 = com tdunning math stats array digest r0", "$ d0 = r18 compression", "r1 put double $ d0", "r19 = com tdunning math stats array digest r0", "$ i0 = r19 page size", "r1 put int $ i0", "r20 = com tdunning math stats array digest r0", "$ i1 = r20 centroid count", "r1 put int $ i1", "r21 = com tdunning math stats array digest r0", "$ r6 = r21 data", "r14 = $ r6 iterator", "label $ z0 = r14 have next", "if $ z0 == 0 goto label4", "$ r11 = r14 next", "r15 = com tdunning math stats array digest $ page $ r11", "i5 = 0", "label $ i4 = r15 active", "if i5 > = $ i4 goto label3", "$ r12 = r15 centroid", "$ d1 = $ r12 [ i5 ]", "r1 put double $ d1", "i5 = i5 + 1", "goto label2", "if i5 > = $ i4 goto label3", "label goto label1", "if $ z0 == 0 goto label4", "label r22 = com tdunning math stats array digest r0", "$ r7 = r22 data", "r16 = $ r7 iterator", "label $ z1 = r16 have next", "if $ z1 == 0 goto label8", "$ r8 = r16 next", "r17 = com tdunning math stats array digest $ page $ r8", "i6 = 0", "label $ i2 = r17 active", "if i6 > = $ i2 goto label7", "$ r9 = r17 count", "$ i3 = $ r9 [ i6 ]", "r1 put int $ i3", "i6 = i6 + 1", "goto label6", "if i6 > = $ i2 goto label7", "label goto label5", "if $ z1 == 0 goto label8", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [], [46], [47], [48], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r2 = com tdunning math stats int a v l tree r0", "$ r1 = r2 leave", "$ i1 = $ r1 [ i0 ]", "return $ i1"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["d0 = @ parameter0", "$ r0 = new com tdunning math stats array digest", "specialinvoke $ r0 < init > 32 d0", "return $ r0"], "adj": [[1], [2], [3], []]}
{"nodes": ["z0 = @ parameter0", "r0 = @ parameter1", "if z0 ! = 0 goto label1", "$ r1 = java lang boolean value of z0", "$ r2 = java lang boolean true", "org testng assert fail not equals $ r1 $ r2 r0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "$ r3 = new java lang assertion error", "specialinvoke $ r3 < init > r0", "$ r3 init cause r1", "throw $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "r0 = @ parameter2", "$ r1 = java lang boolean value of z0", "$ r2 = java lang boolean value of z1", "org testng assert assert equal $ r1 $ r2 r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "r0 = @ parameter2", "$ r1 = java lang boolean value of z0", "$ r2 = java lang boolean value of z1", "org testng assert assert equal $ r1 $ r2 r0", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ parameter0", "org testng assert assert null r0 null", "return"], "adj": [[1], [2], []]}
{"nodes": ["z0 = @ parameter0", "z1 = @ parameter1", "org testng assert assert equal z0 z1 null", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r6 = org testng internal test method worker r0", "$ r1 = r6 m_method instance", "$ i0 = $ r1 size", "if $ i0 < = 0 goto label1", "r7 = org testng internal test method worker r0", "$ r2 = r7 m_method instance", "$ r3 = $ r2 get 0", "$ r4 = org testng i method instance $ r3", "$ r5 = $ r4 get method", "$ i1 = $ r5 get priority", "goto label2", "label return $ i1", "if $ i0 < = 0 goto label1", "label $ i1 = 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], []]}
{"nodes": ["r0 = @ parameter0", "$ z0 = r0 be before suite configuration", "if $ z0 == 0 goto label01", "return \\ `` @ before suite\\ ``", "if $ z0 == 0 goto label01", "label $ z1 = r0 be before test configuration", "if $ z1 == 0 goto label02", "return \\ `` @ before test\\ ``", "if $ z1 == 0 goto label02", "label $ z2 = r0 be before class configuration", "if $ z2 == 0 goto label03", "return \\ `` @ before class\\ ``", "if $ z2 == 0 goto label03", "label $ z3 = r0 be before group configuration", "if $ z3 == 0 goto label04", "return \\ `` @ before groups\\ ``", "if $ z3 == 0 goto label04", "label $ z4 = r0 be before method configuration", "if $ z4 == 0 goto label05", "return \\ `` @ before method\\ ``", "if $ z4 == 0 goto label05", "label $ z5 = r0 be after method configuration", "if $ z5 == 0 goto label06", "return \\ `` @ after method\\ ``", "if $ z5 == 0 goto label06", "label $ z6 = r0 be after group configuration", "if $ z6 == 0 goto label07", "return \\ `` @ after groups\\ ``", "if $ z6 == 0 goto label07", "label $ z7 = r0 be after class configuration", "if $ z7 == 0 goto label08", "return \\ `` @ after class\\ ``", "if $ z7 == 0 goto label08", "label $ z8 = r0 be after test configuration", "if $ z8 == 0 goto label09", "return \\ `` @ after test\\ ``", "if $ z8 == 0 goto label09", "label $ z9 = r0 be after suite configuration", "if $ z9 == 0 goto label10", "return \\ `` @ after suite\\ ``", "if $ z9 == 0 goto label10", "label return \\ `` \\ ``"], "adj": [[1], [2], [3], [], [5], [6], [7], [], [9], [10], [11], [], [13], [14], [15], [], [17], [18], [19], [], [21], [22], [23], [], [25], [26], [27], [], [29], [30], [31], [], [33], [34], [35], [], [37], [38], [39], [], [41], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "$ i0 = org testng log4testng logger trace", "r3 = org testng log4testng logger r0", "specialinvoke r3 log $ i0 r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ i0 = org testng log4testng logger debug", "r2 = org testng log4testng logger r0", "specialinvoke r2 log $ i0 r1 null", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "z0 = @ parameter1", "$ r1 = org testng reporter get current test result", "org testng reporter log r0 $ r1", "if z0 == 0 goto label1", "$ r2 = java lang system out", "$ r2 println r0", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org testng suite runner r0", "$ r2 = r4 xml suite", "$ r3 = $ r2 get parameter r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ z0 = org testng internal utils be string not empty r1", "if $ z0 == 0 goto label1", "r2 = org testng test n g r0", "r2 m_output dir = r1", "label return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["return 0"], "adj": [[]]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org testng test n g ant task r0", "r2 m_working dir = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r21 = new org testng internal abstract parallel worker $ argument $ builder", "specialinvoke r21 < init >", "r22 = org testng test runner r0", "$ r4 = r22 m_class method map", "$ r5 = r21 class method map $ r4", "r23 = org testng test runner r0", "$ r6 = r23 m_group method", "$ r7 = $ r5 config method $ r6", "r24 = org testng test runner r0", "$ r8 = r24 m_annotation finder", "$ r9 = $ r7 finder $ r8", "r25 = org testng test runner r0", "$ r10 = r25 m_invoker", "$ r11 = $ r9 invoker $ r10", "$ r12 = $ r11 method r1", "$ r13 = $ r12 test context r0", "r26 = org testng test runner r0", "$ r14 = r26 m_class listener", "$ r15 = $ r14 value", "$ r16 = $ r13 listener $ r15", "r2 = $ r16 build", "r27 = org testng test runner r0", "$ r17 = r27 m_xml test", "$ r18 = $ r17 get parallel", "$ r19 = org testng internal abstract parallel worker new worker $ r18", "$ r20 = $ r19 create worker r2", "return $ r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], []]}
{"nodes": ["r0 = @ this", "r3 = org testng xml xml suite r0", "$ r1 = r3 m_verbose", "if $ r1 == null goto label1", "r4 = org testng xml xml suite r0", "$ r2 = r4 m_verbose", "goto label2", "label return $ r2", "if $ r1 == null goto label1", "label $ r2 = org testng test n g default_verbose"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org testng xml xml suite r0", "r2 m_verbose = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r2 = org testng xml xml suite r0", "$ r1 = r2 m_test", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org testng xml xml test r0", "r2 m_xml class = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r20 = new org testng xml xml test", "r21 = org testng xml xml test r0", "$ r6 = r21 get suite", "specialinvoke r20 < init > $ r6", "r22 = org testng xml xml test r0", "$ r7 = r22 get name", "r20 set name $ r7", "r23 = org testng xml xml test r0", "$ r8 = r23 get include group", "r20 set include group $ r8", "r24 = org testng xml xml test r0", "$ r9 = r24 get exclude group", "r20 set exclude group $ r9", "r25 = org testng xml xml test r0", "$ z0 = r25 be j unit", "r20 set j unit $ z0", "r26 = org testng xml xml test r0", "$ r10 = r26 get parallel", "r20 set parallel $ r10", "r27 = org testng xml xml test r0", "$ i0 = r27 get verbose", "r20 set verbose $ i0", "r28 = org testng xml xml test r0", "$ r11 = r28 get local parameter", "r20 set parameter $ r11", "r29 = org testng xml xml test r0", "$ r12 = r29 get xml package", "r20 set xml package $ r12", "r30 = org testng xml xml test r0", "$ r13 = r30 get time out", "specialinvoke r20 set time out $ r13", "r31 = org testng xml xml test r0", "r2 = r31 get meta group", "$ r14 = r2 entry set", "r3 = $ r14 iterator", "label $ z1 = r3 have next", "if $ z1 == 0 goto label2", "$ r15 = r3 next", "r4 = java util map $ entry $ r15", "$ r16 = r4 get key", "$ r17 = java lang string $ r16", "$ r18 = r4 get value", "$ r19 = java util list $ r18", "r20 add meta group $ r17 $ r19", "goto label1", "if $ z1 == 0 goto label2", "label return r20"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [], [47], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "$ r7 = new java text simple date format", "$ r8 = org testng reporter x m l reporter config get timestamp format", "specialinvoke $ r7 < init > $ r8", "r5 = $ r7 format r2", "r6 = $ r7 format r3", "$ l1 = r3 get time", "$ l2 = r2 get time", "l0 = $ l1 - $ l2", "r1 set property \\ `` started-at\\", "r1 set property \\ `` finished-at\\", "$ r11 = java lang long to string l0", "r1 set property \\ `` duration-ms\\", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = org testng xml xml suite r0", "$ r1 = r2 m_is j unit", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "$ r2 = io github qsy7 timeout time constrain method call interrupter_executor_service", "r6 = io github qsy7 timeout time constrain method call r0", "$ r3 = r6 interrupter", "r7 = io github qsy7 timeout time constrain method call r0", "$ r1 = r7 allow execution duration", "$ l0 = $ r1 to nanos", "$ r4 = java util concurrent time unit nanoseconds", "r8 = java lang runnable $ r3", "$ r5 = $ r2 schedule r8 $ l0 $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r2 = gnu trove decorator t byte byte map decorator r0", "$ r1 = r2 _map", "$ i0 = $ r1 size", "return $ i0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "f0 = @ parameter0", "$ b0 = f0 cmpg 0 0f", "if $ b0 > = 0 goto label1", "r7 = new java lang illegal argument exception", "r6 = new java lang string builder", "specialinvoke r6 < init >", "$ r3 = r6 append \\ `` factor must be > = \\ ``", "$ r4 = $ r3 append f0", "$ r5 = $ r4 to string", "specialinvoke r7 < init > $ r5", "throw r7", "if $ b0 > = 0 goto label1", "label r8 = gnu trove impl hash t hash r0", "r8 _auto compaction factor = f0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = gnu trove impl hash t hash iterator r0", "$ i0 = r1 next index", "if $ i0 < 0 goto label1", "$ z0 = 1", "goto label2", "label return $ z0", "if $ i0 < 0 goto label1", "label $ z0 = 0"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], []]}
{"nodes": ["r0 = @ this", "r10 = gnu trove impl hash t hash iterator r0", "$ i0 = r10 _expected size", "r11 = gnu trove impl hash t hash iterator r0", "$ r2 = r11 _hash", "$ i1 = $ r2 size", "if $ i0 == $ i1 goto label1", "r9 = new java util concurrent modification exception", "specialinvoke r9 < init >", "throw r9", "if $ i0 == $ i1 goto label1", "label r12 = gnu trove impl hash t hash iterator r0", "$ r3 = r12 _object_hash", "r1 = $ r3 _set", "r13 = gnu trove impl hash t hash iterator r0", "i2 = r13 _index", "label $ i3 = i2", "i2 = i2 + -1", "if $ i3 < = 0 goto label3", "$ r5 = r1 [ i2 ]", "$ r4 = gnu trove impl hash t object hash free", "if $ r5 == $ r4 goto label2", "$ r7 = r1 [ i2 ]", "$ r6 = gnu trove impl hash t object hash remove", "if $ r7 ! = $ r6 goto label3", "goto label2", "if $ r7 ! = $ r6 goto label3", "label return i2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r2 = new gnu trove map hash t custom hash map $ value view", "r3 = gnu trove map hash t custom hash map r0", "specialinvoke r2 < init > r3", "r4 = java util collection r2", "return r4"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = r1 iterator", "label $ z0 = r2 have next", "if $ z0 == 0 goto label2", "$ r3 = r2 next", "r4 = gnu trove set hash t custom hash set r0", "$ z1 = r4 contain $ r3", "if $ z1 ! = 0 goto label1", "return 0", "if $ z0 == 0 goto label2", "label return 1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], []]}
{"nodes": ["r0 = @ this", "r3 = gnu trove stack array t byte array stack r0", "$ r2 = r3 _list", "r4 = gnu trove stack array t byte array stack r0", "$ r1 = r4 _list", "$ i0 = $ r1 size", "$ i1 = $ i0 - 1", "$ b2 = $ r2 remove at $ i1", "return $ b2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r2 = gnu trove stack array t byte array stack r0", "$ r1 = r2 _list", "$ r1 clear", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "i0 = @ parameter1", "$ z0 = r1 instanceof java lang reflect field", "if $ z0 == 0 goto label1", "$ r3 = java lang reflect field r1", "r4 = com univocity parser annotation header transformer r0", "$ i2 = r4 transform index $ r3 i0", "return $ i2", "if $ z0 == 0 goto label1", "label $ r2 = java lang reflect method r1", "r5 = com univocity parser annotation header transformer r0", "$ i1 = r5 transform index $ r2 i0", "return $ i1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [], [10], [11], [12], [13], []]}
{"nodes": ["r0 = @ this", "r10 = specialinvoke r0 get message", "if r10 ! = null goto label1", "r14 = new java lang string builder", "specialinvoke r14 < init >", "r16 = com univocity parser common abstract exception r0", "$ r7 = r16 get error description", "$ r8 = r14 append $ r7", "$ r9 = $ r8 append \\ `` \\ ``", "$ r11 = $ r9 to string", "goto label2", "label r12 = $ r11", "r17 = com univocity parser common abstract exception r0", "r1 = r17 get detail", "if r1 == null goto label3", "$ z0 = r1 be empty", "if $ z0 ! = 0 goto label3", "r15 = new java lang string builder", "specialinvoke r15 < init >", "$ r3 = r15 append $ r11", "$ r4 = $ r3 append \\ `` \\n internal state when error be throw \\ ``", "$ r5 = $ r4 append r1", "r12 = $ r5 to string", "label r18 = com univocity parser common abstract exception r0", "r13 = r18 update message r12", "return r13", "if r10 ! = null goto label1", "label $ r11 = r10"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [], [27], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "return r1"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ r1 = r0 trim", "$ r2 = $ r1 to lower case", "return $ r2"], "adj": [[1], [2], [], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = com univocity parser common common parser setting r0", "r1 number of record to read = l0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r7 = com univocity parser common common parser setting r0", "i0 = r7 get max char per column", "if i0 == -1 goto label1", "r5 = new com univocity parser common input default char appender", "r8 = com univocity parser common common parser setting r0", "$ r4 = r8 get null value", "r9 = com univocity parser common common parser setting r0", "$ i2 = r9 get whitespace range start", "specialinvoke r5 < init > i0 $ r4 $ i2", "r10 = com univocity parser common input char appender r5", "return r10", "if i0 == -1 goto label1", "label r6 = new com univocity parser common input expand char appender", "r11 = com univocity parser common common parser setting r0", "$ r2 = r11 get null value", "r12 = com univocity parser common common parser setting r0", "$ i1 = r12 get whitespace range start", "specialinvoke r6 < init > $ r2 $ i1", "r13 = com univocity parser common input char appender r6", "return r13"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [], [13], [14], [15], [16], [17], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common common parser setting r0", "$ z0 = r1 line separator detection enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new com univocity parser common field field enum selector", "specialinvoke r4 < init >", "r5 = com univocity parser common common setting r0", "r6 = com univocity parser common field field set r4", "$ r3 = specialinvoke r5 set field set r6 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = new com univocity parser common field field index selector", "specialinvoke r4 < init >", "r5 = com univocity parser common common setting r0", "r6 = com univocity parser common field field set r4", "$ r3 = specialinvoke r5 set field set r6 r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common common setting r0", "$ z0 = r1 auto configuration enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com univocity parser common common parser setting r0", "$ r1 = r2 clone", "r3 = com univocity parser common common setting $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = com univocity parser common data process exception r0", "r1 column index = i0", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "if r1 ! = null goto label1", "return null", "if r1 ! = null goto label1", "label r8 = com univocity parser common field exclude field enum selector r0", "$ r2 = r8 name", "r9 = com univocity parser common field exclude field enum selector r0", "$ r3 = r9 get", "$ r4 = com univocity parser common argument utils to array $ r3", "$ r2 set $ r4", "r10 = com univocity parser common field exclude field enum selector r0", "$ r6 = r10 name", "$ r7 = $ r6 get field index r1", "return $ r7"], "adj": [[1], [2], [3], [], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], []]}
{"nodes": ["r0 = @ this", "i0 = @ parameter0", "r1 = @ parameter1", "r9 = com univocity parser common field field conversion map r0", "$ r3 = r9 validation by index", "$ r4 = java lang integer value of i0", "$ r5 = $ r3 get $ r4", "r2 = java util list $ r5", "if r2 == null goto label2", "i2 = 0", "label $ i1 = r2 size", "if i2 > = $ i1 goto label2", "$ r6 = r2 get i2", "$ r7 = com univocity parser conversion validate conversion $ r6", "$ r7 execute r1", "i2 = i2 + 1", "goto label1", "if i2 > = $ i1 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = com univocity parser common field field enum selector r0", "$ r2 = r4 name", "$ r3 = r1 to string", "$ i0 = $ r2 get field index $ r3", "return $ i0"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r33 = com univocity parser common input concurrent concurrent char loader r0", "$ r2 = r33 active execution", "if $ r2 ! = null goto label13", "r34 = com univocity parser common input concurrent concurrent char loader r0", "$ z0 = r34 finish", "if $ z0 ! = 0 goto label13", "i1 = -1", "label r35 = com univocity parser common input concurrent concurrent char loader r0", "i1 = specialinvoke r35 read bucket", "if i1 < 0 goto label02", "if i1 > 4 goto label02", "r36 = com univocity parser common input concurrent concurrent char loader r0", "i1 = specialinvoke r36 read bucket", "label goto label05", "label if i1 == -1 goto label06", "r32 = new java lang thread", "specialinvoke r32 < init > r0 \\ `` un vocity-parsers input read thread\\ ``", "r38 = com univocity parser common input concurrent concurrent char loader r0", "r38 active execution = r32", "r39 = com univocity parser common input concurrent concurrent char loader r0", "$ r18 = r39 active execution", "$ r18 start", "goto label13", "label r46 = com univocity parser common input concurrent concurrent char loader r0", "$ z1 = r46 finish", "if $ z1 == 0 goto label15", "r47 = com univocity parser common input concurrent concurrent char loader r0", "$ r13 = r47 bucket", "$ i0 = $ r13 size", "if $ i0 > 1 goto label15", "r48 = com univocity parser common input concurrent concurrent char loader r0", "$ r14 = r48 end", "label return $ r14", "if $ i0 > 1 goto label15", "label r49 = com univocity parser common input concurrent concurrent char loader r0", "$ r3 = r49 current bucket", "if $ r3 == null goto label16", "r50 = com univocity parser common input concurrent concurrent char loader r0", "$ r12 = r50 instance", "r51 = com univocity parser common input concurrent concurrent char loader r0", "$ r11 = r51 current bucket", "$ r12 release $ r11", "label r52 = com univocity parser common input concurrent concurrent char loader r0", "$ r4 = r52 bucket", "r30 = $ r4 take", "r53 = com univocity parser common input concurrent concurrent char loader r0", "$ r5 = r53 end", "if r30 ! = $ r5 goto label18", "r54 = com univocity parser common input concurrent concurrent char loader r0", "r54 finish = 1", "r55 = com univocity parser common input concurrent concurrent char loader r0", "$ r10 = r55 end", "label return $ r10", "if r30 ! = $ r5 goto label18", "label $ r6 = com univocity parser common input concurrent entry r30", "r56 = com univocity parser common input concurrent concurrent char loader r0", "r56 current bucket = $ r6", "r57 = com univocity parser common input concurrent concurrent char loader r0", "$ r7 = r57 current bucket", "$ r8 = $ r7 get", "$ r9 = com univocity parser common input concurrent char bucket $ r8", "label return $ r9", "label if i1 == -1 goto label06", "label r40 = com univocity parser common input concurrent concurrent char loader r0", "r40 finish = 1", "label r41 = com univocity parser common input concurrent concurrent char loader r0", "$ r16 = r41 bucket", "r42 = com univocity parser common input concurrent concurrent char loader r0", "$ r15 = r42 end", "$ r16 put $ r15", "label r43 = com univocity parser common input concurrent concurrent char loader r0", "r43 stop reading"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], [42], [43], [44], [45], [46], [47], [48], [49], [50], [51], [52], [53], [54], [55], [56], [57], [58], [59], [60], [61], [62], [63], [64], [65], [66], [67], [68], [69], [70], [71], [72], []]}
{"nodes": ["r0 = @ this", "r4 = com univocity parser common input lookahead char input reader r0", "$ i1 = r4 start", "r5 = com univocity parser common input lookahead char input reader r0", "$ i0 = r5 length", "if $ i1 < $ i0 goto label1", "return \\ `` \\ ``", "if $ i1 < $ i0 goto label1", "label r3 = new java lang string", "r6 = com univocity parser common input lookahead char input reader r0", "$ r2 = r6 lookahead", "r7 = com univocity parser common input lookahead char input reader r0", "$ i3 = r7 start", "r8 = com univocity parser common input lookahead char input reader r0", "$ i2 = r8 length", "specialinvoke r3 < init > $ r2 $ i3 $ i2", "return r3"], "adj": [[1], [2], [3], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], []]}
{"nodes": ["r0 = @ this", "r2 = com univocity parser common processor master detail record r0", "$ r1 = r2 detail row", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r5 = com univocity parser common processor row writer processor switch r0", "$ i2 = r5 minimum row length", "if $ i2 ! = -2147483648 goto label4", "r6 = com univocity parser common processor row writer processor switch r0", "r6 minimum row length = 0", "r7 = com univocity parser common processor row writer processor switch r0", "$ r2 = r7 get header", "if $ r2 == null goto label1", "r8 = com univocity parser common processor row writer processor switch r0", "$ r4 = r8 get header", "$ i6 = lengthof $ r4", "r9 = com univocity parser common processor row writer processor switch r0", "r9 minimum row length = $ i6", "label r10 = com univocity parser common processor row writer processor switch r0", "$ r3 = r10 get index", "if $ r3 == null goto label4", "r11 = com univocity parser common processor row writer processor switch r0", "r1 = r11 get index", "i0 = lengthof r1", "i7 = 0", "label if i7 > = i0 goto label4", "i1 = r1 [ i7 ]", "$ i4 = i1 + 1", "r12 = com univocity parser common processor row writer processor switch r0", "$ i3 = r12 minimum row length", "if $ i4 < = $ i3 goto label3", "$ i5 = i1 + 1", "r13 = com univocity parser common processor row writer processor switch r0", "r13 minimum row length = $ i5", "label i7 = i7 + 1", "goto label2", "label if i7 > = i0 goto label4", "label r14 = com univocity parser common processor row writer processor switch r0", "$ i8 = r14 minimum row length", "return $ i8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com univocity parser common routine abstract routine r0", "r2 parser setting = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "return"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser common routine input dimension r0", "$ l0 = r1 row", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com univocity parser common text parse exception r0", "$ i0 = r2 error content length", "if $ i0 ! = 0 goto label1", "return null", "if $ i0 ! = 0 goto label1", "label r3 = com univocity parser common text parse exception r0", "$ r1 = r3 content", "return $ r1"], "adj": [[1], [2], [3], [4], [], [6], [7], [8], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = com univocity parser conversion big decimal conversion r0", "$ r2 = r3 from string r1", "return $ r2"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang byte value of r1", "return $ r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = java lang string r1", "r4 = com univocity parser conversion trim conversion r0", "$ r3 = r4 execute $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser csv csv format r0", "$ c0 = r1 delimiter", "return $ c0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "if z0 == 0 goto label1", "r1 = com univocity parser csv csv parser setting r0", "r1 parse unescaped quote = 1", "label r2 = com univocity parser csv csv parser setting r0", "r2 parse unescaped quote until delimiter = z0", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser csv csv parser setting r0", "$ z0 = r1 delimiter detection enable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = com univocity parser csv csv parser setting r0", "r2 unescaped quote handle = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser csv csv parser setting r0", "$ z0 = r1 keep quote", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser csv csv parser setting r0", "$ z0 = r1 ignore lead whitespaces in quote", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = com univocity parser csv csv writer setting r1", "r3 = com univocity parser csv csv writer r0", "r3 initialize $ r2", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = com univocity parser tsv tsv format r0", "$ c0 = r1 escape char", "return $ c0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = com univocity parser tsv tsv parser setting r0", "$ r1 = r2 create default format", "r3 = com univocity parser common format $ r1", "return r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = io vavr collection array of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = bit set $ lambda_of all_953fd58f_1__5 bootstrap $", "$ r3 = bit set $ lambda_of all_953fd58f_2__7 bootstrap $", "$ r4 = io vavr collection bit set with relation $ r2 $ r3", "$ r5 = io vavr collection iterator of all r0", "r7 = java lang iterable $ r5", "$ r6 = $ r4 of all r7", "return $ r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = io vavr collection link hash set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = io vavr collection link hash set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = io vavr collection tree set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection iterator of all r0", "r4 = java lang iterable $ r2", "$ r3 = io vavr collection tree set of all r4", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ parameter0", "java util object require non null r0 \\ `` element be null\\ ``", "$ r2 = io vavr collection bit map trie of all r0", "$ r3 = io vavr collection vector of all $ r2", "return $ r3"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = org apache maven wagon event wagon event r0", "$ l0 = r1 timestamp", "return $ l0"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty websocket api upgrade request r0", "$ r1 = r2 session", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty websocket api upgrade response r0", "$ r1 = r2 get header \\ `` sec- web socket- protocol\\ ``", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org eclipse jetty websocket api upgrade response r0", "$ r1 = r2 extension", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax enterprise inject spi annotate constructor r0", "$ r1 = org jboss weld util reflection format format annotate constructor r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = javax enterprise inject spi annotate type r0", "$ r1 = org jboss weld util reflection format format annotate type r2", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org jboss weld bean abstract bean r0", "r2 producer = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r3 = @ parameter2", "r7 = new org jboss weld event event metadata impl", "specialinvoke r7 < init > r1 null r3", "r8 = org jboss weld bootstrap bean deployment module r0", "$ r6 = r8 notifier", "r9 = javax enterprise inject spi event metadata r7", "$ r6 fire event r1 r2 r9 r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], []]}
{"nodes": ["r0 = @ this", "r1 = org jboss weld config system property configuration r0", "$ z0 = r1 xml validation disable", "return $ z0"], "adj": [[1], [2], [3], []]}
{"nodes": ["$ r3 = org jboss weld context cache request scoped cache cache", "$ r4 = $ r3 get", "r0 = java util list $ r4", "if r0 == null goto label2", "$ r5 = org jboss weld context cache request scoped cache cache", "$ r5 remove", "r1 = r0 iterator", "label $ z0 = r1 have next", "if $ z0 == 0 goto label2", "$ r6 = r1 next", "r2 = org jboss weld context cache request scoped item $ r6", "r2 invalidate", "goto label1", "if $ z0 == 0 goto label2", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [], [14], []]}
{"nodes": ["$ z0 = org jboss weld context cache request scoped cache be active", "if $ z0 == 0 goto label1", "org jboss weld contexts cache request scoped cache end request", "org jboss weld contexts cache request scoped cache begin request", "label return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r11 = org jboss weld contexts creational context impl r0", "$ r6 = r11 dependent instance", "entermonitor $ r6", "label r12 = org jboss weld contexts creational context impl r0", "$ r7 = r12 dependent instance", "r3 = $ r7 iterator", "label $ z0 = r3 have next", "if $ z0 == 0 goto label5", "$ r8 = r3 next", "r4 = org jboss weld context api contextual instance $ r8", "$ r9 = r4 get instance", "if $ r9 ! = r1 goto label4", "r3 remove", "org jboss weld contexts creational context impl destroy r4", "exitmonitor $ r6", "label return 1", "if $ r9 ! = r1 goto label4", "label goto label2", "if $ z0 == 0 goto label5", "label exitmonitor $ r6", "label goto label9", "label return 0"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = r2 resolve observer method r0 r3", "$ z0 = r4 be metadata required", "if $ z0 == 0 goto label1", "r12 = new org jboss weld event event metadata impl", "specialinvoke r12 < init > r0 null r3", "$ r9 = r1 get service", "$ r10 = $ r9 get class \\ `` lorg jboss weld event current event metadata \\ ``", "r6 = org jboss weld event current event metadata $ r10", "r13 = new org jboss weld event fast event $ fast event with metadata propagation", "r15 = javax enterprise inject spi event metadata r12", "specialinvoke r13 < init > r4 r15 r6 null", "r16 = org jboss weld event fast event r13", "return r16", "if $ z0 == 0 goto label1", "label r14 = new org jboss weld event fast event", "specialinvoke r14 < init > r4", "return r14"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r6 = org jboss weld event observer notifier r0", "$ r2 = r6 resolver", "$ r3 = $ r2 resolve r1 1", "$ r4 = org jboss weld util reflection reflection cast $ r3", "$ r5 = org jboss weld event resolve observer $ r4", "return $ r5"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r7 = @ parameter2", "$ z0 = r1 be metadata required", "if $ z0 ! = 0 goto label1", "r7 = null", "label $ r3 = r1 get immediate sync observer", "$ r4 = org jboss weld event observer notifier $ observer exception handler immediate_handler", "r8 = org jboss weld event observer notifier r0", "r8 notify sync observer $ r3 r2 r7 $ r4", "$ r5 = r1 get transaction observer", "$ r6 = org jboss weld event observer notifier $ observer exception handler immediate_handler", "r9 = org jboss weld event observer notifier r0", "r9 notify transaction observer $ r5 r2 r7 $ r6", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "return"], "adj": [[1], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "org jboss weld util precondition check argument not null r1 \\ `` event\\ ``", "$ r5 = r1 get class", "r3 = org jboss weld util type get canonical type $ r5", "r8 = new org jboss weld event event metadata impl", "specialinvoke r8 < init > r3 null r2", "r9 = org jboss weld manager bean manager impl r0", "$ r7 = r9 global strict observer notifier", "r10 = javax enterprise inject spi event metadata r8", "$ r7 fire event r1 r10 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "r2 = org jboss weld manager bean manager impl r0", "$ r1 = r2 bean resolver", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r8 = new java lang string builder", "specialinvoke r8 < init >", "r9 = org jboss weld metadata cache annotation model r0", "$ z0 = r9 be valid", "if $ z0 == 0 goto label1", "$ r7 = \\ `` valid\\ ``", "goto label2", "label $ r2 = r8 append $ r7", "$ r3 = $ r2 append \\ `` annotation model for \\ ``", "r10 = org jboss weld metadata cache annotation model r0", "$ r4 = r10 get raw type", "$ r5 = $ r3 append $ r4", "$ r6 = $ r5 to string", "return $ r6", "if $ z0 == 0 goto label1", "label $ r7 = \\ `` invalid\\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [], [16], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r5 = org jboss weld metadata cache meta annotation store r0", "$ r2 = r5 qualifier", "$ r3 = $ r2 get cast value r1", "$ r4 = org jboss weld metadata cache qualifier model $ r3", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r1 = new org jboss weld util collection immutable set $ builder impl", "specialinvoke r1 < init > null", "r2 = org jboss weld util collection immutable set $ builder r1", "return r2"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ parameter0", "if r0 ! = null goto label1", "return null", "if r0 ! = null goto label1", "label $ z0 = r0 be empty", "if $ z0 == 0 goto label2", "return \\ `` empty collection \\ ``", "if $ z0 == 0 goto label2", "label $ r3 = new java lang string builder", "specialinvoke $ r3 < init > \\ `` \\n - \\ ``", "r2 = r0 iterator", "label $ z2 = r2 have next", "if $ z2 == 0 goto label4", "$ r5 = r2 next", "$ r3 append $ r5", "$ z1 = r2 have next", "if $ z1 == 0 goto label3", "$ r3 append \\", "goto label3", "if $ z2 == 0 goto label4", "label $ r4 = $ r3 to string", "return $ r4"], "adj": [[1], [2], [], [4], [5], [6], [], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [], [20], [21], []]}
{"nodes": ["r0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = r0 get observe qualifier", "$ r4 = r0 get bean class", "if $ r4 ! = null goto label1", "$ r21 = org jboss weld log event logger log", "$ r22 = $ r21 observer method method return null \\ `` get bean class\\", "r23 = java lang throwable $ r22", "throw r23", "if $ r4 ! = null goto label1", "label $ r5 = r0 get observe type", "if $ r5 ! = null goto label2", "$ r19 = org jboss weld log event logger log", "$ r20 = $ r19 observer method method return null \\ `` get observed type\\", "r24 = java lang throwable $ r20", "throw r24", "if $ r5 ! = null goto label2", "label org jboss weld util binding validate qualifier r3 r1 r0 \\ `` observer method get observe qualifiers\\ ``", "$ r6 = r0 get reception", "if $ r6 ! = null goto label3", "$ r17 = org jboss weld log event logger log", "$ r18 = $ r17 observer method method return null \\ `` get reception\\", "r25 = java lang throwable $ r18", "throw r25", "if $ r6 ! = null goto label3", "label $ r7 = r0 get transaction phase", "if $ r7 ! = null goto label4", "$ r15 = org jboss weld log event logger log", "$ r16 = $ r15 observer method method return null \\ `` get transaction phase\\", "r26 = java lang throwable $ r16", "throw r26", "if $ r7 ! = null goto label4", "label if r2 == null goto label5", "$ r11 = r0 get bean class", "$ r12 = r2 get bean class", "$ z2 = $ r11 equal $ r12", "if $ z2 ! = 0 goto label5", "$ r13 = org jboss weld log event logger log", "$ r14 = $ r13 bean class mismatch r2 r0", "r27 = java lang throwable $ r14", "throw r27", "if $ z2 ! = 0 goto label5", "label $ z0 = r0 instanceof org jboss weld event synthetic observer method", "if $ z0 ! = 0 goto label6", "$ r8 = r0 get class", "$ z1 = org jboss weld util observer have notify overriden $ r8 r0", "if $ z1 ! = 0 goto label6", "$ r9 = org jboss weld log event logger log", "$ r10 = $ r9 notify method not implement r0", "r28 = java lang throwable $ r10", "throw r28", "if $ z1 ! = 0 goto label6", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [], [11], [12], [13], [14], [15], [16], [], [18], [19], [20], [21], [22], [23], [24], [], [26], [27], [28], [29], [30], [31], [], [33], [34], [35], [36], [37], [38], [39], [40], [41], [], [43], [44], [45], [46], [47], [48], [49], [50], [51], [], [53], []]}
{"nodes": ["r0 = @ parameter0", "if r0 == null goto label1", "$ i0 = r0 length", "if $ i0 ! = 0 goto label2", "label return r0", "if $ i0 ! = 0 goto label2", "label $ i1 = r0 length", "if $ i1 < = 1 goto label3", "$ c2 = r0 char at 1", "$ z0 = java lang character be upper case $ c2", "if $ z0 == 0 goto label3", "$ c3 = r0 char at 0", "$ z1 = java lang character be upper case $ c3", "if $ z1 == 0 goto label3", "return r0", "if $ z1 == 0 goto label3", "label r1 = r0 to char array", "$ c4 = r1 [ 0 ]", "$ c5 = java lang character to low case $ c4", "r1 [ 0 ] = $ c5", "$ r2 = new java lang string", "specialinvoke $ r2 < init > r1", "return $ r2"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [], [16], [17], [18], [19], [20], [21], [22], []]}
{"nodes": ["r0 = @ this", "r4 = @ parameter0", "if r4 ! = null goto label1", "r4 = newarray java lang string [ 0 ]", "label r6 = org jboss weld environment se bean parameter factory r0", "r6 args = r4", "r5 = new java util array list", "$ r2 = java util array a list r4", "specialinvoke r5 < init > $ r2", "$ r3 = java util collection unmodifiable list r5", "r7 = org jboss weld environment se bean parameter factory r0", "r7 args list = $ r3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r1 = @ parameter1", "r3 = org jboss weld environment se weld r0", "$ r2 = r3 add package z0 r1", "r4 = javax enterprise inject se se container initializer $ r2", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r5 = org jboss weld environment se weld r0", "$ r3 = r5 property", "$ r3 put r1 r2", "r6 = org jboss weld environment se weld r0", "return r6"], "adj": [[1], [2], [3], [4], [5], [6], [7], []]}
{"nodes": ["r0 = @ parameter0", "entermonitor class \\ `` lorg jboss weld bootstrap api singleton provider \\ ``", "label $ r3 = org jboss weld bootstrap api singleton provider instance", "if $ r3 ! = null goto label2", "org jboss weld bootstrap api singleton provider instance = r0", "goto label3", "label exitmonitor class \\ `` lorg jboss weld bootstrap api singleton provider \\ ``", "label goto label7", "label return", "if $ r3 ! = null goto label2", "label $ r4 = new java lang runtime exception", "$ r5 = new java lang string builder", "specialinvoke $ r5 < init >", "$ r6 = $ r5 append \\ `` singleton provider be already initialize with \\ ``", "$ r7 = org jboss weld bootstrap api singleton provider instance", "$ r8 = $ r6 append $ r7", "$ r9 = $ r8 to string", "specialinvoke $ r4 < init > $ r9", "throw $ r4"], "adj": [[1], [2], [3], [4], [5], [], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org apache jute record reader r0", "$ r2 = r3 archive", "r1 deserialize $ r2 \\ `` \\ ``", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "$ r2 = org apache zookeeper server datadir cleanup manager $ purge task status start", "r7 = org apache zookeeper server datadir cleanup manager r0", "$ r1 = r7 purge task status", "if $ r2 ! = $ r1 goto label1", "$ r4 = org apache zookeeper server datadir cleanup manager log", "$ r4 info \\ `` shut down purge task \\ ``", "r8 = org apache zookeeper server datadir cleanup manager r0", "$ r5 = r8 timer", "$ r5 cancel", "$ r6 = org apache zookeeper server datadir cleanup manager $ purge task status complete", "r9 = org apache zookeeper server datadir cleanup manager r0", "r9 purge task status = $ r6", "goto label2", "label return", "if $ r2 ! = $ r1 goto label1", "label $ r3 = org apache zookeeper server datadir cleanup manager log", "$ r3 warn \\ `` purge task not start ignore shutdown ! \\ ``"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [], [15], [16], [17], []]}
{"nodes": ["r0 = @ this", "r2 = org apache zookeeper server datadir cleanup manager r0", "$ r1 = r2 snap dir", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["r0 = @ this", "r2 = org apache zookeeper server data node r0", "$ r1 = r2 child", "return $ r1"], "adj": [[1], [2], [3], []]}
{"nodes": ["l0 = @ parameter0", "org apache zookeeper server persistence file txn log pre alloc size = l0", "return"], "adj": [[1], [2], []]}
{"nodes": ["r0 = @ this", "r3 = org apache zookeeper server persistence file txn log r0", "$ r1 = r3 log stream", "if $ r1 == null goto label1", "r4 = org apache zookeeper server persistence file txn log r0", "$ r2 = r4 log stream", "$ r2 flush", "r5 = org apache zookeeper server persistence file txn log r0", "r5 log stream = null", "r6 = org apache zookeeper server persistence file txn log r0", "r6 oa = null", "label return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], []]}
{"nodes": ["r0 = @ parameter0", "l8 = @ parameter1", "l0 = @ parameter2", "$ r1 = r0 get channel", "l1 = $ r1 position", "$ l2 = l1 + 4096l", "$ b3 = $ l2 cmp l8", "if $ b3 < 0 goto label1", "l8 = l8 + l0", "$ r2 = org apache zookeeper server persistence util fill", "$ r2 position 0", "$ r4 = r0 get channel", "$ r6 = org apache zookeeper server persistence util fill", "$ r5 = org apache zookeeper server persistence util fill", "$ i4 = $ r5 remain", "$ l5 = long $ i4", "$ l6 = l8 - $ l5", "$ r4 write $ r6 $ l6", "label return l8"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], []]}
{"nodes": ["r0 = @ this", "r7 = org apache zookeeper server quorum observer zoo keeper server r0", "$ r2 = r7 pending syncs", "$ i0 = $ r2 size", "if $ i0 ! = 0 goto label1", "$ r6 = org apache zookeeper server quorum observer zoo keeper server log", "$ r6 warn \\ `` not expect a sync \\ ``", "return", "if $ i0 ! = 0 goto label1", "label r8 = org apache zookeeper server quorum observer zoo keeper server r0", "$ r3 = r8 pending syncs", "$ r4 = $ r3 remove", "r1 = org apache zookeeper server request $ r4", "r9 = org apache zookeeper server quorum observer zoo keeper server r0", "$ r5 = r9 commit processor", "$ r5 commit r1"], "adj": [[1], [2], [3], [4], [5], [6], [7], [], [9], [10], [11], [12], [13], [14], [15], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "$ r2 = r1 get client port address", "r5 = org apache zookeeper server server config r0", "r5 client port address = $ r2", "$ r3 = r1 get data dir", "r6 = org apache zookeeper server server config r0", "r6 data dir = $ r3", "$ r4 = r1 get data log dir", "r7 = org apache zookeeper server server config r0", "r7 data log dir = $ r4", "$ i0 = r1 get tick time", "r8 = org apache zookeeper server server config r0", "r8 tick time = $ i0", "$ i1 = r1 get max client cnxns", "r9 = org apache zookeeper server server config r0", "r9 max client cnxns = $ i1", "$ i2 = r1 get min session timeout", "r10 = org apache zookeeper server server config r0", "r10 min session timeout = $ i2", "$ i3 = r1 get max session timeout", "r11 = org apache zookeeper server server config r0", "r11 max session timeout = $ i3", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org apache zookeeper server upgrade data node v1 r0", "r2 child = r1", "return"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r2 = org apache zookeeper server z k database r0", "$ r1 = r2 data tree", "$ r1 last processed zxid = l0", "return"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r4 = org apache zookeeper server z k database r0", "$ r2 = r4 data tree", "$ r3 = $ r2 convert long r1", "return $ r3"], "adj": [[1], [2], [3], [4], [5], []]}
{"nodes": ["r0 = @ this", "l0 = @ parameter0", "r1 = @ parameter1", "r2 = @ parameter2", "r3 = @ parameter3", "r4 = @ parameter4", "r6 = org apache zookeeper server z k database r0", "$ r5 = r6 data tree", "$ r5 set watch l0 r1 r2 r3 r4", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], []]}
{"nodes": ["r0 = @ this", "r2 = org apache zookeeper zoo keeper r0", "$ r1 = r2 cnxn", "$ l0 = $ r1 get session id", "return $ l0"], "adj": [[1], [2], [3], [4], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = @ parameter1", "r4 = org apache zookeeper zoo keeper r0", "$ r3 = r4 cnxn", "$ r3 add auth info r1 r2", "return"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r26 = org apache zookeeper zoo keeper r0", "$ r2 = r26 cnxn", "$ r3 = $ r2 get state", "$ z0 = $ r3 be alive", "if $ z0 ! = 0 goto label2", "$ r12 = org apache zookeeper zoo keeper log", "$ z2 = $ r12 be debug enabled", "if $ z2 == 0 goto label1", "$ r13 = org apache zookeeper zoo keeper log", "$ r13 debug \\ `` close call on already close client\\ ``", "label return", "if $ z0 ! = 0 goto label2", "label $ r4 = org apache zookeeper zoo keeper log", "$ z1 = $ r4 be debug enabled", "if $ z1 == 0 goto label3", "$ r7 = org apache zookeeper zoo keeper log", "r24 = new java lang string builder", "specialinvoke r24 < init >", "$ r8 = r24 append \\ `` close session 0x\\ ``", "r27 = org apache zookeeper zoo keeper r0", "$ l0 = r27 get session id", "$ r9 = java lang long to hex string $ l0", "$ r10 = $ r8 append $ r9", "$ r11 = $ r10 to string", "$ r7 debug $ r11", "label r28 = org apache zookeeper zoo keeper r0", "$ r5 = r28 cnxn", "$ r5 close", "label goto label6", "label $ r17 = org apache zookeeper zoo keeper log", "r25 = new java lang string builder", "specialinvoke r25 < init >", "$ r19 = r25 append \\ `` session 0x\\ ``", "r29 = org apache zookeeper zoo keeper r0", "$ l1 = r29 get session id", "$ r20 = java lang long to hex string $ l1", "$ r21 = $ r19 append $ r20", "$ r22 = $ r21 append \\ `` closed\\ ``", "$ r23 = $ r22 to string", "$ r17 info $ r23", "return"], "adj": [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31], [32], [33], [34], [35], [36], [37], [38], [39], [40], [41], []]}
{"nodes": ["r0 = @ this", "r5 = org apache zookeeper zoo keeper r0", "$ r1 = r5 cnxn", "$ r2 = $ r1 send thread", "$ r3 = $ r2 get client cnxn socket", "$ r4 = $ r3 get local socket address", "return $ r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r4 = new java util array list", "r5 = org zeroturnaround exec process executor r0", "$ r2 = r5 builder", "$ r3 = $ r2 command", "specialinvoke r4 < init > $ r3", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "z0 = @ parameter0", "r3 = org zeroturnaround exec process executor r0", "$ r1 = r3 builder", "$ r1 redirect error stream z0", "r4 = org zeroturnaround exec process executor r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r3 = org zeroturnaround exec process executor r0", "$ r2 = r3 listener", "$ r2 remove r1", "r4 = org zeroturnaround exec process executor r0", "return r4"], "adj": [[1], [2], [3], [4], [5], [6], []]}
{"nodes": ["r0 = @ this", "r1 = @ parameter0", "r2 = org zeroturnaround exec process executor r0", "r2 message logger = r1", "r3 = org zeroturnaround exec process executor r0", "return r3"], "adj": [[1], [2], [3], [4], [5], []]}
