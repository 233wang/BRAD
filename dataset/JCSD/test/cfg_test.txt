<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = javax activation activation data flavor r0 <NEXT> r2 human presentable name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = javax activation command map r0 <NEXT> $ r3 = r4 create data content handler r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r9 = javax activation data handler r0 <NEXT> $ r1 = r9 data source <NEXT> if $ r1 == null goto label1 <NEXT> r10 = javax activation data handler r0 <NEXT> $ r5 = specialinvoke r10 get command map <NEXT> r11 = javax activation data handler r0 <NEXT> $ r6 = specialinvoke r11 get base type <NEXT> r12 = javax activation data handler r0 <NEXT> $ r7 = r12 data source <NEXT> $ r8 = $ r5 get all command $ r6 $ r7 <NEXT> return $ r8 <NEXT> if $ r1 == null goto label1 <NEXT> label r13 = javax activation data handler r0 <NEXT> $ r2 = specialinvoke r13 get command map <NEXT> r14 = javax activation data handler r0 <NEXT> $ r3 = specialinvoke r14 get base type <NEXT> $ r4 = $ r2 get all command $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r3 = javax activation file data source r0 <NEXT> $ r1 = r3 _file <NEXT> $ r2 = $ r1 get name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = javax activation mime type r0 <NEXT> $ r1 = r2 parameter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org json j s o n array r0 <NEXT> $ r1 = r2 value <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> label r6 = new org json j s o n stringer <NEXT> specialinvoke r6 < init > <NEXT> r7 = org json j s o n array r0 <NEXT> r7 write to r6 <NEXT> $ r2 = r6 to string <NEXT> label return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label01 <NEXT> $ r13 = org json j s o n object null <NEXT> return $ r13 <NEXT> if r0 ! = null goto label01 <NEXT> label $ z0 = r0 instanceof org json j s o n array <NEXT> if $ z0 ! = 0 goto label02 <NEXT> $ z1 = r0 instanceof org json j s o n object <NEXT> if $ z1 == 0 goto label03 <NEXT> label return r0 <NEXT> if $ z1 == 0 goto label03 <NEXT> label $ r2 = org json j s o n object null <NEXT> $ z2 = r0 equal $ r2 <NEXT> if $ z2 == 0 goto label04 <NEXT> return r0 <NEXT> if $ z2 == 0 goto label04 <NEXT> label $ z3 = r0 instanceof java util collection <NEXT> if $ z3 == 0 goto label06 <NEXT> $ r11 = new org json j s o n array <NEXT> $ r12 = java util collection r0 <NEXT> specialinvoke $ r11 < init > $ r12 <NEXT> label return $ r11 <NEXT> if $ z3 == 0 goto label06 <NEXT> label $ r3 = r0 get class <NEXT> $ z4 = $ r3 be array <NEXT> if $ z4 == 0 goto label08 <NEXT> $ r10 = new org json j s o n array <NEXT> specialinvoke $ r10 < init > r0 <NEXT> label return $ r10 <NEXT> if $ z4 == 0 goto label08 <NEXT> label $ z5 = r0 instanceof java util map <NEXT> if $ z5 == 0 goto label10 <NEXT> $ r8 = new org json j s o n object <NEXT> $ r9 = java util map r0 <NEXT> specialinvoke $ r8 < init > $ r9 <NEXT> label return $ r8 <NEXT> if $ z5 == 0 goto label10 <NEXT> label $ z6 = r0 instanceof java lang boolean <NEXT> if $ z6 ! = 0 goto label11 <NEXT> $ z7 = r0 instanceof java lang byte <NEXT> if $ z7 ! = 0 goto label11 <NEXT> $ z8 = r0 instanceof java lang character <NEXT> if $ z8 ! = 0 goto label11 <NEXT> $ z9 = r0 instanceof java lang double <NEXT> if $ z9 ! = 0 goto label11 <NEXT> $ z10 = r0 instanceof java lang float <NEXT> if $ z10 ! = 0 goto label11 <NEXT> $ z11 = r0 instanceof java lang integer <NEXT> if $ z11 ! = 0 goto label11 <NEXT> $ z12 = r0 instanceof java lang long <NEXT> if $ z12 ! = 0 goto label11 <NEXT> $ z13 = r0 instanceof java lang short <NEXT> if $ z13 ! = 0 goto label11 <NEXT> $ z14 = r0 instanceof java lang string <NEXT> if $ z14 == 0 goto label12 <NEXT> label return r0 <NEXT> if $ z14 == 0 goto label12 <NEXT> label $ r4 = r0 get class <NEXT> $ r5 = $ r4 get package <NEXT> $ r6 = $ r5 get name <NEXT> $ z15 = $ r6 start with \ `` java \ `` <NEXT> if $ z15 == 0 goto label14 <NEXT> $ r7 = r0 to string <NEXT> label return $ r7 <NEXT> if $ z15 == 0 goto label14 <NEXT> label goto label16 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> $ z0 = org apache tool ant util loader utils be context loader available <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org apache tool ant ant class loader r0 <NEXT> $ z1 = r2 be context loader save <NEXT> if $ z1 == 0 goto label1 <NEXT> r3 = org apache tool ant ant class loader r0 <NEXT> $ r1 = r3 save context loader <NEXT> org apache tool ant util loader utils set context class loader $ r1 <NEXT> r4 = org apache tool ant ant class loader r0 <NEXT> r4 save context loader = null <NEXT> r5 = org apache tool ant ant class loader r0 <NEXT> r5 be context loader save = 0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant util java env utils get jre package <NEXT> r2 = r1 element <NEXT> label $ z0 = r2 have more element <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = r2 next element <NEXT> r3 = java lang string $ r4 <NEXT> r5 = org apache tool ant ant class loader r0 <NEXT> r5 add system package root r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant ant type definition r0 <NEXT> r2 adapt to class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant ant type definition r0 <NEXT> r2 class loader = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant ant type definition r0 <NEXT> $ r2 = specialinvoke r3 icreate r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant build event r0 <NEXT> r2 exception = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant build exception r0 <NEXT> $ r1 = r2 cause <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant component helper r0 <NEXT> $ r1 = r2 next <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant component helper r0 <NEXT> r4 project = r1 <NEXT> r3 = new org apache tool ant component helper $ ant type table <NEXT> specialinvoke r3 < init > r1 <NEXT> r5 = org apache tool ant component helper r0 <NEXT> r5 ant type table = r3 <NEXT> return <END>
<BEG> $ r0 = new java util vector <NEXT> specialinvoke $ r0 < init > <NEXT> org apache tool ant directory scanner default exclude = $ r0 <NEXT> i1 = 0 <NEXT> label $ r1 = org apache tool ant directory scanner defaultexcludes <NEXT> $ i0 = lengthof $ r1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> $ r4 = org apache tool ant directory scanner default exclude <NEXT> $ r2 = org apache tool ant directory scanner defaultexcludes <NEXT> $ r3 = $ r2 [ i1 ] <NEXT> $ r4 add $ r3 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant directory scanner r0 <NEXT> r1 be case sensitive = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache tool ant type resource file resource <NEXT> r5 = org apache tool ant directory scanner r0 <NEXT> $ r3 = r5 basedir <NEXT> specialinvoke r4 < init > $ r3 r1 <NEXT> r6 = org apache tool ant type resource r4 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant exit status exception r0 <NEXT> $ i0 = r1 status <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache tool ant filter class constant <NEXT> specialinvoke r4 < init > r1 <NEXT> r5 = java io reader r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant filter concat filter r0 <NEXT> $ r1 = r2 prepend <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r1 = org apache tool ant filter replace token r0 <NEXT> r1 end token = c0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool ant filter tabs to space r0 <NEXT> r1 tab length = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache tool ant filter tail filter <NEXT> specialinvoke r4 < init > r1 <NEXT> r5 = org apache tool ant filter tail filter r0 <NEXT> $ l0 = specialinvoke r5 get line <NEXT> r4 set line $ l0 <NEXT> r6 = org apache tool ant filter tail filter r0 <NEXT> $ l1 = specialinvoke r6 get skip <NEXT> r4 set skip $ l1 <NEXT> r4 set initialized 1 <NEXT> r7 = java io reader r4 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant filter util chain reader helper r0 <NEXT> $ r1 = r2 project <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant helper ant x m l context r0 <NEXT> r2 current project name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant helper ant x m l context r0 <NEXT> r1 ignore project tag = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r14 = new org apache tool ant target <NEXT> specialinvoke r14 < init > <NEXT> r14 set project r1 <NEXT> r15 = new org apache tool ant helper ant x m l context <NEXT> specialinvoke r15 < init > r1 <NEXT> r15 add target r14 <NEXT> r15 set implicit target r14 <NEXT> $ r8 = r15 get project <NEXT> r16 = new org apache tool ant helper project helper2 $ root handler <NEXT> $ r10 = org apache tool ant helper project helper2 element handler <NEXT> specialinvoke r16 < init > r15 $ r10 <NEXT> r18 = org apache tool ant helper project helper2 r0 <NEXT> r18 parse $ r8 r2 r16 <NEXT> r5 = r14 get task <NEXT> $ i0 = lengthof r5 <NEXT> if $ i0 == 1 goto label1 <NEXT> r17 = new org apache tool ant build exception <NEXT> specialinvoke r17 < init > \ `` no task defined\ `` <NEXT> r19 = java lang throwable r17 <NEXT> throw r19 <NEXT> if $ i0 == 1 goto label1 <NEXT> label $ r11 = r5 [ 0 ] <NEXT> $ r12 = org apache tool ant unknown element $ r11 <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> org apache tool ant helper project helper2 project handler = r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant input input request r0 <NEXT> r2 input = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache tool ant introspection helper get helper null r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = new org apache tool ant main <NEXT> specialinvoke $ r4 < init > <NEXT> $ r4 start ant r0 r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant project r0 <NEXT> $ r1 = r2 global filter set <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label r6 = org apache tool ant project r0 <NEXT> $ r4 = r6 global filter set <NEXT> r5 = new org apache tool ant type filter set $ filter <NEXT> specialinvoke r5 < init > r1 r2 <NEXT> $ r4 add filter r5 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant project r0 <NEXT> $ r2 = r5 base dir <NEXT> if $ r2 ! = null goto label4 <NEXT> label r6 = org apache tool ant project r0 <NEXT> r6 set basedir \ `` \ `` <NEXT> label goto label4 <NEXT> label r8 = org apache tool ant project r0 <NEXT> $ r4 = r8 base dir <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant project r0 <NEXT> $ z0 = r1 keep go mode <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache tool ant project r0 <NEXT> $ r3 = org apache tool ant component helper get component helper r4 <NEXT> $ r3 add task definition r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant project r0 <NEXT> $ r2 = org apache tool ant component helper get component helper r4 <NEXT> $ r3 = $ r2 create task r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new org apache tool ant build event <NEXT> specialinvoke r8 < init > r1 <NEXT> r9 = org apache tool ant project r0 <NEXT> $ r6 = r9 listener <NEXT> r3 = $ r6 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r3 next <NEXT> r4 = org apache tool ant build listener $ r7 <NEXT> r4 target start r8 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r3 = org apache tool ant project r0 <NEXT> r3 fire message log r1 r2 null i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache tool ant type resource file resource <NEXT> r5 = org apache tool ant project r0 <NEXT> $ r3 = r5 get base dir <NEXT> specialinvoke r4 < init > $ r3 r1 <NEXT> r6 = org apache tool ant type resource r4 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r5 = r1 get class <NEXT> r4 = org apache tool ant introspection helper get helper r0 $ r5 <NEXT> r4 store element r0 r1 r2 r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 last index of 58 <NEXT> if i0 ! = -1 goto label1 <NEXT> return r0 <NEXT> if i0 ! = -1 goto label1 <NEXT> label $ i1 = i0 + 1 <NEXT> $ r1 = r0 substring $ i1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 ! = null goto label1 <NEXT> return null <NEXT> if r2 ! = null goto label1 <NEXT> label r6 = org apache tool ant property helper r0 <NEXT> r3 = r6 get property hook r1 r2 0 <NEXT> if r3 == null goto label2 <NEXT> return r3 <NEXT> if r3 == null goto label2 <NEXT> label r7 = org apache tool ant property helper r0 <NEXT> $ r4 = r7 property <NEXT> $ r5 = $ r4 get r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant runtime configurable r0 <NEXT> $ r1 = r5 child <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new org apache tool ant util collection utils $ empty enumeration <NEXT> $ r3 = r4 <NEXT> specialinvoke r4 < init > <NEXT> goto label2 <NEXT> label r7 = java util enumeration $ r3 <NEXT> return r7 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = org apache tool ant runtime configurable r0 <NEXT> $ r2 = r6 child <NEXT> $ r3 = java util collection enumeration $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant target r0 <NEXT> $ r1 = r2 location <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r27 = org apache tool ant target r0 <NEXT> $ z0 = specialinvoke r27 test if condition <NEXT> if $ z0 == 0 goto label5 <NEXT> r28 = org apache tool ant target r0 <NEXT> $ z2 = specialinvoke r28 test unless condition <NEXT> if $ z2 == 0 goto label5 <NEXT> i1 = 0 <NEXT> label r29 = org apache tool ant target r0 <NEXT> $ r20 = r29 child <NEXT> $ i0 = $ r20 size <NEXT> if i1 > = $ i0 goto label4 <NEXT> r30 = org apache tool ant target r0 <NEXT> $ r21 = r30 child <NEXT> r1 = $ r21 get i1 <NEXT> $ z3 = r1 instanceof org apache tool ant task <NEXT> if $ z3 == 0 goto label2 <NEXT> r23 = org apache tool ant task r1 <NEXT> r23 perform <NEXT> goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if $ z3 == 0 goto label2 <NEXT> label r24 = org apache tool ant runtime configurable r1 <NEXT> r31 = org apache tool ant target r0 <NEXT> $ r22 = r31 project <NEXT> r24 maybe configure $ r22 <NEXT> if i1 > = $ i0 goto label4 <NEXT> label goto label7 <NEXT> label return <NEXT> if $ z2 == 0 goto label5 <NEXT> label r32 = org apache tool ant target r0 <NEXT> $ z1 = specialinvoke r32 test if condition <NEXT> if $ z1 ! = 0 goto label6 <NEXT> r33 = org apache tool ant target r0 <NEXT> $ r12 = r33 project <NEXT> r25 = new java lang string buffer <NEXT> specialinvoke r25 < init > <NEXT> $ r13 = r25 append \ `` skipped because property \'\ `` <NEXT> r34 = org apache tool ant target r0 <NEXT> $ r15 = r34 project <NEXT> r35 = org apache tool ant target r0 <NEXT> $ r14 = r35 if condition <NEXT> $ r16 = $ r15 replace property $ r14 <NEXT> $ r17 = $ r13 append $ r16 <NEXT> $ r18 = $ r17 append \ `` \ ' not set \ `` <NEXT> $ r19 = $ r18 to string <NEXT> r36 = org apache tool ant target r0 <NEXT> $ r12 log r36 $ r19 3 <NEXT> goto label7 <NEXT> if $ z1 ! = 0 goto label6 <NEXT> label r37 = org apache tool ant target r0 <NEXT> $ r3 = r37 project <NEXT> r26 = new java lang string buffer <NEXT> specialinvoke r26 < init > <NEXT> $ r4 = r26 append \ `` skipped because property \'\ `` <NEXT> r38 = org apache tool ant target r0 <NEXT> $ r6 = r38 project <NEXT> r39 = org apache tool ant target r0 <NEXT> $ r5 = r39 unless condition <NEXT> $ r7 = $ r6 replace property $ r5 <NEXT> $ r8 = $ r4 append $ r7 <NEXT> $ r9 = $ r8 append \ `` \ ' set \ `` <NEXT> $ r10 = $ r9 to string <NEXT> r40 = org apache tool ant target r0 <NEXT> $ r3 log r40 $ r10 3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant task r0 <NEXT> r2 handle error output r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant task adapter r0 <NEXT> r2 proxy = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs abstract cvs task r0 <NEXT> r2 command = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs abstract cvs task r0 <NEXT> r1 noexec = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs abstract jar signer task r0 <NEXT> r2 max memory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs ant r0 <NEXT> r2 output = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs ant r0 <NEXT> $ r2 = r3 reference <NEXT> $ r2 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs apt r0 <NEXT> r2 log \ `` ignore compiler attribute for the apt task a it be fixed\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 get compiler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs apt r0 <NEXT> r2 preprocess dir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs available r0 <NEXT> r1 search parent = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs basename r0 <NEXT> r2 file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs checksum r0 <NEXT> r1 read buffer size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org apache tool ant taskdefs chmod r0 <NEXT> $ z0 = r8 have perm <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r7 = new org apache tool ant build exception <NEXT> r9 = org apache tool ant taskdefs chmod r0 <NEXT> $ r6 = r9 get location <NEXT> specialinvoke r7 < init > \ `` require attribute perm not set in chmod\ <NEXT> r10 = java lang throwable r7 <NEXT> throw r10 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r11 = org apache tool ant taskdefs chmod r0 <NEXT> $ z1 = r11 default set define <NEXT> if $ z1 == 0 goto label2 <NEXT> r12 = org apache tool ant taskdefs chmod r0 <NEXT> $ r1 = r12 default set <NEXT> r13 = org apache tool ant taskdefs chmod r0 <NEXT> $ r2 = r13 get project <NEXT> $ r3 = $ r1 get dir $ r2 <NEXT> if $ r3 == null goto label2 <NEXT> r14 = org apache tool ant taskdefs chmod r0 <NEXT> $ r4 = r14 default set <NEXT> r15 = org apache tool ant taskdefs chmod r0 <NEXT> r15 add fileset $ r4 <NEXT> label specialinvoke r0 check configuration <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ z0 = org apache tool ant taskdefs condition o be family \ `` unix\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = specialinvoke r0 be valid os <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs classloader r0 <NEXT> r2 parent name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tool ant taskdefs condition condition base r0 <NEXT> $ r1 = r3 condition <NEXT> $ r2 = $ r1 element <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs condition condition base r0 <NEXT> $ r2 = r3 condition <NEXT> $ r2 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs condition contains r0 <NEXT> r2 sub string = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs condition file match r0 <NEXT> r1 textfile = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs condition http r0 <NEXT> r1 error begin at = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs condition be sign r0 <NEXT> r2 file = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org apache tool ant taskdefs condition o be os null null null r0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs copy r0 <NEXT> r1 enable multiple mapping = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs copy r0 <NEXT> r2 output encode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache tool ant taskdefs copy r0 <NEXT> $ r3 = specialinvoke r5 get mapper <NEXT> r6 = org apache tool ant taskdefs copy r0 <NEXT> $ r4 = r6 build map r1 r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs cvslib change log task r0 <NEXT> r2 d file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs cvslib change log task r0 <NEXT> $ r2 = r3 cv user <NEXT> $ r2 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs cvslib cvs user r0 <NEXT> r2 user i d = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs cvslib cvs user r0 <NEXT> $ r1 = r2 display name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs def base r0 <NEXT> $ r2 = specialinvoke r3 get delegate <NEXT> $ r2 set classpathref r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs delete r0 <NEXT> r2 use match task = 1 <NEXT> specialinvoke r0 add selector r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs delete r0 <NEXT> r2 use match task = 1 <NEXT> specialinvoke r0 add or r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs delete r0 <NEXT> r2 use match task = 1 <NEXT> specialinvoke r0 add none r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs delete r0 <NEXT> r2 use match task = 1 <NEXT> specialinvoke r0 add depend r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs depend set r0 <NEXT> $ r2 = r3 create source <NEXT> r4 = org apache tool ant type resource collection r1 <NEXT> $ r2 add r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs dirname r0 <NEXT> r2 file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs email email task r0 <NEXT> r2 password = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache tool ant taskdefs email email task r0 <NEXT> $ r3 = r5 reply to list <NEXT> r4 = new org apache tool ant taskdefs email email address <NEXT> specialinvoke r4 < init > r1 <NEXT> $ r3 add r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java util string tokenizer <NEXT> specialinvoke r7 < init > r1 \ <NEXT> label $ z0 = r7 have more token <NEXT> if $ z0 == 0 goto label2 <NEXT> r9 = org apache tool ant taskdefs email email task r0 <NEXT> $ r5 = r9 to list <NEXT> r8 = new org apache tool ant taskdefs email email address <NEXT> $ r6 = r7 next token <NEXT> specialinvoke r8 < init > $ r6 <NEXT> $ r5 add element r8 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs email email task r0 <NEXT> $ r2 = r3 bcc list <NEXT> $ r2 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs email header r0 <NEXT> r2 value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant taskdefs email message r0 <NEXT> $ r2 = r4 buffer <NEXT> $ r2 append r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs exec r0 <NEXT> r2 out = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tool ant taskdefs execute r0 <NEXT> $ r1 = r3 env <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org apache tool ant taskdefs execute r0 <NEXT> $ z0 = r4 new environment <NEXT> if $ z0 == 0 goto label2 <NEXT> label r5 = org apache tool ant taskdefs execute r0 <NEXT> $ r2 = r5 env <NEXT> goto label3 <NEXT> label return $ r2 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r6 = org apache tool ant taskdefs execute r0 <NEXT> $ r2 = specialinvoke r6 patch environment <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs execute r0 <NEXT> r2 env = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant taskdefs execute java r0 <NEXT> $ r2 = r4 thread <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org apache tool ant taskdefs execute java r0 <NEXT> r5 time out = 1 <NEXT> r6 = org apache tool ant taskdefs execute java r0 <NEXT> $ r3 = r6 thread <NEXT> $ r3 interrupt <NEXT> label r0 notify all <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs execute on r0 <NEXT> r1 max parallel = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs execute on r0 <NEXT> r1 force = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r9 = org apache tool ant taskdefs execute on r0 <NEXT> $ r1 = r9 mapper element <NEXT> if $ r1 == null goto label1 <NEXT> r7 = new org apache tool ant build exception <NEXT> r10 = org apache tool ant taskdefs execute on r0 <NEXT> $ r6 = r10 get location <NEXT> specialinvoke r7 < init > \ `` can not define more than one mapper\ <NEXT> r11 = java lang throwable r7 <NEXT> throw r11 <NEXT> if $ r1 == null goto label1 <NEXT> label r8 = new org apache tool ant type mapper <NEXT> r12 = org apache tool ant taskdefs execute on r0 <NEXT> $ r3 = r12 get project <NEXT> specialinvoke r8 < init > $ r3 <NEXT> r13 = org apache tool ant taskdefs execute on r0 <NEXT> r13 mapper element = r8 <NEXT> r14 = org apache tool ant taskdefs execute on r0 <NEXT> $ r4 = r14 mapper element <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 setup redirector <NEXT> r2 = org apache tool ant taskdefs execute on r0 <NEXT> $ r1 = r2 redirector <NEXT> $ r1 set append property 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = newarray java lang string [ 1 ] <NEXT> $ r3 [ 0 ] = r1 <NEXT> $ r4 = newarray java io file [ 1 ] <NEXT> $ r4 [ 0 ] = r2 <NEXT> r6 = org apache tool ant taskdefs execute on r0 <NEXT> $ r5 = r6 get commandline $ r3 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs expand r0 <NEXT> r2 d = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs get r0 <NEXT> r2 d = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r16 = null <NEXT> label r18 = new java util zip g z i p output stream <NEXT> r17 = new java io file output stream <NEXT> r21 = org apache tool ant taskdefs g zip r0 <NEXT> $ r6 = r21 zip file <NEXT> specialinvoke r17 < init > $ r6 <NEXT> specialinvoke r18 < init > r17 <NEXT> r16 = r18 <NEXT> r22 = org apache tool ant taskdefs g zip r0 <NEXT> $ r7 = r22 get src resource <NEXT> r23 = org apache tool ant taskdefs g zip r0 <NEXT> r23 zip resource $ r7 r18 <NEXT> label org apache tool ant util file utils close r18 <NEXT> goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 exist <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r10 = new org apache tool ant build exception <NEXT> r9 = new java lang string buffer <NEXT> specialinvoke r9 < init > <NEXT> $ r4 = r9 append \ `` manifest file \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 append \ `` do not exist \ `` <NEXT> $ r7 = $ r6 to string <NEXT> r11 = org apache tool ant taskdefs jar r0 <NEXT> $ r8 = r11 get location <NEXT> specialinvoke r10 < init > $ r7 $ r8 <NEXT> r12 = java lang throwable r10 <NEXT> throw r12 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r13 = org apache tool ant taskdefs jar r0 <NEXT> r13 manifest file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant taskdefs javac r0 <NEXT> $ r2 = r4 compile classpath <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = org apache tool ant taskdefs javac r0 <NEXT> r5 compile classpath = r1 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r2 ! = null goto label1 <NEXT> label r6 = org apache tool ant taskdefs javac r0 <NEXT> $ r3 = r6 compile classpath <NEXT> $ r3 append r1 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache tool ant taskdefs javac r0 <NEXT> $ r1 = r7 compile classpath <NEXT> if $ r1 ! = null goto label1 <NEXT> r6 = new org apache tool ant type path <NEXT> r8 = org apache tool ant taskdefs javac r0 <NEXT> $ r5 = r8 get project <NEXT> specialinvoke r6 < init > $ r5 <NEXT> r9 = org apache tool ant taskdefs javac r0 <NEXT> r9 compile classpath = r6 <NEXT> label r10 = org apache tool ant taskdefs javac r0 <NEXT> $ r2 = r10 compile classpath <NEXT> $ r3 = $ r2 create path <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs javac r0 <NEXT> $ r2 = r3 create classpath <NEXT> $ r2 set refid r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs javac r0 <NEXT> r1 list file = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs javac r0 <NEXT> $ z0 = r1 list file <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs javac r0 <NEXT> $ z0 = r1 deprecation <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs javac r0 <NEXT> $ r1 = r2 memory maximum size <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs javac r0 <NEXT> $ z0 = r1 optimize <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant taskdefs javadoc r0 <NEXT> $ r2 = r4 source path <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = org apache tool ant taskdefs javadoc r0 <NEXT> r5 source path = r1 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r2 ! = null goto label1 <NEXT> label r6 = org apache tool ant taskdefs javadoc r0 <NEXT> $ r3 = r6 source path <NEXT> $ r3 append r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs javadoc r0 <NEXT> specialinvoke r1 add arg if z0 \ `` -private\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant taskdefs javadoc r0 <NEXT> $ r1 = r5 doclet <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new org apache tool ant taskdefs javadoc $ doclet info <NEXT> r6 = org apache tool ant taskdefs javadoc r0 <NEXT> specialinvoke r4 < init > r6 <NEXT> r7 = org apache tool ant taskdefs javadoc r0 <NEXT> r7 doclet = r4 <NEXT> label r8 = org apache tool ant taskdefs javadoc r0 <NEXT> $ r2 = r8 doclet <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs javadoc r0 <NEXT> r1 author = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs javadoc r0 <NEXT> specialinvoke r1 add arg if z0 \ `` -nodeprecated\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs javadoc r0 <NEXT> specialinvoke r1 add arg if z0 \ `` -nodeprecatedlist\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs javadoc r0 <NEXT> specialinvoke r1 add arg if z0 \ `` -notree\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs j d b c task r0 <NEXT> $ r2 = r3 create classpath <NEXT> $ r2 set refid r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs j d b c task r0 <NEXT> r1 autocommit = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs j d b c task r0 <NEXT> $ r1 = r2 user id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs j d b c task r0 <NEXT> r2 user id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label2 <NEXT> $ i0 = r1 length <NEXT> if $ i0 < = 0 goto label2 <NEXT> r13 = new java util string tokenizer <NEXT> r15 = org apache tool ant taskdefs key subst r0 <NEXT> $ r8 = r15 sep <NEXT> specialinvoke r13 < init > r1 $ r8 0 <NEXT> label $ z0 = r13 have more token <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r9 = r13 next token <NEXT> r3 = $ r9 trim <NEXT> r14 = new java util string tokenizer <NEXT> specialinvoke r14 < init > r3 \ `` =\ <NEXT> r5 = r14 next token <NEXT> r6 = r14 next token <NEXT> r16 = org apache tool ant taskdefs key subst r0 <NEXT> $ r11 = r16 replacement <NEXT> $ r11 put r5 r6 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant taskdefs load property r0 <NEXT> specialinvoke r4 assert src be java resource <NEXT> r5 = org apache tool ant taskdefs load property r0 <NEXT> $ r2 = r5 src <NEXT> $ r3 = org apache tool ant type resource java resource $ r2 <NEXT> $ r3 set name r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs load resource r0 <NEXT> r1 quiet = z0 <NEXT> if z0 == 0 goto label1 <NEXT> r2 = org apache tool ant taskdefs load resource r0 <NEXT> r2 fail on error = 0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs load resource r0 <NEXT> $ r2 = r3 filter chain <NEXT> $ r2 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> if $ r2 ! = null goto label1 <NEXT> r19 = new org apache tool ant build exception <NEXT> specialinvoke r19 < init > \ `` the element nest element need a \\\ `` name\\\ `` attribute\ `` <NEXT> r23 = java lang throwable r19 <NEXT> throw r23 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r24 = org apache tool ant taskdefs macro def r0 <NEXT> $ r3 = r24 element <NEXT> $ r4 = r1 get name <NEXT> $ r5 = $ r3 get $ r4 <NEXT> if $ r5 == null goto label2 <NEXT> r21 = new org apache tool ant build exception <NEXT> r20 = new java lang string buffer <NEXT> specialinvoke r20 < init > <NEXT> $ r13 = r20 append \ `` the element \ `` <NEXT> $ r14 = r1 get name <NEXT> $ r15 = $ r13 append $ r14 <NEXT> $ r16 = $ r15 append \ `` have already be specified\ `` <NEXT> $ r17 = $ r16 to string <NEXT> specialinvoke r21 < init > $ r17 <NEXT> r25 = java lang throwable r21 <NEXT> throw r25 <NEXT> if $ r5 == null goto label2 <NEXT> label r26 = org apache tool ant taskdefs macro def r0 <NEXT> $ z0 = r26 have implicit element <NEXT> if $ z0 ! = 0 goto label3 <NEXT> $ z1 = r1 be implicit <NEXT> if $ z1 == 0 goto label4 <NEXT> r27 = org apache tool ant taskdefs macro def r0 <NEXT> $ r10 = r27 element <NEXT> $ i0 = $ r10 size <NEXT> if $ i0 == 0 goto label4 <NEXT> label r22 = new org apache tool ant build exception <NEXT> specialinvoke r22 < init > \ `` only one element allow when use implicit elements\ `` <NEXT> r28 = java lang throwable r22 <NEXT> throw r28 <NEXT> if $ i0 == 0 goto label4 <NEXT> label $ z2 = r1 be implicit <NEXT> r29 = org apache tool ant taskdefs macro def r0 <NEXT> r29 have implicit element = $ z2 <NEXT> r30 = org apache tool ant taskdefs macro def r0 <NEXT> $ r7 = r30 element <NEXT> $ r8 = r1 get name <NEXT> $ r7 put $ r8 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org apache tool ant build exception <NEXT> specialinvoke r3 < init > \ `` not implement any more\ `` <NEXT> r4 = java lang throwable r3 <NEXT> throw r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs manifest r0 <NEXT> $ r1 = r2 main section <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs manifest class path r0 <NEXT> r1 max parent level = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs manifest task r0 <NEXT> r2 mode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = org apache tool ant taskdefs match task r0 <NEXT> r14 log \ `` the item attribute be deprecate please use the include attribute \ <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 equal \ `` * \ `` <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = r1 equal \ `` \ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> label r15 = org apache tool ant taskdefs match task r0 <NEXT> $ r11 = r15 create include <NEXT> $ r11 set name \ `` * * \ `` <NEXT> goto label5 <NEXT> label return <NEXT> if $ z1 == 0 goto label2 <NEXT> label r12 = new java util string tokenizer <NEXT> specialinvoke r12 < init > r1 \ <NEXT> label $ z2 = r12 have more token <NEXT> if $ z2 == 0 goto label5 <NEXT> $ r5 = r12 next token <NEXT> r3 = $ r5 trim <NEXT> $ i0 = r3 length <NEXT> if $ i0 < = 0 goto label4 <NEXT> r16 = org apache tool ant taskdefs match task r0 <NEXT> $ r6 = r16 create include <NEXT> r13 = new java lang string buffer <NEXT> specialinvoke r13 < init > <NEXT> $ r8 = r13 append r3 <NEXT> $ r9 = $ r8 append \ `` * * \ `` <NEXT> $ r10 = $ r9 to string <NEXT> $ r6 set name $ r10 <NEXT> label goto label3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs match task r0 <NEXT> $ r2 = r3 fileset <NEXT> $ r2 add different r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs move r0 <NEXT> r2 delete dir r1 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 1 goto label1 <NEXT> if i0 < = 10 goto label2 <NEXT> label r3 = new org apache tool ant build exception <NEXT> specialinvoke r3 < init > \ `` the thread priority be out of the range 1-10\ `` <NEXT> r5 = java lang throwable r3 <NEXT> throw r5 <NEXT> if i0 < = 10 goto label2 <NEXT> label r4 = new java lang integer <NEXT> specialinvoke r4 < init > i0 <NEXT> r6 = org apache tool ant taskdefs nice r0 <NEXT> r6 new priority = r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 be directory <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new org apache tool ant build exception <NEXT> specialinvoke r6 < init > \ `` the source can\'t be a directory\ `` <NEXT> r8 = java lang throwable r6 <NEXT> throw r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 instanceof org apache tool ant type resource file resource <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r3 = org apache tool ant type resource file resource r1 <NEXT> $ r4 = $ r3 get file <NEXT> r9 = org apache tool ant taskdefs pack r0 <NEXT> r9 source = $ r4 <NEXT> goto label3 <NEXT> label r12 = org apache tool ant taskdefs pack r0 <NEXT> r12 src = r1 <NEXT> return <NEXT> if $ z1 == 0 goto label2 <NEXT> label r10 = org apache tool ant taskdefs pack r0 <NEXT> $ z2 = r10 support non file resource <NEXT> if $ z2 ! = 0 goto label3 <NEXT> r7 = new org apache tool ant build exception <NEXT> specialinvoke r7 < init > \ `` only file system resource be support \ `` <NEXT> r11 = java lang throwable r7 <NEXT> throw r11 <END>
<BEG> r0 = @ this <NEXT> r25 = org apache tool ant taskdefs pack r0 <NEXT> specialinvoke r25 validate <NEXT> r26 = org apache tool ant taskdefs pack r0 <NEXT> r1 = r26 get src resource <NEXT> $ z0 = r1 be exist <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r22 = new java lang string buffer <NEXT> specialinvoke r22 < init > <NEXT> $ r17 = r22 append \ `` nothing to do \ `` <NEXT> $ r18 = r1 to string <NEXT> $ r19 = $ r17 append $ r18 <NEXT> $ r20 = $ r19 append \ `` doesn\'t exist \ `` <NEXT> $ r21 = $ r20 to string <NEXT> r27 = org apache tool ant taskdefs pack r0 <NEXT> r27 log $ r21 <NEXT> goto label3 <NEXT> label return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r28 = org apache tool ant taskdefs pack r0 <NEXT> $ r2 = r28 zip file <NEXT> $ l0 = $ r2 last modified <NEXT> $ l1 = r1 get last modified <NEXT> $ b2 = $ l0 cmp $ l1 <NEXT> if $ b2 > = 0 goto label2 <NEXT> r23 = new java lang string buffer <NEXT> specialinvoke r23 < init > <NEXT> $ r11 = r23 append \ `` building \ `` <NEXT> r29 = org apache tool ant taskdefs pack r0 <NEXT> $ r12 = r29 zip file <NEXT> $ r13 = $ r12 get absolute path <NEXT> $ r14 = $ r11 append $ r13 <NEXT> $ r15 = $ r14 to string <NEXT> r30 = org apache tool ant taskdefs pack r0 <NEXT> r30 log $ r15 <NEXT> r31 = org apache tool ant taskdefs pack r0 <NEXT> r31 pack <NEXT> if $ b2 > = 0 goto label2 <NEXT> label r24 = new java lang string buffer <NEXT> specialinvoke r24 < init > <NEXT> $ r4 = r24 append \ `` nothing to do \ `` <NEXT> r32 = org apache tool ant taskdefs pack r0 <NEXT> $ r5 = r32 zip file <NEXT> $ r6 = $ r5 get absolute path <NEXT> $ r7 = $ r4 append $ r6 <NEXT> $ r8 = $ r7 append \ `` be up to date \ `` <NEXT> $ r9 = $ r8 to string <NEXT> r33 = org apache tool ant taskdefs pack r0 <NEXT> r33 log $ r9 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r3 = org apache tool ant taskdefs patch r0 <NEXT> $ r1 = r3 cmd <NEXT> $ r2 = $ r1 create argument <NEXT> $ r2 set value \ `` -l\ `` <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r3 = org apache tool ant taskdefs patch r0 <NEXT> $ r1 = r3 cmd <NEXT> $ r2 = $ r1 create argument <NEXT> $ r2 set value \ `` -r\ `` <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs path convert r0 <NEXT> $ r1 = r2 refid <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs property r0 <NEXT> r2 value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs pump stream handler r0 <NEXT> $ r1 = r2 err <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache tool ant taskdefs pump stream handler r0 <NEXT> $ r3 = r4 create pump r1 r2 <NEXT> r5 = org apache tool ant taskdefs pump stream handler r0 <NEXT> r5 error thread = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r2 = org apache tool ant taskdefs recorder entry r0 <NEXT> specialinvoke r2 flush <NEXT> $ z0 = r1 boolean value <NEXT> r3 = org apache tool ant taskdefs recorder entry r0 <NEXT> r3 record = $ z0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get project <NEXT> r4 = org apache tool ant taskdefs recorder entry r0 <NEXT> $ r3 = r4 project <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> r5 = org apache tool ant taskdefs recorder entry r0 <NEXT> r5 cleanup <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs replace r0 <NEXT> r2 property file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs resource count r0 <NEXT> r2 property = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r3 = newarray java lang string [ 1 ] <NEXT> $ r3 [ 0 ] = \ `` - xnew\ `` <NEXT> r2 = specialinvoke r0 setup rmic command $ r3 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs rmic r0 <NEXT> r2 source base = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs rmic r0 <NEXT> $ r1 = r2 stub version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs rmic r0 <NEXT> $ r1 = r2 compile list <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs rmic r0 <NEXT> r1 include ant runtime = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = new org apache tool ant taskdefs rmic $ implementation specific argument <NEXT> r5 = org apache tool ant taskdefs rmic r0 <NEXT> specialinvoke r4 < init > r5 <NEXT> r6 = org apache tool ant taskdefs rmic r0 <NEXT> $ r3 = r6 facade <NEXT> r7 = org apache tool ant util facade implementation specific argument r4 <NEXT> $ r3 add implementation argument r7 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant taskdefs sequential r0 <NEXT> $ r3 = r5 nest task <NEXT> r1 = $ r3 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = r1 next <NEXT> r2 = org apache tool ant task $ r4 <NEXT> r2 perform <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs sign jar r0 <NEXT> r2 d dir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant taskdefs sub ant r0 <NEXT> $ r2 = r4 ant <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org apache tool ant taskdefs sub ant r0 <NEXT> $ r3 = r5 ant <NEXT> $ r3 handle output r1 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r2 == null goto label1 <NEXT> label specialinvoke r0 handle output r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs sub ant r0 <NEXT> r2 genericantfile = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs sub ant r0 <NEXT> r1 fail on error = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs sub ant r0 <NEXT> $ r2 = specialinvoke r3 get buildpath <NEXT> $ r2 append r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs sync r0 <NEXT> $ r1 = r2 my copy <NEXT> $ r1 set include empty dirs z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z2 = 1 <NEXT> r10 = org apache tool ant taskdefs tar r0 <NEXT> $ z0 = r10 archive be up to date r2 r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> z2 = 0 <NEXT> label i0 = 0 <NEXT> label $ i1 = lengthof r2 <NEXT> if i0 > = $ i1 goto label4 <NEXT> r11 = org apache tool ant taskdefs tar r0 <NEXT> $ r5 = r11 tar file <NEXT> r8 = new java io file <NEXT> $ r4 = r2 [ i0 ] <NEXT> specialinvoke r8 < init > r1 $ r4 <NEXT> $ z1 = $ r5 equal r8 <NEXT> if $ z1 == 0 goto label3 <NEXT> r9 = new org apache tool ant build exception <NEXT> r12 = org apache tool ant taskdefs tar r0 <NEXT> $ r7 = r12 get location <NEXT> specialinvoke r9 < init > \ `` a tar file can not include itself\ <NEXT> r13 = java lang throwable r9 <NEXT> throw r13 <NEXT> if $ z1 == 0 goto label3 <NEXT> label i0 = i0 + 1 <NEXT> goto label2 <NEXT> if i0 > = $ i1 goto label4 <NEXT> label return z2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r5 = r0 get project <NEXT> r1 = r0 get directory scanner $ r5 <NEXT> r2 = r1 get include directory <NEXT> r3 = r1 get include file <NEXT> $ i1 = lengthof r2 <NEXT> $ i0 = lengthof r3 <NEXT> $ i2 = $ i1 + $ i0 <NEXT> r4 = newarray java lang string [ $ i2 ] <NEXT> $ i3 = lengthof r2 <NEXT> java lang system arraycopy r2 0 r4 0 $ i3 <NEXT> $ i5 = lengthof r2 <NEXT> $ i4 = lengthof r3 <NEXT> java lang system arraycopy r3 0 r4 $ i5 $ i4 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs temp file r0 <NEXT> r2 property = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 be exist <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r7 = new org apache tool ant build exception <NEXT> specialinvoke r7 < init > \ `` the archive doesn\'t exist\ `` <NEXT> r10 = java lang throwable r7 <NEXT> throw r10 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = r1 be directory <NEXT> if $ z1 == 0 goto label2 <NEXT> r8 = new org apache tool ant build exception <NEXT> specialinvoke r8 < init > \ `` the archive can\'t be a directory\ `` <NEXT> r11 = java lang throwable r8 <NEXT> throw r11 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r1 instanceof org apache tool ant type resource file resource <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r3 = org apache tool ant type resource file resource r1 <NEXT> $ r4 = $ r3 get file <NEXT> r12 = org apache tool ant taskdefs unpack r0 <NEXT> r12 source = $ r4 <NEXT> goto label4 <NEXT> label r15 = org apache tool ant taskdefs unpack r0 <NEXT> r15 src resource = r1 <NEXT> return <NEXT> if $ z2 == 0 goto label3 <NEXT> label r13 = org apache tool ant taskdefs unpack r0 <NEXT> $ z3 = r13 support non file resource <NEXT> if $ z3 ! = 0 goto label4 <NEXT> r9 = new org apache tool ant build exception <NEXT> specialinvoke r9 < init > \ `` only file system resource be support \ `` <NEXT> r14 = java lang throwable r9 <NEXT> throw r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs up to date r0 <NEXT> r2 source file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r17 = org apache tool ant taskdefs up to date r0 <NEXT> $ r1 = r17 property <NEXT> if $ r1 ! = null goto label1 <NEXT> r15 = new org apache tool ant build exception <NEXT> r18 = org apache tool ant taskdefs up to date r0 <NEXT> $ r14 = r18 get location <NEXT> specialinvoke r15 < init > \ `` property attribute be require \ <NEXT> r19 = java lang throwable r15 <NEXT> throw r19 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r20 = org apache tool ant taskdefs up to date r0 <NEXT> z0 = r20 eval <NEXT> if z0 == 0 goto label3 <NEXT> r21 = org apache tool ant taskdefs up to date r0 <NEXT> $ r2 = r21 get project <NEXT> r22 = org apache tool ant taskdefs up to date r0 <NEXT> $ r3 = r22 property <NEXT> r23 = org apache tool ant taskdefs up to date r0 <NEXT> $ r4 = specialinvoke r23 get value <NEXT> $ r2 set new property $ r3 $ r4 <NEXT> r24 = org apache tool ant taskdefs up to date r0 <NEXT> $ r5 = r24 mapper element <NEXT> if $ r5 ! = null goto label2 <NEXT> r16 = new java lang string buffer <NEXT> specialinvoke r16 < init > <NEXT> $ r7 = r16 append \ `` file \\\ `` \ `` <NEXT> r25 = org apache tool ant taskdefs up to date r0 <NEXT> $ r8 = r25 target file <NEXT> $ r9 = $ r8 get absolute path <NEXT> $ r10 = $ r7 append $ r9 <NEXT> $ r11 = $ r10 append \ `` \\\ `` be up-to-date \ `` <NEXT> $ r12 = $ r11 to string <NEXT> r26 = org apache tool ant taskdefs up to date r0 <NEXT> r26 log $ r12 3 <NEXT> goto label3 <NEXT> label return <NEXT> if $ r5 ! = null goto label2 <NEXT> label r27 = org apache tool ant taskdefs up to date r0 <NEXT> r27 log \ `` all target file be up-to-date \ <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = new org apache tool ant util source file scanner <NEXT> specialinvoke r9 < init > r0 <NEXT> r10 = org apache tool ant taskdefs up to date r0 <NEXT> r4 = specialinvoke r10 get mapper <NEXT> r8 = r1 <NEXT> r11 = org apache tool ant taskdefs up to date r0 <NEXT> $ r6 = r11 mapper element <NEXT> if $ r6 ! = null goto label1 <NEXT> r8 = null <NEXT> label $ r7 = r9 restrict r2 r1 r8 r4 <NEXT> $ i0 = lengthof $ r7 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs verify jar r0 <NEXT> r1 certificate = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r9 = new java lang string buffer <NEXT> specialinvoke r9 < init > <NEXT> r10 = org apache tool ant taskdefs wait for r0 <NEXT> $ r2 = r10 get task name <NEXT> $ r3 = r9 append $ r2 <NEXT> $ r4 = $ r3 append \ `` timeout\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r11 = org apache tool ant taskdefs wait for r0 <NEXT> r11 log $ r5 3 <NEXT> r12 = org apache tool ant taskdefs wait for r0 <NEXT> $ r6 = r12 timeout property <NEXT> if $ r6 == null goto label1 <NEXT> r13 = org apache tool ant taskdefs wait for r0 <NEXT> $ r7 = r13 get project <NEXT> r14 = org apache tool ant taskdefs wait for r0 <NEXT> $ r8 = r14 timeout property <NEXT> $ r7 set new property $ r8 \ `` true\ `` <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs xml property r0 <NEXT> $ r2 = r3 xml catalog <NEXT> $ r2 add configure x m l catalog r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs x s l t process r0 <NEXT> r2 base dir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs x s l t process r0 <NEXT> r2 in file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 init <NEXT> r3 = org apache tool ant taskdefs x s l t process r0 <NEXT> $ r1 = r3 xml catalog <NEXT> r4 = org apache tool ant taskdefs x s l t process r0 <NEXT> $ r2 = r4 get project <NEXT> $ r1 set project $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs zip r0 <NEXT> r1 do filesonly = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get value <NEXT> r3 = org apache tool ant taskdefs zip r0 <NEXT> r3 duplicate = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs zip r0 <NEXT> $ i0 = r1 level <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs zip r0 <NEXT> $ z0 = r1 double file pas <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org apache tool ant taskdefs zip r0 <NEXT> r2 skip write = 1 <NEXT> r3 = org apache tool ant taskdefs zip r0 <NEXT> r3 execute main <NEXT> r4 = org apache tool ant taskdefs zip r0 <NEXT> r4 skip write = 0 <NEXT> r5 = org apache tool ant taskdefs zip r0 <NEXT> r5 execute main <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org apache tool ant taskdefs zip r0 <NEXT> r6 execute main <END>
<BEG> r0 = @ this <NEXT> r10 = org apache tool ant taskdefs zip r0 <NEXT> $ r3 = r10 add dirs <NEXT> $ r3 clear <NEXT> r11 = org apache tool ant taskdefs zip r0 <NEXT> $ r4 = r11 add file <NEXT> $ r4 remove all element <NEXT> r12 = org apache tool ant taskdefs zip r0 <NEXT> $ r5 = r12 entry <NEXT> $ r5 clear <NEXT> r13 = org apache tool ant taskdefs zip r0 <NEXT> r13 add new file = 0 <NEXT> r14 = org apache tool ant taskdefs zip r0 <NEXT> $ z0 = r14 save do update <NEXT> r15 = org apache tool ant taskdefs zip r0 <NEXT> r15 do update = $ z0 <NEXT> r16 = org apache tool ant taskdefs zip r0 <NEXT> $ r6 = r16 filesets from groupfilesets <NEXT> r1 = $ r6 element <NEXT> label $ z1 = r1 have more element <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r8 = r1 next element <NEXT> r2 = org apache tool ant type zip file set $ r8 <NEXT> r17 = org apache tool ant taskdefs zip r0 <NEXT> $ r9 = r17 resource <NEXT> $ r9 remove element r2 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r18 = org apache tool ant taskdefs zip r0 <NEXT> $ r7 = r18 filesets from groupfilesets <NEXT> $ r7 remove all element <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache tool ant type abstract file set r0 <NEXT> $ z0 = r4 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache tool ant type abstract file set r0 <NEXT> $ r3 = r5 no child allow <NEXT> r6 = java lang throwable $ r3 <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache tool ant type abstract file set r0 <NEXT> r7 directory scanner = null <NEXT> r8 = org apache tool ant type abstract file set r0 <NEXT> $ r1 = r8 default pattern <NEXT> $ r2 = $ r1 create include file <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type abstract file set r0 <NEXT> r3 = org apache tool ant type selector file selector r1 <NEXT> r2 append selector r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache tool ant type ant filter reader r0 <NEXT> $ z0 = r5 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache tool ant type ant filter reader r0 <NEXT> $ r4 = r6 too many attribute <NEXT> r7 = java lang throwable $ r4 <NEXT> throw r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org apache tool ant type ant filter reader r0 <NEXT> $ r2 = r8 classpath <NEXT> if $ r2 ! = null goto label2 <NEXT> r9 = org apache tool ant type ant filter reader r0 <NEXT> r9 classpath = r1 <NEXT> goto label3 <NEXT> label return <NEXT> if $ r2 ! = null goto label2 <NEXT> label r10 = org apache tool ant type ant filter reader r0 <NEXT> $ r3 = r10 classpath <NEXT> $ r3 append r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant type archive file set r0 <NEXT> $ r1 = r5 src <NEXT> $ z0 = $ r1 instanceof org apache tool ant type resource file resource <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache tool ant type archive file set r0 <NEXT> $ r2 = r6 src <NEXT> $ r3 = org apache tool ant type resource file resource $ r2 <NEXT> $ r4 = $ r3 get file <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant type archive file set r0 <NEXT> $ r1 = r5 src <NEXT> $ z0 = $ r1 instanceof org apache tool ant type resource file resource <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache tool ant type archive file set r0 <NEXT> $ r2 = r6 src <NEXT> $ r3 = org apache tool ant type resource file resource $ r2 <NEXT> $ r4 = $ r3 get file <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type archive file set r0 <NEXT> $ r1 = r2 prefix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r12 = org apache tool ant type archive file set r0 <NEXT> $ z0 = r12 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = org apache tool ant type archive file set r0 <NEXT> $ r7 = r13 get project <NEXT> r14 = org apache tool ant type archive file set r0 <NEXT> $ r8 = r14 get ref $ r7 <NEXT> $ r9 = org apache tool ant type resource collection $ r8 <NEXT> $ r10 = org apache tool ant type resource collection $ r9 <NEXT> $ r11 = $ r10 iterator <NEXT> return $ r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r15 = org apache tool ant type archive file set r0 <NEXT> $ r2 = r15 src <NEXT> if $ r2 ! = null goto label2 <NEXT> $ r6 = specialinvoke r0 iterator <NEXT> return $ r6 <NEXT> if $ r2 ! = null goto label2 <NEXT> label r16 = org apache tool ant type archive file set r0 <NEXT> $ r3 = r16 get project <NEXT> r17 = org apache tool ant type archive file set r0 <NEXT> $ r4 = r17 get directory scanner $ r3 <NEXT> r1 = org apache tool ant type archive scanner $ r4 <NEXT> $ r5 = r1 get resource file <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache tool ant type archive scanner r0 <NEXT> $ r1 = r9 src <NEXT> if $ r1 ! = null goto label1 <NEXT> r8 = new org apache tool ant type resource file resource iterator <NEXT> r10 = org apache tool ant type archive scanner r0 <NEXT> $ r6 = r10 get basedir <NEXT> r11 = org apache tool ant type archive scanner r0 <NEXT> $ r7 = r11 get include file <NEXT> specialinvoke r8 < init > $ r6 $ r7 <NEXT> r12 = java util iterator r8 <NEXT> return r12 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r13 = org apache tool ant type archive scanner r0 <NEXT> specialinvoke r13 scanme <NEXT> r14 = org apache tool ant type archive scanner r0 <NEXT> $ r2 = r14 match file entry <NEXT> $ r3 = $ r2 value <NEXT> $ r4 = $ r3 iterator <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type commandline java r0 <NEXT> $ r1 = r2 assertion <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tool ant type commandline java r0 <NEXT> $ z0 = r3 execute jar <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = org apache tool ant type commandline java r0 <NEXT> $ r1 = r4 java command <NEXT> $ r2 = $ r1 get executable <NEXT> return $ r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type commandline java r0 <NEXT> $ r1 = r2 get actual v m command <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type commandline java r0 <NEXT> $ r1 = r2 bootclasspath <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type data type r0 <NEXT> $ r1 = r2 ref <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache tool ant type dir set r0 <NEXT> $ z0 = r6 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = org apache tool ant type dir set r0 <NEXT> $ r2 = r7 get project <NEXT> r8 = org apache tool ant type dir set r0 <NEXT> $ r3 = r8 get ref $ r2 <NEXT> $ r4 = org apache tool ant type dir set $ r3 <NEXT> $ r5 = $ r4 clone <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = specialinvoke r0 clone <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant type file list r0 <NEXT> $ r2 = r4 get check ref r1 <NEXT> $ r3 = org apache tool ant type file list $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant type filter chain r0 <NEXT> $ r2 = r3 filter reader <NEXT> $ r2 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant type filter chain r0 <NEXT> $ r2 = r3 filter reader <NEXT> $ r2 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache tool ant type filter set class $ org $ apache $ tool $ ant $ type $ filter set <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r5 = org apache tool ant type filter set class $ \ `` org apache tool ant type filter set\ `` <NEXT> org apache tool ant type filter set class $ org $ apache $ tool $ ant $ type $ filter set = $ r5 <NEXT> goto label2 <NEXT> label r6 = org apache tool ant type filter set r0 <NEXT> $ r2 = r6 get check ref $ r5 \ `` filterset\ `` <NEXT> $ r3 = org apache tool ant type filter set $ r2 <NEXT> return $ r3 <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ r5 = org apache tool ant type filter set class $ org $ apache $ tool $ ant $ type $ filter set <END>
<BEG> r0 = @ this <NEXT> r14 = org apache tool ant type filter set r0 <NEXT> $ r3 = r14 filter hash <NEXT> if $ r3 ! = null goto label2 <NEXT> r13 = new java util hashtable <NEXT> r15 = org apache tool ant type filter set r0 <NEXT> $ r6 = r15 get filter <NEXT> $ i0 = $ r6 size <NEXT> specialinvoke r13 < init > $ i0 <NEXT> r16 = org apache tool ant type filter set r0 <NEXT> r16 filter hash = r13 <NEXT> r17 = org apache tool ant type filter set r0 <NEXT> $ r7 = r17 get filter <NEXT> r1 = $ r7 element <NEXT> label $ z0 = r1 have more element <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r8 = r1 next element <NEXT> r2 = org apache tool ant type filter set $ filter $ r8 <NEXT> r18 = org apache tool ant type filter set r0 <NEXT> $ r9 = r18 filter hash <NEXT> $ r10 = r2 get token <NEXT> $ r11 = r2 get value <NEXT> $ r9 put $ r10 $ r11 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r19 = org apache tool ant type filter set r0 <NEXT> $ r4 = r19 filter hash <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant type filter set r0 <NEXT> $ z0 = r4 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache tool ant type filter set r0 <NEXT> $ r3 = r5 too many attribute <NEXT> r6 = java lang throwable $ r3 <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache tool ant type filter set r0 <NEXT> $ r2 = r7 filter file <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant type filter set r0 <NEXT> $ z0 = r4 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache tool ant type filter set r0 <NEXT> $ r3 = r5 no child allow <NEXT> r6 = java lang throwable $ r3 <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache tool ant type filter set r0 <NEXT> $ r2 = r7 filter <NEXT> $ r2 add element r1 <NEXT> r8 = org apache tool ant type filter set r0 <NEXT> r8 filter hash = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type mapper r0 <NEXT> r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant type path r0 <NEXT> $ z0 = r5 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache tool ant type path r0 <NEXT> $ r3 = r6 no child allow <NEXT> r7 = java lang throwable $ r3 <NEXT> throw r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = new org apache tool ant type path $ path element <NEXT> r8 = org apache tool ant type path r0 <NEXT> specialinvoke r4 < init > r8 <NEXT> r9 = org apache tool ant type path r0 <NEXT> r10 = org apache tool ant type resource collection r4 <NEXT> r9 add r10 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type path r0 <NEXT> $ r1 = r2 concat system classpath \ `` last\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache tool ant type pattern set r0 <NEXT> $ z0 = r6 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = org apache tool ant type pattern set r0 <NEXT> $ r4 = specialinvoke r7 get ref r1 <NEXT> $ r5 = $ r4 get include pattern r1 <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org apache tool ant type pattern set r0 <NEXT> specialinvoke r8 read file r1 <NEXT> r9 = org apache tool ant type pattern set r0 <NEXT> $ r2 = r9 include list <NEXT> r10 = org apache tool ant type pattern set r0 <NEXT> $ r3 = specialinvoke r10 make array $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = java lang system get security manager <NEXT> r4 = org apache tool ant type permission r0 <NEXT> r4 orig sm = $ r1 <NEXT> r5 = org apache tool ant type permission r0 <NEXT> specialinvoke r5 init <NEXT> r3 = new org apache tool ant type permission $ my s m <NEXT> r6 = org apache tool ant type permission r0 <NEXT> specialinvoke r3 < init > r6 null <NEXT> r7 = java lang security manager r3 <NEXT> java lang system set security manager r7 <NEXT> r8 = org apache tool ant type permission r0 <NEXT> r8 active = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache tool ant type property set $ property ref <NEXT> specialinvoke r4 < init > <NEXT> r4 set name r1 <NEXT> r5 = org apache tool ant type property set r0 <NEXT> r5 add propertyref r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache tool ant type property set $ property ref <NEXT> specialinvoke r4 < init > <NEXT> r4 set regex r1 <NEXT> r5 = org apache tool ant type property set r0 <NEXT> r5 add propertyref r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache tool ant type redirector element r0 <NEXT> $ z0 = r8 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = org apache tool ant type redirector element r0 <NEXT> $ r5 = r9 no child allow <NEXT> r10 = java lang throwable $ r5 <NEXT> throw r10 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org apache tool ant type redirector element r0 <NEXT> $ r2 = r11 error mapper <NEXT> if $ r2 == null goto label3 <NEXT> r12 = org apache tool ant type redirector element r0 <NEXT> $ z1 = r12 use error <NEXT> if $ z1 == 0 goto label2 <NEXT> r6 = new org apache tool ant build exception <NEXT> specialinvoke r6 < init > \ `` attribute \\\ `` error\\\ `` can not coexist with a nested < errormapper > \ `` <NEXT> r13 = java lang throwable r6 <NEXT> throw r13 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r7 = new org apache tool ant build exception <NEXT> specialinvoke r7 < init > \ `` can not have > 1 < errormapper > \ `` <NEXT> r14 = java lang throwable r7 <NEXT> throw r14 <NEXT> if $ r2 == null goto label3 <NEXT> label r15 = org apache tool ant type redirector element r0 <NEXT> r15 error mapper = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r12 = org apache tool ant type reference r0 <NEXT> $ r1 = r12 project <NEXT> if $ r1 ! = null goto label1 <NEXT> r11 = new org apache tool ant build exception <NEXT> r10 = new java lang string buffer <NEXT> specialinvoke r10 < init > <NEXT> $ r6 = r10 append \ `` no project set on reference to \ `` <NEXT> r13 = org apache tool ant type reference r0 <NEXT> $ r7 = r13 refid <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> r14 = java lang throwable r11 <NEXT> throw r14 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r15 = org apache tool ant type reference r0 <NEXT> $ r2 = r15 project <NEXT> r16 = org apache tool ant type reference r0 <NEXT> $ r3 = r16 get reference object $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type resource r0 <NEXT> r2 check attribute allow <NEXT> r3 = org apache tool ant type resource r0 <NEXT> r3 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant type resource r0 <NEXT> $ z0 = r5 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache tool ant type resource r0 <NEXT> $ r3 = r6 get check ref <NEXT> $ r4 = org apache tool ant type resource $ r3 <NEXT> $ l2 = $ r4 get last modified <NEXT> return $ l2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache tool ant type resource r0 <NEXT> $ z1 = r7 be exist <NEXT> if $ z1 == 0 goto label2 <NEXT> r8 = org apache tool ant type resource r0 <NEXT> $ r1 = r8 lastmodified <NEXT> if $ r1 ! = null goto label3 <NEXT> label return 0l <NEXT> if $ r1 ! = null goto label3 <NEXT> label r9 = org apache tool ant type resource r0 <NEXT> $ r2 = r9 lastmodified <NEXT> l0 = $ r2 long value <NEXT> $ b1 = l0 cmp 0l <NEXT> if $ b1 > = 0 goto label4 <NEXT> $ l3 = 0l <NEXT> goto label5 <NEXT> label return $ l3 <NEXT> if $ b1 > = 0 goto label4 <NEXT> label $ l3 = l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r0 ! = r1 goto label1 <NEXT> return 1 <NEXT> if r0 ! = r1 goto label1 <NEXT> label r10 = org apache tool ant type resource archive resource r0 <NEXT> $ z0 = r10 be reference <NEXT> if $ z0 == 0 goto label2 <NEXT> r11 = org apache tool ant type resource archive resource r0 <NEXT> $ r9 = r11 get check ref <NEXT> $ z4 = $ r9 equal r1 <NEXT> return $ z4 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r3 = r1 get class <NEXT> $ r4 = r0 get class <NEXT> $ z1 = $ r3 equal $ r4 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> return 0 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label r2 = org apache tool ant type resource archive resource r1 <NEXT> r12 = org apache tool ant type resource archive resource r0 <NEXT> $ r5 = r12 get archive <NEXT> $ r6 = r2 get archive <NEXT> $ z2 = $ r5 equal $ r6 <NEXT> if $ z2 == 0 goto label4 <NEXT> r13 = org apache tool ant type resource archive resource r0 <NEXT> $ r7 = r13 get name <NEXT> $ r8 = r2 get name <NEXT> $ z3 = $ r7 equal $ r8 <NEXT> if $ z3 == 0 goto label4 <NEXT> $ z5 = 1 <NEXT> goto label5 <NEXT> label return $ z5 <NEXT> if $ z3 == 0 goto label4 <NEXT> label $ z5 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant type resource comparators content r0 <NEXT> r1 binary = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ l0 = r1 get last modified <NEXT> $ l1 = r2 get last modified <NEXT> $ l2 = $ l0 - $ l1 <NEXT> $ i3 = int $ l2 <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache tool ant type resource comparators delegate resource comparator r0 <NEXT> $ z0 = r4 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache tool ant type resource comparators delegate resource comparator r0 <NEXT> $ r3 = r5 get check ref <NEXT> $ i0 = $ r3 hash code <NEXT> return $ i0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org apache tool ant type resource comparators delegate resource comparator r0 <NEXT> $ r1 = r6 v <NEXT> if $ r1 ! = null goto label2 <NEXT> $ i1 = 0 <NEXT> goto label3 <NEXT> label return $ i1 <NEXT> if $ r1 ! = null goto label2 <NEXT> label r7 = org apache tool ant type resource comparators delegate resource comparator r0 <NEXT> $ r2 = r7 v <NEXT> $ i1 = $ r2 hash code <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org apache tool ant build exception <NEXT> specialinvoke r3 < init > \ `` you can\'t change the name of a compressed resource\ `` <NEXT> r4 = java lang throwable r3 <NEXT> throw r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tool ant type resource fail fast r0 <NEXT> $ r1 = r3 wrap <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache tool ant type resource fail fast r0 <NEXT> org apache tool ant type resource fail fast fail fast r4 <NEXT> r5 = org apache tool ant type resource fail fast r0 <NEXT> $ r2 = r5 wrap <NEXT> $ z0 = $ r2 have next <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type resource file resource r0 <NEXT> r2 check attribute allow <NEXT> r3 = org apache tool ant type resource file resource r0 <NEXT> r3 file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache tool ant type resource file resource r0 <NEXT> $ z0 = r4 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache tool ant type resource file resource r0 <NEXT> $ r1 = r5 get check ref <NEXT> $ r2 = org apache tool ant type resource file resource $ r1 <NEXT> $ r3 = $ r2 get file <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org apache tool ant type resource file resource r0 <NEXT> $ r3 = r6 file <END>
<BEG> r0 = @ this <NEXT> r9 = org apache tool ant type resource file resource r0 <NEXT> $ z0 = r9 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = org apache tool ant type resource file resource r0 <NEXT> $ r5 = r10 get check ref <NEXT> $ r6 = org apache tool ant type resource $ r5 <NEXT> $ r7 = $ r6 get name <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org apache tool ant type resource file resource r0 <NEXT> r1 = r11 get base dir <NEXT> if r1 ! = null goto label2 <NEXT> r12 = org apache tool ant type resource file resource r0 <NEXT> $ r4 = r12 get not null file <NEXT> $ r8 = $ r4 get name <NEXT> goto label3 <NEXT> label return $ r8 <NEXT> if r1 ! = null goto label2 <NEXT> label $ r2 = org apache tool ant type resource file resource file_utils <NEXT> r13 = org apache tool ant type resource file resource r0 <NEXT> $ r3 = r13 get not null file <NEXT> $ r8 = $ r2 remove lead path r1 $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type resource file resource iterator r0 <NEXT> $ i1 = r2 po <NEXT> r3 = org apache tool ant type resource file resource iterator r0 <NEXT> $ r1 = r3 file <NEXT> $ i0 = lengthof $ r1 <NEXT> if $ i1 > = $ i0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 > = $ i0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = org apache tool ant type resource file r0 <NEXT> $ z0 = r12 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = org apache tool ant type resource file r0 <NEXT> $ r9 = r13 get ref <NEXT> $ r10 = $ r9 merge pattern r1 <NEXT> return $ r10 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = new org apache tool ant type pattern set <NEXT> specialinvoke r11 < init > <NEXT> r14 = org apache tool ant type resource file r0 <NEXT> $ r5 = r14 default pattern <NEXT> r11 append $ r5 r1 <NEXT> r15 = org apache tool ant type resource file r0 <NEXT> $ r6 = r15 additional pattern <NEXT> i0 = $ r6 size <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r16 = org apache tool ant type resource file r0 <NEXT> $ r7 = r16 additional pattern <NEXT> r3 = $ r7 element at i1 <NEXT> $ r8 = org apache tool ant type pattern set r3 <NEXT> r11 append $ r8 r1 <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java util zip g z i p input stream <NEXT> specialinvoke $ r2 < init > r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant type resource restrict r0 <NEXT> $ z0 = r5 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache tool ant type resource restrict r0 <NEXT> $ r3 = r6 get check ref <NEXT> $ r4 = $ r3 to string <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache tool ant type resource restrict r0 <NEXT> r7 die on circular reference <NEXT> r8 = org apache tool ant type resource restrict r0 <NEXT> $ r1 = r8 w <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tool ant type resource selector date r0 <NEXT> $ r1 = r3 millis <NEXT> if $ r1 ! = null goto label1 <NEXT> $ l0 = -1l <NEXT> goto label2 <NEXT> label return $ l0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache tool ant type resource selector date r0 <NEXT> $ r2 = r4 millis <NEXT> $ l0 = $ r2 long value <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache tool ant type resource selector date r0 <NEXT> r1 granularity = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type resource selector date r0 <NEXT> r2 when = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type resource selector instance of r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant type resource string resource r0 <NEXT> $ r1 = r2 get name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r38 = org apache tool ant type selector extend selector r0 <NEXT> $ r1 = r38 classname <NEXT> if $ r1 == null goto label8 <NEXT> r39 = org apache tool ant type selector extend selector r0 <NEXT> $ r2 = r39 classname <NEXT> $ i0 = $ r2 length <NEXT> if $ i0 < = 0 goto label8 <NEXT> label r40 = org apache tool ant type selector extend selector r0 <NEXT> $ r3 = r40 classpath <NEXT> if $ r3 ! = null goto label2 <NEXT> r41 = org apache tool ant type selector extend selector r0 <NEXT> $ r10 = r41 classname <NEXT> r32 = java lang class for name $ r10 <NEXT> goto label3 <NEXT> label $ r7 = r32 new instance <NEXT> $ r8 = org apache tool ant type selector file selector $ r7 <NEXT> r46 = org apache tool ant type selector extend selector r0 <NEXT> r46 dynselector = $ r8 <NEXT> r47 = org apache tool ant type selector extend selector r0 <NEXT> r34 = r47 get project <NEXT> if r34 == null goto label4 <NEXT> r48 = org apache tool ant type selector extend selector r0 <NEXT> $ r9 = r48 dynselector <NEXT> r34 set project reference $ r9 <NEXT> label goto label9 <NEXT> label return <NEXT> if $ r3 ! = null goto label2 <NEXT> label r42 = org apache tool ant type selector extend selector r0 <NEXT> $ r4 = r42 get project <NEXT> r43 = org apache tool ant type selector extend selector r0 <NEXT> $ r5 = r43 classpath <NEXT> r33 = $ r4 create class loader $ r5 <NEXT> r44 = org apache tool ant type selector extend selector r0 <NEXT> $ r6 = r44 classname <NEXT> r45 = java lang class loader r33 <NEXT> r32 = java lang class for name $ r6 1 r45 <NEXT> if $ i0 < = 0 goto label8 <NEXT> label r55 = org apache tool ant type selector extend selector r0 <NEXT> r55 set error \ `` there be no classname specified\ `` <END>
<BEG> r0 = @ this <NEXT> r8 = org apache tool ant type selector extend selector r0 <NEXT> $ z0 = r8 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = org apache tool ant type selector extend selector r0 <NEXT> $ r6 = r9 no child allow <NEXT> r10 = java lang throwable $ r6 <NEXT> throw r10 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org apache tool ant type selector extend selector r0 <NEXT> $ r1 = r11 classpath <NEXT> if $ r1 ! = null goto label2 <NEXT> r7 = new org apache tool ant type path <NEXT> r12 = org apache tool ant type selector extend selector r0 <NEXT> $ r5 = r12 get project <NEXT> specialinvoke r7 < init > $ r5 <NEXT> r13 = org apache tool ant type selector extend selector r0 <NEXT> r13 classpath = r7 <NEXT> label r14 = org apache tool ant type selector extend selector r0 <NEXT> $ r2 = r14 classpath <NEXT> $ r3 = $ r2 create path <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = new org apache tool ant type parameter <NEXT> specialinvoke r7 < init > <NEXT> r7 set name r1 <NEXT> $ r5 = java lang string value of r2 <NEXT> r7 set value $ r5 <NEXT> r8 = org apache tool ant type selector modifiedselector modified selector r0 <NEXT> $ r6 = r8 config parameter <NEXT> $ r6 add r7 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = org apache tool ant type selector none selector r0 <NEXT> r7 validate <NEXT> r8 = org apache tool ant type selector none selector r0 <NEXT> r4 = r8 selector element <NEXT> label $ z1 = r4 have more element <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 = r4 next element <NEXT> $ r6 = org apache tool ant type selector file selector $ r5 <NEXT> z0 = $ r6 be select r1 r2 r3 <NEXT> if z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type selector select selector r0 <NEXT> r2 unless property = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool ant type tar file set r0 <NEXT> specialinvoke r1 check tar file set attribute allow <NEXT> r2 = org apache tool ant type tar file set r0 <NEXT> r2 user id set = 1 <NEXT> r3 = org apache tool ant type tar file set r0 <NEXT> r3 uid = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type tar file set r0 <NEXT> specialinvoke r2 check tar file set attribute allow <NEXT> r3 = org apache tool ant type tar file set r0 <NEXT> r3 group name set = 1 <NEXT> r4 = org apache tool ant type tar file set r0 <NEXT> r4 group name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool ant type tar file set r0 <NEXT> specialinvoke r1 check tar file set attribute allow <NEXT> r2 = org apache tool ant type tar file set r0 <NEXT> r2 group id set = 1 <NEXT> r3 = org apache tool ant type tar file set r0 <NEXT> r3 gid = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = org apache tool ant type tar file set r0 <NEXT> r18 die on circular reference r1 <NEXT> r19 = org apache tool ant type tar file set r0 <NEXT> $ r3 = r19 get refid <NEXT> r2 = $ r3 get reference object r1 <NEXT> $ z0 = r2 instanceof org apache tool ant type tar file set <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r12 = org apache tool ant type abstract file set r2 <NEXT> return $ r12 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r2 instanceof org apache tool ant type file set <NEXT> if $ z1 == 0 goto label2 <NEXT> r15 = new org apache tool ant type tar file set <NEXT> $ r11 = org apache tool ant type file set r2 <NEXT> specialinvoke r15 < init > $ r11 <NEXT> r20 = org apache tool ant type tar file set r0 <NEXT> r21 = org apache tool ant type archive file set r15 <NEXT> r20 configure file set r21 <NEXT> r22 = org apache tool ant type abstract file set r15 <NEXT> return r22 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r16 = new java lang string buffer <NEXT> specialinvoke r16 < init > <NEXT> r23 = org apache tool ant type tar file set r0 <NEXT> $ r5 = r23 get refid <NEXT> $ r6 = $ r5 get ref id <NEXT> $ r7 = r16 append $ r6 <NEXT> $ r8 = $ r7 append \ `` doesn\'t denote a tarfileset or a fileset\ `` <NEXT> r14 = $ r8 to string <NEXT> r17 = new org apache tool ant build exception <NEXT> specialinvoke r17 < init > r14 <NEXT> r24 = java lang throwable r17 <NEXT> throw r24 <END>
<BEG> l0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> $ r0 = org apache tool ant type time comparison file_utils <NEXT> $ l2 = $ r0 get file timestamp granularity <NEXT> $ i3 = org apache tool ant type time comparison compare l0 l1 $ l2 <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type zip file set r0 <NEXT> specialinvoke r2 check zip file set attribute allow <NEXT> r3 = org apache tool ant type zip file set r0 <NEXT> r3 encode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = org apache tool ant type zip file set r0 <NEXT> r18 die on circular reference r1 <NEXT> r19 = org apache tool ant type zip file set r0 <NEXT> $ r3 = r19 get refid <NEXT> r2 = $ r3 get reference object r1 <NEXT> $ z0 = r2 instanceof org apache tool ant type zip file set <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r12 = org apache tool ant type abstract file set r2 <NEXT> return $ r12 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r2 instanceof org apache tool ant type file set <NEXT> if $ z1 == 0 goto label2 <NEXT> r15 = new org apache tool ant type zip file set <NEXT> $ r11 = org apache tool ant type file set r2 <NEXT> specialinvoke r15 < init > $ r11 <NEXT> r20 = org apache tool ant type zip file set r0 <NEXT> r21 = org apache tool ant type archive file set r15 <NEXT> r20 configure file set r21 <NEXT> r22 = org apache tool ant type abstract file set r15 <NEXT> return r22 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r16 = new java lang string buffer <NEXT> specialinvoke r16 < init > <NEXT> r23 = org apache tool ant type zip file set r0 <NEXT> $ r5 = r23 get refid <NEXT> $ r6 = $ r5 get ref id <NEXT> $ r7 = r16 append $ r6 <NEXT> $ r8 = $ r7 append \ `` doesn\'t denote a zipfileset or a fileset\ `` <NEXT> r14 = $ r8 to string <NEXT> r17 = new org apache tool ant build exception <NEXT> specialinvoke r17 < init > r14 <NEXT> r24 = java lang throwable r17 <NEXT> throw r24 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache tool ant type zip file set r0 <NEXT> $ z0 = r6 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = org apache tool ant type zip file set r0 <NEXT> $ r2 = r7 get project <NEXT> r8 = org apache tool ant type zip file set r0 <NEXT> $ r3 = r8 get ref $ r2 <NEXT> $ r4 = org apache tool ant type zip file set $ r3 <NEXT> $ r5 = $ r4 clone <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = specialinvoke r0 clone <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant util concat resource input stream r0 <NEXT> r1 ignore error = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant util container mapper r0 <NEXT> r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string buffer <NEXT> specialinvoke r8 < init > <NEXT> i2 = 0 <NEXT> label r9 = org apache tool ant util dewey decimal r0 <NEXT> $ r3 = r9 component <NEXT> $ i0 = lengthof $ r3 <NEXT> if i2 > = $ i0 goto label3 <NEXT> if i2 == 0 goto label2 <NEXT> r8 append 46 <NEXT> label r10 = org apache tool ant util dewey decimal r0 <NEXT> $ r5 = r10 component <NEXT> $ i1 = $ r5 [ i2 ] <NEXT> r8 append $ i1 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i0 goto label3 <NEXT> label $ r4 = r8 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache tool ant util facade facade task helper r0 <NEXT> $ r1 = r4 user choice <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org apache tool ant util facade facade task helper r0 <NEXT> $ r3 = r5 user choice <NEXT> goto label3 <NEXT> label return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label r6 = org apache tool ant util facade facade task helper r0 <NEXT> $ r2 = r6 magic value <NEXT> if $ r2 == null goto label2 <NEXT> r7 = org apache tool ant util facade facade task helper r0 <NEXT> $ r3 = r7 magic value <NEXT> if $ r2 == null goto label2 <NEXT> label r8 = org apache tool ant util facade facade task helper r0 <NEXT> $ r3 = r8 default value <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant util facade implementation specific argument r0 <NEXT> r2 impl = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = org apache tool ant util file utils r0 <NEXT> $ r4 = r5 create temp file r1 r2 r3 0 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = r1 get absolute path <NEXT> r7 = org apache tool ant util file utils r0 <NEXT> $ r4 = r7 normalize $ r3 <NEXT> $ r5 = r2 get absolute path <NEXT> r8 = org apache tool ant util file utils r0 <NEXT> $ r6 = r8 normalize $ r5 <NEXT> $ z0 = $ r4 equal $ r6 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r2 exist <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z4 = r2 delete <NEXT> if $ z4 ! = 0 goto label1 <NEXT> r25 = new java io i o exception <NEXT> r24 = new java lang string buffer <NEXT> specialinvoke r24 < init > <NEXT> $ r19 = r24 append \ `` fail to delete \ `` <NEXT> $ r20 = $ r19 append r2 <NEXT> $ r21 = $ r20 append \ `` while try to rename \ `` <NEXT> $ r22 = $ r21 append r1 <NEXT> $ r23 = $ r22 to string <NEXT> specialinvoke r25 < init > $ r23 <NEXT> throw r25 <NEXT> if $ z4 ! = 0 goto label1 <NEXT> label r3 = r2 get parent file <NEXT> if r3 == null goto label2 <NEXT> $ z2 = r3 exist <NEXT> if $ z2 ! = 0 goto label2 <NEXT> $ z3 = r3 mkdirs <NEXT> if $ z3 ! = 0 goto label2 <NEXT> r27 = new java io i o exception <NEXT> r26 = new java lang string buffer <NEXT> specialinvoke r26 < init > <NEXT> $ r12 = r26 append \ `` fail to create directory \ `` <NEXT> $ r13 = $ r12 append r3 <NEXT> $ r14 = $ r13 append \ `` while try to rename \ `` <NEXT> $ r15 = $ r14 append r1 <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke r27 < init > $ r16 <NEXT> throw r27 <NEXT> if $ z3 ! = 0 goto label2 <NEXT> label $ z5 = r1 rename to r2 <NEXT> if $ z5 ! = 0 goto label3 <NEXT> r30 = org apache tool ant util file utils r0 <NEXT> r30 copy file r1 r2 <NEXT> $ z1 = r1 delete <NEXT> if $ z1 ! = 0 goto label3 <NEXT> r29 = new java io i o exception <NEXT> r28 = new java lang string buffer <NEXT> specialinvoke r28 < init > <NEXT> $ r6 = r28 append \ `` fail to delete \ `` <NEXT> $ r7 = $ r6 append r1 <NEXT> $ r8 = $ r7 append \ `` while try to rename it \ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r29 < init > $ r9 <NEXT> throw r29 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label return <END>
<BEG> r0 = java lang thread current thread <NEXT> $ r1 = r0 get context class loader <NEXT> return $ r1 <END>
<BEG> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = org apache tool ant util reflect wrapper r0 <NEXT> $ r4 = r6 obj <NEXT> $ r5 = org apache tool ant util reflect util invoke $ r4 r1 r2 r3 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string buffer <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache tool ant util script runner base r0 <NEXT> $ r3 = r8 script <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache tool ant util script runner base r0 <NEXT> r9 script = $ r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org apache tool ant util script runner helper r0 <NEXT> r1 = specialinvoke r8 get runner <NEXT> r9 = org apache tool ant util script runner helper r0 <NEXT> $ r2 = r9 src file <NEXT> if $ r2 == null goto label1 <NEXT> r10 = org apache tool ant util script runner helper r0 <NEXT> $ r7 = r10 src file <NEXT> r1 set src $ r7 <NEXT> label r11 = org apache tool ant util script runner helper r0 <NEXT> $ r3 = r11 text <NEXT> if $ r3 == null goto label2 <NEXT> r12 = org apache tool ant util script runner helper r0 <NEXT> $ r6 = r12 text <NEXT> r1 add text $ r6 <NEXT> label r13 = org apache tool ant util script runner helper r0 <NEXT> $ z0 = r13 set bean <NEXT> if $ z0 == 0 goto label3 <NEXT> r14 = org apache tool ant util script runner helper r0 <NEXT> $ r5 = r14 project component <NEXT> r1 bind to component $ r5 <NEXT> goto label4 <NEXT> label return r1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r15 = org apache tool ant util script runner helper r0 <NEXT> $ r4 = r15 project component <NEXT> r1 bind to component minimum $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache tool ant util watchdog r0 <NEXT> r4 stop = 0 <NEXT> r3 = new java lang thread <NEXT> specialinvoke r3 < init > r0 \ `` watchdog\ `` <NEXT> r3 set daemon 1 <NEXT> r3 start <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool tar tar buffer r0 <NEXT> r1 debug = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool tar tar entry r0 <NEXT> $ i0 = r1 user id <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new java lang string buffer <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org apache tool tar tar entry r0 <NEXT> r4 group name = r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tool tar tar entry r0 <NEXT> $ b0 = r3 link flag <NEXT> if $ b0 ! = 76 goto label1 <NEXT> r4 = org apache tool tar tar entry r0 <NEXT> $ r1 = r4 name <NEXT> $ r2 = $ r1 to string <NEXT> $ z0 = $ r2 equal \ `` @ long link\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r18 = org apache tool tar tar output stream r0 <NEXT> $ i0 = r18 assem len <NEXT> if $ i0 < = 0 goto label3 <NEXT> r19 = org apache tool tar tar output stream r0 <NEXT> i11 = r19 assem len <NEXT> label r20 = org apache tool tar tar output stream r0 <NEXT> $ r12 = r20 assem buf <NEXT> $ i6 = lengthof $ r12 <NEXT> if i11 > = $ i6 goto label2 <NEXT> r21 = org apache tool tar tar output stream r0 <NEXT> $ r15 = r21 assem buf <NEXT> $ r15 [ i11 ] = 0 <NEXT> i11 = i11 + 1 <NEXT> goto label1 <NEXT> if i11 > = $ i6 goto label2 <NEXT> label r22 = org apache tool tar tar output stream r0 <NEXT> $ r14 = r22 buffer <NEXT> r23 = org apache tool tar tar output stream r0 <NEXT> $ r13 = r23 assem buf <NEXT> $ r14 write record $ r13 <NEXT> r24 = org apache tool tar tar output stream r0 <NEXT> $ l9 = r24 curr bytes <NEXT> r25 = org apache tool tar tar output stream r0 <NEXT> $ i7 = r25 assem len <NEXT> $ l8 = long $ i7 <NEXT> $ l10 = $ l9 + $ l8 <NEXT> r26 = org apache tool tar tar output stream r0 <NEXT> r26 curr bytes = $ l10 <NEXT> r27 = org apache tool tar tar output stream r0 <NEXT> r27 assem len = 0 <NEXT> label r28 = org apache tool tar tar output stream r0 <NEXT> $ l2 = r28 curr bytes <NEXT> r29 = org apache tool tar tar output stream r0 <NEXT> $ l1 = r29 curr size <NEXT> $ b3 = $ l2 cmp $ l1 <NEXT> if $ b3 > = 0 goto label4 <NEXT> r17 = new java io i o exception <NEXT> r16 = new java lang string buffer <NEXT> specialinvoke r16 < init > <NEXT> $ r3 = r16 append \ `` entry \'\ `` <NEXT> r30 = org apache tool tar tar output stream r0 <NEXT> $ r4 = r30 curr name <NEXT> $ r5 = $ r3 append $ r4 <NEXT> $ r6 = $ r5 append \ `` \ ' close at \'\ `` <NEXT> r31 = org apache tool tar tar output stream r0 <NEXT> $ l4 = r31 curr bytes <NEXT> $ r7 = $ r6 append $ l4 <NEXT> $ r8 = $ r7 append \ `` \ ' before the \'\ `` <NEXT> r32 = org apache tool tar tar output stream r0 <NEXT> $ l5 = r32 curr size <NEXT> $ r9 = $ r8 append $ l5 <NEXT> $ r10 = $ r9 append \ `` \ ' byte specify in the header be written\ `` <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r17 < init > $ r11 <NEXT> throw r17 <NEXT> if $ b3 > = 0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> l11 = 0l <NEXT> z0 = 1 <NEXT> i2 = i0 + i1 <NEXT> i12 = i0 <NEXT> label if i12 > = i2 goto label7 <NEXT> $ b3 = r0 [ i12 ] <NEXT> if $ b3 ! = 0 goto label2 <NEXT> goto label7 <NEXT> label return l11 <NEXT> if $ b3 ! = 0 goto label2 <NEXT> label $ b4 = r0 [ i12 ] <NEXT> if $ b4 == 32 goto label3 <NEXT> $ b10 = r0 [ i12 ] <NEXT> if $ b10 ! = 48 goto label5 <NEXT> label if z0 == 0 goto label4 <NEXT> goto label6 <NEXT> label i12 = i12 + 1 <NEXT> goto label1 <NEXT> label if z0 == 0 goto label4 <NEXT> label $ b5 = r0 [ i12 ] <NEXT> if $ b5 ! = 32 goto label5 <NEXT> label z0 = 0 <NEXT> $ l9 = l11 < < 3 <NEXT> $ b6 = r0 [ i12 ] <NEXT> $ i7 = $ b6 - 48 <NEXT> $ l8 = long $ i7 <NEXT> l11 = $ l9 + $ l8 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool zip asi extra field r0 <NEXT> r1 uid = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool zip asi extra field r0 <NEXT> $ i0 = r1 mode <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache tool zip jar marker no_bytes <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool zip unrecognized extra field r0 <NEXT> $ r1 = r2 local data <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool zip zip entry r0 <NEXT> $ l0 = r1 external attribute <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tool zip zip entry r0 <NEXT> r1 = r3 get extra <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = newarray byte [ 0 ] <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool zip zip long r0 <NEXT> $ l0 = r2 value <NEXT> $ r1 = org apache tool zip zip long get bytes $ l0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool zip zip output stream r0 <NEXT> r1 method = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool zip zip short r0 <NEXT> $ i0 = r1 value <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant ant type definition r0 <NEXT> $ z0 = r1 restrict <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = org apache tool ant input secure input handler r0 <NEXT> r2 = r12 get prompt r1 <NEXT> label r9 = org apache tool ant util reflect util invoke static class \ `` ljava lang system \ <NEXT> label $ r4 = java lang object [ ] null <NEXT> $ r5 = org apache tool ant util reflect util invoke r9 \ `` read password\ <NEXT> $ r6 = char [ ] $ r5 <NEXT> r3 = char [ ] $ r6 <NEXT> r11 = new java lang string <NEXT> specialinvoke r11 < init > r3 <NEXT> r1 set input r11 <NEXT> java util array fill r3 32 <NEXT> $ z0 = r1 be input valid <NEXT> if $ z0 == 0 goto label2 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> $ r0 = org apache tool ant main short ant version <NEXT> if $ r0 ! = null goto label1 <NEXT> org apache tool ant main get ant version <NEXT> label $ r1 = org apache tool ant main short ant version <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache tool ant project helper prefix separator <NEXT> $ r1 set r0 <NEXT> return <END>
<BEG> z0 = @ parameter0 <NEXT> $ r0 = org apache tool ant project helper in include mode <NEXT> $ r1 = java lang boolean value of z0 <NEXT> $ r0 set $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org apache tool ant property helper null or empty r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r2 = org apache tool ant property helper r0 <NEXT> $ z1 = specialinvoke r2 eval a boolean or property name r1 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs augment reference r0 <NEXT> specialinvoke r1 restore wrapper id <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache tool ant taskdefs condition be last modified r0 <NEXT> $ r2 = r5 resource <NEXT> if $ r2 == null goto label1 <NEXT> r4 = new org apache tool ant build exception <NEXT> specialinvoke r4 < init > \ `` only one resource can be tested\ `` <NEXT> r6 = java lang throwable r4 <NEXT> throw r6 <NEXT> if $ r2 == null goto label1 <NEXT> label r7 = org apache tool ant taskdefs condition be last modified r0 <NEXT> r7 resource = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = @ parameter0 <NEXT> $ r1 = \ `` native-encoding\ `` <NEXT> $ z0 = $ r1 equal r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = null <NEXT> label r3 = org apache tool ant taskdefs expand r0 <NEXT> r3 encode = r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs expand r0 <NEXT> r1 internal set scan for unicode extra field z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = \ `` include\ `` <NEXT> r3 = org apache tool ant taskdefs import task r0 <NEXT> $ r2 = r3 get task type <NEXT> $ z0 = $ r1 equal $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs jar r0 <NEXT> r1 flatten class path = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> r0 add reference \ `` ant vm launcher\ <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tool ant taskdefs length r0 <NEXT> $ r1 = r3 trim <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org apache tool ant taskdefs length r0 <NEXT> $ r2 = r4 trim <NEXT> $ z0 = $ r2 boolean value <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache tool ant taskdefs local r0 <NEXT> $ r1 = r7 name <NEXT> if $ r1 ! = null goto label1 <NEXT> r6 = new org apache tool ant build exception <NEXT> specialinvoke r6 < init > \ `` miss attribute name\ `` <NEXT> r8 = java lang throwable r6 <NEXT> throw r8 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r9 = org apache tool ant taskdefs local r0 <NEXT> $ r2 = r9 get project <NEXT> $ r3 = org apache tool ant property local property get $ r2 <NEXT> r10 = org apache tool ant taskdefs local r0 <NEXT> $ r4 = r10 name <NEXT> $ r3 add local $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs mkdir r0 <NEXT> $ r1 = r2 dir <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = org apache tool ant taskdefs optional cab file_utils <NEXT> r2 = $ r4 create temp file \ `` ant\ <NEXT> r15 = null <NEXT> label $ r5 = new java io buffer writer <NEXT> $ r6 = new java io file writer <NEXT> specialinvoke $ r6 < init > r2 <NEXT> specialinvoke $ r5 < init > $ r6 <NEXT> r15 = $ r5 <NEXT> i0 = r1 size <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> $ r7 = new java lang string builder <NEXT> specialinvoke $ r7 < init > <NEXT> $ r8 = $ r7 append 34 <NEXT> $ r9 = r1 element at i1 <NEXT> $ r10 = $ r9 to string <NEXT> $ r11 = $ r8 append $ r10 <NEXT> $ r12 = $ r11 append 34 <NEXT> $ r13 = $ r12 to string <NEXT> $ r5 write $ r13 <NEXT> $ r5 new line <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label3 <NEXT> label org apache tool ant util file utils close $ r5 <NEXT> goto label6 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional ccm c c m create task r0 <NEXT> $ r1 = r2 platform <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional clearcase c c checkin r0 <NEXT> $ r1 = r2 m cfile <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs optional clearcase c c checkin r0 <NEXT> $ z0 = r1 m ptime <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs optional clearcase c c checkout r0 <NEXT> r1 m ndata = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs optional clearcase c c lock r0 <NEXT> $ z0 = r1 m obsolete <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional clearcase c c lock r0 <NEXT> $ r1 = r2 m comment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional clearcase c c mkattr r0 <NEXT> r2 m type name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs optional clearcase c c mkelem r0 <NEXT> r1 m checkin = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional clearcase c c mkelem r0 <NEXT> r2 m eltype = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional clearcase c c mklabel r0 <NEXT> r2 m v o b = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional clearcase c c mklabel r0 <NEXT> $ r1 = r2 m v o b <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tool ant taskdefs optional clearcase c c mklbtype r0 <NEXT> $ z0 = r1 m global <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional clearcase c c rmtype r0 <NEXT> $ r1 = r2 m type kind <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional clearcase clear case r0 <NEXT> $ r1 = r2 mview path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 read unsigned short <NEXT> r2 = org apache tool ant taskdefs optional depend constantpool class c p info r0 <NEXT> r2 index = $ i0 <NEXT> r3 = org apache tool ant taskdefs optional depend constantpool class c p info r0 <NEXT> r3 class name = \ `` unresolved\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new java lang double <NEXT> $ d0 = r1 read double <NEXT> specialinvoke r3 < init > $ d0 <NEXT> r4 = org apache tool ant taskdefs optional depend constantpool double c p info r0 <NEXT> r4 set value r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0 <NEXT> $ i0 = r9 class index <NEXT> $ r4 = r1 get entry $ i0 <NEXT> r2 = org apache tool ant taskdefs optional depend constantpool class c p info $ r4 <NEXT> r2 resolve r1 <NEXT> $ r5 = r2 get class name <NEXT> r10 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0 <NEXT> r10 field class name = $ r5 <NEXT> r11 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0 <NEXT> $ i1 = r11 name and type index <NEXT> $ r6 = r1 get entry $ i1 <NEXT> r3 = org apache tool ant taskdefs optional depend constantpool name and type c p info $ r6 <NEXT> r3 resolve r1 <NEXT> $ r7 = r3 get name <NEXT> r12 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0 <NEXT> r12 field name = $ r7 <NEXT> $ r8 = r3 get type <NEXT> r13 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0 <NEXT> r13 field type = $ r8 <NEXT> specialinvoke r0 resolve r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional depend constantpool field ref c p info r0 <NEXT> $ r1 = r2 field name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional depend constantpool interface method ref c p info r0 <NEXT> $ r1 = r2 interface method class name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional depend constantpool method ref c p info r0 <NEXT> $ r1 = r2 method class name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs optional echo property r0 <NEXT> r1 failonerror = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 == 0 goto label1 <NEXT> r6 = org apache tool ant taskdefs optional echo property r0 <NEXT> r6 regex = r1 <NEXT> r5 = new org apache tool ant type property set <NEXT> specialinvoke r5 < init > <NEXT> r7 = org apache tool ant taskdefs optional echo property r0 <NEXT> $ r4 = r7 get project <NEXT> r5 set project $ r4 <NEXT> r5 append regex r1 <NEXT> r8 = org apache tool ant taskdefs optional echo property r0 <NEXT> r8 add propertyset r5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs optional ejb borland deployment tool r0 <NEXT> r1 verify = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional ejb borland deployment tool r0 <NEXT> r2 borland d t d = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs optional ejb jonas deployment tool r0 <NEXT> r1 nogenic = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional ejb weblogic deployment tool r0 <NEXT> r2 wl classpath = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional ejb weblogic deployment tool r0 <NEXT> r2 ejbc class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = new org apache tool ant taskdefs optional ejb websphere deployment tool $ 1 <NEXT> r13 = org apache tool ant taskdefs optional ejb websphere deployment tool r0 <NEXT> $ r6 = r13 get task <NEXT> r14 = org apache tool ant taskdefs optional ejb websphere deployment tool r0 <NEXT> specialinvoke r12 < init > r14 $ r6 r1 <NEXT> r15 = org apache tool ant taskdefs optional ejb websphere deployment tool r0 <NEXT> $ r7 = r15 get config <NEXT> $ r8 = $ r7 dtd location <NEXT> r3 = $ r8 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r9 = r3 next <NEXT> r4 = org apache tool ant taskdefs optional ejb ejb jar $ d t d location $ r9 <NEXT> $ r10 = r4 get public id <NEXT> $ r11 = r4 get location <NEXT> r16 = org apache tool ant taskdefs optional ejb descriptor handler r12 <NEXT> r16 register d t d $ r10 $ r11 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r17 = org apache tool ant taskdefs optional ejb descriptor handler r12 <NEXT> return r17 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache tool ant taskdefs optional extension extension optional_extension_list <NEXT> $ r2 = org apache tool ant taskdefs optional extension extension get list r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional extension extension adapter r0 <NEXT> specialinvoke r2 verify not a reference <NEXT> r3 = org apache tool ant taskdefs optional extension extension adapter r0 <NEXT> r3 extension name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant taskdefs optional extension extension adapter r0 <NEXT> specialinvoke r4 verify not a reference <NEXT> r3 = new org apache tool ant util dewey decimal <NEXT> specialinvoke r3 < init > r1 <NEXT> r5 = org apache tool ant taskdefs optional extension extension adapter r0 <NEXT> r5 implementation version = r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional extension jar lib resolve task r0 <NEXT> r2 property name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> $ r2 = r7 append \ `` location [ \ `` <NEXT> r8 = org apache tool ant taskdefs optional extension resolvers location resolver r0 <NEXT> $ r3 = r8 location <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` ] \ `` <NEXT> $ r6 = $ r5 to string <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional i18n translate r0 <NEXT> r2 start token = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r18 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0 <NEXT> $ r1 = r18 task <NEXT> $ r2 = $ r1 get action <NEXT> if $ r2 ! = null goto label1 <NEXT> r14 = new org apache tool ant build exception <NEXT> specialinvoke r14 < init > \ `` the \\\ `` action\\\ `` attribute must be set\ `` <NEXT> r19 = java lang throwable r14 <NEXT> throw r19 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r20 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0 <NEXT> $ z0 = r20 be action valid <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r16 = new org apache tool ant build exception <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r7 = r15 append \ `` invalid action \\\ `` \ `` <NEXT> r21 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0 <NEXT> $ r8 = r21 task <NEXT> $ r9 = $ r8 get action <NEXT> $ r10 = $ r7 append $ r9 <NEXT> $ r11 = $ r10 append \ `` \\\ `` passed\ `` <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke r16 < init > $ r12 <NEXT> r22 = java lang throwable r16 <NEXT> throw r22 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r23 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0 <NEXT> $ r3 = r23 classpath <NEXT> if $ r3 ! = null goto label3 <NEXT> r17 = new org apache tool ant build exception <NEXT> specialinvoke r17 < init > \ `` the classpath attribute must be set\ `` <NEXT> r24 = java lang throwable r17 <NEXT> throw r24 <NEXT> if $ r3 ! = null goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional j2ee abstract hot deployment tool r0 <NEXT> $ r1 = r2 password <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z1 = 0 <NEXT> r6 = org apache tool ant taskdefs optional j2ee jonas hot deployment tool r0 <NEXT> $ r2 = r6 get task <NEXT> r1 = $ r2 get action <NEXT> i1 = 0 <NEXT> label $ r3 = org apache tool ant taskdefs optional j2ee jonas hot deployment tool valid_actions <NEXT> $ i0 = lengthof $ r3 <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r4 = org apache tool ant taskdefs optional j2ee jonas hot deployment tool valid_actions <NEXT> $ r5 = $ r4 [ i1 ] <NEXT> $ z0 = r1 equal $ r5 <NEXT> if $ z0 == 0 goto label2 <NEXT> z1 = 1 <NEXT> goto label3 <NEXT> label return z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional j2ee server deploy r0 <NEXT> r2 source = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0 <NEXT> $ r2 = r4 get task <NEXT> r1 = $ r2 get action <NEXT> r3 = null <NEXT> $ z0 = r1 equal \ `` deploy\ `` <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = r1 equal \ `` update\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> label r5 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0 <NEXT> r3 = r5 build deploy args <NEXT> goto label5 <NEXT> label return r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r1 equal \ `` delete\ `` <NEXT> if $ z2 ! = 0 goto label3 <NEXT> $ z3 = r1 equal \ `` undeploy\ `` <NEXT> if $ z3 == 0 goto label4 <NEXT> label r6 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0 <NEXT> r3 = r6 build undeploy args <NEXT> if $ z3 == 0 goto label4 <NEXT> label $ z4 = r1 equal \ `` list\ `` <NEXT> if $ z4 == 0 goto label5 <NEXT> r7 = org apache tool ant taskdefs optional j2ee web logic hot deployment tool r0 <NEXT> r3 = r7 build list args <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r5 = org apache tool ant taskdefs optional javacc j j doc r0 <NEXT> $ r1 = r5 optional attrs <NEXT> if z0 == 0 goto label1 <NEXT> $ r4 = java lang boolean true <NEXT> goto label2 <NEXT> label $ r1 put \ `` text\ <NEXT> r6 = org apache tool ant taskdefs optional javacc j j doc r0 <NEXT> r6 plain text = z0 <NEXT> return <NEXT> if z0 == 0 goto label1 <NEXT> label $ r4 = java lang boolean false <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r5 = org apache tool ant taskdefs optional javacc j j doc r0 <NEXT> $ r1 = r5 optional attrs <NEXT> if z0 == 0 goto label1 <NEXT> $ r4 = java lang boolean true <NEXT> goto label2 <NEXT> label $ r1 put \ `` one_table\ <NEXT> return <NEXT> if z0 == 0 goto label1 <NEXT> label $ r4 = java lang boolean false <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant taskdefs optional javacc j j tree r0 <NEXT> $ r2 = r4 optional attrs <NEXT> $ r2 put \ `` node_prefix\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional javah r0 <NEXT> r2 cl = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional jsp jsp c r0 <NEXT> $ r1 = r2 uriroot <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs optional net set proxy r0 <NEXT> r1 sock proxy port = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional pvc pvc r0 <NEXT> $ r1 = r2 filename format <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional pvc pvc r0 <NEXT> r2 filename format = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional pvc pvc r0 <NEXT> r2 line start = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional pvc pvc r0 <NEXT> $ r1 = r2 pvc project <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional pvc pvc r0 <NEXT> r2 revision = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache tool ant taskdefs optional replace reg exp r0 <NEXT> $ r2 = r8 regex <NEXT> if $ r2 == null goto label1 <NEXT> r6 = new org apache tool ant build exception <NEXT> specialinvoke r6 < init > \ `` only one regular expression be allowed\ `` <NEXT> r9 = java lang throwable r6 <NEXT> throw r9 <NEXT> if $ r2 == null goto label1 <NEXT> label r7 = new org apache tool ant type regular expression <NEXT> specialinvoke r7 < init > <NEXT> r10 = org apache tool ant taskdefs optional replace reg exp r0 <NEXT> r10 regex = r7 <NEXT> r11 = org apache tool ant taskdefs optional replace reg exp r0 <NEXT> $ r4 = r11 regex <NEXT> $ r4 set pattern r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional rpm r0 <NEXT> r2 output = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = new java lang string builder <NEXT> specialinvoke r18 < init > <NEXT> $ r4 = r18 append \ `` add schema \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 to string <NEXT> r21 = org apache tool ant taskdefs optional schema validate r0 <NEXT> r21 log $ r6 4 <NEXT> r1 validate namespace <NEXT> r22 = org apache tool ant taskdefs optional schema validate r0 <NEXT> $ r7 = r22 schema location <NEXT> $ r8 = r1 get namespace <NEXT> $ r9 = $ r7 get $ r8 <NEXT> r2 = org apache tool ant taskdefs optional schema validate $ schema location $ r9 <NEXT> if r2 == null goto label1 <NEXT> $ z0 = r2 equal r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r20 = new org apache tool ant build exception <NEXT> r19 = new java lang string builder <NEXT> specialinvoke r19 < init > <NEXT> $ r15 = r19 append \ `` duplicate declaration of schema \ `` <NEXT> $ r16 = $ r15 append r1 <NEXT> $ r17 = $ r16 to string <NEXT> specialinvoke r20 < init > $ r17 <NEXT> r23 = java lang throwable r20 <NEXT> throw r23 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r24 = org apache tool ant taskdefs optional schema validate r0 <NEXT> $ r10 = r24 schema location <NEXT> $ r11 = r1 get namespace <NEXT> $ r10 put $ r11 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = javax xml parser s a x parser factory new instance <NEXT> r1 set validate 1 <NEXT> r1 set namespace aware 1 <NEXT> label r6 = r1 new s a x parser <NEXT> r7 = r6 get x m l reader <NEXT> label goto label5 <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org apache tool ant taskdefs optional script script def r0 <NEXT> r3 execute script r1 r2 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs optional script script def r0 <NEXT> $ r2 = r3 helper <NEXT> $ r2 set manager r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r17 = org apache tool ant taskdefs optional script script def base r0 <NEXT> r3 = specialinvoke r17 get script <NEXT> $ z0 = r3 be attribute supported r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r16 = new org apache tool ant build exception <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r8 = r15 append \ `` < \ `` <NEXT> r18 = org apache tool ant taskdefs optional script script def base r0 <NEXT> $ r9 = r18 get task type <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 append \ `` > do not support the \\\ `` \ `` <NEXT> $ r12 = $ r11 append r1 <NEXT> $ r13 = $ r12 append \ `` \\\ `` attribute\ `` <NEXT> $ r14 = $ r13 to string <NEXT> specialinvoke r16 < init > $ r14 <NEXT> r19 = java lang throwable r16 <NEXT> throw r19 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r20 = org apache tool ant taskdefs optional script script def base r0 <NEXT> $ r4 = r20 attribute <NEXT> $ r4 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org apache tool ant build exception <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = java lang throwable r3 <NEXT> throw r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional so so r0 <NEXT> $ r1 = r2 v server path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional so so r0 <NEXT> $ r1 = r2 sos home <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set internal label r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set internal version r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs optional test funtest r0 <NEXT> $ r2 = r3 setup <NEXT> r4 = org apache tool ant taskdefs optional test funtest r0 <NEXT> specialinvoke r4 log override \ `` setup\ <NEXT> r5 = org apache tool ant taskdefs optional test funtest r0 <NEXT> r5 setup = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional test funtest r0 <NEXT> $ r1 = r2 teardown exception <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = new org apache tool ant build exception <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> r11 = org apache tool ant taskdefs optional unix abstract access task r0 <NEXT> $ r4 = r11 get task type <NEXT> $ r5 = r9 append $ r4 <NEXT> $ r6 = $ r5 append \ `` doesn\'t support the command attribute\ `` <NEXT> $ r7 = $ r6 to string <NEXT> r12 = org apache tool ant taskdefs optional unix abstract access task r0 <NEXT> $ r8 = r12 get location <NEXT> specialinvoke r10 < init > $ r7 $ r8 <NEXT> r13 = java lang throwable r10 <NEXT> throw r13 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs optional unix symlink r0 <NEXT> r1 overwrite = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs optional v msvss r0 <NEXT> r2 from label = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org apache tool ant taskdefs optional v msvss r0 <NEXT> $ r1 = r8 version <NEXT> if $ r1 == null goto label1 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> $ r3 = r7 append \ `` -v\ `` <NEXT> r9 = org apache tool ant taskdefs optional v msvss r0 <NEXT> $ r4 = r9 version <NEXT> $ r5 = $ r3 append $ r4 <NEXT> $ r6 = $ r5 to string <NEXT> goto label2 <NEXT> label return $ r6 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r6 = \ `` \ `` <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional v msvssadd r0 <NEXT> $ r1 = r2 local path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> specialinvoke r0 set internal recursive z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set internal version r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set internal date r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set internal comment r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs optional x m l validate task r0 <NEXT> $ r2 = r3 create classpath <NEXT> $ r2 set refid r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant taskdefs optional x m l validate task r0 <NEXT> $ r1 = r2 xml reader <NEXT> $ z0 = $ r1 instanceof org xml sax helper parser adapter <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs patch r0 <NEXT> r1 fail on error = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs property helper task r0 <NEXT> $ r2 = specialinvoke r3 get add delegate list <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs replace r0 <NEXT> r1 fail on no replacement = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs rmic r0 <NEXT> r2 d dir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant taskdefs sign jar r0 <NEXT> r2 sig alg = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs s q l exec r0 <NEXT> $ r1 = r3 row count property <NEXT> $ r2 = java lang integer to string i0 <NEXT> r4 = org apache tool ant taskdefs s q l exec r0 <NEXT> specialinvoke r4 set property $ r1 $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache tool ant taskdefs truncate r0 <NEXT> $ r2 = specialinvoke r3 get path <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs x s l t process r0 <NEXT> r1 fail on error = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant taskdefs x s l t process r0 <NEXT> r1 fail on no resource = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache tool ant taskdefs zip current_zip_extra <NEXT> $ r2 = $ r1 get <NEXT> $ r3 = org apache tool zip zip extra field [ ] $ r2 <NEXT> $ r4 = org apache tool zip zip extra field [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type abstract file set r0 <NEXT> r2 append selector r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool ant type optional script condition r0 <NEXT> r1 value = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache tool ant type resource r0 <NEXT> $ z0 = r5 be reference <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache tool ant type resource r0 <NEXT> $ r3 = r6 get check ref <NEXT> $ r4 = org apache tool ant type resource $ r3 <NEXT> $ l2 = $ r4 get last modified <NEXT> return $ l2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache tool ant type resource r0 <NEXT> $ z1 = r7 be exist <NEXT> if $ z1 == 0 goto label2 <NEXT> r8 = org apache tool ant type resource r0 <NEXT> $ r1 = r8 lastmodified <NEXT> if $ r1 ! = null goto label3 <NEXT> label return 0l <NEXT> if $ r1 ! = null goto label3 <NEXT> label r9 = org apache tool ant type resource r0 <NEXT> $ r2 = r9 lastmodified <NEXT> l0 = $ r2 long value <NEXT> $ b1 = l0 cmp 0l <NEXT> if $ b1 > = 0 goto label4 <NEXT> $ l3 = 0l <NEXT> goto label5 <NEXT> label return $ l3 <NEXT> if $ b1 > = 0 goto label4 <NEXT> label $ l3 = l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache tool ant type resource archive r0 <NEXT> $ r3 = r4 get project <NEXT> r1 set project $ r3 <NEXT> r1 set src resource r2 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tool ant type resource selector name r0 <NEXT> r2 regex = r1 <NEXT> r3 = org apache tool ant type resource selector name r0 <NEXT> r3 reg = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tool ant type resource string resource r0 <NEXT> r4 check child allow <NEXT> r5 = org apache tool ant type resource string resource r0 <NEXT> $ r2 = r5 get project <NEXT> $ r3 = $ r2 replace property r1 <NEXT> r6 = org apache tool ant type resource string resource r0 <NEXT> r6 set value $ r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java io file separator <NEXT> $ r2 = org apache tool ant type selector selector utils tokenize path r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = new org apache tool ant type selector tokenized pattern <NEXT> r5 = org apache tool ant type selector tokenized path r0 <NEXT> $ r3 = r5 path <NEXT> r6 = org apache tool ant type selector tokenized path r0 <NEXT> $ r2 = r6 tokenized path <NEXT> specialinvoke r4 < init > $ r3 $ r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = org apache tool ant util file utils r0 <NEXT> $ r4 = r5 create temp file r1 r2 r3 0 0 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache tool ant util script runner base r0 <NEXT> $ r3 = r8 script <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache tool ant util script runner base r0 <NEXT> r9 script = $ r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org apache tool ant util vector set r0 <NEXT> specialinvoke r2 do add i0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool ant util worker ant r0 <NEXT> r1 = r2 get build exception <NEXT> if r1 == null goto label1 <NEXT> r3 = java lang throwable r1 <NEXT> throw r3 <NEXT> if r1 == null goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tool tar tar entry r0 <NEXT> $ b0 = r2 link flag <NEXT> if $ b0 ! = 75 goto label1 <NEXT> r3 = org apache tool tar tar entry r0 <NEXT> $ r1 = r3 name <NEXT> $ z0 = $ r1 equal \ `` @ long link\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i1 = i0 + 7 <NEXT> $ b2 = r0 [ $ i1 ] <NEXT> $ l3 = long $ b2 <NEXT> $ l4 = $ l3 < < 56 <NEXT> l41 = $ l4 & 9151314442816847872l <NEXT> $ i5 = i0 + 6 <NEXT> $ b6 = r0 [ $ i5 ] <NEXT> $ l7 = long $ b6 <NEXT> $ l8 = $ l7 < < 48 <NEXT> $ l9 = $ l8 & 71776119061217280l <NEXT> l42 = l41 + $ l9 <NEXT> $ i10 = i0 + 5 <NEXT> $ b11 = r0 [ $ i10 ] <NEXT> $ l12 = long $ b11 <NEXT> $ l13 = $ l12 < < 40 <NEXT> $ l14 = $ l13 & 280375465082880l <NEXT> l43 = l42 + $ l14 <NEXT> $ i15 = i0 + 4 <NEXT> $ b16 = r0 [ $ i15 ] <NEXT> $ l17 = long $ b16 <NEXT> $ l18 = $ l17 < < 32 <NEXT> $ l19 = $ l18 & 1095216660480l <NEXT> l44 = l43 + $ l19 <NEXT> $ i20 = i0 + 3 <NEXT> $ b21 = r0 [ $ i20 ] <NEXT> $ l22 = long $ b21 <NEXT> $ l23 = $ l22 < < 24 <NEXT> $ l24 = $ l23 & 4278190080l <NEXT> l45 = l44 + $ l24 <NEXT> $ i25 = i0 + 2 <NEXT> $ b26 = r0 [ $ i25 ] <NEXT> $ l27 = long $ b26 <NEXT> $ l28 = $ l27 < < 16 <NEXT> $ l29 = $ l28 & 16711680l <NEXT> l46 = l45 + $ l29 <NEXT> $ i30 = i0 + 1 <NEXT> $ b31 = r0 [ $ i30 ] <NEXT> $ l32 = long $ b31 <NEXT> $ l33 = $ l32 < < 8 <NEXT> $ l34 = $ l33 & 65280l <NEXT> l47 = l46 + $ l34 <NEXT> $ b35 = r0 [ i0 ] <NEXT> $ l36 = long $ b35 <NEXT> $ l37 = $ l36 & 255l <NEXT> l48 = l47 + $ l37 <NEXT> r1 = java math big integer value of l48 <NEXT> $ i38 = i0 + 7 <NEXT> $ b39 = r0 [ $ i38 ] <NEXT> $ b40 = $ b39 & -128 <NEXT> if $ b40 ! = -128 goto label1 <NEXT> $ r2 = r1 set bit 63 <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ b40 ! = -128 goto label1 <NEXT> label $ r2 = r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tool zip zip output stream r0 <NEXT> r1 fallback to u t f8 = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return -1 <END>
<BEG> r0 = @ this <NEXT> r4 = org antlr v4 runtime atn parse info r0 <NEXT> $ r2 = r4 atn simulator <NEXT> r1 = $ r2 get decision info <NEXT> l2 = 0l <NEXT> i3 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i3 > = $ i0 goto label2 <NEXT> $ r3 = r1 [ i3 ] <NEXT> $ l1 = $ r3 s l l_ total look <NEXT> l2 = l2 + $ l1 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label2 <NEXT> label return l2 <END>
<BEG> r0 = @ this <NEXT> r1 = org antlr v4 runtime buffer token stream r0 <NEXT> r1 seek 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org antlr v4 runtime misc interval r0 <NEXT> $ i1 = r2 a <NEXT> $ i0 = r1 a <NEXT> if $ i1 > $ i0 goto label1 <NEXT> r3 = org antlr v4 runtime misc interval r0 <NEXT> $ i3 = r3 b <NEXT> $ i2 = r1 a <NEXT> if $ i3 < $ i2 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i3 < $ i2 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r7 = new org antlr v4 runtime misc interval set <NEXT> $ r5 = newarray int [ 0 ] <NEXT> specialinvoke r7 < init > $ r5 <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r0 [ i1 ] <NEXT> r8 = org antlr v4 runtime misc int set r3 <NEXT> r7 add all r8 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r7 = org antlr v4 runtime misc interval set r0 <NEXT> $ z0 = r7 be nil <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new java lang runtime exception <NEXT> specialinvoke r6 < init > \ `` set be empty\ `` <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org antlr v4 runtime misc interval set r0 <NEXT> $ r3 = r8 interval <NEXT> r9 = org antlr v4 runtime misc interval set r0 <NEXT> $ r2 = r9 interval <NEXT> $ i0 = $ r2 size <NEXT> $ i1 = $ i0 - 1 <NEXT> $ r4 = $ r3 get $ i1 <NEXT> r1 = org antlr v4 runtime misc interval $ r4 <NEXT> $ i2 = r1 b <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 instanceof org antlr v4 runtime misc interval set <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label return 0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r2 = org antlr v4 runtime misc interval set r1 <NEXT> r5 = org antlr v4 runtime misc interval set r0 <NEXT> $ r4 = r5 interval <NEXT> $ r3 = r2 interval <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r5 = org antlr v4 runtime misc interval set r0 <NEXT> $ r2 = r5 interval <NEXT> i1 = $ r2 size <NEXT> i4 = 0 <NEXT> i5 = 0 <NEXT> label if i5 > = i1 goto label5 <NEXT> r6 = org antlr v4 runtime misc interval set r0 <NEXT> $ r3 = r6 interval <NEXT> $ r4 = $ r3 get i5 <NEXT> r1 = org antlr v4 runtime misc interval $ r4 <NEXT> i2 = r1 a <NEXT> i3 = r1 b <NEXT> i6 = i2 <NEXT> label if i6 > i3 goto label4 <NEXT> if i4 ! = i0 goto label3 <NEXT> return i6 <NEXT> if i4 ! = i0 goto label3 <NEXT> label i4 = i4 + 1 <NEXT> i6 = i6 + 1 <NEXT> goto label2 <NEXT> label if i6 > i3 goto label4 <NEXT> label i5 = i5 + 1 <NEXT> goto label1 <NEXT> label if i5 > = i1 goto label5 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org antlr v4 runtime parser r0 <NEXT> $ r2 = r4 _input <NEXT> $ r3 = $ r2 get token source <NEXT> $ r3 set token factory r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r20 = org antlr v4 runtime parser r0 <NEXT> r1 = r20 get serialize a t n <NEXT> if r1 ! = null goto label1 <NEXT> r17 = new java lang unsupported operation exception <NEXT> specialinvoke r17 < init > \ `` the current parser do not support an atn with bypass alternative \ `` <NEXT> throw r17 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r5 = org antlr v4 runtime parser bypass alt atn cache <NEXT> entermonitor $ r5 <NEXT> label $ r6 = org antlr v4 runtime parser bypass alt atn cache <NEXT> $ r7 = $ r6 get r1 <NEXT> r16 = org antlr v4 runtime atn atn $ r7 <NEXT> if r16 ! = null goto label3 <NEXT> r18 = new org antlr v4 runtime atn a t n deserialization option <NEXT> specialinvoke r18 < init > <NEXT> r18 set generate rule bypass transition 1 <NEXT> r19 = new org antlr v4 runtime atn a t n deserializer <NEXT> specialinvoke r19 < init > r18 <NEXT> $ r10 = r1 to char array <NEXT> r16 = r19 deserialize $ r10 <NEXT> $ r11 = org antlr v4 runtime parser bypass alt atn cache <NEXT> $ r11 put r1 r16 <NEXT> label exitmonitor $ r5 <NEXT> label return r16 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new org antlr v4 runtime tree terminal node impl <NEXT> specialinvoke r4 < init > r2 <NEXT> r5 = org antlr v4 runtime tree terminal node r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org antlr v4 runtime parser rule context r0 <NEXT> $ r2 = r6 child <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r7 = org antlr v4 runtime parser rule context r0 <NEXT> r7 child = r5 <NEXT> label r8 = org antlr v4 runtime parser rule context r0 <NEXT> $ r3 = r8 child <NEXT> $ r3 add r1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org antlr v4 runtime parser rule context r0 <NEXT> r5 = org antlr v4 runtime tree parse tree r1 <NEXT> $ r2 = r4 add any child r5 <NEXT> $ r3 = org antlr v4 runtime rule context $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org antlr v4 runtime parser rule context r0 <NEXT> r5 = org antlr v4 runtime tree parse tree r1 <NEXT> $ r2 = r4 add any child r5 <NEXT> $ r3 = org antlr v4 runtime rule context $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org antlr v4 runtime recognizer r0 <NEXT> r2 _interp = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org antlr v4 runtime tree pattern parse tree match r0 <NEXT> $ r1 = r2 mismatch node <NEXT> if $ r1 ! = null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org objectweb asm class visitor r0 <NEXT> $ r2 = r4 cv <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org objectweb asm class visitor r0 <NEXT> $ r3 = r5 cv <NEXT> $ r3 visit attribute r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org objectweb asm class visitor r0 <NEXT> $ i0 = r6 api <NEXT> if $ i0 == 17301504 goto label1 <NEXT> r5 = new java lang unsupported operation exception <NEXT> specialinvoke r5 < init > \ `` this feature require asm8_experimental\ `` <NEXT> throw r5 <NEXT> if $ i0 == 17301504 goto label1 <NEXT> label r7 = org objectweb asm class visitor r0 <NEXT> $ r2 = r7 cv <NEXT> if $ r2 == null goto label2 <NEXT> r8 = org objectweb asm class visitor r0 <NEXT> $ r3 = r8 cv <NEXT> $ r3 visit permit subtype experimental r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org objectweb asm class writer r0 <NEXT> $ r2 = r4 symbol table <NEXT> $ r3 = $ r2 add constant module r1 <NEXT> $ i0 = $ r3 index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org objectweb asm constant dynamic r0 <NEXT> $ r1 = r2 bootstrap method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org objectweb asm constant dynamic r0 <NEXT> $ r1 = r3 bootstrap method argument <NEXT> $ r2 = $ r1 [ i0 ] <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org objectweb asm field visitor r0 <NEXT> $ r2 = r4 fv <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org objectweb asm field visitor r0 <NEXT> $ r3 = r5 fv <NEXT> $ r3 visit attribute r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org objectweb asm handle r0 <NEXT> $ i0 = r1 tag <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r4 = org objectweb asm method visitor r0 <NEXT> $ r1 = r4 mv <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org objectweb asm method visitor r0 <NEXT> $ r2 = r5 mv <NEXT> $ r3 = $ r2 visit annotation default <NEXT> return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r3 = org objectweb asm method visitor r0 <NEXT> $ r1 = r3 mv <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org objectweb asm method visitor r0 <NEXT> $ r2 = r4 mv <NEXT> $ r2 visit int insn i0 i1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = org objectweb asm method visitor r0 <NEXT> $ r2 = r4 mv <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org objectweb asm method visitor r0 <NEXT> $ r3 = r5 mv <NEXT> $ r3 visit line number i0 r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org objectweb asm signature signature visitor r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org objectweb asm common module remapper <NEXT> r5 = org objectweb asm common class remapper r0 <NEXT> $ i0 = r5 api <NEXT> r6 = org objectweb asm common class remapper r0 <NEXT> $ r3 = r6 remapper <NEXT> specialinvoke r4 < init > $ i0 r1 $ r3 <NEXT> r7 = org objectweb asm module visitor r4 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org objectweb asm common method r0 <NEXT> $ r1 = r2 descriptor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org objectweb asm common method r0 <NEXT> $ r1 = r3 descriptor <NEXT> $ r2 = org objectweb asm type get return type $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org objectweb asm tree abstract insn node r0 <NEXT> $ r1 = r2 previous insn <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i2 = 0 <NEXT> r3 = org objectweb asm tree insn list r0 <NEXT> r2 = r3 first insn <NEXT> r4 = org objectweb asm tree insn list r0 <NEXT> $ i0 = r4 size <NEXT> r1 = newarray org objectweb asm tree abstract insn node [ $ i0 ] <NEXT> label if r2 == null goto label2 <NEXT> r1 [ i2 ] = r2 <NEXT> $ i1 = i2 <NEXT> i2 = i2 + 1 <NEXT> r2 index = $ i1 <NEXT> r2 = r2 next insn <NEXT> goto label1 <NEXT> label if r2 == null goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org objectweb asm tree insn list r0 <NEXT> r1 remove all 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org objectweb asm tree module open node r0 <NEXT> $ r5 = r9 packaze <NEXT> r10 = org objectweb asm tree module open node r0 <NEXT> $ i0 = r10 access <NEXT> r11 = org objectweb asm tree module open node r0 <NEXT> $ r2 = r11 module <NEXT> if $ r2 ! = null goto label1 <NEXT> $ r8 = null <NEXT> goto label2 <NEXT> label r1 visit open $ r5 $ i0 $ r8 <NEXT> return <NEXT> if $ r2 ! = null goto label1 <NEXT> label r12 = org objectweb asm tree module open node r0 <NEXT> $ r4 = r12 module <NEXT> $ r3 = newarray java lang string [ 0 ] <NEXT> $ r6 = $ r4 to array $ r3 <NEXT> $ r8 = java lang string [ ] $ r6 <END>
<BEG> r0 = @ this <NEXT> r4 = org objectweb asm util trace signature visitor r0 <NEXT> $ r1 = r4 exception <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = null <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r5 = org objectweb asm util trace signature visitor r0 <NEXT> $ r2 = r5 exception <NEXT> $ r3 = $ r2 to string <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org assertj core api abstract big decimal assert r0 <NEXT> $ r6 = r9 big decimal <NEXT> r10 = org assertj core api abstract big decimal assert r0 <NEXT> $ r5 = r10 info <NEXT> r11 = org assertj core api abstract big decimal assert r0 <NEXT> $ r3 = r11 actual <NEXT> $ r4 = java lang number $ r3 <NEXT> r12 = org assertj core api assertion info $ r5 <NEXT> $ r6 assert be not close to r12 $ r4 r1 r2 <NEXT> r13 = org assertj core api abstract big decimal assert r0 <NEXT> $ r7 = r13 myself <NEXT> $ r8 = org assertj core api abstract big decimal assert $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = specialinvoke r0 be less than or equal to r1 <NEXT> $ r3 = org assertj core api abstract big decimal assert $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = specialinvoke r0 be great than or equal to r1 <NEXT> $ r3 = org assertj core api abstract big decimal assert $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org assertj core api abstract boolean array assert r0 <NEXT> $ r5 = r8 array <NEXT> r9 = org assertj core api abstract boolean array assert r0 <NEXT> $ r4 = r9 info <NEXT> r10 = org assertj core api abstract boolean array assert r0 <NEXT> $ r2 = r10 actual <NEXT> $ r3 = boolean [ ] $ r2 <NEXT> r11 = org assertj core api assertion info $ r4 <NEXT> $ r5 assert contain sequence r11 $ r3 r1 <NEXT> r12 = org assertj core api abstract boolean array assert r0 <NEXT> $ r6 = r12 myself <NEXT> $ r7 = org assertj core api abstract boolean array assert $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = newarray java lang object [ 1 ] <NEXT> $ r2 [ 0 ] = r1 <NEXT> r4 = org assertj core api abstract map assert r0 <NEXT> $ r3 = r4 contain key $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org assertj core api abstract map assert r0 <NEXT> $ r5 = r8 map <NEXT> r9 = org assertj core api abstract map assert r0 <NEXT> $ r4 = r9 info <NEXT> r10 = org assertj core api abstract map assert r0 <NEXT> $ r2 = r10 actual <NEXT> $ r3 = java util map $ r2 <NEXT> r11 = org assertj core api assertion info $ r4 <NEXT> $ r5 assert contain key r11 $ r3 r1 <NEXT> r12 = org assertj core api abstract map assert r0 <NEXT> $ r6 = r12 myself <NEXT> $ r7 = org assertj core api abstract map assert $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r7 = org assertj core api abstract object array assert r0 <NEXT> $ r4 = r7 array <NEXT> r8 = org assertj core api abstract object array assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api abstract object array assert r0 <NEXT> $ r1 = r9 actual <NEXT> $ r2 = java lang object [ ] $ r1 <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert contain only null r10 $ r2 <NEXT> r11 = org assertj core api abstract object array assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api abstract object array assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org assertj core internal common validation check sequence be not null r1 <NEXT> r9 = org assertj core api abstract object array assert r0 <NEXT> $ r3 = r9 array <NEXT> r10 = org assertj core api abstract object array assert r0 <NEXT> $ r4 = r10 info <NEXT> r11 = org assertj core api abstract object array assert r0 <NEXT> $ r2 = r11 actual <NEXT> $ r5 = java lang object [ ] $ r2 <NEXT> $ r6 = org assertj core util iterable util to array r1 <NEXT> r12 = org assertj core api assertion info $ r4 <NEXT> $ r3 assert do not contain sequence r12 $ r5 $ r6 <NEXT> r13 = org assertj core api abstract object array assert r0 <NEXT> $ r7 = r13 myself <NEXT> $ r8 = org assertj core api abstract object array assert $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r10 object <NEXT> r11 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r11 info <NEXT> r12 = org assertj core api abstract object assert r0 <NEXT> $ r5 = r12 actual <NEXT> r13 = org assertj core api abstract object assert r0 <NEXT> $ r6 = r13 comparator by property or field <NEXT> r14 = org assertj core api abstract object assert r0 <NEXT> $ r7 = r14 get comparators by type <NEXT> r15 = org assertj core api assertion info $ r4 <NEXT> $ r3 assert be equal to ignore give field r15 $ r5 r1 $ r6 $ r7 r2 <NEXT> r16 = org assertj core api abstract object assert r0 <NEXT> $ r8 = r16 myself <NEXT> $ r9 = org assertj core api abstract object assert $ r8 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r7 object <NEXT> r8 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api abstract object assert r0 <NEXT> $ r2 = r9 actual <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert have no null field or property except r10 $ r2 r1 <NEXT> r11 = org assertj core api abstract object assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api abstract object assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r6 get comparators by type <NEXT> $ r3 put r2 r1 <NEXT> r7 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r7 myself <NEXT> $ r5 = org assertj core api abstract object assert $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org assertj core api abstract zone date time assert assert date time a string parameter be not null r1 <NEXT> r5 = org assertj core api abstract zone date time assert r0 <NEXT> $ r2 = r5 parse r1 <NEXT> $ r3 = specialinvoke r0 be not equal to $ r2 <NEXT> $ r4 = org assertj core api abstract zone date time assert $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org assertj core util file line of r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r6 = org assertj core api atomic reference array assert r0 <NEXT> $ r3 = r6 array <NEXT> r7 = org assertj core api atomic reference array assert r0 <NEXT> $ r2 = r7 info <NEXT> r8 = org assertj core api atomic reference array assert r0 <NEXT> $ r1 = r8 array <NEXT> r9 = org assertj core api assertion info $ r2 <NEXT> $ r3 assert contain only null r9 $ r1 <NEXT> r10 = org assertj core api atomic reference array assert r0 <NEXT> $ r4 = r10 myself <NEXT> $ r5 = org assertj core api atomic reference array assert $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org assertj core api atomic reference array assert r0 <NEXT> $ r4 = r7 array <NEXT> r8 = org assertj core api atomic reference array assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api atomic reference array assert r0 <NEXT> $ r2 = r9 array <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert be r10 $ r2 r1 <NEXT> r11 = org assertj core api atomic reference array assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api atomic reference array assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r7 = org assertj core api atomic reference array assert r0 <NEXT> $ r4 = r7 array <NEXT> r8 = org assertj core api atomic reference array assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api atomic reference array assert r0 <NEXT> $ r2 = r9 array <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert be exactly r10 $ r2 i0 r1 <NEXT> r11 = org assertj core api atomic reference array assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api atomic reference array assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org assertj core api condition r0 <NEXT> $ r2 = r4 predicate <NEXT> r5 = org assertj core api condition r0 <NEXT> specialinvoke r5 check predicate $ r2 <NEXT> r6 = org assertj core api condition r0 <NEXT> $ r3 = r6 predicate <NEXT> $ z0 = $ r3 test r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org assertj core api writable assertion info r0 <NEXT> $ r1 = r2 override error message <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org assertj core data temporal unit offset r0 <NEXT> $ r3 = r4 unit <NEXT> $ l0 = $ r3 between r1 r2 <NEXT> $ l1 = java lang math ab $ l0 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = org assertj core internal byte array r0 <NEXT> $ r5 = r6 array <NEXT> r7 = org assertj core internal byte array r0 <NEXT> $ r4 = r7 failure <NEXT> $ r5 assert start with r1 $ r4 r2 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org assertj core internal failure r0 <NEXT> $ z0 = r1 remove assert j related element from stack trace <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> org assertj core util precondition check not null r3 \ `` the input stream to compare to should not be null\ `` <NEXT> org assertj core internal input stream assert not null r1 r2 <NEXT> label r16 = org assertj core internal input stream r0 <NEXT> $ r6 = r16 diff <NEXT> r13 = $ r6 diff r2 r3 <NEXT> $ z0 = r13 be empty <NEXT> if $ z0 == 0 goto label3 <NEXT> label return <NEXT> if $ z0 == 0 goto label3 <NEXT> label r17 = org assertj core internal input stream r0 <NEXT> $ r7 = r17 failure <NEXT> $ r8 = org assertj core error should have same content should have same content r2 r3 r13 <NEXT> $ r9 = $ r7 failure r1 $ r8 <NEXT> throw $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r14 = org assertj core internal iterables r0 <NEXT> r14 assert not null r1 r2 <NEXT> org assertj core internal common validation check iterable be not null r1 r3 <NEXT> $ r5 = org assertj core util stream stream r2 <NEXT> r15 = org assertj core internal iterables r0 <NEXT> $ r6 = iterables $ lambda_assert be subset of_1__4 bootstrap $ r15 r3 <NEXT> $ r7 = $ r5 filter $ r6 <NEXT> $ r8 = java util stream collector to list <NEXT> $ r9 = $ r7 collect $ r8 <NEXT> r4 = java util list $ r9 <NEXT> $ i0 = r4 size <NEXT> if $ i0 < = 0 goto label1 <NEXT> r16 = org assertj core internal iterables r0 <NEXT> $ r11 = r16 failure <NEXT> r17 = org assertj core internal iterables r0 <NEXT> $ r10 = r17 comparison strategy <NEXT> $ r12 = org assertj core error should be subset of should be subset of r2 r3 r4 $ r10 <NEXT> $ r13 = $ r11 failure r1 $ r12 <NEXT> throw $ r13 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java lang comparable r2 <NEXT> r6 = org assertj core internal number r0 <NEXT> $ r4 = r6 zero <NEXT> $ r5 = java lang comparable $ r4 <NEXT> r7 = org assertj core internal number r0 <NEXT> r7 assert not equal by comparison r1 $ r3 $ r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java lang comparable r2 <NEXT> r6 = org assertj core internal number r0 <NEXT> $ r4 = r6 zero <NEXT> $ r5 = java lang comparable $ r4 <NEXT> r7 = org assertj core internal number r0 <NEXT> r7 assert great than or equal to r1 $ r3 $ r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java lang comparable r2 <NEXT> r6 = org assertj core internal number r0 <NEXT> $ r4 = r6 zero <NEXT> $ r5 = java lang comparable $ r4 <NEXT> r7 = org assertj core internal number r0 <NEXT> r7 assert less than or equal to r1 $ r3 $ r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org assertj core internal object array r0 <NEXT> $ r4 = r5 array <NEXT> r6 = org assertj core internal object array r0 <NEXT> $ r3 = r6 failure <NEXT> $ r4 assert contain only null r1 $ r3 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = org assertj core internal object r0 <NEXT> $ z0 = specialinvoke r7 actual be exactly instance of type r2 r3 r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = org assertj core internal object r0 <NEXT> $ r4 = r8 failure <NEXT> $ r5 = org assertj core error should not be exactly instance of should not be exactly instance r2 r3 <NEXT> $ r6 = $ r4 failure r1 $ r5 <NEXT> throw $ r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = org assertj core internal object r0 <NEXT> specialinvoke r8 check be not null and not empty r3 <NEXT> r9 = org assertj core internal object r0 <NEXT> $ z0 = specialinvoke r9 be actual in r2 r3 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r10 = org assertj core internal object r0 <NEXT> $ r5 = r10 failure <NEXT> r11 = org assertj core internal object r0 <NEXT> $ r4 = r11 comparison strategy <NEXT> $ r6 = org assertj core error should be in should be in r2 r3 $ r4 <NEXT> $ r7 = $ r5 failure r1 $ r6 <NEXT> throw $ r7 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r2 = null <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = r0 get time <NEXT> $ r2 = org assertj core util date util format a datetime $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label r1 = java util calendar get instance <NEXT> r1 set time r0 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org assertj core util date util to calendar r0 <NEXT> $ i0 = $ r1 get 14 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r4 = org assertj core util diff patch r0 <NEXT> $ r2 = r4 delta <NEXT> $ r1 = org assertj core util diff delta comparator instance <NEXT> java util collection sort $ r2 $ r1 <NEXT> r5 = org assertj core util diff patch r0 <NEXT> $ r3 = r5 delta <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org assertj core util introspection field support r0 <NEXT> r1 allow use private field = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = org assertj core util introspection introspection get property getter r1 r3 <NEXT> label $ r5 = newarray java lang object [ 0 ] <NEXT> $ r6 = r4 invoke r3 $ r5 <NEXT> label return $ r6 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r7 = org assertj core api abstract boolean array assert r0 <NEXT> $ r4 = r7 array <NEXT> r8 = org assertj core api abstract boolean array assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api abstract boolean array assert r0 <NEXT> $ r1 = r9 actual <NEXT> $ r2 = boolean [ ] $ r1 <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert have size great than r10 $ r2 i0 <NEXT> r11 = org assertj core api abstract boolean array assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api abstract boolean array assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r7 = org assertj core api abstract iterable assert r0 <NEXT> $ r4 = r7 iterables <NEXT> r8 = org assertj core api abstract iterable assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api abstract iterable assert r0 <NEXT> $ r1 = r9 actual <NEXT> $ r2 = java lang iterable $ r1 <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert have size less than r10 $ r2 i0 <NEXT> r11 = org assertj core api abstract iterable assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api abstract iterable assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org assertj core api abstract object array assert r0 <NEXT> $ r5 = r8 array <NEXT> r9 = org assertj core api abstract object array assert r0 <NEXT> $ r4 = r9 info <NEXT> r10 = org assertj core api abstract object array assert r0 <NEXT> $ r2 = r10 actual <NEXT> $ r3 = java lang object [ ] $ r2 <NEXT> r11 = org assertj core api assertion info $ r4 <NEXT> $ r5 assert contain only r11 $ r3 r1 <NEXT> r12 = org assertj core api abstract object array assert r0 <NEXT> $ r6 = r12 myself <NEXT> $ r7 = org assertj core api abstract object array assert $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r7 object <NEXT> r8 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api abstract object assert r0 <NEXT> $ r2 = r9 actual <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert have all null field or property except r10 $ r2 r1 <NEXT> r11 = org assertj core api abstract object assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api abstract object assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org assertj core api assumption assume that r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org assertj core api assumption assume that r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org assertj core api assumption assume that r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org assertj core api assumption assume that r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org assertj core api recursive comparison recursive comparison configuration r0 <NEXT> $ r1 = r2 ignore type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org assertj core api recursive comparison assert r0 <NEXT> $ r2 = r5 recursive comparison configuration <NEXT> $ r2 ignore field of type r1 <NEXT> r6 = org assertj core api recursive comparison assert r0 <NEXT> $ r3 = r6 myself <NEXT> $ r4 = org assertj core api recursive comparison assert $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org assertj core api recursive comparison assert r0 <NEXT> $ r2 = r5 recursive comparison configuration <NEXT> $ r2 ignore collection order in field match regexes r1 <NEXT> r6 = org assertj core api recursive comparison assert r0 <NEXT> $ r3 = r6 myself <NEXT> $ r4 = org assertj core api recursive comparison assert $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = org assertj core configuration configuration r0 <NEXT> $ z0 = r4 compare private field enable <NEXT> org assertj core api assertion set allow compare private field $ z0 <NEXT> r5 = org assertj core configuration configuration r0 <NEXT> $ z1 = r5 extract private field enable <NEXT> org assertj core api assertion set allow extract private field $ z1 <NEXT> r6 = org assertj core configuration configuration r0 <NEXT> $ z2 = r6 bare name property extraction enable <NEXT> org assertj core api assertion set extract bare name property method $ z2 <NEXT> r7 = org assertj core configuration configuration r0 <NEXT> $ z3 = r7 lenient date parsing enable <NEXT> org assertj core api assertion set lenient date parse $ z3 <NEXT> r8 = org assertj core configuration configuration r0 <NEXT> $ i0 = r8 max element for print <NEXT> org assertj core api assertion set max element for print $ i0 <NEXT> r9 = org assertj core configuration configuration r0 <NEXT> $ i1 = r9 max length for single line description <NEXT> org assertj core api assertion set max length for single line description $ i1 <NEXT> r10 = org assertj core configuration configuration r0 <NEXT> $ z4 = r10 remove assert j related element from stack trace enable <NEXT> org assertj core api assertion set remove assert j related element from stack trace $ z4 <NEXT> r11 = org assertj core configuration configuration r0 <NEXT> $ r1 = r11 representation <NEXT> org assertj core api assertion use representation $ r1 <NEXT> r12 = org assertj core configuration configuration r0 <NEXT> $ r2 = r12 additional date format <NEXT> $ r3 = configuration $ register custom date format__3 bootstrap $ <NEXT> $ r2 for each $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> l0 = @ parameter2 <NEXT> r6 = org assertj core internal file r0 <NEXT> r6 assert be file r1 r2 <NEXT> $ l1 = r2 length <NEXT> $ b2 = l0 cmp $ l1 <NEXT> if $ b2 ! = 0 goto label1 <NEXT> return <NEXT> if $ b2 ! = 0 goto label1 <NEXT> label r7 = org assertj core internal file r0 <NEXT> $ r3 = r7 failure <NEXT> $ r4 = org assertj core error should have size should have size r2 l0 <NEXT> $ r5 = $ r3 failure r1 $ r4 <NEXT> throw $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = r0 length <NEXT> r1 = newarray int [ $ i0 ] <NEXT> i3 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i3 > = $ i1 goto label3 <NEXT> $ i2 = r0 get i3 <NEXT> r1 [ i3 ] = $ i2 <NEXT> i3 = i3 + 1 <NEXT> goto label2 <NEXT> if i3 > = $ i1 goto label3 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org assertj core api abstract assert r0 <NEXT> $ r3 = r4 failure r1 r2 <NEXT> throw $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r7 object <NEXT> r8 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api abstract object assert r0 <NEXT> $ r2 = r9 actual <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert have field or property r10 $ r2 r1 <NEXT> r11 = org assertj core api abstract object assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api abstract object assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = org assertj core api atomic reference assert r0 <NEXT> r13 be not null <NEXT> r14 = org assertj core api atomic reference assert r0 <NEXT> $ r4 = r14 actual <NEXT> $ r5 = java util concurrent atomic atomic reference $ r4 <NEXT> r2 = $ r5 get <NEXT> r15 = org assertj core api atomic reference assert r0 <NEXT> $ r6 = r15 object <NEXT> $ r7 = $ r6 get comparison strategy <NEXT> $ z0 = $ r7 be equal r2 r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r16 = org assertj core api atomic reference assert r0 <NEXT> $ r10 = r16 actual <NEXT> $ r11 = org assertj core error should have value should have value $ r10 r1 <NEXT> r17 = org assertj core api atomic reference assert r0 <NEXT> $ r12 = r17 assertion error $ r11 <NEXT> throw $ r12 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r18 = org assertj core api atomic reference assert r0 <NEXT> $ r8 = r18 myself <NEXT> $ r9 = org assertj core api atomic reference assert $ r8 <NEXT> return $ r9 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org assertj core api assumption assume that r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org assertj core api abstract object assert r0 <NEXT> $ r6 = r9 object <NEXT> r10 = org assertj core api abstract object assert r0 <NEXT> $ r5 = r10 info <NEXT> r11 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r11 actual <NEXT> r12 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r12 comparator by property or field <NEXT> r13 = org assertj core api abstract object assert r0 <NEXT> $ r2 = r13 comparator by type <NEXT> r14 = org assertj core api assertion info $ r5 <NEXT> $ r6 assert be equal to ignore null field r14 $ r4 r1 $ r3 $ r2 <NEXT> r15 = org assertj core api abstract object assert r0 <NEXT> $ r7 = r15 myself <NEXT> $ r8 = org assertj core api abstract object assert $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r7 object <NEXT> r8 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api abstract object assert r0 <NEXT> $ r2 = r9 actual <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert have no null field or property except r10 $ r2 r1 <NEXT> r11 = org assertj core api abstract object assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api abstract object assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r7 object <NEXT> r8 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api abstract object assert r0 <NEXT> $ r2 = r9 actual <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert have field or property r10 $ r2 r1 <NEXT> r11 = org assertj core api abstract object assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api abstract object assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org assertj core api abstract object assert r0 <NEXT> $ r6 = r9 object <NEXT> r10 = org assertj core api abstract object assert r0 <NEXT> $ r5 = r10 info <NEXT> r11 = org assertj core api abstract object assert r0 <NEXT> $ r4 = r11 actual <NEXT> r12 = org assertj core api abstract object assert r0 <NEXT> $ r3 = r12 comparator by property or field <NEXT> r13 = org assertj core api abstract object assert r0 <NEXT> $ r2 = r13 comparator by type <NEXT> r14 = org assertj core api assertion info $ r5 <NEXT> $ r6 assert be equal to compare field by field recursively r14 $ r4 r1 $ r3 $ r2 <NEXT> r15 = org assertj core api abstract object assert r0 <NEXT> $ r7 = r15 myself <NEXT> $ r8 = org assertj core api abstract object assert $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org assertj core api abstract short assert r0 <NEXT> $ r6 = r9 short <NEXT> r10 = org assertj core api abstract short assert r0 <NEXT> $ r5 = r10 info <NEXT> r11 = org assertj core api abstract short assert r0 <NEXT> $ r3 = r11 actual <NEXT> $ r4 = java lang number $ r3 <NEXT> r12 = org assertj core api assertion info $ r5 <NEXT> $ r6 assert be close to r12 $ r4 r1 r2 <NEXT> r13 = org assertj core api abstract short assert r0 <NEXT> $ r7 = r13 myself <NEXT> $ r8 = org assertj core api abstract short assert $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org assertj core api atomic reference array assert r0 <NEXT> $ r4 = r7 array <NEXT> r8 = org assertj core api atomic reference array assert r0 <NEXT> $ r3 = r8 info <NEXT> r9 = org assertj core api atomic reference array assert r0 <NEXT> $ r2 = r9 array <NEXT> r10 = org assertj core api assertion info $ r3 <NEXT> $ r4 assert be r10 $ r2 r1 <NEXT> r11 = org assertj core api atomic reference array assert r0 <NEXT> $ r5 = r11 myself <NEXT> $ r6 = org assertj core api atomic reference array assert $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang unsupported operation exception <NEXT> specialinvoke $ r2 < init > <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new java util stack <NEXT> specialinvoke r3 < init > <NEXT> r4 = org objectweb fractal adl xml x m l writer r0 <NEXT> specialinvoke r4 write \ `` \ <NEXT> return <END>
<BEG> r1 = new com ibm asyncutil iteration async queue $ unbounded queue <NEXT> specialinvoke r1 < init > null <NEXT> r2 = com ibm asyncutil iteration async queue r1 <NEXT> return r2 <END>
<BEG> i0 = @ parameter0 <NEXT> r1 = new com ibm asyncutil iteration async queue $ buffer queue <NEXT> specialinvoke r1 < init > i0 <NEXT> r2 = com ibm asyncutil iteration bound async queue r1 <NEXT> return r2 <END>
<BEG> com jayway awaitility awaitility default catch uncaught exception = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new com jayway awaitility core condition factory <NEXT> r8 = com jayway awaitility core condition factory r0 <NEXT> $ r6 = r8 alias <NEXT> r9 = com jayway awaitility core condition factory r0 <NEXT> $ r5 = r9 timeout <NEXT> r10 = com jayway awaitility core condition factory r0 <NEXT> $ r4 = r10 poll interval <NEXT> r11 = com jayway awaitility core condition factory r0 <NEXT> $ r3 = r11 poll delay <NEXT> r12 = com jayway awaitility core condition factory r0 <NEXT> $ z0 = r12 catch uncaught exception <NEXT> specialinvoke r7 < init > $ r6 $ r5 $ r4 $ r3 $ z0 r1 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com jayway awaitility core field supplier builder r0 <NEXT> r4 expect field type = r1 <NEXT> r3 = new com jayway awaitility core field supplier builder $ name and annotation field supplier <NEXT> r5 = com jayway awaitility core field supplier builder r0 <NEXT> specialinvoke r3 < init > r5 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r8 = new com jayway awaitility reflect assignable to field type matcher strategy <NEXT> specialinvoke r8 < init > r1 <NEXT> r10 = com jayway awaitility reflect field matcher strategy r8 <NEXT> r2 = com jayway awaitility reflect whitebox impl find field in hierarchy r0 r10 <NEXT> label $ r5 = r2 get r0 <NEXT> label return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = null <NEXT> $ z0 = com jayway awaitility reflect whitebox impl be class r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> r1 = java lang class r0 <NEXT> goto label2 <NEXT> label return r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label if r0 == null goto label2 <NEXT> r1 = r0 get class <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = new org awaitility core predicate exception ignorer <NEXT> $ r2 = awaitility $ lambda_ignore exception by default_2__5 bootstrap $ r0 <NEXT> specialinvoke r3 < init > $ r2 <NEXT> r4 = org awaitility core exception ignorer r3 <NEXT> org awaitility awaitility default exception ignorer = r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = new org awaitility core condition factory <NEXT> r12 = org awaitility core condition factory r0 <NEXT> $ r4 = r12 alias <NEXT> r13 = org awaitility core condition factory r0 <NEXT> $ r5 = r13 timeout constraint <NEXT> r14 = org awaitility core condition factory r0 <NEXT> $ r6 = r14 poll interval <NEXT> r15 = org awaitility core condition factory r0 <NEXT> $ r7 = r15 poll delay <NEXT> r16 = org awaitility core condition factory r0 <NEXT> $ z0 = r16 catch uncaught exception <NEXT> r10 = new org awaitility core predicate exception ignorer <NEXT> specialinvoke r10 < init > r1 <NEXT> r17 = org awaitility core condition factory r0 <NEXT> $ r9 = r17 condition evaluation listener <NEXT> r18 = org awaitility core condition factory r0 <NEXT> $ r8 = r18 executor lifecycle <NEXT> r19 = org awaitility core exception ignorer r10 <NEXT> specialinvoke r11 < init > $ r4 $ r5 $ r6 $ r7 $ z0 r19 $ r9 $ r8 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new net bytebuddy asm asm visitor wrapper $ for declare method <NEXT> specialinvoke r5 < init > <NEXT> $ r3 = newarray net bytebuddy asm asm visitor wrapper $ for declare method $ method visitor wrapper [ 1 ] <NEXT> $ r3 [ 0 ] = r0 <NEXT> r6 = net bytebuddy asm asm visitor wrapper $ for declare method $ method visitor wrapper [ ] $ r3 <NEXT> $ r4 = r5 invokable r1 r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = net bytebuddy matcher element matcher be method <NEXT> $ r4 = $ r3 and r1 <NEXT> r6 = net bytebuddy asm modifier adjustment r0 <NEXT> r7 = net bytebuddy matcher element matcher $ r4 <NEXT> $ r5 = r6 with invokable modifier r7 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = net bytebuddy matcher element matcher any <NEXT> r4 = net bytebuddy asm modifier adjustment r0 <NEXT> r5 = net bytebuddy matcher element matcher $ r2 <NEXT> $ r3 = r4 with constructor modifier r5 r1 <NEXT> return $ r3 <END>
<BEG> $ r0 = new net bytebuddy asm type reference adjustment <NEXT> $ r1 = net bytebuddy matcher element matcher none <NEXT> specialinvoke $ r0 < init > 1 $ r1 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> $ r2 = net bytebuddy utility java type record <NEXT> $ r3 = $ r2 get type stub <NEXT> $ r4 = $ r3 get name <NEXT> $ r7 = net bytebuddy description type type description $ generic object <NEXT> $ r5 = newarray net bytebuddy description modifier modifier contributor $ for type [ 1 ] <NEXT> $ r6 = net bytebuddy description modifier visibility public <NEXT> $ r5 [ 0 ] = $ r6 <NEXT> r61 = net bytebuddy description modifier modifier contributor $ for type [ ] $ r5 <NEXT> $ r8 = net bytebuddy dynamic scaffold instrument type $ default of $ r4 $ r7 r61 <NEXT> r56 = new net bytebuddy description method method description $ token <NEXT> specialinvoke r56 < init > 4 <NEXT> $ r10 = $ r8 with method r56 <NEXT> r57 = new net bytebuddy description method method description $ token <NEXT> $ r12 = java lang integer type <NEXT> $ r13 = net bytebuddy description type type description $ for load type of $ r12 <NEXT> $ r14 = $ r13 a generic type <NEXT> specialinvoke r57 < init > \ `` hash code\ <NEXT> $ r15 = $ r10 with method r57 <NEXT> r58 = new net bytebuddy description method method description $ token <NEXT> $ r17 = java lang boolean type <NEXT> $ r18 = net bytebuddy description type type description $ for load type of $ r17 <NEXT> $ r19 = $ r18 a generic type <NEXT> $ r20 = net bytebuddy description type type description $ generic object <NEXT> $ r21 = java util collection singleton list $ r20 <NEXT> specialinvoke r58 < init > \ `` equals\ <NEXT> $ r22 = $ r15 with method r58 <NEXT> r59 = new net bytebuddy description method method description $ token <NEXT> $ r24 = net bytebuddy description type type description $ for load type of class \ `` ljava lang string \ `` <NEXT> $ r25 = $ r24 a generic type <NEXT> specialinvoke r59 < init > \ `` to string\ <NEXT> $ r26 = $ r22 with method r59 <NEXT> r1 = $ r26 a generic type <NEXT> r60 = new net bytebuddy dynamic scaffold subclass subclass dynamic type builder <NEXT> r62 = net bytebuddy byte buddy r0 <NEXT> $ r29 = r62 instrument type factory <NEXT> r63 = net bytebuddy byte buddy r0 <NEXT> $ r28 = r63 name strategy <NEXT> $ r30 = $ r28 subclass r1 <NEXT> $ r31 = $ r29 subclass $ r30 17 r1 <NEXT> $ r32 = $ r31 with record 1 <NEXT> r64 = net bytebuddy byte buddy r0 <NEXT> $ r43 = r64 class file version <NEXT> r65 = net bytebuddy byte buddy r0 <NEXT> $ r42 = r65 auxiliary type name strategy <NEXT> r66 = net bytebuddy byte buddy r0 <NEXT> $ r41 = r66 annotation value filter factory <NEXT> r67 = net bytebuddy byte buddy r0 <NEXT> $ r40 = r67 annotation retention <NEXT> r68 = net bytebuddy byte buddy r0 <NEXT> $ r39 = r68 implementation context factory <NEXT> r69 = net bytebuddy byte buddy r0 <NEXT> $ r38 = r69 method graph compiler <NEXT> r70 = net bytebuddy byte buddy r0 <NEXT> $ r37 = r70 type validation <NEXT> r71 = net bytebuddy byte buddy r0 <NEXT> $ r36 = r71 visibility bridge strategy <NEXT> r72 = net bytebuddy byte buddy r0 <NEXT> $ r35 = r72 class writer strategy <NEXT> r73 = net bytebuddy byte buddy r0 <NEXT> $ r34 = r73 ignore method <NEXT> $ r33 = net bytebuddy byte buddy $ record constructor strategy instance <NEXT> r74 = net bytebuddy dynamic scaffold subclass constructor strategy $ r33 <NEXT> specialinvoke r60 < init > $ r32 $ r43 $ r42 $ r41 $ r40 $ r39 $ r38 $ r37 $ r36 $ r35 $ r34 r74 <NEXT> $ r44 = net bytebuddy matcher element matcher be hash code <NEXT> r75 = net bytebuddy matcher element matcher $ r44 <NEXT> $ r45 = r60 method r75 <NEXT> $ r46 = net bytebuddy byte buddy $ record object method hash_code <NEXT> r76 = net bytebuddy implementation implementation $ r46 <NEXT> $ r47 = $ r45 intercept r76 <NEXT> $ r48 = net bytebuddy matcher element matcher be equal <NEXT> r77 = net bytebuddy matcher element matcher $ r48 <NEXT> $ r49 = $ r47 method r77 <NEXT> $ r50 = net bytebuddy byte buddy $ record object method equal <NEXT> r78 = net bytebuddy implementation implementation $ r50 <NEXT> $ r51 = $ r49 intercept r78 <NEXT> $ r52 = net bytebuddy matcher element matcher be to string <NEXT> r79 = net bytebuddy matcher element matcher $ r52 <NEXT> $ r53 = $ r51 method r79 <NEXT> $ r54 = net bytebuddy byte buddy $ record object method to_string <NEXT> r80 = net bytebuddy implementation implementation $ r54 <NEXT> $ r55 = $ r53 intercept r80 <NEXT> r81 = net bytebuddy dynamic dynamic type $ builder $ r55 <NEXT> return r81 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get class loader <NEXT> $ r3 = net bytebuddy dynamic class file locator $ for class loader of $ r2 <NEXT> r5 = net bytebuddy byte buddy r0 <NEXT> $ r4 = r5 rebase r1 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r7 = net bytebuddy implementation bytecode constant null constant instance <NEXT> r22 = net bytebuddy implementation bytecode stack manipulation $ r7 <NEXT> return r22 <NEXT> if r0 ! = null goto label1 <NEXT> label r17 = new java io byte array output stream <NEXT> specialinvoke r17 < init > <NEXT> r18 = new java io object output stream <NEXT> specialinvoke r18 < init > r17 <NEXT> label r18 write object r0 <NEXT> label r18 close <NEXT> goto label5 <NEXT> label r19 = new net bytebuddy implementation bytecode constant serialize constant <NEXT> $ r6 = r17 to string \ `` iso-8859-1\ `` <NEXT> specialinvoke r19 < init > $ r6 <NEXT> label r23 = net bytebuddy implementation bytecode stack manipulation r19 <NEXT> return r23 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 be primitive <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r2 = java lang long type <NEXT> $ z1 = r0 represent $ r2 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r10 = net bytebuddy implementation bytecode member method return long <NEXT> r11 = net bytebuddy implementation bytecode stack manipulation $ r10 <NEXT> return r11 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ r3 = java lang double type <NEXT> $ z2 = r0 represent $ r3 <NEXT> if $ z2 == 0 goto label2 <NEXT> $ r9 = net bytebuddy implementation bytecode member method return double <NEXT> r12 = net bytebuddy implementation bytecode stack manipulation $ r9 <NEXT> return r12 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ r4 = java lang float type <NEXT> $ z3 = r0 represent $ r4 <NEXT> if $ z3 == 0 goto label3 <NEXT> $ r8 = net bytebuddy implementation bytecode member method return float <NEXT> r13 = net bytebuddy implementation bytecode stack manipulation $ r8 <NEXT> return r13 <NEXT> if $ z3 == 0 goto label3 <NEXT> label $ r5 = java lang void type <NEXT> $ z4 = r0 represent $ r5 <NEXT> if $ z4 == 0 goto label4 <NEXT> $ r7 = net bytebuddy implementation bytecode member method return void <NEXT> r14 = net bytebuddy implementation bytecode stack manipulation $ r7 <NEXT> return r14 <NEXT> if $ z4 == 0 goto label4 <NEXT> label $ r6 = net bytebuddy implementation bytecode member method return integer <NEXT> r15 = net bytebuddy implementation bytecode stack manipulation $ r6 <NEXT> return r15 <NEXT> if $ z0 == 0 goto label5 <NEXT> label $ r1 = net bytebuddy implementation bytecode member method return reference <NEXT> r16 = net bytebuddy implementation bytecode stack manipulation $ r1 <NEXT> return r16 <END>
<BEG> r0 = @ this <NEXT> $ r1 = net bytebuddy implementation equal method $ type property comparator for_enumeration_types <NEXT> r3 = net bytebuddy implementation equal method r0 <NEXT> r4 = java util comparator $ r1 <NEXT> $ r2 = r3 with field order r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = new net bytebuddy description method method description $ for load constructor <NEXT> specialinvoke r3 < init > r0 <NEXT> r4 = net bytebuddy description method method description r3 <NEXT> $ r2 = net bytebuddy implementation method call invoke r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray net bytebuddy implementation method call $ argument loader $ factory [ 1 ] <NEXT> $ r2 = net bytebuddy implementation method call $ argument loader $ for method parameter $ of instrument method instance <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> r4 = net bytebuddy implementation method call r0 <NEXT> r5 = net bytebuddy implementation method call $ argument loader $ factory [ ] $ r1 <NEXT> $ r3 = r4 with r5 <NEXT> return $ r3 <END>
<BEG> r1 = new net bytebuddy matcher primitive type matcher <NEXT> specialinvoke r1 < init > <NEXT> r2 = net bytebuddy matcher element matcher $ junction r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> specialinvoke r0 visit var insn i0 i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r2 = @ parameter3 <NEXT> specialinvoke r0 visit table switch insn i0 i1 r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com github benmanes caffeine cache stats cache stats r0 <NEXT> l0 = r1 request count <NEXT> $ b1 = l0 cmp 0l <NEXT> if $ b1 ! = 0 goto label1 <NEXT> $ d2 = 1 0 <NEXT> goto label2 <NEXT> label return $ d2 <NEXT> if $ b1 ! = 0 goto label1 <NEXT> label r2 = com github benmanes caffeine cache stats cache stats r0 <NEXT> $ l2 = r2 hit count <NEXT> $ d1 = double $ l2 <NEXT> $ d0 = double l0 <NEXT> $ d2 = $ d1 $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = com github benmanes caffeine cache stats cache stats r0 <NEXT> $ l0 = r1 eviction count <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r6 = com github benmanes caffeine cache timer wheel r0 <NEXT> l1 = r6 nanos <NEXT> label r7 = com github benmanes caffeine cache timer wheel r0 <NEXT> r7 nanos = l0 <NEXT> i11 = 0 <NEXT> label $ r1 = com github benmanes caffeine cache timer wheel shift <NEXT> $ i4 = lengthof $ r1 <NEXT> if i11 > = $ i4 goto label4 <NEXT> $ r2 = com github benmanes caffeine cache timer wheel shift <NEXT> $ l5 = $ r2 [ i11 ] <NEXT> $ i6 = int $ l5 <NEXT> l2 = l1 > > > $ i6 <NEXT> $ r3 = com github benmanes caffeine cache timer wheel shift <NEXT> $ l7 = $ r3 [ i11 ] <NEXT> $ i8 = int $ l7 <NEXT> l3 = l0 > > > $ i8 <NEXT> $ l9 = l3 - l2 <NEXT> $ b10 = $ l9 cmp 0l <NEXT> if $ b10 > 0 goto label3 <NEXT> goto label4 <NEXT> label goto label6 <NEXT> label return <NEXT> if $ b10 > 0 goto label3 <NEXT> label r8 = com github benmanes caffeine cache timer wheel r0 <NEXT> r8 expire i11 l2 l3 <NEXT> i11 = i11 + 1 <NEXT> goto label2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org objectweb fractal cecilia adl ant think a d l r0 <NEXT> $ r2 = r8 src path <NEXT> if $ r2 == null goto label1 <NEXT> r6 = new org apache tool ant build exception <NEXT> specialinvoke r6 < init > \ `` src path can not be specify twice \ `` <NEXT> r9 = java lang throwable r6 <NEXT> throw r9 <NEXT> if $ r2 == null goto label1 <NEXT> label r7 = new org apache tool ant type path <NEXT> r10 = org objectweb fractal cecilia adl ant think a d l r0 <NEXT> $ r4 = r10 get project <NEXT> specialinvoke r7 < init > $ r4 r1 <NEXT> r11 = org objectweb fractal cecilia adl ant think a d l r0 <NEXT> r11 src path = r7 <NEXT> return <END>
<BEG> c0 = @ parameter0 <NEXT> $ r2 = newarray org checkerframework checker formatter qual conversion category [ 5 ] <NEXT> $ r3 = org checkerframework checker formatter qual conversion category general <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> $ r4 = org checkerframework checker formatter qual conversion category char <NEXT> $ r2 [ 1 ] = $ r4 <NEXT> $ r5 = org checkerframework checker formatter qual conversion category int <NEXT> $ r2 [ 2 ] = $ r5 <NEXT> $ r6 = org checkerframework checker formatter qual conversion category float <NEXT> $ r2 [ 3 ] = $ r6 <NEXT> $ r7 = org checkerframework checker formatter qual conversion category time <NEXT> $ r2 [ 4 ] = $ r7 <NEXT> i1 = lengthof $ r2 <NEXT> i2 = 0 <NEXT> label if i2 > = i1 goto label3 <NEXT> r1 = $ r2 [ i2 ] <NEXT> $ r9 = r1 char <NEXT> $ r10 = java lang string value of c0 <NEXT> $ z0 = $ r9 contain $ r10 <NEXT> if $ z0 == 0 goto label2 <NEXT> return r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i1 goto label3 <NEXT> label $ r8 = new java lang illegal argument exception <NEXT> specialinvoke $ r8 < init > <NEXT> throw $ r8 <END>
<BEG> b0 = @ parameter0 <NEXT> $ s1 = b0 & 255 <NEXT> $ s2 = short $ s1 <NEXT> return $ s2 <END>
<BEG> b0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ i2 = java lang byte to unsigned int b0 <NEXT> $ r0 = java lang integer to unsigned string $ i2 i1 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r4 = com fasterxml classmate resolve type with member r0 <NEXT> $ r1 = r4 _static field <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = com fasterxml classmate resolve type with member r0 <NEXT> $ r3 = r5 resolve static field <NEXT> r6 = com fasterxml classmate resolve type with member r0 <NEXT> r6 _static field = $ r3 <NEXT> label r7 = com fasterxml classmate resolve type with member r0 <NEXT> $ r2 = r7 _static field <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r29 = com rits clone cloner r0 <NEXT> $ r2 = r29 fast cloners <NEXT> r22 = new com rits clone fast cloner calendar <NEXT> specialinvoke r22 < init > <NEXT> $ r2 put class \ `` ljava util gregorian calendar \ <NEXT> r30 = com rits clone cloner r0 <NEXT> $ r5 = r30 fast cloners <NEXT> r23 = new com rits clone fast cloner array list <NEXT> specialinvoke r23 < init > <NEXT> $ r5 put class \ `` ljava util array list \ <NEXT> r31 = com rits clone cloner r0 <NEXT> $ r8 = r31 fast cloners <NEXT> r24 = new com rits clone fast cloner link list <NEXT> specialinvoke r24 < init > <NEXT> $ r8 put class \ `` ljava util link list \ <NEXT> r32 = com rits clone cloner r0 <NEXT> $ r11 = r32 fast cloners <NEXT> r25 = new com rits clone fast cloner hash set <NEXT> specialinvoke r25 < init > <NEXT> $ r11 put class \ `` ljava util hash set \ <NEXT> r33 = com rits clone cloner r0 <NEXT> $ r14 = r33 fast cloners <NEXT> r26 = new com rits clone fast cloner hash map <NEXT> specialinvoke r26 < init > <NEXT> $ r14 put class \ `` ljava util hash map \ <NEXT> r34 = com rits clone cloner r0 <NEXT> $ r17 = r34 fast cloners <NEXT> r27 = new com rits clone fast cloner tree map <NEXT> specialinvoke r27 < init > <NEXT> $ r17 put class \ `` ljava util tree map \ <NEXT> r35 = com rits clone cloner r0 <NEXT> $ r20 = r35 fast cloners <NEXT> r28 = new com rits clone fast cloner concurrent hash map <NEXT> specialinvoke r28 < init > <NEXT> $ r20 put class \ `` ljava util concurrent concurrent hash map \ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com rits clone cloner r0 <NEXT> $ r2 = r3 null instead <NEXT> $ r2 add all r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org cometd oort oort r0 <NEXT> $ r1 = r2 _url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org cometd oort oort r0 <NEXT> $ r1 = r2 _comet listener <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org cometd server server session impl r0 <NEXT> r1 _transient interval = l0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` select * from stream where id=\ `` <NEXT> $ r3 = com pryv database query generator format text value r0 <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \ `` <NEXT> $ r6 = $ r5 to string <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com pryv filter r0 <NEXT> $ r2 = r6 stream <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util hash set <NEXT> specialinvoke r5 < init > <NEXT> r7 = com pryv filter r0 <NEXT> r7 stream = r5 <NEXT> label r8 = com pryv filter r0 <NEXT> $ r3 = r8 stream <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com pryv model event r0 <NEXT> $ r2 = r6 tag <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util hash set <NEXT> specialinvoke r5 < init > <NEXT> r7 = com pryv model event r0 <NEXT> r7 tag = r5 <NEXT> label r8 = com pryv model event r0 <NEXT> $ r3 = r8 tag <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> $ z0 = com pryv pryv online activate <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = com pryv utils logger r0 <NEXT> $ r3 = r11 stream <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r4 = r10 append r1 <NEXT> $ r5 = $ r4 append \ `` - thread\ `` <NEXT> $ r6 = java lang thread current thread <NEXT> $ r7 = $ r6 get name <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> $ r3 println $ r9 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r27 = org apache common beanutils basic dyna bean r0 <NEXT> $ r4 = r27 value <NEXT> r3 = $ r4 get r1 <NEXT> if r3 ! = null goto label1 <NEXT> r24 = new java lang null pointer exception <NEXT> r23 = new java lang string buffer <NEXT> specialinvoke r23 < init > <NEXT> $ r17 = r23 append \ `` no mapped value for \'\ `` <NEXT> $ r18 = $ r17 append r1 <NEXT> $ r19 = $ r18 append \ `` \ `` <NEXT> $ r20 = $ r19 append r2 <NEXT> $ r21 = $ r20 append \ `` \'\ `` <NEXT> $ r22 = $ r21 to string <NEXT> specialinvoke r24 < init > $ r22 <NEXT> throw r24 <NEXT> if r3 ! = null goto label1 <NEXT> label $ z0 = r3 instanceof java util map <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r13 = java util map r3 <NEXT> $ r13 remove r2 <NEXT> goto label3 <NEXT> label return <NEXT> if $ z0 == 0 goto label2 <NEXT> label r26 = new java lang illegal argument exception <NEXT> r25 = new java lang string buffer <NEXT> specialinvoke r25 < init > <NEXT> $ r7 = r25 append \ `` non-mapped property for \'\ `` <NEXT> $ r8 = $ r7 append r1 <NEXT> $ r9 = $ r8 append \ `` \ `` <NEXT> $ r10 = $ r9 append r2 <NEXT> $ r11 = $ r10 append \ `` \'\ `` <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke r26 < init > $ r12 <NEXT> throw r26 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = org apache common beanutils basic dyna bean r0 <NEXT> $ r3 = r12 get dyna class <NEXT> r2 = $ r3 get dyna property r1 <NEXT> if r2 ! = null goto label1 <NEXT> r11 = new java lang illegal argument exception <NEXT> r10 = new java lang string buffer <NEXT> specialinvoke r10 < init > <NEXT> $ r6 = r10 append \ `` invalid property name \'\ `` <NEXT> $ r7 = $ r6 append r1 <NEXT> $ r8 = $ r7 append \ `` \'\ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> throw r11 <NEXT> if r2 ! = null goto label1 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common beanutils bean comparator r0 <NEXT> $ r1 = r2 comparator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string buffer <NEXT> specialinvoke r8 < init > <NEXT> $ r2 = r8 append \ `` bean map < \ `` <NEXT> r9 = org apache common beanutils bean map r0 <NEXT> $ r3 = r9 bean <NEXT> $ r4 = java lang string value of $ r3 <NEXT> $ r5 = $ r2 append $ r4 <NEXT> $ r6 = $ r5 append \ `` > \ `` <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common beanutils bean utils bean get instance <NEXT> $ z0 = $ r2 init cause r0 r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org apache common beanutils weak fast hash map <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org apache common beanutils weak fast hash map r0 <NEXT> $ z1 = $ r1 get fast <NEXT> return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common beanutils bean utils bean r0 <NEXT> $ r1 = r2 convert utils bean <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string buffer <NEXT> specialinvoke r8 < init > <NEXT> $ r2 = r8 append \ `` converter facade [ \ `` <NEXT> r9 = org apache common beanutils converter converter facade r0 <NEXT> $ r3 = r9 converter <NEXT> $ r4 = $ r3 to string <NEXT> $ r5 = $ r2 append $ r4 <NEXT> $ r6 = $ r5 append \ `` ] \ `` <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common beanutils converter date time converter r0 <NEXT> r2 time zone = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common beanutils converter number converter r0 <NEXT> $ r1 = r2 pattern <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common beanutils converter number converter r0 <NEXT> r2 pattern = r1 <NEXT> r3 = org apache common beanutils converter number converter r0 <NEXT> r3 set use locale format 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r20 = new java lang string buffer <NEXT> specialinvoke r20 < init > <NEXT> $ r3 = r0 get class <NEXT> r21 = org apache common beanutils converter number converter r0 <NEXT> $ r4 = r21 to string $ r3 <NEXT> r20 append $ r4 <NEXT> r20 append \ `` [ use default=\ `` <NEXT> r22 = org apache common beanutils converter number converter r0 <NEXT> $ z0 = r22 be use default <NEXT> r20 append $ z0 <NEXT> r20 append \ <NEXT> r23 = org apache common beanutils converter number converter r0 <NEXT> $ z1 = r23 use locale format <NEXT> r20 append $ z1 <NEXT> r24 = org apache common beanutils converter number converter r0 <NEXT> $ r10 = r24 pattern <NEXT> if $ r10 == null goto label1 <NEXT> label r26 = org apache common beanutils converter number converter r0 <NEXT> $ r11 = r26 locale <NEXT> if $ r11 == null goto label2 <NEXT> label r20 append 93 <NEXT> $ r13 = r20 to string <NEXT> return $ r13 <END>
<BEG> $ r0 = org apache common beanutils convert utils bean get instance <NEXT> $ z0 = $ r0 get default boolean <NEXT> return $ z0 <END>
<BEG> z0 = @ parameter0 <NEXT> $ r0 = org apache common beanutils convert utils bean get instance <NEXT> $ r0 set default boolean z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common beanutils dyna property r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common beanutils dyna property r0 <NEXT> $ r1 = r5 type <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ r2 = org apache common beanutils dyna property class $ java $ util $ map <NEXT> if $ r2 ! = null goto label2 <NEXT> $ r4 = org apache common beanutils dyna property class $ \ `` java util map\ `` <NEXT> org apache common beanutils dyna property class $ java $ util $ map = $ r4 <NEXT> goto label3 <NEXT> label r6 = org apache common beanutils dyna property r0 <NEXT> $ r3 = r6 type <NEXT> $ z0 = $ r4 be assignable from $ r3 <NEXT> return $ z0 <NEXT> if $ r2 ! = null goto label2 <NEXT> label $ r4 = org apache common beanutils dyna property class $ java $ util $ map <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return 0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label r3 = org apache common beanutils expression default resolver r0 <NEXT> $ r2 = r3 remove r1 <NEXT> if $ r2 == null goto label3 <NEXT> $ z0 = 1 <NEXT> goto label4 <NEXT> label return $ z0 <NEXT> if $ r2 == null goto label3 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return null <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label r4 = org apache common beanutils expression default resolver r0 <NEXT> r2 = r4 next r1 <NEXT> $ i1 = r1 length <NEXT> $ i2 = r2 length <NEXT> if $ i1 ! = $ i2 goto label3 <NEXT> return null <NEXT> if $ i1 ! = $ i2 goto label3 <NEXT> label i4 = r2 length <NEXT> $ c3 = r1 char at i4 <NEXT> if $ c3 ! = 46 goto label4 <NEXT> i4 = i4 + 1 <NEXT> label $ r3 = r1 substring i4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common beanutils lazy dyna class r0 <NEXT> $ z0 = r1 restrict <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache common beanutils lazy dyna list r0 <NEXT> $ i0 = r9 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r10 = org apache common beanutils lazy dyna list r0 <NEXT> $ r7 = r10 element dyna bean type <NEXT> if $ r7 ! = null goto label1 <NEXT> $ r8 = newarray org apache common beanutils lazy dyna bean [ 0 ] <NEXT> r11 = org apache common beanutils dyna bean [ ] $ r8 <NEXT> return r11 <NEXT> if $ r7 ! = null goto label1 <NEXT> label r12 = org apache common beanutils lazy dyna list r0 <NEXT> $ r2 = r12 element dyna bean type <NEXT> r13 = org apache common beanutils lazy dyna list r0 <NEXT> $ i1 = r13 size <NEXT> $ r3 = java lang reflect array new instance $ r2 $ i1 <NEXT> $ r4 = org apache common beanutils dyna bean [ ] $ r3 <NEXT> r1 = org apache common beanutils dyna bean [ ] $ r4 <NEXT> i2 = 0 <NEXT> label r14 = org apache common beanutils lazy dyna list r0 <NEXT> $ i3 = r14 size <NEXT> if i2 > = $ i3 goto label3 <NEXT> r15 = org apache common beanutils lazy dyna list r0 <NEXT> $ r5 = r15 get i2 <NEXT> $ r6 = org apache common beanutils dyna bean $ r5 <NEXT> r1 [ i2 ] = $ r6 <NEXT> i2 = i2 + 1 <NEXT> goto label2 <NEXT> if i2 > = $ i3 goto label3 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache common beanutils locale locale convert utils bean r0 <NEXT> $ r3 = r5 default locale <NEXT> r6 = org apache common beanutils locale locale convert utils bean r0 <NEXT> $ r4 = r6 convert r1 r2 $ r3 null <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common beanutils map property descriptor r0 <NEXT> $ r1 = r3 map write method ref <NEXT> $ r2 = org apache common beanutils map property descriptor $ map method reference access $ 000 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org apache common beanutils map property descriptor $ map method reference <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org apache common beanutils map property descriptor r0 <NEXT> r4 map write method ref = r3 <NEXT> r5 = org apache common beanutils map property descriptor r0 <NEXT> specialinvoke r5 find map property type <NEXT> return <END>
<BEG> $ r0 = org apache common beanutils bean utils bean get instance <NEXT> $ r1 = $ r0 get property utils <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common beanutils result set iterator r0 <NEXT> $ z0 = r3 current <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r4 = org apache common beanutils result set iterator r0 <NEXT> $ z1 = r4 eof <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r5 = org apache common beanutils result set iterator r0 <NEXT> $ r1 = r5 dyna class <NEXT> $ r2 = $ r1 get result set <NEXT> $ z2 = $ r2 next <NEXT> if $ z2 == 0 goto label1 <NEXT> r6 = org apache common beanutils result set iterator r0 <NEXT> r6 current = 1 <NEXT> r7 = org apache common beanutils result set iterator r0 <NEXT> r7 eof = 0 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z2 == 0 goto label1 <NEXT> label r8 = org apache common beanutils result set iterator r0 <NEXT> r8 current = 0 <NEXT> r9 = org apache common beanutils result set iterator r0 <NEXT> r9 eof = 1 <END>
<BEG> r0 = @ this <NEXT> r13 = org apache common beanutils weak fast hash map r0 <NEXT> $ z0 = r13 fast <NEXT> if $ z0 == 0 goto label3 <NEXT> i2 = 0 <NEXT> r14 = org apache common beanutils weak fast hash map r0 <NEXT> $ r7 = r14 map <NEXT> $ r8 = $ r7 entry set <NEXT> r11 = $ r8 iterator <NEXT> label $ z2 = r11 have next <NEXT> if $ z2 == 0 goto label2 <NEXT> $ r9 = r11 next <NEXT> $ i1 = $ r9 hash code <NEXT> i2 = i2 + $ i1 <NEXT> goto label1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label return i2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r15 = org apache common beanutils weak fast hash map r0 <NEXT> $ r3 = r15 map <NEXT> entermonitor $ r3 <NEXT> label i3 = 0 <NEXT> r16 = org apache common beanutils weak fast hash map r0 <NEXT> $ r4 = r16 map <NEXT> $ r5 = $ r4 entry set <NEXT> r1 = $ r5 iterator <NEXT> label $ z1 = r1 have next <NEXT> if $ z1 == 0 goto label6 <NEXT> $ r6 = r1 next <NEXT> $ i0 = $ r6 hash code <NEXT> i3 = i3 + $ i0 <NEXT> goto label5 <NEXT> if $ z1 == 0 goto label6 <NEXT> label exitmonitor $ r3 <NEXT> label return i3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common beanutils wrap dyna bean r0 <NEXT> $ r1 = r2 instance <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common cli help formatter r0 <NEXT> r1 default desc pad = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common cli help formatter r0 <NEXT> $ r1 = r2 option comparator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common cli help formatter r0 <NEXT> r2 option comparator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common cli option r0 <NEXT> $ r1 = r2 long opt <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common cli option r0 <NEXT> r1 require = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string <NEXT> $ r2 = org apache common codec binary binary codec to ascii char r0 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common codec digest crypt crypt r0 null <NEXT> return $ r1 <END>
<BEG> $ r0 = org apache common codec digest digest utils get digest \ `` md5\ `` <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r0 update r1 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common codec digest hmac algorithm hmac_sha_1 <NEXT> $ r2 = org apache common codec digest hmac utils get initialized mac $ r1 r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common codec digest hmac utils hmac md5 r0 r1 <NEXT> $ r3 = org apache common codec binary hex encode hex string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common codec digest hmac utils hmac sha512 r0 r1 <NEXT> $ r3 = org apache common codec binary hex encode hex string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` $ 1 $ \ `` <NEXT> $ r3 = org apache common codec digest b64 get random salt 8 <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 to string <NEXT> $ r6 = org apache common codec digest md5 crypt md5 crypt r0 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common codec language bm beider morse encoder r0 <NEXT> $ r1 = r3 engine <NEXT> $ r2 = $ r1 get name type <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common codec language bm beider morse encoder r0 <NEXT> $ r1 = r2 engine <NEXT> $ z0 = $ r1 be concat <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common codec language bm name type r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common codec language bm rule r0 <NEXT> $ r1 = r2 r context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ i0 = org apache common codec language soundex utils difference r0 r1 r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common codec net b codec r0 <NEXT> $ r1 = r2 charset <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache common codec net quote printable codec printable_chars <NEXT> r4 = org apache common codec net quote printable codec r0 <NEXT> $ z0 = r4 strict <NEXT> $ r3 = org apache common codec net quote printable codec encode quote printable $ r2 r1 $ z0 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> label javax crypto mac get instance r0 <NEXT> label return 1 <END>
<BEG> $ r0 = org apache common codec digest digest utils get digest \ `` sha3-224\ `` <NEXT> return $ r0 <END>
<BEG> $ r0 = org apache common codec digest digest utils get digest \ `` sha3-384\ `` <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common codec digest digest utils sha3_256 r0 <NEXT> $ r2 = org apache common codec binary hex encode hex string $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common codec net q codec r0 <NEXT> r1 encode blank = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collections4 bag abstract map bag r0 <NEXT> $ r1 = r2 map <NEXT> $ z0 = $ r1 be empty <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache common collections4 bag abstract map bag $ bag iterator <NEXT> r3 = org apache common collections4 bag abstract map bag r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = java util iterator r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache common collections4 bag abstract map bag r0 <NEXT> $ r1 = r6 unique set <NEXT> if $ r1 ! = null goto label1 <NEXT> r7 = org apache common collections4 bag abstract map bag r0 <NEXT> $ r3 = r7 map <NEXT> $ r4 = $ r3 key set <NEXT> $ r5 = org apache common collections4 set unmodifiable set unmodifiable set $ r4 <NEXT> r8 = org apache common collections4 bag abstract map bag r0 <NEXT> r8 unique set = $ r5 <NEXT> label r9 = org apache common collections4 bag abstract map bag r0 <NEXT> $ r2 = r9 unique set <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org apache common collections4 bag collection bag <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org apache common collections4 bag r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache common collections4 bidimap tree bidi map r0 <NEXT> r3 = r4 get r1 <NEXT> r5 = org apache common collections4 bidimap tree bidi map r0 <NEXT> specialinvoke r5 do put r1 r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org apache common collections4 bidimap tree bidi map check value r1 <NEXT> r4 = org apache common collections4 bidimap tree bidi map r0 <NEXT> r2 = specialinvoke r4 lookup value r1 <NEXT> if r2 ! = null goto label1 <NEXT> $ r3 = null <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r3 = r2 get key <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache common collections4 bidimap dual tree bidi map r0 <NEXT> $ z0 = r10 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org apache common collections4 bidimap dual tree bidi map r0 <NEXT> $ r4 = r11 normal map <NEXT> $ z1 = $ r4 instanceof org apache common collections4 order map <NEXT> if $ z1 == 0 goto label2 <NEXT> r12 = org apache common collections4 bidimap dual tree bidi map r0 <NEXT> $ r7 = r12 normal map <NEXT> $ r8 = org apache common collections4 order map $ r7 <NEXT> $ r9 = $ r8 previous key r1 <NEXT> return $ r9 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r13 = org apache common collections4 bidimap dual tree bidi map r0 <NEXT> $ r5 = r13 normal map <NEXT> r2 = java util sort map $ r5 <NEXT> r3 = r2 head map r1 <NEXT> $ z2 = r3 be empty <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ r6 = r3 last key <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common collections4 bidimap tree bidi map $ data element key <NEXT> r3 = org apache common collections4 bidimap tree bidi map r0 <NEXT> $ r2 = specialinvoke r3 do to string $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common collections4 collection composite collection r0 <NEXT> $ r2 = r3 all <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common collections4 collection composite collection r0 <NEXT> $ r1 = r3 all <NEXT> $ r2 = org apache common collections4 list unmodifiable list unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common collections4 collection transform collection r0 <NEXT> $ r2 = r4 transformer <NEXT> $ r3 = $ r2 transform r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = org apache common collections4 iterable utils match any r0 r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r0 instanceof java util collection <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = new java util array list <NEXT> $ r4 = java util collection r0 <NEXT> $ i0 = $ r4 size <NEXT> specialinvoke $ r5 < init > $ i0 <NEXT> goto label2 <NEXT> label $ r3 = org apache common collections4 collection utils select reject r0 r1 $ r5 <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r5 = new java util array list <NEXT> specialinvoke $ r5 < init > <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common collections4 functors constant factory constant factory r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> org apache common collections4 iterable utils check not null r0 <NEXT> $ z0 = r0 instanceof org apache common collections4 fluent iterable <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = org apache common collections4 fluent iterable r0 <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = new org apache common collections4 fluent iterable <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common collections4 fluent iterable r0 <NEXT> $ r1 = r3 iterator <NEXT> $ r2 = org apache common collections4 iterator utils a enumeration $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common collections4 fluent iterable r0 <NEXT> $ r2 = r3 iterable <NEXT> org apache common collections4 iterable utils for each $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common collections4 functors and predicate r0 <NEXT> $ r2 = r4 i predicate1 <NEXT> $ z0 = $ r2 evaluate r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache common collections4 functors and predicate r0 <NEXT> $ r3 = r5 i predicate2 <NEXT> $ z1 = $ r3 evaluate r1 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache common collections4 functors equal predicate r0 <NEXT> $ r2 = r6 equator <NEXT> if $ r2 == null goto label1 <NEXT> r7 = org apache common collections4 functors equal predicate r0 <NEXT> $ r5 = r7 equator <NEXT> r8 = org apache common collections4 functors equal predicate r0 <NEXT> $ r4 = r8 i value <NEXT> $ z1 = $ r5 equate $ r4 r1 <NEXT> return $ z1 <NEXT> if $ r2 == null goto label1 <NEXT> label r9 = org apache common collections4 functors equal predicate r0 <NEXT> $ r3 = r9 i value <NEXT> $ z0 = $ r3 equal r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common collections4 functors none predicate r0 <NEXT> r2 = r4 i predicate <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r3 = r2 [ i1 ] <NEXT> $ z0 = r3 evaluate r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common collections4 functors transformer closure r0 <NEXT> $ r2 = r4 i transformer <NEXT> $ r2 transform r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache common collections4 functors transformer predicate r0 <NEXT> $ r3 = r7 i transformer <NEXT> $ r4 = $ r3 transform r1 <NEXT> r2 = java lang boolean $ r4 <NEXT> if r2 ! = null goto label1 <NEXT> r6 = new org apache common collections4 functor exception <NEXT> specialinvoke r6 < init > \ `` transformer must return an instanceof boolean it be a null object\ `` <NEXT> r8 = java lang throwable r6 <NEXT> throw r8 <NEXT> if r2 ! = null goto label1 <NEXT> label $ z0 = r2 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collections4 functors while closure r0 <NEXT> $ r1 = r2 i predicate <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> org apache common collections4 iterable utils check not null r0 <NEXT> r2 = new org apache common collections4 iterable utils $ 11 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = java lang iterable r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common collections4 iterable utils empty iterator if null r0 <NEXT> $ r3 = org apache common collections4 iterator utils find $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> $ r4 = new java lang null pointer exception <NEXT> specialinvoke $ r4 < init > \ `` predicate must not be null \ `` <NEXT> throw $ r4 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = org apache common collections4 iterable utils empty if null r0 <NEXT> $ r3 = org apache common collections4 iterable utils filter iterable $ r2 r1 <NEXT> $ i0 = org apache common collections4 iterable utils size $ r3 <NEXT> $ l1 = long $ i0 <NEXT> return $ l1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof java util collection <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = java util collection r0 <NEXT> $ z2 = $ r2 be empty <NEXT> return $ z2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = org apache common collections4 iterable utils empty iterator if null r0 <NEXT> $ z1 = org apache common collections4 iterator utils be empty $ r1 <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common collections4 iterators array iterator r0 <NEXT> $ i1 = r1 index <NEXT> r2 = org apache common collections4 iterators array iterator r0 <NEXT> $ i0 = r2 end index <NEXT> if $ i1 > = $ i0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 > = $ i0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collections4 iterators array iterator r0 <NEXT> $ r1 = r2 array <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache common collections4 iterators enumeration iterator r0 <NEXT> $ r1 = r9 collection <NEXT> if $ r1 == null goto label2 <NEXT> r10 = org apache common collections4 iterators enumeration iterator r0 <NEXT> $ r3 = r10 last <NEXT> if $ r3 == null goto label1 <NEXT> r11 = org apache common collections4 iterators enumeration iterator r0 <NEXT> $ r6 = r11 collection <NEXT> r12 = org apache common collections4 iterators enumeration iterator r0 <NEXT> $ r5 = r12 last <NEXT> $ r6 remove $ r5 <NEXT> goto label3 <NEXT> label return <NEXT> if $ r3 == null goto label1 <NEXT> label r7 = new java lang illegal state exception <NEXT> specialinvoke r7 < init > \ `` next must have be call for remove to function\ `` <NEXT> throw r7 <NEXT> if $ r1 == null goto label2 <NEXT> label r8 = new java lang unsupported operation exception <NEXT> specialinvoke r8 < init > \ `` no collection associate with this iterator\ `` <NEXT> throw r8 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collections4 iterators filter iterator r0 <NEXT> $ r1 = r2 iterator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collections4 iterators filter iterator r0 <NEXT> $ r1 = r2 predicate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common collections4 iterators iterator iterable r0 <NEXT> $ r1 = r5 iterator <NEXT> $ z0 = $ r1 instanceof org apache common collections4 resettable iterator <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache common collections4 iterators iterator iterable r0 <NEXT> $ r3 = r6 iterator <NEXT> $ r4 = org apache common collections4 resettable iterator $ r3 <NEXT> $ r4 reset <NEXT> label r7 = org apache common collections4 iterators iterator iterable r0 <NEXT> $ r2 = r7 type safe iterator <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common collections4 iterators list iterator wrapper r0 <NEXT> $ r2 = r4 iterator <NEXT> $ z0 = $ r2 instanceof java util list iterator <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache common collections4 iterators list iterator wrapper r0 <NEXT> $ r3 = r5 iterator <NEXT> r1 = java util list iterator $ r3 <NEXT> $ i2 = r1 previous index <NEXT> return $ i2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org apache common collections4 iterators list iterator wrapper r0 <NEXT> $ i0 = r6 current index <NEXT> $ i1 = $ i0 - 1 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache common collections4 iterators loop iterator r0 <NEXT> $ r1 = r7 collection <NEXT> $ i0 = $ r1 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r6 = new java util no such element exception <NEXT> specialinvoke r6 < init > \ `` there be no element for this iterator to loop on\ `` <NEXT> throw r6 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r8 = org apache common collections4 iterators loop iterator r0 <NEXT> $ r2 = r8 iterator <NEXT> $ z0 = $ r2 have next <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r9 = org apache common collections4 iterators loop iterator r0 <NEXT> r9 reset <NEXT> label r10 = org apache common collections4 iterators loop iterator r0 <NEXT> $ r3 = r10 iterator <NEXT> $ r4 = $ r3 next <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collections4 iterators loop iterator r0 <NEXT> $ r1 = r2 iterator <NEXT> $ r1 remove <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common collections4 iterators loop list iterator r0 <NEXT> $ r2 = r3 iterator <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common collections4 iterators object graph iterator r0 <NEXT> r5 update current iterator <NEXT> r6 = org apache common collections4 iterators object graph iterator r0 <NEXT> $ z0 = r6 have next <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = new java util no such element exception <NEXT> specialinvoke r4 < init > \ `` no more element in the iteration\ `` <NEXT> throw r4 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r7 = org apache common collections4 iterators object graph iterator r0 <NEXT> $ r2 = r7 current iterator <NEXT> r8 = org apache common collections4 iterators object graph iterator r0 <NEXT> r8 last used iterator = $ r2 <NEXT> r9 = org apache common collections4 iterators object graph iterator r0 <NEXT> r1 = r9 current value <NEXT> r10 = org apache common collections4 iterators object graph iterator r0 <NEXT> r10 current value = null <NEXT> r11 = org apache common collections4 iterators object graph iterator r0 <NEXT> r11 have next = 0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common collections4 iterators singleton iterator r0 <NEXT> $ z0 = r1 before first <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org apache common collections4 iterators singleton iterator r0 <NEXT> $ z1 = r2 remove <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common collections4 iterators singleton iterator r0 <NEXT> $ z0 = r5 remove allow <NEXT> if $ z0 == 0 goto label3 <NEXT> r6 = org apache common collections4 iterators singleton iterator r0 <NEXT> $ z1 = r6 remove <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r7 = org apache common collections4 iterators singleton iterator r0 <NEXT> $ z2 = r7 before first <NEXT> if $ z2 == 0 goto label2 <NEXT> label r3 = new java lang illegal state exception <NEXT> specialinvoke r3 < init > <NEXT> throw r3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label r8 = org apache common collections4 iterators singleton iterator r0 <NEXT> r8 object = null <NEXT> r9 = org apache common collections4 iterators singleton iterator r0 <NEXT> r9 remove = 1 <NEXT> goto label4 <NEXT> label return <NEXT> if $ z0 == 0 goto label3 <NEXT> label r4 = new java lang unsupported operation exception <NEXT> specialinvoke r4 < init > <NEXT> throw r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common collections4 list node cache link list r0 <NEXT> $ i1 = r1 cache size <NEXT> r2 = org apache common collections4 list node cache link list r0 <NEXT> $ i0 = r2 maximum cache size <NEXT> if $ i1 < $ i0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 < $ i0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common collections4 list node cache link list r0 <NEXT> r2 = r4 get node from cache <NEXT> if r2 ! = null goto label1 <NEXT> $ r3 = specialinvoke r0 create node r1 <NEXT> return $ r3 <NEXT> if r2 ! = null goto label1 <NEXT> label r2 set value r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common collections4 list tree list r0 <NEXT> $ i0 = r1 mod count <NEXT> $ i1 = $ i0 + 1 <NEXT> r2 = org apache common collections4 list tree list r0 <NEXT> r2 mod count = $ i1 <NEXT> r3 = org apache common collections4 list tree list r0 <NEXT> r3 root = null <NEXT> r4 = org apache common collections4 list tree list r0 <NEXT> r4 size = 0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return 0 <NEXT> if r0 ! = null goto label1 <NEXT> label i1 = 1 <NEXT> r1 = r0 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> r2 = r1 next <NEXT> $ i0 = 31 * i1 <NEXT> if r2 ! = null goto label3 <NEXT> $ i2 = 0 <NEXT> goto label4 <NEXT> label i1 = $ i0 + $ i2 <NEXT> goto label2 <NEXT> if r2 ! = null goto label3 <NEXT> label $ i2 = r2 hash code <NEXT> if $ z0 == 0 goto label5 <NEXT> label return i1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common collections4 list fix size list fix size list r0 <NEXT> r2 = java util list $ r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common collections4 map abstract hash map r0 <NEXT> $ r1 = r5 key set <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new org apache common collections4 map abstract hash map $ key set <NEXT> r6 = org apache common collections4 map abstract hash map r0 <NEXT> specialinvoke r4 < init > r6 <NEXT> r7 = org apache common collections4 map abstract hash map r0 <NEXT> r7 key set = r4 <NEXT> label r8 = org apache common collections4 map abstract hash map r0 <NEXT> $ r2 = r8 key set <NEXT> r9 = java util set $ r2 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> i1 = 0 <NEXT> r4 = org apache common collections4 map abstract hash map r0 <NEXT> r1 = r4 create entry set iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r2 = r1 next <NEXT> $ r3 = java util map $ entry $ r2 <NEXT> $ i0 = $ r3 hash code <NEXT> i1 = i1 + $ i0 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return i1 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common collections4 map abstract link map r0 <NEXT> $ r1 = r5 create entry null -1 null null <NEXT> r6 = org apache common collections4 map abstract link map r0 <NEXT> r6 header = $ r1 <NEXT> r7 = org apache common collections4 map abstract link map r0 <NEXT> $ r4 = r7 header <NEXT> r8 = org apache common collections4 map abstract link map r0 <NEXT> $ r3 = r8 header <NEXT> r9 = org apache common collections4 map abstract link map r0 <NEXT> $ r2 = r9 header <NEXT> $ r3 after = $ r2 <NEXT> $ r4 before = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common collections4 map abstract reference map r0 <NEXT> r1 purge <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache common collections4 map composite map r0 <NEXT> $ r2 = r8 composite <NEXT> $ i0 = lengthof $ r2 <NEXT> i1 = $ i0 - 1 <NEXT> label if i1 < 0 goto label3 <NEXT> r9 = org apache common collections4 map composite map r0 <NEXT> $ r3 = r9 composite <NEXT> $ r4 = $ r3 [ i1 ] <NEXT> $ z0 = $ r4 contain key r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> r10 = org apache common collections4 map composite map r0 <NEXT> $ r5 = r10 composite <NEXT> $ r6 = $ r5 [ i1 ] <NEXT> $ r7 = $ r6 get r1 <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i1 = i1 + -1 <NEXT> goto label1 <NEXT> label if i1 < 0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common collections4 map list order map r0 <NEXT> $ i0 = r5 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r4 = new java util no such element exception <NEXT> specialinvoke r4 < init > \ `` map be empty\ `` <NEXT> throw r4 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r6 = org apache common collections4 map list order map r0 <NEXT> $ r1 = r6 insert order <NEXT> r7 = org apache common collections4 map list order map r0 <NEXT> $ i1 = r7 size <NEXT> $ i2 = $ i1 - 1 <NEXT> $ r2 = $ r1 get $ i2 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache common collections4 map list order map $ key set view <NEXT> r3 = org apache common collections4 map list order map r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = java util set r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r21 = org apache common collections4 map list order map r0 <NEXT> $ z0 = r21 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> return \ `` { } \ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> label r20 = new java lang string builder <NEXT> specialinvoke r20 < init > <NEXT> r20 append 123 <NEXT> z2 = 1 <NEXT> r22 = org apache common collections4 map list order map r0 <NEXT> $ r8 = r22 entry set <NEXT> r2 = $ r8 iterator <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label9 <NEXT> $ r11 = r2 next <NEXT> r3 = java util map $ entry $ r11 <NEXT> r4 = r3 get key <NEXT> r5 = r3 get value <NEXT> if z2 == 0 goto label3 <NEXT> z2 = 0 <NEXT> goto label4 <NEXT> label if r4 ! = r0 goto label5 <NEXT> $ r18 = \ `` this map \ `` <NEXT> goto label6 <NEXT> label r20 append $ r18 <NEXT> r20 append 61 <NEXT> if r5 ! = r0 goto label7 <NEXT> $ r19 = \ `` this map \ `` <NEXT> goto label8 <NEXT> label r20 append $ r19 <NEXT> goto label2 <NEXT> if r5 ! = r0 goto label7 <NEXT> label $ r19 = r5 <NEXT> label if r4 ! = r0 goto label5 <NEXT> label $ r18 = r4 <NEXT> if z2 == 0 goto label3 <NEXT> label r20 append \ <NEXT> if $ z1 == 0 goto label9 <NEXT> label r20 append 125 <NEXT> $ r10 = r20 to string <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common collections4 map l r u map r0 <NEXT> $ z0 = r1 scan until removable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i7 = 0 <NEXT> if r1 == null goto label1 <NEXT> $ i6 = r1 hash code <NEXT> i7 = 0 ^ $ i6 <NEXT> label if r2 == null goto label2 <NEXT> $ i5 = r2 hash code <NEXT> i7 = i7 ^ $ i5 <NEXT> label $ i0 = i7 < < 9 <NEXT> $ i1 = $ i0 ^ -1 <NEXT> i8 = i7 + $ i1 <NEXT> $ i2 = i8 > > > 14 <NEXT> i9 = i8 ^ $ i2 <NEXT> $ i3 = i9 < < 4 <NEXT> i10 = i9 + $ i3 <NEXT> $ i4 = i10 > > > 10 <NEXT> i11 = i10 ^ $ i4 <NEXT> return i11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = new java lang null pointer exception <NEXT> specialinvoke $ r2 < init > \ `` key must not be null\ `` <NEXT> throw $ r2 <NEXT> if r1 ! = null goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r11 = org apache common collections4 map predicate map r0 <NEXT> $ r3 = r11 key predicate <NEXT> if $ r3 == null goto label1 <NEXT> r12 = org apache common collections4 map predicate map r0 <NEXT> $ r7 = r12 key predicate <NEXT> $ z1 = $ r7 evaluate r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r9 = new java lang illegal argument exception <NEXT> specialinvoke r9 < init > \ `` can not add key - predicate reject it\ `` <NEXT> throw r9 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label r13 = org apache common collections4 map predicate map r0 <NEXT> $ r4 = r13 value predicate <NEXT> if $ r4 == null goto label2 <NEXT> r14 = org apache common collections4 map predicate map r0 <NEXT> $ r5 = r14 value predicate <NEXT> $ z0 = $ r5 evaluate r2 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r10 = new java lang illegal argument exception <NEXT> specialinvoke r10 < init > \ `` can not add value - predicate reject it\ `` <NEXT> throw r10 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache common collections4 map static bucket map $ key set <NEXT> r3 = org apache common collections4 map static bucket map r0 <NEXT> specialinvoke r2 < init > r3 null <NEXT> r4 = java util set r2 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> b0 = @ parameter2 <NEXT> r2 = org apache common collections4 map utils get byte r0 r1 <NEXT> if r2 ! = null goto label1 <NEXT> return b0 <NEXT> if r2 ! = null goto label1 <NEXT> label $ b1 = r2 byte value <NEXT> return $ b1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> s0 = @ parameter2 <NEXT> r2 = org apache common collections4 map utils get short r0 r1 <NEXT> if r2 ! = null goto label1 <NEXT> return s0 <NEXT> if r2 ! = null goto label1 <NEXT> label $ s1 = r2 short value <NEXT> return $ s1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r2 = org apache common collections4 map utils get integer r0 r1 <NEXT> if r2 ! = null goto label1 <NEXT> return i0 <NEXT> if r2 ! = null goto label1 <NEXT> label $ i1 = r2 int value <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 ! = null goto label1 <NEXT> r8 = new java lang null pointer exception <NEXT> specialinvoke r8 < init > \ `` value must not be null \ `` <NEXT> throw r8 <NEXT> if r2 ! = null goto label1 <NEXT> label $ z0 = r2 instanceof java util collection <NEXT> if $ z0 == 0 goto label4 <NEXT> r6 = java util collection r2 <NEXT> $ z3 = r6 be empty <NEXT> if $ z3 ! = 0 goto label2 <NEXT> r9 = org apache common collections4 multimap abstract multi value map r0 <NEXT> $ r4 = r9 get r1 <NEXT> $ z4 = $ r4 add all r6 <NEXT> if $ z4 == 0 goto label2 <NEXT> $ z5 = 1 <NEXT> goto label3 <NEXT> label return $ z5 <NEXT> if $ z4 == 0 goto label2 <NEXT> label $ z5 = 0 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r7 = r2 iterator <NEXT> $ z1 = r7 have next <NEXT> if $ z1 == 0 goto label5 <NEXT> r10 = org apache common collections4 multimap abstract multi value map r0 <NEXT> $ r3 = r10 get r1 <NEXT> $ z2 = org apache common collections4 collection utils add all $ r3 r7 <NEXT> if $ z2 == 0 goto label5 <NEXT> $ z6 = 1 <NEXT> goto label6 <NEXT> label return $ z6 <NEXT> if $ z2 == 0 goto label5 <NEXT> label $ z6 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common collections4 multimap abstract set value map r0 <NEXT> $ r2 = r3 get r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r6 = new org apache common collections4 multiset abstract multi set $ 1 <NEXT> r7 = org apache common collections4 multiset abstract multi set r0 <NEXT> specialinvoke r6 < init > r7 <NEXT> r8 = org apache common collections4 multiset abstract multi set r0 <NEXT> $ r3 = r8 entry set <NEXT> $ r4 = $ r3 iterator <NEXT> r9 = org apache common collections4 transformer r6 <NEXT> $ r5 = org apache common collections4 iterator utils transform iterator $ r4 r9 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common collections4 multiset synchronized multi set synchronized multi set r0 <NEXT> r2 = org apache common collections4 multi set $ r1 <NEXT> return r2 <END>
<BEG> $ r0 = org apache common collections4 functors null predicate null predicate <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common collections4 functors equal predicate equal predicate r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common collections4 functors all predicate all predicate r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collections4 queue abstract queue decorator r0 <NEXT> $ r1 = r2 decorate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r9 = org apache common collections4 queue circular fifo queue r0 <NEXT> i1 = r9 size <NEXT> if i0 < 0 goto label1 <NEXT> if i0 < i1 goto label2 <NEXT> label r8 = new java util no such element exception <NEXT> $ r2 = newarray java lang object [ 2 ] <NEXT> $ r3 = java lang integer value of i0 <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> $ r4 = java lang integer value of i1 <NEXT> $ r2 [ 1 ] = $ r4 <NEXT> $ r5 = java lang string format \ `` the specified index % 1 $ d be outside the available range [ 0 % 2 $ d \ <NEXT> specialinvoke r8 < init > $ r5 <NEXT> throw r8 <NEXT> if i0 < i1 goto label2 <NEXT> label r10 = org apache common collections4 queue circular fifo queue r0 <NEXT> $ i3 = r10 start <NEXT> $ i5 = $ i3 + i0 <NEXT> r11 = org apache common collections4 queue circular fifo queue r0 <NEXT> $ i4 = r11 max element <NEXT> i2 = $ i5 % $ i4 <NEXT> r12 = org apache common collections4 queue circular fifo queue r0 <NEXT> $ r6 = r12 element <NEXT> $ r7 = $ r6 [ i2 ] <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common collections4 sequence keep command r0 <NEXT> $ r2 = r3 get object <NEXT> r1 visit keep command $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collections4 set abstract navigable set decorator r0 <NEXT> $ r1 = r2 decorate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache common collections4 set composite set r0 <NEXT> $ r2 = r7 mutator <NEXT> if $ r2 ! = null goto label1 <NEXT> r6 = new java lang unsupported operation exception <NEXT> specialinvoke r6 < init > \ `` add be not support on composite set without a set mutator strategy\ `` <NEXT> throw r6 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r8 = org apache common collections4 set composite set r0 <NEXT> $ r4 = r8 mutator <NEXT> r9 = org apache common collections4 set composite set r0 <NEXT> $ r3 = r9 all <NEXT> r10 = org apache common collections4 set composite set r0 <NEXT> $ z0 = $ r4 add r10 $ r3 r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common collections4 set composite set r0 <NEXT> r2 mutator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = org apache common collections4 set composite set r0 <NEXT> $ r5 = r15 get set <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r7 = r2 next <NEXT> r3 = java util set $ r7 <NEXT> r4 = org apache common collections4 collection utils intersection r3 r1 <NEXT> $ i0 = r4 size <NEXT> if $ i0 < = 0 goto label3 <NEXT> r16 = org apache common collections4 set composite set r0 <NEXT> $ r8 = r16 mutator <NEXT> if $ r8 ! = null goto label2 <NEXT> r13 = new java lang unsupported operation exception <NEXT> specialinvoke r13 < init > \ `` collision add composited set with no set mutator set\ `` <NEXT> throw r13 <NEXT> if $ r8 ! = null goto label2 <NEXT> label r17 = org apache common collections4 set composite set r0 <NEXT> $ r9 = r17 get mutator <NEXT> r18 = org apache common collections4 set composite set r0 <NEXT> $ r9 resolve collision r18 r3 r1 r4 <NEXT> $ r10 = org apache common collections4 collection utils intersection r3 r1 <NEXT> $ i1 = $ r10 size <NEXT> if $ i1 < = 0 goto label3 <NEXT> r14 = new java lang illegal argument exception <NEXT> specialinvoke r14 < init > \ `` attempt to add illegal entry unresolved by set mutator resolve collision \ `` <NEXT> throw r14 <NEXT> if $ i1 < = 0 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r19 = org apache common collections4 set composite set r0 <NEXT> $ r6 = r19 all <NEXT> $ r6 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = org apache common collections4 set composite set r0 <NEXT> $ r5 = r15 get set <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r7 = r2 next <NEXT> r3 = java util set $ r7 <NEXT> r4 = org apache common collections4 collection utils intersection r3 r1 <NEXT> $ i0 = r4 size <NEXT> if $ i0 < = 0 goto label3 <NEXT> r16 = org apache common collections4 set composite set r0 <NEXT> $ r8 = r16 mutator <NEXT> if $ r8 ! = null goto label2 <NEXT> r13 = new java lang unsupported operation exception <NEXT> specialinvoke r13 < init > \ `` collision add composited set with no set mutator set\ `` <NEXT> throw r13 <NEXT> if $ r8 ! = null goto label2 <NEXT> label r17 = org apache common collections4 set composite set r0 <NEXT> $ r9 = r17 get mutator <NEXT> r18 = org apache common collections4 set composite set r0 <NEXT> $ r9 resolve collision r18 r3 r1 r4 <NEXT> $ r10 = org apache common collections4 collection utils intersection r3 r1 <NEXT> $ i1 = $ r10 size <NEXT> if $ i1 < = 0 goto label3 <NEXT> r14 = new java lang illegal argument exception <NEXT> specialinvoke r14 < init > \ `` attempt to add illegal entry unresolved by set mutator resolve collision \ `` <NEXT> throw r14 <NEXT> if $ i1 < = 0 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r19 = org apache common collections4 set composite set r0 <NEXT> $ r6 = r19 all <NEXT> $ r6 add r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common collections4 functors instantiate transformer instantiate transformer r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache common compress archivers archive input stream r0 <NEXT> $ l1 = r1 byte read <NEXT> $ l2 = $ l1 - l0 <NEXT> r2 = org apache common compress archivers archive input stream r0 <NEXT> r2 byte read = $ l2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress archivers archive input stream r0 <NEXT> $ l0 = r1 byte read <NEXT> $ i1 = int $ l0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ l1 = long i0 <NEXT> r1 = org apache common compress archivers archive output stream r0 <NEXT> r1 count $ l1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress archivers dump dump archive entry r0 <NEXT> $ z0 = r1 be delete <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common compress archivers dump dump archive entry r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache common compress archivers dump dump archive entry r0 <NEXT> r1 size = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = new java util date <NEXT> r3 = org apache common compress archivers dump dump archive entry r0 <NEXT> $ l0 = r3 atime <NEXT> specialinvoke r2 < init > $ l0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress archivers dump dump archive summary r0 <NEXT> $ i0 = r1 level <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common compress archivers sevenz seven z archive entry r0 <NEXT> r1 be anti item = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label r3 = org apache common compress archivers sevenz seven z archive entry r0 <NEXT> r3 have last modified date = $ z1 <NEXT> r4 = org apache common compress archivers sevenz seven z archive entry r0 <NEXT> $ z0 = r4 have last modified date <NEXT> if $ z0 == 0 goto label3 <NEXT> $ l0 = org apache common compress archivers sevenz seven z archive entry java time to ntfs time r1 <NEXT> r5 = org apache common compress archivers sevenz seven z archive entry r0 <NEXT> r5 last modified date = $ l0 <NEXT> label return <NEXT> if r1 == null goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache common compress archivers sevenz seven z file r0 <NEXT> $ r2 = r9 channel <NEXT> if $ r2 == null goto label6 <NEXT> label r10 = org apache common compress archivers sevenz seven z file r0 <NEXT> $ r3 = r10 channel <NEXT> $ r3 close <NEXT> label r11 = org apache common compress archivers sevenz seven z file r0 <NEXT> r11 channel = null <NEXT> r12 = org apache common compress archivers sevenz seven z file r0 <NEXT> $ r4 = r12 password <NEXT> if $ r4 == null goto label3 <NEXT> r13 = org apache common compress archivers sevenz seven z file r0 <NEXT> $ r5 = r13 password <NEXT> java util array fill $ r5 0 <NEXT> label r14 = org apache common compress archivers sevenz seven z file r0 <NEXT> r14 password = null <NEXT> goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common compress archivers sevenz seven z archive entry r1 <NEXT> r4 = org apache common compress archivers sevenz seven z output file r0 <NEXT> $ r3 = r4 file <NEXT> $ r3 add r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = lengthof r1 <NEXT> r2 = org apache common compress archivers sevenz seven z output file r0 <NEXT> r2 write r1 0 $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ b3 = l0 cmp 0l <NEXT> if $ b3 < = 0 goto label1 <NEXT> r2 = org apache common compress archivers tar tar archive input stream r0 <NEXT> $ z0 = specialinvoke r2 be directory <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 0l <NEXT> if $ z0 == 0 goto label2 <NEXT> label r3 = org apache common compress archivers tar tar archive input stream r0 <NEXT> $ l5 = r3 entry size <NEXT> r4 = org apache common compress archivers tar tar archive input stream r0 <NEXT> $ l4 = r4 entry offset <NEXT> l1 = $ l5 - $ l4 <NEXT> r5 = org apache common compress archivers tar tar archive input stream r0 <NEXT> $ r1 = r5 be <NEXT> $ l6 = java lang math min l0 l1 <NEXT> l2 = org apache common compress utils i o utils skip $ r1 $ l6 <NEXT> r6 = org apache common compress archivers tar tar archive input stream r0 <NEXT> r6 count l2 <NEXT> r7 = org apache common compress archivers tar tar archive input stream r0 <NEXT> $ l7 = r7 entry offset <NEXT> $ l8 = $ l7 + l2 <NEXT> r8 = org apache common compress archivers tar tar archive input stream r0 <NEXT> r8 entry offset = $ l8 <NEXT> return l2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress archivers zip resource alignment extra field r0 <NEXT> $ s0 = r1 alignment <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common compress archivers zip x000a_ntfs r0 <NEXT> $ r1 = r3 access time <NEXT> $ r2 = org apache common compress archivers zip x000a_ntfs zip to date $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common compress archivers zip x000a_ntfs r0 <NEXT> $ r1 = r3 create time <NEXT> $ r2 = org apache common compress archivers zip x000a_ntfs zip to date $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress archivers zip x5455_ extend timestamp r0 <NEXT> $ z0 = r1 bit0_modify time present <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress archivers zip x5455_ extend timestamp r0 <NEXT> $ z0 = r1 bit2_create time present <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label r4 = org apache common compress archivers zip x5455_ extend timestamp r0 <NEXT> r4 bit1_access time present = $ z0 <NEXT> if r1 == null goto label3 <NEXT> r5 = org apache common compress archivers zip x5455_ extend timestamp r0 <NEXT> $ b2 = r5 flag <NEXT> $ b3 = $ b2 | 2 <NEXT> goto label4 <NEXT> label $ b1 = byte $ b3 <NEXT> r7 = org apache common compress archivers zip x5455_ extend timestamp r0 <NEXT> r7 flag = $ b1 <NEXT> r8 = org apache common compress archivers zip x5455_ extend timestamp r0 <NEXT> r8 access time = r1 <NEXT> return <NEXT> if r1 == null goto label3 <NEXT> label r6 = org apache common compress archivers zip x5455_ extend timestamp r0 <NEXT> $ b0 = r6 flag <NEXT> $ b3 = $ b0 & -3 <NEXT> if r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common compress archivers zip x7875_ new unix r0 <NEXT> $ r1 = r2 gid <NEXT> $ l0 = org apache common compress archivers zip zip util big to long $ r1 <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common compress archivers zip x7875_ new unix zero <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common compress archivers zip zip archive entry r0 <NEXT> r1 raw flag = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common compress archivers zip zip archive entry request r0 <NEXT> $ r1 = r3 payload supplier <NEXT> $ r2 = $ r1 get <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org apache common compress change change <NEXT> specialinvoke r3 < init > r1 4 <NEXT> r4 = org apache common compress change change set r0 <NEXT> specialinvoke r4 add deletion r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> r1 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0 <NEXT> r1 back reference offset = i0 <NEXT> r2 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0 <NEXT> r2 bytes remain = l1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r2 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0 <NEXT> i2 = r2 available <NEXT> if i1 < = i2 goto label1 <NEXT> $ i4 = i1 - i2 <NEXT> r3 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0 <NEXT> specialinvoke r3 try to copy $ i4 <NEXT> label r4 = org apache common compress compressor lz77support abstract l z77 compressor input stream r0 <NEXT> $ i3 = specialinvoke r4 read from buffer r1 i0 i1 <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress compressor lz77support parameter r0 <NEXT> $ i0 = r1 max literal length <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i1 = lengthof r0 <NEXT> $ i0 = lengthof r1 <NEXT> $ z0 = org apache common compress utils archive utils be equal r0 0 $ i1 r1 0 $ i0 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label3 <NEXT> $ b1 = r0 [ i2 ] <NEXT> if $ b1 == 0 goto label2 <NEXT> return 0 <NEXT> if $ b1 == 0 goto label2 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label3 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress utils bit input stream r0 <NEXT> $ i0 = r1 bit cache size <NEXT> return $ i0 <END>
<BEG> $ r0 = new org apache common compress archivers sevenz seven z file option $ builder <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> l1 = org apache common compress archivers tar tar utils parse octal or binary r0 i0 12 <NEXT> $ i3 = i0 + 12 <NEXT> l2 = org apache common compress archivers tar tar utils parse octal or binary r0 $ i3 12 <NEXT> $ r1 = new org apache common compress archivers tar tar archive struct sparse <NEXT> specialinvoke $ r1 < init > l1 l2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common compress archivers zip zip archive output stream r0 <NEXT> r3 encode = r1 <NEXT> $ r2 = org apache common compress archivers zip zip encode helper get zip encode r1 <NEXT> r4 = org apache common compress archivers zip zip archive output stream r0 <NEXT> r4 zip encode = $ r2 <NEXT> r5 = org apache common compress archivers zip zip archive output stream r0 <NEXT> $ z0 = r5 use u t f8 flag <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = org apache common compress archivers zip zip encode helper be u t f8 r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r6 = org apache common compress archivers zip zip archive output stream r0 <NEXT> r6 use u t f8 flag = 0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org apache common compress change change <NEXT> specialinvoke r3 < init > r1 1 <NEXT> r4 = org apache common compress change change set r0 <NEXT> specialinvoke r4 add deletion r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common compress change change set result r0 <NEXT> $ r1 = r2 add from stream <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common compress compressor xz x z utils file name util <NEXT> $ r2 = $ r1 get compress filename r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r6 = new java io file input stream <NEXT> specialinvoke $ r6 < init > r0 <NEXT> r11 = null <NEXT> label $ i0 = lengthof r1 <NEXT> i1 = org apache common compress utils i o utils read fully $ r6 r1 0 $ i0 <NEXT> label if $ r6 == null goto label04 <NEXT> goto label03 <NEXT> label $ r6 close <NEXT> label return i1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress harmony pack200 b h s d codec r0 <NEXT> $ l0 = r1 large <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress harmony pack200 b h s d codec r0 <NEXT> $ l0 = r1 small <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common compress harmony pack200 metadata band group r0 <NEXT> $ r1 = r2 type_ r s <NEXT> $ i0 = $ r1 size <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache common compress harmony unpack200 bytecode b c i renumbered attribute r0 <NEXT> $ z0 = r7 renumbered <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new java lang error <NEXT> specialinvoke r6 < init > \ `` try to renumber a line number table that have already be renumbered\ `` <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org apache common compress harmony unpack200 bytecode b c i renumbered attribute r0 <NEXT> r8 renumbered = 1 <NEXT> r9 = org apache common compress harmony unpack200 bytecode b c i renumbered attribute r0 <NEXT> r2 = r9 get start p c <NEXT> i3 = 0 <NEXT> label $ i0 = lengthof r2 <NEXT> if i3 > = $ i0 goto label3 <NEXT> $ i1 = r2 [ i3 ] <NEXT> $ r3 = r1 get $ i1 <NEXT> $ r4 = java lang integer $ r3 <NEXT> $ i2 = $ r4 int value <NEXT> r2 [ i3 ] = $ i2 <NEXT> i3 = i3 + 1 <NEXT> goto label2 <NEXT> if i3 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common compress harmony unpack200 bytecode c p interface method ref r0 <NEXT> $ r1 = r2 name and type <NEXT> $ i0 = $ r1 invoke interface count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common compress harmony unpack200 ic tuple r0 <NEXT> $ r1 = r2 cache out class string <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common digester digester r0 <NEXT> $ r1 = r2 sax log <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r16 = org apache common digester digester r0 <NEXT> $ r4 = r16 sax log <NEXT> $ z0 = $ r4 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r17 = org apache common digester digester r0 <NEXT> $ r6 = r17 sax log <NEXT> r15 = new java lang string buffer <NEXT> specialinvoke r15 < init > <NEXT> $ r7 = r15 append \ `` notation decl \ `` <NEXT> $ r8 = $ r7 append r1 <NEXT> $ r9 = $ r8 append \ <NEXT> $ r10 = $ r9 append r2 <NEXT> $ r11 = $ r10 append \ <NEXT> $ r12 = $ r11 append r3 <NEXT> $ r13 = $ r12 append \ `` \ `` <NEXT> $ r14 = $ r13 to string <NEXT> $ r6 debug $ r14 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common digester digester r0 <NEXT> r2 entity resolver = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new org apache common digester call method rule <NEXT> specialinvoke r4 < init > r2 <NEXT> r5 = org apache common digester digester r0 <NEXT> r6 = org apache common digester rule r4 <NEXT> r5 add rule r1 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org apache common digester set property rule <NEXT> specialinvoke r3 < init > <NEXT> r4 = org apache common digester digester r0 <NEXT> r5 = org apache common digester rule r3 <NEXT> r4 add rule r1 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> label r6 = org apache common digester digester r0 <NEXT> $ r2 = r6 stack <NEXT> $ r3 = $ r2 peek <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common digester plugins declaration r0 <NEXT> $ r1 = r2 id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache common digester plugins plugin manager r0 <NEXT> $ r2 = r7 declaration by id <NEXT> $ r3 = $ r2 get r1 <NEXT> r6 = org apache common digester plugins declaration $ r3 <NEXT> if r6 ! = null goto label1 <NEXT> r8 = org apache common digester plugins plugin manager r0 <NEXT> $ r4 = r8 parent <NEXT> if $ r4 == null goto label1 <NEXT> r9 = org apache common digester plugins plugin manager r0 <NEXT> $ r5 = r9 parent <NEXT> r6 = $ r5 get declaration by id r1 <NEXT> label return r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common digester plugins plugin rule r0 <NEXT> $ r1 = r2 parent <NEXT> r3 = org apache common digester rule $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common digester plugins plugin rule r0 <NEXT> $ r1 = r2 plugin manager <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common digester plugins plugin rule r0 <NEXT> $ r1 = r2 rule factory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common digester abstract rule impl r0 <NEXT> r2 digester = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache common digester set nested property rule r0 <NEXT> $ r3 = r5 element name <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common digester simple regex matcher r0 <NEXT> r2 log = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r6 = new org apache common digester xmlrules from xml rule set <NEXT> specialinvoke r6 < init > r0 r1 <NEXT> r7 = new org apache common digester digester <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache common digester rule set r6 <NEXT> r7 add rule set r8 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common digester3 abstract method rule r0 <NEXT> $ z0 = r1 use exact match <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache common digester3 binder abstract rule module r0 <NEXT> $ r3 = r4 rule binder <NEXT> $ r3 add error r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = new org apache common digester3 binder object create builder <NEXT> r9 = org apache common digester3 binder link rule builder r0 <NEXT> $ r5 = r9 key pattern <NEXT> r10 = org apache common digester3 binder link rule builder r0 <NEXT> $ r4 = r10 namespace u r i <NEXT> r11 = org apache common digester3 binder link rule builder r0 <NEXT> $ r3 = r11 main binder <NEXT> r12 = org apache common digester3 binder link rule builder r0 <NEXT> $ r2 = r12 class loader <NEXT> r13 = org apache common digester3 binder link rule builder r0 <NEXT> specialinvoke r8 < init > $ r5 $ r4 $ r3 r13 $ r2 <NEXT> r14 = org apache common digester3 binder link rule builder r0 <NEXT> r15 = org apache common digester3 binder abstract back to link rule builder r8 <NEXT> $ r6 = specialinvoke r14 add provider r15 <NEXT> $ r7 = org apache common digester3 binder object create builder $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r7 = new org apache common digester3 binder plugin create rule builder <NEXT> r8 = org apache common digester3 binder link rule builder r0 <NEXT> $ r4 = r8 key pattern <NEXT> r9 = org apache common digester3 binder link rule builder r0 <NEXT> $ r3 = r9 namespace u r i <NEXT> r10 = org apache common digester3 binder link rule builder r0 <NEXT> $ r2 = r10 main binder <NEXT> r11 = org apache common digester3 binder link rule builder r0 <NEXT> specialinvoke r7 < init > $ r4 $ r3 $ r2 r11 <NEXT> r12 = org apache common digester3 binder link rule builder r0 <NEXT> r13 = org apache common digester3 binder abstract back to link rule builder r7 <NEXT> $ r5 = specialinvoke r12 add provider r13 <NEXT> $ r6 = org apache common digester3 binder plugin create rule builder $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r2 = org apache common digester3 binder object create builder r0 <NEXT> r2 report error \ `` create object use constructor class < ? > [ ] \ <NEXT> r3 = org apache common digester3 binder object create builder r0 <NEXT> return r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org apache common digester3 binder object create builder r0 <NEXT> r4 constructor argument type = r1 <NEXT> r5 = org apache common digester3 binder object create builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common digester3 digester r0 <NEXT> $ r1 = r2 sax log <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common digester3 digester r0 <NEXT> $ z0 = r1 use context class loader <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common digester3 digester r0 <NEXT> $ r1 = r2 custom content handler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r29 = org apache common digester3 digester r0 <NEXT> $ r4 = r29 log <NEXT> $ z0 = $ r4 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r30 = org apache common digester3 digester r0 <NEXT> $ r9 = r30 log <NEXT> r25 = new java lang string builder <NEXT> specialinvoke r25 < init > <NEXT> $ r10 = r25 append \ `` register \'\ `` <NEXT> $ r11 = $ r10 append r1 <NEXT> $ r12 = $ r11 append \ `` \ ' \'\ `` <NEXT> $ r13 = $ r12 append r2 <NEXT> $ r14 = $ r13 append \ `` \'\ `` <NEXT> $ r15 = $ r14 to string <NEXT> $ r9 debug $ r15 <NEXT> label r31 = org apache common digester3 digester r0 <NEXT> $ r6 = r31 entity validator <NEXT> r26 = new java net url <NEXT> specialinvoke r26 < init > r2 <NEXT> $ r6 put r1 r26 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = new org apache common digester3 set property rule <NEXT> specialinvoke r5 < init > r2 r3 <NEXT> r6 = org apache common digester3 digester r0 <NEXT> r7 = org apache common digester3 rule r5 <NEXT> r6 add rule r1 r7 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common digester3 set property rule r0 <NEXT> $ z0 = r1 ignore miss property <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common exec command line r0 <NEXT> $ z0 = r1 be file <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common exec log output stream r0 <NEXT> $ r1 = r2 buffer <NEXT> $ i0 = $ r1 size <NEXT> if $ i0 < = 0 goto label1 <NEXT> r3 = org apache common exec log output stream r0 <NEXT> r3 process buffer <NEXT> label return <END>
<BEG> $ r1 = java lang boolean false <NEXT> $ r2 = $ r1 to string <NEXT> r0 = java lang system get property \ `` org apache common exec debug\ <NEXT> $ r3 = java lang boolean true <NEXT> $ r4 = $ r3 to string <NEXT> $ z0 = $ r4 equal ignore case r0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org apache common httpclient auth basic scheme log <NEXT> $ r3 trace \ `` enter basic scheme authenticate credential http method \ `` <NEXT> if r2 ! = null goto label1 <NEXT> r17 = new java lang illegal argument exception <NEXT> specialinvoke r17 < init > \ `` method may not be null\ `` <NEXT> throw r17 <NEXT> if r2 ! = null goto label1 <NEXT> label r16 = org apache common httpclient username password credential r1 <NEXT> label goto label4 <NEXT> label $ r4 = r2 get params <NEXT> $ r5 = $ r4 get credential charset <NEXT> $ r6 = org apache common httpclient auth basic scheme authenticate r16 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient auth n t l m scheme r0 <NEXT> $ r1 = r2 ntlmchallenge <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r8 = new java lang illegal argument exception <NEXT> specialinvoke r8 < init > \ `` parameter name may not be null\ `` <NEXT> throw r8 <NEXT> if r1 ! = null goto label1 <NEXT> label r9 = org apache common httpclient auth r f c2617 scheme r0 <NEXT> $ r2 = r9 params <NEXT> if $ r2 ! = null goto label2 <NEXT> return null <NEXT> if $ r2 ! = null goto label2 <NEXT> label r10 = org apache common httpclient auth r f c2617 scheme r0 <NEXT> $ r3 = r10 params <NEXT> $ r4 = r1 to lower case <NEXT> $ r5 = $ r3 get $ r4 <NEXT> $ r6 = java lang string $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common httpclient chunk input stream r0 <NEXT> $ z0 = r5 close <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = new java io i o exception <NEXT> specialinvoke r4 < init > \ `` attempt read from closed stream \ `` <NEXT> throw r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org apache common httpclient chunk input stream r0 <NEXT> $ z1 = r6 eof <NEXT> if $ z1 == 0 goto label2 <NEXT> return -1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r7 = org apache common httpclient chunk input stream r0 <NEXT> $ i1 = r7 po <NEXT> r8 = org apache common httpclient chunk input stream r0 <NEXT> $ i0 = r8 chunk size <NEXT> if $ i1 < $ i0 goto label3 <NEXT> r9 = org apache common httpclient chunk input stream r0 <NEXT> specialinvoke r9 next chunk <NEXT> r10 = org apache common httpclient chunk input stream r0 <NEXT> $ z2 = r10 eof <NEXT> if $ z2 == 0 goto label3 <NEXT> label r11 = org apache common httpclient chunk input stream r0 <NEXT> $ i2 = r11 po <NEXT> $ i3 = $ i2 + 1 <NEXT> r12 = org apache common httpclient chunk input stream r0 <NEXT> r12 po = $ i3 <NEXT> r13 = org apache common httpclient chunk input stream r0 <NEXT> $ r1 = r13 in <NEXT> $ i4 = $ r1 read <NEXT> return $ i4 <END>
<BEG> r0 = @ this <NEXT> r14 = org apache common httpclient chunk output stream r0 <NEXT> $ i0 = r14 cache position <NEXT> if $ i0 < = 0 goto label1 <NEXT> r13 = new java lang string buffer <NEXT> specialinvoke r13 < init > <NEXT> r15 = org apache common httpclient chunk output stream r0 <NEXT> $ i1 = r15 cache position <NEXT> $ r3 = java lang integer to hex string $ i1 <NEXT> $ r4 = r13 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \r\n\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r1 = org apache common httpclient util encode util get ascii byte $ r6 <NEXT> r16 = org apache common httpclient chunk output stream r0 <NEXT> $ r7 = r16 stream <NEXT> $ i2 = lengthof r1 <NEXT> $ r7 write r1 0 $ i2 <NEXT> r17 = org apache common httpclient chunk output stream r0 <NEXT> $ r9 = r17 stream <NEXT> r18 = org apache common httpclient chunk output stream r0 <NEXT> $ r8 = r18 cache <NEXT> r19 = org apache common httpclient chunk output stream r0 <NEXT> $ i3 = r19 cache position <NEXT> $ r9 write $ r8 0 $ i3 <NEXT> r20 = org apache common httpclient chunk output stream r0 <NEXT> $ r12 = r20 stream <NEXT> $ r11 = org apache common httpclient chunk output stream endchunk <NEXT> $ r10 = org apache common httpclient chunk output stream endchunk <NEXT> $ i4 = lengthof $ r10 <NEXT> $ r12 write $ r11 0 $ i4 <NEXT> r21 = org apache common httpclient chunk output stream r0 <NEXT> r21 cache position = 0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient cookie r0 <NEXT> $ r1 = r2 cookie path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common httpclient cookie r0 <NEXT> r1 cookie version = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient header element r0 <NEXT> $ r1 = r2 parameter <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org apache common httpclient header element log <NEXT> $ r2 trace \ `` enter header element parse element char [ ] \ `` <NEXT> if r0 ! = null goto label1 <NEXT> $ r10 = newarray org apache common httpclient header element [ 0 ] <NEXT> return $ r10 <NEXT> if r0 ! = null goto label1 <NEXT> label r12 = new java util array list <NEXT> specialinvoke r12 < init > <NEXT> i4 = 0 <NEXT> i5 = 0 <NEXT> i0 = lengthof r0 <NEXT> z1 = 0 <NEXT> goto label9 <NEXT> label if i4 < i0 goto label2 <NEXT> label c1 = r0 [ i4 ] <NEXT> if c1 ! = 34 goto label5 <NEXT> if z1 ! = 0 goto label3 <NEXT> $ z2 = 1 <NEXT> goto label4 <NEXT> label z1 = $ z2 <NEXT> label r11 = null <NEXT> if z1 ! = 0 goto label6 <NEXT> if c1 ! = 44 goto label6 <NEXT> r13 = new org apache common httpclient header element <NEXT> specialinvoke r13 < init > r0 i5 i4 <NEXT> r11 = r13 <NEXT> i5 = i4 + 1 <NEXT> goto label7 <NEXT> label if r11 == null goto label8 <NEXT> r15 = org apache common httpclient name value pair r11 <NEXT> $ r4 = r15 get name <NEXT> if $ r4 == null goto label8 <NEXT> r12 add r11 <NEXT> label i4 = i4 + 1 <NEXT> if c1 ! = 44 goto label6 <NEXT> label $ i2 = i0 - 1 <NEXT> if i4 ! = $ i2 goto label7 <NEXT> r14 = new org apache common httpclient header element <NEXT> specialinvoke r14 < init > r0 i5 i0 <NEXT> r11 = r14 <NEXT> if z1 ! = 0 goto label3 <NEXT> label $ z2 = 0 <NEXT> label if i4 < i0 goto label2 <NEXT> $ i3 = r12 size <NEXT> $ r7 = newarray org apache common httpclient header element [ $ i3 ] <NEXT> $ r8 = r12 to array $ r7 <NEXT> $ r9 = org apache common httpclient header element [ ] $ r8 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common httpclient header group r0 <NEXT> r3 clear <NEXT> i1 = 0 <NEXT> goto label2 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 < $ i0 goto label1 <NEXT> label $ r2 = r1 [ i1 ] <NEXT> r4 = org apache common httpclient header group r0 <NEXT> r4 add header $ r2 <NEXT> i1 = i1 + 1 <NEXT> if i1 < $ i0 goto label1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache common httpclient header group r0 <NEXT> $ r4 = r7 header <NEXT> r2 = $ r4 iterator <NEXT> goto label2 <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r5 = r2 next <NEXT> r3 = org apache common httpclient header $ r5 <NEXT> r8 = org apache common httpclient name value pair r3 <NEXT> $ r6 = r8 get name <NEXT> $ z1 = $ r6 equal ignore case r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> return r3 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r9 = new java lang illegal argument exception <NEXT> specialinvoke r9 < init > \ `` connection may not be null\ `` <NEXT> throw r9 <NEXT> if r1 ! = null goto label1 <NEXT> label r10 = org apache common httpclient host configuration r0 <NEXT> $ r2 = r10 proxy host <NEXT> if $ r2 == null goto label4 <NEXT> r11 = org apache common httpclient host configuration r0 <NEXT> $ r4 = r11 proxy host <NEXT> r12 = org apache common httpclient http host $ r4 <NEXT> $ r5 = r12 get host name <NEXT> $ r6 = r1 get proxy host <NEXT> $ z0 = $ r5 equal ignore case $ r6 <NEXT> if $ z0 == 0 goto label2 <NEXT> r13 = org apache common httpclient host configuration r0 <NEXT> $ r7 = r13 proxy host <NEXT> r14 = org apache common httpclient http host $ r7 <NEXT> $ i0 = r14 get port <NEXT> $ i1 = r1 get proxy port <NEXT> if $ i0 ! = $ i1 goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ i0 ! = $ i1 goto label2 <NEXT> label $ z1 = 0 <NEXT> if $ r2 == null goto label4 <NEXT> label $ r3 = r1 get proxy host <NEXT> if $ r3 ! = null goto label5 <NEXT> $ z2 = 1 <NEXT> goto label6 <NEXT> label return $ z2 <NEXT> if $ r3 ! = null goto label5 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient host configuration r0 <NEXT> $ r1 = r2 host <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common httpclient host configuration r0 <NEXT> $ r1 = r3 host <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org apache common httpclient host configuration r0 <NEXT> $ r2 = r4 host <NEXT> $ i0 = $ r2 get port <NEXT> return $ i0 <NEXT> if $ r1 == null goto label1 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common httpclient host configuration r0 <NEXT> $ r1 = r4 proxy host <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org apache common httpclient host configuration r0 <NEXT> $ r2 = r5 proxy host <NEXT> r6 = org apache common httpclient http host $ r2 <NEXT> $ r3 = r6 get host name <NEXT> return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient host configuration r0 <NEXT> $ r1 = r2 local address <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r3 = org apache common httpclient http client r0 <NEXT> $ r2 = r3 params <NEXT> $ r2 make strict <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r4 = org apache common httpclient http client r0 <NEXT> $ r1 = r4 params <NEXT> $ r1 make lenient <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient http connection r0 <NEXT> $ r1 = r2 socket <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient http connection r0 <NEXT> $ r1 = r2 proxy host name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient http connection r0 <NEXT> $ r1 = r2 protocol in use <NEXT> $ z0 = $ r1 be secure <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient http connection r0 <NEXT> $ z0 = r2 be open <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org apache common httpclient http connection r0 <NEXT> $ z1 = r3 be stale <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r1 = org apache common httpclient http connection log <NEXT> $ r1 debug \ `` connection be stale close \ `` <NEXT> r4 = org apache common httpclient http connection r0 <NEXT> r4 close <NEXT> return 1 <NEXT> if $ z1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient http connection r0 <NEXT> $ r1 = r2 last response input stream <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient http client r0 <NEXT> $ r1 = r2 http connection manager <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common httpclient http connection log <NEXT> $ r1 trace \ `` enter http connection release connection \ `` <NEXT> r7 = org apache common httpclient http connection r0 <NEXT> $ z0 = r7 lock <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = org apache common httpclient http connection log <NEXT> $ r6 debug \ `` connection be lock call to release connection ignore \ `` <NEXT> goto label3 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org apache common httpclient http connection r0 <NEXT> $ r2 = r8 http connection manager <NEXT> if $ r2 == null goto label2 <NEXT> $ r4 = org apache common httpclient http connection log <NEXT> $ r4 debug \ `` release connection back to connection manager \ `` <NEXT> r9 = org apache common httpclient http connection r0 <NEXT> $ r5 = r9 http connection manager <NEXT> r10 = org apache common httpclient http connection r0 <NEXT> $ r5 release connection r10 <NEXT> if $ r2 == null goto label2 <NEXT> label $ r3 = org apache common httpclient http connection log <NEXT> $ r3 warn \ `` http connection manager be null connection can not be release \ `` <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache common httpclient http connection r0 <NEXT> $ r1 = r2 params <NEXT> $ r1 set send buffer size i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r3 = new java lang illegal argument exception <NEXT> specialinvoke $ r3 < init > \ `` parameter may not be null\ `` <NEXT> throw $ r3 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = r0 get bytes \ `` us-ascii\ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common httpclient http method base r0 <NEXT> r1 do authentication = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common httpclient http method base r0 <NEXT> $ r1 = r3 get request header group <NEXT> $ r2 = $ r1 get all header <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common httpclient http u r l r0 <NEXT> r1 = r4 get raw password <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = null <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r1 ! = null goto label1 <NEXT> label r3 = new java lang string <NEXT> $ r2 = r3 <NEXT> specialinvoke r3 < init > r1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common httpclient method entity enclose method log <NEXT> $ r1 trace \ `` enter entity enclose method get request content length \ `` <NEXT> r6 = org apache common httpclient method entity enclose method r0 <NEXT> $ z0 = r6 have request content <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0l <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r7 = org apache common httpclient method entity enclose method r0 <NEXT> $ z1 = r7 chunk <NEXT> if $ z1 == 0 goto label2 <NEXT> return -1l <NEXT> if $ z1 == 0 goto label2 <NEXT> label r8 = org apache common httpclient method entity enclose method r0 <NEXT> $ r2 = r8 request entity <NEXT> if $ r2 ! = null goto label3 <NEXT> r9 = org apache common httpclient method entity enclose method r0 <NEXT> $ r5 = r9 generate request entity <NEXT> r10 = org apache common httpclient method entity enclose method r0 <NEXT> r10 request entity = $ r5 <NEXT> label r11 = org apache common httpclient method entity enclose method r0 <NEXT> $ r3 = r11 request entity <NEXT> if $ r3 ! = null goto label4 <NEXT> $ l0 = 0l <NEXT> goto label5 <NEXT> label return $ l0 <NEXT> if $ r3 ! = null goto label4 <NEXT> label r12 = org apache common httpclient method entity enclose method r0 <NEXT> $ r4 = r12 request entity <NEXT> $ l0 = $ r4 get content length <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = org apache common httpclient method multipart file part log <NEXT> $ r3 trace \ `` enter send disposition header output stream out \ `` <NEXT> r9 = org apache common httpclient method multipart part r0 <NEXT> specialinvoke r9 send disposition header r1 <NEXT> r10 = org apache common httpclient method multipart file part r0 <NEXT> $ r4 = r10 source <NEXT> r2 = $ r4 get file name <NEXT> if r2 == null goto label1 <NEXT> $ r5 = org apache common httpclient method multipart file part file_name_bytes <NEXT> r1 write $ r5 <NEXT> $ r6 = org apache common httpclient method multipart part quote_bytes <NEXT> r1 write $ r6 <NEXT> $ r7 = org apache common httpclient util encode util get ascii byte r2 <NEXT> r1 write $ r7 <NEXT> $ r8 = org apache common httpclient method multipart part quote_bytes <NEXT> r1 write $ r8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common httpclient method multipart file part source r0 <NEXT> $ r1 = r3 file name <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r2 = \ `` noname\ `` <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache common httpclient method multipart file part source r0 <NEXT> $ r2 = r4 file name <END>
<BEG> r0 = @ this <NEXT> $ r2 = org apache common httpclient method multipart part log <NEXT> $ r2 trace \ `` enter length \ `` <NEXT> r5 = org apache common httpclient method multipart part r0 <NEXT> $ l0 = r5 length of data <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 > = 0 goto label1 <NEXT> return -1l <NEXT> if $ b1 > = 0 goto label1 <NEXT> label r4 = new java io byte array output stream <NEXT> specialinvoke r4 < init > <NEXT> r6 = org apache common httpclient method multipart part r0 <NEXT> r6 send start r4 <NEXT> r7 = org apache common httpclient method multipart part r0 <NEXT> r7 send disposition header r4 <NEXT> r8 = org apache common httpclient method multipart part r0 <NEXT> r8 send content type header r4 <NEXT> r9 = org apache common httpclient method multipart part r0 <NEXT> r9 send transfer encode header r4 <NEXT> r10 = org apache common httpclient method multipart part r0 <NEXT> r10 send end of header r4 <NEXT> r11 = org apache common httpclient method multipart part r0 <NEXT> r11 send end r4 <NEXT> $ i2 = r4 size <NEXT> $ l3 = long $ i2 <NEXT> r12 = org apache common httpclient method multipart part r0 <NEXT> $ l4 = r12 length of data <NEXT> $ l5 = $ l3 + $ l4 <NEXT> return $ l5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` name must not be null\ `` <NEXT> throw r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org apache common httpclient method multipart part base r0 <NEXT> r4 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common httpclient method multipart post method log <NEXT> $ r1 trace \ `` enter multipart post method get request content length \ `` <NEXT> r3 = org apache common httpclient method multipart post method r0 <NEXT> $ r2 = r3 get part <NEXT> $ l0 = org apache common httpclient method multipart part get length of part $ r2 <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r5 = org apache common httpclient method post method log <NEXT> $ r5 trace \ `` enter post method remove parameter string string \ `` <NEXT> if r1 ! = null goto label1 <NEXT> r12 = new java lang illegal argument exception <NEXT> specialinvoke r12 < init > \ `` parameter name may not be null\ `` <NEXT> throw r12 <NEXT> if r1 ! = null goto label1 <NEXT> label if r2 ! = null goto label2 <NEXT> r13 = new java lang illegal argument exception <NEXT> specialinvoke r13 < init > \ `` parameter value may not be null\ `` <NEXT> throw r13 <NEXT> label if r2 ! = null goto label2 <NEXT> label r14 = org apache common httpclient method post method r0 <NEXT> $ r6 = r14 params <NEXT> r3 = $ r6 iterator <NEXT> goto label4 <NEXT> label $ z2 = r3 have next <NEXT> if $ z2 ! = 0 goto label3 <NEXT> label $ r7 = r3 next <NEXT> r4 = org apache common httpclient name value pair $ r7 <NEXT> $ r8 = r4 get name <NEXT> $ z0 = r1 equal $ r8 <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r9 = r4 get value <NEXT> $ z1 = r2 equal $ r9 <NEXT> if $ z1 == 0 goto label4 <NEXT> r3 remove <NEXT> return 1 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient multi thread http connection manager r0 <NEXT> $ r1 = r2 params <NEXT> r3 = org apache common httpclient params http connection params $ r1 <NEXT> $ z0 = r3 be stale check enabled <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common httpclient multi thread http connection manager r0 <NEXT> $ i0 = r1 get connection in pool <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common httpclient params default http params r0 <NEXT> r1 set boolean parameter \ `` http authentication preemptive\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common httpclient host configuration any_host_configuration <NEXT> r2 = org apache common httpclient params http connection manager params r0 <NEXT> $ i0 = r2 get max connection per host $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common httpclient params default http params r0 <NEXT> r1 set int parameter \ `` http connection-manager max-total\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r0 set int parameter \ `` http socket timeout\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ i0 = r0 get int parameter \ `` http socket receivebuffer\ <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r0 set int parameter \ `` http socket linger\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common httpclient uri r0 <NEXT> $ z0 = r1 _is_opaque_part <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient uri r0 <NEXT> $ r1 = r2 _authority <NEXT> if $ r1 ! = null goto label1 <NEXT> r3 = org apache common httpclient uri r0 <NEXT> $ z0 = r3 _is_net_path <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> $ r0 = org apache common httpclient uri default document charset <NEXT> return $ r0 <END>
<BEG> $ r0 = org apache common httpclient uri default document charset by locale <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common httpclient uri r0 <NEXT> $ r1 = r2 _userinfo <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common httpclient uri r0 <NEXT> r1 = r4 get raw current hier path <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = null <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r1 ! = null goto label1 <NEXT> label r3 = new java lang string <NEXT> $ r2 = r3 <NEXT> specialinvoke r3 < init > r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common httpclient uri r0 <NEXT> $ r1 = r5 _fragment <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r4 = null <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = org apache common httpclient uri r0 <NEXT> $ r2 = r6 _fragment <NEXT> r7 = org apache common httpclient uri r0 <NEXT> $ r3 = r7 get protocol charset <NEXT> $ r4 = org apache common httpclient uri decode $ r2 $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` username may not be null\ `` <NEXT> throw r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org apache common httpclient username password credential r0 <NEXT> r4 user name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common httpclient username password credential r0 <NEXT> $ r1 = r3 user name <NEXT> i1 = org apache common httpclient util lang utils hash code 17 $ r1 <NEXT> r4 = org apache common httpclient username password credential r0 <NEXT> $ r2 = r4 password <NEXT> i2 = org apache common httpclient util lang utils hash code i1 $ r2 <NEXT> return i2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common httpclient util http u r l connection log <NEXT> $ r1 trace \ `` enter http u r l connection connect \ `` <NEXT> $ r2 = new java lang runtime exception <NEXT> specialinvoke $ r2 < init > \ `` this class can only be use with alreadyretrieved data\ `` <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common httpclient util parameter formatter r0 <NEXT> r1 always use quote = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common httpclient uri get default protocol charset <NEXT> $ r2 = org apache common httpclient util u r i util encode path r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io byte order mark r0 <NEXT> $ r1 = r2 bytes <NEXT> $ i0 = lengthof $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> java util array sort r1 r0 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r2 = specialinvoke r0 to string <NEXT> $ r3 = r10 append $ r2 <NEXT> $ r4 = $ r3 append \ `` [ \ `` <NEXT> r11 = org apache common io comparator reverse file comparator r0 <NEXT> $ r5 = r11 delegate <NEXT> $ r6 = $ r5 to string <NEXT> $ r7 = $ r4 append $ r6 <NEXT> $ r8 = $ r7 append \ `` ] \ `` <NEXT> $ r9 = $ r8 to string <NEXT> return $ r9 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ l1 = org apache common io endian utils read swap long r0 i0 <NEXT> $ d0 = java lang double long bit to double $ l1 <NEXT> return $ d0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = org apache common io endian utils read r0 <NEXT> i1 = org apache common io endian utils read r0 <NEXT> i2 = org apache common io endian utils read r0 <NEXT> i3 = org apache common io endian utils read r0 <NEXT> $ i4 = i0 & 255 <NEXT> $ i7 = $ i4 < < 0 <NEXT> $ i5 = i1 & 255 <NEXT> $ i6 = $ i5 < < 8 <NEXT> $ i10 = $ i7 + $ i6 <NEXT> $ i8 = i2 & 255 <NEXT> $ i9 = $ i8 < < 16 <NEXT> $ i13 = $ i10 + $ i9 <NEXT> $ i11 = i3 & 255 <NEXT> $ i12 = $ i11 < < 24 <NEXT> $ i14 = $ i13 + $ i12 <NEXT> return $ i14 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io file accumulator path visitor r0 <NEXT> $ r1 = r2 file list <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common io file path utils empty_delete_option_array <NEXT> $ r2 = org apache common io file path utils clean directory r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r6 = new org apache common io file count path visitor <NEXT> $ r2 = org apache common io file counter long path counter <NEXT> specialinvoke r6 < init > $ r2 <NEXT> r7 = java nio file file visitor r6 <NEXT> $ r3 = org apache common io file path utils visit file tree r7 r0 <NEXT> $ r4 = org apache common io file count path visitor $ r3 <NEXT> $ r5 = $ r4 get path counter <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = org apache common io file path utils empty_link_option_array <NEXT> $ r3 = org apache common io file path utils empty_open_option_array <NEXT> $ r2 = org apache common io file path utils empty_file_visit_option_array <NEXT> $ z0 = org apache common io file path utils directory and file content equal r0 r1 $ r4 $ r3 $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> $ r2 = r7 append \ `` file delete strategy [ \ `` <NEXT> r8 = org apache common io file delete strategy r0 <NEXT> $ r3 = r8 name <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` ] \ `` <NEXT> $ r6 = $ r5 to string <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 can read <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 be file <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org apache common io filefilter prefix file filter <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org apache common io filefilter i o file filter r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org apache common io filefilter suffix file filter <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org apache common io filefilter i o file filter r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r11 = new java lang illegal argument exception <NEXT> specialinvoke $ r11 < init > \ `` the filter must not be null\ `` <NEXT> throw $ r11 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = new java util array list <NEXT> $ i0 = lengthof r0 <NEXT> specialinvoke $ r2 < init > $ i0 <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r0 <NEXT> if i2 > = $ i1 goto label4 <NEXT> $ r3 = r0 [ i2 ] <NEXT> if $ r3 ! = null goto label3 <NEXT> $ r5 = new java lang illegal argument exception <NEXT> $ r6 = new java lang string builder <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = $ r6 append \ `` the filter [ \ `` <NEXT> $ r8 = $ r7 append i2 <NEXT> $ r9 = $ r8 append \ `` ] be null\ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke $ r5 < init > $ r10 <NEXT> throw $ r5 <NEXT> if $ r3 ! = null goto label3 <NEXT> label $ r4 = r0 [ i2 ] <NEXT> $ r2 add $ r4 <NEXT> i2 = i2 + 1 <NEXT> goto label2 <NEXT> if i2 > = $ i1 goto label4 <NEXT> label return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> r3 = org apache common io filefilter name file filter r0 <NEXT> $ z0 = specialinvoke r3 accept base name $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r3 = null <NEXT> goto label2 <NEXT> label r4 = org apache common io filefilter prefix file filter r0 <NEXT> $ z0 = specialinvoke r4 accept $ r3 <NEXT> return $ z0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r3 = r1 get name <END>
<BEG> r0 = @ parameter0 <NEXT> $ c0 = org apache common io filename utils system_separator <NEXT> $ r1 = org apache common io filename utils do normalize r0 $ c0 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ z0 = org apache common io filename utils be system window <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r1 = org apache common io filename utils separator to window r0 <NEXT> goto label3 <NEXT> label return $ r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r1 = org apache common io filename utils separator to unix r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common io file system r0 <NEXT> $ r2 = r3 reserve file name <NEXT> $ i0 = java util array binary search $ r2 r1 <NEXT> if $ i0 < 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common io file utils get parent file r0 <NEXT> $ r2 = org apache common io file utils mkdirs $ r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = java lang system get property \ `` user home\ `` <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> label $ r3 = org apache common io file utils stream file r0 z0 r1 <NEXT> $ r4 = org apache common io file utils to list $ r3 <NEXT> label return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common io charsets to charset r1 <NEXT> $ r3 = org apache common io file utils read file to string r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` file\ `` <NEXT> $ z0 = r0 exist <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r2 = org apache common io file utils open output stream r0 <NEXT> $ r2 close <NEXT> label $ l0 = java lang system current time millis <NEXT> org apache common io file utils set last modified r0 $ l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common io input char sequence reader r0 <NEXT> $ i1 = r1 idx <NEXT> r2 = org apache common io input char sequence reader r0 <NEXT> r2 mark = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r23 = org apache common io input char sequence reader r0 <NEXT> $ i3 = r23 idx <NEXT> r24 = org apache common io input char sequence reader r0 <NEXT> $ i4 = specialinvoke r24 end <NEXT> if $ i3 < $ i4 goto label1 <NEXT> return -1 <NEXT> if $ i3 < $ i4 goto label1 <NEXT> label java util object require non null r1 \ `` array\ `` <NEXT> if i1 < 0 goto label2 <NEXT> if i0 < 0 goto label2 <NEXT> $ i6 = i0 + i1 <NEXT> $ i5 = lengthof r1 <NEXT> if $ i6 < = $ i5 goto label3 <NEXT> label r22 = new java lang index out of bound exception <NEXT> r21 = new java lang string builder <NEXT> specialinvoke r21 < init > <NEXT> $ r14 = r21 append \ `` array size=\ `` <NEXT> $ i33 = lengthof r1 <NEXT> $ r15 = $ r14 append $ i33 <NEXT> $ r16 = $ r15 append \ <NEXT> $ r17 = $ r16 append i0 <NEXT> $ r18 = $ r17 append \ <NEXT> $ r19 = $ r18 append i1 <NEXT> $ r20 = $ r19 to string <NEXT> specialinvoke r22 < init > $ r20 <NEXT> throw r22 <NEXT> if $ i6 < = $ i5 goto label3 <NEXT> label r25 = org apache common io input char sequence reader r0 <NEXT> $ r3 = r25 char sequence <NEXT> $ z0 = $ r3 instanceof java lang string <NEXT> if $ z0 == 0 goto label4 <NEXT> r26 = org apache common io input char sequence reader r0 <NEXT> $ i25 = specialinvoke r26 end <NEXT> r27 = org apache common io input char sequence reader r0 <NEXT> $ i26 = r27 idx <NEXT> $ i27 = $ i25 - $ i26 <NEXT> i34 = java lang math min i1 $ i27 <NEXT> r28 = org apache common io input char sequence reader r0 <NEXT> $ r10 = r28 char sequence <NEXT> $ r11 = java lang string $ r10 <NEXT> r29 = org apache common io input char sequence reader r0 <NEXT> $ i30 = r29 idx <NEXT> r30 = org apache common io input char sequence reader r0 <NEXT> $ i28 = r30 idx <NEXT> $ i29 = $ i28 + i34 <NEXT> $ r11 get char $ i30 $ i29 r1 i0 <NEXT> r31 = org apache common io input char sequence reader r0 <NEXT> $ i31 = r31 idx <NEXT> $ i32 = $ i31 + i34 <NEXT> r32 = org apache common io input char sequence reader r0 <NEXT> r32 idx = $ i32 <NEXT> return i34 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r33 = org apache common io input char sequence reader r0 <NEXT> $ r4 = r33 char sequence <NEXT> $ z1 = $ r4 instanceof java lang string builder <NEXT> if $ z1 == 0 goto label5 <NEXT> r34 = org apache common io input char sequence reader r0 <NEXT> $ i17 = specialinvoke r34 end <NEXT> r35 = org apache common io input char sequence reader r0 <NEXT> $ i18 = r35 idx <NEXT> $ i19 = $ i17 - $ i18 <NEXT> i35 = java lang math min i1 $ i19 <NEXT> r36 = org apache common io input char sequence reader r0 <NEXT> $ r8 = r36 char sequence <NEXT> $ r9 = java lang string builder $ r8 <NEXT> r37 = org apache common io input char sequence reader r0 <NEXT> $ i22 = r37 idx <NEXT> r38 = org apache common io input char sequence reader r0 <NEXT> $ i20 = r38 idx <NEXT> $ i21 = $ i20 + i35 <NEXT> $ r9 get char $ i22 $ i21 r1 i0 <NEXT> r39 = org apache common io input char sequence reader r0 <NEXT> $ i23 = r39 idx <NEXT> $ i24 = $ i23 + i35 <NEXT> r40 = org apache common io input char sequence reader r0 <NEXT> r40 idx = $ i24 <NEXT> return i35 <NEXT> if $ z1 == 0 goto label5 <NEXT> label r41 = org apache common io input char sequence reader r0 <NEXT> $ r5 = r41 char sequence <NEXT> $ z2 = $ r5 instanceof java lang string buffer <NEXT> if $ z2 == 0 goto label6 <NEXT> r42 = org apache common io input char sequence reader r0 <NEXT> $ i9 = specialinvoke r42 end <NEXT> r43 = org apache common io input char sequence reader r0 <NEXT> $ i10 = r43 idx <NEXT> $ i11 = $ i9 - $ i10 <NEXT> i36 = java lang math min i1 $ i11 <NEXT> r44 = org apache common io input char sequence reader r0 <NEXT> $ r6 = r44 char sequence <NEXT> $ r7 = java lang string buffer $ r6 <NEXT> r45 = org apache common io input char sequence reader r0 <NEXT> $ i14 = r45 idx <NEXT> r46 = org apache common io input char sequence reader r0 <NEXT> $ i12 = r46 idx <NEXT> $ i13 = $ i12 + i36 <NEXT> $ r7 get char $ i14 $ i13 r1 i0 <NEXT> r47 = org apache common io input char sequence reader r0 <NEXT> $ i15 = r47 idx <NEXT> $ i16 = $ i15 + i36 <NEXT> r48 = org apache common io input char sequence reader r0 <NEXT> r48 idx = $ i16 <NEXT> return i36 <NEXT> if $ z2 == 0 goto label6 <NEXT> label i37 = 0 <NEXT> i38 = 0 <NEXT> label if i38 > = i1 goto label9 <NEXT> r49 = org apache common io input char sequence reader r0 <NEXT> i2 = r49 read <NEXT> if i2 ! = -1 goto label8 <NEXT> return i37 <NEXT> if i2 ! = -1 goto label8 <NEXT> label $ i8 = i0 + i38 <NEXT> $ c7 = char i2 <NEXT> r1 [ $ i8 ] = $ c7 <NEXT> i37 = i37 + 1 <NEXT> i38 = i38 + 1 <NEXT> goto label7 <NEXT> label if i38 > = i1 goto label9 <NEXT> label return i37 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r3 = org apache common io input null input stream r0 <NEXT> $ z0 = r3 eof <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = new java io i o exception <NEXT> specialinvoke r2 < init > \ `` skip after end of file\ `` <NEXT> throw r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = org apache common io input null input stream r0 <NEXT> $ l2 = r4 position <NEXT> r5 = org apache common io input null input stream r0 <NEXT> $ l1 = r5 size <NEXT> $ b3 = $ l2 cmp $ l1 <NEXT> if $ b3 ! = 0 goto label2 <NEXT> r6 = org apache common io input null input stream r0 <NEXT> $ i13 = specialinvoke r6 do end of file <NEXT> $ l14 = long $ i13 <NEXT> return $ l14 <NEXT> if $ b3 ! = 0 goto label2 <NEXT> label r7 = org apache common io input null input stream r0 <NEXT> $ l4 = r7 position <NEXT> $ l5 = $ l4 + l0 <NEXT> r8 = org apache common io input null input stream r0 <NEXT> r8 position = $ l5 <NEXT> l15 = l0 <NEXT> r9 = org apache common io input null input stream r0 <NEXT> $ l7 = r9 position <NEXT> r10 = org apache common io input null input stream r0 <NEXT> $ l6 = r10 size <NEXT> $ b8 = $ l7 cmp $ l6 <NEXT> if $ b8 < = 0 goto label3 <NEXT> r11 = org apache common io input null input stream r0 <NEXT> $ l10 = r11 position <NEXT> r12 = org apache common io input null input stream r0 <NEXT> $ l9 = r12 size <NEXT> $ l11 = $ l10 - $ l9 <NEXT> l15 = l0 - $ l11 <NEXT> r13 = org apache common io input null input stream r0 <NEXT> $ l12 = r13 size <NEXT> r14 = org apache common io input null input stream r0 <NEXT> r14 position = $ l12 <NEXT> label return l15 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common io input null reader r0 <NEXT> $ l0 = r1 position <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache common io input null reader r0 <NEXT> $ z0 = r2 mark support <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r1 = org apache common io input unsupported operation exception mark <NEXT> throw $ r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r3 = org apache common io input null reader r0 <NEXT> $ l1 = r3 position <NEXT> r4 = org apache common io input null reader r0 <NEXT> r4 mark = $ l1 <NEXT> $ l2 = long i0 <NEXT> r5 = org apache common io input null reader r0 <NEXT> r5 readlimit = $ l2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common io input queue input stream r0 <NEXT> $ r2 = r4 block queue <NEXT> $ r3 = $ r2 poll <NEXT> r1 = java lang integer $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> $ i1 = -1 <NEXT> goto label2 <NEXT> label return $ i1 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i0 = r1 int value <NEXT> $ i1 = 255 & $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common io input random access file input stream r0 <NEXT> $ r1 = r3 random access file <NEXT> $ l0 = $ r1 length <NEXT> r4 = org apache common io input random access file input stream r0 <NEXT> $ r2 = r4 random access file <NEXT> $ l1 = $ r2 get file pointer <NEXT> $ l2 = $ l0 - $ l1 <NEXT> return $ l2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io input random access file input stream r0 <NEXT> $ r1 = r2 random access file <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io input reverse line file reader r0 <NEXT> $ r1 = r2 channel <NEXT> $ r1 close <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common io input tag input stream r0 <NEXT> $ r2 = r3 tag <NEXT> $ z0 = org apache common io tag i o exception be tag with r1 $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common io input tailer r0 <NEXT> $ l0 = r1 delay millis <NEXT> return $ l0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java nio charset charset default charset <NEXT> $ r2 = org apache common io i o utils to input stream r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common io charsets to charset r1 <NEXT> $ r3 = org apache common io i o utils to input stream r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io monitor file alteration observer r0 <NEXT> $ r1 = r2 file filter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = org apache common io monitor file alteration observer r0 <NEXT> $ r2 = r3 listener <NEXT> $ r2 add r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common io monitor file entry r0 <NEXT> $ l0 = r1 length <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common io monitor file entry r0 <NEXT> r1 exist = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io output appendable output stream r0 <NEXT> $ r1 = r2 appendable <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> java util object require non null r1 \ `` character array be missing\ `` <NEXT> if i1 < 0 goto label1 <NEXT> $ i4 = i0 + i1 <NEXT> $ i3 = lengthof r1 <NEXT> if $ i4 < = $ i3 goto label2 <NEXT> label r15 = new java lang index out of bound exception <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> $ r5 = r14 append \ `` array size=\ `` <NEXT> $ i2 = lengthof r1 <NEXT> $ r6 = $ r5 append $ i2 <NEXT> $ r7 = $ r6 append \ <NEXT> $ r8 = $ r7 append i0 <NEXT> $ r9 = $ r8 append \ <NEXT> $ r10 = $ r9 append i1 <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r15 < init > $ r11 <NEXT> throw r15 <NEXT> if $ i4 < = $ i3 goto label2 <NEXT> label i7 = 0 <NEXT> label if i7 > = i1 goto label4 <NEXT> r16 = org apache common io output appendable writer r0 <NEXT> $ r12 = r16 appendable <NEXT> $ i5 = i0 + i7 <NEXT> $ c6 = r1 [ $ i5 ] <NEXT> $ r12 append $ c6 <NEXT> i7 = i7 + 1 <NEXT> goto label3 <NEXT> label if i7 > = i1 goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache common io output appendable writer r0 <NEXT> $ r1 = r3 appendable <NEXT> $ c1 = char i0 <NEXT> $ r1 append $ c1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 close <NEXT> r1 = org apache common io output defer file output stream r0 <NEXT> r1 close = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common io output file writer with encode r0 <NEXT> $ r2 = r3 out <NEXT> $ r2 write r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = null <NEXT> i0 = 0 <NEXT> r10 = org apache common io output filter collection writer r0 <NEXT> $ r4 = r10 writer <NEXT> r1 = $ r4 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r6 = r1 next <NEXT> r2 = java io writer $ r6 <NEXT> if r2 == null goto label5 <NEXT> label r2 flush <NEXT> label goto label5 <NEXT> label i0 = i0 + 1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label6 <NEXT> label r12 = org apache common io output filter collection writer r0 <NEXT> $ z1 = specialinvoke r12 not empty r8 <NEXT> if $ z1 == 0 goto label7 <NEXT> r9 = new org apache common io i o exception list <NEXT> specialinvoke r9 < init > \ `` flush\ <NEXT> r13 = java lang throwable r9 <NEXT> throw r13 <NEXT> if $ z1 == 0 goto label7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io output writer output stream r0 <NEXT> specialinvoke r2 process input 1 <NEXT> r3 = org apache common io output writer output stream r0 <NEXT> specialinvoke r3 flush output <NEXT> r4 = org apache common io output writer output stream r0 <NEXT> $ r1 = r4 writer <NEXT> $ r1 close <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io output xml stream writer r0 <NEXT> $ r1 = r2 default encode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r1 [ i1 ] <NEXT> r9 = org apache common io serialization validate object input stream r0 <NEXT> $ r6 = r9 reject matcher <NEXT> r8 = new org apache common io serialization full class name matcher <NEXT> $ r5 = newarray java lang string [ 1 ] <NEXT> $ r7 = r3 get name <NEXT> $ r5 [ 0 ] = $ r7 <NEXT> specialinvoke r8 < init > $ r5 <NEXT> $ r6 add r8 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label r10 = org apache common io serialization validate object input stream r0 <NEXT> return r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r0 instanceof org apache common io tag i o exception <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = org apache common io tag i o exception r0 <NEXT> $ r3 = $ r2 tag <NEXT> $ z1 = r1 equal $ r3 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ l1 = r1 last modified <NEXT> $ l2 = r2 last modified <NEXT> l0 = $ l1 - $ l2 <NEXT> $ b3 = l0 cmp 0l <NEXT> if $ b3 > = 0 goto label1 <NEXT> return -1 <NEXT> if $ b3 > = 0 goto label1 <NEXT> label $ b4 = l0 cmp 0l <NEXT> if $ b4 < = 0 goto label2 <NEXT> return 1 <NEXT> if $ b4 < = 0 goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org apache common io filefilter age file filter <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org apache common io filefilter i o file filter r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common io filename utils do get full path r0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common io i o case system <NEXT> $ z0 = org apache common io filename utils equal r0 r1 1 $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common io input b o m input stream r0 <NEXT> $ i0 = r2 mark fb index <NEXT> r3 = org apache common io input b o m input stream r0 <NEXT> r3 fb index = $ i0 <NEXT> r4 = org apache common io input b o m input stream r0 <NEXT> $ z0 = r4 mark at start <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache common io input b o m input stream r0 <NEXT> r5 first bytes = null <NEXT> label r6 = org apache common io input b o m input stream r0 <NEXT> $ r1 = r6 in <NEXT> $ r1 reset <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r16 = org apache common io input char sequence reader r0 <NEXT> $ i3 = r16 idx <NEXT> r17 = org apache common io input char sequence reader r0 <NEXT> $ r2 = r17 char sequence <NEXT> $ i4 = $ r2 length <NEXT> if $ i3 < $ i4 goto label1 <NEXT> return -1 <NEXT> if $ i3 < $ i4 goto label1 <NEXT> label if r1 ! = null goto label2 <NEXT> r13 = new java lang null pointer exception <NEXT> specialinvoke r13 < init > \ `` character array be missing\ `` <NEXT> throw r13 <NEXT> label if r1 ! = null goto label2 <NEXT> label if i1 < 0 goto label3 <NEXT> if i0 < 0 goto label3 <NEXT> $ i6 = i0 + i1 <NEXT> $ i5 = lengthof r1 <NEXT> if $ i6 < = $ i5 goto label4 <NEXT> label r15 = new java lang index out of bound exception <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> $ r6 = r14 append \ `` array size=\ `` <NEXT> $ i9 = lengthof r1 <NEXT> $ r7 = $ r6 append $ i9 <NEXT> $ r8 = $ r7 append \ <NEXT> $ r9 = $ r8 append i0 <NEXT> $ r10 = $ r9 append \ <NEXT> $ r11 = $ r10 append i1 <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke r15 < init > $ r12 <NEXT> throw r15 <NEXT> if $ i6 < = $ i5 goto label4 <NEXT> label i10 = 0 <NEXT> i11 = 0 <NEXT> label if i11 > = i1 goto label7 <NEXT> r18 = org apache common io input char sequence reader r0 <NEXT> i2 = r18 read <NEXT> if i2 ! = -1 goto label6 <NEXT> return i10 <NEXT> if i2 ! = -1 goto label6 <NEXT> label $ i8 = i0 + i11 <NEXT> $ c7 = char i2 <NEXT> r1 [ $ i8 ] = $ c7 <NEXT> i10 = i10 + 1 <NEXT> i11 = i11 + 1 <NEXT> goto label5 <NEXT> label if i11 > = i1 goto label7 <NEXT> label return i10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java nio charset charset default charset <NEXT> $ r2 = org apache common io i o utils to char array r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java nio charset charset default charset <NEXT> $ r2 = org apache common io i o utils read line r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common io charsets to charset r1 <NEXT> $ r3 = org apache common io i o utils read line r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common io charsets to charset r1 <NEXT> $ r3 = org apache common io i o utils to input stream r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> r1 write r0 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org apache common io charsets to charset r2 <NEXT> org apache common io i o utils write r0 r1 $ r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> l0 = org apache common io i o utils copy large r0 r1 <NEXT> $ b1 = l0 cmp 2147483647l <NEXT> if $ b1 < = 0 goto label1 <NEXT> return -1 <NEXT> if $ b1 < = 0 goto label1 <NEXT> label $ i2 = int l0 <NEXT> return $ i2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org apache common io charsets to charset r2 <NEXT> org apache common io i o utils copy r0 r1 $ r3 <NEXT> return <END>
<BEG> r2 = @ parameter0 <NEXT> r3 = @ parameter1 <NEXT> $ z0 = r2 instanceof java io buffer input stream <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r1 = new java io buffer input stream <NEXT> specialinvoke $ r1 < init > r2 <NEXT> r2 = $ r1 <NEXT> label $ z1 = r3 instanceof java io buffer input stream <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ r0 = new java io buffer input stream <NEXT> specialinvoke $ r0 < init > r3 <NEXT> r3 = $ r0 <NEXT> label i0 = r2 read <NEXT> label if -1 == i0 goto label5 <NEXT> i1 = r3 read <NEXT> if i0 == i1 goto label4 <NEXT> return 0 <NEXT> if i0 == i1 goto label4 <NEXT> label i0 = r2 read <NEXT> goto label3 <NEXT> label if -1 == i0 goto label5 <NEXT> label i2 = r3 read <NEXT> if i2 ! = -1 goto label6 <NEXT> $ z2 = 1 <NEXT> goto label7 <NEXT> label return $ z2 <NEXT> if i2 ! = -1 goto label6 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common io output defer file output stream r0 <NEXT> $ r1 = r4 memory output stream <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org apache common io output defer file output stream r0 <NEXT> $ r2 = r5 memory output stream <NEXT> $ r3 = $ r2 to byte array <NEXT> return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> label if r0 == null goto label2 <NEXT> r0 close <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java nio charset charset default charset <NEXT> $ r2 = org apache common io i o utils to char array r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new java lang string <NEXT> $ r3 = org apache common io charsets to charset r1 <NEXT> specialinvoke $ r2 < init > r0 $ r3 <NEXT> return $ r2 <END>
<BEG> r2 = @ parameter0 <NEXT> r3 = @ parameter1 <NEXT> if r2 ! = r3 goto label1 <NEXT> return 1 <NEXT> if r2 ! = r3 goto label1 <NEXT> label $ z0 = r2 instanceof java io buffer input stream <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ r1 = new java io buffer input stream <NEXT> specialinvoke $ r1 < init > r2 <NEXT> r2 = $ r1 <NEXT> label $ z1 = r3 instanceof java io buffer input stream <NEXT> if $ z1 ! = 0 goto label3 <NEXT> $ r0 = new java io buffer input stream <NEXT> specialinvoke $ r0 < init > r3 <NEXT> r3 = $ r0 <NEXT> label i0 = r2 read <NEXT> label if -1 == i0 goto label6 <NEXT> i1 = r3 read <NEXT> if i0 == i1 goto label5 <NEXT> return 0 <NEXT> if i0 == i1 goto label5 <NEXT> label i0 = r2 read <NEXT> goto label4 <NEXT> label if -1 == i0 goto label6 <NEXT> label i2 = r3 read <NEXT> if i2 ! = -1 goto label7 <NEXT> $ z2 = 1 <NEXT> goto label8 <NEXT> label return $ z2 <NEXT> if i2 ! = -1 goto label7 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ l0 = java nio file file size r0 <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 > 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b1 > 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> l0 = org apache common io i o utils copy large r0 r1 <NEXT> $ b1 = l0 cmp 2147483647l <NEXT> if $ b1 < = 0 goto label1 <NEXT> return -1 <NEXT> if $ b1 < = 0 goto label1 <NEXT> label $ i2 = int l0 <NEXT> return $ i2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org apache common lang builder equal builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append r0 r1 <NEXT> $ z0 = $ r3 be equal <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r1 = org apache common lang array utils empty_boolean_array <NEXT> return $ r1 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> i2 = @ parameter1 <NEXT> i3 = @ parameter2 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label if i2 > = 0 goto label2 <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r0 <NEXT> if i3 < = $ i1 goto label3 <NEXT> i3 = lengthof r0 <NEXT> label i0 = i3 - i2 <NEXT> if i0 > 0 goto label4 <NEXT> $ r2 = org apache common lang array utils empty_boolean_array <NEXT> return $ r2 <NEXT> if i0 > 0 goto label4 <NEXT> label r1 = newarray boolean [ i0 ] <NEXT> java lang system arraycopy r0 i2 r1 0 i0 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> $ z1 = org apache common lang array utils be empty r0 <NEXT> if $ z1 == 0 goto label1 <NEXT> return -1 <NEXT> if $ z1 == 0 goto label1 <NEXT> label if i2 > = 0 goto label2 <NEXT> label $ i0 = lengthof r0 <NEXT> if i2 < $ i0 goto label3 <NEXT> $ i1 = lengthof r0 <NEXT> i2 = $ i1 - 1 <NEXT> label i3 = i2 <NEXT> label if i3 < 0 goto label6 <NEXT> $ z2 = r0 [ i3 ] <NEXT> if z0 ! = $ z2 goto label5 <NEXT> return i3 <NEXT> if z0 ! = $ z2 goto label5 <NEXT> label i3 = i3 + -1 <NEXT> goto label4 <NEXT> label if i3 < 0 goto label6 <NEXT> label return -1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ i0 = org apache common lang array utils last index of r0 z0 2147483647 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> d1 = @ parameter3 <NEXT> $ z0 = org apache common lang array utils be empty r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> return -1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label if i2 > = 0 goto label2 <NEXT> i2 = 0 <NEXT> label d2 = d0 - d1 <NEXT> d3 = d0 + d1 <NEXT> i3 = i2 <NEXT> label $ i4 = lengthof r0 <NEXT> if i3 > = $ i4 goto label5 <NEXT> $ d4 = r0 [ i3 ] <NEXT> $ b0 = $ d4 cmpl d2 <NEXT> if $ b0 < 0 goto label4 <NEXT> $ d5 = r0 [ i3 ] <NEXT> $ b1 = $ d5 cmpg d3 <NEXT> if $ b1 > 0 goto label4 <NEXT> return i3 <NEXT> if $ b1 > 0 goto label4 <NEXT> label i3 = i3 + 1 <NEXT> goto label3 <NEXT> if i3 > = $ i4 goto label5 <NEXT> label return -1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ r4 = org apache common lang array utils empty_boolean_array <NEXT> return $ r4 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ i1 = lengthof r0 <NEXT> r1 = newarray boolean [ $ i1 ] <NEXT> i4 = 0 <NEXT> label $ i2 = lengthof r0 <NEXT> if i4 > = $ i2 goto label6 <NEXT> r2 = r0 [ i4 ] <NEXT> $ i3 = i4 <NEXT> if r2 ! = null goto label4 <NEXT> $ z1 = z0 <NEXT> goto label5 <NEXT> label r1 [ $ i3 ] = $ z1 <NEXT> i4 = i4 + 1 <NEXT> goto label3 <NEXT> if r2 ! = null goto label4 <NEXT> label $ z1 = r2 boolean value <NEXT> if i4 > = $ i2 goto label6 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ r3 = org apache common lang array utils empty_boolean_array <NEXT> return $ r3 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ i1 = lengthof r0 <NEXT> r1 = newarray boolean [ $ i1 ] <NEXT> i3 = 0 <NEXT> label $ i2 = lengthof r0 <NEXT> if i3 > = $ i2 goto label4 <NEXT> $ r2 = r0 [ i3 ] <NEXT> $ z0 = $ r2 boolean value <NEXT> r1 [ i3 ] = $ z0 <NEXT> i3 = i3 + 1 <NEXT> goto label3 <NEXT> if i3 > = $ i2 goto label4 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ r4 = org apache common lang array utils empty_boolean_array <NEXT> return $ r4 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ i1 = lengthof r0 <NEXT> r1 = newarray boolean [ $ i1 ] <NEXT> i4 = 0 <NEXT> label $ i2 = lengthof r0 <NEXT> if i4 > = $ i2 goto label6 <NEXT> r2 = r0 [ i4 ] <NEXT> $ i3 = i4 <NEXT> if r2 ! = null goto label4 <NEXT> $ z1 = z0 <NEXT> goto label5 <NEXT> label r1 [ $ i3 ] = $ z1 <NEXT> i4 = i4 + 1 <NEXT> goto label3 <NEXT> if r2 ! = null goto label4 <NEXT> label $ z1 = r2 boolean value <NEXT> if i4 > = $ i2 goto label6 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> r2 = org apache common lang builder equal builder r0 <NEXT> $ z2 = r2 be equal <NEXT> if $ z2 ! = 0 goto label1 <NEXT> r3 = org apache common lang builder equal builder r0 <NEXT> return r3 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label if z0 ! = z1 goto label2 <NEXT> $ z3 = 1 <NEXT> goto label3 <NEXT> label r4 = org apache common lang builder equal builder r0 <NEXT> r4 be equal = $ z3 <NEXT> r5 = org apache common lang builder equal builder r0 <NEXT> return r5 <NEXT> label if z0 ! = z1 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> r2 = org apache common lang builder equal builder r0 <NEXT> $ z2 = r2 be equal <NEXT> if $ z2 ! = 0 goto label1 <NEXT> r3 = org apache common lang builder equal builder r0 <NEXT> return r3 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label if z0 ! = z1 goto label2 <NEXT> $ z3 = 1 <NEXT> goto label3 <NEXT> label r4 = org apache common lang builder equal builder r0 <NEXT> r4 be equal = $ z3 <NEXT> r5 = org apache common lang builder equal builder r0 <NEXT> return r5 <NEXT> label if z0 ! = z1 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang builder equal builder r0 <NEXT> r1 be equal = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org apache common lang builder hash code builder r0 <NEXT> $ i1 = r2 i total <NEXT> r3 = org apache common lang builder hash code builder r0 <NEXT> $ i0 = r3 i constant <NEXT> $ i2 = $ i1 * $ i0 <NEXT> if z0 == 0 goto label1 <NEXT> $ b4 = 0 <NEXT> goto label2 <NEXT> label $ i3 = $ i2 + $ b4 <NEXT> r4 = org apache common lang builder hash code builder r0 <NEXT> r4 i total = $ i3 <NEXT> r5 = org apache common lang builder hash code builder r0 <NEXT> return r5 <NEXT> if z0 == 0 goto label1 <NEXT> label $ b4 = 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang builder hash code builder r0 <NEXT> $ i0 = r1 to hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = newarray java lang string [ 1 ] <NEXT> $ r2 [ 0 ] = r1 <NEXT> $ r3 = org apache common lang builder reflection to string builder to string exclude r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = newarray java lang string [ 1 ] <NEXT> $ r2 [ 0 ] = r1 <NEXT> $ r3 = org apache common lang builder reflection to string builder to string exclude r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r4 = org apache common lang builder reflection to string builder r0 <NEXT> r4 exclude field names = null <NEXT> goto label2 <NEXT> label r7 = org apache common lang builder reflection to string builder r0 <NEXT> return r7 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = org apache common lang builder reflection to string builder to no null string array r1 <NEXT> r5 = org apache common lang builder reflection to string builder r0 <NEXT> r5 exclude field names = $ r2 <NEXT> r6 = org apache common lang builder reflection to string builder r0 <NEXT> $ r3 = r6 exclude field name <NEXT> java util array sort $ r3 <END>
<BEG> r0 = @ this <NEXT> $ z0 = specialinvoke r0 be use identity hash code <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 get array start <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set array separator r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set field separator r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 get size end text <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache common lang builder to string builder r0 <NEXT> $ r2 = r3 style <NEXT> r4 = org apache common lang builder to string builder r0 <NEXT> $ r1 = r4 buffer <NEXT> $ r2 append $ r1 null z0 <NEXT> r5 = org apache common lang builder to string builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache common lang builder to string builder r0 <NEXT> $ r2 = r3 style <NEXT> r4 = org apache common lang builder to string builder r0 <NEXT> $ r1 = r4 buffer <NEXT> $ r2 append $ r1 null z0 <NEXT> r5 = org apache common lang builder to string builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache common lang builder to string builder r0 <NEXT> $ r2 = r3 style <NEXT> r4 = org apache common lang builder to string builder r0 <NEXT> $ r1 = r4 buffer <NEXT> $ r2 append $ r1 null z0 <NEXT> r5 = org apache common lang builder to string builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache common lang builder to string builder r0 <NEXT> $ r2 = r3 style <NEXT> r4 = org apache common lang builder to string builder r0 <NEXT> $ r1 = r4 buffer <NEXT> $ r2 append $ r1 null z0 <NEXT> r5 = org apache common lang builder to string builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r4 = org apache common lang builder to string builder r0 <NEXT> $ r3 = r4 style <NEXT> r5 = org apache common lang builder to string builder r0 <NEXT> $ r2 = r5 buffer <NEXT> $ r3 append $ r2 r1 z0 <NEXT> r6 = org apache common lang builder to string builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> org apache common lang object utils identity to string r1 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r1 append z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ i0 = lengthof r3 <NEXT> r4 = org apache common lang builder to string style r0 <NEXT> r4 append summary size r1 r2 $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ i0 = lengthof r3 <NEXT> r4 = org apache common lang builder to string style r0 <NEXT> r4 append summary size r1 r2 $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ i0 = lengthof r3 <NEXT> r4 = org apache common lang builder to string style r0 <NEXT> r4 append summary size r1 r2 $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang char range r0 <NEXT> $ c0 = r1 end <NEXT> return $ c0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org apache common lang char set common <NEXT> r1 = $ r2 get r0 <NEXT> if r1 == null goto label1 <NEXT> $ r4 = org apache common lang char set r1 <NEXT> return $ r4 <NEXT> if r1 == null goto label1 <NEXT> label $ r3 = new org apache common lang char set <NEXT> specialinvoke $ r3 < init > r0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = r0 goto label1 <NEXT> return 1 <NEXT> if r1 ! = r0 goto label1 <NEXT> label $ z0 = r1 instanceof org apache common lang char set <NEXT> if $ z0 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r2 = org apache common lang char set r1 <NEXT> r5 = org apache common lang char set r0 <NEXT> $ r4 = r5 set <NEXT> $ r3 = r2 set <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common lang char set r0 <NEXT> $ r1 = r3 set <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> c0 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return c0 <NEXT> if r0 ! = null goto label1 <NEXT> label $ c1 = r0 char value <NEXT> return $ c1 <END>
<BEG> r0 = @ parameter0 <NEXT> c0 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return c0 <NEXT> if r0 ! = null goto label1 <NEXT> label $ c1 = r0 char value <NEXT> return $ c1 <END>
<BEG> c0 = @ parameter0 <NEXT> if c0 > = 16 goto label1 <NEXT> $ r15 = new java lang string buffer <NEXT> specialinvoke $ r15 < init > <NEXT> $ r16 = $ r15 append \ `` \\u000\ `` <NEXT> $ r17 = java lang integer to hex string c0 <NEXT> $ r18 = $ r16 append $ r17 <NEXT> $ r19 = $ r18 to string <NEXT> return $ r19 <NEXT> if c0 > = 16 goto label1 <NEXT> label if c0 > = 256 goto label2 <NEXT> $ r10 = new java lang string buffer <NEXT> specialinvoke $ r10 < init > <NEXT> $ r11 = $ r10 append \ `` \\u00\ `` <NEXT> $ r12 = java lang integer to hex string c0 <NEXT> $ r13 = $ r11 append $ r12 <NEXT> $ r14 = $ r13 to string <NEXT> return $ r14 <NEXT> label if c0 > = 256 goto label2 <NEXT> label if c0 > = 4096 goto label3 <NEXT> $ r5 = new java lang string buffer <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append \ `` \\u0\ `` <NEXT> $ r7 = java lang integer to hex string c0 <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> return $ r9 <NEXT> label if c0 > = 4096 goto label3 <NEXT> label $ r0 = new java lang string buffer <NEXT> specialinvoke $ r0 < init > <NEXT> $ r1 = $ r0 append \ `` \\u\ `` <NEXT> $ r2 = java lang integer to hex string c0 <NEXT> $ r3 = $ r1 append $ r2 <NEXT> $ r4 = $ r3 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = new java util array list <NEXT> specialinvoke $ r2 < init > <NEXT> org apache common lang class utils get all interface r0 $ r2 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r5 = new java util array list <NEXT> $ i0 = r0 size <NEXT> specialinvoke $ r5 < init > $ i0 <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label7 <NEXT> $ r6 = r2 next <NEXT> r3 = java lang string $ r6 <NEXT> label $ r7 = java lang class for name r3 <NEXT> $ r5 add $ r7 <NEXT> label goto label6 <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label7 <NEXT> label return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common lang class utils get class r0 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ r5 = org apache common lang array utils empty_class_array <NEXT> return $ r5 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ i1 = lengthof r0 <NEXT> r1 = newarray java lang class [ $ i1 ] <NEXT> i4 = 0 <NEXT> label $ i2 = lengthof r0 <NEXT> if i4 > = $ i2 goto label6 <NEXT> $ i3 = i4 <NEXT> $ r2 = r0 [ i4 ] <NEXT> if $ r2 ! = null goto label4 <NEXT> $ r6 = null <NEXT> goto label5 <NEXT> label r1 [ $ i3 ] = $ r6 <NEXT> i4 = i4 + 1 <NEXT> goto label3 <NEXT> if $ r2 ! = null goto label4 <NEXT> label $ r3 = r0 [ i4 ] <NEXT> $ r6 = $ r3 get class <NEXT> if i4 > = $ i2 goto label6 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return r1 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = r0 get class <NEXT> $ r3 = $ r2 get name <NEXT> $ r4 = org apache common lang class utils get package canonical name $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org apache common lang enum enum get entry r0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r3 = org apache common lang enum enum empty_map <NEXT> return $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = r1 unmodifiable map <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org apache common lang enum enum get entry r0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r3 = java util collection empty_list <NEXT> return $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = r1 unmodifiable list <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang enum enum r0 <NEXT> $ i0 = r1 i hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org apache common lang exception exception utils get throwable list r0 <NEXT> $ i0 = r1 size <NEXT> $ r2 = newarray java lang throwable [ $ i0 ] <NEXT> $ r3 = r1 to array $ r2 <NEXT> $ r4 = java lang throwable [ ] $ r3 <NEXT> $ r5 = java lang throwable [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r20 = org apache common lang array utils empty_string_array <NEXT> return $ r20 <NEXT> if r0 ! = null goto label1 <NEXT> label r1 = org apache common lang exception exception utils get throwables r0 <NEXT> i0 = lengthof r1 <NEXT> $ r4 = new java util array list <NEXT> specialinvoke $ r4 < init > <NEXT> $ i1 = i0 - 1 <NEXT> $ r5 = r1 [ $ i1 ] <NEXT> r21 = org apache common lang exception exception utils get stack frame list $ r5 <NEXT> i4 = i0 <NEXT> label i4 = i4 + -1 <NEXT> if i4 < 0 goto label8 <NEXT> r3 = r21 <NEXT> if i4 == 0 goto label3 <NEXT> $ i3 = i4 - 1 <NEXT> $ r19 = r1 [ $ i3 ] <NEXT> r21 = org apache common lang exception exception utils get stack frame list $ r19 <NEXT> org apache common lang exception exception utils remove common frame r3 r21 <NEXT> label $ i2 = i0 - 1 <NEXT> if i4 ! = $ i2 goto label4 <NEXT> $ r17 = r1 [ i4 ] <NEXT> $ r18 = $ r17 to string <NEXT> $ r4 add $ r18 <NEXT> goto label5 <NEXT> label i5 = 0 <NEXT> label $ i6 = r3 size <NEXT> if i5 > = $ i6 goto label7 <NEXT> $ r16 = r3 get i5 <NEXT> $ r4 add $ r16 <NEXT> i5 = i5 + 1 <NEXT> goto label6 <NEXT> if i5 > = $ i6 goto label7 <NEXT> label goto label2 <NEXT> if i4 ! = $ i2 goto label4 <NEXT> label $ r10 = new java lang string buffer <NEXT> specialinvoke $ r10 < init > <NEXT> $ r11 = $ r10 append \ `` [ wrap ] \ `` <NEXT> $ r12 = r1 [ i4 ] <NEXT> $ r13 = $ r12 to string <NEXT> $ r14 = $ r11 append $ r13 <NEXT> $ r15 = $ r14 to string <NEXT> $ r4 add $ r15 <NEXT> if i4 < 0 goto label8 <NEXT> label $ r6 = newarray java lang string [ 0 ] <NEXT> $ r7 = $ r4 to array $ r6 <NEXT> $ r8 = java lang string [ ] $ r7 <NEXT> $ r9 = java lang string [ ] $ r8 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache common lang int hash map r0 <NEXT> r1 = r3 table <NEXT> $ i4 = i0 & 2147483647 <NEXT> $ i3 = lengthof r1 <NEXT> i2 = $ i4 % $ i3 <NEXT> r2 = r1 [ i2 ] <NEXT> label if r2 == null goto label3 <NEXT> $ i5 = r2 hash <NEXT> if $ i5 ! = i0 goto label2 <NEXT> return 1 <NEXT> if $ i5 ! = i0 goto label2 <NEXT> label r2 = r2 next <NEXT> goto label1 <NEXT> label if r2 == null goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common lang math double range r0 <NEXT> $ r1 = r5 max object <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java lang double <NEXT> r6 = org apache common lang math double range r0 <NEXT> $ d0 = r6 max <NEXT> specialinvoke r4 < init > $ d0 <NEXT> r7 = org apache common lang math double range r0 <NEXT> r7 max object = r4 <NEXT> label r8 = org apache common lang math double range r0 <NEXT> $ r2 = r8 max object <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang math double range r0 <NEXT> $ d0 = r1 max <NEXT> $ i0 = int $ d0 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang math fraction r0 <NEXT> $ i0 = r1 numerator <NEXT> $ l3 = long $ i0 <NEXT> r2 = org apache common lang math fraction r0 <NEXT> $ i1 = r2 denominator <NEXT> $ l2 = long $ i1 <NEXT> $ l4 = $ l3 $ l2 <NEXT> return $ l4 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang math fraction r0 <NEXT> $ i0 = r1 numerator <NEXT> $ f1 = float $ i0 <NEXT> r2 = org apache common lang math fraction r0 <NEXT> $ i1 = r2 denominator <NEXT> $ f0 = float $ i1 <NEXT> $ f2 = $ f1 $ f0 <NEXT> return $ f2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` the fraction must not be null\ `` <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i0 = r1 numerator <NEXT> if $ i0 ! = 0 goto label2 <NEXT> r7 = new java lang arithmetic exception <NEXT> specialinvoke r7 < init > \ `` the fraction to divide by must not be zero\ `` <NEXT> throw r7 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r2 = r1 invert <NEXT> r8 = org apache common lang math fraction r0 <NEXT> $ r3 = r8 multiply by $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i0 = r1 get minimum integer <NEXT> r2 = org apache common lang math int range r0 <NEXT> $ z0 = r2 contain integer $ i0 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ i1 = r1 get maximum integer <NEXT> r3 = org apache common lang math int range r0 <NEXT> $ z1 = r3 contain integer $ i1 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common lang mutable mutable boolean r1 <NEXT> z0 = r2 value <NEXT> r3 = org apache common lang mutable mutable boolean r0 <NEXT> $ z1 = r3 value <NEXT> if $ z1 ! = z0 goto label1 <NEXT> $ b0 = 0 <NEXT> goto label3 <NEXT> label return $ b0 <NEXT> if $ z1 ! = z0 goto label1 <NEXT> label r4 = org apache common lang mutable mutable boolean r0 <NEXT> $ z2 = r4 value <NEXT> if $ z2 == 0 goto label2 <NEXT> $ b0 = 1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ b0 = -1 <END>
<BEG> r0 = @ this <NEXT> r2 = new java lang byte <NEXT> r3 = org apache common lang mutable mutable byte r0 <NEXT> $ b0 = r3 byte value <NEXT> specialinvoke r2 < init > $ b0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org apache common lang mutable mutable double <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = org apache common lang mutable mutable double r1 <NEXT> $ d0 = $ r2 value <NEXT> $ l0 = java lang double double to long bit $ d0 <NEXT> r3 = org apache common lang mutable mutable double r0 <NEXT> $ d1 = r3 value <NEXT> $ l1 = java lang double double to long bit $ d1 <NEXT> $ b2 = $ l0 cmp $ l1 <NEXT> if $ b2 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ b2 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang mutable mutable int r0 <NEXT> $ i0 = r1 value <NEXT> $ d0 = double $ i0 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang mutable mutable short r0 <NEXT> $ s0 = r1 value <NEXT> $ d0 = double $ s0 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 print stack trace r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = new java lang string buffer <NEXT> specialinvoke $ r2 < init > <NEXT> org apache common lang object utils identity to string $ r2 r0 <NEXT> $ r3 = $ r2 to string <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org apache common lang reflect field utils get field r0 r1 0 <NEXT> org apache common lang reflect member utils set accessible workaround r2 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common lang reflect field utils read declare static field r0 r1 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> org apache common lang reflect field utils write declare static field r0 r1 r2 0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = newarray java lang class [ 1 ] <NEXT> $ r3 [ 0 ] = r2 <NEXT> $ r4 = org apache common lang reflect method utils get accessible method r0 r1 $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = new java io file <NEXT> $ r1 = java lang system get property \ `` java io tmpdir\ `` <NEXT> specialinvoke $ r0 < init > $ r1 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang text str builder r0 <NEXT> $ i0 = r1 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r12 = org apache common lang text str builder r0 <NEXT> $ i12 = r12 size <NEXT> $ i13 = $ i12 + 4 <NEXT> r13 = org apache common lang text str builder r0 <NEXT> r13 ensure capacity $ i13 <NEXT> r14 = org apache common lang text str builder r0 <NEXT> $ r8 = r14 buffer <NEXT> r15 = org apache common lang text str builder r0 <NEXT> $ i14 = r15 size <NEXT> $ i15 = $ i14 + 1 <NEXT> r16 = org apache common lang text str builder r0 <NEXT> r16 size = $ i15 <NEXT> $ r8 [ $ i14 ] = 116 <NEXT> r17 = org apache common lang text str builder r0 <NEXT> $ r9 = r17 buffer <NEXT> r18 = org apache common lang text str builder r0 <NEXT> $ i16 = r18 size <NEXT> $ i17 = $ i16 + 1 <NEXT> r19 = org apache common lang text str builder r0 <NEXT> r19 size = $ i17 <NEXT> $ r9 [ $ i16 ] = 114 <NEXT> r20 = org apache common lang text str builder r0 <NEXT> $ r10 = r20 buffer <NEXT> r21 = org apache common lang text str builder r0 <NEXT> $ i18 = r21 size <NEXT> $ i19 = $ i18 + 1 <NEXT> r22 = org apache common lang text str builder r0 <NEXT> r22 size = $ i19 <NEXT> $ r10 [ $ i18 ] = 117 <NEXT> r23 = org apache common lang text str builder r0 <NEXT> $ r11 = r23 buffer <NEXT> r24 = org apache common lang text str builder r0 <NEXT> $ i20 = r24 size <NEXT> $ i21 = $ i20 + 1 <NEXT> r25 = org apache common lang text str builder r0 <NEXT> r25 size = $ i21 <NEXT> $ r11 [ $ i20 ] = 101 <NEXT> goto label2 <NEXT> label r43 = org apache common lang text str builder r0 <NEXT> return r43 <NEXT> if z0 == 0 goto label1 <NEXT> label r26 = org apache common lang text str builder r0 <NEXT> $ i0 = r26 size <NEXT> $ i1 = $ i0 + 5 <NEXT> r27 = org apache common lang text str builder r0 <NEXT> r27 ensure capacity $ i1 <NEXT> r28 = org apache common lang text str builder r0 <NEXT> $ r2 = r28 buffer <NEXT> r29 = org apache common lang text str builder r0 <NEXT> $ i2 = r29 size <NEXT> $ i3 = $ i2 + 1 <NEXT> r30 = org apache common lang text str builder r0 <NEXT> r30 size = $ i3 <NEXT> $ r2 [ $ i2 ] = 102 <NEXT> r31 = org apache common lang text str builder r0 <NEXT> $ r3 = r31 buffer <NEXT> r32 = org apache common lang text str builder r0 <NEXT> $ i4 = r32 size <NEXT> $ i5 = $ i4 + 1 <NEXT> r33 = org apache common lang text str builder r0 <NEXT> r33 size = $ i5 <NEXT> $ r3 [ $ i4 ] = 97 <NEXT> r34 = org apache common lang text str builder r0 <NEXT> $ r4 = r34 buffer <NEXT> r35 = org apache common lang text str builder r0 <NEXT> $ i6 = r35 size <NEXT> $ i7 = $ i6 + 1 <NEXT> r36 = org apache common lang text str builder r0 <NEXT> r36 size = $ i7 <NEXT> $ r4 [ $ i6 ] = 108 <NEXT> r37 = org apache common lang text str builder r0 <NEXT> $ r5 = r37 buffer <NEXT> r38 = org apache common lang text str builder r0 <NEXT> $ i8 = r38 size <NEXT> $ i9 = $ i8 + 1 <NEXT> r39 = org apache common lang text str builder r0 <NEXT> r39 size = $ i9 <NEXT> $ r5 [ $ i8 ] = 115 <NEXT> r40 = org apache common lang text str builder r0 <NEXT> $ r6 = r40 buffer <NEXT> r41 = org apache common lang text str builder r0 <NEXT> $ i10 = r41 size <NEXT> $ i11 = $ i10 + 1 <NEXT> r42 = org apache common lang text str builder r0 <NEXT> r42 size = $ i11 <NEXT> $ r6 [ $ i10 ] = 101 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache common lang text str builder r0 <NEXT> $ r1 = r3 append z0 <NEXT> $ r2 = $ r1 append new line <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i2 = @ parameter3 <NEXT> r22 = org apache common lang text str builder r0 <NEXT> r22 validate index i0 <NEXT> if r1 ! = null goto label1 <NEXT> r23 = org apache common lang text str builder r0 <NEXT> $ r16 = r23 null text <NEXT> r24 = org apache common lang text str builder r0 <NEXT> $ r17 = r24 insert i0 $ r16 <NEXT> return $ r17 <NEXT> if r1 ! = null goto label1 <NEXT> label if i1 < 0 goto label2 <NEXT> $ i3 = lengthof r1 <NEXT> if i1 < = $ i3 goto label3 <NEXT> label r19 = new java lang string index out of bound exception <NEXT> r18 = new java lang string buffer <NEXT> specialinvoke r18 < init > <NEXT> $ r4 = r18 append \ `` invalid offset \ `` <NEXT> $ r5 = $ r4 append i1 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke r19 < init > $ r6 <NEXT> throw r19 <NEXT> if i1 < = $ i3 goto label3 <NEXT> label if i2 < 0 goto label4 <NEXT> $ i5 = i1 + i2 <NEXT> $ i4 = lengthof r1 <NEXT> if $ i5 < = $ i4 goto label5 <NEXT> label r21 = new java lang string index out of bound exception <NEXT> r20 = new java lang string buffer <NEXT> specialinvoke r20 < init > <NEXT> $ r9 = r20 append \ `` invalid length \ `` <NEXT> $ r10 = $ r9 append i2 <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r21 < init > $ r11 <NEXT> throw r21 <NEXT> if $ i5 < = $ i4 goto label5 <NEXT> label if i2 < = 0 goto label6 <NEXT> r25 = org apache common lang text str builder r0 <NEXT> $ i6 = r25 size <NEXT> $ i7 = $ i6 + i2 <NEXT> r26 = org apache common lang text str builder r0 <NEXT> r26 ensure capacity $ i7 <NEXT> r27 = org apache common lang text str builder r0 <NEXT> $ r14 = r27 buffer <NEXT> r28 = org apache common lang text str builder r0 <NEXT> $ r13 = r28 buffer <NEXT> $ i10 = i0 + i2 <NEXT> r29 = org apache common lang text str builder r0 <NEXT> $ i8 = r29 size <NEXT> $ i9 = $ i8 - i0 <NEXT> java lang system arraycopy $ r14 i0 $ r13 $ i10 $ i9 <NEXT> r30 = org apache common lang text str builder r0 <NEXT> $ r15 = r30 buffer <NEXT> java lang system arraycopy r1 i1 $ r15 i0 i2 <NEXT> r31 = org apache common lang text str builder r0 <NEXT> $ i11 = r31 size <NEXT> $ i12 = $ i11 + i2 <NEXT> r32 = org apache common lang text str builder r0 <NEXT> r32 size = $ i12 <NEXT> label r33 = org apache common lang text str builder r0 <NEXT> return r33 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> c1 = @ parameter1 <NEXT> if c0 == c1 goto label3 <NEXT> i4 = 0 <NEXT> label r3 = org apache common lang text str builder r0 <NEXT> $ i2 = r3 size <NEXT> if i4 > = $ i2 goto label3 <NEXT> r4 = org apache common lang text str builder r0 <NEXT> $ r1 = r4 buffer <NEXT> $ c3 = $ r1 [ i4 ] <NEXT> if $ c3 ! = c0 goto label2 <NEXT> r5 = org apache common lang text str builder r0 <NEXT> $ r2 = r5 buffer <NEXT> $ r2 [ i4 ] = c1 <NEXT> goto label3 <NEXT> label r6 = org apache common lang text str builder r0 <NEXT> return r6 <NEXT> if $ c3 ! = c0 goto label2 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> c1 = @ parameter1 <NEXT> if c0 == c1 goto label3 <NEXT> i4 = 0 <NEXT> label r3 = org apache common lang text str builder r0 <NEXT> $ i2 = r3 size <NEXT> if i4 > = $ i2 goto label3 <NEXT> r4 = org apache common lang text str builder r0 <NEXT> $ r1 = r4 buffer <NEXT> $ c3 = $ r1 [ i4 ] <NEXT> if $ c3 ! = c0 goto label2 <NEXT> r5 = org apache common lang text str builder r0 <NEXT> $ r2 = r5 buffer <NEXT> $ r2 [ i4 ] = c1 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i2 goto label3 <NEXT> label r6 = org apache common lang text str builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common lang text str builder r0 <NEXT> $ i0 = r4 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r5 = org apache common lang text str builder r0 <NEXT> return r5 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r6 = org apache common lang text str builder r0 <NEXT> i6 = r6 size <NEXT> r7 = org apache common lang text str builder r0 <NEXT> r1 = r7 buffer <NEXT> i7 = 0 <NEXT> label if i7 > = i6 goto label3 <NEXT> $ c5 = r1 [ i7 ] <NEXT> if $ c5 > 32 goto label3 <NEXT> i7 = i7 + 1 <NEXT> goto label2 <NEXT> if $ c5 > 32 goto label3 <NEXT> label if i7 > = i6 goto label4 <NEXT> $ i3 = i6 - 1 <NEXT> $ c4 = r1 [ $ i3 ] <NEXT> if $ c4 > 32 goto label4 <NEXT> i6 = i6 + -1 <NEXT> goto label3 <NEXT> if $ c4 > 32 goto label4 <NEXT> label r8 = org apache common lang text str builder r0 <NEXT> $ i1 = r8 size <NEXT> if i6 > = $ i1 goto label5 <NEXT> r9 = org apache common lang text str builder r0 <NEXT> $ i2 = r9 size <NEXT> r10 = org apache common lang text str builder r0 <NEXT> r10 delete i6 $ i2 <NEXT> label if i7 < = 0 goto label6 <NEXT> r11 = org apache common lang text str builder r0 <NEXT> r11 delete 0 i7 <NEXT> label r12 = org apache common lang text str builder r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > 0 goto label1 <NEXT> return \ `` \ `` <NEXT> if i0 > 0 goto label1 <NEXT> label r7 = org apache common lang text str builder r0 <NEXT> $ i1 = r7 size <NEXT> if i0 < $ i1 goto label2 <NEXT> r5 = new java lang string <NEXT> r8 = org apache common lang text str builder r0 <NEXT> $ r4 = r8 buffer <NEXT> r9 = org apache common lang text str builder r0 <NEXT> $ i4 = r9 size <NEXT> specialinvoke r5 < init > $ r4 0 $ i4 <NEXT> return r5 <NEXT> if i0 < $ i1 goto label2 <NEXT> label r6 = new java lang string <NEXT> r10 = org apache common lang text str builder r0 <NEXT> $ r2 = r10 buffer <NEXT> r11 = org apache common lang text str builder r0 <NEXT> $ i2 = r11 size <NEXT> $ i3 = $ i2 - i0 <NEXT> specialinvoke r6 < init > $ r2 $ i3 i0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r2 = org apache common lang text str builder r0 <NEXT> r1 = r2 buffer <NEXT> i3 = 0 <NEXT> label r3 = org apache common lang text str builder r0 <NEXT> $ i1 = r3 size <NEXT> if i3 > = $ i1 goto label3 <NEXT> $ c2 = r1 [ i3 ] <NEXT> if $ c2 ! = c0 goto label2 <NEXT> return 1 <NEXT> if $ c2 ! = c0 goto label2 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i1 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> i4 = @ parameter1 <NEXT> if i4 > = 0 goto label1 <NEXT> $ i5 = 0 <NEXT> goto label2 <NEXT> label r2 = org apache common lang text str builder r0 <NEXT> $ i1 = r2 size <NEXT> if $ i5 < $ i1 goto label3 <NEXT> return -1 <NEXT> if $ i5 < $ i1 goto label3 <NEXT> label r3 = org apache common lang text str builder r0 <NEXT> r1 = r3 buffer <NEXT> i7 = $ i5 <NEXT> label r4 = org apache common lang text str builder r0 <NEXT> $ i2 = r4 size <NEXT> if i7 > = $ i2 goto label6 <NEXT> $ c3 = r1 [ i7 ] <NEXT> if $ c3 ! = c0 goto label5 <NEXT> return i7 <NEXT> if $ c3 ! = c0 goto label5 <NEXT> label i7 = i7 + 1 <NEXT> goto label4 <NEXT> if i7 > = $ i2 goto label6 <NEXT> label return -1 <NEXT> if i4 > = 0 goto label1 <NEXT> label $ i5 = i4 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache common lang text str builder $ str builder reader <NEXT> r3 = org apache common lang text str builder r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = java io reader r2 <NEXT> return r4 <END>
<BEG> $ r0 = org apache common lang text str matcher split_matcher <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> $ r1 = org apache common lang text str matcher char matcher c0 <NEXT> r3 = org apache common lang text str substitutor r0 <NEXT> $ r2 = r3 set variable suffix matcher $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang text str tokenizer r0 <NEXT> specialinvoke r2 check tokenized <NEXT> r3 = org apache common lang text str tokenizer r0 <NEXT> $ r1 = r3 token <NEXT> $ i0 = lengthof $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r2 = org apache common lang text str tokenizer r0 <NEXT> r2 ignore matcher = r1 <NEXT> label r3 = org apache common lang text str tokenizer r0 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common lang time date format utils format r0 r1 null null <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org apache common lang validate not null r0 <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r0 <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r2 = r0 [ i1 ] <NEXT> if $ r2 ! = null goto label2 <NEXT> $ r3 = new java lang illegal argument exception <NEXT> specialinvoke $ r3 < init > r1 <NEXT> throw $ r3 <NEXT> if $ r2 ! = null goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> org apache common lang validate not null r0 <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r0 <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r1 = r0 [ i1 ] <NEXT> if $ r1 ! = null goto label2 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> $ r3 = new java lang string buffer <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` the validated array contain null element at index \ `` <NEXT> $ r5 = $ r4 append i1 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke $ r2 < init > $ r6 <NEXT> throw $ r2 <NEXT> if $ r1 ! = null goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> org apache common lang validate not null r0 <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r0 <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r1 = r0 [ i1 ] <NEXT> if $ r1 ! = null goto label2 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> $ r3 = new java lang string buffer <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` the validated array contain null element at index \ `` <NEXT> $ r5 = $ r4 append i1 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke $ r2 < init > $ r6 <NEXT> throw $ r2 <NEXT> if $ r1 ! = null goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> $ i5 = -1 <NEXT> goto label2 <NEXT> label if r0 == null goto label3 <NEXT> $ i3 = r0 length <NEXT> if $ i3 == 0 goto label3 <NEXT> if $ i5 ! = 0 goto label4 <NEXT> label return r0 <NEXT> if $ i5 ! = 0 goto label4 <NEXT> label i1 = r0 length <NEXT> $ r3 = new java lang string buffer <NEXT> specialinvoke $ r3 < init > i1 <NEXT> z1 = 1 <NEXT> i6 = 0 <NEXT> label if i6 > = i1 goto label9 <NEXT> c2 = r0 char at i6 <NEXT> $ z0 = org apache common lang word utils be delimiter c2 r1 <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r3 append c2 <NEXT> if $ z0 == 0 goto label6 <NEXT> label if z1 == 0 goto label7 <NEXT> $ c4 = java lang character to title case c2 <NEXT> $ r3 append $ c4 <NEXT> z1 = 0 <NEXT> goto label8 <NEXT> label i6 = i6 + 1 <NEXT> goto label5 <NEXT> label if z1 == 0 goto label7 <NEXT> label $ r3 append c2 <NEXT> label if i6 > = i1 goto label9 <NEXT> label $ r4 = $ r3 to string <NEXT> return $ r4 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i5 = lengthof r1 <END>
<BEG> $ r0 = new java io file <NEXT> $ r1 = java lang system get property \ `` java io tmpdir\ `` <NEXT> specialinvoke $ r0 < init > $ r1 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang text str substitutor r0 <NEXT> $ z0 = r1 enable substitution in variable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang3 concurrent basic thread factory r0 <NEXT> $ r1 = r2 priority <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang3 concurrent basic thread factory r0 <NEXT> $ r1 = r2 thread counter <NEXT> $ l0 = $ r1 get <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common lang3 concurrent callable background initializer r0 <NEXT> $ r1 = r3 callable <NEXT> $ r2 = $ r1 call <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang3 concurrent constant initializer r0 <NEXT> $ r1 = r2 object <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang3 concurrent time semaphore r0 <NEXT> $ r1 = r2 executor service <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common lang3 event event listener support r0 <NEXT> $ r2 = r4 listener <NEXT> r5 = org apache common lang3 event event listener support r0 <NEXT> $ r1 = r5 prototype array <NEXT> $ r3 = $ r2 to array $ r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang3 java version r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label if r0 ! = r1 goto label2 <NEXT> return 1 <NEXT> label if r0 ! = r1 goto label2 <NEXT> label $ r3 = r0 get class <NEXT> $ r4 = r1 get class <NEXT> if $ r3 ! = $ r4 goto label3 <NEXT> r2 = org apache common lang3 mutable mutable object r1 <NEXT> r7 = org apache common lang3 mutable mutable object r0 <NEXT> $ r6 = r7 value <NEXT> $ r5 = r2 value <NEXT> $ z0 = $ r6 equal $ r5 <NEXT> return $ z0 <NEXT> if $ r3 ! = $ r4 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang3 range r0 <NEXT> $ r1 = r2 maximum <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common lang3 reflect field utils read static field r0 r1 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label04 <NEXT> if r1 == null goto label01 <NEXT> $ z12 = r1 be primitive <NEXT> if $ z12 ! = 0 goto label02 <NEXT> label $ z13 = 1 <NEXT> goto label03 <NEXT> label return $ z13 <NEXT> if $ z12 ! = 0 goto label02 <NEXT> label $ z13 = 0 <NEXT> if r0 ! = null goto label04 <NEXT> label if r1 ! = null goto label05 <NEXT> return 0 <NEXT> label if r1 ! = null goto label05 <NEXT> label $ z0 = r1 equal r0 <NEXT> if $ z0 == 0 goto label06 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label06 <NEXT> label $ z1 = r0 instanceof java lang class <NEXT> if $ z1 == 0 goto label07 <NEXT> $ r15 = java lang class r0 <NEXT> $ z11 = org apache common lang3 class utils be assignable $ r15 r1 <NEXT> return $ z11 <NEXT> if $ z1 == 0 goto label07 <NEXT> label $ z2 = r0 instanceof java lang reflect parameterized type <NEXT> if $ z2 == 0 goto label08 <NEXT> $ r13 = java lang reflect parameterized type r0 <NEXT> $ r14 = org apache common lang3 reflect type utils get raw type $ r13 <NEXT> $ z10 = org apache common lang3 reflect type utils be assignable $ r14 r1 <NEXT> return $ z10 <NEXT> if $ z2 == 0 goto label08 <NEXT> label $ z3 = r0 instanceof java lang reflect type variable <NEXT> if $ z3 == 0 goto label12 <NEXT> $ r12 = java lang reflect type variable r0 <NEXT> r2 = $ r12 get bound <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label11 <NEXT> r3 = r2 [ i1 ] <NEXT> $ z9 = org apache common lang3 reflect type utils be assignable r3 r1 <NEXT> if $ z9 == 0 goto label10 <NEXT> label i1 = i1 + 1 <NEXT> goto label09 <NEXT> label if i1 > = i0 goto label11 <NEXT> label return 0 <NEXT> if $ z3 == 0 goto label12 <NEXT> label $ z4 = r0 instanceof java lang reflect generic array type <NEXT> if $ z4 == 0 goto label16 <NEXT> $ z6 = r1 equal class \ `` ljava lang object \ `` <NEXT> if $ z6 ! = 0 goto label13 <NEXT> $ z7 = r1 be array <NEXT> if $ z7 == 0 goto label14 <NEXT> $ r9 = java lang reflect generic array type r0 <NEXT> $ r10 = $ r9 get generic component type <NEXT> $ r11 = r1 get component type <NEXT> $ z8 = org apache common lang3 reflect type utils be assignable $ r10 $ r11 <NEXT> if $ z8 == 0 goto label14 <NEXT> label $ z14 = 1 <NEXT> goto label15 <NEXT> label return $ z14 <NEXT> if $ z8 == 0 goto label14 <NEXT> label $ z14 = 0 <NEXT> if $ z4 == 0 goto label16 <NEXT> label $ z5 = r0 instanceof java lang reflect wildcard type <NEXT> if $ z5 == 0 goto label17 <NEXT> label $ r4 = new java lang illegal state exception <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append \ `` find an unhandled type \ `` <NEXT> $ r7 = $ r6 append r0 <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke $ r4 < init > $ r8 <NEXT> throw $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common lang3 string escape utils unescape_html3 <NEXT> $ r2 = $ r1 translate r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common lang3 string escape utils unescape_xml <NEXT> $ r2 = $ r1 translate r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r2 = org apache common lang3 text str builder r0 <NEXT> $ r1 = r2 append c0 <NEXT> r3 = java lang appendable $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = newarray java lang object [ 1 ] <NEXT> $ r2 = java lang integer value of i0 <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> $ r3 = org apache common lang3 validate valid index r0 i0 \ `` the validated character sequence index be invalid % d\ <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r2 = @ parameter3 <NEXT> org apache common lang3 validate not null r0 <NEXT> if i0 < 0 goto label1 <NEXT> $ i1 = r0 length <NEXT> if i0 < $ i1 goto label2 <NEXT> label $ r4 = new java lang index out of bound exception <NEXT> $ r5 = java lang string format r1 r2 <NEXT> specialinvoke $ r4 < init > $ r5 <NEXT> throw $ r4 <NEXT> if i0 < $ i1 goto label2 <NEXT> label return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ i0 = r2 compare to r0 <NEXT> if $ i0 < 0 goto label1 <NEXT> $ i1 = r2 compare to r1 <NEXT> if $ i1 < = 0 goto label2 <NEXT> label $ r3 = new java lang illegal argument exception <NEXT> $ r4 = newarray java lang object [ 3 ] <NEXT> $ r4 [ 0 ] = r2 <NEXT> $ r4 [ 1 ] = r0 <NEXT> $ r4 [ 2 ] = r1 <NEXT> $ r5 = java lang string format \ `` the value % s be not in the specified inclusive range of % s to % s\ <NEXT> specialinvoke $ r3 < init > $ r5 <NEXT> throw $ r3 <NEXT> if $ i1 < = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ i0 = r2 compare to r0 <NEXT> if $ i0 < 0 goto label1 <NEXT> $ i1 = r2 compare to r1 <NEXT> if $ i1 < = 0 goto label2 <NEXT> label $ r5 = new java lang illegal argument exception <NEXT> $ r6 = java lang string format r3 r4 <NEXT> specialinvoke $ r5 < init > $ r6 <NEXT> throw $ r5 <NEXT> if $ i1 < = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ z0 = r0 be assignable from r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r4 = new java lang illegal argument exception <NEXT> $ r5 = java lang string format r2 r3 <NEXT> specialinvoke $ r4 < init > $ r5 <NEXT> throw $ r4 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> $ r2 = org apache common lang3 array utils add r0 z0 <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = newarray boolean [ 1 ] <NEXT> $ r1 [ 0 ] = z0 <NEXT> $ r2 = org apache common lang3 array utils insert 0 r0 $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i1 = org apache common lang3 array utils get length r0 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ i2 = lengthof r0 <NEXT> if $ i2 > i0 goto label2 <NEXT> label return 0 <NEXT> if $ i2 > i0 goto label2 <NEXT> label if i0 < 0 goto label3 <NEXT> $ z0 = 1 <NEXT> goto label4 <NEXT> label return $ z0 <NEXT> label if i0 < 0 goto label3 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return <NEXT> if r0 ! = null goto label1 <NEXT> label $ i1 = lengthof r0 <NEXT> org apache common lang3 array utils shift r0 0 $ i1 i0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ z0 = org apache common lang3 array utils be empty r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label org apache common lang3 array utils swap r0 i0 i1 1 <END>
<BEG> r0 = @ parameter0 <NEXT> i7 = @ parameter1 <NEXT> i8 = @ parameter2 <NEXT> i9 = @ parameter3 <NEXT> $ z1 = org apache common lang3 array utils be empty r0 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if i7 > = $ i0 goto label1 <NEXT> $ i1 = lengthof r0 <NEXT> if i8 < $ i1 goto label2 <NEXT> label return <NEXT> if i8 < $ i1 goto label2 <NEXT> label if i7 > = 0 goto label3 <NEXT> i7 = 0 <NEXT> label if i8 > = 0 goto label4 <NEXT> i8 = 0 <NEXT> label $ i2 = lengthof r0 <NEXT> $ i3 = $ i2 - i7 <NEXT> $ i4 = java lang math min i9 $ i3 <NEXT> $ i5 = lengthof r0 <NEXT> $ i6 = $ i5 - i8 <NEXT> i10 = java lang math min $ i4 $ i6 <NEXT> i11 = 0 <NEXT> label if i11 > = i10 goto label6 <NEXT> z0 = r0 [ i7 ] <NEXT> $ z2 = r0 [ i8 ] <NEXT> r0 [ i7 ] = $ z2 <NEXT> r0 [ i8 ] = z0 <NEXT> i11 = i11 + 1 <NEXT> i7 = i7 + 1 <NEXT> i8 = i8 + 1 <NEXT> goto label5 <NEXT> label if i11 > = i10 goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang3 builder diff r0 <NEXT> $ r1 = r2 field name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang3 concurrent event count circuit breaker r0 <NEXT> $ l0 = r1 open interval <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang3 concurrent event count circuit breaker r0 <NEXT> $ i0 = r1 closing threshold <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang3 concurrent time semaphore r0 <NEXT> specialinvoke r1 prepare acquire <NEXT> label r2 = org apache common lang3 concurrent time semaphore r0 <NEXT> z0 = specialinvoke r2 acquire permit <NEXT> if z0 ! = 0 goto label2 <NEXT> r0 wait <NEXT> label if z0 == 0 goto label1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common lang3 event event listener support r0 <NEXT> $ r2 = r4 listener <NEXT> r5 = org apache common lang3 event event listener support r0 <NEXT> $ r1 = r5 prototype array <NEXT> $ r3 = $ r2 to array $ r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang3 mutable mutable boolean r0 <NEXT> r1 value = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang3 mutable mutable byte r0 <NEXT> $ b0 = r1 value <NEXT> $ i1 = $ b0 + 1 <NEXT> $ b2 = byte $ i1 <NEXT> r2 = org apache common lang3 mutable mutable byte r0 <NEXT> r2 value = $ b2 <NEXT> r3 = org apache common lang3 mutable mutable byte r0 <NEXT> $ b3 = r3 value <NEXT> return $ b3 <END>
<BEG> $ f0 = org apache common lang3 random utils next float 0 0f 3 4028235e38f <NEXT> return $ f0 <END>
<BEG> $ r0 = java lang system get property \ `` user name\ `` <NEXT> return $ r0 <END>
<BEG> $ r0 = org apache common lang3 text translate entity array java_ctrl_chars_escape <NEXT> $ r1 = $ r0 clone <NEXT> $ r2 = java lang string [ ] [ ] $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = new org apache common lang3 thread utils $ name predicate <NEXT> specialinvoke r3 < init > r0 <NEXT> r4 = org apache common lang3 thread utils $ thread group predicate r3 <NEXT> $ r2 = org apache common lang3 thread utils find thread group r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common lang3 time calendar utils r0 <NEXT> $ r1 = r2 calendar <NEXT> $ i0 = $ r1 get 5 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org apache common lang3 time fast date parser r0 <NEXT> $ r6 = r9 pattern <NEXT> r4 = $ r6 list iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r4 next <NEXT> r5 = org apache common lang3 time fast date parser $ strategy and width $ r7 <NEXT> i0 = r5 get max width r4 <NEXT> $ r8 = r5 strategy <NEXT> r10 = org apache common lang3 time fast date parser r0 <NEXT> $ z1 = $ r8 parse r10 r3 r1 r2 i0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 1 <END>
<BEG> $ r0 = new org apache common lang3 time stop watch <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = r0 goto label1 <NEXT> return 1 <NEXT> if r1 ! = r0 goto label1 <NEXT> label $ z0 = r1 instanceof org apache common lang3 tuple triple <NEXT> if $ z0 == 0 goto label4 <NEXT> r2 = org apache common lang3 tuple triple r1 <NEXT> r9 = org apache common lang3 tuple triple r0 <NEXT> $ r3 = r9 get leave <NEXT> $ r4 = r2 get leave <NEXT> $ z1 = java util object equal $ r3 $ r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> r10 = org apache common lang3 tuple triple r0 <NEXT> $ r5 = r10 get middle <NEXT> $ r6 = r2 get middle <NEXT> $ z2 = java util object equal $ r5 $ r6 <NEXT> if $ z2 == 0 goto label2 <NEXT> r11 = org apache common lang3 tuple triple r0 <NEXT> $ r7 = r11 get right <NEXT> $ r8 = r2 get right <NEXT> $ z3 = java util object equal $ r7 $ r8 <NEXT> if $ z3 == 0 goto label2 <NEXT> $ z4 = 1 <NEXT> goto label3 <NEXT> label return $ z4 <NEXT> if $ z3 == 0 goto label2 <NEXT> label $ z4 = 0 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang3 text str builder r0 <NEXT> $ i0 = r1 size <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org apache common lang3 time fast date parser r0 <NEXT> $ r6 = r9 pattern <NEXT> r4 = $ r6 list iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r4 next <NEXT> r5 = org apache common lang3 time fast date parser $ strategy and width $ r7 <NEXT> i0 = r5 get max width r4 <NEXT> $ r8 = r5 strategy <NEXT> r10 = org apache common lang3 time fast date parser r0 <NEXT> $ z1 = $ r8 parse r10 r3 r1 r2 i0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 1 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ r0 = new org apache common lang3 text translate java unicode escaper <NEXT> specialinvoke $ r0 < init > i0 i1 1 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang3 time stop watch r0 <NEXT> $ l0 = r1 get nano time <NEXT> $ l1 = $ l0 1000000l <NEXT> return $ l1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common lang3 class utils get name r0 \ `` \ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> $ r2 = r1 <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = r0 get name <END>
<BEG> r0 = @ this <NEXT> r6 = org apache common log impl log kit logger r0 <NEXT> $ r1 = r6 logger <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = org apache log hierarchy get default hierarchy <NEXT> r7 = org apache common log impl log kit logger r0 <NEXT> $ r4 = r7 name <NEXT> $ r5 = $ r3 get logger for $ r4 <NEXT> r8 = org apache common log impl log kit logger r0 <NEXT> r8 logger = $ r5 <NEXT> label r9 = org apache common log impl log kit logger r0 <NEXT> $ r2 = r9 logger <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common log impl log kit logger r0 <NEXT> r2 debug r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get name <NEXT> $ r2 = org apache common log log source get instance $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 analysis differentiation derivative structure r0 <NEXT> $ r1 = r2 compiler <NEXT> $ i0 = $ r1 get free parameter <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common math3 analysis differentiation d s compiler r0 <NEXT> $ r1 = r3 size <NEXT> r4 = org apache common math3 analysis differentiation d s compiler r0 <NEXT> $ i0 = r4 parameter <NEXT> $ r2 = $ r1 [ $ i0 ] <NEXT> r5 = org apache common math3 analysis differentiation d s compiler r0 <NEXT> $ i1 = r5 order <NEXT> $ i2 = $ r2 [ $ i1 ] <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r2 = org apache common math3 analysis polynomial polynomial function r0 <NEXT> $ r1 = r2 coefficient <NEXT> $ d1 = org apache common math3 analysis polynomial polynomial function evaluate $ r1 d0 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 analysis polynomial polynomial function r0 <NEXT> $ r1 = r2 coefficient <NEXT> $ i0 = lengthof $ r1 <NEXT> $ i1 = $ i0 - 1 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 complex complex r0 <NEXT> $ d0 = r1 imaginary <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 complex complex r0 <NEXT> $ z0 = r1 be na n <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common math3 complex complex r0 <NEXT> $ z0 = r3 be na n <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = org apache common math3 complex complex na n <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = org apache common math3 complex complex r0 <NEXT> $ d0 = r4 real <NEXT> $ d1 = org apache common math3 util fast math sin $ d0 <NEXT> r5 = org apache common math3 complex complex r0 <NEXT> $ d2 = r5 imaginary <NEXT> $ d3 = org apache common math3 util fast math cosh $ d2 <NEXT> $ d5 = $ d1 * $ d3 <NEXT> r6 = org apache common math3 complex complex r0 <NEXT> $ d4 = r6 real <NEXT> $ d6 = org apache common math3 util fast math cos $ d4 <NEXT> r7 = org apache common math3 complex complex r0 <NEXT> $ d7 = r7 imaginary <NEXT> $ d8 = org apache common math3 util fast math sinh $ d7 <NEXT> $ d9 = $ d6 * $ d8 <NEXT> r8 = org apache common math3 complex complex r0 <NEXT> $ r1 = r8 create complex $ d5 $ d9 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common math3 complex complex r0 <NEXT> $ z0 = r5 be na n <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = org apache common math3 complex complex r0 <NEXT> $ d3 = r6 imaginary <NEXT> $ z1 = java lang double be infinite $ d3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r1 = org apache common math3 complex complex na n <NEXT> return $ r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r7 = org apache common math3 complex complex r0 <NEXT> $ d4 = r7 real <NEXT> $ b0 = $ d4 cmpl 20 0 <NEXT> if $ b0 < = 0 goto label3 <NEXT> r8 = org apache common math3 complex complex r0 <NEXT> $ r4 = r8 create complex 1 0 0 0 <NEXT> return $ r4 <NEXT> if $ b0 < = 0 goto label3 <NEXT> label r9 = org apache common math3 complex complex r0 <NEXT> $ d5 = r9 real <NEXT> $ b1 = $ d5 cmpg -20 0 <NEXT> if $ b1 > = 0 goto label4 <NEXT> r10 = org apache common math3 complex complex r0 <NEXT> $ r3 = r10 create complex -1 0 0 0 <NEXT> return $ r3 <NEXT> if $ b1 > = 0 goto label4 <NEXT> label r11 = org apache common math3 complex complex r0 <NEXT> $ d6 = r11 real <NEXT> d0 = 2 0 * $ d6 <NEXT> r12 = org apache common math3 complex complex r0 <NEXT> $ d7 = r12 imaginary <NEXT> d1 = 2 0 * $ d7 <NEXT> $ d8 = org apache common math3 util fast math cosh d0 <NEXT> $ d9 = org apache common math3 util fast math co d1 <NEXT> d2 = $ d8 + $ d9 <NEXT> $ d10 = org apache common math3 util fast math sinh d0 <NEXT> $ d11 = $ d10 d2 <NEXT> $ d12 = org apache common math3 util fast math sin d1 <NEXT> $ d13 = $ d12 d2 <NEXT> r13 = org apache common math3 complex complex r0 <NEXT> $ r2 = r13 create complex $ d11 $ d13 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 complex complex r0 <NEXT> $ d0 = r1 get imaginary <NEXT> r2 = org apache common math3 complex complex r0 <NEXT> $ d1 = r2 get real <NEXT> $ d2 = org apache common math3 util fast math atan2 $ d0 $ d1 <NEXT> return $ d2 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ r1 = new org apache common math3 complex complex <NEXT> specialinvoke $ r1 < init > d0 d1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r2 = org apache common math3 complex quaternion r0 <NEXT> $ d1 = r2 q0 <NEXT> $ d2 = r1 get q0 <NEXT> $ z0 = org apache common math3 util precision equal $ d1 $ d2 d0 <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org apache common math3 complex quaternion r0 <NEXT> $ d3 = r3 q1 <NEXT> $ d4 = r1 get q1 <NEXT> $ z1 = org apache common math3 util precision equal $ d3 $ d4 d0 <NEXT> if $ z1 == 0 goto label1 <NEXT> r4 = org apache common math3 complex quaternion r0 <NEXT> $ d5 = r4 q2 <NEXT> $ d6 = r1 get q2 <NEXT> $ z2 = org apache common math3 util precision equal $ d5 $ d6 d0 <NEXT> if $ z2 == 0 goto label1 <NEXT> r5 = org apache common math3 complex quaternion r0 <NEXT> $ d7 = r5 q3 <NEXT> $ d8 = r1 get q3 <NEXT> $ z3 = org apache common math3 util precision equal $ d7 $ d8 d0 <NEXT> if $ z3 == 0 goto label1 <NEXT> $ z4 = 1 <NEXT> goto label2 <NEXT> label return $ z4 <NEXT> if $ z3 == 0 goto label1 <NEXT> label $ z4 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 complex quaternion r0 <NEXT> $ d0 = r1 q1 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 dfp dfp field r0 <NEXT> $ r1 = r2 r mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common math3 dfp dfp field r0 <NEXT> $ r1 = r4 pi split <NEXT> $ r2 = $ r1 clone <NEXT> $ r3 = org apache common math3 dfp dfp [ ] $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 [ 0 ] <NEXT> $ r3 = $ r2 divide 4 <NEXT> $ r4 = r0 [ 1 ] <NEXT> $ r5 = $ r4 divide 4 <NEXT> r19 = $ r3 add $ r5 <NEXT> $ r6 = r0 [ 0 ] <NEXT> $ r7 = $ r6 new instance \ `` -0 25\ `` <NEXT> $ r8 = r19 add $ r7 <NEXT> $ r9 = r0 [ 0 ] <NEXT> $ r10 = $ r9 new instance \ `` 0 25\ `` <NEXT> $ r11 = r19 add $ r10 <NEXT> r1 = $ r8 divide $ r11 <NEXT> $ r12 = new org apache common math3 dfp dfp <NEXT> specialinvoke $ r12 < init > r1 <NEXT> r20 = $ r12 <NEXT> $ r13 = new org apache common math3 dfp dfp <NEXT> specialinvoke $ r13 < init > r1 <NEXT> r21 = $ r13 <NEXT> $ r14 = new org apache common math3 dfp dfp <NEXT> specialinvoke $ r14 < init > $ r12 <NEXT> r22 = $ r14 <NEXT> i0 = 1 <NEXT> i1 = 0 <NEXT> label if i1 > = 10000 goto label3 <NEXT> r23 = r21 multiply r1 <NEXT> r21 = r23 multiply r1 <NEXT> i0 = i0 + 2 <NEXT> r24 = r21 divide i0 <NEXT> r20 = r20 add r24 <NEXT> $ z0 = r20 equal r22 <NEXT> if $ z0 == 0 goto label2 <NEXT> goto label3 <NEXT> label $ r15 = r0 [ 0 ] <NEXT> $ r16 = $ r15 get two <NEXT> r25 = r20 multiply $ r16 <NEXT> $ r17 = org apache common math3 dfp dfp math split r25 <NEXT> return $ r17 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r18 = new org apache common math3 dfp dfp <NEXT> specialinvoke $ r18 < init > r20 <NEXT> r22 = $ r18 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 distribution levy distribution r0 <NEXT> $ d0 = r1 mu <NEXT> return $ d0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r6 = new java util array list <NEXT> specialinvoke $ r6 < init > <NEXT> if r0 == null goto label6 <NEXT> i0 = lengthof r0 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label6 <NEXT> r3 = r0 [ i2 ] <NEXT> $ z0 = r3 instanceof java lang object [ ] <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r8 = java lang object [ ] r3 <NEXT> $ r9 = java lang object [ ] $ r8 <NEXT> r4 = org apache common math3 exception util arg utils flatten $ r9 <NEXT> i1 = lengthof r4 <NEXT> i3 = 0 <NEXT> label if i3 > = i1 goto label3 <NEXT> r5 = r4 [ i3 ] <NEXT> $ r6 add r5 <NEXT> i3 = i3 + 1 <NEXT> goto label2 <NEXT> label if i3 > = i1 goto label3 <NEXT> label goto label5 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ r6 add r3 <NEXT> label if i2 > = i0 goto label6 <NEXT> label $ r7 = $ r6 to array <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache common math3 fit leastsquares levenberg marquardt optimizer <NEXT> specialinvoke r2 < init > <NEXT> r3 = org apache common math3 fit leastsquares least square optimizer r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 fit weight observed point r0 <NEXT> $ r1 = r2 observation <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache common math3 fraction big fraction r1 <NEXT> r4 = org apache common math3 fraction big fraction r0 <NEXT> $ r3 = r4 add $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache common math3 fraction big fraction r1 <NEXT> r4 = org apache common math3 fraction big fraction r0 <NEXT> $ r3 = r4 subtract $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 fraction big fraction r0 <NEXT> $ r1 = r2 negate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 genetics chromosome pair r0 <NEXT> $ r1 = r2 first <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 genetics cycle crossover r0 <NEXT> $ z0 = r1 random start <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 genetics elitistic list population r0 <NEXT> $ d0 = r1 elitism rate <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 genetics fix generation count r0 <NEXT> $ i0 = r1 num generation <NEXT> return $ i0 <END>
<BEG> $ r0 = org apache common math3 genetics genetic algorithm random generator <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 genetics genetic algorithm r0 <NEXT> $ r1 = r2 crossover policy <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 genetics tournament selection r0 <NEXT> $ i0 = r1 arity <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r3 = org apache common math3 geometry enclose enclose ball r0 <NEXT> $ r2 = r3 center <NEXT> $ d1 = r1 distance $ r2 <NEXT> r4 = org apache common math3 geometry enclose enclose ball r0 <NEXT> $ d2 = r4 radius <NEXT> $ d3 = $ d2 + d0 <NEXT> $ b0 = $ d1 cmpg $ d3 <NEXT> if $ b0 > 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b0 > 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r36 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r1 = r36 q0 <NEXT> $ d0 = $ r1 get real <NEXT> $ b0 = $ d0 cmpg -0 1 <NEXT> if $ b0 < 0 goto label1 <NEXT> r37 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r22 = r37 q0 <NEXT> $ d1 = $ r22 get real <NEXT> $ b1 = $ d1 cmpl 0 1 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label r38 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r3 = r38 q1 <NEXT> r39 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r2 = r39 q1 <NEXT> $ r4 = $ r3 multiply $ r2 <NEXT> $ r7 = org apache common math3 real field element $ r4 <NEXT> r40 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r6 = r40 q2 <NEXT> r41 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r5 = r41 q2 <NEXT> $ r8 = $ r6 multiply $ r5 <NEXT> $ r9 = $ r7 add $ r8 <NEXT> $ r12 = org apache common math3 real field element $ r9 <NEXT> r42 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r11 = r42 q3 <NEXT> r43 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r10 = r43 q3 <NEXT> $ r13 = $ r11 multiply $ r10 <NEXT> $ r14 = $ r12 add $ r13 <NEXT> $ r15 = org apache common math3 real field element $ r14 <NEXT> $ r16 = $ r15 sqrt <NEXT> $ r17 = org apache common math3 real field element $ r16 <NEXT> $ r18 = $ r17 asin <NEXT> $ r19 = org apache common math3 real field element $ r18 <NEXT> $ r20 = $ r19 multiply 2 <NEXT> $ r21 = org apache common math3 real field element $ r20 <NEXT> return $ r21 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label r44 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r23 = r44 q0 <NEXT> $ d2 = $ r23 get real <NEXT> $ b2 = $ d2 cmpg 0 0 <NEXT> if $ b2 > = 0 goto label3 <NEXT> r45 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r29 = r45 q0 <NEXT> $ r30 = $ r29 negate <NEXT> $ r31 = org apache common math3 real field element $ r30 <NEXT> $ r32 = $ r31 acos <NEXT> $ r33 = org apache common math3 real field element $ r32 <NEXT> $ r34 = $ r33 multiply 2 <NEXT> $ r35 = org apache common math3 real field element $ r34 <NEXT> return $ r35 <NEXT> if $ b2 > = 0 goto label3 <NEXT> label r46 = org apache common math3 geometry euclidean threed field rotation r0 <NEXT> $ r24 = r46 q0 <NEXT> $ r25 = $ r24 acos <NEXT> $ r26 = org apache common math3 real field element $ r25 <NEXT> $ r27 = $ r26 multiply 2 <NEXT> $ r28 = org apache common math3 real field element $ r27 <NEXT> return $ r28 <END>
<BEG> r0 = @ this <NEXT> r8 = org apache common math3 geometry euclidean threed field vector3 d r0 <NEXT> $ r2 = r8 x <NEXT> $ r3 = $ r2 get field <NEXT> $ r4 = org apache common math3 util math array build array $ r3 3 <NEXT> r1 = org apache common math3 real field element [ ] $ r4 <NEXT> r9 = org apache common math3 geometry euclidean threed field vector3 d r0 <NEXT> $ r5 = r9 x <NEXT> r1 [ 0 ] = $ r5 <NEXT> r10 = org apache common math3 geometry euclidean threed field vector3 d r0 <NEXT> $ r6 = r10 y <NEXT> r1 [ 1 ] = $ r6 <NEXT> r11 = org apache common math3 geometry euclidean threed field vector3 d r0 <NEXT> $ r7 = r11 z <NEXT> r1 [ 2 ] = $ r7 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common math3 geometry euclidean twod vector2 d r1 <NEXT> r7 = new org apache common math3 geometry euclidean threed vector3 d <NEXT> $ d0 = r2 get x <NEXT> r8 = org apache common math3 geometry euclidean threed plane r0 <NEXT> $ r4 = r8 u <NEXT> $ d1 = r2 get y <NEXT> r9 = org apache common math3 geometry euclidean threed plane r0 <NEXT> $ r6 = r9 v <NEXT> r10 = org apache common math3 geometry euclidean threed plane r0 <NEXT> $ d2 = r10 origin offset <NEXT> $ d3 = neg $ d2 <NEXT> r11 = org apache common math3 geometry euclidean threed plane r0 <NEXT> $ r5 = r11 w <NEXT> specialinvoke r7 < init > $ d0 $ r4 $ d1 $ r6 $ d3 $ r5 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 geometry euclidean threed rotation order r0 <NEXT> $ r1 = r2 a2 <NEXT> return $ r1 <END>
<BEG> $ r0 = java util locale get default <NEXT> $ r1 = org apache common math3 geometry euclidean twod vector2 d format get instance $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 geometry partition abstract region r0 <NEXT> $ d0 = r1 tolerance <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common math3 geometry partition abstract region r0 <NEXT> r2 barycenter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 geometry partition boundary attribute r0 <NEXT> $ r1 = r2 plus inside <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 geometry partition characterization r0 <NEXT> $ r1 = r2 inside touch <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r7 = org apache common math3 geometry spherical twod edge r0 <NEXT> $ r2 = r7 circle <NEXT> r8 = org apache common math3 geometry spherical twod edge r0 <NEXT> $ r3 = r8 circle <NEXT> r9 = org apache common math3 geometry spherical twod edge r0 <NEXT> $ r1 = r9 start <NEXT> $ r4 = $ r1 get location <NEXT> $ r5 = $ r4 get vector <NEXT> $ d1 = $ r3 get phase $ r5 <NEXT> $ d2 = d0 + $ d1 <NEXT> $ r6 = $ r2 get point at $ d2 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 geometry spherical twod property computer r0 <NEXT> $ r1 = r2 convex cell inside point <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 geometry spherical twod s2 point r0 <NEXT> $ d0 = r1 theta <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 geometry spherical twod s2 point r0 <NEXT> $ d0 = r1 phi <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 linear abstract field matrix r0 <NEXT> i0 = r2 get row dimension <NEXT> r3 = org apache common math3 linear abstract field matrix r0 <NEXT> i1 = r3 get column dimension <NEXT> $ i2 = 322562 * 31 <NEXT> i13 = $ i2 + i0 <NEXT> $ i3 = i13 * 31 <NEXT> i14 = $ i3 + i1 <NEXT> i15 = 0 <NEXT> label if i15 > = i0 goto label4 <NEXT> i16 = 0 <NEXT> label if i16 > = i1 goto label3 <NEXT> $ i8 = i14 * 31 <NEXT> $ i4 = i15 + 1 <NEXT> $ i7 = 11 * $ i4 <NEXT> $ i5 = i16 + 1 <NEXT> $ i6 = 17 * $ i5 <NEXT> $ i9 = $ i7 + $ i6 <NEXT> r4 = org apache common math3 linear abstract field matrix r0 <NEXT> $ r1 = r4 get entry i15 i16 <NEXT> $ i10 = $ r1 hash code <NEXT> $ i11 = $ i9 * $ i10 <NEXT> i14 = $ i8 + $ i11 <NEXT> i16 = i16 + 1 <NEXT> goto label2 <NEXT> label if i16 > = i1 goto label3 <NEXT> label i15 = i15 + 1 <NEXT> goto label1 <NEXT> label if i15 > = i0 goto label4 <NEXT> label return i14 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 0 goto label1 <NEXT> r7 = org apache common math3 linear abstract field matrix r0 <NEXT> $ i3 = r7 get column dimension <NEXT> if i0 < $ i3 goto label2 <NEXT> label r6 = new org apache common math3 exception out of range exception <NEXT> $ r2 = org apache common math3 exception util localized format column_index <NEXT> $ r3 = java lang integer value of i0 <NEXT> $ r4 = java lang integer value of 0 <NEXT> r8 = org apache common math3 linear abstract field matrix r0 <NEXT> $ i1 = r8 get column dimension <NEXT> $ i2 = $ i1 - 1 <NEXT> $ r5 = java lang integer value of $ i2 <NEXT> r9 = org apache common math3 exception util localizable $ r2 <NEXT> specialinvoke r6 < init > r9 $ r3 $ r4 $ r5 <NEXT> r10 = java lang throwable r6 <NEXT> throw r10 <NEXT> if i0 < $ i3 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i2 = 3542 <NEXT> r3 = org apache common math3 linear array field vector r0 <NEXT> r1 = r3 data <NEXT> i0 = lengthof r1 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label2 <NEXT> r2 = r1 [ i3 ] <NEXT> $ i1 = r2 hash code <NEXT> i2 = i2 ^ $ i1 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label2 <NEXT> label return i2 <END>
<BEG> $ r0 = java text number format get available locale <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 linear open map real vector r0 <NEXT> r1 = r2 copy <NEXT> r1 unitize <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common math3 linear array real vector r0 <NEXT> $ r2 = r4 copy <NEXT> $ r3 = $ r2 map to self r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org apache common math3 linear sparse field vector <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r9 = org apache common math3 linear sparse field vector r1 <NEXT> r12 = org apache common math3 linear sparse field vector r0 <NEXT> $ r10 = r12 add $ r9 <NEXT> return $ r10 <NEXT> if $ z0 == 0 goto label1 <NEXT> label i0 = r1 get dimension <NEXT> r13 = org apache common math3 linear sparse field vector r0 <NEXT> r13 check vector dimension i0 <NEXT> r11 = new org apache common math3 linear sparse field vector <NEXT> r14 = org apache common math3 linear sparse field vector r0 <NEXT> $ r4 = r14 field <NEXT> r15 = org apache common math3 linear sparse field vector r0 <NEXT> $ i1 = r15 get dimension <NEXT> specialinvoke r11 < init > $ r4 $ i1 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label3 <NEXT> $ r5 = r1 get entry i2 <NEXT> r16 = org apache common math3 linear sparse field vector r0 <NEXT> $ r6 = r16 get entry i2 <NEXT> $ r7 = $ r5 add $ r6 <NEXT> $ r8 = org apache common math3 field element $ r7 <NEXT> r11 set entry i2 $ r8 <NEXT> i2 = i2 + 1 <NEXT> goto label2 <NEXT> label if i2 > = i0 goto label3 <NEXT> label r17 = org apache common math3 linear field vector r11 <NEXT> return r17 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 ml neuralnet oned neuron string r0 <NEXT> $ i0 = r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 ode abstract field integrator r0 <NEXT> $ r1 = r2 equation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 ode equation mapper r0 <NEXT> $ i0 = r1 first index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common math3 ode expandable stateful o d e r0 <NEXT> $ r1 = r4 primary state dot <NEXT> $ r2 = $ r1 clone <NEXT> $ r3 = double [ ] $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 0 goto label1 <NEXT> r7 = org apache common math3 ode field o d e state and derivative r0 <NEXT> $ r4 = r7 derivative <NEXT> $ r5 = $ r4 clone <NEXT> $ r6 = org apache common math3 real field element [ ] $ r5 <NEXT> goto label2 <NEXT> label return $ r6 <NEXT> if i0 ! = 0 goto label1 <NEXT> label r8 = org apache common math3 ode field o d e state and derivative r0 <NEXT> $ r1 = r8 secondary derivative <NEXT> $ i1 = i0 - 1 <NEXT> $ r2 = $ r1 [ $ i1 ] <NEXT> $ r3 = $ r2 clone <NEXT> $ r6 = org apache common math3 real field element [ ] $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d8 = 0 0 <NEXT> r5 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0 <NEXT> $ i0 = r5 current degree <NEXT> if $ i0 < 5 goto label3 <NEXT> i6 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i6 > = $ i1 goto label2 <NEXT> r6 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0 <NEXT> $ r3 = r6 polynomial <NEXT> r7 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0 <NEXT> $ i5 = r7 current degree <NEXT> $ r4 = $ r3 [ $ i5 ] <NEXT> $ d6 = $ r4 [ i6 ] <NEXT> $ d5 = r1 [ i6 ] <NEXT> d0 = $ d6 $ d5 <NEXT> $ d7 = d0 * d0 <NEXT> d8 = d8 + $ d7 <NEXT> i6 = i6 + 1 <NEXT> goto label1 <NEXT> if i6 > = $ i1 goto label2 <NEXT> label $ i2 = lengthof r1 <NEXT> $ d1 = double $ i2 <NEXT> $ d2 = d8 $ d1 <NEXT> $ d3 = org apache common math3 util fast math sqrt $ d2 <NEXT> r8 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0 <NEXT> $ r2 = r8 errfac <NEXT> r9 = org apache common math3 ode nonstiff gragg bulirsch stoer step interpolator r0 <NEXT> $ i3 = r9 current degree <NEXT> $ i4 = $ i3 - 5 <NEXT> $ d4 = $ r2 [ $ i4 ] <NEXT> d8 = $ d3 * $ d4 <NEXT> label return d8 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache common math3 ode parameter configuration r0 <NEXT> r1 h p = d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 optim linear linear constraint r0 <NEXT> $ r1 = r2 relationship <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache common math3 optim linear simplex tableau r0 <NEXT> $ r1 = r2 basic row <NEXT> $ i1 = $ r1 [ i0 ] <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 optim nonlinear vector jacobian abstract least square optimizer r0 <NEXT> $ d1 = r1 cost <NEXT> r2 = org apache common math3 optim nonlinear vector jacobian abstract least square optimizer r0 <NEXT> $ d0 = r2 cost <NEXT> $ d2 = $ d1 * $ d0 <NEXT> return $ d2 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache common math3 optim nonlinear vector jacobian abstract least square optimizer r0 <NEXT> r1 cost = d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common math3 optim nonlinear vector multivariate vector optimizer r0 <NEXT> $ r1 = r4 target <NEXT> $ r2 = $ r1 clone <NEXT> $ r3 = double [ ] $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 optim univariate search interval r0 <NEXT> $ d0 = r1 upper <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 optim univariate search interval r0 <NEXT> $ d0 = r1 start <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 optimization general abstract least square optimizer r0 <NEXT> $ d0 = r1 get chi square <NEXT> r2 = org apache common math3 optimization general abstract least square optimizer r0 <NEXT> $ i0 = r2 row <NEXT> $ d1 = double $ i0 <NEXT> $ d2 = $ d0 $ d1 <NEXT> $ d3 = org apache common math3 util fast math sqrt $ d2 <NEXT> return $ d3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 optimization general abstract least square optimizer r0 <NEXT> $ r1 = r2 get covariance 1 0e-14 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 random abstract random generator r0 <NEXT> r1 cache normal deviate = #na n <NEXT> return <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> $ d3 = org apache common math3 special beta regularize beta d0 d1 d2 1 0e-14 2147483647 <NEXT> return $ d3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 stat cluster euclidean double point r0 <NEXT> $ r1 = r2 point <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 stat correlation kendall correlation r0 <NEXT> $ r1 = r2 correlation matrix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache common math3 linear block real matrix <NEXT> specialinvoke r4 < init > r1 <NEXT> r5 = org apache common math3 stat correlation kendall correlation r0 <NEXT> r6 = org apache common math3 linear real matrix r4 <NEXT> $ r3 = r5 compute correlation matrix r6 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 stat descriptive descriptive statistic r0 <NEXT> $ r1 = r2 sumsq impl <NEXT> r3 = org apache common math3 stat descriptive descriptive statistic r0 <NEXT> $ d0 = r3 apply $ r1 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 stat descriptive descriptive statistic r0 <NEXT> $ r1 = r2 min impl <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common math3 stat descriptive descriptive statistic r0 <NEXT> r2 min impl = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ i0 = lengthof r1 <NEXT> r3 = org apache common math3 stat descriptive moment mean r0 <NEXT> $ d0 = r3 evaluate r1 r2 0 $ i0 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 stat descriptive moment semi variance r0 <NEXT> $ z0 = r1 bias correct <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r3 = org apache common math3 stat descriptive moment standard deviation r0 <NEXT> $ r2 = r3 variance <NEXT> $ d1 = $ r2 evaluate r1 d0 <NEXT> $ d2 = org apache common math3 util fast math sqrt $ d1 <NEXT> return $ d2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org apache common math3 stat descriptive moment semi variance r0 <NEXT> $ z0 = r3 bias correct <NEXT> $ i0 = lengthof r1 <NEXT> r4 = org apache common math3 stat descriptive moment semi variance r0 <NEXT> $ d1 = r4 evaluate r1 d0 r2 $ z0 0 $ i0 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i1 = lengthof r1 <NEXT> r8 = org apache common math3 stat descriptive moment vectorial covariance r0 <NEXT> $ r2 = r8 sum <NEXT> $ i0 = lengthof $ r2 <NEXT> if $ i1 == $ i0 goto label1 <NEXT> r7 = new org apache common math3 exception dimension mismatch exception <NEXT> $ i7 = lengthof r1 <NEXT> r9 = org apache common math3 stat descriptive moment vectorial covariance r0 <NEXT> $ r6 = r9 sum <NEXT> $ i6 = lengthof $ r6 <NEXT> specialinvoke r7 < init > $ i7 $ i6 <NEXT> r10 = java lang throwable r7 <NEXT> throw r10 <NEXT> if $ i1 == $ i0 goto label1 <NEXT> label i8 = 0 <NEXT> i9 = 0 <NEXT> label $ i2 = lengthof r1 <NEXT> if i9 > = $ i2 goto label5 <NEXT> r11 = org apache common math3 stat descriptive moment vectorial covariance r0 <NEXT> $ r3 = r11 sum <NEXT> $ d1 = $ r3 [ i9 ] <NEXT> $ d0 = r1 [ i9 ] <NEXT> $ d2 = $ d1 + $ d0 <NEXT> $ r3 [ i9 ] = $ d2 <NEXT> i10 = 0 <NEXT> label if i10 > i9 goto label4 <NEXT> r12 = org apache common math3 stat descriptive moment vectorial covariance r0 <NEXT> $ r4 = r12 product sum <NEXT> $ i5 = i8 <NEXT> i8 = i8 + 1 <NEXT> $ d6 = $ r4 [ $ i5 ] <NEXT> $ d4 = r1 [ i9 ] <NEXT> $ d3 = r1 [ i10 ] <NEXT> $ d5 = $ d4 * $ d3 <NEXT> $ d7 = $ d6 + $ d5 <NEXT> $ r4 [ $ i5 ] = $ d7 <NEXT> i10 = i10 + 1 <NEXT> goto label3 <NEXT> label if i10 > i9 goto label4 <NEXT> label i9 = i9 + 1 <NEXT> goto label2 <NEXT> if i9 > = $ i2 goto label5 <NEXT> label r13 = org apache common math3 stat descriptive moment vectorial covariance r0 <NEXT> $ l3 = r13 n <NEXT> $ l4 = $ l3 + 1l <NEXT> r14 = org apache common math3 stat descriptive moment vectorial covariance r0 <NEXT> r14 n = $ l4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 stat descriptive rank p square percentile r0 <NEXT> $ d0 = r1 quantile <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache common math3 stat descriptive aggregate summary statistic r0 <NEXT> $ r3 = r6 statistic <NEXT> entermonitor $ r3 <NEXT> label r7 = org apache common math3 stat descriptive aggregate summary statistic r0 <NEXT> $ r4 = r7 statistic <NEXT> $ d0 = $ r4 get standard deviation <NEXT> exitmonitor $ r3 <NEXT> label return $ d0 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache common math3 stat descriptive aggregate summary statistic r0 <NEXT> $ r3 = r6 statistic <NEXT> entermonitor $ r3 <NEXT> label r7 = org apache common math3 stat descriptive aggregate summary statistic r0 <NEXT> $ r4 = r7 statistic <NEXT> $ d0 = $ r4 get min <NEXT> exitmonitor $ r3 <NEXT> label return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = java text number format get percent instance <NEXT> r21 = new java lang string builder <NEXT> specialinvoke r21 < init > <NEXT> r21 append \ `` value \t freq \t pct \t cum pct \n\ `` <NEXT> r22 = org apache common math3 stat frequency r0 <NEXT> $ r7 = r22 freq table <NEXT> $ r8 = $ r7 key set <NEXT> r3 = $ r8 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r10 = r3 next <NEXT> r4 = java lang comparable $ r10 <NEXT> r21 append r4 <NEXT> r21 append 9 <NEXT> r23 = org apache common math3 stat frequency r0 <NEXT> $ l0 = r23 get count r4 <NEXT> r21 append $ l0 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r9 = r21 to string <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 stat frequency r0 <NEXT> $ r1 = r2 freq table <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> d0 = @ parameter2 <NEXT> $ b0 = d0 cmpg 0 0 <NEXT> if $ b0 < = 0 goto label1 <NEXT> $ b1 = d0 cmpl 0 5 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label r8 = new org apache common math3 exception out of range exception <NEXT> $ r4 = org apache common math3 exception util localized format out_of_bound_significance_level <NEXT> $ r5 = java lang double value of d0 <NEXT> $ r6 = java lang integer value of 0 <NEXT> $ r7 = java lang double value of 0 5 <NEXT> r9 = org apache common math3 exception util localizable $ r4 <NEXT> specialinvoke r8 < init > r9 $ r5 $ r6 $ r7 <NEXT> r10 = java lang throwable r8 <NEXT> throw r10 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label r11 = org apache common math3 stat inference kolmogorov smirnov test r0 <NEXT> $ d1 = r11 kolmogorov smirnov test r1 r2 <NEXT> $ b2 = $ d1 cmpg d0 <NEXT> if $ b2 > = 0 goto label3 <NEXT> $ z0 = 1 <NEXT> goto label4 <NEXT> label return $ z0 <NEXT> if $ b2 > = 0 goto label3 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> i1 = lengthof r1 <NEXT> i2 = lengthof r2 <NEXT> $ i5 = i1 + i2 <NEXT> r3 = newarray double [ $ i5 ] <NEXT> java lang system arraycopy r1 0 r3 0 i1 <NEXT> java lang system arraycopy r2 0 r3 i1 i2 <NEXT> r9 = new org apache common math3 distribution enumerate real distribution <NEXT> r10 = org apache common math3 stat inference kolmogorov smirnov test r0 <NEXT> $ r8 = r10 rng <NEXT> specialinvoke r9 < init > $ r8 r3 <NEXT> r11 = org apache common math3 stat inference kolmogorov smirnov test r0 <NEXT> l3 = specialinvoke r11 integral kolmogorov smirnov statistic r1 r2 <NEXT> i9 = 0 <NEXT> i10 = 0 <NEXT> i11 = 0 <NEXT> label if i11 > = i0 goto label4 <NEXT> r5 = r9 sample i1 <NEXT> r6 = r9 sample i2 <NEXT> r12 = org apache common math3 stat inference kolmogorov smirnov test r0 <NEXT> l4 = specialinvoke r12 integral kolmogorov smirnov statistic r5 r6 <NEXT> $ b7 = l4 cmp l3 <NEXT> if $ b7 < = 0 goto label2 <NEXT> i9 = i9 + 1 <NEXT> goto label3 <NEXT> label i11 = i11 + 1 <NEXT> goto label1 <NEXT> if $ b7 < = 0 goto label2 <NEXT> label $ b8 = l4 cmp l3 <NEXT> if $ b8 ! = 0 goto label3 <NEXT> i10 = i10 + 1 <NEXT> label if i11 > = i0 goto label4 <NEXT> label if z0 == 0 goto label5 <NEXT> $ d3 = double i9 <NEXT> $ d2 = double i0 <NEXT> $ d4 = $ d3 $ d2 <NEXT> goto label6 <NEXT> label return $ d4 <NEXT> label if z0 == 0 goto label5 <NEXT> label $ i6 = i9 + i10 <NEXT> $ d1 = double $ i6 <NEXT> $ d0 = double i0 <NEXT> $ d4 = $ d1 $ d0 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> d0 = @ parameter2 <NEXT> $ r0 = org apache common math3 stat interval interval utils wilson_score <NEXT> $ r1 = $ r0 create interval i0 i1 d0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r5 = new org apache common math3 exception null argument exception <NEXT> specialinvoke r5 < init > <NEXT> r8 = java lang throwable r5 <NEXT> throw r8 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i0 = lengthof r1 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> r6 = new org apache common math3 exception no data exception <NEXT> specialinvoke r6 < init > <NEXT> r9 = java lang throwable r6 <NEXT> throw r9 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label r7 = new org apache common math3 linear array real vector <NEXT> specialinvoke r7 < init > r1 <NEXT> r10 = org apache common math3 stat regression abstract multiple linear regression r0 <NEXT> r11 = org apache common math3 linear real vector r7 <NEXT> r10 y vector = r11 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = new org apache common math3 stat descriptive moment variance <NEXT> specialinvoke r4 < init > <NEXT> r5 = org apache common math3 stat regression abstract multiple linear regression r0 <NEXT> $ r2 = r5 y vector <NEXT> $ r3 = $ r2 to array <NEXT> $ d0 = r4 evaluate $ r3 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 stat regression o l s multiple linear regression r0 <NEXT> $ d0 = r1 calculate residual sum of square <NEXT> r2 = org apache common math3 stat regression o l s multiple linear regression r0 <NEXT> $ d1 = r2 calculate total sum of square <NEXT> $ d2 = $ d0 $ d1 <NEXT> $ d3 = 1 0 - $ d2 <NEXT> return $ d3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 stat regression regression result r0 <NEXT> $ l0 = r1 nobs <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r4 = org apache common math3 stat regression simple regression r0 <NEXT> $ l0 = r4 n <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 ! = 0 goto label1 <NEXT> r5 = org apache common math3 stat regression simple regression r0 <NEXT> r5 xbar = d0 <NEXT> r6 = org apache common math3 stat regression simple regression r0 <NEXT> r6 ybar = d1 <NEXT> goto label2 <NEXT> label r23 = org apache common math3 stat regression simple regression r0 <NEXT> $ z1 = r23 have intercept <NEXT> if $ z1 ! = 0 goto label3 <NEXT> r24 = org apache common math3 stat regression simple regression r0 <NEXT> $ d11 = r24 sum x x <NEXT> $ d10 = d0 * d0 <NEXT> $ d12 = $ d11 + $ d10 <NEXT> r25 = org apache common math3 stat regression simple regression r0 <NEXT> r25 sum x x = $ d12 <NEXT> r26 = org apache common math3 stat regression simple regression r0 <NEXT> $ d14 = r26 sum y y <NEXT> $ d13 = d1 * d1 <NEXT> $ d15 = $ d14 + $ d13 <NEXT> r27 = org apache common math3 stat regression simple regression r0 <NEXT> r27 sum y y = $ d15 <NEXT> r28 = org apache common math3 stat regression simple regression r0 <NEXT> $ d17 = r28 sum x y <NEXT> $ d16 = d0 * d1 <NEXT> $ d18 = $ d17 + $ d16 <NEXT> r29 = org apache common math3 stat regression simple regression r0 <NEXT> r29 sum x y = $ d18 <NEXT> label r30 = org apache common math3 stat regression simple regression r0 <NEXT> $ d6 = r30 sum x <NEXT> $ d7 = $ d6 + d0 <NEXT> r31 = org apache common math3 stat regression simple regression r0 <NEXT> r31 sum x = $ d7 <NEXT> r32 = org apache common math3 stat regression simple regression r0 <NEXT> $ d8 = r32 sum y <NEXT> $ d9 = $ d8 + d1 <NEXT> r33 = org apache common math3 stat regression simple regression r0 <NEXT> r33 sum y = $ d9 <NEXT> r34 = org apache common math3 stat regression simple regression r0 <NEXT> $ l2 = r34 n <NEXT> $ l3 = $ l2 + 1l <NEXT> r35 = org apache common math3 stat regression simple regression r0 <NEXT> r35 n = $ l3 <NEXT> return <NEXT> if $ b1 ! = 0 goto label1 <NEXT> label r7 = org apache common math3 stat regression simple regression r0 <NEXT> $ z0 = r7 have intercept <NEXT> if $ z0 == 0 goto label2 <NEXT> r8 = org apache common math3 stat regression simple regression r0 <NEXT> $ l4 = r8 n <NEXT> $ d19 = double $ l4 <NEXT> d2 = 1 0 + $ d19 <NEXT> r9 = org apache common math3 stat regression simple regression r0 <NEXT> $ l5 = r9 n <NEXT> $ d22 = double $ l5 <NEXT> r10 = org apache common math3 stat regression simple regression r0 <NEXT> $ l6 = r10 n <NEXT> $ d20 = double $ l6 <NEXT> $ d21 = 1 0 + $ d20 <NEXT> d3 = $ d22 $ d21 <NEXT> r11 = org apache common math3 stat regression simple regression r0 <NEXT> $ d23 = r11 xbar <NEXT> d4 = d0 - $ d23 <NEXT> r12 = org apache common math3 stat regression simple regression r0 <NEXT> $ d24 = r12 ybar <NEXT> d5 = d1 - $ d24 <NEXT> r13 = org apache common math3 stat regression simple regression r0 <NEXT> $ d27 = r13 sum x x <NEXT> $ d25 = d4 * d4 <NEXT> $ d26 = $ d25 * d3 <NEXT> $ d28 = $ d27 + $ d26 <NEXT> r14 = org apache common math3 stat regression simple regression r0 <NEXT> r14 sum x x = $ d28 <NEXT> r15 = org apache common math3 stat regression simple regression r0 <NEXT> $ d31 = r15 sum y y <NEXT> $ d29 = d5 * d5 <NEXT> $ d30 = $ d29 * d3 <NEXT> $ d32 = $ d31 + $ d30 <NEXT> r16 = org apache common math3 stat regression simple regression r0 <NEXT> r16 sum y y = $ d32 <NEXT> r17 = org apache common math3 stat regression simple regression r0 <NEXT> $ d35 = r17 sum x y <NEXT> $ d33 = d4 * d5 <NEXT> $ d34 = $ d33 * d3 <NEXT> $ d36 = $ d35 + $ d34 <NEXT> r18 = org apache common math3 stat regression simple regression r0 <NEXT> r18 sum x y = $ d36 <NEXT> r19 = org apache common math3 stat regression simple regression r0 <NEXT> $ d38 = r19 xbar <NEXT> $ d37 = d4 d2 <NEXT> $ d39 = $ d38 + $ d37 <NEXT> r20 = org apache common math3 stat regression simple regression r0 <NEXT> r20 xbar = $ d39 <NEXT> r21 = org apache common math3 stat regression simple regression r0 <NEXT> $ d41 = r21 ybar <NEXT> $ d40 = d5 d2 <NEXT> $ d42 = $ d41 + $ d40 <NEXT> r22 = org apache common math3 stat regression simple regression r0 <NEXT> r22 ybar = $ d42 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math3 stat regression simple regression r0 <NEXT> $ z0 = r1 have intercept <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org apache common math3 stat regression simple regression r0 <NEXT> $ d0 = r2 get slope <NEXT> r3 = org apache common math3 stat regression simple regression r0 <NEXT> $ d1 = specialinvoke r3 get intercept $ d0 <NEXT> goto label2 <NEXT> label return $ d1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ d1 = 0 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common math3 stat stat utils sum_of_squares <NEXT> $ d0 = $ r1 evaluate r0 <NEXT> return $ d0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ r1 = org apache common math3 stat stat utils mean <NEXT> $ d0 = $ r1 evaluate r0 i0 i1 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache common math3 util continued fraction r0 <NEXT> $ d1 = r1 evaluate d0 1 0e-8 2147483647 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common math3 util multidimensional counter r0 <NEXT> $ r1 = r3 size <NEXT> $ r2 = org apache common math3 util math array copy of $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math3 util pair r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r0 ! = r1 goto label1 <NEXT> return 1 <NEXT> if r0 ! = r1 goto label1 <NEXT> label $ z0 = r1 instanceof org apache common math3 util pair <NEXT> if $ z0 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r2 = org apache common math3 util pair r1 <NEXT> r11 = org apache common math3 util pair r0 <NEXT> $ r3 = r11 key <NEXT> if $ r3 ! = null goto label3 <NEXT> $ r10 = r2 key <NEXT> if $ r10 ! = null goto label7 <NEXT> goto label4 <NEXT> label r13 = org apache common math3 util pair r0 <NEXT> $ r6 = r13 value <NEXT> if $ r6 ! = null goto label5 <NEXT> $ r9 = r2 value <NEXT> if $ r9 ! = null goto label7 <NEXT> goto label6 <NEXT> label $ z3 = 1 <NEXT> goto label8 <NEXT> label return $ z3 <NEXT> if $ r9 ! = null goto label7 <NEXT> label $ z3 = 0 <NEXT> if $ r6 ! = null goto label5 <NEXT> label r14 = org apache common math3 util pair r0 <NEXT> $ r8 = r14 value <NEXT> $ r7 = r2 value <NEXT> $ z2 = $ r8 equal $ r7 <NEXT> if $ z2 == 0 goto label7 <NEXT> if $ r3 ! = null goto label3 <NEXT> label r12 = org apache common math3 util pair r0 <NEXT> $ r5 = r12 key <NEXT> $ r4 = r2 key <NEXT> $ z1 = $ r5 equal $ r4 <NEXT> if $ z1 == 0 goto label7 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> $ z0 = org apache common math3 util precision equal d0 d1 1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ d3 = d1 - d0 <NEXT> $ d4 = org apache common math3 util fast math ab $ d3 <NEXT> $ b0 = $ d4 cmpg d2 <NEXT> if $ b0 > 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ b0 > 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common math3 util transformer map r0 <NEXT> $ r1 = r3 map <NEXT> $ r2 = $ r1 value <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common text lookup system property string lookup instance <NEXT> r2 = org apache common text lookup string lookup $ r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache common text similarity levenshtein detail distance r0 <NEXT> $ r3 = r4 apply r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common text string tokenizer r0 <NEXT> $ z0 = r1 ignore empty token <NEXT> return $ z0 <END>
<BEG> c0 = @ parameter0 <NEXT> r1 = new org apache common text str matcher $ char matcher <NEXT> specialinvoke r1 < init > c0 <NEXT> r2 = org apache common text str matcher r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache common text text string builder r0 <NEXT> $ r1 = r3 append z0 <NEXT> $ r2 = $ r1 append new line <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache common text text string builder r0 <NEXT> $ r1 = r3 append z0 <NEXT> $ r2 = $ r1 append new line <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r2 = org apache common text text string builder r0 <NEXT> $ i1 = r2 size <NEXT> if $ i1 < = 0 goto label1 <NEXT> r3 = org apache common text text string builder r0 <NEXT> r3 append c0 <NEXT> label r4 = org apache common text text string builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common text lookup default string lookup r0 <NEXT> $ r1 = r2 key <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common text similarity intersection result r0 <NEXT> $ i0 = r1 size b <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common text text string builder r0 <NEXT> i0 = r3 length <NEXT> if r1 == null goto label1 <NEXT> $ i1 = lengthof r1 <NEXT> if $ i1 > = i0 goto label2 <NEXT> label r1 = newarray char [ i0 ] <NEXT> label r4 = org apache common text text string builder r0 <NEXT> $ r2 = r4 buffer <NEXT> java lang system arraycopy $ r2 0 r1 0 i0 <NEXT> return r1 <END>
<BEG> $ r0 = org apache common validator date validator date_validator <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r5 = org apache common validator email validator ip_domain_pattern <NEXT> r2 = $ r5 matcher r1 <NEXT> i1 = 1 <NEXT> label if i1 > 4 goto label8 <NEXT> r3 = r2 group i1 <NEXT> if r3 == null goto label2 <NEXT> $ i0 = r3 length <NEXT> if $ i0 > 0 goto label3 <NEXT> label return 0 <NEXT> if $ i0 > 0 goto label3 <NEXT> label i2 = java lang integer parse int r3 <NEXT> label goto label6 <NEXT> label if i2 < = 255 goto label7 <NEXT> return 0 <NEXT> label if i2 < = 255 goto label7 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > 4 goto label8 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r32 = org apache common validator field r0 <NEXT> $ r2 = r32 get indexed list property <NEXT> r23 = org apache common beanutils property utils get property r1 $ r2 <NEXT> label goto label6 <NEXT> label $ z0 = r23 instanceof java util collection <NEXT> if $ z0 == 0 goto label7 <NEXT> $ r12 = java util collection r23 <NEXT> $ r13 = $ r12 to array <NEXT> return $ r13 <NEXT> if $ z0 == 0 goto label7 <NEXT> label $ r3 = r23 get class <NEXT> $ z1 = $ r3 be array <NEXT> if $ z1 == 0 goto label8 <NEXT> $ r10 = java lang object [ ] r23 <NEXT> $ r11 = java lang object [ ] $ r10 <NEXT> return $ r11 <NEXT> if $ z1 == 0 goto label8 <NEXT> label r31 = new org apache common validator validator exception <NEXT> r30 = new java lang string buffer <NEXT> specialinvoke r30 < init > <NEXT> r36 = org apache common validator field r0 <NEXT> $ r6 = r36 get key <NEXT> $ r7 = r30 append $ r6 <NEXT> $ r8 = $ r7 append \ `` be not indexed\ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r31 < init > $ r9 <NEXT> r37 = java lang throwable r31 <NEXT> throw r37 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common validator field r0 <NEXT> $ r1 = r2 depend <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common validator field r0 <NEXT> $ r1 = r3 dependency list <NEXT> $ r2 = java util collection unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r32 = org apache common validator field r0 <NEXT> $ r2 = r32 get indexed list property <NEXT> r23 = org apache common beanutils property utils get property r1 $ r2 <NEXT> label goto label6 <NEXT> label $ z0 = r23 instanceof java util collection <NEXT> if $ z0 == 0 goto label7 <NEXT> $ r12 = java util collection r23 <NEXT> $ r13 = $ r12 to array <NEXT> return $ r13 <NEXT> if $ z0 == 0 goto label7 <NEXT> label $ r3 = r23 get class <NEXT> $ z1 = $ r3 be array <NEXT> if $ z1 == 0 goto label8 <NEXT> $ r10 = java lang object [ ] r23 <NEXT> $ r11 = java lang object [ ] $ r10 <NEXT> return $ r11 <NEXT> if $ z1 == 0 goto label8 <NEXT> label r31 = new org apache common validator validator exception <NEXT> r30 = new java lang string buffer <NEXT> specialinvoke r30 < init > <NEXT> r36 = org apache common validator field r0 <NEXT> $ r6 = r36 get key <NEXT> $ r7 = r30 append $ r6 <NEXT> $ r8 = $ r7 append \ `` be not indexed\ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r31 < init > $ r9 <NEXT> r37 = java lang throwable r31 <NEXT> throw r37 <END>
<BEG> r0 = @ this <NEXT> r11 = org apache common validator form set r0 <NEXT> $ r1 = r11 get variant <NEXT> if $ r1 == null goto label3 <NEXT> r12 = org apache common validator form set r0 <NEXT> $ r6 = r12 get language <NEXT> if $ r6 == null goto label1 <NEXT> r13 = org apache common validator form set r0 <NEXT> $ r8 = r13 get country <NEXT> if $ r8 ! = null goto label2 <NEXT> label r9 = new java lang null pointer exception <NEXT> specialinvoke r9 < init > \ `` when variant be specify country and language must be specify \ `` <NEXT> throw r9 <NEXT> if $ r8 ! = null goto label2 <NEXT> label return 4 <NEXT> if $ r1 == null goto label3 <NEXT> label r14 = org apache common validator form set r0 <NEXT> $ r2 = r14 get country <NEXT> if $ r2 == null goto label5 <NEXT> r15 = org apache common validator form set r0 <NEXT> $ r4 = r15 get language <NEXT> if $ r4 ! = null goto label4 <NEXT> r10 = new java lang null pointer exception <NEXT> specialinvoke r10 < init > \ `` when country be specify language must be specify \ `` <NEXT> throw r10 <NEXT> if $ r4 ! = null goto label4 <NEXT> label return 3 <NEXT> if $ r2 == null goto label5 <NEXT> label r16 = org apache common validator form set r0 <NEXT> $ r3 = r16 get language <NEXT> if $ r3 == null goto label6 <NEXT> return 2 <NEXT> if $ r3 == null goto label6 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common validator generic validator url_validator <NEXT> $ z0 = $ r1 be valid r0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache common validator routine i s b n validator get instance <NEXT> $ z0 = $ r2 be valid i s b n10 r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = java util time zone null <NEXT> r6 = org apache common validator routine abstract calendar validator r0 <NEXT> $ r5 = r6 format r1 r2 r3 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = new java text parse position <NEXT> specialinvoke r6 < init > 0 <NEXT> r5 = r2 parse object r1 r6 <NEXT> $ i0 = r6 get error index <NEXT> if $ i0 < = -1 goto label1 <NEXT> return null <NEXT> if $ i0 < = -1 goto label1 <NEXT> label r7 = org apache common validator routine abstract format validator r0 <NEXT> $ z0 = r7 be strict <NEXT> if $ z0 == 0 goto label2 <NEXT> $ i1 = r6 get index <NEXT> $ i2 = r1 length <NEXT> if $ i1 > = $ i2 goto label2 <NEXT> label if r5 == null goto label3 <NEXT> r8 = org apache common validator routine abstract format validator r0 <NEXT> r5 = r8 process parse value r5 r2 <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java util locale null <NEXT> r6 = org apache common validator routine big integer validator r0 <NEXT> $ r4 = r6 parse r1 r2 $ r3 <NEXT> $ r5 = java math big integer $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = java util time zone null <NEXT> r7 = org apache common validator routine calendar validator r0 <NEXT> $ r5 = r7 parse r1 r2 r3 $ r4 <NEXT> $ r6 = java util calendar $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r7 = org apache common validator routine calendar validator r0 <NEXT> $ r5 = r7 parse r1 r2 r3 r4 <NEXT> $ r6 = java util calendar $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i2 = r1 length <NEXT> if $ i2 > = 5 goto label4 <NEXT> label r13 = new org apache common validator routine checkdigit check digit exception <NEXT> r12 = new java lang string buffer <NEXT> specialinvoke r12 < init > <NEXT> $ r5 = r12 append \ `` invalid code length=\ `` <NEXT> if r1 ! = null goto label2 <NEXT> $ i3 = 0 <NEXT> goto label3 <NEXT> label $ r6 = $ r5 append $ i3 <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke r13 < init > $ r7 <NEXT> r15 = java lang throwable r13 <NEXT> throw r15 <NEXT> if r1 ! = null goto label2 <NEXT> label $ i3 = r1 length <NEXT> if $ i2 > = 5 goto label4 <NEXT> label r16 = org apache common validator routines checkdigit i b a n check digit r0 <NEXT> i0 = specialinvoke r16 calculate modulus r1 <NEXT> i1 = 98 - i0 <NEXT> r2 = java lang integer to string i1 <NEXT> if i1 < = 9 goto label5 <NEXT> $ r11 = r2 <NEXT> goto label6 <NEXT> label return $ r11 <NEXT> if i1 < = 9 goto label5 <NEXT> label r14 = new java lang string buffer <NEXT> specialinvoke r14 < init > <NEXT> $ r9 = r14 append \ `` 0\ `` <NEXT> $ r10 = $ r9 append r2 <NEXT> $ r11 = $ r10 to string <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 0 goto label1 <NEXT> if i0 > 9 goto label1 <NEXT> $ r6 = java lang integer to string i0 <NEXT> return $ r6 <NEXT> if i0 > 9 goto label1 <NEXT> label r8 = new org apache common validator routine checkdigit check digit exception <NEXT> r7 = new java lang string buffer <NEXT> specialinvoke r7 < init > <NEXT> $ r3 = r7 append \ `` invalid check digit value =\ `` <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke r8 < init > $ r5 <NEXT> r9 = java lang throwable r8 <NEXT> throw r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 < = 7 goto label1 <NEXT> r8 = new org apache common validator routine checkdigit check digit exception <NEXT> r7 = new java lang string buffer <NEXT> specialinvoke r7 < init > <NEXT> $ r4 = r7 append \ `` invalid code length = \ `` <NEXT> $ i2 = r1 length <NEXT> $ r5 = $ r4 append $ i2 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke r8 < init > $ r6 <NEXT> r9 = java lang throwable r8 <NEXT> throw r9 <NEXT> if $ i0 < = 7 goto label1 <NEXT> label $ i1 = specialinvoke r0 calculate modulus r1 z0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = java util time zone null <NEXT> r7 = org apache common validator routine date validator r0 <NEXT> $ r5 = r7 parse r1 r2 r3 $ r4 <NEXT> $ r6 = java util date $ r5 <NEXT> return $ r6 <END>
<BEG> $ r0 = org apache common validator routine domain validator domain_validator <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache common validator routine domain validator infrastructure_tld_list <NEXT> $ r3 = r1 to lower case <NEXT> r5 = org apache common validator routine domain validator r0 <NEXT> $ r4 = specialinvoke r5 chomp lead dot $ r3 <NEXT> $ z0 = $ r2 contain $ r4 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache common validator routine domain validator local_tld_list <NEXT> $ r3 = r1 to lower case <NEXT> r5 = org apache common validator routine domain validator r0 <NEXT> $ r4 = specialinvoke r5 chomp lead dot $ r3 <NEXT> $ z0 = $ r2 contain $ r4 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java util locale null <NEXT> r6 = org apache common validator routine float validator r0 <NEXT> $ r4 = r6 parse r1 r2 $ r3 <NEXT> $ r5 = java lang float $ r4 <NEXT> return $ r5 <END>
<BEG> $ r0 = org apache common validator routine inet address validator validator <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = java util locale null <NEXT> $ r3 = java util time zone null <NEXT> r7 = org apache common validator routine time validator r0 <NEXT> $ r5 = r7 parse r1 r2 $ r4 $ r3 <NEXT> $ r6 = java util calendar $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common validator validator r0 <NEXT> $ r2 = r4 parameter <NEXT> $ r3 = $ r2 get r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common validator validator action r0 <NEXT> r2 msg = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r17 = org apache common validator validator action r0 <NEXT> $ z0 = specialinvoke r17 javascript already load <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r18 = org apache common validator validator action r0 <NEXT> $ r2 = specialinvoke r18 get log <NEXT> $ z1 = $ r2 be trace enabled <NEXT> if $ z1 == 0 goto label2 <NEXT> r19 = org apache common validator validator action r0 <NEXT> $ r15 = specialinvoke r19 get log <NEXT> $ r15 trace \ `` load function begun\ `` <NEXT> label r20 = org apache common validator validator action r0 <NEXT> $ r3 = r20 j function <NEXT> if $ r3 ! = null goto label3 <NEXT> r21 = org apache common validator validator action r0 <NEXT> $ r14 = specialinvoke r21 generate j function <NEXT> r22 = org apache common validator validator action r0 <NEXT> r22 j function = $ r14 <NEXT> label r23 = org apache common validator validator action r0 <NEXT> r1 = specialinvoke r23 format javascript file name <NEXT> r24 = org apache common validator validator action r0 <NEXT> $ r4 = specialinvoke r24 get log <NEXT> $ z2 = $ r4 be trace enabled <NEXT> if $ z2 == 0 goto label4 <NEXT> r25 = org apache common validator validator action r0 <NEXT> $ r8 = specialinvoke r25 get log <NEXT> r16 = new java lang string buffer <NEXT> specialinvoke r16 < init > <NEXT> $ r10 = r16 append \ `` load j function \'\ `` <NEXT> $ r11 = $ r10 append r1 <NEXT> $ r12 = $ r11 append \ `` \'\ `` <NEXT> $ r13 = $ r12 to string <NEXT> $ r8 trace $ r13 <NEXT> label r26 = org apache common validator validator action r0 <NEXT> $ r5 = specialinvoke r26 read javascript file r1 <NEXT> r27 = org apache common validator validator action r0 <NEXT> r27 javascript = $ r5 <NEXT> r28 = org apache common validator validator action r0 <NEXT> $ r6 = specialinvoke r28 get log <NEXT> $ z3 = $ r6 be trace enabled <NEXT> if $ z3 == 0 goto label5 <NEXT> r29 = org apache common validator validator action r0 <NEXT> $ r7 = specialinvoke r29 get log <NEXT> $ r7 trace \ `` load javascript function completed\ `` <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common validator validator result r0 <NEXT> $ r2 = r3 h action <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common validator validator result r0 <NEXT> $ r1 = r3 h action <NEXT> $ r2 = java util collection unmodifiable map $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common validator validator result r0 <NEXT> $ r3 = r4 h result <NEXT> $ r2 = r1 h result <NEXT> $ r3 put all $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common validator var r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r56 = org javacc jjdoc text generator r0 <NEXT> $ r2 = r56 context <NEXT> $ r3 = $ r2 get output file <NEXT> $ z0 = $ r3 equal \ `` \ `` <NEXT> if $ z0 == 0 goto label07 <NEXT> $ r10 = org javacc jjdoc j j doc globals input_file <NEXT> $ z1 = $ r10 equal \ `` standard input\ `` <NEXT> if $ z1 == 0 goto label01 <NEXT> r47 = new java io print writer <NEXT> r46 = new java io output stream writer <NEXT> $ r32 = java lang system out <NEXT> specialinvoke r46 < init > $ r32 <NEXT> specialinvoke r47 < init > r46 <NEXT> return r47 <NEXT> if $ z1 == 0 goto label01 <NEXT> label r43 = \ `` html\ `` <NEXT> r57 = org javacc jjdoc text generator r0 <NEXT> $ r11 = r57 context <NEXT> $ z2 = $ r11 get text <NEXT> if $ z2 == 0 goto label02 <NEXT> r43 = \ `` txt\ `` <NEXT> goto label03 <NEXT> label $ r44 = org javacc jjdoc j j doc globals input_file <NEXT> i0 = $ r44 last index of 46 <NEXT> if i0 ! = -1 goto label04 <NEXT> r48 = new java lang string builder <NEXT> specialinvoke r48 < init > <NEXT> $ r26 = org javacc jjdoc j j doc globals input_file <NEXT> $ r27 = r48 append $ r26 <NEXT> $ r28 = $ r27 append r43 <NEXT> $ r29 = $ r28 to string <NEXT> org javacc jjdoc j j doc globals output_file = $ r29 <NEXT> goto label06 <NEXT> label goto label08 <NEXT> label r52 = new java io print writer <NEXT> r51 = new java io file writer <NEXT> $ r8 = org javacc jjdoc j j doc globals output_file <NEXT> specialinvoke r51 < init > $ r8 <NEXT> specialinvoke r52 < init > r51 <NEXT> r60 = org javacc jjdoc text generator r0 <NEXT> r60 ostr = r52 <NEXT> label goto label11 <NEXT> label r63 = org javacc jjdoc text generator r0 <NEXT> $ r9 = r63 ostr <NEXT> return $ r9 <NEXT> if i0 ! = -1 goto label04 <NEXT> label $ r13 = org javacc jjdoc j j doc globals input_file <NEXT> r1 = $ r13 substring i0 <NEXT> $ z4 = r1 equal r43 <NEXT> if $ z4 == 0 goto label05 <NEXT> r49 = new java lang string builder <NEXT> specialinvoke r49 < init > <NEXT> $ r21 = org javacc jjdoc j j doc globals input_file <NEXT> $ r22 = r49 append $ r21 <NEXT> $ r23 = $ r22 append r43 <NEXT> $ r24 = $ r23 to string <NEXT> org javacc jjdoc j j doc globals output_file = $ r24 <NEXT> if $ z4 == 0 goto label05 <NEXT> label r50 = new java lang string builder <NEXT> specialinvoke r50 < init > <NEXT> $ r15 = org javacc jjdoc j j doc globals input_file <NEXT> $ r16 = $ r15 substring 0 i0 <NEXT> $ r17 = r50 append $ r16 <NEXT> $ r18 = $ r17 append r43 <NEXT> $ r19 = $ r18 to string <NEXT> org javacc jjdoc j j doc globals output_file = $ r19 <NEXT> if $ z2 == 0 goto label02 <NEXT> label r58 = org javacc jjdoc text generator r0 <NEXT> $ r12 = r58 context <NEXT> $ z3 = $ r12 get x text <NEXT> if $ z3 == 0 goto label03 <NEXT> r43 = \ `` xtext\ `` <NEXT> if $ z0 == 0 goto label07 <NEXT> label r59 = org javacc jjdoc text generator r0 <NEXT> $ r4 = r59 context <NEXT> $ r5 = $ r4 get output file <NEXT> org javacc jjdoc j j doc globals output_file = $ r5 <END>
<BEG> r0 = @ this <NEXT> $ z0 = org javacc parser option boolean value \ `` node_uses_parser\ `` <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ z0 = org javacc parser option boolean value \ `` track_tokens\ `` <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org javacc parser option string value \ `` node_class\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org javacc parser option string value \ `` node_package\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org javacc parser option option value <NEXT> $ r2 = $ r1 get r0 <NEXT> $ r3 = java lang integer $ r2 <NEXT> $ i0 = $ r3 int value <NEXT> return $ i0 <END>
<BEG> $ z0 = org javacc parser option boolean value \ `` debug_token_manager\ `` <NEXT> return $ z0 <END>
<BEG> $ z0 = org javacc parser option boolean value \ `` cache_tokens\ `` <NEXT> return $ z0 <END>
<BEG> $ r0 = org javacc parser option string value \ `` jdk_version\ `` <NEXT> return $ r0 <END>
<BEG> $ z0 = org javacc parser option boolean value \ `` generate_string_builder\ `` <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = com graphbuilder curve bezier curve r0 <NEXT> $ d0 = r1 t_min <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = com graphbuilder curve b spline r0 <NEXT> $ z0 = r1 use default interval <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com graphbuilder curve control path r0 <NEXT> $ r1 = r2 curve bag <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com graphbuilder curve control path r0 <NEXT> $ r1 = r2 point bag <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = com graphbuilder curve control string parse exception r0 <NEXT> $ i0 = r1 from index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com graphbuilder curve group iterator r0 <NEXT> $ r1 = r2 group <NEXT> $ i0 = lengthof $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com graphbuilder curve natural cubic spline r0 <NEXT> r1 close = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r5 = com graphbuilder curve value vector r0 <NEXT> $ r2 = r5 value <NEXT> $ i1 = lengthof $ r2 <NEXT> if $ i1 > = i0 goto label4 <NEXT> r6 = com graphbuilder curve value vector r0 <NEXT> $ r3 = r6 value <NEXT> $ i2 = lengthof $ r3 <NEXT> i3 = 2 * $ i2 <NEXT> if i3 > = i0 goto label1 <NEXT> i3 = i0 <NEXT> label r1 = newarray double [ i3 ] <NEXT> i4 = 0 <NEXT> label r7 = com graphbuilder curve value vector r0 <NEXT> $ i5 = r7 size <NEXT> if i4 > = $ i5 goto label3 <NEXT> r8 = com graphbuilder curve value vector r0 <NEXT> $ r4 = r8 value <NEXT> $ d0 = $ r4 [ i4 ] <NEXT> r1 [ i4 ] = $ d0 <NEXT> i4 = i4 + 1 <NEXT> goto label2 <NEXT> if i4 > = $ i5 goto label3 <NEXT> label r9 = com graphbuilder curve value vector r0 <NEXT> r9 value = r1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> r3 = new com graphbuilder math expression parse exception <NEXT> specialinvoke r3 < init > \ `` expression string can not be null \ <NEXT> r4 = java lang throwable r3 <NEXT> throw r4 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = com graphbuilder math expression tree build r0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ d0 = r1 [ 0 ] <NEXT> $ d1 = java lang math ab $ d0 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ d4 = r1 [ 0 ] <NEXT> $ d1 = r1 [ 0 ] <NEXT> $ d0 = r1 [ 0 ] <NEXT> $ d2 = $ d1 * $ d0 <NEXT> $ d3 = 1 0 + $ d2 <NEXT> $ d5 = java lang math sqrt $ d3 <NEXT> $ d6 = $ d4 + $ d5 <NEXT> $ d7 = java lang math log $ d6 <NEXT> return $ d7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ d0 = r1 [ 0 ] <NEXT> $ d1 = java lang math atan $ d0 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 2 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if i0 ! = 2 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ d0 = r1 [ 0 ] <NEXT> $ d1 = java lang math pow 2 718281828459045 $ d0 <NEXT> $ d2 = r1 [ 0 ] <NEXT> $ d3 = neg $ d2 <NEXT> $ d4 = java lang math pow 2 718281828459045 $ d3 <NEXT> $ d5 = $ d1 + $ d4 <NEXT> $ d6 = $ d5 2 0 <NEXT> return $ d6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ d0 = r1 [ 0 ] <NEXT> $ d1 = java lang math floor $ d0 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ d0 = r1 [ 0 ] <NEXT> $ d1 = java lang math sqrt $ d0 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r4 = com graphbuilder math func map r0 <NEXT> $ i0 = r4 num func <NEXT> r1 = newarray java lang string [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r5 = com graphbuilder math func map r0 <NEXT> $ r2 = r5 name <NEXT> $ r3 = $ r2 [ i2 ] <NEXT> r1 [ i2 ] = $ r3 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r4 = com graphbuilder math func map r0 <NEXT> $ i0 = r4 num func <NEXT> r1 = newarray com graphbuilder math func function [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r5 = com graphbuilder math func map r0 <NEXT> $ r2 = r5 func <NEXT> $ r3 = $ r2 [ i2 ] <NEXT> r1 [ i2 ] = $ r3 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r5 = com graphbuilder math pascal triangle r0 <NEXT> $ r3 = r5 share data <NEXT> $ r1 = newarray double [ ] [ 1 ] <NEXT> $ r2 = newarray double [ 1 ] <NEXT> $ r2 [ 0 ] = 1 0 <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> com graphbuilder math pascal triangle $ share data access $ 102 $ r3 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = com graphbuilder math var map r0 <NEXT> $ i0 = r3 num var <NEXT> r1 = newarray double [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r4 = com graphbuilder math var map r0 <NEXT> $ r2 = r4 value <NEXT> $ d0 = $ r2 [ i2 ] <NEXT> r1 [ i2 ] = $ d0 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache deltaspike core api config view navigation event pre view config navigate event r0 <NEXT> $ r1 = r2 to view <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache deltaspike core util bean bean builder r0 <NEXT> r1 passivation capable = z0 <NEXT> r2 = org apache deltaspike core util bean bean builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java lang system get security manager <NEXT> if $ r1 == null goto label1 <NEXT> r6 = new org apache deltaspike core util class utils $ get class loader action <NEXT> specialinvoke r6 < init > r0 <NEXT> r7 = java security privilege action r6 <NEXT> $ r4 = java security access controller do privilege r7 <NEXT> $ r5 = java lang class loader $ r4 <NEXT> return $ r5 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r2 = org apache deltaspike core util class utils get class loader internal r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache deltaspike core util project stage producer config_setting_keys <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r2 = r1 [ i1 ] <NEXT> r3 = org apache deltaspike core api config config resolver get property value r2 <NEXT> if r3 == null goto label2 <NEXT> $ z0 = r3 be empty <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ r4 = org apache deltaspike core api projectstage project stage value of r3 <NEXT> return $ r4 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 get modifier <NEXT> $ z0 = java lang reflect modifier be static $ i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 get modifier <NEXT> $ z0 = java lang reflect modifier be abstract $ i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = new org dom4j bean bean attribute list <NEXT> r3 = org dom4j bean bean element r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = java util list r2 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org dom4j bean bean meta data singleton cache <NEXT> $ r2 = $ r1 get r0 <NEXT> r6 = org dom4j bean bean meta data $ r2 <NEXT> if r6 ! = null goto label1 <NEXT> $ r3 = new org dom4j bean bean meta data <NEXT> specialinvoke $ r3 < init > r0 <NEXT> r6 = $ r3 <NEXT> $ r4 = org dom4j bean bean meta data singleton cache <NEXT> $ r4 put r0 $ r3 <NEXT> label return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org dom4j datatype datatype element factory r0 <NEXT> $ r3 = r5 attribute x s datatypes <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> $ r0 = new org w3c dom d o m exception <NEXT> specialinvoke $ r0 < init > 9 \ `` not support yet\ `` <NEXT> throw $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org dom4j dtd attribute decl r0 <NEXT> $ r1 = r2 element name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org dom4j dtd attribute decl r0 <NEXT> r2 value default = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org dom4j dtd element decl r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org dom4j io dispatch handler r0 <NEXT> r4 at root = 1 <NEXT> r5 = org dom4j io dispatch handler r0 <NEXT> r5 path = \ `` \ `` <NEXT> r6 = org dom4j io dispatch handler r0 <NEXT> $ r1 = r6 path stack <NEXT> $ r1 clear <NEXT> r7 = org dom4j io dispatch handler r0 <NEXT> $ r2 = r7 handler stack <NEXT> $ r2 clear <NEXT> r8 = org dom4j io dispatch handler r0 <NEXT> $ r3 = r8 handler <NEXT> $ r3 clear <NEXT> r9 = org dom4j io dispatch handler r0 <NEXT> r9 default handler = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org dom4j io d o m document result r0 <NEXT> $ r1 = r3 content handler <NEXT> $ r2 = $ r1 get document <NEXT> return $ r2 <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> r0 = javax xml parser s a x parser factory new instance <NEXT> r0 set validate z0 <NEXT> r0 set namespace aware z1 <NEXT> r1 = r0 new s a x parser <NEXT> $ r2 = r1 get x m l reader <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = new org dom4j dtd external entity decl <NEXT> specialinvoke r6 < init > r1 r2 r3 <NEXT> r7 = org dom4j io s a x content handler r0 <NEXT> $ z0 = r7 internal d t dsubset <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = org dom4j io s a x content handler r0 <NEXT> $ z2 = r8 include internal d t d declaration <NEXT> if $ z2 == 0 goto label2 <NEXT> r9 = org dom4j io s a x content handler r0 <NEXT> r10 = org dom4j dtd decl r6 <NEXT> r9 add d t d declaration r10 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org dom4j io s a x content handler r0 <NEXT> $ z1 = r11 include external d t d declaration <NEXT> if $ z1 == 0 goto label2 <NEXT> r12 = org dom4j io s a x content handler r0 <NEXT> r13 = org dom4j dtd decl r6 <NEXT> r12 add external d t d declaration r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org dom4j io s a x content handler r0 <NEXT> $ r2 = r6 external d t d declaration <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r7 = org dom4j io s a x content handler r0 <NEXT> r7 external d t d declaration = r5 <NEXT> label r8 = org dom4j io s a x content handler r0 <NEXT> $ r3 = r8 external d t d declaration <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r21 = new org xml sax input source <NEXT> r20 = new java io file input stream <NEXT> specialinvoke r20 < init > r1 <NEXT> specialinvoke r21 < init > r20 <NEXT> r24 = org dom4j io s a x reader r0 <NEXT> $ r5 = r24 encode <NEXT> if $ r5 == null goto label2 <NEXT> r25 = org dom4j io s a x reader r0 <NEXT> $ r11 = r25 encode <NEXT> r21 set encode $ r11 <NEXT> label r16 = r1 get absolute path <NEXT> if r16 == null goto label4 <NEXT> r22 = new java lang string buffer <NEXT> specialinvoke r22 < init > \ `` file \ `` <NEXT> $ r7 = java io file separator <NEXT> $ z0 = r16 start with $ r7 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r22 append \ `` \ `` <NEXT> label r17 = r16 replace 92 47 <NEXT> r22 append r17 <NEXT> $ r9 = r22 to string <NEXT> r21 set system id $ r9 <NEXT> label r26 = org dom4j io s a x reader r0 <NEXT> $ r18 = r26 read r21 <NEXT> label return $ r18 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org dom4j io s a x reader r0 <NEXT> r2 encode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new org dom4j io s a x content handler <NEXT> r6 = org dom4j io s a x reader r0 <NEXT> $ r3 = r6 get document factory <NEXT> r7 = org dom4j io s a x reader r0 <NEXT> $ r4 = r7 dispatch handler <NEXT> r8 = org dom4j element handler $ r4 <NEXT> specialinvoke r5 < init > $ r3 r8 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org dom4j rule rule r0 <NEXT> $ d0 = r1 priority <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org dom4j swing x m l table model r0 <NEXT> r2 definition = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = org dom4j tree namespace stack r0 <NEXT> $ r4 = r6 document factory <NEXT> $ r5 = $ r4 create q name r1 r3 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 length <NEXT> if $ i0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ i1 = r0 length <NEXT> $ i2 = $ i1 - 1 <NEXT> $ c3 = r0 char at $ i2 <NEXT> $ z0 = java lang character be whitespace $ c3 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org dom4j xpath default x path r0 <NEXT> r2 sort r1 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = nl jqno equalsverifier internal reflection conditional instantiator r0 <NEXT> $ r4 = r6 fully qualified class name <NEXT> r7 = nl jqno equalsverifier internal reflection conditional instantiator r0 <NEXT> $ r5 = r7 call factory $ r4 r1 r2 r3 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r3 = nl jqno equalsverifier internal reflection superclass iterable r0 <NEXT> $ r1 = specialinvoke r3 create class list <NEXT> $ r2 = $ r1 iterator <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data autodiscover alternate mailbox r0 <NEXT> $ r1 = r2 server <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ z0 = r0 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label return null <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = r0 end with \ `` \ `` <NEXT> if $ z1 == 0 goto label3 <NEXT> $ i0 = r0 length <NEXT> $ i1 = $ i0 - 1 <NEXT> r0 = r0 substring 0 $ i1 <NEXT> label return r0 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data autodiscover configuration configuration setting base r0 <NEXT> $ r1 = r2 error <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data autodiscover protocol connection r0 <NEXT> $ i0 = r1 port <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> return \ `` http schema microsoft com exchange 2010 autodiscover autodiscover get domain settings\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = microsoft exchange webservices data core ew utility get namespace prefix r1 <NEXT> r4 = microsoft exchange webservices data core ew utility get namespace uri r1 <NEXT> r6 = microsoft exchange webservices data core ews service xml writer r0 <NEXT> $ r5 = r6 xml writer <NEXT> $ r5 write start element r3 r2 r4 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 get response code <NEXT> r1 = r0 get response content type <NEXT> r2 = r0 get response header <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 append \ `` \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 append \ `` \n\ `` <NEXT> $ r8 = microsoft exchange webservices data core ew utility format http header r2 <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ `` \n\ `` <NEXT> $ r11 = $ r10 to string <NEXT> return $ r11 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ z0 = r0 be enum <NEXT> microsoft exchange webservices data core ew utility ews assert $ z0 \ `` ews utility parse enum value list\ <NEXT> $ r8 = new java lang string builder <NEXT> specialinvoke $ r8 < init > <NEXT> $ r8 append \ `` [ \ `` <NEXT> i1 = lengthof r3 <NEXT> i2 = 0 <NEXT> label if i2 > = i1 goto label2 <NEXT> c3 = r3 [ i2 ] <NEXT> label if i2 > = i1 goto label2 <NEXT> label $ r8 append \ `` ] \ `` <NEXT> $ r11 = $ r8 to string <NEXT> r23 = r2 split $ r11 <NEXT> i4 = lengthof r23 <NEXT> i5 = 0 <NEXT> label if i5 > = i4 goto label7 <NEXT> r5 = r23 [ i5 ] <NEXT> $ r12 = r0 get enum constant <NEXT> r6 = java lang enum [ ] $ r12 <NEXT> i0 = lengthof r6 <NEXT> i6 = 0 <NEXT> label if i6 > = i0 goto label6 <NEXT> r7 = r6 [ i6 ] <NEXT> $ r13 = r7 to string <NEXT> $ z1 = $ r13 equal r5 <NEXT> if $ z1 == 0 goto label5 <NEXT> r1 add r7 <NEXT> label i6 = i6 + 1 <NEXT> goto label4 <NEXT> label if i6 > = i0 goto label6 <NEXT> label i5 = i5 + 1 <NEXT> goto label3 <NEXT> label if i5 > = i4 goto label7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = microsoft exchange webservices data core ew xml reader r0 <NEXT> r3 ensure current node be start element <NEXT> r2 = null <NEXT> r4 = microsoft exchange webservices data core ew xml reader r0 <NEXT> $ z0 = r4 be empty element <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = microsoft exchange webservices data core ew xml reader r0 <NEXT> r2 = r5 read value r1 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new microsoft exchange webservices data security xml node type <NEXT> specialinvoke r4 < init > 2 <NEXT> r5 = microsoft exchange webservices data core ew xml reader r0 <NEXT> specialinvoke r5 internal read element r1 r2 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = microsoft exchange webservices data core ew xml reader r0 <NEXT> $ r1 = r3 get namespace prefix <NEXT> r4 = microsoft exchange webservices data core ew xml reader r0 <NEXT> $ r2 = r4 get local name <NEXT> r5 = microsoft exchange webservices data core ew xml reader r0 <NEXT> r5 skip element $ r1 $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = microsoft exchange webservices data core ew xml reader r0 <NEXT> $ r1 = r4 present event <NEXT> z0 = $ r1 be start element <NEXT> r5 = microsoft exchange webservices data core ew xml reader r0 <NEXT> $ r2 = r5 xml reader <NEXT> $ r3 = $ r2 peek <NEXT> z1 = $ r3 be end element <NEXT> if z0 == 0 goto label1 <NEXT> if z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core exception service remote service response exception r0 <NEXT> $ r1 = r2 response <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data core exchange server info r0 <NEXT> $ i0 = r1 minor version <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = microsoft exchange webservices data core exchange server info r0 <NEXT> r1 minor version = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = microsoft exchange webservices data core exchange server info r0 <NEXT> r1 major build number = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = microsoft exchange webservices data core exchange service r0 <NEXT> r6 = java util concurrent future r1 <NEXT> $ r3 = microsoft exchange webservices data misc async request result extract service request r5 r6 <NEXT> r2 = microsoft exchange webservices data core request unsubscribe request $ r3 <NEXT> r2 end execute r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> microsoft exchange webservices data core ew utility validate param r1 \ `` email address\ `` <NEXT> r6 = new microsoft exchange webservices data core request get room request <NEXT> r7 = microsoft exchange webservices data core exchange service r0 <NEXT> specialinvoke r6 < init > r7 <NEXT> r6 set room list r1 <NEXT> $ r4 = r6 execute <NEXT> $ r5 = $ r4 get room <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data core exchange service base r0 <NEXT> r4 trace enable = z0 <NEXT> r5 = microsoft exchange webservices data core exchange service base r0 <NEXT> $ z1 = r5 trace enable <NEXT> if $ z1 == 0 goto label1 <NEXT> r6 = microsoft exchange webservices data core exchange service base r0 <NEXT> $ r1 = r6 trace listener <NEXT> if $ r1 ! = null goto label1 <NEXT> r3 = new microsoft exchange webservices data misc ews trace listener <NEXT> specialinvoke r3 < init > <NEXT> r7 = microsoft exchange webservices data core exchange service base r0 <NEXT> r8 = microsoft exchange webservices data misc i trace listener r3 <NEXT> r7 trace listener = r8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core exchange service base r0 <NEXT> r2 web proxy = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data core property bag r0 <NEXT> $ r2 = r4 modify property <NEXT> $ z0 = $ r2 contain r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = microsoft exchange webservices data core property bag r0 <NEXT> $ r3 = r5 add property <NEXT> $ z1 = $ r3 contain r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = microsoft exchange webservices data core property bag r0 <NEXT> $ r4 = r13 property <NEXT> $ r5 = $ r4 entry set <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r6 = r2 next <NEXT> r3 = java util map $ entry $ r6 <NEXT> $ r7 = r3 get value <NEXT> $ z1 = $ r7 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> r14 = microsoft exchange webservices data core property bag r0 <NEXT> $ r8 = r14 delete property <NEXT> $ r9 = r3 get key <NEXT> $ z2 = $ r8 contain key $ r9 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> $ r10 = r3 get key <NEXT> $ r12 = microsoft exchange webservices data property definition property definition $ r10 <NEXT> r15 = microsoft exchange webservices data core property bag r0 <NEXT> $ r11 = r15 modify property <NEXT> microsoft exchange webservices data core property bag add to change list $ r12 $ r11 <NEXT> r16 = microsoft exchange webservices data core property bag r0 <NEXT> r16 change <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core property set r0 <NEXT> specialinvoke r2 throw if readonly <NEXT> r3 = microsoft exchange webservices data core property set r0 <NEXT> r3 base property set = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request add delegate request r0 <NEXT> $ r1 = r2 delegate user <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return \ `` folders\ `` <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request create request r0 <NEXT> $ r1 = r2 parent folder id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core request create request r0 <NEXT> r2 parent folder id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core request expand group request r0 <NEXT> r2 email address = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request find request r0 <NEXT> $ r1 = r2 parent folder id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request find request r0 <NEXT> $ r1 = r2 query string <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = microsoft exchange webservices data core request get delegate request r0 <NEXT> r1 include permission = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request get request r0 <NEXT> $ r1 = r2 property set <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request get user configuration request r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r7 = microsoft exchange webservices data core request http client web request r0 <NEXT> specialinvoke r7 throw if request be null <NEXT> r5 = new java io byte array output stream <NEXT> specialinvoke r5 < init > <NEXT> r8 = microsoft exchange webservices data core request http client web request r0 <NEXT> $ r3 = r8 http post <NEXT> r6 = new microsoft exchange webservices data core request byte array o s request entity <NEXT> specialinvoke r6 < init > r5 <NEXT> r9 = org apache http http entity r6 <NEXT> $ r3 set entity r9 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r3 = microsoft exchange webservices data core request http client web request r0 <NEXT> specialinvoke r3 throw if response be null <NEXT> r4 = microsoft exchange webservices data core request http client web request r0 <NEXT> $ r1 = r4 response <NEXT> $ r2 = $ r1 get status line <NEXT> $ i0 = $ r2 get status code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data core request http web request r0 <NEXT> $ z0 = r1 pre authenticate <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request http web request r0 <NEXT> $ r1 = r2 request method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request play on phone request r0 <NEXT> $ r1 = r2 item id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core request resolve name request r0 <NEXT> r2 name to resolve = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request set user oof setting request r0 <NEXT> $ r1 = r2 oof setting <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core request sync folder hierarchy request r0 <NEXT> r2 sync folder id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core request update inbox rule request r0 <NEXT> $ r1 = r2 mailbox smtp address <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core request update item request r0 <NEXT> r2 conflict resolution mode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core response get user oof setting response r0 <NEXT> $ r1 = r2 oof setting <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = microsoft exchange webservices data core response resolve name response r0 <NEXT> $ r1 = r3 get error code <NEXT> $ r2 = microsoft exchange webservices data core enumeration misc error service error error name resolution no result <NEXT> if $ r1 == $ r2 goto label1 <NEXT> specialinvoke r0 internal throw if necessary <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core response service response r0 <NEXT> $ r2 = r5 result <NEXT> $ r1 = microsoft exchange webservices data core enumeration service service result error <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> r4 = new microsoft exchange webservices data core exception service remote service response exception <NEXT> r6 = microsoft exchange webservices data core response service response r0 <NEXT> specialinvoke r4 < init > r6 <NEXT> r7 = java lang throwable r4 <NEXT> throw r7 <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core response sync response r0 <NEXT> $ r1 = r2 change <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = microsoft exchange webservices data core service folder folder r0 <NEXT> $ z0 = r3 be dirty <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = microsoft exchange webservices data core service folder folder r0 <NEXT> $ r1 = r4 get property bag <NEXT> $ z1 = $ r1 get be update call necessary <NEXT> if $ z1 == 0 goto label1 <NEXT> r5 = microsoft exchange webservices data core service folder folder r0 <NEXT> $ r2 = r5 get service <NEXT> r6 = microsoft exchange webservices data core service folder folder r0 <NEXT> $ r2 update folder r6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service folder folder r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema folder schema parent folder id <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = microsoft exchange webservices data property complex folder id $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core service item appointment r0 <NEXT> r2 internal create null null r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core service item appointment r0 <NEXT> $ r1 = r2 internal accept 1 z0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item appointment r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema appointment schema end <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java util date $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item appointment r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema appointment schema be cancel <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang boolean $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item appointment r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema appointment schema organizer <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = microsoft exchange webservices data property complex email address $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item appointment r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema appointment schema optional attendee <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = microsoft exchange webservices data property complex attendee collection $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data core service item appointment r0 <NEXT> $ r2 = r4 get property bag <NEXT> $ r3 = microsoft exchange webservices data core service schema appointment schema allow new time proposal <NEXT> $ r2 set object from property definition $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r1 = r7 get service <NEXT> $ r2 = microsoft exchange webservices data core enumeration misc exchange version exchange2010 <NEXT> microsoft exchange webservices data core ew utility validate method version $ r1 $ r2 \ `` remove contact picture\ `` <NEXT> r8 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r3 = r8 get property bag <NEXT> $ r4 = microsoft exchange webservices data core service schema contact schema attachment <NEXT> $ z0 = $ r3 be property loaded $ r4 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = new microsoft exchange webservices data core exception service local property exception <NEXT> specialinvoke r6 < init > \ `` the attachment collection must be load \ `` <NEXT> r9 = java lang throwable r6 <NEXT> throw r9 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r10 = microsoft exchange webservices data core service item contact r0 <NEXT> specialinvoke r10 internal remove contact picture <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema contact schema display name <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema contact schema middle name <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema contact schema email address <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = microsoft exchange webservices data property complex email address dictionary $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r2 = r4 get property bag <NEXT> $ r3 = microsoft exchange webservices data core service schema contact schema generation <NEXT> $ r2 set object from property definition $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema contact schema job title <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r2 = r4 get property bag <NEXT> $ r3 = microsoft exchange webservices data core service schema contact schema profession <NEXT> $ r2 set object from property definition $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r2 = r4 get property bag <NEXT> $ r3 = microsoft exchange webservices data core service schema contact schema spouse name <NEXT> $ r2 set object from property definition $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema contact schema alias <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item contact r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema contact schema note <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item conversation r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema conversation schema unique recipient <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = microsoft exchange webservices data property complex string list $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item conversation r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema conversation schema global have attachment <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang boolean $ r3 <NEXT> $ z0 = $ r4 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item email message r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema email message schema cc recipient <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = microsoft exchange webservices data property complex email address collection $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item email message r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema email message schema conversation index <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = byte [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data core service item email message r0 <NEXT> $ r2 = r4 get property bag <NEXT> $ r3 = microsoft exchange webservices data core service schema email message schema from <NEXT> $ r2 set object from property definition $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item email message r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema email message schema be delivery receipt request <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang boolean $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item item r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema item schema be unmodified <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang boolean $ r3 <NEXT> $ z0 = $ r4 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data core service item item r0 <NEXT> $ r2 = r4 get property bag <NEXT> $ r3 = microsoft exchange webservices data core service schema item schema item class <NEXT> $ r2 set object from property definition $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item meet request r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema appointment schema original start <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java util date $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item post item r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema post item schema post time <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java util date $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data core service item task r0 <NEXT> $ r1 = r5 get property bag <NEXT> $ r2 = microsoft exchange webservices data core service schema task schema actual work <NEXT> $ r3 = $ r1 get object from property definition $ r2 <NEXT> $ r4 = java lang integer $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data core service response accept meet invitation message r0 <NEXT> $ z0 = r1 tentative <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = microsoft exchange webservices data core service schema item schema body <NEXT> r4 = microsoft exchange webservices data core service response post reply r0 <NEXT> r5 = microsoft exchange webservices data property definition property definition base $ r1 <NEXT> $ r2 = r4 get object from property definition r5 <NEXT> $ r3 = microsoft exchange webservices data property complex message body $ r2 <NEXT> return $ r3 <END>
<BEG> $ r0 = microsoft exchange webservices data core service schema item schema instance <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data core service schema service object schema r0 <NEXT> specialinvoke r2 register property r1 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = microsoft exchange webservices data core service service object info r0 <NEXT> $ r2 = r3 on change list <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core simple property bag r0 <NEXT> $ r1 = r2 add item <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = microsoft exchange webservices data core simple property bag r0 <NEXT> $ r2 = r3 item <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = microsoft exchange webservices data core simple property bag r0 <NEXT> $ r3 = r6 item <NEXT> $ z0 = $ r3 contain key r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = microsoft exchange webservices data core simple property bag r0 <NEXT> $ r4 = r7 item <NEXT> $ r5 = $ r4 get r1 <NEXT> r2 set param $ r5 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 set param null <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data core web proxy r0 <NEXT> $ r1 = r2 host <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data credential w s security base credential r0 <NEXT> $ r1 = r2 ews url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 load null <NEXT> r24 = new java util string tokenizer <NEXT> specialinvoke r24 < init > r1 <NEXT> label $ z0 = r24 have more token <NEXT> if $ z0 == 0 goto label2 <NEXT> r21 = r24 next token <NEXT> $ i0 = java lang integer parse int r21 <NEXT> r29 = microsoft exchange webservices data dns dns srv record r0 <NEXT> r29 priority = $ i0 <NEXT> r3 = r24 next token <NEXT> $ i1 = java lang integer parse int r3 <NEXT> r30 = microsoft exchange webservices data dns dns srv record r0 <NEXT> r30 weight = $ i1 <NEXT> r4 = r24 next token <NEXT> $ i2 = java lang integer parse int r4 <NEXT> r31 = microsoft exchange webservices data dns dns srv record r0 <NEXT> r31 port = $ i2 <NEXT> r5 = r24 next token <NEXT> r32 = microsoft exchange webservices data dns dns srv record r0 <NEXT> r32 target = r5 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new microsoft exchange webservices data misc availability attendee info <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc availability attendee info r0 <NEXT> $ r1 = r2 attendee type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 1 goto label1 <NEXT> if i0 < = 49 goto label2 <NEXT> label r6 = new java lang illegal argument exception <NEXT> $ r2 = newarray java lang object [ 3 ] <NEXT> $ r2 [ 0 ] = \ `` good suggestion threshold\ `` <NEXT> $ r3 = java lang integer value of 1 <NEXT> $ r2 [ 1 ] = $ r3 <NEXT> $ r4 = java lang integer value of 49 <NEXT> $ r2 [ 2 ] = $ r4 <NEXT> $ r5 = java lang string format \ `` % s must be between % d and % d \ <NEXT> specialinvoke r6 < init > $ r5 <NEXT> throw r6 <NEXT> if i0 < = 49 goto label2 <NEXT> label r7 = microsoft exchange webservices data misc availability availability option r0 <NEXT> r7 good suggestion threshold = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data misc availability availability option r0 <NEXT> $ i0 = r1 maximum non work hour suggestion per day <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 30 goto label1 <NEXT> if i0 < = 1440 goto label2 <NEXT> label r6 = new java lang illegal argument exception <NEXT> $ r2 = newarray java lang object [ 4 ] <NEXT> $ r2 [ 0 ] = \ `` % s must be between % d and % d \ `` <NEXT> $ r2 [ 1 ] = \ `` meeting duration\ `` <NEXT> $ r3 = java lang integer value of 30 <NEXT> $ r2 [ 2 ] = $ r3 <NEXT> $ r4 = java lang integer value of 1440 <NEXT> $ r2 [ 3 ] = $ r4 <NEXT> $ r5 = java lang string format \ `` % s % s % s % s\ <NEXT> specialinvoke r6 < init > $ r5 <NEXT> throw r6 <NEXT> if i0 < = 1440 goto label2 <NEXT> label r7 = microsoft exchange webservices data misc availability availability option r0 <NEXT> r7 meeting duration = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data misc availability availability option r0 <NEXT> r2 detail suggestion window = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data misc availability get user availability result r0 <NEXT> $ r1 = r5 suggestion response <NEXT> if $ r1 ! = null goto label1 <NEXT> return null <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = microsoft exchange webservices data misc availability get user availability result r0 <NEXT> $ r2 = r6 suggestion response <NEXT> $ r2 throw if necessary <NEXT> r7 = microsoft exchange webservices data misc availability get user availability result r0 <NEXT> $ r3 = r7 suggestion response <NEXT> $ r4 = $ r3 get suggestion <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc availability legacy availability time zone time r0 <NEXT> $ r1 = r2 delta <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data misc availability legacy availability time zone time r0 <NEXT> $ i0 = r1 month <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> microsoft exchange webservices data core ew utility validate param r0 \ `` oof reply\ `` <NEXT> $ r1 = r0 message <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc availability time window r0 <NEXT> $ r1 = r2 end time <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc calendar action result r0 <NEXT> $ r1 = r2 meeting cancellation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc conversation action r0 <NEXT> $ r1 = r2 action <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data misc conversation action r0 <NEXT> r2 category = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data misc id alternate id r0 <NEXT> r2 id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc mobile phone r0 <NEXT> $ r1 = r2 phone number <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc name resolution r0 <NEXT> $ r1 = r2 mailbox <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc name resolution r0 <NEXT> $ r1 = r2 contact <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc soap fault detail r0 <NEXT> $ r1 = r2 fault code <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data misc soap fault detail r0 <NEXT> r2 fault code = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data misc soap fault detail r0 <NEXT> r2 fault string = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data misc soap fault detail r0 <NEXT> $ i0 = r1 line number <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data misc user configuration r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = microsoft exchange webservices data notification stream subscription r0 <NEXT> $ r1 = r3 get service <NEXT> r4 = microsoft exchange webservices data notification stream subscription r0 <NEXT> $ r2 = r4 get id <NEXT> $ r1 unsubscribe $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data notification subscription error event args r0 <NEXT> $ r1 = r2 exception <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex attachment r0 <NEXT> $ r1 = r2 content type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r6 = microsoft exchange webservices data property complex attachment r0 <NEXT> $ r1 = r6 get owner <NEXT> $ r2 = $ r1 get service <NEXT> $ r3 = microsoft exchange webservices data core enumeration misc exchange version exchange2010 <NEXT> microsoft exchange webservices data core ew utility validate property version $ r2 $ r3 \ `` be inline\ `` <NEXT> r7 = microsoft exchange webservices data property complex attachment r0 <NEXT> $ z1 = r7 be inline <NEXT> $ r4 = java lang boolean value of $ z1 <NEXT> $ r5 = java lang boolean value of z0 <NEXT> r8 = microsoft exchange webservices data property complex attachment r0 <NEXT> $ z2 = r8 can set field value $ r4 $ r5 <NEXT> if $ z2 == 0 goto label1 <NEXT> r9 = microsoft exchange webservices data property complex attachment r0 <NEXT> r9 be inline = z0 <NEXT> r10 = microsoft exchange webservices data property complex attachment r0 <NEXT> r10 change <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data property complex attachment collection r0 <NEXT> r1 internal clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data property complex attendee collection r0 <NEXT> r1 internal clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex availability work hour r0 <NEXT> $ r1 = r2 day of the week <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data property complex availability work hour r0 <NEXT> $ l0 = r1 start time <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex complex property collection r0 <NEXT> $ r1 = r2 modify item <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ z5 = 1 <NEXT> goto label2 <NEXT> label microsoft exchange webservices data core ew utility ews assert $ z5 \ `` complex property collection internal remove\ <NEXT> r7 = microsoft exchange webservices data property complex complex property collection r0 <NEXT> $ r2 = r7 item <NEXT> $ z0 = $ r2 remove r1 <NEXT> if $ z0 == 0 goto label5 <NEXT> r1 remove change event r0 <NEXT> r8 = microsoft exchange webservices data property complex complex property collection r0 <NEXT> $ r3 = r8 add item <NEXT> $ z1 = $ r3 contain r1 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> r9 = microsoft exchange webservices data property complex complex property collection r0 <NEXT> $ r6 = r9 remove item <NEXT> $ r6 add r1 <NEXT> goto label4 <NEXT> label r11 = microsoft exchange webservices data property complex complex property collection r0 <NEXT> $ r5 = r11 modify item <NEXT> $ r5 remove r1 <NEXT> r12 = microsoft exchange webservices data property complex complex property collection r0 <NEXT> r12 change <NEXT> return 1 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label r10 = microsoft exchange webservices data property complex complex property collection r0 <NEXT> $ r4 = r10 add item <NEXT> $ r4 remove r1 <NEXT> if $ z0 == 0 goto label5 <NEXT> label return 0 <NEXT> if r1 == null goto label1 <NEXT> label $ z5 = 0 <END>
<BEG> r0 = @ this <NEXT> r10 = microsoft exchange webservices data property complex delegate permission r0 <NEXT> $ r3 = r10 delegate folder permission <NEXT> $ r4 = $ r3 value <NEXT> r1 = $ r4 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r1 next <NEXT> r2 = microsoft exchange webservices data property complex delegate permission $ delegate folder permission $ r5 <NEXT> $ r6 = r2 get permission level <NEXT> $ r7 = microsoft exchange webservices data core enumeration permission folder delegate folder permission level custom <NEXT> if $ r6 ! = $ r7 goto label2 <NEXT> r9 = new microsoft exchange webservices data core exception service local service validation exception <NEXT> specialinvoke r9 < init > \ `` this operation can\'t be perform because one or more folder permission level be set to custom \ `` <NEXT> r11 = java lang throwable r9 <NEXT> throw r11 <NEXT> if $ r6 ! = $ r7 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = microsoft exchange webservices data property complex delegate user r0 <NEXT> r1 receive copy of meeting message = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex email address r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = microsoft exchange webservices data property complex email address r0 <NEXT> $ r2 = r3 address <NEXT> r4 = microsoft exchange webservices data property complex email address r0 <NEXT> $ z0 = r4 can set field value $ r2 r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = microsoft exchange webservices data property complex email address r0 <NEXT> r5 address = r1 <NEXT> r6 = microsoft exchange webservices data property complex email address r0 <NEXT> r6 change <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = microsoft exchange webservices data property complex email address r0 <NEXT> $ r2 = r3 mailbox type <NEXT> r4 = microsoft exchange webservices data property complex email address r0 <NEXT> $ z0 = r4 can set field value $ r2 r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = microsoft exchange webservices data property complex email address r0 <NEXT> r5 mailbox type = r1 <NEXT> r6 = microsoft exchange webservices data property complex email address r0 <NEXT> r6 change <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex email address r0 <NEXT> $ r1 = r2 get address <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex extend property r0 <NEXT> $ r1 = r2 property definition <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex file attachment r0 <NEXT> $ r1 = r2 content stream <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex folder id r0 <NEXT> $ r1 = r2 mailbox <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data property complex folder permission r0 <NEXT> $ z0 = r1 be folder owner <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data property complex item attachment r0 <NEXT> specialinvoke r2 item change r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex manage folder information r0 <NEXT> $ r1 = r2 home page <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex meeting time zone r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex meeting time zone r0 <NEXT> $ r1 = r2 daylight <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = microsoft exchange webservices data property complex physical address entry r0 <NEXT> $ r2 = r3 property bag <NEXT> $ r2 set simple property bag \ `` state\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = microsoft exchange webservices data property complex physical address entry r0 <NEXT> $ r2 = r3 property bag <NEXT> $ r2 set simple property bag \ `` country or region\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> if r2 == null goto label1 <NEXT> return r2 <NEXT> if r2 == null goto label1 <NEXT> label r7 = new microsoft exchange webservices data core exception service local service validation exception <NEXT> $ r5 = newarray java lang object [ 1 ] <NEXT> $ r5 [ 0 ] = r3 <NEXT> $ r6 = java lang string format \ `` the recurrence pattern\ 's % s property must be specify \ <NEXT> specialinvoke r7 < init > $ r6 <NEXT> r8 = java lang throwable r7 <NEXT> throw r8 <END>
<BEG> r0 = @ this <NEXT> r3 = microsoft exchange webservices data property complex recurrence pattern recurrence r0 <NEXT> $ r1 = r3 number of occurrence <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = microsoft exchange webservices data property complex recurrence pattern recurrence r0 <NEXT> $ r2 = r4 end date <NEXT> if $ r2 == null goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ r2 == null goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data property complex recurrence pattern recurrence r0 <NEXT> r1 number of occurrence = null <NEXT> r2 = microsoft exchange webservices data property complex recurrence pattern recurrence r0 <NEXT> r2 end date = null <NEXT> r3 = microsoft exchange webservices data property complex recurrence pattern recurrence r0 <NEXT> r3 change <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data property complex rule r0 <NEXT> $ z0 = r1 be not support <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = microsoft exchange webservices data property complex rule action r0 <NEXT> $ z0 = r1 delete <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex rule action r0 <NEXT> $ r1 = r2 server reply with message <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex rule operation error r0 <NEXT> $ r1 = r2 operation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex time absolute date transition r0 <NEXT> $ r1 = r2 date time <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data property complex time absolute date transition r0 <NEXT> r2 date time = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex time time zone transition r0 <NEXT> $ r1 = r2 target period <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data property complex time change r0 <NEXT> r2 absolute date = r1 <NEXT> if r1 == null goto label1 <NEXT> r3 = microsoft exchange webservices data property complex time change r0 <NEXT> r3 recurrence = null <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> microsoft exchange webservices data core ew utility validate param r0 \ `` message body\ `` <NEXT> $ r1 = r0 text <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property complex unique body r0 <NEXT> $ r1 = r2 body type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property definition indexed property definition r0 <NEXT> $ r1 = r2 index <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property definition service object property definition r0 <NEXT> $ r1 = r2 uri <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = microsoft exchange webservices data search find folder result r0 <NEXT> r1 more available = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data sync change r0 <NEXT> $ r1 = r2 change type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data sync change r0 <NEXT> $ r1 = r2 service object <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = new microsoft exchange webservices data property complex folder id <NEXT> specialinvoke r2 < init > <NEXT> r3 = microsoft exchange webservices data property complex service id r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = microsoft exchange webservices data util date time utils parse internal r0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> entermonitor r1 <NEXT> label r9 = org xhtmlrenderer css newmatch matcher r0 <NEXT> r4 = specialinvoke r9 get mapper r1 <NEXT> $ r7 = r4 get p e cascade style r1 r2 <NEXT> exitmonitor r1 <NEXT> label return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org xhtmlrenderer css sheet stylesheet info r0 <NEXT> $ r1 = r2 medium type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org xhtmlrenderer css sheet stylesheet info r0 <NEXT> $ i0 = r1 origin <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org xhtmlrenderer css sheet stylesheet info r0 <NEXT> $ r1 = r2 title <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org xhtmlrenderer simple graphics2 d renderer r0 <NEXT> $ r2 = r3 panel <NEXT> $ r2 set share context r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r13 = org xhtmlrenderer simple graphics2 d renderer r0 <NEXT> $ r1 = r13 panel <NEXT> $ r2 = $ r1 get prefer size <NEXT> if $ r2 == null goto label1 <NEXT> r11 = new java awt rectangle <NEXT> r14 = org xhtmlrenderer simple graphics2 d renderer r0 <NEXT> $ r7 = r14 panel <NEXT> $ r8 = $ r7 get prefer size <NEXT> $ d0 = $ r8 get width <NEXT> $ i2 = int $ d0 <NEXT> r15 = org xhtmlrenderer simple graphics2 d renderer r0 <NEXT> $ r9 = r15 panel <NEXT> $ r10 = $ r9 get prefer size <NEXT> $ d1 = $ r10 get height <NEXT> $ i3 = int $ d1 <NEXT> specialinvoke r11 < init > 0 0 $ i2 $ i3 <NEXT> return r11 <NEXT> if $ r2 == null goto label1 <NEXT> label r12 = new java awt rectangle <NEXT> r16 = org xhtmlrenderer simple graphics2 d renderer r0 <NEXT> $ r4 = r16 panel <NEXT> $ i0 = $ r4 get width <NEXT> r17 = org xhtmlrenderer simple graphics2 d renderer r0 <NEXT> $ r5 = r17 panel <NEXT> $ i1 = $ r5 get height <NEXT> specialinvoke r12 < init > 0 0 $ i0 $ i1 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r2 = org xhtmlrenderer swing delegate user agent r0 <NEXT> $ r1 = r2 _image resource loader <NEXT> $ r1 shrink <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org xhtmlrenderer swing hover listener r0 <NEXT> r1 _previously hover = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> i0 = @ parameter3 <NEXT> i1 = @ parameter4 <NEXT> $ r5 = java util log level fine <NEXT> r11 = new java lang string buffer <NEXT> specialinvoke r11 < init > <NEXT> $ r6 = r11 append \ `` queue load for image uri \ `` <NEXT> $ r7 = $ r6 append r2 <NEXT> $ r8 = $ r7 to string <NEXT> org xhtmlrenderer util x r log general $ r5 $ r8 <NEXT> r13 = org xhtmlrenderer swing image load queue r0 <NEXT> $ r10 = r13 _load queue <NEXT> r12 = new org xhtmlrenderer swing image load item <NEXT> specialinvoke r12 < init > r1 r2 r3 i0 i1 <NEXT> $ r10 add last r12 <NEXT> r0 notify all <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label r8 = org xhtmlrenderer swing mouse tracker r0 <NEXT> $ r2 = r8 _handlers <NEXT> $ z0 = $ r2 contain key r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> r9 = org xhtmlrenderer swing mouse tracker r0 <NEXT> $ r6 = r9 _handlers <NEXT> $ r6 remove r1 <NEXT> label r10 = org xhtmlrenderer swing mouse tracker r0 <NEXT> $ z1 = r10 _enabled <NEXT> if $ z1 == 0 goto label3 <NEXT> r11 = org xhtmlrenderer swing mouse tracker r0 <NEXT> $ r3 = r11 _handlers <NEXT> $ i0 = $ r3 size <NEXT> if $ i0 ! = 0 goto label3 <NEXT> r12 = org xhtmlrenderer swing mouse tracker r0 <NEXT> $ r4 = r12 _panel <NEXT> $ r4 remove mouse listener r0 <NEXT> r13 = org xhtmlrenderer swing mouse tracker r0 <NEXT> $ r5 = r13 _panel <NEXT> $ r5 remove mouse motion listener r0 <NEXT> r14 = org xhtmlrenderer swing mouse tracker r0 <NEXT> r14 _enabled = 0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r7 = org xhtmlrenderer swing root panel r0 <NEXT> $ r2 = r7 enclose scroll pane <NEXT> if $ r2 == null goto label1 <NEXT> r8 = org xhtmlrenderer swing root panel r0 <NEXT> $ r4 = r8 enclose scroll pane <NEXT> $ r5 = $ r4 get viewport border bound <NEXT> return $ r5 <NEXT> if $ r2 == null goto label1 <NEXT> label r9 = org xhtmlrenderer swing root panel r0 <NEXT> r1 = r9 get size <NEXT> r6 = new java awt rectangle <NEXT> $ i1 = r1 width <NEXT> $ i0 = r1 height <NEXT> specialinvoke r6 < init > 0 0 $ i1 $ i0 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> b0 = @ parameter1 <NEXT> r1 = org xhtmlrenderer util configuration value for r0 <NEXT> if r1 ! = null goto label1 <NEXT> return b0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r3 = java lang byte value of r1 <NEXT> b1 = $ r3 byte value <NEXT> label goto label4 <NEXT> label return b1 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r3 = java lang system out <NEXT> $ r2 = new java lang string buffer <NEXT> specialinvoke $ r2 < init > <NEXT> $ r4 = $ r2 append \ `` byte \ `` <NEXT> $ i0 = org xhtmlrenderer util configuration value a byte \ `` xr test-config-byte\ <NEXT> $ r5 = java lang string value of $ i0 <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> $ r3 println $ r7 <NEXT> $ r9 = java lang system out <NEXT> $ r8 = new java lang string buffer <NEXT> specialinvoke $ r8 < init > <NEXT> $ r10 = $ r8 append \ `` short \ `` <NEXT> $ i1 = org xhtmlrenderer util configuration value a short \ `` xr test-config-short\ <NEXT> $ r11 = java lang string value of $ i1 <NEXT> $ r12 = $ r10 append $ r11 <NEXT> $ r13 = $ r12 to string <NEXT> $ r9 println $ r13 <NEXT> $ r15 = java lang system out <NEXT> $ r14 = new java lang string buffer <NEXT> specialinvoke $ r14 < init > <NEXT> $ r16 = $ r14 append \ `` int \ `` <NEXT> $ i2 = org xhtmlrenderer util configuration value a int \ `` xr test-config-int\ <NEXT> $ r17 = java lang string value of $ i2 <NEXT> $ r18 = $ r16 append $ r17 <NEXT> $ r19 = $ r18 to string <NEXT> $ r15 println $ r19 <NEXT> $ r21 = java lang system out <NEXT> $ r20 = new java lang string buffer <NEXT> specialinvoke $ r20 < init > <NEXT> $ r22 = $ r20 append \ `` long \ `` <NEXT> $ l3 = org xhtmlrenderer util configuration value a long \ `` xr test-config-long\ <NEXT> $ r23 = java lang string value of $ l3 <NEXT> $ r24 = $ r22 append $ r23 <NEXT> $ r25 = $ r24 to string <NEXT> $ r21 println $ r25 <NEXT> $ r27 = java lang system out <NEXT> $ r26 = new java lang string buffer <NEXT> specialinvoke $ r26 < init > <NEXT> $ r28 = $ r26 append \ `` float \ `` <NEXT> $ f0 = org xhtmlrenderer util configuration value a float \ `` xr test-config-float\ <NEXT> $ r29 = java lang string value of $ f0 <NEXT> $ r30 = $ r28 append $ r29 <NEXT> $ r31 = $ r30 to string <NEXT> $ r27 println $ r31 <NEXT> $ r33 = java lang system out <NEXT> $ r32 = new java lang string buffer <NEXT> specialinvoke $ r32 < init > <NEXT> $ r34 = $ r32 append \ `` double \ `` <NEXT> $ d0 = org xhtmlrenderer util configuration value a double \ `` xr test-config-double\ <NEXT> $ r35 = java lang string value of $ d0 <NEXT> $ r36 = $ r34 append $ r35 <NEXT> $ r37 = $ r36 to string <NEXT> $ r33 println $ r37 <NEXT> $ r39 = java lang system out <NEXT> $ r38 = new java lang string buffer <NEXT> specialinvoke $ r38 < init > <NEXT> $ r40 = $ r38 append \ `` boolean \ `` <NEXT> $ z0 = org xhtmlrenderer util configuration be true \ `` xr test-config-boolean\ <NEXT> $ r41 = java lang string value of $ z0 <NEXT> $ r42 = $ r40 append $ r41 <NEXT> $ r43 = $ r42 to string <NEXT> $ r39 println $ r43 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> f0 = @ parameter0 <NEXT> $ r1 = new org xhtmlrenderer util f s image writer <NEXT> specialinvoke $ r1 < init > \ `` jpg\ `` <NEXT> $ r1 set write compression mode 2 <NEXT> $ r1 set write compression type \ `` jpeg\ `` <NEXT> $ r1 set write compression quality f0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java awt color white <NEXT> org xhtmlrenderer util image util clear image r0 $ r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ z0 = r0 instanceof java awt image buffer image <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = java awt image buffer image r0 <NEXT> goto label2 <NEXT> label return r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ i1 = r0 get width null <NEXT> $ i2 = r0 get height null <NEXT> r2 = org xhtmlrenderer util image util create compatible buffer image $ i1 $ i2 i0 <NEXT> r1 = r2 create graphic <NEXT> r1 draw image r0 0 0 null null <NEXT> r1 dispose <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = specialinvoke r0 format message r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = specialinvoke r0 get tail r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 0 goto label1 <NEXT> if i0 < = 2 goto label2 <NEXT> label r8 = new java lang illegal argument exception <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> $ r3 = r7 append \ `` the metric set attribute must be in the set { 0,1,2 } and not \'\ `` <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 append \ `` \'\ `` <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke r8 < init > $ r6 <NEXT> throw r8 <NEXT> if i0 < = 2 goto label2 <NEXT> label r9 = org apache fontbox afm font metric r0 <NEXT> r9 metric set = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox afm font metric r0 <NEXT> $ r1 = r2 font name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox afm font metric r0 <NEXT> $ r1 = r2 full name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache fontbox afm font metric r0 <NEXT> $ i0 = r1 map scheme <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox afm font metric r0 <NEXT> $ r1 = r2 character set <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox afm font metric r0 <NEXT> $ r1 = r2 v vector <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache fontbox afm font metric r0 <NEXT> r2 v vector = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache fontbox afm font metric r0 <NEXT> $ f0 = r1 x height <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache fontbox afm font metric r0 <NEXT> $ f0 = r1 italic angle <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox afm font metric r0 <NEXT> $ r1 = r2 char width <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache fontbox afm font metric r0 <NEXT> r2 track kern = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache fontbox afm font metric r0 <NEXT> $ r2 = r3 track kern <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache fontbox afm font metric r0 <NEXT> $ r2 = r3 composite <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r1 = org apache fontbox afm font metric r0 <NEXT> r1 standard horizontal width = f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache fontbox afm track kern r0 <NEXT> $ f0 = r1 max kern <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache fontbox afm track kern r0 <NEXT> $ f0 = r1 max point size <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox cff c f f c i d font r0 <NEXT> $ r1 = r2 registry <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache fontbox cff c f f operator name map <NEXT> $ r2 = $ r1 get r0 <NEXT> $ r3 = org apache fontbox cff c f f operator $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache fontbox cff data input r0 <NEXT> r1 buffer position = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache fontbox cff data input r0 <NEXT> i0 = specialinvoke r3 read <NEXT> if i0 > = 0 goto label1 <NEXT> r2 = new java io e o f exception <NEXT> specialinvoke r2 < init > <NEXT> throw r2 <NEXT> if i0 > = 0 goto label1 <NEXT> label return i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache fontbox cff data input r0 <NEXT> i0 = specialinvoke r3 read <NEXT> r4 = org apache fontbox cff data input r0 <NEXT> i1 = specialinvoke r4 read <NEXT> $ i2 = i0 | i1 <NEXT> if $ i2 > = 0 goto label1 <NEXT> r2 = new java io e o f exception <NEXT> specialinvoke r2 < init > <NEXT> throw r2 <NEXT> if $ i2 > = 0 goto label1 <NEXT> label $ i3 = i0 < < 8 <NEXT> $ i4 = $ i3 | i1 <NEXT> return $ i4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache fontbox cff data output r0 <NEXT> $ r2 = r3 output buffer <NEXT> $ i0 = lengthof r1 <NEXT> $ r2 write r1 0 $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox cff type2 char string r0 <NEXT> $ r1 = r2 type2sequence <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache fontbox cmap c map r0 <NEXT> r2 cmap name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache fontbox cmap c map r0 <NEXT> $ i0 = r1 supplement <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache fontbox encode encode r0 <NEXT> $ r2 = r5 name to code <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java lang integer $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache fontbox ttf glyf composite comp r0 <NEXT> $ d0 = r1 scale10 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ d1 = double i0 <NEXT> r1 = org apache fontbox ttf glyf composite comp r0 <NEXT> $ d0 = r1 scale01 <NEXT> $ d5 = $ d1 * $ d0 <NEXT> $ d3 = double i1 <NEXT> r2 = org apache fontbox ttf glyf composite comp r0 <NEXT> $ d2 = r2 yscale <NEXT> $ d4 = $ d3 * $ d2 <NEXT> $ d6 = $ d5 + $ d4 <NEXT> $ f0 = float $ d6 <NEXT> $ i2 = java lang math round $ f0 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache fontbox ttf o s2 windows metric table r0 <NEXT> $ i0 = r1 u default char <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache fontbox ttf true type font r0 <NEXT> $ r1 = r3 get table \ `` post\ `` <NEXT> $ r2 = org apache fontbox ttf post script table $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache fontbox ttf true type font r0 <NEXT> $ r1 = r3 get table \ `` hhea\ `` <NEXT> $ r2 = org apache fontbox ttf horizontal header table $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache fontbox ttf true type font r0 <NEXT> $ r1 = r3 get table \ `` hmtx\ `` <NEXT> $ r2 = org apache fontbox ttf horizontal metric table $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org apache fontbox util charsets iso_8859_1 <NEXT> r3 = org apache fontbox ttf t t f data stream r0 <NEXT> $ r2 = r3 read string i0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache fontbox ttf t t f data stream r0 <NEXT> $ i4 = r3 read <NEXT> l0 = long $ i4 <NEXT> r4 = org apache fontbox ttf t t f data stream r0 <NEXT> $ i5 = r4 read <NEXT> l1 = long $ i5 <NEXT> r5 = org apache fontbox ttf t t f data stream r0 <NEXT> $ i6 = r5 read <NEXT> l2 = long $ i6 <NEXT> r6 = org apache fontbox ttf t t f data stream r0 <NEXT> $ i7 = r6 read <NEXT> l3 = long $ i7 <NEXT> $ b8 = l3 cmp 0l <NEXT> if $ b8 > = 0 goto label1 <NEXT> r2 = new java io e o f exception <NEXT> specialinvoke r2 < init > <NEXT> throw r2 <NEXT> if $ b8 > = 0 goto label1 <NEXT> label $ l10 = l0 < < 24 <NEXT> $ l9 = l1 < < 16 <NEXT> $ l12 = $ l10 + $ l9 <NEXT> $ l11 = l2 < < 8 <NEXT> $ l14 = $ l12 + $ l11 <NEXT> $ l13 = l3 < < 0 <NEXT> $ l15 = $ l14 + $ l13 <NEXT> return $ l15 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox type1 type1 font r0 <NEXT> $ r1 = r2 notice <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache fontbox type1 type1 font r0 <NEXT> $ r1 = r2 family name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new org apache fontbox type1 type1 font <NEXT> specialinvoke r5 < init > r1 r2 <NEXT> r6 = org apache fontbox type1 type1 parser r0 <NEXT> r6 font = r5 <NEXT> r7 = org apache fontbox type1 type1 parser r0 <NEXT> specialinvoke r7 parse a s c i i r1 <NEXT> $ i0 = lengthof r2 <NEXT> if $ i0 < = 0 goto label1 <NEXT> r8 = org apache fontbox type1 type1 parser r0 <NEXT> specialinvoke r8 parse binary r2 <NEXT> label r9 = org apache fontbox type1 type1 parser r0 <NEXT> $ r4 = r9 font <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org objectweb fractal adl type type interface <NEXT> if $ z0 == 0 goto label1 <NEXT> r1 = org objectweb fractal adl type type interface r0 <NEXT> $ r2 = \ `` optional\ `` <NEXT> $ r3 = r1 get contingency <NEXT> $ z1 = $ r2 equal $ r3 <NEXT> return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org objectweb fractal adl type type interface <NEXT> if $ z0 == 0 goto label1 <NEXT> r1 = org objectweb fractal adl type type interface r0 <NEXT> $ r2 = \ `` collection\ `` <NEXT> $ r3 = r1 get cardinality <NEXT> $ z1 = $ r2 equal $ r3 <NEXT> return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> org objectweb fractal adl util printer log 2 r0 <NEXT> return <END>
<BEG> $ i0 = org objectweb fractal adl util printer level <NEXT> if $ i0 > 2 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 > 2 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = gate annotation annotation set impl r0 <NEXT> $ r4 = r14 annots by id <NEXT> $ r5 = r1 get id <NEXT> $ r6 = $ r4 put $ r5 r1 <NEXT> r2 = gate annotation $ r6 <NEXT> if r2 == null goto label2 <NEXT> r15 = gate annotation annotation set impl r0 <NEXT> $ r10 = r15 annots by type <NEXT> if $ r10 == null goto label1 <NEXT> r16 = gate annotation annotation set impl r0 <NEXT> r16 remove from type index r2 <NEXT> label r17 = gate annotation annotation set impl r0 <NEXT> $ r11 = r17 annots by start node <NEXT> if $ r11 == null goto label2 <NEXT> r18 = gate annotation annotation set impl r0 <NEXT> r18 remove from offset index r2 <NEXT> label r19 = gate annotation annotation set impl r0 <NEXT> $ r12 = r19 annots by type <NEXT> if $ r12 == null goto label3 <NEXT> r20 = gate annotation annotation set impl r0 <NEXT> r20 add to type index r1 <NEXT> label r21 = gate annotation annotation set impl r0 <NEXT> $ r7 = r21 annots by start node <NEXT> if $ r7 == null goto label4 <NEXT> r22 = gate annotation annotation set impl r0 <NEXT> r22 add to start offset index r1 <NEXT> label r13 = new gate event annotation set event <NEXT> r23 = gate annotation annotation set impl r0 <NEXT> $ r9 = r23 doc <NEXT> r24 = gate document $ r9 <NEXT> specialinvoke r13 < init > r0 201 r24 r1 <NEXT> r25 = gate annotation annotation set impl r0 <NEXT> r25 fire annotation add r13 <NEXT> r26 = gate annotation annotation set impl r0 <NEXT> r27 = gate event gate event r13 <NEXT> r26 fire gate event r27 <NEXT> if r2 == r1 goto label5 <NEXT> $ z0 = 1 <NEXT> goto label6 <NEXT> label return $ z0 <NEXT> if r2 == r1 goto label5 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> $ r5 = new java lang unsupported operation exception <NEXT> specialinvoke $ r5 < init > <NEXT> throw $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = gate config config xml handler r0 <NEXT> $ r2 = r3 _seh <NEXT> $ r2 warn r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r4 = gate corpus corpus impl r0 <NEXT> $ r1 = r4 document list <NEXT> if $ r1 == null goto label1 <NEXT> r5 = gate corpus corpus impl r0 <NEXT> $ r2 = r5 document list <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = gate corpus corpus impl r0 <NEXT> $ r3 = r6 document list <NEXT> r7 = gate corpus corpus impl r0 <NEXT> r7 add all $ r3 <NEXT> label r8 = gate resource r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r7 = gate corpus document impl r0 <NEXT> $ r1 = r7 default annots <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = new gate annotation annotation set impl <NEXT> r8 = gate document r0 <NEXT> specialinvoke r5 < init > r8 \ `` \ `` <NEXT> r9 = gate corpus document impl r0 <NEXT> r10 = gate annotation set r5 <NEXT> r9 default annots = r10 <NEXT> r6 = new gate event document event <NEXT> r11 = gate document r0 <NEXT> specialinvoke r6 < init > r11 101 \ `` \ `` <NEXT> r12 = gate corpus document impl r0 <NEXT> r12 fire annotation set add r6 <NEXT> label r13 = gate corpus document impl r0 <NEXT> $ r2 = r13 default annots <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = gate document r0 <NEXT> $ r1 = gate corpus document stax utils to xml r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate corpus mime type r0 <NEXT> r2 type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = gate corpus mime type r0 <NEXT> $ r1 = r2 subtype <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = gate corpus mime type r0 <NEXT> $ r2 = r3 parameter <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r6 = gate corpus serial corpus impl r0 <NEXT> $ r1 = r6 doc data list <NEXT> $ i1 = $ r1 size <NEXT> if i0 < $ i1 goto label1 <NEXT> return null <NEXT> if i0 < $ i1 goto label1 <NEXT> label r7 = gate corpus serial corpus impl r0 <NEXT> $ r2 = r7 doc data list <NEXT> $ r3 = $ r2 get i0 <NEXT> $ r4 = gate corpus document data $ r3 <NEXT> $ r5 = $ r4 get persistent i d <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 index of \ `` < gate document\ `` <NEXT> if $ i0 ! = -1 goto label1 <NEXT> $ i1 = r0 index of \ `` gate document\ `` <NEXT> if $ i1 == -1 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i1 == -1 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r9 = new gate creole execution exception <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> $ r3 = r8 append \ `` controller \ `` <NEXT> $ r4 = r0 get class <NEXT> $ r5 = $ r3 append $ r4 <NEXT> $ r6 = $ r5 append \ `` hasn\'t overriden the execute impl method\ `` <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke r9 < init > $ r7 <NEXT> r10 = java lang throwable r9 <NEXT> throw r10 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole abstract language resource r0 <NEXT> $ r1 = r2 lr persistent id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole abstract visual resource r0 <NEXT> $ r1 = r2 feature <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate creole abstract visual resource r0 <NEXT> r2 feature = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang runtime exception <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` class \ `` <NEXT> $ r5 = r0 get class <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 append \ `` hasn\'t implement the set target method ! \ `` <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke $ r2 < init > $ r8 <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate creole abstract visual resource r0 <NEXT> r2 handle = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r1 = gate creole annic apache lucene document field r0 <NEXT> r1 boost = f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = gate creole annic apache lucene document field r0 <NEXT> $ z0 = r1 be store <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole annic apache lucene index index reader r0 <NEXT> $ r1 = r2 directory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole annic apache lucene search explanation r0 <NEXT> $ r1 = r2 description <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = new java util array list <NEXT> specialinvoke r6 < init > <NEXT> r11 = gate creole annic apache lucene search index searcher r0 <NEXT> r11 query type = r6 <NEXT> r7 = new java util array list <NEXT> specialinvoke r7 < init > <NEXT> r12 = gate creole annic apache lucene search index searcher r0 <NEXT> r12 first term position = r7 <NEXT> r8 = new java util array list <NEXT> specialinvoke r8 < init > <NEXT> r13 = gate creole annic apache lucene search index searcher r0 <NEXT> r13 document number = r8 <NEXT> r9 = new java util array list <NEXT> specialinvoke r9 < init > <NEXT> r14 = gate creole annic apache lucene search index searcher r0 <NEXT> r14 pattern length = r9 <NEXT> r10 = new java util array list <NEXT> specialinvoke r10 < init > <NEXT> r15 = gate creole annic apache lucene search index searcher r0 <NEXT> r15 frequency = r10 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new gate creole annic apache lucene search boolean query $ boolean weight <NEXT> r4 = gate creole annic apache lucene search boolean query r0 <NEXT> specialinvoke r3 < init > r4 r1 <NEXT> r5 = gate creole annic apache lucene search weight r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r22 = gate creole annic apache lucene search boolean query r0 <NEXT> $ r4 = r22 clause <NEXT> $ i0 = $ r4 size <NEXT> if $ i0 ! = 1 goto label3 <NEXT> r23 = gate creole annic apache lucene search boolean query r0 <NEXT> $ r12 = r23 clause <NEXT> $ r13 = $ r12 element at 0 <NEXT> r17 = gate creole annic apache lucene search boolean clause $ r13 <NEXT> $ z2 = r17 prohibit <NEXT> if $ z2 ! = 0 goto label3 <NEXT> $ r14 = r17 query <NEXT> r18 = $ r14 rewrite r1 <NEXT> r24 = gate creole annic apache lucene search boolean query r0 <NEXT> $ f0 = r24 get boost <NEXT> $ b1 = $ f0 cmpl 1 0f <NEXT> if $ b1 == 0 goto label2 <NEXT> $ r15 = r17 query <NEXT> if r18 ! = $ r15 goto label1 <NEXT> $ r16 = r18 clone <NEXT> r18 = gate creole annic apache lucene search query $ r16 <NEXT> label r25 = gate creole annic apache lucene search boolean query r0 <NEXT> $ f1 = r25 get boost <NEXT> $ f2 = r18 get boost <NEXT> $ f3 = $ f1 * $ f2 <NEXT> r18 set boost $ f3 <NEXT> label return r18 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> label r19 = null <NEXT> i2 = 0 <NEXT> label r26 = gate creole annic apache lucene search boolean query r0 <NEXT> $ r20 = r26 clause <NEXT> $ i3 = $ r20 size <NEXT> if i2 > = $ i3 goto label7 <NEXT> r27 = gate creole annic apache lucene search boolean query r0 <NEXT> $ r5 = r27 clause <NEXT> $ r6 = $ r5 element at i2 <NEXT> r2 = gate creole annic apache lucene search boolean clause $ r6 <NEXT> $ r7 = r2 query <NEXT> r3 = $ r7 rewrite r1 <NEXT> $ r8 = r2 query <NEXT> if r3 == $ r8 goto label6 <NEXT> if r19 ! = null goto label5 <NEXT> r28 = gate creole annic apache lucene search boolean query r0 <NEXT> $ r11 = r28 clone <NEXT> r19 = gate creole annic apache lucene search boolean query $ r11 <NEXT> label $ r10 = r19 clause <NEXT> r21 = new gate creole annic apache lucene search boolean clause <NEXT> $ z1 = r2 require <NEXT> $ z0 = r2 prohibit <NEXT> specialinvoke r21 < init > r3 $ z1 $ z0 <NEXT> $ r10 set element at r21 i2 <NEXT> label i2 = i2 + 1 <NEXT> goto label4 <NEXT> if i2 > = $ i3 goto label7 <NEXT> label if r19 == null goto label8 <NEXT> r29 = gate creole annic apache lucene search query r19 <NEXT> return r29 <NEXT> label if r19 == null goto label8 <NEXT> label return r0 <END>
<BEG> r0 = @ this <NEXT> r8 = gate creole annic apache lucene store f s directory r0 <NEXT> $ i0 = r8 ref count <NEXT> $ i1 = $ i0 - 1 <NEXT> r9 = gate creole annic apache lucene store f s directory r0 <NEXT> r9 ref count = $ i1 <NEXT> if $ i1 > 0 goto label5 <NEXT> $ r3 = gate creole annic apache lucene store f s directory directory <NEXT> entermonitor $ r3 <NEXT> label $ r5 = gate creole annic apache lucene store f s directory directory <NEXT> r10 = gate creole annic apache lucene store f s directory r0 <NEXT> $ r4 = r10 directory <NEXT> $ r5 remove $ r4 <NEXT> exitmonitor $ r3 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = gate creole annic apache lucene store r a m directory r0 <NEXT> $ r3 = r5 file <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = gate creole annic apache lucene store r a m file $ r4 <NEXT> if r2 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if r2 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = gate creole annic apache lucene util priority queue r0 <NEXT> $ i1 = r4 size <NEXT> r5 = gate creole annic apache lucene util priority queue r0 <NEXT> $ i0 = r5 max size <NEXT> if $ i1 > = $ i0 goto label1 <NEXT> r6 = gate creole annic apache lucene util priority queue r0 <NEXT> r6 put r1 <NEXT> return 1 <NEXT> if $ i1 > = $ i0 goto label1 <NEXT> label r7 = gate creole annic apache lucene util priority queue r0 <NEXT> $ i2 = r7 size <NEXT> if $ i2 < = 0 goto label2 <NEXT> r8 = gate creole annic apache lucene util priority queue r0 <NEXT> $ r2 = r8 top <NEXT> r9 = gate creole annic apache lucene util priority queue r0 <NEXT> $ z0 = r9 less than r1 $ r2 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r10 = gate creole annic apache lucene util priority queue r0 <NEXT> $ r3 = r10 heap <NEXT> $ r3 [ 1 ] = r1 <NEXT> r11 = gate creole annic apache lucene util priority queue r0 <NEXT> r11 adjust top <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = gate creole annic apache lucene util priority queue r0 <NEXT> $ i0 = r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole annic lucene lucene query result r0 <NEXT> $ r1 = r2 gate annotation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang runtime exception <NEXT> specialinvoke $ r2 < init > \ `` export result method be not implement yet ! \ `` <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole annic lucene lucene search thread r0 <NEXT> $ r1 = r2 query <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate creole annic pattern annotation r0 <NEXT> r2 type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate creole annic pattern annotation r0 <NEXT> r2 text = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = gate creole annic pattern annotation r0 <NEXT> $ r2 = r5 feature <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = gate creole annic pattern annotation r0 <NEXT> $ i0 = r1 position <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate creole annotation schema r0 <NEXT> r2 annotation name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = new org jdom input s a x builder <NEXT> specialinvoke r11 < init > 0 <NEXT> label r8 = r11 build r1 <NEXT> label goto label4 <NEXT> label goto label6 <NEXT> label r17 = gate creole annotation schema r0 <NEXT> specialinvoke r17 work with j dom r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 resource unload r1 <NEXT> $ r2 = r1 get resource <NEXT> r4 = gate creole conditional serial analyser controller r0 <NEXT> $ r3 = r4 corpus <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> r5 = gate creole conditional serial analyser controller r0 <NEXT> r5 set corpus null <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 cleanup <NEXT> r2 = gate creole conditional serial controller r0 <NEXT> $ r1 = r2 strategy list <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = gate creole creole register impl r0 <NEXT> $ r1 = r3 application type <NEXT> $ r2 = java util collection unmodifiable set $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = gate creole creole register impl r0 <NEXT> $ r2 = specialinvoke r3 get v r for resource r1 1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole ir query result r0 <NEXT> $ r1 = r2 field value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate creole parameter r0 <NEXT> r2 help u r l = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole parameter list r0 <NEXT> $ r1 = r2 runtime parameter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z2 = 0 <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> r7 = new java util array list <NEXT> specialinvoke r7 < init > <NEXT> $ r6 = r2 next <NEXT> r4 = gate creole parameter $ r6 <NEXT> r7 add r4 <NEXT> r8 = gate creole parameter list r0 <NEXT> z2 = r8 add r7 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return z2 <END>
<BEG> r0 = @ this <NEXT> r3 = gate creole plugin r0 <NEXT> $ r1 = r3 version <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r2 = \ `` \ `` <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = gate creole plugin r0 <NEXT> $ r2 = r4 version <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole resource data r0 <NEXT> $ r1 = r2 name <NEXT> $ i0 = $ r1 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole resource data r0 <NEXT> $ r1 = r2 unmodifiable instantiation stack <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = gate creole resource data r0 <NEXT> $ r2 = r3 instantiation stack <NEXT> $ r2 add 0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate creole resource data r0 <NEXT> r2 class name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole resource data r0 <NEXT> $ r1 = r2 jar file url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole resource data r0 <NEXT> $ r1 = r2 xml file url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = gate creole resource data r0 <NEXT> $ r1 = r2 resource display <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = specialinvoke r0 add r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r16 = gate document exporter r0 <NEXT> $ r1 = r16 filter <NEXT> if $ r1 ! = null goto label1 <NEXT> r15 = new gate util extension file filter <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> r17 = gate document exporter r0 <NEXT> $ r5 = r17 file type <NEXT> $ r6 = r14 append $ r5 <NEXT> $ r7 = $ r6 append \ `` file * \ `` <NEXT> r18 = gate document exporter r0 <NEXT> $ r8 = r18 default extension <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ `` \ `` <NEXT> $ r11 = $ r10 to string <NEXT> $ r12 = newarray java lang string [ 1 ] <NEXT> r19 = gate document exporter r0 <NEXT> $ r13 = r19 default extension <NEXT> $ r12 [ 0 ] = $ r13 <NEXT> specialinvoke r15 < init > $ r11 $ r12 <NEXT> r20 = gate document exporter r0 <NEXT> r21 = javax swing filechooser file filter r15 <NEXT> r20 filter = r21 <NEXT> label r22 = gate document exporter r0 <NEXT> $ r2 = r22 filter <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = gate event corpus event r0 <NEXT> $ r1 = r2 document l r i d <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = gate event datastore event r0 <NEXT> $ r1 = r2 resource <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = gate factory create resource r0 r1 null null <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> gate factory check duplication context r1 <NEXT> r2 = gate factory new feature map <NEXT> $ r5 = r0 entry set <NEXT> r3 = $ r5 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r6 = r3 next <NEXT> r4 = java util map $ entry $ r6 <NEXT> r10 = r4 get value <NEXT> $ z1 = r10 instanceof gate resource <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r9 = gate resource r10 <NEXT> r10 = gate factory duplicate $ r9 r1 <NEXT> label $ r7 = r4 get key <NEXT> r2 put $ r7 r10 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r2 <END>
<BEG> $ r0 = gate gate register i r engine <NEXT> $ r1 = java util collection unmodifiable set $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = gate gate know plugins <NEXT> $ z0 = $ r1 contain r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = gate gui creole manager plugin update manager get default plugins <NEXT> $ z1 = $ r2 contain r0 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r3 = gate gate know plugins <NEXT> $ r3 add r0 <END>
<BEG> $ r0 = gate gate user config file <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = gate gui corpus filler component r0 <NEXT> $ r1 = r2 extension <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = gate gui docview abstract document view r0 <NEXT> $ r1 = r2 document <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ z0 = r1 instanceof gate gui docview textual document view $ highlight data <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = gate gui docview textual document view r0 <NEXT> $ r2 = r6 text view <NEXT> $ r3 = $ r2 get highlighter <NEXT> $ r4 = gate gui docview textual document view $ highlight data r1 <NEXT> $ r5 = $ r4 tag <NEXT> $ r3 change highlight $ r5 i0 i1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = r0 get feature <NEXT> r1 = $ r3 get \ `` gate teamware input annotation sets\ `` <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 instanceof java util set <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r7 = java util set r1 <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r4 = new java util hash set <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = r0 get feature <NEXT> $ r5 put \ `` gate teamware input annotation sets\ <NEXT> gate gui teamware teamware utils populate input set name for controller $ r4 r0 1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = gate html neko html document handler r0 <NEXT> r3 end element r1 r2 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return \ `` datastore\ `` <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> $ r3 = new java util array list <NEXT> specialinvoke $ r3 < init > <NEXT> i6 = 0 <NEXT> label $ i2 = r0 get maximum arity <NEXT> if i6 > = $ i2 goto label04 <NEXT> $ i5 = i6 + 1 <NEXT> r11 = newarray int [ $ i5 ] <NEXT> i7 = 0 <NEXT> label if i7 > = i6 goto label03 <NEXT> r11 [ i7 ] = -1 <NEXT> i7 = i7 + 1 <NEXT> goto label02 <NEXT> label if i7 > = i6 goto label03 <NEXT> label r11 [ i6 ] = i0 <NEXT> $ r10 = r0 get relation r1 r11 <NEXT> $ r3 add all $ r10 <NEXT> i6 = i6 + 1 <NEXT> goto label01 <NEXT> if i6 > = $ i2 goto label04 <NEXT> label $ r4 = new java util tree set <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = java lang integer value of i0 <NEXT> $ r4 add $ r5 <NEXT> r13 = $ r3 iterator <NEXT> label $ z1 = r13 have next <NEXT> if $ z1 == 0 goto label08 <NEXT> $ r8 = r13 next <NEXT> r14 = gate relation relation $ r8 <NEXT> r15 = r14 get member <NEXT> i8 = lengthof r15 <NEXT> i9 = 0 <NEXT> label if i9 > = i8 goto label07 <NEXT> i1 = r15 [ i9 ] <NEXT> $ r9 = java lang integer value of i1 <NEXT> $ r4 add $ r9 <NEXT> i9 = i9 + 1 <NEXT> goto label06 <NEXT> label if i9 > = i8 goto label07 <NEXT> label goto label05 <NEXT> if $ z1 == 0 goto label08 <NEXT> label $ i3 = $ r4 size <NEXT> r16 = newarray int [ $ i3 ] <NEXT> i10 = 0 <NEXT> r17 = $ r4 iterator <NEXT> label $ z2 = r17 have next <NEXT> if $ z2 == 0 goto label10 <NEXT> $ r6 = r17 next <NEXT> $ r7 = java lang integer $ r6 <NEXT> i11 = $ r7 int value <NEXT> $ i4 = i10 <NEXT> i10 = i10 + 1 <NEXT> r16 [ $ i4 ] = i11 <NEXT> goto label09 <NEXT> if $ z2 == 0 goto label10 <NEXT> label return r16 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = @ parameter0 <NEXT> r8 = null <NEXT> $ z0 = r7 be show <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z2 = r7 instanceof javax swing j popup menu <NEXT> if $ z2 == 0 goto label1 <NEXT> $ r6 = javax swing j popup menu r7 <NEXT> r9 = $ r6 get invoker <NEXT> if r9 == null goto label1 <NEXT> r7 = r9 <NEXT> label $ z3 = r7 be show <NEXT> if $ z3 == 0 goto label4 <NEXT> r10 = r7 get location on screen <NEXT> r8 = r7 get graphic configuration <NEXT> r1 = java awt graphic environment get local graphic environment <NEXT> r2 = r1 get screen device <NEXT> i0 = lengthof r2 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label4 <NEXT> r3 = r2 [ i2 ] <NEXT> $ i1 = r3 get type <NEXT> if $ i1 ! = 0 goto label3 <NEXT> r4 = r3 get default configuration <NEXT> $ r5 = r4 get bound <NEXT> $ z1 = $ r5 contain r10 <NEXT> if $ z1 == 0 goto label3 <NEXT> r8 = r4 <NEXT> goto label4 <NEXT> label return r8 <NEXT> if $ z1 == 0 goto label3 <NEXT> label i2 = i2 + 1 <NEXT> goto label2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = gate swing wait dialog r0 <NEXT> $ r2 = r12 center box <NEXT> $ r2 remove all <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> r13 = gate swing wait dialog r0 <NEXT> $ r8 = r13 center box <NEXT> $ r7 = r1 [ i1 ] <NEXT> $ r8 add $ r7 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label r14 = gate swing wait dialog r0 <NEXT> $ r3 = r14 center box <NEXT> $ r3 validate <NEXT> r15 = gate swing wait dialog r0 <NEXT> r15 pack <NEXT> r16 = gate swing wait dialog r0 <NEXT> r16 stop = 0 <NEXT> r11 = new java lang thread <NEXT> $ r5 = java lang thread current thread <NEXT> $ r6 = $ r5 get thread group <NEXT> specialinvoke r11 < init > $ r6 r0 \ `` wait dialog2\ `` <NEXT> r11 set priority 10 <NEXT> r11 start <NEXT> r17 = gate swing wait dialog r0 <NEXT> r17 set visible 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 exist <NEXT> if $ z0 == 0 goto label1 <NEXT> specialinvoke r0 ensure file be visible r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = gate swing x j table r0 <NEXT> r1 enable hiding column = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = gate swing x j table r0 <NEXT> $ r2 = r5 column data <NEXT> $ r3 = $ r2 get i0 <NEXT> $ r4 = gate swing x j table $ column data $ r3 <NEXT> $ r4 comparator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = gate util abstract feature bearer r0 <NEXT> r2 feature = r1 <NEXT> return <END>
<BEG> $ z0 = gate util benchmark benchmarking enable <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label2 <NEXT> $ r3 = gate util err err <NEXT> $ c1 = gate util err pad char <NEXT> $ r3 print $ c1 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label2 <NEXT> label $ r1 = gate util err err <NEXT> $ r1 print r0 <NEXT> $ r2 = gate util err err <NEXT> $ r2 flush <NEXT> return <END>
<BEG> return \ `` gate resources\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 get i d <NEXT> r3 = gate util gate class loader r0 <NEXT> r3 forget class loader $ r2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r4 = gate util language analyser document processor r0 <NEXT> $ r1 = r4 analyser <NEXT> r5 = gate resource $ r1 <NEXT> gate factory delete resource r5 <NEXT> r6 = gate util language analyser document processor r0 <NEXT> $ r2 = r6 corpus <NEXT> if $ r2 == null goto label1 <NEXT> r7 = gate util language analyser document processor r0 <NEXT> $ r3 = r7 corpus <NEXT> r8 = gate resource $ r3 <NEXT> gate factory delete resource r8 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = gate util maven utils extra cache directory <NEXT> $ r1 add 0 r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = gate util r b tree map r0 <NEXT> $ r3 = r5 root <NEXT> if $ r3 ! = null goto label1 <NEXT> return null <NEXT> if $ r3 ! = null goto label1 <NEXT> label r6 = gate util r b tree map r0 <NEXT> r2 = specialinvoke r6 get ceil entry r1 <NEXT> if r2 ! = null goto label2 <NEXT> label $ r4 = r2 value <NEXT> return $ r4 <END>
<BEG> $ z0 = gate util tool unicode enable <NEXT> return $ z0 <END>
<BEG> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 1 <NEXT> if r1 ! = null goto label1 <NEXT> label r2 = r1 trim <NEXT> $ z0 = r2 equal \ `` \ `` <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ z1 = r2 equal \ `` * \ `` <NEXT> if $ z1 == 0 goto label3 <NEXT> label return 1 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ r0 = gate main version <NEXT> $ i0 = gate util version comparator compare version $ r0 r2 <NEXT> if $ i0 < 0 goto label4 <NEXT> $ z2 = 1 <NEXT> goto label5 <NEXT> label return $ z2 <NEXT> if $ i0 < 0 goto label4 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new gate util xml x m l11 stream writer <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = javax xml stream x m l stream writer r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = gate util xml x m l11 stream writer r0 <NEXT> r1 write start document \ `` 1 1\ `` <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = gate utils string for r0 r1 <NEXT> $ r3 = gate utils clean string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = gate simple annotation r1 <NEXT> $ r2 = gate utils start r5 <NEXT> $ l0 = $ r2 long value <NEXT> r6 = gate simple annotation r1 <NEXT> $ r3 = gate utils end r6 <NEXT> $ l1 = $ r3 long value <NEXT> $ r4 = gate utils get coextensive annotation worker r0 null $ l0 $ l1 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r6 = gate simple annotation r1 <NEXT> $ r3 = gate utils start r6 <NEXT> $ l0 = $ r3 long value <NEXT> r7 = gate simple annotation r1 <NEXT> $ r4 = gate utils end r7 <NEXT> $ l1 = $ r4 long value <NEXT> $ r5 = gate utils get coextensive annotation worker r0 r2 $ l0 $ l1 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r2 = gate gate get creole register <NEXT> r12 = new gate creole plugin $ directory <NEXT> $ r4 = r0 to u r i <NEXT> $ r5 = $ r4 to u r l <NEXT> specialinvoke r12 < init > $ r5 <NEXT> r15 = gate creole plugin r12 <NEXT> $ r2 register plugin r15 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = com google googlejavaformat input output r0 <NEXT> $ r1 = r4 line <NEXT> $ r2 = $ r1 get i0 <NEXT> $ r3 = java lang string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com google googlejavaformat java java input r0 <NEXT> $ r1 = r2 text <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org graalvm home version create r1 <NEXT> r3 = org graalvm home version r0 <NEXT> $ i0 = r3 compare to $ r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org graalvm nativeimage image singleton lookup class \ `` lorg graalvm nativeimage impl c type conversion support \ `` <NEXT> $ r2 = org graalvm nativeimage impl c type conversion support $ r1 <NEXT> $ r3 = $ r2 to c string r0 <NEXT> return $ r3 <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if i0 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r4 = java lang thread current thread <NEXT> r1 = $ r4 get stack trace <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r0 [ i1 ] <NEXT> $ r5 = org graalvm nativeimage image singleton lookup class \ `` lorg graalvm nativeimage impl runtime class initialization support \ `` <NEXT> $ r7 = org graalvm nativeimage impl runtime class initialization support $ r5 <NEXT> $ r6 = new java lang string builder <NEXT> specialinvoke $ r6 < init > <NEXT> $ r8 = $ r6 append \ `` from feature \ `` <NEXT> $ r9 = org graalvm nativeimage host runtime class initialization get caller r1 <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 to string <NEXT> $ r7 initialize at run time r3 $ r11 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = lengthof r0 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label7 <NEXT> r2 = r0 [ i2 ] <NEXT> $ z0 = r2 be array <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ z1 = r2 be interface <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ i1 = r2 get modifier <NEXT> $ z2 = java lang reflect modifier be abstract $ i1 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ r15 = new java lang illegal argument exception <NEXT> $ r16 = new java lang string builder <NEXT> specialinvoke $ r16 < init > <NEXT> $ r17 = $ r16 append \ `` class \ `` <NEXT> $ r18 = r2 get type name <NEXT> $ r19 = $ r17 append $ r18 <NEXT> $ r20 = $ r19 append \ `` can not be instantiate reflectively it must be a non-abstract instance type \ `` <NEXT> $ r21 = $ r20 to string <NEXT> specialinvoke $ r15 < init > $ r21 <NEXT> throw $ r15 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ r5 = newarray java lang class [ 0 ] <NEXT> r3 = r2 get declare constructor $ r5 <NEXT> label goto label6 <NEXT> label $ r6 = newarray java lang reflect executable [ 1 ] <NEXT> $ r6 [ 0 ] = r3 <NEXT> org graalvm nativeimage host runtime reflection register $ r6 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label7 <NEXT> label return <END>
<BEG> $ r0 = \ `` buildtime\ `` <NEXT> $ r1 = java lang system get property \ `` org graalvm nativeimage imagecode\ `` <NEXT> $ z0 = $ r0 equal $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org graalvm nativeimage image info in image code <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r1 = org graalvm nativeimage impl image singleton support get <NEXT> $ z1 = $ r1 contain r0 <NEXT> return $ z1 <END>
<BEG> $ r0 = org graalvm nativeimage image singleton lookup class \ `` lorg graalvm nativeimage impl process property support \ `` <NEXT> $ r1 = org graalvm nativeimage impl process property support $ r0 <NEXT> $ l0 = $ r1 get process i d <NEXT> return $ l0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org graalvm nativeimage image singleton lookup class \ `` lorg graalvm nativeimage impl process property support \ `` <NEXT> $ r2 = org graalvm nativeimage impl process property support $ r1 <NEXT> $ z0 = $ r2 set argument vector program name r0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org graalvm option option descriptor r0 <NEXT> $ r1 = r2 deprecation message <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org graalvm polyglot context r0 <NEXT> $ r2 = r3 impl <NEXT> $ z0 = $ r2 initialize language r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org graalvm polyglot context $ builder <NEXT> $ r2 = org graalvm polyglot context empty <NEXT> $ r2 get class <NEXT> specialinvoke $ r1 < init > $ r2 r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org graalvm polyglot engine r0 <NEXT> r1 close 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org graalvm polyglot instrument r0 <NEXT> $ r1 = r3 impl <NEXT> $ r2 = $ r1 get id <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org graalvm polyglot instrument r0 <NEXT> $ r2 = r4 impl <NEXT> $ r3 = $ r2 lookup r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org graalvm polyglot language r0 <NEXT> $ r1 = r2 impl <NEXT> $ z0 = $ r1 be interactive <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org graalvm polyglot language r0 <NEXT> $ r1 = r3 impl <NEXT> $ r2 = $ r1 get option <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r2 = org graalvm polyglot management management impl <NEXT> r3 = org graalvm polyglot management execution event r0 <NEXT> $ r1 = r3 impl <NEXT> $ z0 = $ r2 be execution event root $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r2 = org graalvm polyglot management management impl <NEXT> r3 = org graalvm polyglot management execution listener r0 <NEXT> $ r1 = r3 impl <NEXT> $ r2 close execution listener $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org graalvm polyglot polyglot exception r0 <NEXT> $ r1 = r2 impl <NEXT> $ z0 = $ r1 be internal error <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org graalvm polyglot source get impl <NEXT> r3 = org graalvm polyglot source r0 <NEXT> $ r2 = r3 impl <NEXT> $ i0 = $ r1 get length $ r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org graalvm polyglot source get impl <NEXT> r3 = org graalvm polyglot source r0 <NEXT> $ r2 = r3 impl <NEXT> $ z0 = $ r1 have character $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org graalvm polyglot source get impl <NEXT> r3 = org graalvm polyglot source r0 <NEXT> $ r2 = r3 impl <NEXT> $ i1 = $ r1 get line length $ r2 i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org graalvm polyglot source $ builder <NEXT> $ r3 = org graalvm polyglot source empty <NEXT> $ r3 get class <NEXT> specialinvoke $ r2 < init > $ r3 r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org graalvm polyglot source get impl <NEXT> $ r2 = $ r1 find mime type r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r2 = org graalvm polyglot source section impl <NEXT> r3 = org graalvm polyglot source section r0 <NEXT> $ r1 = r3 impl <NEXT> $ i0 = $ r2 get end line $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r2 = org graalvm polyglot source section impl <NEXT> r3 = org graalvm polyglot source section r0 <NEXT> $ r1 = r3 impl <NEXT> $ i0 = $ r2 get char end index $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r3 = org graalvm polyglot value r0 <NEXT> $ r2 = r3 impl <NEXT> r4 = org graalvm polyglot value r0 <NEXT> $ r1 = r4 receiver <NEXT> $ z0 = $ r2 remove array element $ r1 l0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org graalvm polyglot value r0 <NEXT> $ r2 = r3 impl <NEXT> r4 = org graalvm polyglot value r0 <NEXT> $ r1 = r4 receiver <NEXT> $ z0 = $ r2 be string $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org graalvm polyglot value r0 <NEXT> $ r1 = r3 impl <NEXT> $ r2 = $ r1 get context <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java lang boolean value of 1 <NEXT> r4 = graphql analysis query traverser r0 <NEXT> specialinvoke r4 visit impl r1 $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = graphql execution execution strategy r0 <NEXT> $ r3 = r6 resolve field with info r1 r2 <NEXT> $ r4 = execution strategy $ get field value__4 bootstrap $ <NEXT> $ r5 = $ r3 then compose $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = graphql execution merge field r0 <NEXT> $ r1 = r2 field <NEXT> r3 = java util list $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = graphql execution input r0 <NEXT> $ r1 = r2 locale <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 build <NEXT> r4 = graphql graph q l r0 <NEXT> $ r3 = r4 execute $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 build <NEXT> r4 = graphql graph q l r0 <NEXT> $ r3 = r4 execute async $ r2 <NEXT> return $ r3 <END>
<BEG> $ r0 = new graphql graph q l context $ builder <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = graphql language node parent tree r0 <NEXT> $ r1 = r2 node <NEXT> return $ r1 <END>
<BEG> $ r0 = graphql parser parser option default jvm parser option <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r10 = graphql schema field coordinate r0 <NEXT> $ z0 = r10 system coordinate <NEXT> if $ z0 == 0 goto label3 <NEXT> r11 = graphql schema field coordinate r0 <NEXT> $ r5 = r11 field name <NEXT> if null == $ r5 goto label1 <NEXT> r12 = graphql schema field coordinate r0 <NEXT> $ r7 = r12 field name <NEXT> $ z1 = $ r7 start with \ `` __\ `` <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label $ r8 = field coordinate $ lambda_assert valid names_0__1 bootstrap $ <NEXT> graphql assert assert true $ z2 $ r8 <NEXT> r13 = graphql schema field coordinate r0 <NEXT> $ r9 = r13 field name <NEXT> graphql assert assert valid name $ r9 <NEXT> goto label4 <NEXT> label return <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r14 = graphql schema field coordinate r0 <NEXT> $ r1 = r14 type name <NEXT> graphql assert assert valid name $ r1 <NEXT> r15 = graphql schema field coordinate r0 <NEXT> $ r3 = r15 field name <NEXT> graphql assert assert valid name $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = graphql schema graph q l code registry r0 <NEXT> $ r5 = r7 data fetcher map <NEXT> r8 = graphql schema graph q l code registry r0 <NEXT> $ r4 = r8 system data fetcher map <NEXT> r9 = graphql schema graph q l code registry r0 <NEXT> $ r3 = r9 default data fetcher factory <NEXT> $ r6 = graphql schema graph q l code registry get data fetcher impl r1 r2 $ r5 $ r4 $ r3 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = graphql schema graph q l enum type r0 <NEXT> r2 = graphql schema graph q l enum type new enum r4 <NEXT> r1 accept r2 <NEXT> $ r3 = r2 build <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = graphql schema graph q l input object type r0 <NEXT> r2 = graphql schema graph q l input object type new input object r4 <NEXT> r1 accept r2 <NEXT> $ r3 = r2 build <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r3 = graphql schema graph q l schema r0 <NEXT> $ r1 = r3 directives <NEXT> $ r2 = $ r1 get directive <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = graphql schema graph q l schema r0 <NEXT> $ r1 = r3 schema directives <NEXT> $ r2 = $ r1 get directive <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = graphql schema graph q l schema r0 <NEXT> r2 = graphql schema graph q l schema new schema r4 <NEXT> r1 accept r2 <NEXT> $ r3 = r2 build <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new graphql schema idl schema parser <NEXT> specialinvoke r6 < init > <NEXT> r2 = r6 build registry r1 <NEXT> $ r4 = graphql schema idl un executable schema generator make un executable schema r2 <NEXT> r7 = graphql schema idl schema printer r0 <NEXT> $ r5 = r7 print $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = graphql type resolution environment r0 <NEXT> $ r1 = r2 object <NEXT> return $ r1 <END>
<BEG> i0 = @ parameter0 <NEXT> graphql validation validator max_validation_errors = i0 <NEXT> return <END>
<BEG> z0 = @ parameter0 <NEXT> groovy grape grape disable checksum = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org codehaus groovy runtime invoker helper to string r1 <NEXT> r3 = groovy io groovy print stream r0 <NEXT> r3 print $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = new java lang string builder <NEXT> specialinvoke r6 < init > <NEXT> label r7 = groovy io line column reader r0 <NEXT> i0 = r7 read <NEXT> if i0 ! = -1 goto label4 <NEXT> $ i2 = r6 length <NEXT> if $ i2 ! = 0 goto label2 <NEXT> $ r5 = null <NEXT> goto label3 <NEXT> label return $ r5 <NEXT> if $ i2 ! = 0 goto label2 <NEXT> label $ r5 = r6 to string <NEXT> if i0 ! = -1 goto label4 <NEXT> label c1 = char i0 <NEXT> if c1 == 10 goto label6 <NEXT> if c1 ! = 13 goto label5 <NEXT> goto label6 <NEXT> label $ r3 = r6 to string <NEXT> return $ r3 <NEXT> if c1 ! = 13 goto label5 <NEXT> label r6 append c1 <NEXT> goto label1 <END>
<BEG> org codehaus groovy runtime metaclass default meta class info set without custom metaclass creation handle 0 <NEXT> groovy lang expando meta class creation handle enable <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = specialinvoke r0 pick method r1 r2 <NEXT> if $ r3 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r3 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = groovy lang int range r0 <NEXT> $ r1 = r2 get from <NEXT> $ i0 = $ r1 int value <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = @ parameter1 <NEXT> r8 = groovy lang meta method r0 <NEXT> r7 = r8 coerce argument to class r6 <NEXT> label r9 = groovy lang meta method r0 <NEXT> $ r3 = r9 invoke r1 r7 <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = groovy lang proxy meta class r0 <NEXT> $ r2 = r6 the class <NEXT> r7 = groovy lang proxy meta class r0 <NEXT> $ r3 = r7 interceptor <NEXT> r8 = groovy lang proxy meta class r0 <NEXT> $ r4 = proxy meta class $ lambda_invoke constructor_3__3 bootstrap $ r8 r1 <NEXT> r9 = groovy lang proxy meta class r0 <NEXT> $ r5 = specialinvoke r9 do call $ r2 \ `` ctor\ <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> z0 = @ parameter4 <NEXT> z1 = @ parameter5 <NEXT> r10 = groovy lang proxy meta class r0 <NEXT> $ r6 = r10 interceptor <NEXT> if null ! = $ r6 goto label1 <NEXT> specialinvoke r0 set property r1 r2 r3 r4 z0 z1 <NEXT> label r11 = groovy lang proxy meta class r0 <NEXT> $ r7 = r11 interceptor <NEXT> $ z2 = $ r7 instanceof groovy lang property access interceptor <NEXT> if $ z2 == 0 goto label3 <NEXT> r12 = groovy lang proxy meta class r0 <NEXT> $ r8 = r12 interceptor <NEXT> r5 = groovy lang property access interceptor $ r8 <NEXT> r5 before set r2 r3 r4 <NEXT> r13 = groovy lang proxy meta class r0 <NEXT> $ r9 = r13 interceptor <NEXT> $ z3 = $ r9 do invoke <NEXT> if $ z3 == 0 goto label2 <NEXT> label goto label4 <NEXT> label return <NEXT> if $ z2 == 0 goto label3 <NEXT> label specialinvoke r0 set property r1 r2 r3 r4 z0 z1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = groovy lang sequence r0 <NEXT> $ r4 = r5 type <NEXT> if $ r4 == null goto label2 <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> r3 = r2 next <NEXT> r6 = groovy lang sequence r0 <NEXT> r6 check type r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = @ parameter6 <NEXT> $ r7 = new groovy lang tuple7 <NEXT> specialinvoke $ r7 < init > r0 r1 r2 r3 r4 r5 r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = groovy namespace q name r0 <NEXT> $ r1 = r2 local part <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r10 = groovy namespace q name r0 <NEXT> $ r1 = r10 prefix <NEXT> $ z0 = $ r1 equal \ `` \ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> r11 = groovy namespace q name r0 <NEXT> $ r8 = r11 local part <NEXT> goto label2 <NEXT> label return $ r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> r12 = groovy namespace q name r0 <NEXT> $ r3 = r12 prefix <NEXT> $ r4 = r9 append $ r3 <NEXT> $ r5 = $ r4 append 58 <NEXT> r13 = groovy namespace q name r0 <NEXT> $ r6 = r13 local part <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 to string <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ z0 = r0 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r1 = new java lang illegal argument exception <NEXT> specialinvoke $ r1 < init > \ `` invalid q name literal\ `` <NEXT> throw $ r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ c1 = r0 char at 0 <NEXT> if $ c1 ! = 123 goto label5 <NEXT> i0 = r0 index of 125 <NEXT> if i0 ! = -1 goto label3 <NEXT> $ r7 = new java lang illegal argument exception <NEXT> specialinvoke $ r7 < init > \ `` invalid q name literal\ `` <NEXT> throw $ r7 <NEXT> if i0 ! = -1 goto label3 <NEXT> label $ i2 = r0 length <NEXT> $ i3 = $ i2 - 1 <NEXT> if i0 ! = $ i3 goto label4 <NEXT> $ r6 = new java lang illegal argument exception <NEXT> specialinvoke $ r6 < init > \ `` invalid q name literal\ `` <NEXT> throw $ r6 <NEXT> if i0 ! = $ i3 goto label4 <NEXT> label $ r3 = new groovy namespace q name <NEXT> $ r4 = r0 substring 1 i0 <NEXT> $ i4 = i0 + 1 <NEXT> $ r5 = r0 substring $ i4 <NEXT> specialinvoke $ r3 < init > $ r4 $ r5 <NEXT> return $ r3 <NEXT> if $ c1 ! = 123 goto label5 <NEXT> label $ r2 = new groovy namespace q name <NEXT> specialinvoke $ r2 < init > r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = java util calendar get instance <NEXT> r1 set time r0 <NEXT> $ r2 = r1 get time zone <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java util date <NEXT> $ l0 = r0 to millisecond <NEXT> $ l1 = $ l0 + 1l <NEXT> specialinvoke $ r1 < init > $ l1 <NEXT> $ r2 = groovy time time category get daylight saving offset $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r1 = r0 get parameter <NEXT> $ r3 = r1 [ i0 ] <NEXT> r2 = $ r3 get origin type <NEXT> $ r4 = groovy transform stc closure signature hint pick generic type r2 i1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = groovy util charset toolkit r0 <NEXT> r3 default charset = r1 <NEXT> goto label2 <NEXT> label return <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = groovy util charset toolkit get default system charset <NEXT> r4 = groovy util charset toolkit r0 <NEXT> r4 default charset = $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = groovy util factory builder support r0 <NEXT> $ r3 = r6 get explicit method <NEXT> $ r4 = $ r3 get r1 <NEXT> $ r5 = groovy lang closure $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r5 = groovy util factory builder support r0 <NEXT> $ r2 = r5 local proxy builder <NEXT> $ r3 = $ r2 get <NEXT> r1 = groovy util factory builder support $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = groovy util factory builder support r0 <NEXT> $ r4 = r6 global proxy builder <NEXT> return $ r4 <NEXT> if r1 ! = null goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = groovy util factory builder support r0 <NEXT> r2 global proxy builder = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r11 = groovy util factory builder support r0 <NEXT> $ r6 = r11 get proxy builder <NEXT> $ r7 = $ r6 get post instantiate delegate <NEXT> r4 = $ r7 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r8 = r4 next <NEXT> r5 = groovy lang closure $ r8 <NEXT> $ r9 = newarray java lang object [ 3 ] <NEXT> $ r9 [ 0 ] = r0 <NEXT> $ r9 [ 1 ] = r2 <NEXT> $ r9 [ 2 ] = r3 <NEXT> r5 call $ r9 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus groovy runtime default groovy method sum r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r11 = groovy util node r0 <NEXT> r8 = r11 value <NEXT> r12 = groovy util node r0 <NEXT> $ r2 = r12 value <NEXT> $ z0 = $ r2 instanceof groovy util node list <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = groovy util node r0 <NEXT> $ r7 = r13 value <NEXT> r1 = groovy util node list $ r7 <NEXT> r8 = r1 clone <NEXT> label r10 = new groovy util node <NEXT> r14 = groovy util node r0 <NEXT> $ r6 = r14 name <NEXT> r9 = new java util hash map <NEXT> r15 = groovy util node r0 <NEXT> $ r5 = r15 attribute <NEXT> specialinvoke r9 < init > $ r5 <NEXT> specialinvoke r10 < init > null $ r6 r9 r8 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r1 set parent null <NEXT> r3 = groovy util node r0 <NEXT> $ r2 = groovy util node get parent list r3 <NEXT> $ z0 = $ r2 remove r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = groovy util node r0 <NEXT> $ r1 = r2 parent <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = groovy util node r0 <NEXT> $ z0 = specialinvoke r3 text be empty or null <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = groovy util node r0 <NEXT> $ r1 = r4 text <NEXT> $ r2 = org codehaus groovy runtime string groovy method to big decimal $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r8 = null <NEXT> r9 = null <NEXT> r12 = groovy util node list r0 <NEXT> r1 = r12 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label7 <NEXT> r2 = r1 next <NEXT> r10 = null <NEXT> $ z1 = r2 instanceof java lang string <NEXT> if $ z1 == 0 goto label2 <NEXT> r10 = java lang string r2 <NEXT> goto label3 <NEXT> label if r10 == null goto label6 <NEXT> if r8 ! = null goto label4 <NEXT> r8 = r10 <NEXT> goto label6 <NEXT> label goto label1 <NEXT> if r8 ! = null goto label4 <NEXT> label if r9 ! = null goto label5 <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> r9 = r11 <NEXT> r11 append r8 <NEXT> label r9 append r10 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r2 instanceof groovy util node <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r7 = groovy util node r2 <NEXT> r10 = $ r7 text <NEXT> if $ z0 == 0 goto label7 <NEXT> label if r9 == null goto label8 <NEXT> $ r3 = r9 to string <NEXT> return $ r3 <NEXT> label if r9 == null goto label8 <NEXT> label if r8 == null goto label9 <NEXT> return r8 <NEXT> label if r8 == null goto label9 <NEXT> label return \ `` \ `` <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r7 = r0 <NEXT> label if r7 == null goto label5 <NEXT> $ r4 = r7 get property <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r5 = r2 next <NEXT> r3 = org codehaus groovy ast property node $ r5 <NEXT> $ r6 = r3 get name <NEXT> $ z1 = $ r6 equal r1 <NEXT> if $ z1 == 0 goto label3 <NEXT> $ z2 = r3 be static <NEXT> if $ z2 == 0 goto label3 <NEXT> return r3 <NEXT> if $ z2 == 0 goto label3 <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r7 = r7 get super class <NEXT> goto label1 <NEXT> label if r7 == null goto label5 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = r0 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache groovy util concurrent concurrentlinkedhashmap concurrent link hash map r0 <NEXT> $ r1 = r2 weight size <NEXT> $ l0 = $ r1 get <NEXT> $ l1 = java lang math max 0l $ l0 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache groovy util concurrent concurrentlinkedhashmap link deque r0 <NEXT> $ r2 = r3 last <NEXT> if r1 == $ r2 goto label1 <NEXT> r4 = org apache groovy util concurrent concurrentlinkedhashmap link deque r0 <NEXT> r4 unlink r1 <NEXT> r5 = org apache groovy util concurrent concurrentlinkedhashmap link deque r0 <NEXT> r5 link last r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org codehaus groovy ast class node r0 <NEXT> $ z0 = r1 synthetic public <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org codehaus groovy ast class node r0 <NEXT> $ r5 = r8 get declare method r1 <NEXT> r3 = $ r5 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r6 = r3 next <NEXT> r4 = org codehaus groovy ast method node $ r6 <NEXT> $ r7 = r4 get parameter <NEXT> r9 = org codehaus groovy ast class node r0 <NEXT> $ z1 = r9 parameter equal $ r7 r2 <NEXT> if $ z1 == 0 goto label2 <NEXT> return r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org codehaus groovy ast class node r0 <NEXT> $ z0 = org apache groovy ast tool class node utils have possible static method r3 r1 r2 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org codehaus groovy ast expr variable expression r0 <NEXT> r1 use ref = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus groovy ast class helper float_ t y p e <NEXT> if $ r1 ! = r0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 ! = r0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus groovy ast class helper big decimal_ t y p e <NEXT> if r0 == $ r1 goto label1 <NEXT> $ z0 = org codehaus groovy ast tool widen category be big int category r0 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r0 be derive from r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = r0 implement interface r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r1 instanceof org codehaus groovy ast tool widen category $ low upper bound class node <NEXT> if $ z2 == 0 goto label6 <NEXT> r2 = org codehaus groovy ast tool widen category $ low upper bound class node r1 <NEXT> $ r5 = r2 get super class <NEXT> $ z3 = org codehaus groovy ast tool widen category implement interface or subclass of r0 $ r5 <NEXT> if $ z3 == 0 goto label3 <NEXT> return 1 <NEXT> if $ z3 == 0 goto label3 <NEXT> label r3 = r2 get interface <NEXT> i0 = lengthof r3 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label6 <NEXT> r4 = r3 [ i1 ] <NEXT> $ z4 = r0 implement interface r4 <NEXT> if $ z4 == 0 goto label5 <NEXT> label i1 = i1 + 1 <NEXT> goto label4 <NEXT> label if i1 > = i0 goto label6 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r2 = r1 get origin type <NEXT> r4 = org codehaus groovy classgen asm compile stack r0 <NEXT> $ r3 = r4 define variable r1 $ r2 z0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org codehaus groovy classgen asm operand stack r0 <NEXT> $ r1 = r3 stack <NEXT> i1 = $ r1 size <NEXT> i4 = i1 - 1 <NEXT> label $ i2 = i1 - 1 <NEXT> $ i3 = $ i2 - i0 <NEXT> if i4 < = $ i3 goto label2 <NEXT> r4 = org codehaus groovy classgen asm operand stack r0 <NEXT> specialinvoke r4 pop with message i4 <NEXT> i4 = i4 + -1 <NEXT> goto label1 <NEXT> if i4 < = $ i3 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r9 = org codehaus groovy control compilation unit r0 <NEXT> $ r3 = r9 queue source <NEXT> $ z1 = $ r3 be empty <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label z0 = $ z2 <NEXT> label r10 = org codehaus groovy control compilation unit r0 <NEXT> $ r8 = r10 queue source <NEXT> $ z3 = $ r8 be empty <NEXT> if $ z3 ! = 0 goto label4 <NEXT> r11 = org codehaus groovy control compilation unit r0 <NEXT> $ r4 = r11 queue source <NEXT> $ r5 = $ r4 remove <NEXT> r1 = org codehaus groovy control source unit $ r5 <NEXT> r2 = r1 get name <NEXT> r12 = org codehaus groovy control compilation unit r0 <NEXT> $ r6 = r12 source <NEXT> $ r6 put r2 r1 <NEXT> goto label3 <NEXT> if $ z3 ! = 0 goto label4 <NEXT> label if z0 == 0 goto label5 <NEXT> r13 = org codehaus groovy control compilation unit r0 <NEXT> r13 goto phase 1 <NEXT> label return z0 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus groovy control compiler configuration r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org codehaus groovy control customizers secure a s t customizer r0 <NEXT> $ r2 = r5 token blacklist <NEXT> if $ r2 == null goto label1 <NEXT> r4 = new java lang illegal argument exception <NEXT> specialinvoke r4 < init > \ `` you be not allow to set both whitelist and blacklist\ `` <NEXT> throw r4 <NEXT> if $ r2 == null goto label1 <NEXT> label r6 = org codehaus groovy control customizers secure a s t customizer r0 <NEXT> r6 token whitelist = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org codehaus groovy control customizers secure a s t customizer r0 <NEXT> $ r2 = r5 receiver black list <NEXT> if $ r2 == null goto label1 <NEXT> r4 = new java lang illegal argument exception <NEXT> specialinvoke r4 < init > \ `` you be not allow to set both whitelist and blacklist\ `` <NEXT> throw r4 <NEXT> if $ r2 == null goto label1 <NEXT> label r6 = org codehaus groovy control customizers secure a s t customizer r0 <NEXT> r6 receiver white list = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus groovy control error collector r0 <NEXT> $ z0 = r2 have error <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org codehaus groovy control error collector r0 <NEXT> $ r1 = r3 error <NEXT> $ i0 = $ r1 size <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ i0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org codehaus groovy control error collector r0 <NEXT> $ r3 = r5 warning <NEXT> r6 = org codehaus groovy control error collector r0 <NEXT> specialinvoke r6 write r1 r2 $ r3 \ `` warning\ `` <NEXT> r7 = org codehaus groovy control error collector r0 <NEXT> $ r4 = r7 error <NEXT> r8 = org codehaus groovy control error collector r0 <NEXT> specialinvoke r8 write r1 r2 $ r4 \ `` error\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util object require non null r1 <NEXT> $ r3 = org codehaus groovy control compiler configuration $ r2 <NEXT> r4 = org codehaus groovy control process unit r0 <NEXT> r4 configuration = $ r3 <NEXT> return <END>
<BEG> $ r0 = org codehaus groovy reflection reflection utils get call class 1 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> org codehaus groovy runtime array type utils check array type r0 <NEXT> i0 = 0 <NEXT> label $ z0 = r0 be array <NEXT> if $ z0 == 0 goto label2 <NEXT> i0 = i0 + 1 <NEXT> r0 = r0 get component type <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return i0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> label $ c1 = r0 [ i0 ] <NEXT> label return $ c1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> label $ z0 = r0 [ i0 ] <NEXT> label return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> f0 = @ parameter2 <NEXT> label r0 [ i0 ] = f0 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r27 = org codehaus groovy runtime conversion handler r0 <NEXT> $ r5 = r27 handle cache <NEXT> if $ r5 == null goto label01 <NEXT> r28 = org codehaus groovy runtime conversion handler r0 <NEXT> $ z2 = r28 be default method r2 <NEXT> if $ z2 == 0 goto label01 <NEXT> r29 = org codehaus groovy runtime conversion handler r0 <NEXT> $ z3 = specialinvoke r29 default overridden r2 <NEXT> if $ z3 ! = 0 goto label01 <NEXT> r24 = org codehaus groovy vmplugin v m plugin factory get plugin <NEXT> r30 = org codehaus groovy runtime conversion handler r0 <NEXT> $ r17 = r30 handle cache <NEXT> $ r18 = conversion handler $ lambda_invoke_0__1 bootstrap $ r24 r1 <NEXT> r4 = $ r17 compute if absent r2 $ r18 <NEXT> $ r19 = r24 invoke handle r4 r3 <NEXT> return $ r19 <NEXT> if $ z3 ! = 0 goto label01 <NEXT> label r31 = org codehaus groovy runtime conversion handler r0 <NEXT> $ z4 = r31 check method r2 <NEXT> if $ z4 ! = 0 goto label09 <NEXT> label $ r7 = r2 get declare class <NEXT> if $ r7 ! = class \ `` lgroovy lang groovy object \ `` goto label06 <NEXT> $ r9 = \ `` get meta class\ `` <NEXT> $ r10 = r2 get name <NEXT> $ z0 = $ r9 equal $ r10 <NEXT> if $ z0 == 0 goto label04 <NEXT> r32 = org codehaus groovy runtime conversion handler r0 <NEXT> $ r16 = specialinvoke r32 get meta class r1 <NEXT> label return $ r16 <NEXT> if $ z0 == 0 goto label04 <NEXT> label $ r11 = \ `` set meta class\ `` <NEXT> $ r12 = r2 get name <NEXT> $ z1 = $ r11 equal $ r12 <NEXT> if $ z1 == 0 goto label06 <NEXT> $ r13 = r3 [ 0 ] <NEXT> $ r14 = groovy lang meta class $ r13 <NEXT> r33 = org codehaus groovy runtime conversion handler r0 <NEXT> $ r15 = specialinvoke r33 set meta class $ r14 <NEXT> label return $ r15 <NEXT> if $ z1 == 0 goto label06 <NEXT> label r34 = org codehaus groovy runtime conversion handler r0 <NEXT> $ r8 = r34 invoke custom r1 r2 r3 <NEXT> label return $ r8 <NEXT> if $ z4 ! = 0 goto label09 <NEXT> label $ r6 = r2 invoke r0 r3 <NEXT> label return $ r6 <END>
<BEG> r0 = @ this <NEXT> r3 = org codehaus groovy runtime conversion handler r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> org codehaus groovy runtime default groovy static method sleep impl l0 null <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus groovy runtime invoker helper to array string r0 0 -1 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r0 write r1 <NEXT> r0 flush <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java io object output stream <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> label r0 write r1 <NEXT> label org codehaus groovy runtime i o groovy method close with warn r0 <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org codehaus groovy runtime i o groovy method $ 3 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = java util iterator r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java io buffer reader <NEXT> $ r2 = new java io input stream reader <NEXT> specialinvoke $ r2 < init > r0 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new java io input stream reader <NEXT> specialinvoke $ r2 < init > r0 <NEXT> $ r3 = org codehaus groovy runtime i o groovy method with reader $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org codehaus groovy runtime memoize l r u protection storage r0 <NEXT> r5 remove r1 <NEXT> r6 = org codehaus groovy runtime memoize l r u protection storage r0 <NEXT> r6 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org codehaus groovy runtime metaclass concurrent reader hash map r0 <NEXT> $ r3 = r6 barrier lock <NEXT> entermonitor $ r3 <NEXT> label r7 = org codehaus groovy runtime metaclass concurrent reader hash map r0 <NEXT> $ r4 = r7 table <NEXT> exitmonitor $ r3 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 == r2 goto label1 <NEXT> $ z0 = r1 equal r2 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r4 = org codehaus groovy runtime metaclass concurrent reader hash map r0 <NEXT> r1 = r4 entry set <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 <NEXT> goto label2 <NEXT> label r8 = java util set $ r2 <NEXT> return r8 <NEXT> if r1 == null goto label1 <NEXT> label r3 = new org codehaus groovy runtime metaclass concurrent reader hash map $ entry set <NEXT> $ r2 = r3 <NEXT> r5 = org codehaus groovy runtime metaclass concurrent reader hash map r0 <NEXT> specialinvoke r3 < init > r5 null <NEXT> r6 = org codehaus groovy runtime metaclass concurrent reader hash map r0 <NEXT> r7 = java util set r3 <NEXT> r6 entry set = r7 <END>
<BEG> z0 = @ parameter0 <NEXT> org codehaus groovy runtime metaclass default meta class info orig byte = z0 <NEXT> $ z1 = org codehaus groovy runtime metaclass default meta class info without custom handle <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = org codehaus groovy runtime metaclass default meta class info orig byte <NEXT> if $ z2 == 0 goto label1 <NEXT> $ z3 = 1 <NEXT> goto label2 <NEXT> label org codehaus groovy runtime metaclass default meta class info orig byte res = $ z3 <NEXT> return <NEXT> if $ z2 == 0 goto label1 <NEXT> label $ z3 = 0 <END>
<BEG> z0 = @ parameter0 <NEXT> org codehaus groovy runtime metaclass default meta class info orig long = z0 <NEXT> $ z1 = org codehaus groovy runtime metaclass default meta class info without custom handle <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = org codehaus groovy runtime metaclass default meta class info orig long <NEXT> if $ z2 == 0 goto label1 <NEXT> $ z3 = 1 <NEXT> goto label2 <NEXT> label org codehaus groovy runtime metaclass default meta class info orig long res = $ z3 <NEXT> return <NEXT> if $ z2 == 0 goto label1 <NEXT> label $ z3 = 0 <END>
<BEG> z0 = @ parameter0 <NEXT> org codehaus groovy runtime metaclass default meta class info orig float = z0 <NEXT> $ z1 = org codehaus groovy runtime metaclass default meta class info without custom handle <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = org codehaus groovy runtime metaclass default meta class info orig float <NEXT> if $ z2 == 0 goto label1 <NEXT> $ z3 = 1 <NEXT> goto label2 <NEXT> label org codehaus groovy runtime metaclass default meta class info orig float res = $ z3 <NEXT> return <NEXT> if $ z2 == 0 goto label1 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus groovy runtime metaclass meta class registry impl r0 <NEXT> $ r1 = r2 meta class creation handle <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = org codehaus groovy runtime metaclass reflector loader r0 <NEXT> r7 in define = 1 <NEXT> $ i0 = lengthof r2 <NEXT> r8 = org codehaus groovy runtime metaclass reflector loader r0 <NEXT> r4 = r8 define class r1 r2 0 $ i0 r3 <NEXT> r9 = org codehaus groovy runtime metaclass reflector loader r0 <NEXT> $ r5 = r9 load class <NEXT> $ r5 put r1 r4 <NEXT> r10 = org codehaus groovy runtime metaclass reflector loader r0 <NEXT> r10 resolve class r4 <NEXT> r11 = org codehaus groovy runtime metaclass reflector loader r0 <NEXT> r11 in define = 0 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org codehaus groovy reflection class info get class info r1 <NEXT> $ r7 = r2 get meta class <NEXT> r3 = $ r7 get property <NEXT> $ r8 = new java util array list <NEXT> $ i0 = r3 size <NEXT> specialinvoke $ r8 < init > $ i0 <NEXT> $ r9 = new java lang string builder <NEXT> specialinvoke $ r9 < init > <NEXT> $ r9 append \ `` \n possible solution \ `` <NEXT> r19 = r3 iterator <NEXT> label $ z0 = r19 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r17 = r19 next <NEXT> r20 = groovy lang meta property $ r17 <NEXT> $ r18 = new org codehaus groovy runtime method rank helper $ rankable field <NEXT> specialinvoke $ r18 < init > r0 r20 <NEXT> $ r8 add $ r18 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label java util collection sort $ r8 <NEXT> i2 = 0 <NEXT> r21 = $ r8 iterator <NEXT> label $ z1 = r21 have next <NEXT> if $ z1 == 0 goto label7 <NEXT> $ r11 = r21 next <NEXT> r6 = org codehaus groovy runtime method rank helper $ rankable field $ r11 <NEXT> if i2 < = 5 goto label4 <NEXT> goto label7 <NEXT> label if i2 < = 0 goto label8 <NEXT> $ r22 = $ r9 to string <NEXT> goto label9 <NEXT> label return $ r22 <NEXT> label if i2 < = 0 goto label8 <NEXT> label $ r22 = \ `` \ `` <NEXT> if i2 < = 5 goto label4 <NEXT> label $ r12 = r6 score <NEXT> $ i1 = $ r12 int value <NEXT> if $ i1 < = 30 goto label5 <NEXT> label if i2 < = 0 goto label6 <NEXT> $ r9 append \ <NEXT> label $ r13 = r6 f <NEXT> $ r14 = $ r13 get name <NEXT> $ r9 append $ r14 <NEXT> i2 = i2 + 1 <NEXT> goto label3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new java io file input stream <NEXT> specialinvoke $ r2 < init > r0 <NEXT> $ r3 = org codehaus groovy runtime i o groovy method new object input stream $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> $ r2 = java nio charset charset default charset <NEXT> $ r3 = $ r2 name <NEXT> org codehaus groovy runtime resource groovy method append r0 r1 $ r3 z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org codehaus groovy runtime writable file <NEXT> specialinvoke r3 < init > r0 r1 <NEXT> r4 = java io file r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> z1 = @ parameter3 <NEXT> if z1 == 0 goto label1 <NEXT> $ z3 = r0 exist <NEXT> if $ z3 ! = 0 goto label1 <NEXT> $ z4 = 1 <NEXT> goto label2 <NEXT> label if z0 == 0 goto label4 <NEXT> r10 = new java io file output stream <NEXT> specialinvoke r10 < init > r0 z0 <NEXT> if $ z4 == 0 goto label3 <NEXT> org codehaus groovy runtime resource groovy method write u t f16 bom if require r10 r1 <NEXT> label r12 = new groovy io encode aware buffer writer <NEXT> r11 = new java io output stream writer <NEXT> specialinvoke r11 < init > r10 r1 <NEXT> specialinvoke r12 < init > r11 <NEXT> r16 = java io buffer writer r12 <NEXT> return r16 <NEXT> label if z0 == 0 goto label4 <NEXT> label r13 = new java io file output stream <NEXT> specialinvoke r13 < init > r0 <NEXT> if $ z4 == 0 goto label5 <NEXT> org codehaus groovy runtime resource groovy method write u t f16 bom if require r13 r1 <NEXT> label r15 = new groovy io encode aware buffer writer <NEXT> r14 = new java io output stream writer <NEXT> specialinvoke r14 < init > r13 r1 <NEXT> specialinvoke r15 < init > r14 <NEXT> r17 = java io buffer writer r15 <NEXT> return r17 <NEXT> if $ z3 ! = 0 goto label1 <NEXT> label $ z4 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org codehaus groovy runtime resource groovy method new input stream r0 <NEXT> org codehaus groovy runtime i o groovy method each byte r2 r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r2 = org codehaus groovy runtime resource groovy method new input stream r0 <NEXT> org codehaus groovy runtime i o groovy method each byte r2 i0 r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r2 = r0 accept <NEXT> if z0 == 0 goto label1 <NEXT> $ r3 = new java lang thread <NEXT> $ r4 = socket groovy method $ lambda_accept_0__1 bootstrap $ r2 r1 <NEXT> specialinvoke $ r3 < init > $ r4 <NEXT> $ r3 start <NEXT> goto label2 <NEXT> label return r2 <NEXT> if z0 == 0 goto label1 <NEXT> label org codehaus groovy runtime socket groovy method invoke closure with socket r2 r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org codehaus groovy runtime string buffer writer r0 <NEXT> $ r1 = r3 buffer <NEXT> $ c1 = char i0 <NEXT> $ r1 append $ c1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org codehaus groovy syntax c s t node r0 <NEXT> i0 = r1 size <NEXT> if i0 < = 1 goto label1 <NEXT> $ i1 = i0 - 1 <NEXT> return $ i1 <NEXT> if i0 < = 1 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r2 = org codehaus groovy syntax c s t node r0 <NEXT> r1 = r2 get i0 <NEXT> if r1 ! = null goto label1 <NEXT> if z0 == 0 goto label1 <NEXT> r1 = org codehaus groovy syntax token null <NEXT> label r3 = org codehaus groovy syntax c s t node r1 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> org codehaus groovy tool file system compiler command line compile with error handle r0 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = new java io file <NEXT> r4 = org codehaus groovy tool javac raw java file object r0 <NEXT> $ r2 = r4 uri <NEXT> specialinvoke r3 < init > $ r2 <NEXT> $ z0 = r3 delete <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java lang boolean true <NEXT> r0 set node meta data \ `` null check be processed\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org codehaus groovy transform stc type check context r0 <NEXT> $ r2 = r3 enclose binary expression <NEXT> $ r2 add first r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org codehaus groovy transform stc type check context r0 <NEXT> $ r1 = r3 enclose binary expression <NEXT> $ r2 = java util collection unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = org codehaus groovy transform stc type check context r0 <NEXT> $ r1 = r5 switch statement <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org codehaus groovy transform stc type check context r0 <NEXT> $ r2 = r6 switch statement <NEXT> $ r3 = $ r2 get first <NEXT> $ r4 = org codehaus groovy ast stmt switch statement $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org codehaus groovy transform stc type check context r0 <NEXT> $ r1 = r3 switch statement <NEXT> $ r2 = java util collection unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = org codehaus groovy transform stc type check context r0 <NEXT> $ r1 = r4 enclose class node <NEXT> $ r2 = $ r1 remove first <NEXT> $ r3 = org codehaus groovy ast class node $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r3 = org codehaus groovy transform stc type check context r0 <NEXT> $ r1 = r3 enclose class node <NEXT> $ r2 = java util collection unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org codehaus groovy transform stc type check context r0 <NEXT> $ r1 = r3 enclose method call <NEXT> $ r2 = java util collection unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org codehaus groovy transform stc type check extension r0 <NEXT> $ r3 = r4 type check visitor <NEXT> $ r3 store type r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = org codehaus groovy ast class helper map_type <NEXT> $ r3 = newarray org codehaus groovy ast class node [ 2 ] <NEXT> $ r3 [ 0 ] = r1 <NEXT> $ r3 [ 1 ] = r2 <NEXT> r6 = org codehaus groovy transform stc type check extension r0 <NEXT> $ r5 = r6 parameterized type $ r4 $ r3 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = r1 goto label1 <NEXT> return 1 <NEXT> if r0 ! = r1 goto label1 <NEXT> label $ r2 = org codehaus groovy vmplugin v7 type helper get wrapper class r1 <NEXT> if $ r2 ! = r0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ r2 ! = r0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r8 = @ parameter2 <NEXT> r1 = r8 type <NEXT> $ r3 = r0 type <NEXT> r2 = $ r3 parameter type i0 <NEXT> $ r4 = r1 return type <NEXT> if $ r4 ! = r2 goto label1 <NEXT> $ r7 = r1 parameter type 0 <NEXT> if $ r7 == r2 goto label2 <NEXT> label $ r5 = r1 parameter type 0 <NEXT> $ r6 = java lang invoke method type method type r2 $ r5 <NEXT> r8 = r8 a type $ r6 <NEXT> label $ r9 = newarray java lang invoke method handle [ 1 ] <NEXT> $ r9 [ 0 ] = r8 <NEXT> $ r10 = java lang invoke method handle filter argument r0 i0 $ r9 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> java util object require non null r1 <NEXT> $ r3 = plugin default groovy method $ be instance__1 bootstrap $ r1 <NEXT> $ r4 = r0 filter $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 iterator <NEXT> $ r2 = org codehaus groovy vmplugin v8 plugin default groovy method stream $ r1 <NEXT> $ r3 = java util stream collector to set <NEXT> $ r4 = $ r2 collect $ r3 <NEXT> $ r5 = java util set $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r2 = r0 get scheme <NEXT> $ r4 = \ `` jrt\ `` <NEXT> $ z1 = $ r4 equal r2 <NEXT> if $ z1 == 0 goto label1 <NEXT> r29 = java net uri create \ `` jrt \ `` <NEXT> $ r24 = new java lang string builder <NEXT> specialinvoke $ r24 < init > <NEXT> $ r25 = r0 get path <NEXT> $ r26 = $ r25 substring 1 <NEXT> $ r27 = $ r24 append $ r26 <NEXT> $ r28 = $ r27 append \ `` \ `` <NEXT> r30 = $ r28 to string <NEXT> goto label6 <NEXT> label $ r18 = org codehaus groovy vmplugin v9 class finder find r29 r30 r1 z0 <NEXT> return $ r18 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ r5 = \ `` file\ `` <NEXT> $ z2 = $ r5 equal r2 <NEXT> if $ z2 == 0 goto label5 <NEXT> r3 = java nio file path get r0 <NEXT> $ r11 = newarray java nio file link option [ 0 ] <NEXT> $ z3 = java nio file file exist r3 $ r11 <NEXT> if $ z3 ! = 0 goto label2 <NEXT> $ r19 = new java lang illegal argument exception <NEXT> $ r20 = new java lang string builder <NEXT> specialinvoke $ r20 < init > <NEXT> $ r21 = $ r20 append r3 <NEXT> $ r22 = $ r21 append \ `` do not exist\ `` <NEXT> $ r23 = $ r22 to string <NEXT> specialinvoke $ r19 < init > $ r23 <NEXT> throw $ r19 <NEXT> if $ z3 ! = 0 goto label2 <NEXT> label $ r12 = newarray java nio file link option [ 0 ] <NEXT> $ z4 = java nio file file be directory r3 $ r12 <NEXT> if $ z4 == 0 goto label3 <NEXT> r29 = java net uri create \ `` file \ `` <NEXT> r30 = r3 to string <NEXT> goto label4 <NEXT> label goto label6 <NEXT> if $ z4 == 0 goto label3 <NEXT> label $ r13 = new java lang string builder <NEXT> specialinvoke $ r13 < init > <NEXT> $ r14 = $ r13 append \ `` jar\ `` <NEXT> $ r15 = r0 to string <NEXT> $ r16 = $ r14 append $ r15 <NEXT> $ r17 = $ r16 to string <NEXT> r29 = java net uri create $ r17 <NEXT> r30 = \ `` \ `` <NEXT> if $ z2 == 0 goto label5 <NEXT> label $ r6 = new java lang unsupported operation exception <NEXT> $ r7 = new java lang string builder <NEXT> specialinvoke $ r7 < init > <NEXT> $ r8 = $ r7 append r0 <NEXT> $ r9 = $ r8 append \ `` be not supported\ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke $ r6 < init > $ r10 <NEXT> throw $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ r5 = r1 to string <NEXT> r7 = groovy json default json generator r0 <NEXT> $ z0 = r7 disable unicode escape <NEXT> r2 add json escape string $ r5 $ z0 <NEXT> goto label2 <NEXT> label return <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ r3 = groovy json json output empty_string_chars <NEXT> r2 add char $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = new java text simple date format <NEXT> r11 = groovy json default json generator r0 <NEXT> $ r6 = r11 date format <NEXT> r12 = groovy json default json generator r0 <NEXT> $ r5 = r12 date locale <NEXT> specialinvoke r10 < init > $ r6 $ r5 <NEXT> r13 = groovy json default json generator r0 <NEXT> $ r7 = r13 timezone <NEXT> r10 set time zone $ r7 <NEXT> $ r8 = r10 format r1 <NEXT> r2 add quote $ r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = groovy json default json generator r0 <NEXT> $ r4 = r6 converter <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = groovy json json generator $ converter $ r5 <NEXT> $ z1 = r3 handle r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> return r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = groovy json default json generator r0 <NEXT> $ r4 = r6 exclude field type <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = java lang class $ r5 <NEXT> $ z1 = r3 be assignable from r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = groovy json json delegate clone delegate and get content r1 <NEXT> r4 = groovy json json builder r0 <NEXT> r4 content = $ r2 <NEXT> r5 = groovy json json builder r0 <NEXT> $ r3 = r5 content <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = groovy json json slurper r0 <NEXT> $ z0 = r1 chop <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache groovy json internal lazy value map r0 <NEXT> $ r2 = r5 map <NEXT> if $ r2 ! = null goto label1 <NEXT> r6 = org apache groovy json internal lazy value map r0 <NEXT> specialinvoke r6 build map <NEXT> label r7 = org apache groovy json internal lazy value map r0 <NEXT> $ r3 = r7 map <NEXT> r4 = $ r3 get r1 <NEXT> r8 = org apache groovy json internal lazy value map r0 <NEXT> specialinvoke r8 lazy chop if need r4 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new groovy util slurpersupport g path result $ 2 <NEXT> r4 = groovy util slurpersupport g path result r0 <NEXT> specialinvoke r3 < init > r4 r0 r1 <NEXT> r5 = groovy util slurpersupport g path result r0 <NEXT> r6 = groovy lang closure r3 <NEXT> r5 replace node r6 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r3 = groovy util slurpersupport g path result r0 <NEXT> $ r1 = r3 text <NEXT> $ r2 = org codehaus groovy runtime string groovy method to boolean $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = groovy util slurpersupport node r0 <NEXT> $ r2 = r3 child <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = new groovy lang groovy runtime exception <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> $ r3 = r7 append \ `` can\'t call child node in the attribute \ `` <NEXT> r9 = groovy util slurpersupport attribute r0 <NEXT> $ r4 = r9 name <NEXT> $ r5 = $ r3 append $ r4 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke r8 < init > $ r6 <NEXT> r10 = java lang throwable r8 <NEXT> throw r10 <END>
<BEG> r0 = @ this <NEXT> r1 = groovy util xml parser r0 <NEXT> $ z0 = r1 keep ignorable whitespace <NEXT> return $ z0 <END>
<BEG> z0 = @ parameter0 <NEXT> groovy xml dom d o m category keep ignorable whitespace = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> z1 = @ parameter2 <NEXT> $ r1 = groovy xml d o m builder parse r0 z0 z1 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = groovy xml markup builder r0 <NEXT> r1 omit empty attribute = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = groovy xml namespace r0 <NEXT> $ r2 = r14 uri <NEXT> if $ r2 == null goto label2 <NEXT> r15 = groovy xml namespace r0 <NEXT> $ r4 = r15 uri <NEXT> $ i0 = $ r4 length <NEXT> if $ i0 < = 0 goto label2 <NEXT> r16 = groovy xml namespace r0 <NEXT> $ r5 = r16 prefix <NEXT> if $ r5 == null goto label1 <NEXT> r11 = new groovy namespace q name <NEXT> r17 = groovy xml namespace r0 <NEXT> $ r10 = r17 uri <NEXT> r18 = groovy xml namespace r0 <NEXT> $ r9 = r18 prefix <NEXT> specialinvoke r11 < init > $ r10 r1 $ r9 <NEXT> return r11 <NEXT> if $ r5 == null goto label1 <NEXT> label r12 = new groovy namespace q name <NEXT> r19 = groovy xml namespace r0 <NEXT> $ r7 = r19 uri <NEXT> specialinvoke r12 < init > $ r7 r1 <NEXT> return r12 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label r13 = new groovy namespace q name <NEXT> specialinvoke r13 < init > r1 <NEXT> return r13 <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> r0 = @ parameter2 <NEXT> r1 = javax xml parser s a x parser factory new instance <NEXT> r1 set validate z1 <NEXT> r1 set namespace aware z0 <NEXT> r1 set schema r0 <NEXT> $ r2 = r1 new s a x parser <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r4 = com google gson json null instance <NEXT> r5 = com google gson json element $ r4 <NEXT> return r5 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = r1 get class <NEXT> r6 = com google gson gson r0 <NEXT> $ r3 = r6 to json tree r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = com google gson gson builder r0 <NEXT> r1 generate non executable json = 1 <NEXT> r2 = com google gson gson builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r3 = com google gson gson builder r0 <NEXT> $ r1 = r3 excluder <NEXT> $ r2 = $ r1 exclude field without expose annotation <NEXT> r4 = com google gson gson builder r0 <NEXT> r4 excluder = $ r2 <NEXT> r5 = com google gson gson builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com google gson gson builder r0 <NEXT> r3 = com google gson field name strategy r1 <NEXT> r2 field naming policy = r3 <NEXT> r4 = com google gson gson builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = @ parameter0 <NEXT> if r2 ! = null goto label1 <NEXT> r2 = com google gson json null instance <NEXT> label r3 = com google gson json array r0 <NEXT> $ r1 = r3 element <NEXT> $ r1 add r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = com google gson json array r0 <NEXT> $ r1 = r7 element <NEXT> $ i0 = $ r1 size <NEXT> if $ i0 ! = 1 goto label1 <NEXT> r8 = com google gson json array r0 <NEXT> $ r3 = r8 element <NEXT> $ r4 = $ r3 get 0 <NEXT> $ r5 = com google gson json element $ r4 <NEXT> $ z0 = $ r5 get a boolean <NEXT> return $ z0 <NEXT> if $ i0 ! = 1 goto label1 <NEXT> label r6 = new java lang illegal state exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> $ r2 = r0 get class <NEXT> $ r3 = $ r2 get simple name <NEXT> specialinvoke $ r1 < init > $ r3 <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com google gson json object r0 <NEXT> $ r2 = r5 member <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = com google gson json array $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get type <NEXT> r3 = com google gson reflect type token r0 <NEXT> $ z0 = r3 be assignable from $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google gson json array r0 <NEXT> $ r1 = r2 element <NEXT> $ z0 = $ r1 be empty <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == r1 goto label1 <NEXT> if r0 == null goto label2 <NEXT> $ z0 = r0 equal r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = com google common collect abstract multimap r0 <NEXT> $ r1 = r3 a map <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com google common collect enum bi map r0 <NEXT> $ r1 = r2 value type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 key <NEXT> $ r2 = com google common collect immutable multiset $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com google common collect immutable sort map r0 <NEXT> $ r1 = r2 key set <NEXT> r3 = com google common collect immutable set $ r1 <NEXT> return r3 <END>
<BEG> $ r0 = com google common collect immutable sort set natural_empty_set <NEXT> r1 = com google common collect immutable sort set $ r0 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = com google common collect order natural <NEXT> $ r3 = newarray java lang comparable [ 2 ] <NEXT> $ r3 [ 0 ] = r0 <NEXT> $ r3 [ 1 ] = r1 <NEXT> r5 = java util comparator $ r2 <NEXT> $ r4 = com google common collect immutable sort set construct r5 2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com google common collect cartesian list create r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = com google common collect min max priority queue r0 <NEXT> $ z0 = r4 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = new java util no such element exception <NEXT> specialinvoke r3 < init > <NEXT> throw r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r5 = com google common collect min max priority queue r0 <NEXT> $ i0 = specialinvoke r5 get max element index <NEXT> r6 = com google common collect min max priority queue r0 <NEXT> $ r1 = specialinvoke r6 remove and get $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com google common collect min max priority queue r0 <NEXT> $ z0 = r2 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = null <NEXT> goto label2 <NEXT> label return $ r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r3 = com google common collect min max priority queue r0 <NEXT> $ i0 = specialinvoke r3 get max element index <NEXT> r4 = com google common collect min max priority queue r0 <NEXT> $ r1 = r4 element data $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = com google common collect list a list r0 r1 <NEXT> $ r3 = com google common collect order explicit $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com google common collect synchronize queue r0 null <NEXT> return $ r1 <END>
<BEG> r2 = new com google common collect tree multiset <NEXT> $ r1 = com google common collect order natural <NEXT> r3 = java util comparator $ r1 <NEXT> specialinvoke r2 < init > r3 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i5 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> label if i5 > = i0 goto label4 <NEXT> c1 = r1 char at i5 <NEXT> r4 = com google common escape array base unicode escaper r0 <NEXT> $ i2 = r4 replacement length <NEXT> if c1 > = $ i2 goto label2 <NEXT> r5 = com google common escape array base unicode escaper r0 <NEXT> $ r2 = r5 replacement <NEXT> $ r3 = $ r2 [ c1 ] <NEXT> if $ r3 ! = null goto label4 <NEXT> label r6 = com google common escape array base unicode escaper r0 <NEXT> $ c3 = r6 safe max char <NEXT> if c1 > $ c3 goto label4 <NEXT> r7 = com google common escape array base unicode escaper r0 <NEXT> $ c4 = r7 safe min char <NEXT> if c1 > = $ c4 goto label3 <NEXT> goto label4 <NEXT> label return i5 <NEXT> if c1 > = $ c4 goto label3 <NEXT> label i5 = i5 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = com google common escape array base unicode escaper r0 <NEXT> $ i1 = r4 replacement length <NEXT> if i0 > = $ i1 goto label1 <NEXT> r5 = com google common escape array base unicode escaper r0 <NEXT> $ r3 = r5 replacement <NEXT> r1 = $ r3 [ i0 ] <NEXT> if r1 == null goto label1 <NEXT> return r1 <NEXT> if r1 == null goto label1 <NEXT> label r6 = com google common escape array base unicode escaper r0 <NEXT> $ i2 = r6 safe min <NEXT> if i0 < $ i2 goto label2 <NEXT> r7 = com google common escape array base unicode escaper r0 <NEXT> $ i3 = r7 safe max <NEXT> if i0 > $ i3 goto label2 <NEXT> return null <NEXT> if i0 > $ i3 goto label2 <NEXT> label r8 = com google common escape array base unicode escaper r0 <NEXT> $ r2 = r8 escape unsafe i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r6 = com google common escape char escaper builder r0 <NEXT> $ r2 = r6 map <NEXT> $ r3 = java lang character value of c0 <NEXT> $ r4 = com google common base precondition check not null r1 <NEXT> $ r2 put $ r3 $ r4 <NEXT> r7 = com google common escape char escaper builder r0 <NEXT> $ i1 = r7 max <NEXT> if c0 < = $ i1 goto label1 <NEXT> r8 = com google common escape char escaper builder r0 <NEXT> r8 max = c0 <NEXT> label r9 = com google common escape char escaper builder r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r2 = com google common eventbus dead event r0 <NEXT> $ r1 = r2 source <NEXT> return $ r1 <END>
<BEG> $ r0 = com google common hash hash $ md5 holder md5 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 iterator <NEXT> $ z0 = r1 have next <NEXT> com google common base precondition check argument $ z0 \ `` must be at least 1 hash code to combine \ `` <NEXT> $ r6 = r1 next <NEXT> $ r7 = com google common hash hash code $ r6 <NEXT> $ i0 = $ r7 bit <NEXT> $ i1 = $ i0 8 <NEXT> r2 = newarray byte [ $ i1 ] <NEXT> r3 = r0 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label6 <NEXT> $ r9 = r3 next <NEXT> r4 = com google common hash hash code $ r9 <NEXT> r5 = r4 a byte <NEXT> $ i3 = lengthof r5 <NEXT> $ i2 = lengthof r2 <NEXT> if $ i3 ! = $ i2 goto label2 <NEXT> $ z2 = 1 <NEXT> goto label3 <NEXT> label com google common base precondition check argument $ z2 \ `` all hashcodes must have the same bit length \ `` <NEXT> i8 = 0 <NEXT> label $ i9 = lengthof r5 <NEXT> if i8 > = $ i9 goto label5 <NEXT> $ b5 = r2 [ i8 ] <NEXT> $ b4 = r5 [ i8 ] <NEXT> $ i6 = $ b5 + $ b4 <NEXT> $ b7 = byte $ i6 <NEXT> r2 [ i8 ] = $ b7 <NEXT> i8 = i8 + 1 <NEXT> goto label4 <NEXT> if i8 > = $ i9 goto label5 <NEXT> label goto label1 <NEXT> if $ i3 ! = $ i2 goto label2 <NEXT> label $ z2 = 0 <NEXT> if $ z1 == 0 goto label6 <NEXT> label $ r8 = com google common hash hash code from bytes no copy r2 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r4 = com google common hash hash input stream r0 <NEXT> $ r1 = r4 in <NEXT> i0 = $ r1 read <NEXT> if i0 == -1 goto label1 <NEXT> r5 = com google common hash hash input stream r0 <NEXT> $ r2 = r5 hasher <NEXT> $ b1 = byte i0 <NEXT> $ r2 put byte $ b1 <NEXT> label return i0 <END>
<BEG> $ r0 = com google common io base encode base16 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> i1 = @ parameter3 <NEXT> com google common base precondition check not null r0 <NEXT> com google common base precondition check not null r1 <NEXT> if i1 > = 0 goto label1 <NEXT> $ r4 = new java lang index out of bound exception <NEXT> specialinvoke $ r4 < init > \ `` len be negative\ `` <NEXT> throw $ r4 <NEXT> if i1 > = 0 goto label1 <NEXT> label i5 = 0 <NEXT> label if i5 > = i1 goto label4 <NEXT> $ i4 = i0 + i5 <NEXT> $ i3 = i1 - i5 <NEXT> i2 = r0 read r1 $ i4 $ i3 <NEXT> if i2 ! = -1 goto label3 <NEXT> goto label4 <NEXT> label return i5 <NEXT> if i2 ! = -1 goto label3 <NEXT> label i5 = i5 + i2 <NEXT> goto label2 <END>
<BEG> r0 = @ this <NEXT> r1 = com google common io closer create <NEXT> label r14 = com google common io char source r0 <NEXT> $ r6 = r14 open buffer stream <NEXT> $ r7 = r1 register $ r6 <NEXT> r12 = java io buffer reader $ r7 <NEXT> r2 = com google common collect list new array list <NEXT> label $ r8 = r12 read line <NEXT> if $ r8 == null goto label3 <NEXT> r2 add $ r8 <NEXT> goto label2 <NEXT> if $ r8 == null goto label3 <NEXT> label r4 = com google common collect immutable list copy of r2 <NEXT> label r1 close <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> com google common base precondition check not null r0 <NEXT> com google common base precondition check not null r1 <NEXT> $ r4 = new java io buffer reader <NEXT> $ r5 = new java io input stream reader <NEXT> $ r6 = new java io file input stream <NEXT> specialinvoke $ r6 < init > r0 <NEXT> specialinvoke $ r5 < init > $ r6 r1 <NEXT> specialinvoke $ r4 < init > $ r5 <NEXT> return $ r4 <END>
<BEG> $ r3 = new java io file <NEXT> $ r4 = java lang system get property \ `` java io tmpdir\ `` <NEXT> specialinvoke $ r3 < init > $ r4 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ l0 = java lang system current time millis <NEXT> $ r6 = $ r5 append $ l0 <NEXT> $ r7 = $ r6 append \ `` -\ `` <NEXT> r1 = $ r7 to string <NEXT> i1 = 0 <NEXT> label if i1 > = 10000 goto label3 <NEXT> $ r17 = new java io file <NEXT> $ r18 = new java lang string builder <NEXT> specialinvoke $ r18 < init > <NEXT> $ r19 = $ r18 append r1 <NEXT> $ r20 = $ r19 append i1 <NEXT> $ r21 = $ r20 to string <NEXT> specialinvoke $ r17 < init > $ r3 $ r21 <NEXT> $ z0 = $ r17 mkdir <NEXT> if $ z0 == 0 goto label2 <NEXT> return $ r17 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = 10000 goto label3 <NEXT> label $ r8 = new java lang illegal state exception <NEXT> $ r9 = new java lang string builder <NEXT> specialinvoke $ r9 < init > <NEXT> $ r10 = $ r9 append \ `` fail to create directory within 10000 attempt try \ `` <NEXT> $ r11 = $ r10 append r1 <NEXT> $ r12 = $ r11 append \ `` 0 to \ `` <NEXT> $ r13 = $ r12 append r1 <NEXT> $ r14 = $ r13 append 9999 <NEXT> $ r15 = $ r14 append 41 <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke $ r8 < init > $ r16 <NEXT> throw $ r8 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com google common io resource a byte source r0 <NEXT> $ r2 = $ r1 read <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ z0 = com google common net host and port be valid port i0 <NEXT> $ r2 = newarray java lang object [ 1 ] <NEXT> $ r3 = java lang integer value of i0 <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> com google common base precondition check argument $ z0 \ `` port out of range % s\ <NEXT> r1 = com google common net host and port from string r0 <NEXT> $ z1 = r1 have port <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z3 = 1 <NEXT> goto label2 <NEXT> label $ r4 = newarray java lang object [ 1 ] <NEXT> $ r4 [ 0 ] = r0 <NEXT> com google common base precondition check argument $ z3 \ `` host have a port % s\ <NEXT> $ r5 = new com google common net host and port <NEXT> $ r6 = r1 host <NEXT> $ z2 = r1 have bracketless colon <NEXT> specialinvoke $ r5 < init > $ r6 i0 $ z2 <NEXT> return $ r5 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get address <NEXT> $ i0 = lengthof r1 <NEXT> i6 = $ i0 - 1 <NEXT> label if i6 < 0 goto label2 <NEXT> $ b5 = r1 [ i6 ] <NEXT> if $ b5 ! = 0 goto label2 <NEXT> r1 [ i6 ] = -1 <NEXT> i6 = i6 + -1 <NEXT> goto label1 <NEXT> if $ b5 ! = 0 goto label2 <NEXT> label if i6 < 0 goto label3 <NEXT> $ z0 = 1 <NEXT> goto label4 <NEXT> label $ r2 = newarray java lang object [ 1 ] <NEXT> $ r2 [ 0 ] = r0 <NEXT> com google common base precondition check argument $ z0 \ `` decrementing % s would wrap \ <NEXT> $ b1 = r1 [ i6 ] <NEXT> $ i2 = $ b1 - 1 <NEXT> $ b3 = byte $ i2 <NEXT> r1 [ i6 ] = $ b3 <NEXT> $ r3 = com google common net inet address bytes to inet address r1 <NEXT> return $ r3 <NEXT> label if i6 < 0 goto label3 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google common net internet domain name r0 <NEXT> $ r1 = r2 part <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com google common net internet domain name r0 <NEXT> $ i0 = r1 public suffix index <NEXT> if $ i0 ! = 1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> label com google common net internet domain name from r0 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r7 = com google common reflect class path r0 <NEXT> $ r1 = r7 resource <NEXT> r8 = java lang iterable $ r1 <NEXT> $ r2 = com google common collect fluent iterable from r8 <NEXT> $ r3 = $ r2 filter class \ `` lcom google common reflect class path $ class info \ `` <NEXT> $ r4 = com google common reflect class path is_top_level <NEXT> $ r5 = $ r3 filter $ r4 <NEXT> $ r6 = $ r5 to set <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = new com google common reflect type token $ type set <NEXT> r3 = com google common reflect type token r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> l0 = java lang double double to raw long bit d0 <NEXT> $ r1 = com google common util concurrent atomic double updater <NEXT> $ l1 = $ r1 get and set r0 l0 <NEXT> $ d1 = java lang double long bit to double $ l1 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = r1 monitor <NEXT> if $ r4 == r0 goto label1 <NEXT> r7 = new java lang illegal monitor state exception <NEXT> specialinvoke r7 < init > <NEXT> throw r7 <NEXT> if $ r4 == r0 goto label1 <NEXT> label r8 = com google common util concurrent monitor r0 <NEXT> r2 = r8 lock <NEXT> r2 lock interruptibly <NEXT> z2 = 0 <NEXT> label $ z1 = r1 be satisfied <NEXT> z2 = $ z1 <NEXT> label if $ z1 ! = 0 goto label4 <NEXT> r2 unlock <NEXT> label return $ z1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 monitor <NEXT> if $ r2 ! = r0 goto label1 <NEXT> $ z3 = 1 <NEXT> goto label2 <NEXT> label r6 = com google common util concurrent monitor r0 <NEXT> $ r3 = r6 lock <NEXT> $ z0 = $ r3 be hold by current thread <NEXT> $ z1 = $ z3 & $ z0 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> r5 = new java lang illegal monitor state exception <NEXT> specialinvoke r5 < init > <NEXT> throw r5 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label $ z2 = r1 be satisfied <NEXT> if $ z2 ! = 0 goto label4 <NEXT> r7 = com google common util concurrent monitor r0 <NEXT> specialinvoke r7 await uninterruptibly r1 1 <NEXT> label return <NEXT> if $ r2 ! = r0 goto label1 <NEXT> label $ z3 = 0 <END>
<BEG> $ r0 = com google common collect immutable list of <NEXT> r2 = java lang iterable $ r0 <NEXT> $ r1 = com google common collect fluent iterable from r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> com google common base precondition check not null r1 <NEXT> if r0 == r1 goto label1 <NEXT> r7 = com google common hash bloom filter r0 <NEXT> $ i1 = r7 num hash function <NEXT> $ i0 = r1 num hash function <NEXT> if $ i1 ! = $ i0 goto label1 <NEXT> r8 = com google common hash bloom filter r0 <NEXT> $ l2 = r8 bit size <NEXT> $ l3 = r1 bit size <NEXT> $ b4 = $ l2 cmp $ l3 <NEXT> if $ b4 ! = 0 goto label1 <NEXT> r9 = com google common hash bloom filter r0 <NEXT> $ r4 = r9 strategy <NEXT> $ r3 = r1 strategy <NEXT> $ z0 = $ r4 equal $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = com google common hash bloom filter r0 <NEXT> $ r6 = r10 funnel <NEXT> $ r5 = r1 funnel <NEXT> $ z1 = $ r6 equal $ r5 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new javax crypto spec secret key spec <NEXT> $ r2 = com google common base precondition check not null r0 <NEXT> $ r3 = byte [ ] $ r2 <NEXT> specialinvoke $ r1 < init > $ r3 \ `` hmac s h a256\ `` <NEXT> $ r4 = com google common hash hash hmac sha256 $ r1 <NEXT> return $ r4 <END>
<BEG> $ r0 = com google common io base encode base32 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> com google common base precondition check not null r0 <NEXT> com google common base precondition check not null r1 <NEXT> r2 = com google common io byte stream create buffer <NEXT> l2 = 0l <NEXT> label i0 = r0 read r2 <NEXT> if i0 ! = -1 goto label2 <NEXT> goto label3 <NEXT> label return l2 <NEXT> if i0 ! = -1 goto label2 <NEXT> label r1 write r2 0 i0 <NEXT> $ l1 = long i0 <NEXT> l2 = l2 + $ l1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> $ r2 = java nio byte buffer allocate 88 <NEXT> $ r3 = java nio byte order little_endian <NEXT> r1 = $ r2 order $ r3 <NEXT> r8 = com google common math pair stats r0 <NEXT> $ r4 = r8 x stats <NEXT> $ r4 write to r1 <NEXT> r9 = com google common math pair stats r0 <NEXT> $ r5 = r9 y stats <NEXT> $ r5 write to r1 <NEXT> r10 = com google common math pair stats r0 <NEXT> $ d0 = r10 sum of product of delta <NEXT> r1 put double $ d0 <NEXT> $ r7 = r1 array <NEXT> return $ r7 <END>
<BEG> $ r0 = com google common math quantiles scale 2 <NEXT> $ r1 = $ r0 index 1 <NEXT> return $ r1 <END>
<BEG> $ r0 = com google common math quantiles scale 100 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com google common collect fluent iterable concat r0 <NEXT> r2 = java lang iterable $ r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> com google common base precondition check not null r1 <NEXT> if r0 == r1 goto label1 <NEXT> r7 = com google common hash bloom filter r0 <NEXT> $ i1 = r7 num hash function <NEXT> $ i0 = r1 num hash function <NEXT> if $ i1 ! = $ i0 goto label1 <NEXT> r8 = com google common hash bloom filter r0 <NEXT> $ l2 = r8 bit size <NEXT> $ l3 = r1 bit size <NEXT> $ b4 = $ l2 cmp $ l3 <NEXT> if $ b4 ! = 0 goto label1 <NEXT> r9 = com google common hash bloom filter r0 <NEXT> $ r4 = r9 strategy <NEXT> $ r3 = r1 strategy <NEXT> $ z0 = $ r4 equal $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = com google common hash bloom filter r0 <NEXT> $ r6 = r10 funnel <NEXT> $ r5 = r1 funnel <NEXT> $ z1 = $ r6 equal $ r5 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> com google common base precondition check not null r1 <NEXT> if r0 == r1 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label com google common base precondition check argument $ z2 \ `` can not combine a bloom filter with itself \ `` <NEXT> r13 = com google common hash bloom filter r0 <NEXT> $ i1 = r13 num hash function <NEXT> $ i0 = r1 num hash function <NEXT> if $ i1 ! = $ i0 goto label3 <NEXT> $ z3 = 1 <NEXT> goto label4 <NEXT> label r14 = com google common hash bloom filter r0 <NEXT> $ i3 = r14 num hash function <NEXT> $ i2 = r1 num hash function <NEXT> com google common base precondition check argument $ z3 \ `` bloom filter must have the same number of hash function % s ! = % s \ <NEXT> r15 = com google common hash bloom filter r0 <NEXT> $ l4 = r15 bit size <NEXT> $ l5 = r1 bit size <NEXT> $ b6 = $ l4 cmp $ l5 <NEXT> if $ b6 ! = 0 goto label5 <NEXT> $ z4 = 1 <NEXT> goto label6 <NEXT> label r16 = com google common hash bloom filter r0 <NEXT> $ l7 = r16 bit size <NEXT> $ l8 = r1 bit size <NEXT> com google common base precondition check argument $ z4 \ `` bloom filter must have the same size underlie bit array % s ! = % s \ <NEXT> r17 = com google common hash bloom filter r0 <NEXT> $ r4 = r17 strategy <NEXT> $ r3 = r1 strategy <NEXT> $ z0 = $ r4 equal $ r3 <NEXT> r18 = com google common hash bloom filter r0 <NEXT> $ r6 = r18 strategy <NEXT> $ r5 = r1 strategy <NEXT> com google common base precondition check argument $ z0 \ `` bloom filter must have equal strategy % s ! = % s \ <NEXT> r19 = com google common hash bloom filter r0 <NEXT> $ r8 = r19 funnel <NEXT> $ r7 = r1 funnel <NEXT> $ z1 = $ r8 equal $ r7 <NEXT> r20 = com google common hash bloom filter r0 <NEXT> $ r10 = r20 funnel <NEXT> $ r9 = r1 funnel <NEXT> com google common base precondition check argument $ z1 \ `` bloom filter must have equal funnel % s ! = % s \ <NEXT> r21 = com google common hash bloom filter r0 <NEXT> $ r12 = r21 bit <NEXT> $ r11 = r1 bit <NEXT> $ r12 put all $ r11 <NEXT> return <NEXT> if $ b6 ! = 0 goto label5 <NEXT> label $ z4 = 0 <NEXT> if $ i1 ! = $ i0 goto label3 <NEXT> label $ z3 = 0 <NEXT> if r0 == r1 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = com google common net medium type r0 <NEXT> $ r1 = r5 parameter <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = r0 <NEXT> goto label2 <NEXT> label r8 = com google common net medium type $ r4 <NEXT> return r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = com google common net medium type r0 <NEXT> $ r3 = r6 type <NEXT> r7 = com google common net medium type r0 <NEXT> $ r2 = r7 subtype <NEXT> $ r4 = com google common net medium type create $ r3 $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r4 = com google common primitives immutable double array r0 <NEXT> $ i2 = r4 length <NEXT> com google common base precondition check position index i0 i1 $ i2 <NEXT> if i0 ! = i1 goto label1 <NEXT> $ r2 = com google common primitives immutable double array empty <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if i0 ! = i1 goto label1 <NEXT> label r3 = new com google common primitives immutable double array <NEXT> $ r2 = r3 <NEXT> r5 = com google common primitives immutable double array r0 <NEXT> $ r1 = r5 array <NEXT> r6 = com google common primitives immutable double array r0 <NEXT> $ i3 = r6 start <NEXT> $ i6 = $ i3 + i0 <NEXT> r7 = com google common primitives immutable double array r0 <NEXT> $ i4 = r7 start <NEXT> $ i5 = $ i4 + i1 <NEXT> specialinvoke r3 < init > $ r1 $ i6 $ i5 <END>
<BEG> r0 = @ this <NEXT> r18 = com google common util concurrent abstract future r0 <NEXT> r1 = r18 value <NEXT> $ z0 = r1 instanceof com google common util concurrent abstract future $ set future <NEXT> if $ z0 == 0 goto label1 <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r10 = r16 append \ `` set future= [ \ `` <NEXT> $ r11 = com google common util concurrent abstract future $ set future r1 <NEXT> $ r12 = $ r11 future <NEXT> $ r13 = $ r10 append $ r12 <NEXT> $ r14 = $ r13 append \ `` ] \ `` <NEXT> $ r15 = $ r14 to string <NEXT> return $ r15 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof java util concurrent schedule future <NEXT> if $ z1 == 0 goto label2 <NEXT> r17 = new java lang string builder <NEXT> specialinvoke r17 < init > <NEXT> $ r3 = r17 append \ `` remain delay= [ \ `` <NEXT> $ r5 = java util concurrent schedule future r0 <NEXT> $ r4 = java util concurrent time unit milliseconds <NEXT> $ l0 = $ r5 get delay $ r4 <NEXT> $ r6 = $ r3 append $ l0 <NEXT> $ r7 = $ r6 append \ `` ms ] \ `` <NEXT> $ r8 = $ r7 to string <NEXT> return $ r8 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com google common collect abstract sort set multimap r0 <NEXT> $ r2 = r3 get r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> com google common base precondition check not null r0 <NEXT> if i0 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label com google common base precondition check argument $ z0 <NEXT> r3 = new com google common collect iterables $ 3 <NEXT> specialinvoke r3 < init > r0 i0 <NEXT> r4 = java lang iterable r3 <NEXT> return r4 <NEXT> if i0 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> com google common base precondition check not null r0 <NEXT> com google common base precondition check not null r1 <NEXT> com google common base precondition check not null r2 <NEXT> $ r6 = newarray java util iterator [ 3 ] <NEXT> $ r6 [ 0 ] = r0 <NEXT> $ r6 [ 1 ] = r1 <NEXT> $ r6 [ 2 ] = r2 <NEXT> $ r7 = com google common collect iterators consume for array $ r6 <NEXT> $ r8 = com google common collect iterators concat $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = com google common collect iterators partition impl r0 i0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 value <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = new com google common collect multisets $ immutable entry <NEXT> specialinvoke r2 < init > r0 i0 <NEXT> r3 = com google common collect multiset $ entry r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> com google common base precondition check not null r0 <NEXT> $ r2 = new java util array deque <NEXT> specialinvoke $ r2 < init > 20 <NEXT> $ r3 = com google common io byte stream to byte array internal r0 $ r2 0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com google common collect fluent iterable r0 <NEXT> $ r2 = specialinvoke r4 get delegate <NEXT> $ r3 = com google common collect iterables to array $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = com google inject configuration exception r0 <NEXT> $ r3 = r8 partial value <NEXT> if $ r3 ! = null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label r9 = com google inject configuration exception r0 <NEXT> $ r4 = r9 partial value <NEXT> com google common base precondition check state $ z0 \ `` can\'t clobber exist partial value % s with % s\ <NEXT> r7 = new com google inject configuration exception <NEXT> r10 = com google inject configuration exception r0 <NEXT> $ r6 = r10 message <NEXT> r11 = java lang iterable $ r6 <NEXT> specialinvoke r7 < init > r11 <NEXT> r7 partial value = r1 <NEXT> return r7 <NEXT> if $ r3 ! = null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google inject internal util line number r0 <NEXT> $ r1 = r2 source <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new com google inject matcher matcher $ annotate with <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = com google inject matcher matcher r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new com google inject matcher matcher $ return <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = com google inject matcher matcher r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com google inject multibindings map binder r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 add bind r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = com google common collect list new array list <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = com google inject spi injection point $ r5 <NEXT> $ r6 = r3 get dependency <NEXT> r1 add all $ r6 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r4 = com google common collect immutable set copy of r1 <NEXT> r7 = java util set $ r4 <NEXT> return r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get annotation <NEXT> $ r3 = com google inject internal kotlin support get instance <NEXT> r2 = $ r3 get annotation r0 <NEXT> $ i0 = lengthof r2 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> return r1 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ r4 = com google common collect object array concat r1 r2 class \ `` ljava lang annotation annotation \ `` <NEXT> $ r5 = java lang annotation annotation [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = com google inject spi injection request r0 <NEXT> $ r1 = r2 instance <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com google inject spi type listener bind r0 <NEXT> $ r1 = r2 type matcher <NEXT> return $ r1 <END>
<BEG> r1 = new com google inject util module $ require exact binding annotation module <NEXT> specialinvoke r1 < init > null <NEXT> r2 = com google inject module r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 bnf sentence r0 <NEXT> $ r1 = r2 table <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 bnf sentence r0 <NEXT> $ r1 = r2 query <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org h2 command ddl alter table add constraint r0 <NEXT> r3 ref schema = r1 <NEXT> r4 = org h2 command ddl alter table add constraint r0 <NEXT> r4 ref table name = r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org h2 util string utils replace all r1 \ `` \ <NEXT> r3 = org h2 command ddl create function alias r0 <NEXT> r3 java class method = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org h2 util new array list <NEXT> r4 = org h2 command parser r0 <NEXT> r4 parameter = $ r2 <NEXT> r5 = org h2 command parser r0 <NEXT> specialinvoke r5 initialize r1 <NEXT> r6 = org h2 command parser r0 <NEXT> specialinvoke r6 read <NEXT> r7 = org h2 command parser r0 <NEXT> $ r3 = specialinvoke r7 read table or view <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 command prepare r0 <NEXT> $ r1 = r2 sql statement <NEXT> return $ r1 <END>
<BEG> $ r0 = org h2 util utils get property \ `` h2 script directory\ <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org h2 constraint constraint referential r0 <NEXT> $ i1 = r3 update action <NEXT> if i0 ! = $ i1 goto label1 <NEXT> r4 = org h2 constraint constraint referential r0 <NEXT> $ r2 = r4 update s q l <NEXT> if $ r2 ! = null goto label1 <NEXT> return <NEXT> if $ r2 ! = null goto label1 <NEXT> label r5 = org h2 constraint constraint referential r0 <NEXT> $ i2 = r5 update action <NEXT> if $ i2 == 0 goto label2 <NEXT> $ r1 = org h2 message db exception get 90045 \ `` on update\ `` <NEXT> r6 = java lang throwable $ r1 <NEXT> throw r6 <NEXT> if $ i2 == 0 goto label2 <NEXT> label r7 = org h2 constraint constraint referential r0 <NEXT> r7 update action = i0 <NEXT> r8 = org h2 constraint constraint referential r0 <NEXT> specialinvoke r8 build update s q l <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r2 = org h2 constraint constraint unique r0 <NEXT> r2 index = r1 <NEXT> r3 = org h2 constraint constraint unique r0 <NEXT> r3 index owner = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org h2 engine connection info r0 <NEXT> r2 remote = 1 <NEXT> r3 = org h2 engine connection info r0 <NEXT> r3 persistent = 0 <NEXT> r4 = org h2 engine connection info r0 <NEXT> r4 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r16 = org h2 engine function alias r0 <NEXT> specialinvoke r16 load <NEXT> i0 = lengthof r1 <NEXT> r17 = org h2 engine function alias r0 <NEXT> r2 = r17 java method <NEXT> i1 = lengthof r2 <NEXT> i4 = 0 <NEXT> label if i4 > = i1 goto label4 <NEXT> r3 = r2 [ i4 ] <NEXT> i2 = r3 get parameter count <NEXT> if i2 == i0 goto label2 <NEXT> $ z0 = r3 be var args <NEXT> if $ z0 == 0 goto label3 <NEXT> $ i3 = i0 + 1 <NEXT> if i2 > $ i3 goto label3 <NEXT> label return r3 <NEXT> if i2 > $ i3 goto label3 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> label if i4 > = i1 goto label4 <NEXT> label r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> r18 = org h2 engine function alias r0 <NEXT> $ r5 = r18 method name <NEXT> $ r6 = r15 append $ r5 <NEXT> $ r7 = $ r6 append \ `` \ `` <NEXT> r19 = org h2 engine function alias r0 <NEXT> $ r8 = r19 class name <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ <NEXT> $ r11 = $ r10 append i0 <NEXT> $ r12 = $ r11 append \ `` \ `` <NEXT> $ r13 = $ r12 to string <NEXT> $ r14 = org h2 message db exception get 90087 $ r13 <NEXT> r20 = java lang throwable $ r14 <NEXT> throw r20 <END>
<BEG> r0 = @ this <NEXT> r15 = org h2 engine session r0 <NEXT> specialinvoke r15 check commit rollback <NEXT> r16 = org h2 engine session r0 <NEXT> $ r3 = r16 transaction <NEXT> if $ r3 == null goto label4 <NEXT> r17 = org h2 engine session r0 <NEXT> $ r7 = r17 transaction <NEXT> r14 = $ r7 get change map 0l <NEXT> r18 = org h2 engine session r0 <NEXT> $ r8 = r18 database <NEXT> $ r9 = $ r8 get mv store <NEXT> $ r10 = $ r9 get table <NEXT> r1 = $ r10 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r12 = r1 next <NEXT> r2 = org h2 mvstore db m v table $ r12 <NEXT> $ r13 = r2 get map name <NEXT> $ z1 = r14 contain $ r13 <NEXT> if $ z1 == 0 goto label2 <NEXT> r2 set modify <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r19 = org h2 engine session r0 <NEXT> $ r11 = r19 transaction <NEXT> $ r11 rollback <NEXT> r20 = org h2 engine session r0 <NEXT> r20 transaction = null <NEXT> label r21 = org h2 engine session r0 <NEXT> r21 current transaction name = null <NEXT> z2 = 0 <NEXT> r22 = org h2 engine session r0 <NEXT> $ r4 = r22 undo log <NEXT> $ i0 = $ r4 size <NEXT> if $ i0 < = 0 goto label5 <NEXT> r23 = org h2 engine session r0 <NEXT> r23 rollback to null 0 <NEXT> z2 = 1 <NEXT> label r24 = org h2 engine session r0 <NEXT> $ r5 = r24 lock <NEXT> $ i1 = $ r5 size <NEXT> if $ i1 > 0 goto label6 <NEXT> if z2 == 0 goto label7 <NEXT> label r25 = org h2 engine session r0 <NEXT> $ r6 = r25 database <NEXT> r26 = org h2 engine session r0 <NEXT> $ r6 commit r26 <NEXT> label r27 = org h2 engine session r0 <NEXT> specialinvoke r27 clean temp table 0 <NEXT> r28 = org h2 engine session r0 <NEXT> specialinvoke r28 unlock all <NEXT> r29 = org h2 engine session r0 <NEXT> $ z3 = r29 auto commit at transaction end <NEXT> if $ z3 == 0 goto label8 <NEXT> r30 = org h2 engine session r0 <NEXT> r30 auto commit = 1 <NEXT> r31 = org h2 engine session r0 <NEXT> r31 auto commit at transaction end = 0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r6 = org h2 engine session remote r0 <NEXT> $ r2 = r6 trace <NEXT> $ r2 debug r1 \ `` remove server because of exception\ `` <NEXT> r7 = org h2 engine session remote r0 <NEXT> $ r3 = r7 transfer list <NEXT> $ r3 remove i0 <NEXT> r8 = org h2 engine session remote r0 <NEXT> $ r5 = r8 transfer list <NEXT> $ i2 = $ r5 size <NEXT> if $ i2 ! = 0 goto label1 <NEXT> r9 = org h2 engine session remote r0 <NEXT> $ z0 = specialinvoke r9 auto reconnect i1 <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r10 = org h2 engine session remote r0 <NEXT> r10 check close <NEXT> r11 = org h2 engine session remote r0 <NEXT> specialinvoke r11 switch off cluster <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r6 = org h2 engine session remote r0 <NEXT> $ r2 = r6 trace <NEXT> $ z0 = $ r2 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = org h2 engine session remote r0 <NEXT> $ r4 = r7 trace <NEXT> $ r3 = newarray java lang object [ 2 ] <NEXT> $ r3 [ 0 ] = r1 <NEXT> $ r5 = java lang integer value of i0 <NEXT> $ r3 [ 1 ] = $ r5 <NEXT> $ r4 debug \ `` { 0 } { 1 } \ <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r17 = new java lang string builder <NEXT> specialinvoke r17 < init > <NEXT> $ r5 = r17 append \ `` \ `` <NEXT> $ r6 = $ r5 append z0 <NEXT> $ r7 = $ r6 to string <NEXT> r19 = org h2 engine setting base r0 <NEXT> r2 = r19 get r1 $ r7 <NEXT> label $ z1 = java lang boolean parse boolean r2 <NEXT> label return $ z1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 expression expression r0 <NEXT> $ r1 = r2 get alias <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org h2 expression expression visitor <NEXT> specialinvoke $ r1 < init > 7 0 r0 null null null null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 expression expression visitor r0 <NEXT> $ r1 = r2 max data modification id <NEXT> $ l0 = $ r1 [ 0 ] <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 expression expression visitor r0 <NEXT> $ r1 = r2 table <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org h2 fulltext full text setting r0 <NEXT> $ r2 = r5 index <NEXT> $ i0 = r1 id <NEXT> $ r3 = java lang integer value of $ i0 <NEXT> $ r2 put $ r3 r1 <NEXT> return <END>
<BEG> z0 = @ parameter0 <NEXT> $ r1 = new org h2 index index type <NEXT> specialinvoke $ r1 < init > <NEXT> $ r1 persistent = z0 <NEXT> $ r1 scan = 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 index page data overflow r0 <NEXT> $ r1 = r2 store <NEXT> $ i0 = $ r1 get page size <NEXT> $ i1 = 120 + $ i0 <NEXT> $ i2 = $ i1 > > 2 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> r2 = org h2 jdbc jdbc blob r0 <NEXT> $ r1 = r2 unsupported \ `` lob update\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org h2 jdbc jdbc callable statement r0 <NEXT> specialinvoke r2 check register i0 <NEXT> r3 = org h2 jdbc jdbc callable statement r0 <NEXT> $ r1 = specialinvoke r3 get open result set <NEXT> $ b1 = $ r1 get byte i0 <NEXT> return $ b1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org h2 jdbc jdbc callable statement r0 <NEXT> specialinvoke r3 check register i0 <NEXT> r4 = org h2 jdbc jdbc callable statement r0 <NEXT> $ r1 = specialinvoke r4 get open result set <NEXT> $ r2 = $ r1 get date i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org h2 jdbc jdbc callable statement r0 <NEXT> specialinvoke r3 check register i0 <NEXT> r4 = org h2 jdbc jdbc callable statement r0 <NEXT> $ r1 = specialinvoke r4 get open result set <NEXT> $ r2 = $ r1 get time i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org h2 jdbc jdbc callable statement r0 <NEXT> $ r1 = r2 unsupported \ `` row id\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org h2 jdbc jdbc callable statement r0 <NEXT> $ r1 = r2 unsupported \ `` sqlxml\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r3 = org h2 jdbc jdbc callable statement r0 <NEXT> $ i1 = specialinvoke r3 get index for name r1 <NEXT> r4 = org h2 jdbc jdbc callable statement r0 <NEXT> r4 set character stream $ i1 r2 i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org h2 jdbc jdbc callable statement r0 <NEXT> $ i0 = specialinvoke r3 get index for name r1 <NEXT> r4 = org h2 jdbc jdbc callable statement r0 <NEXT> r4 set object $ i0 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r2 = org h2 jdbc jdbc clob r0 <NEXT> $ r1 = r2 unsupported \ `` lob update\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i2 = @ parameter3 <NEXT> r3 = org h2 jdbc jdbc clob r0 <NEXT> $ r2 = r3 unsupported \ `` lob update\ `` <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` all procedure be callable\ `` <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r9 = org h2 jdbc jdbc database meta data r0 <NEXT> $ z0 = r9 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> $ r2 = r8 append \ `` support convert \ `` <NEXT> $ r3 = $ r2 append i0 <NEXT> $ r4 = $ r3 append \ <NEXT> $ r5 = $ r4 append i0 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r7 = $ r6 to string <NEXT> r10 = org h2 jdbc jdbc database meta data r0 <NEXT> r10 debug code $ r7 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` support different table correlation names\ `` <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` support group by beyond select\ `` <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` support outer joins\ `` <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` be catalog at start\ `` <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` support schema in procedure calls\ `` <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` support position update\ `` <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` support open statement across commit\ `` <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` do max row size include blobs\ `` <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` get max column name length\ `` <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 jdbc jdbc database meta data r0 <NEXT> r1 debug code call \ `` get max procedure name length\ `` <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r4 = org h2 jdbc jdbc s q l exception r0 <NEXT> $ r1 = r4 stack trace <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = specialinvoke r0 to string <NEXT> return $ r3 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r5 = org h2 jdbc jdbc s q l exception r0 <NEXT> $ r2 = r5 stack trace <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org h2 jdbcx jdbc data source r0 <NEXT> r2 debug code call \ `` set log writer out \ `` <NEXT> r3 = org h2 jdbcx jdbc data source r0 <NEXT> r3 log writer = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 jdbcx jdbc data source r0 <NEXT> r2 debug code call \ `` get user\ `` <NEXT> r3 = org h2 jdbcx jdbc data source r0 <NEXT> $ r1 = r3 user name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org h2 jdbcx jdbc data source r0 <NEXT> r2 debug code call \ `` set user\ <NEXT> r3 = org h2 jdbcx jdbc data source r0 <NEXT> r3 user name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r24 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ z0 = r24 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r22 = new java lang string builder <NEXT> specialinvoke r22 < init > <NEXT> $ r12 = r22 append \ `` rollback \ `` <NEXT> $ r13 = org h2 jdbcx jdbc xid to string r1 <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 append \ `` \ `` <NEXT> $ r16 = $ r15 to string <NEXT> r25 = org h2 jdbcx jdbc x a connection r0 <NEXT> r25 debug code $ r16 <NEXT> label r26 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ r3 = r26 physical conn <NEXT> $ r3 rollback <NEXT> r27 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ r4 = r27 physical conn <NEXT> $ r4 set auto commit 1 <NEXT> r28 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ z1 = r28 prepare <NEXT> if $ z1 == 0 goto label7 <NEXT> r20 = null <NEXT> label r29 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ r5 = r29 physical conn <NEXT> r20 = $ r5 create statement <NEXT> r23 = new java lang string builder <NEXT> specialinvoke r23 < init > <NEXT> $ r7 = r23 append \ `` rollback transaction \ `` <NEXT> $ r8 = org h2 jdbcx jdbc xid to string r1 <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 to string <NEXT> r20 execute $ r10 <NEXT> label org h2 util jdbc utils close silently r20 <NEXT> goto label6 <NEXT> label r30 = org h2 jdbcx jdbc x a connection r0 <NEXT> r30 prepare = 0 <NEXT> label goto label9 <NEXT> label r31 = org h2 jdbcx jdbc x a connection r0 <NEXT> r31 current transaction = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r23 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ z0 = r23 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r20 = new java lang string builder <NEXT> specialinvoke r20 < init > <NEXT> $ r9 = r20 append \ `` start \ `` <NEXT> $ r10 = org h2 jdbcx jdbc xid to string r1 <NEXT> $ r11 = $ r9 append $ r10 <NEXT> $ r12 = $ r11 append \ <NEXT> $ r13 = org h2 jdbcx jdbc x a connection quote flag i0 <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 append \ `` \ `` <NEXT> $ r16 = $ r15 to string <NEXT> r24 = org h2 jdbcx jdbc x a connection r0 <NEXT> r24 debug code $ r16 <NEXT> label if i0 ! = 134217728 goto label2 <NEXT> return <NEXT> label if i0 ! = 134217728 goto label2 <NEXT> label if i0 ! = 2097152 goto label3 <NEXT> r25 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ r5 = r25 current transaction <NEXT> if $ r5 == null goto label4 <NEXT> r26 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ r6 = r26 current transaction <NEXT> $ z1 = $ r6 equal r1 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> r21 = new javax transaction xa x a exception <NEXT> specialinvoke r21 < init > -3 <NEXT> throw r21 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> label r28 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ r19 = r28 physical conn <NEXT> $ r19 set auto commit 0 <NEXT> label goto label7 <NEXT> label r29 = org h2 jdbcx jdbc x a connection r0 <NEXT> r29 current transaction = r1 <NEXT> r30 = org h2 jdbcx jdbc x a connection r0 <NEXT> r30 prepare = 0 <NEXT> label if i0 ! = 2097152 goto label3 <NEXT> label r27 = org h2 jdbcx jdbc x a connection r0 <NEXT> $ r3 = r27 current transaction <NEXT> if $ r3 == null goto label4 <NEXT> r22 = new javax transaction xa x a exception <NEXT> specialinvoke r22 < init > -4 <NEXT> throw r22 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = org h2 message db exception r0 <NEXT> r8 = r12 get s q l exception <NEXT> $ z0 = r8 instanceof org h2 jdbc jdbc s q l exception <NEXT> if $ z0 == 0 goto label2 <NEXT> r2 = org h2 jdbc jdbc s q l exception r8 <NEXT> $ r7 = r2 get s q l <NEXT> if $ r7 ! = null goto label1 <NEXT> r2 set s q l r1 <NEXT> label r13 = org h2 message db exception r0 <NEXT> return r13 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r10 = new org h2 jdbc jdbc s q l exception <NEXT> $ r4 = r8 get message <NEXT> $ r5 = r8 get s q l state <NEXT> $ i0 = r8 get error code <NEXT> specialinvoke r10 < init > $ r4 r1 $ r5 $ i0 r8 null <NEXT> r11 = new org h2 message db exception <NEXT> r14 = java sql s q l exception r10 <NEXT> specialinvoke r11 < init > r14 <NEXT> return r11 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = newarray java lang string [ 2 ] <NEXT> if r1 ! = null goto label1 <NEXT> $ r4 = \ `` null\ `` <NEXT> goto label2 <NEXT> label $ r2 [ 0 ] = $ r4 <NEXT> $ r2 [ 1 ] = r0 <NEXT> $ r3 = org h2 message db exception get 90008 $ r2 <NEXT> return $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r4 = r1 to string <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org h2 message trace r0 <NEXT> r1 trace level = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 message trace r0 <NEXT> $ z0 = specialinvoke r1 be enable 3 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org h2 message trace r0 <NEXT> $ z0 = specialinvoke r4 be enable 2 <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org h2 message trace r0 <NEXT> $ r3 = r5 trace writer <NEXT> r6 = org h2 message trace r0 <NEXT> $ r2 = r6 module <NEXT> $ r3 write 2 $ r2 r1 null <NEXT> label return <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = org h2 message trace object id <NEXT> $ i1 = $ r0 [ i0 ] <NEXT> $ i2 = $ i1 + 1 <NEXT> $ r0 [ i0 ] = $ i2 <NEXT> return $ i1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` null\ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` org h2 util string utils convert hex to bytes \\\ `` \ `` <NEXT> $ r3 = org h2 util string utils convert byte to hex r0 <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \\\ `` \ `` <NEXT> $ r6 = $ r5 to string <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org h2 message db exception to s q l exception r1 <NEXT> r6 = org h2 message trace object r0 <NEXT> $ r3 = r6 trace <NEXT> if $ r3 ! = null goto label1 <NEXT> org h2 message trace system trace throwable r2 <NEXT> goto label3 <NEXT> label return r2 <NEXT> if $ r3 ! = null goto label1 <NEXT> label i0 = r2 get error code <NEXT> if i0 < 23000 goto label2 <NEXT> if i0 > = 24000 goto label2 <NEXT> r7 = org h2 message trace object r0 <NEXT> $ r5 = r7 trace <NEXT> $ r5 info r2 \ `` exception\ `` <NEXT> if i0 > = 24000 goto label2 <NEXT> label r8 = org h2 message trace object r0 <NEXT> $ r4 = r8 trace <NEXT> $ r4 error r2 \ `` exception\ `` <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ b3 = l0 cmp 0l <NEXT> if $ b3 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label $ r3 = newarray java lang object [ 1 ] <NEXT> $ r4 = java lang long value of l0 <NEXT> $ r3 [ 0 ] = $ r4 <NEXT> org h2 mvstore data utils check argument $ z0 \ `` max memory must be large than 0 be { 0 } \ <NEXT> r7 = org h2 mvstore cache cache long key l i r s r0 <NEXT> r7 max memory = l0 <NEXT> r8 = org h2 mvstore cache cache long key l i r s r0 <NEXT> $ r5 = r8 segment <NEXT> if $ r5 == null goto label4 <NEXT> r9 = org h2 mvstore cache cache long key l i r s r0 <NEXT> $ r6 = r9 segment <NEXT> $ i4 = lengthof $ r6 <NEXT> $ l5 = long $ i4 <NEXT> $ l6 = l0 $ l5 <NEXT> l1 = 1l + $ l6 <NEXT> r10 = org h2 mvstore cache cache long key l i r s r0 <NEXT> r1 = r10 segment <NEXT> i2 = lengthof r1 <NEXT> i7 = 0 <NEXT> label if i7 > = i2 goto label4 <NEXT> r2 = r1 [ i7 ] <NEXT> r2 set max memory l1 <NEXT> i7 = i7 + 1 <NEXT> goto label3 <NEXT> label if i7 > = i2 goto label4 <NEXT> label return <NEXT> if $ b3 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r6 = new java util hash set <NEXT> specialinvoke r6 < init > <NEXT> r7 = org h2 mvstore cache cache long key l i r s r0 <NEXT> r2 = r7 segment <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r2 [ i1 ] <NEXT> $ r5 = r3 key set <NEXT> r6 add all $ r5 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> l8 = @ parameter1 <NEXT> label $ l0 = l8 & -128l <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 == 0 goto label2 <NEXT> $ l4 = l8 & 127l <NEXT> $ l5 = 128l | $ l4 <NEXT> $ i6 = int $ l5 <NEXT> $ b7 = byte $ i6 <NEXT> r0 write $ b7 <NEXT> l8 = l8 > > > 7 <NEXT> goto label1 <NEXT> if $ b1 == 0 goto label2 <NEXT> label $ i2 = int l8 <NEXT> $ b3 = byte $ i2 <NEXT> r0 write $ b3 <NEXT> return <END>
<BEG> l0 = @ parameter0 <NEXT> $ i1 = int l0 <NEXT> $ i2 = $ i1 & 1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 mvstore m v map r0 <NEXT> $ r1 = r2 get first last 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org h2 mvstore m v map r0 <NEXT> $ r2 = r3 get min max r1 0 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r7 = org h2 mvstore m v map r0 <NEXT> r7 check open <NEXT> r8 = org h2 mvstore m v map r0 <NEXT> $ r2 = r8 store <NEXT> $ r3 = $ r2 get meta map <NEXT> if r0 ! = $ r3 goto label1 <NEXT> return <NEXT> if r0 ! = $ r3 goto label1 <NEXT> label r9 = org h2 mvstore m v map r0 <NEXT> r9 before write <NEXT> label r10 = org h2 mvstore m v map r0 <NEXT> $ r4 = r10 root <NEXT> $ r4 remove all recursive <NEXT> r11 = org h2 mvstore m v map r0 <NEXT> $ r5 = r11 store <NEXT> r12 = org h2 mvstore m v map r0 <NEXT> $ i0 = r12 id <NEXT> $ r5 remove map $ i0 <NEXT> r13 = org h2 mvstore m v map r0 <NEXT> r13 close <NEXT> label r14 = org h2 mvstore m v map r0 <NEXT> r14 after write <NEXT> goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org h2 mvstore m v map r0 <NEXT> $ r1 = r3 store <NEXT> r4 = org h2 mvstore m v map r0 <NEXT> $ i0 = r4 id <NEXT> $ r2 = $ r1 get map name $ i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org h2 mvstore m v map r0 <NEXT> $ z0 = r3 read only <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = org h2 mvstore m v map r0 <NEXT> r4 check open <NEXT> $ r2 = org h2 mvstore data utils new unsupported operation exception \ `` this map be read-only\ `` <NEXT> throw $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r5 = org h2 mvstore m v map r0 <NEXT> r5 check concurrent write <NEXT> r6 = org h2 mvstore m v map r0 <NEXT> $ r1 = r6 store <NEXT> $ r1 before write <NEXT> r7 = org h2 mvstore m v map r0 <NEXT> r7 write = 1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org h2 util new hash map <NEXT> r1 put \ `` file name\ <NEXT> $ r4 = new org h2 mvstore m v store <NEXT> specialinvoke $ r4 < init > r1 <NEXT> $ r4 open <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org h2 mvstore m v store r0 <NEXT> r1 page size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org h2 mvstore m v store r0 <NEXT> specialinvoke r4 check open <NEXT> r5 = org h2 mvstore m v store r0 <NEXT> $ r2 = r5 meta <NEXT> $ r3 = $ r2 get \ `` set store version\ `` <NEXT> r1 = java lang string $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> $ i0 = 0 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i0 = java lang integer parse int r1 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> $ r1 = new org h2 mvstore rtree m v r tree map <NEXT> specialinvoke $ r1 < init > i0 r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org h2 mvstore rtree spatial key r0 <NEXT> $ r1 = r2 min max <NEXT> $ i1 = i0 + i0 <NEXT> $ i2 = $ i1 + 1 <NEXT> $ f0 = $ r1 [ $ i2 ] <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 result local result r0 <NEXT> r1 random access = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 result updatable row r0 <NEXT> $ z0 = r1 be updatable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r16 = new org h2 util statement builder <NEXT> specialinvoke r16 < init > \ `` insert into \ `` <NEXT> r17 = org h2 result updatable row r0 <NEXT> specialinvoke r17 append table name r16 <NEXT> r16 append 40 <NEXT> r18 = org h2 result updatable row r0 <NEXT> specialinvoke r18 append column list r16 0 <NEXT> r16 append \ `` value \ `` <NEXT> r16 reset count <NEXT> i4 = 0 <NEXT> label r19 = org h2 result updatable row r0 <NEXT> $ i0 = r19 column count <NEXT> if i4 > = $ i0 goto label4 <NEXT> r16 append except first \ <NEXT> r14 = r1 [ i4 ] <NEXT> if r14 ! = null goto label2 <NEXT> r16 append \ `` default\ `` <NEXT> goto label3 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> if r14 ! = null goto label2 <NEXT> label r16 append 63 <NEXT> if i4 > = $ i0 goto label4 <NEXT> label r16 append 41 <NEXT> r20 = org h2 result updatable row r0 <NEXT> $ r9 = r20 conn <NEXT> $ r10 = r16 to string <NEXT> r15 = $ r9 prepare statement $ r10 <NEXT> i5 = 0 <NEXT> i6 = 0 <NEXT> label r21 = org h2 result updatable row r0 <NEXT> $ i1 = r21 column count <NEXT> if i5 > = $ i1 goto label7 <NEXT> r3 = r1 [ i5 ] <NEXT> if r3 == null goto label6 <NEXT> $ i2 = i6 <NEXT> i6 = i6 + 1 <NEXT> $ i3 = $ i2 + 1 <NEXT> r3 set r15 $ i3 <NEXT> label i5 = i5 + 1 <NEXT> goto label5 <NEXT> if i5 > = $ i1 goto label7 <NEXT> label i7 = r15 execute update <NEXT> if i7 == 1 goto label8 <NEXT> $ r11 = org h2 message db exception get 2000 <NEXT> r22 = java lang throwable $ r11 <NEXT> throw r22 <NEXT> if i7 == 1 goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org h2 constant sys property check <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r11 = r1 get schema <NEXT> if $ r11 == r0 goto label1 <NEXT> org h2 message db exception throw internal error \ `` wrong schema\ `` <NEXT> label r2 = r1 get name <NEXT> $ i0 = r1 get type <NEXT> r14 = org h2 schema schema r0 <NEXT> r3 = specialinvoke r14 get map $ i0 <NEXT> $ z1 = org h2 constant sys property check <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 = r3 get r2 <NEXT> if $ r5 == null goto label2 <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r7 = r13 append \ `` object already exist \ `` <NEXT> $ r8 = $ r7 append r2 <NEXT> $ r9 = $ r8 to string <NEXT> org h2 message db exception throw internal error $ r9 <NEXT> label r3 put r2 r1 <NEXT> r15 = org h2 schema schema r0 <NEXT> r15 free unique name r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org h2 schema schema r0 <NEXT> $ r3 = r6 index <NEXT> $ r4 = $ r3 get r2 <NEXT> r5 = org h2 index index $ r4 <NEXT> if r5 ! = null goto label1 <NEXT> r5 = r1 find local temp table index r2 <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org h2 schema schema r0 <NEXT> $ r2 = r5 trigger <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org h2 schema trigger object $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org h2 schema schema r0 <NEXT> $ r3 = r6 index <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = org h2 index index $ r4 <NEXT> if r2 ! = null goto label1 <NEXT> $ r5 = org h2 message db exception get 42112 r1 <NEXT> r7 = java lang throwable $ r5 <NEXT> throw r7 <NEXT> if r2 ! = null goto label1 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org h2 schema schema r0 <NEXT> $ r3 = r6 sequence <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = org h2 schema sequence $ r4 <NEXT> if r2 ! = null goto label1 <NEXT> $ r5 = org h2 message db exception get 90036 r1 <NEXT> r7 = java lang throwable $ r5 <NEXT> throw r7 <NEXT> if r2 ! = null goto label1 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 util new array list <NEXT> r16 = org h2 schema schema r0 <NEXT> $ r2 = specialinvoke r16 get map 0 <NEXT> $ r3 = $ r2 value <NEXT> r1 add all $ r3 <NEXT> r17 = org h2 schema schema r0 <NEXT> $ r4 = specialinvoke r17 get map 3 <NEXT> $ r5 = $ r4 value <NEXT> r1 add all $ r5 <NEXT> r18 = org h2 schema schema r0 <NEXT> $ r6 = specialinvoke r18 get map 1 <NEXT> $ r7 = $ r6 value <NEXT> r1 add all $ r7 <NEXT> r19 = org h2 schema schema r0 <NEXT> $ r8 = specialinvoke r19 get map 4 <NEXT> $ r9 = $ r8 value <NEXT> r1 add all $ r9 <NEXT> r20 = org h2 schema schema r0 <NEXT> $ r10 = specialinvoke r20 get map 5 <NEXT> $ r11 = $ r10 value <NEXT> r1 add all $ r11 <NEXT> r21 = org h2 schema schema r0 <NEXT> $ r12 = specialinvoke r21 get map 11 <NEXT> $ r13 = $ r12 value <NEXT> r1 add all $ r13 <NEXT> r22 = org h2 schema schema r0 <NEXT> $ r14 = specialinvoke r22 get map 9 <NEXT> $ r15 = $ r14 value <NEXT> r1 add all $ r15 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r4 = org h2 schema trigger object r0 <NEXT> r4 trigger class name = r1 <NEXT> label r5 = org h2 schema trigger object r0 <NEXT> specialinvoke r5 load <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org h2 schema trigger object r0 <NEXT> $ r1 = r3 trigger callback <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org h2 schema trigger object r0 <NEXT> $ r2 = r4 trigger callback <NEXT> $ r2 close <NEXT> label return <END>
<BEG> r8 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> r9 = org h2 security sha256 normalize key for h m a c r8 <NEXT> i0 = lengthof r0 <NEXT> $ i3 = java lang math max 32 i0 <NEXT> i1 = 64 + $ i3 <NEXT> i2 = org h2 security sha256 get int count i1 <NEXT> $ i4 = i2 * 4 <NEXT> r1 = newarray byte [ $ i4 ] <NEXT> r2 = newarray int [ i2 ] <NEXT> $ r6 = new org h2 security sha256 <NEXT> specialinvoke $ r6 < init > <NEXT> $ i5 = 64 + i0 <NEXT> r4 = newarray byte [ $ i5 ] <NEXT> r5 = newarray byte [ 96 ] <NEXT> specialinvoke $ r6 calculate h m a c r9 r0 i0 r4 r5 r1 r2 <NEXT> $ r7 = $ r6 result <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> i0 = lengthof r0 <NEXT> i1 = org h2 security sha256 get int count i0 <NEXT> $ i2 = i1 * 4 <NEXT> r1 = newarray byte [ $ i2 ] <NEXT> r2 = newarray int [ i1 ] <NEXT> $ r4 = new org h2 security sha256 <NEXT> specialinvoke $ r4 < init > <NEXT> specialinvoke $ r4 calculate hash r0 i0 r1 r2 <NEXT> if z0 == 0 goto label1 <NEXT> specialinvoke $ r4 fill with null <NEXT> java util array fill r2 0 <NEXT> java util array fill r1 0 <NEXT> java util array fill r0 0 <NEXT> label $ r5 = $ r4 result <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 server web web app r0 <NEXT> $ r1 = r2 server <NEXT> $ r1 shutdown <NEXT> return \ `` admin jsp\ `` <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r6 = r2 next <NEXT> r3 = java lang string $ r6 <NEXT> $ z1 = r3 end with \ `` lock db\ `` <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r7 = new org h2 store file lock <NEXT> $ r8 = new org h2 message trace system <NEXT> specialinvoke $ r8 < init > null <NEXT> specialinvoke $ r7 < init > $ r8 r3 1000 <NEXT> label $ r7 lock 1 <NEXT> $ r7 unlock <NEXT> label goto label5 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label6 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ z0 = r0 equal \ `` \ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> label return \ `` \ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r1 = org h2 store f file utils to real path r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r5 = org h2 store file store open r0 r1 r2 r3 r4 1024 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r6 = org h2 store file store r0 <NEXT> $ r1 = r6 file <NEXT> if $ r1 == null goto label1 <NEXT> r7 = org h2 store file store r0 <NEXT> r7 close silently <NEXT> r8 = org h2 store file store r0 <NEXT> $ r2 = r8 handler <NEXT> $ r3 = $ r2 get temp file deleter <NEXT> r9 = org h2 store file store r0 <NEXT> $ r5 = r9 auto delete reference <NEXT> r10 = org h2 store file store r0 <NEXT> $ r4 = r10 name <NEXT> $ r3 delete file $ r5 $ r4 <NEXT> r11 = org h2 store file store r0 <NEXT> r11 name = null <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> label r6 = org h2 store file store r0 <NEXT> $ r2 = r6 file <NEXT> $ r2 force 1 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> org h2 store f file path register default provider <NEXT> $ r1 = org h2 store f file path provider <NEXT> $ r2 = r0 get scheme <NEXT> $ r1 remove $ r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org h2 store f file path get r0 <NEXT> $ l0 = $ r1 last modified <NEXT> return $ l0 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r1 = org h2 store f file path get r0 <NEXT> $ r2 = $ r1 new output stream z0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> label i0 = r0 read r1 <NEXT> if i0 > = 0 goto label2 <NEXT> $ r2 = new java io e o f exception <NEXT> specialinvoke $ r2 < init > <NEXT> throw $ r2 <NEXT> if i0 > = 0 goto label2 <NEXT> label $ i1 = r1 remain <NEXT> if $ i1 > 0 goto label1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org h2 store recover tester get instance <NEXT> $ z0 = org h2 util string utils be number r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ i0 = java lang integer parse int r0 <NEXT> r1 set test every $ i0 <NEXT> label r2 = org h2 store f recorder r1 <NEXT> org h2 store f file path rec set recorder r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org h2 table table r0 <NEXT> $ r2 = r3 sequence <NEXT> r4 = org h2 engine db object r1 <NEXT> org h2 table table remove $ r2 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org h2 table table r0 <NEXT> $ r2 = r4 view <NEXT> $ r3 = org h2 table table add $ r2 r1 <NEXT> r5 = org h2 table table r0 <NEXT> r5 view = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org h2 table table r0 <NEXT> $ r1 = r5 constraint <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org h2 table table r0 <NEXT> $ r4 = r6 constraint <NEXT> $ i1 = $ r4 size <NEXT> if $ i1 > 0 goto label2 <NEXT> label r7 = org h2 table table r0 <NEXT> $ r2 = r7 trigger <NEXT> if $ r2 == null goto label3 <NEXT> r8 = org h2 table table r0 <NEXT> $ r3 = r8 trigger <NEXT> $ i0 = $ r3 size <NEXT> if $ i0 < = 0 goto label3 <NEXT> label $ z0 = 1 <NEXT> goto label4 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label3 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> r4 = org h2 table table r0 <NEXT> specialinvoke r4 fire row r1 r2 r3 0 z0 <NEXT> if z0 ! = 0 goto label1 <NEXT> r5 = org h2 table table r0 <NEXT> specialinvoke r5 fire constraint r1 r2 r3 0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 table table r0 <NEXT> $ r1 = r2 database <NEXT> $ r1 check write allow <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org h2 table table filter r0 <NEXT> r8 state = 3 <NEXT> r9 = org h2 table table filter r0 <NEXT> $ r1 = r9 table <NEXT> $ r2 = $ r1 get null row <NEXT> r10 = org h2 table table filter r0 <NEXT> r10 current = $ r2 <NEXT> r11 = org h2 table table filter r0 <NEXT> $ r3 = r11 current <NEXT> r12 = org h2 table table filter r0 <NEXT> r13 = org h2 result search row $ r3 <NEXT> r12 current search row = r13 <NEXT> r14 = org h2 table table filter r0 <NEXT> $ r4 = r14 nest join <NEXT> if $ r4 == null goto label1 <NEXT> r15 = org h2 table table filter r0 <NEXT> $ r6 = r15 nest join <NEXT> r7 = new org h2 table table filter $ 1 <NEXT> r16 = org h2 table table filter r0 <NEXT> specialinvoke r7 < init > r16 <NEXT> r17 = org h2 table table filter $ table filter visitor r7 <NEXT> $ r6 visit r17 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r17 = org h2 table table filter r0 <NEXT> $ r2 = r17 session <NEXT> $ r3 = $ r2 get database <NEXT> $ r4 = $ r3 get mode <NEXT> $ z0 = $ r4 system columns <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r1 = newarray org h2 table column [ 3 ] <NEXT> r14 = new org h2 table column <NEXT> specialinvoke r14 < init > \ `` oid\ <NEXT> r1 [ 0 ] = r14 <NEXT> $ r7 = r1 [ 0 ] <NEXT> r18 = org h2 table table filter r0 <NEXT> $ r6 = r18 table <NEXT> $ r7 set table $ r6 0 <NEXT> r15 = new org h2 table column <NEXT> specialinvoke r15 < init > \ `` ctid\ <NEXT> r1 [ 1 ] = r15 <NEXT> $ r10 = r1 [ 1 ] <NEXT> r19 = org h2 table table filter r0 <NEXT> $ r9 = r19 table <NEXT> $ r10 set table $ r9 0 <NEXT> r16 = new org h2 table column <NEXT> specialinvoke r16 < init > \ `` ctid\ <NEXT> r1 [ 2 ] = r16 <NEXT> $ r13 = r1 [ 2 ] <NEXT> r20 = org h2 table table filter r0 <NEXT> $ r12 = r20 table <NEXT> $ r13 set table $ r12 0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 table table view r0 <NEXT> $ r1 = r2 create exception <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> label $ r4 = new org h2 tool backup <NEXT> specialinvoke $ r4 < init > <NEXT> specialinvoke $ r4 process r0 r1 r2 z0 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 tool csv r0 <NEXT> $ r1 = r2 field separator write <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org h2 tool csv r0 <NEXT> r2 row separator write = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 tool csv r0 <NEXT> $ c0 = r1 field delimiter <NEXT> return $ c0 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 tool csv r0 <NEXT> $ r1 = r2 line separator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 tool csv r0 <NEXT> $ z0 = r1 write column header <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 2 goto label1 <NEXT> if i0 < = 32 goto label2 <NEXT> label $ r1 = new java lang illegal argument exception <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` \ `` <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke $ r1 < init > $ r5 <NEXT> throw $ r1 <NEXT> if i0 < = 32 goto label2 <NEXT> label i1 = org h2 tool multi dimension get bit per value i0 <NEXT> $ l2 = 1l < < i1 <NEXT> $ l3 = $ l2 - 1l <NEXT> $ i4 = int $ l3 <NEXT> return $ i4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 > = 0 goto label1 <NEXT> $ r6 = new java lang illegal argument exception <NEXT> $ r7 = new java lang string builder <NEXT> specialinvoke $ r7 < init > <NEXT> $ r8 = $ r7 append \ `` 0 < \ `` <NEXT> $ r9 = $ r8 append i0 <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke $ r6 < init > $ r10 <NEXT> throw $ r6 <NEXT> if i0 > = 0 goto label1 <NEXT> label if i1 > = 0 goto label2 <NEXT> $ r1 = new java lang illegal argument exception <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` 0 < \ `` <NEXT> $ r4 = $ r3 append i1 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke $ r1 < init > $ r5 <NEXT> throw $ r1 <NEXT> label if i1 > = 0 goto label2 <NEXT> label l11 = 0l <NEXT> i12 = 0 <NEXT> label if i12 > = 32 goto label4 <NEXT> $ l3 = long i0 <NEXT> $ l2 = 1l < < i12 <NEXT> $ l4 = $ l3 & $ l2 <NEXT> $ l5 = $ l4 < < i12 <NEXT> l13 = l11 | $ l5 <NEXT> $ l7 = long i1 <NEXT> $ l6 = 1l < < i12 <NEXT> $ l9 = $ l7 & $ l6 <NEXT> $ i8 = i12 + 1 <NEXT> $ l10 = $ l9 < < $ i8 <NEXT> l11 = l13 | $ l10 <NEXT> i12 = i12 + 1 <NEXT> goto label3 <NEXT> label if i12 > = 32 goto label4 <NEXT> label return l11 <END>
<BEG> r0 = @ parameter0 <NEXT> r5 = new org h2 server tcp server <NEXT> specialinvoke r5 < init > <NEXT> r6 = new org h2 tool server <NEXT> r7 = org h2 server service r5 <NEXT> specialinvoke r6 < init > r7 r0 <NEXT> r8 = org h2 server shutdown handler r6 <NEXT> r5 set shutdown handler r8 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r4 = new org h2 tool server <NEXT> r3 = new org h2 server pg pg server <NEXT> specialinvoke r3 < init > <NEXT> r5 = org h2 server service r3 <NEXT> specialinvoke r4 < init > r5 r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> label r22 = org h2 tool server r0 <NEXT> r22 start = 1 <NEXT> r23 = org h2 tool server r0 <NEXT> $ r2 = r23 service <NEXT> $ r2 start <NEXT> r20 = new java lang string builder <NEXT> specialinvoke r20 < init > <NEXT> r24 = org h2 tool server r0 <NEXT> $ r4 = r24 service <NEXT> $ r5 = $ r4 get name <NEXT> $ r6 = r20 append $ r5 <NEXT> $ r7 = $ r6 append \ `` \ `` <NEXT> r25 = org h2 tool server r0 <NEXT> $ r8 = r25 service <NEXT> $ r9 = $ r8 get u r l <NEXT> $ r10 = $ r7 append $ r9 <NEXT> $ r11 = $ r10 append \ `` \ `` <NEXT> r18 = $ r11 to string <NEXT> r21 = new java lang thread <NEXT> specialinvoke r21 < init > r0 r18 <NEXT> r26 = org h2 tool server r0 <NEXT> $ r13 = r26 service <NEXT> $ z0 = $ r13 be daemon <NEXT> r21 set daemon $ z0 <NEXT> r21 start <NEXT> i0 = 1 <NEXT> label if i0 > = 64 goto label5 <NEXT> org h2 tool server wait i0 <NEXT> r27 = org h2 tool server r0 <NEXT> $ z2 = r27 be run 0 <NEXT> if $ z2 == 0 goto label4 <NEXT> label r28 = org h2 tool server r0 <NEXT> return r28 <NEXT> if $ z2 == 0 goto label4 <NEXT> label i0 = i0 + i0 <NEXT> goto label2 <NEXT> label if i0 > = 64 goto label5 <NEXT> label r29 = org h2 tool server r0 <NEXT> $ z1 = r29 be run 1 <NEXT> if $ z1 == 0 goto label7 <NEXT> label r30 = org h2 tool server r0 <NEXT> return r30 <NEXT> if $ z1 == 0 goto label7 <NEXT> label $ r14 = newarray java lang string [ 2 ] <NEXT> $ r14 [ 0 ] = r18 <NEXT> $ r14 [ 1 ] = \ `` timeout please check your network configuration specially the file etc hosts\ `` <NEXT> $ r15 = org h2 message db exception get 90061 $ r14 <NEXT> r31 = java lang throwable $ r15 <NEXT> throw r31 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = i0 > > 6 <NEXT> r2 = org h2 util bit field r0 <NEXT> specialinvoke r2 check capacity i1 <NEXT> r3 = org h2 util bit field r0 <NEXT> $ r1 = r3 data <NEXT> $ l2 = $ r1 [ i1 ] <NEXT> $ l3 = org h2 util bit field get bit mask i0 <NEXT> $ l4 = $ l2 | $ l3 <NEXT> $ r1 [ i1 ] = $ l4 <NEXT> r4 = org h2 util bit field r0 <NEXT> $ i5 = r4 max length <NEXT> if $ i5 > = i0 goto label1 <NEXT> r5 = org h2 util bit field r0 <NEXT> r5 max length = i0 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = org h2 value value null instance <NEXT> if r0 ! = $ r4 goto label1 <NEXT> return null <NEXT> if r0 ! = $ r4 goto label1 <NEXT> label $ r5 = r0 convert to 10 <NEXT> r2 = org h2 value value date $ r5 <NEXT> $ r6 = r1 clone <NEXT> r3 = java util calendar $ r6 <NEXT> r3 clear <NEXT> r3 set lenient 1 <NEXT> l0 = r2 get date value <NEXT> $ i2 = org h2 util date time utils year from date value l0 <NEXT> $ i3 = org h2 util date time utils month from date value l0 <NEXT> $ i4 = org h2 util date time utils day from date value l0 <NEXT> org h2 util date time utils set calendar field r3 $ i2 $ i3 $ i4 0 0 0 0 <NEXT> l1 = r3 get time in millis <NEXT> $ r7 = new java sql date <NEXT> specialinvoke $ r7 < init > l1 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = org h2 value value null instance <NEXT> if r0 ! = $ r4 goto label1 <NEXT> return null <NEXT> if r0 ! = $ r4 goto label1 <NEXT> label $ r5 = r0 convert to 9 <NEXT> r2 = org h2 value value time $ r5 <NEXT> $ r6 = r1 clone <NEXT> r3 = java util calendar $ r6 <NEXT> r3 clear <NEXT> r3 set lenient 1 <NEXT> l10 = r2 get nanos <NEXT> l11 = l10 1000000l <NEXT> l13 = l11 1000l <NEXT> $ l3 = l13 * 1000l <NEXT> l14 = l11 - $ l3 <NEXT> l15 = l13 60l <NEXT> $ l4 = l15 * 60l <NEXT> l16 = l13 - $ l4 <NEXT> l0 = l15 60l <NEXT> $ l5 = l0 * 60l <NEXT> l17 = l15 - $ l5 <NEXT> $ i9 = int l0 <NEXT> $ i8 = int l17 <NEXT> $ i7 = int l16 <NEXT> $ i6 = int l14 <NEXT> org h2 util date time utils set calendar field r3 1970 1 1 $ i9 $ i8 $ i7 $ i6 <NEXT> l1 = r3 get time in millis <NEXT> $ r7 = new java sql time <NEXT> specialinvoke $ r7 < init > l1 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = org h2 util date time utils get calendar <NEXT> entermonitor r1 <NEXT> label r1 set time r0 <NEXT> if i0 ! = 1 goto label3 <NEXT> $ i3 = org h2 util date time utils get year r1 <NEXT> exitmonitor r1 <NEXT> label return $ i3 <NEXT> if i0 ! = 1 goto label3 <NEXT> label i1 = r1 get i0 <NEXT> if i0 ! = 2 goto label5 <NEXT> $ i2 = i1 + 1 <NEXT> if i0 ! = 2 goto label5 <NEXT> label exitmonitor r1 <NEXT> label return i1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = org h2 util date time utils get date format r1 r2 r3 <NEXT> entermonitor r4 <NEXT> label $ r8 = r4 format r0 <NEXT> exitmonitor r4 <NEXT> label return $ r8 <END>
<BEG> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> $ l5 = l0 < < 9 <NEXT> $ i3 = i1 < < 5 <NEXT> $ l4 = long $ i3 <NEXT> $ l7 = $ l5 | $ l4 <NEXT> $ l6 = long i2 <NEXT> $ l8 = $ l7 | $ l6 <NEXT> return $ l8 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ i2 = i0 + i1 <NEXT> $ i4 = $ i2 - 1 <NEXT> $ i3 = neg i1 <NEXT> $ i5 = $ i4 & $ i3 <NEXT> return $ i5 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = org h2 util math utils get secure random <NEXT> entermonitor r0 <NEXT> label $ i1 = r0 next int i0 <NEXT> exitmonitor r0 <NEXT> label return $ i1 <END>
<BEG> $ r0 = new java util hash set <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r5 = org h2 util permutation r0 <NEXT> $ z0 = r5 have next <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label i2 = 0 <NEXT> label r6 = org h2 util permutation r0 <NEXT> $ i0 = r6 m <NEXT> if i2 > = $ i0 goto label3 <NEXT> r7 = org h2 util permutation r0 <NEXT> $ r4 = r7 out <NEXT> r8 = org h2 util permutation r0 <NEXT> $ r2 = r8 in <NEXT> r9 = org h2 util permutation r0 <NEXT> $ r1 = r9 index <NEXT> $ i1 = $ r1 [ i2 ] <NEXT> $ r3 = $ r2 [ $ i1 ] <NEXT> $ r4 [ i2 ] = $ r3 <NEXT> i2 = i2 + 1 <NEXT> goto label2 <NEXT> if i2 > = $ i0 goto label3 <NEXT> label r10 = org h2 util permutation r0 <NEXT> specialinvoke r10 move index <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 util script reader r0 <NEXT> $ z0 = r1 block remark <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r3 = org h2 util statement builder r0 <NEXT> $ r1 = r3 builder <NEXT> $ r1 append c0 <NEXT> r4 = org h2 util statement builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r3 = org h2 util statement builder r0 <NEXT> $ r1 = r3 builder <NEXT> $ r1 append c0 <NEXT> r4 = org h2 util statement builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r9 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r10 = org h2 store file lister get dir r9 <NEXT> $ z0 = org h2 store f file utils be directory r10 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > \ `` directory not find \ `` <NEXT> r11 = r14 <NEXT> r14 append r10 <NEXT> goto label2 <NEXT> label r16 = org h2 util tool r0 <NEXT> $ r12 = r16 out <NEXT> $ r13 = r11 to string <NEXT> $ r12 println $ r13 <NEXT> return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r15 = new java lang string builder <NEXT> specialinvoke r15 < init > \ `` no database file have be found\ `` <NEXT> r11 = r15 <NEXT> $ r3 = r15 append \ `` in directory \ `` <NEXT> $ r3 append r10 <NEXT> if r1 == null goto label2 <NEXT> $ r5 = r15 append \ `` for the database \ `` <NEXT> $ r5 append r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> l1 = @ parameter2 <NEXT> $ l2 = l1 > > 32 <NEXT> $ i3 = int $ l2 <NEXT> org h2 util utils write int r0 i0 $ i3 <NEXT> $ i5 = i0 + 4 <NEXT> $ i4 = int l1 <NEXT> org h2 util utils write int r0 $ i5 $ i4 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = r1 goto label1 <NEXT> return 0 <NEXT> if r0 ! = r1 goto label1 <NEXT> label $ i4 = lengthof r0 <NEXT> $ i3 = lengthof r1 <NEXT> i0 = java lang math min $ i4 $ i3 <NEXT> i9 = 0 <NEXT> label if i9 > = i0 goto label6 <NEXT> b1 = r0 [ i9 ] <NEXT> b2 = r1 [ i9 ] <NEXT> if b1 == b2 goto label5 <NEXT> if b1 < = b2 goto label3 <NEXT> $ b10 = 1 <NEXT> goto label4 <NEXT> label return $ b10 <NEXT> if b1 < = b2 goto label3 <NEXT> label $ b10 = -1 <NEXT> if b1 == b2 goto label5 <NEXT> label i9 = i9 + 1 <NEXT> goto label2 <NEXT> label if i9 > = i0 goto label6 <NEXT> label $ i6 = lengthof r0 <NEXT> $ i5 = lengthof r1 <NEXT> $ i7 = $ i6 - $ i5 <NEXT> $ i8 = java lang integer signum $ i7 <NEXT> return $ i8 <END>
<BEG> r0 = @ parameter0 <NEXT> label java lang class for name r0 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r1 = org h2 util utils get property r0 null <NEXT> if r1 == null goto label4 <NEXT> label $ z1 = java lang boolean parse boolean r1 <NEXT> label return $ z1 <NEXT> if r1 == null goto label4 <NEXT> label return z0 <END>
<BEG> $ r0 = new org h2 util value hash map <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r3 = org h2 value compare mode r0 <NEXT> $ r1 = r3 name <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r2 = \ `` off\ `` <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org h2 value compare mode r0 <NEXT> $ r2 = r4 name <END>
<BEG> org h2 value value lob dir counter = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r8 = org h2 value value lob r0 <NEXT> $ i1 = r8 type <NEXT> if i0 ! = $ i1 goto label1 <NEXT> return r0 <NEXT> if i0 ! = $ i1 goto label1 <NEXT> label if i0 ! = 16 goto label2 <NEXT> r9 = org h2 value value lob r0 <NEXT> $ r4 = r9 get reader <NEXT> r10 = org h2 value value lob r0 <NEXT> $ r5 = r10 handler <NEXT> r6 = org h2 value value lob create clob $ r4 -1l $ r5 <NEXT> r11 = org h2 value value r6 <NEXT> return r11 <NEXT> label if i0 ! = 16 goto label2 <NEXT> label if i0 ! = 15 goto label3 <NEXT> r12 = org h2 value value lob r0 <NEXT> $ r2 = r12 get input stream <NEXT> r13 = org h2 value value lob r0 <NEXT> $ r3 = r13 handler <NEXT> r7 = org h2 value value lob create blob $ r2 -1l $ r3 <NEXT> r14 = org h2 value value r7 <NEXT> return r14 <NEXT> label if i0 ! = 15 goto label3 <NEXT> label $ r1 = specialinvoke r0 convert to i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 value value lob r0 <NEXT> $ r1 = r2 small <NEXT> return $ r1 <END>
<BEG> l0 = @ parameter0 <NEXT> r3 = new org h2 value value time <NEXT> specialinvoke r3 < init > l0 <NEXT> r4 = org h2 value value r3 <NEXT> $ r1 = org h2 value value cache r4 <NEXT> $ r2 = org h2 value value time $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org hamcrest core be equal equal to r0 <NEXT> $ r2 = org hamcrest collection array matching have item in array $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org hamcrest collection array match a equal matcher r0 <NEXT> $ r2 = org hamcrest collection array match array contain in any order $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return \ `` [ \ `` <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org hamcrest collection be in in r0 <NEXT> return $ r1 <END>
<BEG> r1 = new org hamcrest core be anything <NEXT> specialinvoke r1 < init > <NEXT> r2 = org hamcrest matcher r1 <NEXT> return r2 <END>
<BEG> $ r0 = org hamcrest core be null null value <NEXT> $ r1 = org hamcrest core be not not $ r0 <NEXT> return $ r1 <END>
<BEG> $ r0 = org hamcrest core be null null value <NEXT> $ r1 = org hamcrest core be not not $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java util regex pattern compile r0 <NEXT> $ r2 = org hamcrest core string regular expression match regex $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> i5 = 0 <NEXT> label $ i1 = r0 length <NEXT> if i5 > = $ i1 goto label3 <NEXT> c0 = r0 char at i5 <NEXT> $ z0 = java lang character be letter c0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> if 95 == c0 goto label2 <NEXT> $ i4 = i5 - 1 <NEXT> return $ i4 <NEXT> if 95 == c0 goto label2 <NEXT> label i5 = i5 + 1 <NEXT> goto label1 <NEXT> if i5 > = $ i1 goto label3 <NEXT> label $ i2 = r0 length <NEXT> $ i3 = $ i2 - 1 <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb cfg spi jaxb cfg collection cache type r0 <NEXT> $ r1 = r2 usage <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb cfg spi jaxb cfg map reference type r0 <NEXT> r2 file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0 <NEXT> $ r1 = r2 cascade <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0 <NEXT> r2 id type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0 <NEXT> r2 index = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0 <NEXT> $ r1 = r3 optimistic lock <NEXT> if $ r1 ! = null goto label1 <NEXT> return 1 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org hibernate boot jaxb hbm spi jaxb hbm any association type r0 <NEXT> $ r2 = r4 optimistic lock <NEXT> $ z0 = $ r2 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> $ r1 = r2 cache <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> r2 element = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> r2 loader = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> r2 check = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> $ r1 = r2 embed xml <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> $ r1 = r2 schema <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> r2 schema = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> r2 catalog = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm array type r0 <NEXT> $ r1 = r2 subselect attribute <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm base version attribute type r0 <NEXT> $ r1 = r2 column attribute <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm basic attribute type r0 <NEXT> r2 length = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm basic attribute type r0 <NEXT> r2 unique = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm collection id type r0 <NEXT> $ r1 = r2 generator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0 <NEXT> $ r1 = r2 proxy <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0 <NEXT> r2 proxy = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0 <NEXT> $ r1 = r3 dynamic update <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org hibernate boot jaxb hbm spi jaxb hbm entity base definition r0 <NEXT> $ r2 = r4 dynamic update <NEXT> $ z0 = $ r2 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm entity discriminator type r0 <NEXT> $ r1 = r2 formula <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm entity discriminator type r0 <NEXT> r2 formula = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm filter definition type r0 <NEXT> $ r1 = r2 condition <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm filter parameter type r0 <NEXT> $ r1 = r2 parameter name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0 <NEXT> $ r1 = r5 filter def <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r6 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0 <NEXT> r6 filter def = r4 <NEXT> label r7 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0 <NEXT> $ r2 = r7 filter def <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0 <NEXT> r2 auto import = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0 <NEXT> $ r1 = r3 default access <NEXT> if $ r1 ! = null goto label1 <NEXT> return \ `` property\ `` <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0 <NEXT> $ r2 = r4 default access <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0 <NEXT> $ r1 = r3 default lazy <NEXT> if $ r1 ! = null goto label1 <NEXT> return 1 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org hibernate boot jaxb hbm spi jaxb hbm hibernate mapping r0 <NEXT> $ r2 = r4 default lazy <NEXT> $ z0 = $ r2 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm loader type r0 <NEXT> $ r1 = r2 query ref <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm map type r0 <NEXT> $ r1 = r2 map key many to many <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0 <NEXT> $ r1 = r2 cache region <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0 <NEXT> $ r1 = r3 cacheable <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0 <NEXT> $ r2 = r4 cacheable <NEXT> $ z0 = $ r2 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0 <NEXT> r2 fetch size = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm name native query type r0 <NEXT> $ r1 = r2 flush mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm root entity type r0 <NEXT> r2 timestamp = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm root entity type r0 <NEXT> r2 multi tenancy = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm tuplizer type r0 <NEXT> $ r1 = r2 entity mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb hbm spi jaxb hbm tuplizer type r0 <NEXT> r2 entity mode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = new org hibernate boot internal metadata builder impl <NEXT> r5 = org hibernate boot metadata source r0 <NEXT> specialinvoke r4 < init > r5 <NEXT> r6 = org hibernate boot metadata source r0 <NEXT> $ r3 = specialinvoke r6 get custom builder or default r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org hibernate boot metadata source r0 <NEXT> $ r2 = r6 annotate class name <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util link hash set <NEXT> specialinvoke r5 < init > <NEXT> r7 = org hibernate boot metadata source r0 <NEXT> r7 annotate class name = r5 <NEXT> label r8 = org hibernate boot metadata source r0 <NEXT> $ r3 = r8 annotate class name <NEXT> $ r3 add r1 <NEXT> r9 = org hibernate boot metadata source r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = org hibernate boot model source internal hbm xml element metadata r0 <NEXT> $ z0 = r1 inherently single column <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = null <NEXT> label r13 = org hibernate bytecode enhance internal javassist enhancer impl r0 <NEXT> $ r5 = r13 class pool <NEXT> r12 = new java io byte array input stream <NEXT> specialinvoke r12 < init > r2 <NEXT> r9 = $ r5 make class if new r12 <NEXT> r14 = org hibernate bytecode enhance internal javassist enhancer impl r0 <NEXT> $ z0 = specialinvoke r14 enhance r9 <NEXT> if $ z0 == 0 goto label02 <NEXT> r15 = org hibernate bytecode enhance internal javassist enhancer impl r0 <NEXT> $ r10 = specialinvoke r15 get byte code r9 <NEXT> goto label03 <NEXT> label r11 = $ r10 <NEXT> label if r9 == null goto label05 <NEXT> r9 detach <NEXT> label return r11 <NEXT> if $ z0 == 0 goto label02 <NEXT> label $ r10 = null <END>
<BEG> r0 = @ this <NEXT> r1 = org hibernate bytecode enhance spi interceptor lazy attribute descriptor r0 <NEXT> $ i0 = r1 attribute index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate bytecode internal javassist fast class r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate cfg abstract property holder r0 <NEXT> $ r1 = r2 context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org hibernate cfg configuration r0 <NEXT> $ r2 = r4 metadata source <NEXT> $ r2 add cacheable file r1 <NEXT> r5 = org hibernate cfg configuration r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate cfg configuration r0 <NEXT> r2 entity not find delegate = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = org hibernate internal util string helper be not empty r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = r1 <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r3 = org hibernate internal util string helper unqualify r2 <END>
<BEG> $ r1 = new java util property <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = org hibernate cfg environment global_properties <NEXT> $ r1 put all $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org hibernate collection internal abstract persistent collection r0 <NEXT> r1 initialize 1 <NEXT> r2 = org hibernate collection internal abstract persistent collection r0 <NEXT> r2 dirty <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate collection internal abstract persistent collection r0 <NEXT> $ r1 = r2 session <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org hibernate collection internal persistent bag r0 <NEXT> r5 read <NEXT> r6 = org hibernate collection internal persistent bag r0 <NEXT> $ r3 = r6 bag <NEXT> r2 = $ r3 iterator <NEXT> i0 = 0 <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r4 = r2 next <NEXT> $ z0 = r1 equal $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> i0 = i0 + 1 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org hibernate context internal manage session context exist session r0 <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org hibernate context internal manage session context session map 1 <NEXT> $ r2 = r0 get session factory <NEXT> $ r3 = $ r1 put $ r2 r0 <NEXT> $ r4 = org hibernate session $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org hibernate criterion detach criterion <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org hibernate criterion detach criterion <NEXT> $ r2 = r0 get name <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org hibernate criterion detach criterion r0 <NEXT> $ r2 = r4 criterion <NEXT> $ r2 add order r1 <NEXT> r5 = org hibernate criterion detach criterion r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r4 = org hibernate sql join type parse i0 <NEXT> r6 = org hibernate criterion detach criterion r0 <NEXT> $ r5 = r6 create criterion r1 r2 $ r4 r3 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate criterion property r0 <NEXT> $ r1 = r3 get property name <NEXT> $ r2 = org hibernate criterion projection count $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org hibernate criterion property r0 <NEXT> $ r2 = r4 get property name <NEXT> $ r3 = org hibernate criterion subqueries property lt $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org hibernate criterion identifier eq expression <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org hibernate criterion criterion r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org hibernate criterion logical expression <NEXT> specialinvoke $ r2 < init > r0 r1 \ `` and\ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org hibernate criterion restriction conjunction r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r4 = new org hibernate criterion s q l criterion <NEXT> specialinvoke r4 < init > r0 r1 r2 <NEXT> r5 = org hibernate criterion criterion r4 <NEXT> return r5 <END>
<BEG> $ r0 = new org hibernate criterion conjunction <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = org hibernate criterion simple expression r0 <NEXT> r1 ignore case = 1 <NEXT> r2 = org hibernate criterion simple expression r0 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org hibernate criterion property subquery expression <NEXT> specialinvoke r3 < init > r0 \ `` < =\ <NEXT> r4 = org hibernate criterion criterion r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org hibernate criterion property subquery expression <NEXT> specialinvoke r3 < init > r0 \ `` < \ <NEXT> r4 = org hibernate criterion criterion r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org hibernate criterion property subquery expression <NEXT> specialinvoke r3 < init > r0 \ `` =\ <NEXT> r4 = org hibernate criterion criterion r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org hibernate criterion simple subquery expression <NEXT> specialinvoke r3 < init > r0 \ `` > \ <NEXT> r4 = org hibernate criterion criterion r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = r1 size <NEXT> r20 = org hibernate dialect function template renderer r0 <NEXT> $ i2 = r20 get anticipated number of argument <NEXT> if $ i2 < = 0 goto label1 <NEXT> r21 = org hibernate dialect function template renderer r0 <NEXT> $ i5 = r21 get anticipated number of argument <NEXT> if i0 == $ i5 goto label1 <NEXT> $ r15 = org hibernate dialect function template renderer log <NEXT> r22 = org hibernate dialect function template renderer r0 <NEXT> $ i6 = r22 get anticipated number of argument <NEXT> $ r15 miss argument $ i6 i0 <NEXT> label r19 = new java lang string builder <NEXT> specialinvoke r19 < init > <NEXT> i7 = 0 <NEXT> label r23 = org hibernate dialect function template renderer r0 <NEXT> $ r17 = r23 chunk <NEXT> $ i8 = lengthof $ r17 <NEXT> if i7 > = $ i8 goto label8 <NEXT> r24 = org hibernate dialect function template renderer r0 <NEXT> $ r6 = r24 param index <NEXT> $ i3 = lengthof $ r6 <NEXT> if i7 > = $ i3 goto label6 <NEXT> r25 = org hibernate dialect function template renderer r0 <NEXT> $ r10 = r25 param index <NEXT> $ i4 = $ r10 [ i7 ] <NEXT> i1 = $ i4 - 1 <NEXT> if i1 > = i0 goto label3 <NEXT> $ r18 = r1 get i1 <NEXT> goto label4 <NEXT> label if $ r18 == null goto label5 <NEXT> r26 = org hibernate dialect function template renderer r0 <NEXT> $ r11 = r26 chunk <NEXT> $ r12 = $ r11 [ i7 ] <NEXT> $ r13 = r19 append $ r12 <NEXT> $ r13 append $ r18 <NEXT> label goto label7 <NEXT> label i7 = i7 + 1 <NEXT> goto label2 <NEXT> if i1 > = i0 goto label3 <NEXT> label $ r18 = null <NEXT> if i7 > = $ i3 goto label6 <NEXT> label r27 = org hibernate dialect function template renderer r0 <NEXT> $ r7 = r27 chunk <NEXT> $ r8 = $ r7 [ i7 ] <NEXT> r19 append $ r8 <NEXT> if i7 > = $ i8 goto label8 <NEXT> label $ r5 = r19 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> return i0 <END>
<BEG> r0 = @ this <NEXT> return \ `` value default \ `` <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = java lang integer value of i0 <NEXT> r12 = org hibernate dialect type name r0 <NEXT> $ r3 = r12 default <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = java lang string $ r4 <NEXT> if r2 ! = null goto label1 <NEXT> r11 = new org hibernate mapping exception <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r7 = r10 append \ `` no dialect map for jdbc type \ `` <NEXT> $ r8 = $ r7 append i0 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> r13 = java lang throwable r11 <NEXT> throw r13 <NEXT> if r2 ! = null goto label1 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = java lang integer value of i0 <NEXT> r5 = org hibernate dialect type name r0 <NEXT> $ r3 = r5 default <NEXT> $ r3 put r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = org hibernate engine internal natural id xref delegate r0 <NEXT> $ r5 = r7 natural id resolution cache map <NEXT> $ r6 = $ r5 get r1 <NEXT> r4 = org hibernate engine internal natural id xref delegate $ natural id resolution cache $ r6 <NEXT> if r4 == null goto label1 <NEXT> $ z0 = r4 same a cached r2 r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r6 = org hibernate engine internal natural id xref delegate r0 <NEXT> $ r3 = r6 natural id resolution cache map <NEXT> $ r4 = $ r3 value <NEXT> r1 = $ r4 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r1 next <NEXT> r2 = org hibernate engine internal natural id xref delegate $ natural id resolution cache $ r5 <NEXT> r2 un stash invalid natural id reference <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate engine internal natural id xref delegate r0 <NEXT> $ r1 = r2 natural id resolution cache map <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate engine internal non nullable transient dependency r0 <NEXT> $ r1 = r3 property path by transient entity <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org hibernate engine internal non nullable transient dependency r0 <NEXT> $ r2 = r4 property path by transient entity <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org hibernate engine internal non nullable transient dependency r0 <NEXT> $ r2 = r7 property path by transient entity <NEXT> if $ r2 == null goto label1 <NEXT> r8 = org hibernate engine internal non nullable transient dependency r0 <NEXT> $ r3 = r8 property path by transient entity <NEXT> $ r4 = $ r3 remove r1 <NEXT> if $ r4 ! = null goto label1 <NEXT> r6 = new java lang illegal state exception <NEXT> specialinvoke r6 < init > \ `` attempt to resolve a non-nullable transient entity that be not a dependency \ `` <NEXT> throw r6 <NEXT> if $ r4 ! = null goto label1 <NEXT> label return <END>
<BEG> $ r0 = org hibernate engine internal statistical logging session event listener log <NEXT> $ z0 = $ r0 be info enabled <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = new java util property <NEXT> r4 = org hibernate engine jdbc connection internal basic connection creator r0 <NEXT> $ r2 = r4 connection prop <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r4 = new java util link hash set <NEXT> specialinvoke $ r4 < init > <NEXT> label r26 = r0 get type info <NEXT> label $ z0 = r26 next <NEXT> if $ z0 == 0 goto label03 <NEXT> $ r5 = new org hibernate engine jdbc spi type info <NEXT> $ r6 = r26 get string \ `` type_name\ `` <NEXT> $ i0 = r26 get int \ `` data_type\ `` <NEXT> $ r7 = r26 get string \ `` create_params\ `` <NEXT> $ r8 = org hibernate engine jdbc spi type info interpret create params $ r7 <NEXT> $ z1 = r26 get boolean \ `` unsigned_attribute\ `` <NEXT> $ i1 = r26 get int \ `` precision\ `` <NEXT> $ s2 = r26 get short \ `` minimum_scale\ `` <NEXT> $ s3 = r26 get short \ `` maximum_scale\ `` <NEXT> $ z2 = r26 get boolean \ `` fixed_prec_scale\ `` <NEXT> $ r9 = r26 get string \ `` literal_prefix\ `` <NEXT> $ r10 = r26 get string \ `` literal_suffix\ `` <NEXT> $ z3 = r26 get boolean \ `` case_sensitive\ `` <NEXT> $ s4 = r26 get short \ `` searchable\ `` <NEXT> $ r11 = org hibernate engine jdbc spi type searchability interpret $ s4 <NEXT> $ s5 = r26 get short \ `` nullable\ `` <NEXT> $ r12 = org hibernate engine jdbc spi type nullability interpret $ s5 <NEXT> specialinvoke $ r5 < init > $ r6 $ i0 $ r8 $ z1 $ i1 $ s2 $ s3 $ z2 $ r9 $ r10 $ z3 $ r11 $ r12 <NEXT> $ r4 add $ r5 <NEXT> goto label02 <NEXT> if $ z0 == 0 goto label03 <NEXT> label r26 close <NEXT> label goto label15 <NEXT> label goto label17 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate engine spi action queue r0 <NEXT> r3 = org hibernate action spi executable r1 <NEXT> specialinvoke r2 register cleanup action r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate engine spi action queue r0 <NEXT> r3 = org hibernate action spi executable r1 <NEXT> specialinvoke r2 register cleanup action r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org hibernate engine spi batch fetch queue r0 <NEXT> $ r3 = r7 batch loadable entity key <NEXT> if $ r3 == null goto label1 <NEXT> $ z0 = r1 be batch loadable <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = org hibernate engine spi batch fetch queue r0 <NEXT> $ r4 = r8 batch loadable entity key <NEXT> $ r5 = r1 get entity name <NEXT> $ r6 = $ r4 get $ r5 <NEXT> r2 = java util link hash set $ r6 <NEXT> if r2 == null goto label1 <NEXT> r2 remove r1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org hibernate engine spi cascade style style <NEXT> $ r3 = $ r2 get r0 <NEXT> r1 = org hibernate engine spi cascade style $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> r10 = new org hibernate mapping exception <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r6 = r9 append \ `` unsupported cascade style \ `` <NEXT> $ r7 = $ r6 append r0 <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke r10 < init > $ r8 <NEXT> r11 = java lang throwable r10 <NEXT> throw r11 <NEXT> if r1 ! = null goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get entity persister <NEXT> $ r4 = org hibernate event internal default resolve natural id event listener log <NEXT> $ z0 = $ r4 be trace enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r14 = org hibernate event internal default resolve natural id event listener log <NEXT> $ r15 = org hibernate pretty message helper info string r2 <NEXT> $ r16 = r1 get natural id value <NEXT> $ r14 tracev \ `` attempt to resolve { 0 } #{ 1 } \ <NEXT> label r17 = org hibernate event internal default resolve natural id event listener r0 <NEXT> r3 = r17 resolve from cache r1 <NEXT> if r3 == null goto label3 <NEXT> $ r10 = org hibernate event internal default resolve natural id event listener log <NEXT> $ z2 = $ r10 be trace enabled <NEXT> if $ z2 == 0 goto label2 <NEXT> $ r11 = org hibernate event internal default resolve natural id event listener log <NEXT> $ r12 = org hibernate pretty message helper info string r2 <NEXT> $ r13 = r1 get natural id value <NEXT> $ r11 tracev \ `` resolved object in cache { 0 } #{ 1 } \ <NEXT> label return r3 <NEXT> if r3 == null goto label3 <NEXT> label $ r5 = org hibernate event internal default resolve natural id event listener log <NEXT> $ z1 = $ r5 be trace enabled <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r7 = org hibernate event internal default resolve natural id event listener log <NEXT> $ r8 = org hibernate pretty message helper info string r2 <NEXT> $ r9 = r1 get natural id value <NEXT> $ r7 tracev \ `` object not resolve in any cache { 0 } #{ 1 } \ <NEXT> label r18 = org hibernate event internal default resolve natural id event listener r0 <NEXT> $ r6 = r18 load from datasource r1 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r11 = new java lang null pointer exception <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r5 = r10 append \ `` null entity be not support by \ `` <NEXT> $ r6 = r0 get class <NEXT> $ r7 = $ r6 get name <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> throw r11 <NEXT> if r1 ! = null goto label1 <NEXT> label r12 = org hibernate event internal merge context r0 <NEXT> $ r2 = r12 merge to manage entity xref <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r11 = new java lang null pointer exception <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r5 = r10 append \ `` null copy be not support by \ `` <NEXT> $ r6 = r0 get class <NEXT> $ r7 = $ r6 get name <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> throw r11 <NEXT> if r1 ! = null goto label1 <NEXT> label r12 = org hibernate event internal merge context r0 <NEXT> $ r2 = r12 manage to merge entity xref <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r5 = r1 entry set <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> r3 = r2 next <NEXT> r4 = java util map $ entry r3 <NEXT> $ r6 = r4 get key <NEXT> $ r7 = r4 get value <NEXT> r9 = org hibernate event internal merge context r0 <NEXT> r9 put $ r6 $ r7 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate hql internal ast query translator impl r0 <NEXT> r3 error if d m l <NEXT> r4 = org hibernate hql internal ast query translator impl r0 <NEXT> $ r1 = specialinvoke r4 get walker <NEXT> $ r2 = $ r1 get return type <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate hql internal ast tree insert statement r0 <NEXT> $ r1 = r3 get first child <NEXT> $ r2 = org hibernate hql internal ast tree into clause $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org hibernate hql internal ast tree order by clause r0 <NEXT> $ r3 = r5 get a s t factory <NEXT> r2 = org hibernate hql internal ast util a s t util create $ r3 148 r1 <NEXT> r6 = org hibernate hql internal ast tree order by clause r0 <NEXT> $ r4 = r6 get first child <NEXT> if $ r4 ! = null goto label1 <NEXT> r7 = org hibernate hql internal ast tree order by clause r0 <NEXT> r7 set first child r2 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r4 ! = null goto label1 <NEXT> label r8 = org hibernate hql internal ast tree order by clause r0 <NEXT> r8 add child r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org hibernate hql internal ast util a s t appender r0 <NEXT> $ r2 = r6 last <NEXT> if $ r2 ! = null goto label1 <NEXT> r7 = org hibernate hql internal ast util a s t appender r0 <NEXT> $ r5 = r7 parent <NEXT> $ r5 set first child r1 <NEXT> goto label2 <NEXT> label r9 = org hibernate hql internal ast util a s t appender r0 <NEXT> r9 last = r1 <NEXT> r10 = org hibernate hql internal ast util a s t appender r0 <NEXT> $ r4 = r10 last <NEXT> return $ r4 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r8 = org hibernate hql internal ast util a s t appender r0 <NEXT> $ r3 = r8 last <NEXT> $ r3 set next sibling r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org hibernate internal util string helper split \ `` \ <NEXT> r8 = null <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r2 <NEXT> if i1 > = $ i0 goto label4 <NEXT> r3 = r2 [ i1 ] <NEXT> r4 = org hibernate hql internal ast util a s t util create r1 110 r3 <NEXT> if i1 ! = 0 goto label2 <NEXT> r8 = r4 <NEXT> goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 ! = 0 goto label2 <NEXT> label r8 = org hibernate hql internal ast util a s t util create binary subtree r1 15 \ `` \ <NEXT> if i1 > = $ i0 goto label4 <NEXT> label $ r5 = org hibernate hql internal ast util path helper log <NEXT> $ z0 = $ r5 be debug enabled <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r6 = org hibernate hql internal ast util path helper log <NEXT> $ r7 = org hibernate hql internal ast util a s t util get debug string r8 <NEXT> $ r6 debugf \ `` parse path % s - > % s\ <NEXT> label return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org hibernate hql internal ast util session factory helper r0 <NEXT> $ r2 = r4 sfi <NEXT> $ r3 = org hibernate hql internal ast util session factory helper find queryable use import $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org hibernate hql internal ast util session factory helper r0 <NEXT> $ r2 = r5 sfi <NEXT> $ r3 = $ r2 get sql function registry <NEXT> $ r4 = $ r3 find s q l function r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org hibernate hql internal ast util session factory helper r0 <NEXT> r3 = specialinvoke r5 require s q l function r1 <NEXT> r6 = org hibernate hql internal ast util session factory helper r0 <NEXT> $ r4 = r6 find function return type r1 r3 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate id enhance table generator r0 <NEXT> $ r1 = r2 identifier type <NEXT> return $ r1 <END>
<BEG> entermonitor class \ `` lorg hibernate id uuid helper \ `` <NEXT> label $ s0 = org hibernate id uuid helper counter <NEXT> if $ s0 > = 0 goto label2 <NEXT> org hibernate id uuid helper counter = 0 <NEXT> label $ s1 = org hibernate id uuid helper counter <NEXT> $ i2 = $ s1 + 1 <NEXT> $ s3 = short $ i2 <NEXT> org hibernate id uuid helper counter = $ s3 <NEXT> exitmonitor class \ `` lorg hibernate id uuid helper \ `` <NEXT> label return $ s1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r15 = org hibernate internal abstract scrollable result r0 <NEXT> $ z0 = r15 close <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = new java lang illegal state exception <NEXT> specialinvoke r13 < init > \ `` scrollable result be closed\ `` <NEXT> throw r13 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r16 = org hibernate internal abstract scrollable result r0 <NEXT> $ r2 = r16 holder instantiator <NEXT> if $ r2 == null goto label2 <NEXT> r14 = new org hibernate hibernate exception <NEXT> specialinvoke r14 < init > \ `` query specify a holder class\ `` <NEXT> r17 = java lang throwable r14 <NEXT> throw r17 <NEXT> if $ r2 == null goto label2 <NEXT> label $ r3 = r1 get return class <NEXT> r18 = org hibernate internal abstract scrollable result r0 <NEXT> $ r4 = r18 type <NEXT> $ r5 = $ r4 [ i0 ] <NEXT> $ r6 = $ r5 get return class <NEXT> if $ r3 ! = $ r6 goto label3 <NEXT> r19 = org hibernate internal abstract scrollable result r0 <NEXT> $ r10 = r19 get i0 <NEXT> return $ r10 <NEXT> if $ r3 ! = $ r6 goto label3 <NEXT> label r20 = org hibernate internal abstract scrollable result r0 <NEXT> $ r7 = r20 type <NEXT> $ r8 = $ r7 [ i0 ] <NEXT> r21 = org hibernate internal abstract scrollable result r0 <NEXT> $ r9 = specialinvoke r21 throw invalid column type exception i0 $ r8 r1 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org hibernate internal filter impl r0 <NEXT> $ r2 = r4 parameter <NEXT> $ r3 = $ r2 get r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r1 get r0 <NEXT> r3 = java lang string $ r2 <NEXT> if r3 ! = null goto label1 <NEXT> return null <NEXT> if r3 ! = null goto label1 <NEXT> label r4 = r3 trim <NEXT> $ z0 = r4 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r6 = new java util hash map <NEXT> specialinvoke $ r6 < init > <NEXT> r4 = org hibernate internal util config configuration helper extract property value r0 r2 <NEXT> if r4 == null goto label4 <NEXT> $ r7 = new java util string tokenizer <NEXT> specialinvoke $ r7 < init > r4 r1 <NEXT> label $ z0 = $ r7 have more token <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r8 = $ r7 next token <NEXT> $ z1 = $ r7 have more element <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r11 = $ r7 next token <NEXT> goto label3 <NEXT> label $ r6 put $ r8 $ r11 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r11 = \ `` \ `` <NEXT> if $ z0 == 0 goto label4 <NEXT> label return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 get error code <NEXT> r1 = r0 get next exception <NEXT> label if i0 ! = 0 goto label2 <NEXT> if r1 == null goto label2 <NEXT> i0 = r1 get error code <NEXT> r1 = r1 get next exception <NEXT> goto label1 <NEXT> if r1 == null goto label2 <NEXT> label return i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = org hibernate internal util reflect helper $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z2 = r1 be interface <NEXT> if $ z2 ! = 0 goto label1 <NEXT> $ r2 = new java lang assertion error <NEXT> specialinvoke $ r2 < init > \ `` interface to check be not an interface\ `` <NEXT> throw $ r2 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label $ z1 = r1 be assignable from r0 <NEXT> return $ z1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org hibernate internal util reflect helper be abstract class r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = org hibernate internal util reflect helper no_param_signature <NEXT> r10 = r0 get declare constructor $ r1 <NEXT> org hibernate internal util reflect helper ensure accessibility r10 <NEXT> label return r10 <END>
<BEG> $ r0 = java lang thread current thread <NEXT> $ r1 = $ r0 get context class loader <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> $ z0 = r0 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 0 <NEXT> if $ z0 == 0 goto label2 <NEXT> label c0 = r0 char at 0 <NEXT> $ i2 = r0 length <NEXT> $ i3 = $ i2 - 1 <NEXT> c1 = r0 char at $ i3 <NEXT> if c0 ! = c1 goto label3 <NEXT> if c0 == 96 goto label4 <NEXT> if c0 == 34 goto label4 <NEXT> label $ c4 = r1 open quote <NEXT> if c0 ! = $ c4 goto label5 <NEXT> $ c5 = r1 close quote <NEXT> if c1 ! = $ c5 goto label5 <NEXT> label $ z1 = 1 <NEXT> goto label6 <NEXT> label return $ z1 <NEXT> if c1 ! = $ c5 goto label5 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate loader custom column collection aliases r0 <NEXT> $ r1 = r2 identifier alias <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org hibernate loader abstract entity join walker r0 <NEXT> $ r3 = r7 persister <NEXT> $ r4 = $ r3 get table name <NEXT> $ z1 = $ r4 equal r1 <NEXT> if $ z1 == 0 goto label1 <NEXT> r8 = org hibernate loader abstract entity join walker r0 <NEXT> $ r5 = r8 persister <NEXT> $ r6 = $ r5 get key column name <NEXT> $ z3 = java util array equal r2 $ r6 <NEXT> if $ z3 == 0 goto label1 <NEXT> $ z4 = 1 <NEXT> goto label2 <NEXT> label if $ z4 ! = 0 goto label3 <NEXT> $ z2 = specialinvoke r0 be duplicate association r1 r2 <NEXT> if $ z2 == 0 goto label4 <NEXT> label $ z5 = 1 <NEXT> goto label5 <NEXT> label return $ z5 <NEXT> if $ z2 == 0 goto label4 <NEXT> label $ z5 = 0 <NEXT> if $ z3 == 0 goto label1 <NEXT> label $ z4 = 0 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate lock option r0 <NEXT> $ r1 = r2 lock mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org hibernate lock option r0 <NEXT> $ i0 = r1 timeout <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org hibernate lock option r0 <NEXT> r1 timeout = i0 <NEXT> r2 = org hibernate lock option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org hibernate lock option r0 <NEXT> $ z0 = r1 scope <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r4 = new org hibernate lock option <NEXT> specialinvoke r4 < init > <NEXT> r5 = org hibernate lock option r0 <NEXT> org hibernate lock option copy r5 r4 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate mapping fetch profile r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate map foreign key r0 <NEXT> $ r1 = r2 reference columns <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate map one to one r0 <NEXT> r2 identifier = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org hibernate mapping persistent class r0 <NEXT> $ z0 = r6 have property r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org hibernate mapping persistent class r0 <NEXT> $ r2 = r7 get super map superclass <NEXT> if $ r2 == null goto label2 <NEXT> r8 = org hibernate mapping persistent class r0 <NEXT> $ r5 = r8 get super map superclass <NEXT> $ z2 = $ r5 be property define in hierarchy r1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label r9 = org hibernate mapping persistent class r0 <NEXT> $ r3 = r9 get superclass <NEXT> if $ r3 == null goto label3 <NEXT> r10 = org hibernate mapping persistent class r0 <NEXT> $ r4 = r10 get superclass <NEXT> $ z1 = $ r4 be property define in hierarchy r1 <NEXT> if $ z1 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate mapping persistent class r0 <NEXT> $ r1 = r3 property <NEXT> $ r2 = $ r1 iterator <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r27 = org hibernate persister collection basic collection persister r0 <NEXT> $ r2 = r27 create delete <NEXT> r28 = org hibernate persister collection basic collection persister r0 <NEXT> $ r3 = r28 qualify table name <NEXT> r1 = $ r2 set table name $ r3 <NEXT> r29 = org hibernate persister collection basic collection persister r0 <NEXT> $ z0 = r29 have identifier <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r21 = newarray java lang string [ 1 ] <NEXT> r30 = org hibernate persister collection basic collection persister r0 <NEXT> $ r22 = r30 identifier column name <NEXT> $ r21 [ 0 ] = $ r22 <NEXT> r1 add primary key columns $ r21 <NEXT> goto label3 <NEXT> label r39 = org hibernate persister collection basic collection persister r0 <NEXT> $ r24 = r39 get factory <NEXT> $ r25 = $ r24 get session factory option <NEXT> $ z3 = $ r25 be comment enabled <NEXT> if $ z3 == 0 goto label4 <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r12 = r26 append \ `` delete collection row \ `` <NEXT> r40 = org hibernate persister collection basic collection persister r0 <NEXT> $ r13 = r40 get role <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 to string <NEXT> r1 set comment $ r15 <NEXT> label $ r10 = r1 to statement string <NEXT> return $ r10 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r31 = org hibernate persister collection basic collection persister r0 <NEXT> $ z1 = r31 have index <NEXT> if $ z1 == 0 goto label2 <NEXT> r32 = org hibernate persister collection basic collection persister r0 <NEXT> $ z2 = r32 index contain formula <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r33 = org hibernate persister collection basic collection persister r0 <NEXT> $ r18 = r33 key column name <NEXT> r34 = org hibernate persister collection basic collection persister r0 <NEXT> $ r17 = r34 index column name <NEXT> $ r19 = org hibernate internal util collection array helper join $ r18 $ r17 <NEXT> r1 add primary key columns $ r19 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label r35 = org hibernate persister collection basic collection persister r0 <NEXT> $ r4 = r35 key column name <NEXT> r1 add primary key columns $ r4 <NEXT> r36 = org hibernate persister collection basic collection persister r0 <NEXT> $ r8 = r36 element column name <NEXT> r37 = org hibernate persister collection basic collection persister r0 <NEXT> $ r7 = r37 element column be in primary key <NEXT> r38 = org hibernate persister collection basic collection persister r0 <NEXT> $ r6 = r38 element column writer <NEXT> r1 add primary key columns $ r8 $ r7 $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r2 equal \ `` elements\ `` <NEXT> if $ z0 == 0 goto label01 <NEXT> r83 = org hibernate persister collection collection property mapping r0 <NEXT> $ r62 = r83 member persister <NEXT> $ r63 = $ r62 get element column name r1 <NEXT> return $ r63 <NEXT> if $ z0 == 0 goto label01 <NEXT> label $ z1 = r2 equal \ `` indices\ `` <NEXT> if $ z1 == 0 goto label03 <NEXT> r84 = org hibernate persister collection collection property mapping r0 <NEXT> $ r58 = r84 member persister <NEXT> $ z9 = $ r58 have index <NEXT> if $ z9 ! = 0 goto label02 <NEXT> r69 = new org hibernate query exception <NEXT> specialinvoke r69 < init > \ `` unindexed collection in index \ `` <NEXT> r85 = java lang throwable r69 <NEXT> throw r85 <NEXT> if $ z9 ! = 0 goto label02 <NEXT> label r86 = org hibernate persister collection collection property mapping r0 <NEXT> $ r59 = r86 member persister <NEXT> $ r60 = $ r59 get index column name r1 <NEXT> return $ r60 <NEXT> if $ z1 == 0 goto label03 <NEXT> label $ z2 = r2 equal \ `` size\ `` <NEXT> if $ z2 == 0 goto label04 <NEXT> r87 = org hibernate persister collection collection property mapping r0 <NEXT> $ r48 = r87 member persister <NEXT> r64 = $ r48 get key column name <NEXT> $ r49 = newarray java lang string [ 1 ] <NEXT> r70 = new java lang string builder <NEXT> specialinvoke r70 < init > <NEXT> $ r51 = r70 append \ `` count \ `` <NEXT> $ r52 = $ r51 append r1 <NEXT> $ r53 = $ r52 append 46 <NEXT> $ r54 = r64 [ 0 ] <NEXT> $ r55 = $ r53 append $ r54 <NEXT> $ r56 = $ r55 append 41 <NEXT> $ r57 = $ r56 to string <NEXT> $ r49 [ 0 ] = $ r57 <NEXT> return $ r49 <NEXT> if $ z2 == 0 goto label04 <NEXT> label $ z3 = r2 equal \ `` max index\ `` <NEXT> if $ z3 == 0 goto label07 <NEXT> r88 = org hibernate persister collection collection property mapping r0 <NEXT> $ r37 = r88 member persister <NEXT> $ z8 = $ r37 have index <NEXT> if $ z8 ! = 0 goto label05 <NEXT> r71 = new org hibernate query exception <NEXT> specialinvoke r71 < init > \ `` unindexed collection in max index \ `` <NEXT> r89 = java lang throwable r71 <NEXT> throw r89 <NEXT> if $ z8 ! = 0 goto label05 <NEXT> label r90 = org hibernate persister collection collection property mapping r0 <NEXT> $ r38 = r90 member persister <NEXT> r65 = $ r38 get index column name r1 <NEXT> $ i3 = lengthof r65 <NEXT> if $ i3 == 1 goto label06 <NEXT> r72 = new org hibernate query exception <NEXT> specialinvoke r72 < init > \ `` composite collection index in max index \ `` <NEXT> r91 = java lang throwable r72 <NEXT> throw r91 <NEXT> if $ i3 == 1 goto label06 <NEXT> label $ r39 = newarray java lang string [ 1 ] <NEXT> r73 = new java lang string builder <NEXT> specialinvoke r73 < init > <NEXT> $ r41 = r73 append \ `` max \ `` <NEXT> $ r42 = r65 [ 0 ] <NEXT> $ r43 = $ r41 append $ r42 <NEXT> $ r44 = $ r43 append 41 <NEXT> $ r45 = $ r44 to string <NEXT> $ r39 [ 0 ] = $ r45 <NEXT> return $ r39 <NEXT> if $ z3 == 0 goto label07 <NEXT> label $ z4 = r2 equal \ `` min index\ `` <NEXT> if $ z4 == 0 goto label10 <NEXT> r92 = org hibernate persister collection collection property mapping r0 <NEXT> $ r26 = r92 member persister <NEXT> $ z7 = $ r26 have index <NEXT> if $ z7 ! = 0 goto label08 <NEXT> r74 = new org hibernate query exception <NEXT> specialinvoke r74 < init > \ `` unindexed collection in min index \ `` <NEXT> r93 = java lang throwable r74 <NEXT> throw r93 <NEXT> if $ z7 ! = 0 goto label08 <NEXT> label r94 = org hibernate persister collection collection property mapping r0 <NEXT> $ r27 = r94 member persister <NEXT> r66 = $ r27 get index column name r1 <NEXT> $ i2 = lengthof r66 <NEXT> if $ i2 == 1 goto label09 <NEXT> r75 = new org hibernate query exception <NEXT> specialinvoke r75 < init > \ `` composite collection index in min index \ `` <NEXT> r95 = java lang throwable r75 <NEXT> throw r95 <NEXT> if $ i2 == 1 goto label09 <NEXT> label $ r28 = newarray java lang string [ 1 ] <NEXT> r76 = new java lang string builder <NEXT> specialinvoke r76 < init > <NEXT> $ r30 = r76 append \ `` min \ `` <NEXT> $ r31 = r66 [ 0 ] <NEXT> $ r32 = $ r30 append $ r31 <NEXT> $ r33 = $ r32 append 41 <NEXT> $ r34 = $ r33 to string <NEXT> $ r28 [ 0 ] = $ r34 <NEXT> return $ r28 <NEXT> if $ z4 == 0 goto label10 <NEXT> label $ z5 = r2 equal \ `` max element\ `` <NEXT> if $ z5 == 0 goto label12 <NEXT> r96 = org hibernate persister collection collection property mapping r0 <NEXT> $ r17 = r96 member persister <NEXT> r67 = $ r17 get element column name r1 <NEXT> $ i1 = lengthof r67 <NEXT> if $ i1 == 1 goto label11 <NEXT> r77 = new org hibernate query exception <NEXT> specialinvoke r77 < init > \ `` composite collection element in max element \ `` <NEXT> r97 = java lang throwable r77 <NEXT> throw r97 <NEXT> if $ i1 == 1 goto label11 <NEXT> label $ r18 = newarray java lang string [ 1 ] <NEXT> r78 = new java lang string builder <NEXT> specialinvoke r78 < init > <NEXT> $ r20 = r78 append \ `` max \ `` <NEXT> $ r21 = r67 [ 0 ] <NEXT> $ r22 = $ r20 append $ r21 <NEXT> $ r23 = $ r22 append 41 <NEXT> $ r24 = $ r23 to string <NEXT> $ r18 [ 0 ] = $ r24 <NEXT> return $ r18 <NEXT> if $ z5 == 0 goto label12 <NEXT> label $ z6 = r2 equal \ `` min element\ `` <NEXT> if $ z6 == 0 goto label14 <NEXT> r98 = org hibernate persister collection collection property mapping r0 <NEXT> $ r8 = r98 member persister <NEXT> r68 = $ r8 get element column name r1 <NEXT> $ i0 = lengthof r68 <NEXT> if $ i0 == 1 goto label13 <NEXT> r79 = new org hibernate query exception <NEXT> specialinvoke r79 < init > \ `` composite collection element in min element \ `` <NEXT> r99 = java lang throwable r79 <NEXT> throw r99 <NEXT> if $ i0 == 1 goto label13 <NEXT> label $ r9 = newarray java lang string [ 1 ] <NEXT> r80 = new java lang string builder <NEXT> specialinvoke r80 < init > <NEXT> $ r11 = r80 append \ `` min \ `` <NEXT> $ r12 = r68 [ 0 ] <NEXT> $ r13 = $ r11 append $ r12 <NEXT> $ r14 = $ r13 append 41 <NEXT> $ r15 = $ r14 to string <NEXT> $ r9 [ 0 ] = $ r15 <NEXT> return $ r9 <NEXT> if $ z6 == 0 goto label14 <NEXT> label r82 = new org hibernate query exception <NEXT> r81 = new java lang string builder <NEXT> specialinvoke r81 < init > <NEXT> $ r5 = r81 append \ `` illegal syntax near collection \ `` <NEXT> $ r6 = $ r5 append r2 <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke r82 < init > $ r7 <NEXT> r100 = java lang throwable r82 <NEXT> throw r100 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org hibernate engine spi load query influencers none <NEXT> r4 = org hibernate persister entity abstract entity persister r0 <NEXT> $ r3 = r4 create entity loader r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append 91 <NEXT> $ r6 = $ r5 append r0 <NEXT> $ r7 = $ r6 append 46 <NEXT> $ r8 = $ r7 append r1 <NEXT> r3 = $ r8 append 35 <NEXT> if r2 ! = null goto label1 <NEXT> r3 append \ `` < null > \ `` <NEXT> goto label2 <NEXT> label r3 append 93 <NEXT> $ r11 = r3 to string <NEXT> return $ r11 <NEXT> if r2 ! = null goto label1 <NEXT> label r3 append r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate proxy abstract lazy initializer r0 <NEXT> $ r1 = r2 session factory uuid <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate query criterion internal expression abstract tuple element r0 <NEXT> r2 alias = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org hibernate query internal abstract produce query r0 <NEXT> $ r1 = r3 get lock option <NEXT> $ r1 set time out i0 <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org hibernate query internal abstract produce query r0 <NEXT> $ r2 = r4 get lock option <NEXT> $ r2 set follow on lock r1 <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r6 = org hibernate stat internal stats name container r0 <NEXT> $ r1 = r6 map <NEXT> $ r2 = $ r1 key set <NEXT> $ r3 = newarray java lang string [ 0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = java lang string [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate tool hbm2ddl schema export r0 <NEXT> r2 import file = r1 <NEXT> r3 = org hibernate tool hbm2ddl schema export r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org hibernate tool hbm2ddl schema export r0 <NEXT> r1 format = z0 <NEXT> r2 = org hibernate tool hbm2ddl schema export r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org hibernate tool hbm2ddl schema export r0 <NEXT> r1 halt on error = z0 <NEXT> r2 = org hibernate tool hbm2ddl schema export r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate tool hbm2ddl schema export r0 <NEXT> $ r1 = r2 exception <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org hibernate tool hbm2ddl schema update task r0 <NEXT> r1 quiet = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org hibernate transform alias to bean constructor result transformer <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org hibernate transform alias to bean constructor result transformer r0 <NEXT> $ r4 = r5 constructor <NEXT> $ r2 = org hibernate transform alias to bean constructor result transformer r1 <NEXT> $ r3 = $ r2 constructor <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r27 = org hibernate tuple component component tuplizer factory r0 <NEXT> r3 = specialinvoke r27 get proper constructor r1 <NEXT> $ z0 = org hibernate tuple component component tuplizer factory $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> if r3 ! = null goto label1 <NEXT> r24 = new java lang assertion error <NEXT> r23 = new java lang string builder <NEXT> specialinvoke r23 < init > <NEXT> $ r10 = r23 append \ `` unable to locate proper constructor for tuplizer [ \ `` <NEXT> $ r11 = r1 get name <NEXT> $ r12 = $ r10 append $ r11 <NEXT> $ r13 = $ r12 append \ `` ] \ `` <NEXT> $ r14 = $ r13 to string <NEXT> specialinvoke r24 < init > $ r14 <NEXT> throw r24 <NEXT> if r3 ! = null goto label1 <NEXT> label $ r5 = newarray java lang object [ 1 ] <NEXT> $ r5 [ 0 ] = r2 <NEXT> $ r6 = r3 new instance $ r5 <NEXT> $ r7 = org hibernate tuple component component tuplizer $ r6 <NEXT> label return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r3 = new org hibernate engine jdbc internal binary stream impl <NEXT> $ r2 = org hibernate type descriptor java data helper extract bytes r0 l0 i1 <NEXT> specialinvoke r3 < init > $ r2 <NEXT> r4 = java io input stream r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> $ r0 = org hibernate version version <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> label r6 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> $ r2 = r6 w lock <NEXT> $ r2 lock <NEXT> r7 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> r7 be reify = z0 <NEXT> label r8 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> $ r3 = r8 w lock <NEXT> $ r3 unlock <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r13 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> $ r3 = r13 w lock <NEXT> $ r3 lock <NEXT> if r1 ! = null goto label3 <NEXT> label r14 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> $ r10 = r14 w lock <NEXT> $ r10 unlock <NEXT> return 0 <NEXT> if r1 ! = null goto label3 <NEXT> label r15 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> $ r4 = r15 qualifier <NEXT> if $ r4 ! = null goto label5 <NEXT> label r16 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> $ r9 = r16 w lock <NEXT> $ r9 unlock <NEXT> if $ r4 ! = null goto label5 <NEXT> label r17 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> $ r5 = r17 qualifier <NEXT> z4 = $ r5 remove r1 <NEXT> $ r6 = r1 annotation type <NEXT> $ r7 = $ r6 get name <NEXT> r18 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> r18 remove qualifier $ r7 <NEXT> label r19 = org glassfish hk2 utility abstract active descriptor r0 <NEXT> $ r8 = r19 w lock <NEXT> $ r8 unlock <NEXT> return z4 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org glassfish hk2 internal indexed filter impl <NEXT> specialinvoke r2 < init > r0 null <NEXT> r3 = org glassfish hk2 api indexed filter r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org glassfish hk2 utility service locator utility get best contract r0 <NEXT> r2 = r0 get name <NEXT> $ r3 = r0 get service id <NEXT> if $ r3 ! = null goto label1 <NEXT> r10 = new java lang illegal argument exception <NEXT> specialinvoke r10 < init > \ `` the descriptor must have a specific service id\ `` <NEXT> throw r10 <NEXT> if $ r3 ! = null goto label1 <NEXT> label $ r4 = r0 get locator id <NEXT> if $ r4 ! = null goto label2 <NEXT> r11 = new java lang illegal argument exception <NEXT> specialinvoke r11 < init > \ `` the descriptor must have a specific locator id\ `` <NEXT> throw r11 <NEXT> if $ r4 ! = null goto label2 <NEXT> label r12 = new org glassfish hk2 internal specific filter impl <NEXT> $ r6 = r0 get service id <NEXT> $ l0 = $ r6 long value <NEXT> $ r7 = r0 get locator id <NEXT> $ l1 = $ r7 long value <NEXT> specialinvoke r12 < init > r1 r2 $ l0 $ l1 <NEXT> r13 = org glassfish hk2 api indexed filter r12 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r61 = org glassfish hk2 utility classpath descriptor file finder r0 <NEXT> $ r6 = r61 identifier <NEXT> $ r6 clear <NEXT> r53 = new java util array list <NEXT> specialinvoke r53 < init > <NEXT> r62 = org glassfish hk2 utility classpath descriptor file finder r0 <NEXT> r2 = r62 name <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label15 <NEXT> r3 = r2 [ i1 ] <NEXT> r63 = org glassfish hk2 utility classpath descriptor file finder r0 <NEXT> $ r9 = r63 class loader <NEXT> r54 = new java lang string builder <NEXT> specialinvoke r54 < init > <NEXT> $ r10 = r54 append \ `` meta-inf hk2-locator \ `` <NEXT> $ r11 = $ r10 append r3 <NEXT> $ r12 = $ r11 to string <NEXT> r4 = $ r9 get resource $ r12 <NEXT> label $ z0 = r4 have more element <NEXT> if $ z0 == 0 goto label14 <NEXT> $ r13 = r4 next element <NEXT> r5 = java net url $ r13 <NEXT> $ z1 = org glassfish hk2 utility classpath descriptor file finder debug_descriptor_finder <NEXT> if $ z1 == 0 goto label03 <NEXT> $ r26 = org glassfish hk2 utility reflection logger get logger <NEXT> r55 = new java lang string builder <NEXT> specialinvoke r55 < init > <NEXT> $ r28 = r55 append \ `` add in url to set be parsed \ `` <NEXT> $ r29 = $ r28 append r5 <NEXT> $ r30 = $ r29 append \ `` from \ `` <NEXT> $ r31 = $ r30 append \ `` meta-inf hk2-locator \ `` <NEXT> $ r32 = $ r31 append r3 <NEXT> $ r33 = $ r32 to string <NEXT> $ r26 debug $ r33 <NEXT> label r64 = org glassfish hk2 utility classpath descriptor file finder r0 <NEXT> $ r14 = r64 identifier <NEXT> $ r15 = r5 to u r i <NEXT> $ r16 = $ r15 to string <NEXT> $ r14 add $ r16 <NEXT> label goto label06 <NEXT> label r50 = r5 open stream <NEXT> label goto label12 <NEXT> label $ z3 = org glassfish hk2 utility classpath descriptor file finder debug_descriptor_finder <NEXT> if $ z3 == 0 goto label13 <NEXT> $ r17 = org glassfish hk2 utility reflection logger get logger <NEXT> r60 = new java lang string builder <NEXT> specialinvoke r60 < init > <NEXT> $ r19 = r60 append \ `` input stream for \ `` <NEXT> $ r20 = $ r19 append r5 <NEXT> $ r21 = $ r20 append \ `` from \ `` <NEXT> $ r22 = $ r21 append \ `` meta-inf hk2-locator \ `` <NEXT> $ r23 = $ r22 append r3 <NEXT> $ r24 = $ r23 append \ `` have succesfully be opened\ `` <NEXT> $ r25 = $ r24 to string <NEXT> $ r17 debug $ r25 <NEXT> label r53 add r50 <NEXT> goto label02 <NEXT> if $ z0 == 0 goto label14 <NEXT> label i1 = i1 + 1 <NEXT> goto label01 <NEXT> label if i1 > = i0 goto label15 <NEXT> label return r53 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org glassfish hk2 utility descriptor impl r0 <NEXT> $ r3 = r7 metadata <NEXT> if $ r3 ! = null goto label1 <NEXT> r6 = new java util link hash map <NEXT> specialinvoke r6 < init > <NEXT> r8 = org glassfish hk2 utility descriptor impl r0 <NEXT> r8 metadata = r6 <NEXT> label r9 = org glassfish hk2 utility descriptor impl r0 <NEXT> $ r4 = r9 metadata <NEXT> org glassfish hk2 utility reflection reflection helper add metadata $ r4 r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org glassfish hk2 utility descriptor impl r0 <NEXT> $ r3 = r5 metadata <NEXT> if $ r3 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r3 ! = null goto label1 <NEXT> label r6 = org glassfish hk2 utility descriptor impl r0 <NEXT> $ r4 = r6 metadata <NEXT> $ z0 = org glassfish hk2 utility reflection reflection helper remove metadata $ r4 r1 r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if r0 == null goto label1 <NEXT> if r1 ! = null goto label2 <NEXT> label $ r4 = new java lang illegal argument exception <NEXT> specialinvoke $ r4 < init > <NEXT> throw $ r4 <NEXT> if r1 ! = null goto label2 <NEXT> label r3 = r0 get service handle r1 r2 <NEXT> if r3 ! = null goto label3 <NEXT> $ r6 = r0 create and initialize r1 <NEXT> return $ r6 <NEXT> if r3 ! = null goto label3 <NEXT> label $ r5 = r3 get service <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang assertion error <NEXT> specialinvoke $ r1 < init > \ `` service locator utility enable topic distribution method have be remove use extras utility enable topic distribution\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java lang system err <NEXT> org glassfish hk2 utility service locator utility dump all descriptor r0 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org jvnet hk2 internal collector r0 <NEXT> $ r1 = r3 throwables <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org jvnet hk2 internal collector r0 <NEXT> $ r2 = r4 throwables <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if r0 ! = null goto label1 <NEXT> r20 = new java lang illegal argument exception <NEXT> specialinvoke r20 < init > <NEXT> throw r20 <NEXT> if r0 ! = null goto label1 <NEXT> label r21 = new org jvnet hk2 internal collector <NEXT> specialinvoke r21 < init > <NEXT> r4 = org jvnet hk2 internal utility get class analyzer r1 r2 r21 <NEXT> r21 throw if error <NEXT> r5 = org jvnet hk2 internal utility get constructor r0 r4 r21 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 get annotation class \ `` ljavax inject name \ `` <NEXT> r2 = javax inject name $ r3 <NEXT> if r2 ! = null goto label1 <NEXT> return null <NEXT> if r2 ! = null goto label1 <NEXT> label $ r4 = r2 value <NEXT> if $ r4 == null goto label2 <NEXT> $ r6 = r2 value <NEXT> $ z0 = $ r6 equal \ `` \ `` <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r5 = new java lang illegal argument exception <NEXT> specialinvoke $ r5 < init > \ `` @ name on the provide method of a factory must have an explicit value\ `` <NEXT> r1 add throwable $ r5 <NEXT> label $ r7 = r2 value <NEXT> return $ r7 <END>
<BEG> $ r1 = org jvnet hk2 internal utility proxy available <NEXT> if $ r1 == null goto label1 <NEXT> $ r5 = org jvnet hk2 internal utility proxy available <NEXT> $ z1 = $ r5 boolean value <NEXT> return $ z1 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r2 = class \ `` lorg jvnet hk2 internal utility \ `` <NEXT> r8 = $ r2 get class loader <NEXT> if r8 ! = null goto label2 <NEXT> r8 = java lang class loader get system class loader <NEXT> label r8 load class \ `` javassist util proxy method handler\ `` <NEXT> $ r4 = java lang boolean value of 1 <NEXT> org jvnet hk2 internal utility proxy available = $ r4 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org glassfish hk2 utility general hk2 thread local r0 <NEXT> $ r3 = r7 queue <NEXT> r2 = org glassfish hk2 utility general hk2 thread local new storage key $ r3 <NEXT> r8 = org glassfish hk2 utility general hk2 thread local r0 <NEXT> $ r4 = r8 local <NEXT> $ r5 = org glassfish hk2 utility general hk2 thread local mask null r1 <NEXT> $ r4 put r2 $ r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish hk2 utility general thread specific object r0 <NEXT> $ r1 = r2 incoming <NEXT> return $ r1 <END>
<BEG> $ r0 = org glassfish hk2 utility reflection logger instance <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` null\ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = r0 get name <NEXT> $ r3 = $ r1 append $ r2 <NEXT> $ r4 = r0 get parameter type <NEXT> $ r5 = org glassfish hk2 utility reflection pretty pretty print parameter $ r4 <NEXT> $ r6 = $ r3 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` null\ `` <NEXT> if r0 ! = null goto label1 <NEXT> label r1 = r0 get generic type <NEXT> $ z0 = r1 instanceof java lang class <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r14 = java lang class r1 <NEXT> r15 = org glassfish hk2 utility reflection pretty clazz $ r14 <NEXT> goto label3 <NEXT> label $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` field \ `` <NEXT> $ r4 = $ r3 append r15 <NEXT> $ r5 = $ r4 append \ `` \ `` <NEXT> $ r6 = r0 get name <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` in \ `` <NEXT> $ r9 = r0 get declare class <NEXT> $ r10 = $ r9 get name <NEXT> $ r11 = $ r8 append $ r10 <NEXT> $ r12 = $ r11 append \ `` \ `` <NEXT> $ r13 = $ r12 to string <NEXT> return $ r13 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r15 = org glassfish hk2 utility reflection pretty type r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org glassfish hk2 utility reflection reflection helper type from sub class to declare class r0 r2 <NEXT> if r3 ! = null goto label1 <NEXT> return r1 <NEXT> if r3 ! = null goto label1 <NEXT> label $ z0 = r1 instanceof java lang reflect parameterized type <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r14 = java lang reflect parameterized type r1 <NEXT> $ r15 = org glassfish hk2 utility reflection reflection helper fix type variables $ r14 r3 <NEXT> return $ r15 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = r1 instanceof java lang reflect generic array type <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r12 = java lang reflect generic array type r1 <NEXT> $ r13 = org glassfish hk2 utility reflection reflection helper fix generic array type variables $ r12 r3 <NEXT> return $ r13 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z2 = r1 instanceof java lang reflect type variable <NEXT> if $ z2 ! = 0 goto label4 <NEXT> label r4 = java lang reflect type variable r1 <NEXT> r5 = r4 get name <NEXT> $ r7 = r3 get r5 <NEXT> r6 = java lang reflect type $ r7 <NEXT> if r6 ! = null goto label5 <NEXT> label $ z3 = r6 instanceof java lang class <NEXT> if $ z3 == 0 goto label6 <NEXT> return r6 <NEXT> if $ z3 == 0 goto label6 <NEXT> label $ z4 = r6 instanceof java lang reflect parameterized type <NEXT> if $ z4 == 0 goto label7 <NEXT> $ r10 = java lang reflect parameterized type r6 <NEXT> $ r11 = org glassfish hk2 utility reflection reflection helper fix type variables $ r10 r3 <NEXT> return $ r11 <NEXT> if $ z4 == 0 goto label7 <NEXT> label $ z5 = r6 instanceof java lang reflect generic array type <NEXT> if $ z5 == 0 goto label8 <NEXT> $ r8 = java lang reflect generic array type r6 <NEXT> $ r9 = org glassfish hk2 utility reflection reflection helper fix generic array type variables $ r8 r3 <NEXT> return $ r9 <NEXT> if $ z5 == 0 goto label8 <NEXT> label return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof java lang class <NEXT> if $ z0 == 0 goto label1 <NEXT> return class \ `` ljava lang object \ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof java lang reflect parameterized type <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r1 = java lang reflect parameterized type r0 <NEXT> r2 = r1 get actual type argument <NEXT> $ i0 = lengthof r2 <NEXT> if $ i0 > 0 goto label3 <NEXT> label $ r3 = r2 [ 0 ] <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 annotation type <NEXT> $ z0 = r1 be annotation present class \ `` ljavax inject qualifier \ `` <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org jvnet hk2 component multi map r0 <NEXT> $ r2 = r3 get r1 <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http impl nio client http async client builder r0 <NEXT> r1 connection state disable = 1 <NEXT> r2 = org apache http impl nio client http async client builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org apache http nio client method http async method $ 1 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org apache http nio protocol http async response consumer r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label4 <NEXT> label r0 close <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r18 = @ parameter0 <NEXT> r22 = org codehaus httpcache4j conditionals r0 <NEXT> $ r2 = r22 modify since <NEXT> $ z0 = $ r2 be present <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z6 = 1 <NEXT> goto label2 <NEXT> label $ r3 = newarray java lang object [ 2 ] <NEXT> $ r3 [ 0 ] = \ `` if- match\ `` <NEXT> $ r3 [ 1 ] = \ `` if- modified- since\ `` <NEXT> $ r4 = java lang string format \ `` the combination of % s and % s be undefined by the http specification\ <NEXT> org codehaus httpcache4j util precondition check argument $ z6 $ r4 <NEXT> r23 = org codehaus httpcache4j conditionals r0 <NEXT> $ r5 = r23 none match <NEXT> $ z1 = $ r5 be empty <NEXT> $ r6 = newarray java lang object [ 2 ] <NEXT> $ r6 [ 0 ] = \ `` if- match\ `` <NEXT> $ r6 [ 1 ] = \ `` if- none- match\ `` <NEXT> $ r7 = java lang string format \ `` the combination of % s and % s be undefined by the http specification\ <NEXT> org codehaus httpcache4j util precondition check argument $ z1 $ r7 <NEXT> r19 = new java util array list <NEXT> r24 = org codehaus httpcache4j conditionals r0 <NEXT> $ r9 = r24 match <NEXT> specialinvoke r19 < init > $ r9 <NEXT> if r18 ! = null goto label3 <NEXT> r18 = org codehaus httpcache4j tag all <NEXT> label $ r10 = org codehaus httpcache4j tag all <NEXT> $ z2 = $ r10 equal r18 <NEXT> if $ z2 == 0 goto label4 <NEXT> r19 clear <NEXT> label $ r11 = org codehaus httpcache4j tag all <NEXT> $ z3 = r19 contain $ r11 <NEXT> if $ z3 ! = 0 goto label5 <NEXT> $ z4 = r19 contain r18 <NEXT> if $ z4 ! = 0 goto label6 <NEXT> r19 add r18 <NEXT> goto label6 <NEXT> label r21 = new org codehaus httpcache4j conditionals <NEXT> $ r14 = java util collection unmodifiable list r19 <NEXT> $ r15 = org codehaus httpcache4j conditionals empty <NEXT> $ r16 = java util optional empty <NEXT> r25 = org codehaus httpcache4j conditionals r0 <NEXT> $ r17 = r25 un modify since <NEXT> specialinvoke r21 < init > $ r14 $ r15 $ r16 $ r17 <NEXT> return r21 <NEXT> if $ z3 ! = 0 goto label5 <NEXT> label r20 = new java lang illegal argument exception <NEXT> specialinvoke r20 < init > \ `` tag all already in the list\ `` <NEXT> throw r20 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z6 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> $ r3 = new java lang illegal argument exception <NEXT> specialinvoke $ r3 < init > \ `` http parameter may not be null\ `` <NEXT> throw $ r3 <NEXT> if r0 ! = null goto label1 <NEXT> label r0 set parameter \ `` http auth credential-charset\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache http conn scheme scheme r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i2 = 0 <NEXT> i3 = 0 <NEXT> label $ i0 = r0 length <NEXT> if i3 > = $ i0 goto label3 <NEXT> $ c1 = r0 char at i3 <NEXT> if $ c1 ! = 46 goto label2 <NEXT> i2 = i2 + 1 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label3 <NEXT> label return i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache http impl client abstract http client r0 <NEXT> r2 default params = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache http impl client redirect location r0 <NEXT> $ r2 = r4 unique <NEXT> $ r2 add r1 <NEXT> r5 = org apache http impl client redirect location r0 <NEXT> $ r3 = r5 all <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http impl conn abstract pool entry r0 <NEXT> r1 tracker = null <NEXT> r2 = org apache http impl conn abstract pool entry r0 <NEXT> r2 state = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http impl conn tsccm route specific pool r0 <NEXT> $ i0 = r1 max entry <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http impl conn tsccm route specific pool r0 <NEXT> $ i0 = r1 num entry <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache http impl conn tsccm conn pool by route <NEXT> r5 = org apache http impl conn tsccm thread safe client conn manager r0 <NEXT> $ r3 = r5 conn operator <NEXT> specialinvoke r4 < init > $ r3 r1 <NEXT> r6 = org apache http impl conn tsccm abstract conn pool r4 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z1 = r1 equal r2 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z2 = r2 start with \ `` \ `` <NEXT> if $ z2 == 0 goto label2 <NEXT> $ z3 = r1 end with r2 <NEXT> if $ z3 == 0 goto label2 <NEXT> label $ z4 = 1 <NEXT> goto label3 <NEXT> label return $ z4 <NEXT> if $ z3 == 0 goto label2 <NEXT> label $ z4 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` cookie may not be null\ `` <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label $ z0 = r1 instanceof org apache http cookie set cookie2 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = r1 instanceof org apache http cookie client cookie <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r3 = org apache http cookie client cookie r1 <NEXT> $ z2 = $ r3 contain attribute \ `` version\ `` <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r7 = new org apache http cookie cookie restriction violation exception <NEXT> specialinvoke r7 < init > \ `` violate rfc 2965 version attribute be require \ `` <NEXT> r8 = java lang throwable r7 <NEXT> throw r8 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r15 = org apache http client utils u r i builder r0 <NEXT> $ r5 = r15 query params <NEXT> if $ r5 ! = null goto label1 <NEXT> r13 = new java util array list <NEXT> specialinvoke r13 < init > <NEXT> r16 = org apache http client utils u r i builder r0 <NEXT> r16 query params = r13 <NEXT> label r17 = org apache http client utils u r i builder r0 <NEXT> $ r6 = r17 query params <NEXT> $ z0 = $ r6 be empty <NEXT> if $ z0 ! = 0 goto label4 <NEXT> r18 = org apache http client utils u r i builder r0 <NEXT> $ r9 = r18 query params <NEXT> r3 = $ r9 iterator <NEXT> label $ z2 = r3 have next <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r10 = r3 next <NEXT> r4 = org apache http name value pair $ r10 <NEXT> $ r11 = r4 get name <NEXT> $ z3 = $ r11 equal r1 <NEXT> if $ z3 == 0 goto label3 <NEXT> r3 remove <NEXT> label goto label2 <NEXT> if $ z2 == 0 goto label4 <NEXT> label r19 = org apache http client utils u r i builder r0 <NEXT> $ r8 = r19 query params <NEXT> r14 = new org apache http message basic name value pair <NEXT> specialinvoke r14 < init > r1 r2 <NEXT> $ r8 add r14 <NEXT> r20 = org apache http client utils u r i builder r0 <NEXT> r20 encode query = null <NEXT> r21 = org apache http client utils u r i builder r0 <NEXT> r21 encode scheme specific part = null <NEXT> r22 = org apache http client utils u r i builder r0 <NEXT> return r22 <END>
<BEG> $ r0 = new org apache http conn ssl s s l socket factory <NEXT> $ r1 = javax net ssl s s l socket factory get default <NEXT> $ r3 = javax net ssl s s l socket factory $ r1 <NEXT> $ r2 = org apache http conn ssl s s l socket factory browser_compatible_hostname_verifier <NEXT> specialinvoke $ r0 < init > $ r3 $ r2 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache http conn util inet address utils ipv4_pattern <NEXT> $ r2 = $ r1 matcher r0 <NEXT> $ z0 = $ r2 match <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http client config request config r0 <NEXT> $ z0 = r1 authentication enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache http client config request config r0 <NEXT> $ r1 = r2 target prefer auth scheme <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http client config request config r0 <NEXT> $ z0 = r1 decompression enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http client entity entity builder r0 <NEXT> r1 gzip compress = 1 <NEXT> r2 = org apache http client entity entity builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org apache http util args not null r1 \ `` parameter name\ `` <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http impl client http client builder r0 <NEXT> r1 evict expire connection = 1 <NEXT> r2 = org apache http impl client http client builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http client config request config r0 <NEXT> $ i0 = r1 connection request timeout <NEXT> return $ i0 <END>
<BEG> $ r0 = org apache http conn util public suffix matcher loader get default <NEXT> $ r1 = org apache http impl client cookie spec registry create default builder $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> if c0 ! = 44 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if c0 ! = 44 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> label r7 = org apache http params basic http params r0 <NEXT> $ r2 = r7 clone <NEXT> $ r3 = org apache http params http params $ r2 <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r5 = new java lang illegal argument exception <NEXT> specialinvoke r5 < init > \ `` map of handler may not be null\ `` <NEXT> throw r5 <NEXT> if r1 ! = null goto label1 <NEXT> label r6 = org apache http protocol uri pattern matcher r0 <NEXT> $ r2 = r6 map <NEXT> $ r2 clear <NEXT> r7 = org apache http protocol uri pattern matcher r0 <NEXT> $ r3 = r7 map <NEXT> $ r3 put all r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> i3 = @ parameter1 <NEXT> i4 = @ parameter2 <NEXT> if i3 > = 0 goto label1 <NEXT> i3 = 0 <NEXT> label r2 = org apache http util byte array buffer r0 <NEXT> $ i1 = r2 len <NEXT> if i4 < = $ i1 goto label2 <NEXT> r3 = org apache http util byte array buffer r0 <NEXT> i4 = r3 len <NEXT> label if i3 < = i4 goto label3 <NEXT> return -1 <NEXT> label if i3 < = i4 goto label3 <NEXT> label i5 = i3 <NEXT> label if i5 > = i4 goto label6 <NEXT> r4 = org apache http util byte array buffer r0 <NEXT> $ r1 = r4 buffer <NEXT> $ b2 = $ r1 [ i5 ] <NEXT> if $ b2 ! = b0 goto label5 <NEXT> return i5 <NEXT> if $ b2 ! = b0 goto label5 <NEXT> label i5 = i5 + 1 <NEXT> goto label4 <NEXT> label if i5 > = i4 goto label6 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = r1 buffer <NEXT> r3 = org apache http util byte array buffer r0 <NEXT> r3 append $ r2 i0 i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache http util char array buffer r0 <NEXT> $ r1 = r2 buffer <NEXT> $ c1 = $ r1 [ i0 ] <NEXT> return $ c1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http util char array buffer r0 <NEXT> $ i0 = r1 len <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache http util version info r0 <NEXT> $ r1 = r2 info module <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache http util version info r0 <NEXT> $ r1 = r2 info release <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache http util version info r0 <NEXT> $ r1 = r2 info timestamp <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = new java util hash set <NEXT> r5 = org apache http params basic http params r0 <NEXT> $ r2 = r5 parameter <NEXT> $ r3 = $ r2 key set <NEXT> specialinvoke r4 < init > $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r22 = org apache http pool abstract conn pool r0 <NEXT> $ z0 = r22 be shut down <NEXT> if $ z0 == 0 goto label01 <NEXT> return <NEXT> if $ z0 == 0 goto label01 <NEXT> label r23 = org apache http pool abstract conn pool r0 <NEXT> r23 be shut down = 1 <NEXT> r24 = org apache http pool abstract conn pool r0 <NEXT> $ r2 = r24 lock <NEXT> $ r2 lock <NEXT> label r25 = org apache http pool abstract conn pool r0 <NEXT> $ r3 = r25 available <NEXT> r16 = $ r3 iterator <NEXT> label $ z1 = r16 have next <NEXT> if $ z1 == 0 goto label04 <NEXT> $ r13 = r16 next <NEXT> r17 = org apache http pool pool entry $ r13 <NEXT> r17 close <NEXT> goto label03 <NEXT> if $ z1 == 0 goto label04 <NEXT> label r26 = org apache http pool abstract conn pool r0 <NEXT> $ r4 = r26 lease <NEXT> r18 = $ r4 iterator <NEXT> label $ z2 = r18 have next <NEXT> if $ z2 == 0 goto label06 <NEXT> $ r12 = r18 next <NEXT> r19 = org apache http pool pool entry $ r12 <NEXT> r19 close <NEXT> goto label05 <NEXT> if $ z2 == 0 goto label06 <NEXT> label r27 = org apache http pool abstract conn pool r0 <NEXT> $ r5 = r27 route to pool <NEXT> $ r6 = $ r5 value <NEXT> r20 = $ r6 iterator <NEXT> label $ z3 = r20 have next <NEXT> if $ z3 == 0 goto label08 <NEXT> $ r11 = r20 next <NEXT> r21 = org apache http pool route specific pool $ r11 <NEXT> r21 shutdown <NEXT> goto label07 <NEXT> if $ z3 == 0 goto label08 <NEXT> label r28 = org apache http pool abstract conn pool r0 <NEXT> $ r7 = r28 route to pool <NEXT> $ r7 clear <NEXT> r29 = org apache http pool abstract conn pool r0 <NEXT> $ r8 = r29 lease <NEXT> $ r8 clear <NEXT> r30 = org apache http pool abstract conn pool r0 <NEXT> $ r9 = r30 available <NEXT> $ r9 clear <NEXT> label r31 = org apache http pool abstract conn pool r0 <NEXT> $ r10 = r31 lock <NEXT> $ r10 unlock <NEXT> goto label12 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache http entity content type r0 <NEXT> $ r2 = r4 get mime type <NEXT> $ r3 = org apache http entity content type create $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i3 = r2 get pos <NEXT> i0 = r2 get pos <NEXT> i1 = r2 get upper bound <NEXT> i4 = i0 <NEXT> label if i4 > = i1 goto label3 <NEXT> c2 = r1 char at i4 <NEXT> $ z0 = org apache http message token parser be whitespace c2 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> goto label3 <NEXT> label r2 update po i3 <NEXT> return <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label i3 = i3 + 1 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org apache http util args not null r0 \ `` response\ `` <NEXT> $ r3 = r0 get entity <NEXT> org apache http util entity utils consume $ r3 <NEXT> r0 set entity r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return 1 <NEXT> if r0 ! = null goto label1 <NEXT> label i2 = 0 <NEXT> label $ i0 = r0 length <NEXT> if i2 > = $ i0 goto label4 <NEXT> $ c1 = r0 char at i2 <NEXT> $ z0 = java lang character be whitespace $ c1 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> label i2 = i2 + 1 <NEXT> goto label2 <NEXT> if i2 > = $ i0 goto label4 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache http impl nio n http connection base r0 <NEXT> $ i0 = r3 status <NEXT> if $ i0 == 0 goto label1 <NEXT> r2 = new org apache http connection close exception <NEXT> specialinvoke r2 < init > <NEXT> r4 = java lang throwable r2 <NEXT> throw r4 <NEXT> if $ i0 == 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = r1 attachment <NEXT> r2 = org apache http impl nio reactor i o session impl $ r4 <NEXT> label $ z0 = r1 be acceptable <NEXT> if $ z0 == 0 goto label2 <NEXT> r7 = org apache http impl nio reactor abstract i o reactor r0 <NEXT> r7 acceptable r1 <NEXT> label $ z1 = r1 be connectable <NEXT> if $ z1 == 0 goto label3 <NEXT> r8 = org apache http impl nio reactor abstract i o reactor r0 <NEXT> r8 connectable r1 <NEXT> label $ z2 = r1 be readable <NEXT> if $ z2 == 0 goto label4 <NEXT> r2 reset last read <NEXT> r9 = org apache http impl nio reactor abstract i o reactor r0 <NEXT> r9 readable r1 <NEXT> label $ z3 = r1 be writable <NEXT> if $ z3 == 0 goto label5 <NEXT> r2 reset last write <NEXT> r10 = org apache http impl nio reactor abstract i o reactor r0 <NEXT> r10 writable r1 <NEXT> label goto label7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = org apache http impl nio reactor abstract i o reactor r0 <NEXT> $ r2 = r3 close session <NEXT> $ r2 add r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r8 = org apache http impl nio reactor abstract multiworker i o reactor r0 <NEXT> $ r3 = r8 status lock <NEXT> entermonitor $ r3 <NEXT> label $ l2 = java lang system current time millis <NEXT> l1 = $ l2 + l0 <NEXT> l6 = l0 <NEXT> label r9 = org apache http impl nio reactor abstract multiworker i o reactor r0 <NEXT> $ r6 = r9 status <NEXT> $ r7 = org apache http nio reactor i o reactor status shut_down <NEXT> if $ r6 == $ r7 goto label3 <NEXT> r10 = org apache http impl nio reactor abstract multiworker i o reactor r0 <NEXT> $ r4 = r10 status lock <NEXT> $ r4 wait l6 <NEXT> $ b3 = l0 cmp 0l <NEXT> if $ b3 < = 0 goto label2 <NEXT> $ l4 = java lang system current time millis <NEXT> l6 = l1 - $ l4 <NEXT> $ b5 = l6 cmp 0l <NEXT> if $ b5 > 0 goto label2 <NEXT> goto label3 <NEXT> label exitmonitor $ r3 <NEXT> label goto label7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http impl nio reactor i o reactor config r0 <NEXT> $ l0 = r1 shutdown grace period <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache http nio protocol http async service r0 <NEXT> $ r1 = r2 response factory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache http nio protocol http async service r0 <NEXT> $ r1 = r2 exception logger <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http nio util expandable buffer r0 <NEXT> $ i0 = r1 mode <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache http nio util expandable buffer r0 <NEXT> $ r1 = r2 buffer <NEXT> $ i0 = $ r1 capacity <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get have var params <NEXT> $ r2 = java lang boolean value of $ r1 <NEXT> $ z0 = $ r2 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = net revelc code impsort ex imp sort exception r0 <NEXT> $ r1 = r2 reason <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r10 = com fasterxml jackson core base parser base r0 <NEXT> $ r2 = r10 _parsing context <NEXT> $ z0 = $ r2 in root <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r11 = com fasterxml jackson core base parser base r0 <NEXT> $ r3 = r11 _parsing context <NEXT> $ z1 = $ r3 in array <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r9 = \ `` array\ `` <NEXT> goto label2 <NEXT> label $ r4 = newarray java lang object [ 2 ] <NEXT> $ r4 [ 0 ] = $ r9 <NEXT> r12 = com fasterxml jackson core base parser base r0 <NEXT> $ r5 = r12 _parsing context <NEXT> r13 = com fasterxml jackson core base parser base r0 <NEXT> $ r6 = r13 _get source reference <NEXT> $ r7 = $ r5 get start location $ r6 <NEXT> $ r4 [ 1 ] = $ r7 <NEXT> $ r8 = java lang string format \ `` expect close marker for % s start marker at % s \ <NEXT> r14 = com fasterxml jackson core base parser base r0 <NEXT> r14 _report invalid e o f $ r8 null <NEXT> label return <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ r9 = \ `` object\ `` <END>
<BEG> r0 = @ this <NEXT> r3 = com fasterxml jackson core base64 variant r0 <NEXT> $ r1 = r3 _name <NEXT> $ r2 = com fasterxml jackson core base64 variant value of $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i12 = @ parameter2 <NEXT> i13 = i12 + 1 <NEXT> r6 = com fasterxml jackson core base64 variant r0 <NEXT> $ r2 = r6 _base64 to ascii b <NEXT> $ i1 = i0 > > 18 <NEXT> $ i2 = $ i1 & 63 <NEXT> $ b3 = $ r2 [ $ i2 ] <NEXT> r1 [ i12 ] = $ b3 <NEXT> i14 = i13 + 1 <NEXT> r7 = com fasterxml jackson core base64 variant r0 <NEXT> $ r3 = r7 _base64 to ascii b <NEXT> $ i4 = i0 > > 12 <NEXT> $ i5 = $ i4 & 63 <NEXT> $ b6 = $ r3 [ $ i5 ] <NEXT> r1 [ i13 ] = $ b6 <NEXT> i15 = i14 + 1 <NEXT> r8 = com fasterxml jackson core base64 variant r0 <NEXT> $ r4 = r8 _base64 to ascii b <NEXT> $ i7 = i0 > > 6 <NEXT> $ i8 = $ i7 & 63 <NEXT> $ b9 = $ r4 [ $ i8 ] <NEXT> r1 [ i14 ] = $ b9 <NEXT> i16 = i15 + 1 <NEXT> r9 = com fasterxml jackson core base64 variant r0 <NEXT> $ r5 = r9 _base64 to ascii b <NEXT> $ i10 = i0 & 63 <NEXT> $ b11 = $ r5 [ $ i10 ] <NEXT> r1 [ i15 ] = $ b11 <NEXT> return i16 <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray java lang object [ 2 ] <NEXT> r5 = com fasterxml jackson core base64 variant r0 <NEXT> $ r2 = r5 get name <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> r6 = com fasterxml jackson core base64 variant r0 <NEXT> $ c0 = r6 get pad char <NEXT> $ r3 = java lang character value of $ c0 <NEXT> $ r1 [ 1 ] = $ r3 <NEXT> $ r4 = java lang string format \ `` unexpected end of base64-encoded string base64 variant \ ' % s\ ' expect pad one or more \ ' % c\ ' character at the end\ <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = com fasterxml jackson core filter token filter r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com fasterxml jackson core filter token filter r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com fasterxml jackson core filter token filter r0 <NEXT> $ z0 = r1 _include scalar <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson core format data format matcher r0 <NEXT> $ r1 = r2 _match <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = com fasterxml jackson core io char type get7 bit output escape <NEXT> $ i0 = lengthof r0 <NEXT> $ r1 = java util array copy of r0 $ i0 <NEXT> return $ r1 <END>
<BEG> $ r0 = com fasterxml jackson core io json string encoder instance <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r4 = com fasterxml jackson core io segment string writer r0 <NEXT> $ r2 = r4 _buffer <NEXT> r1 = $ r2 content a string <NEXT> r5 = com fasterxml jackson core io segment string writer r0 <NEXT> $ r3 = r5 _buffer <NEXT> $ r3 release buffer <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson core io serialize string r0 <NEXT> $ r1 = r2 _value <NEXT> $ i0 = $ r1 length <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = com fasterxml jackson core json factory r0 <NEXT> r2 = r4 get format name <NEXT> if r2 == null goto label2 <NEXT> $ r3 = r1 get schema type <NEXT> $ z0 = r2 equal $ r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson core json factory r0 <NEXT> $ r1 = r2 _input decorator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = new java lang string builder <NEXT> specialinvoke r4 < init > 100 <NEXT> r5 = com fasterxml jackson core json location r0 <NEXT> $ r2 = r5 _append source desc r4 <NEXT> $ r3 = $ r2 to string <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r3 = com fasterxml jackson core json parser r0 <NEXT> $ r1 = r3 current token <NEXT> $ r2 = com fasterxml jackson core json token start_array <NEXT> if $ r1 ! = $ r2 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 ! = $ r2 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com fasterxml jackson core json parser r0 <NEXT> $ r2 = r4 _codec <NEXT> r5 = com fasterxml jackson core json parser r0 <NEXT> $ r3 = $ r2 read value r5 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` operation not support by parser of type \ `` <NEXT> $ r4 = r0 get class <NEXT> $ r5 = $ r4 get name <NEXT> $ r6 = $ r3 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke $ r1 < init > $ r7 <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson core json pointer r0 <NEXT> $ r1 = r2 _next segment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> i3 = 0 <NEXT> r12 = com fasterxml jackson core sym char to name canonicalizer r0 <NEXT> $ r1 = r12 _symbols <NEXT> i0 = lengthof $ r1 <NEXT> i4 = 0 <NEXT> label if i4 > = i0 goto label3 <NEXT> r13 = com fasterxml jackson core sym char to name canonicalizer r0 <NEXT> $ r8 = r13 _symbols <NEXT> r9 = $ r8 [ i4 ] <NEXT> if r9 == null goto label2 <NEXT> i3 = i3 + 1 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> label if i4 > = i0 goto label3 <NEXT> label i5 = i0 > > 1 <NEXT> i6 = 0 <NEXT> label if i6 > = i5 goto label7 <NEXT> r14 = com fasterxml jackson core sym char to name canonicalizer r0 <NEXT> $ r7 = r14 _buckets <NEXT> r10 = $ r7 [ i6 ] <NEXT> label if r10 == null goto label6 <NEXT> label i6 = i6 + 1 <NEXT> goto label4 <NEXT> label if i6 > = i5 goto label7 <NEXT> label r15 = com fasterxml jackson core sym char to name canonicalizer r0 <NEXT> $ i1 = r15 _size <NEXT> if i3 == $ i1 goto label8 <NEXT> r11 = new java lang illegal state exception <NEXT> $ r3 = newarray java lang object [ 2 ] <NEXT> r16 = com fasterxml jackson core sym char to name canonicalizer r0 <NEXT> $ i2 = r16 _size <NEXT> $ r4 = java lang integer value of $ i2 <NEXT> $ r3 [ 0 ] = $ r4 <NEXT> $ r5 = java lang integer value of i3 <NEXT> $ r3 [ 1 ] = $ r5 <NEXT> $ r6 = java lang string format \ `` internal error expect internal size % d v calculate count % d\ <NEXT> specialinvoke r11 < init > $ r6 <NEXT> throw r11 <NEXT> if i3 == $ i1 goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson core type resolve type r0 <NEXT> $ r1 = r2 get reference type <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson core util json parser delegate r0 <NEXT> $ r1 = r2 delegate <NEXT> $ r1 clear current token <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com fasterxml jackson core util json parser delegate r0 <NEXT> $ r2 = r3 delegate <NEXT> $ i0 = $ r2 get text r1 <NEXT> return $ i0 <END>
<BEG> $ r0 = new java lang runtime exception <NEXT> specialinvoke $ r0 < init > \ `` internal error this code path should never get executed\ `` <NEXT> throw $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com fasterxml jackson core filter token filter context r0 <NEXT> $ z0 = r3 _need to handle name <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = com fasterxml jackson core filter token filter context r0 <NEXT> r4 _need to handle name = 0 <NEXT> r5 = com fasterxml jackson core filter token filter context r0 <NEXT> $ r2 = r5 _current name <NEXT> r1 write field name $ r2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r4 = com fasterxml jackson core io i o context r0 <NEXT> $ r1 = r4 _read i o buffer <NEXT> r5 = com fasterxml jackson core io i o context r0 <NEXT> r5 _verify alloc $ r1 <NEXT> r6 = com fasterxml jackson core io i o context r0 <NEXT> $ r2 = r6 _buffer recycler <NEXT> $ r3 = $ r2 alloc byte buffer 0 <NEXT> r7 = com fasterxml jackson core io i o context r0 <NEXT> r7 _read i o buffer = $ r3 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson core json location r0 <NEXT> $ r1 = r2 _content reference <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson core json parser r0 <NEXT> $ r1 = r2 get token location <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = com fasterxml jackson core util json parser delegate r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r2 = $ r1 get big integer value <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r1 be number <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z3 = r2 be number <NEXT> if $ z3 == 0 goto label1 <NEXT> $ z4 = com github fge jackson json num equal num equal r1 r2 <NEXT> return $ z4 <NEXT> if $ z3 == 0 goto label1 <NEXT> label r3 = com github fge jackson node type get node type r1 <NEXT> r4 = com github fge jackson node type get node type r2 <NEXT> if r3 == r4 goto label2 <NEXT> return 0 <NEXT> if r3 == r4 goto label2 <NEXT> label $ z1 = r1 be container node <NEXT> if $ z1 ! = 0 goto label3 <NEXT> $ z2 = r1 equal r2 <NEXT> return $ z2 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label $ i0 = r1 size <NEXT> $ i1 = r2 size <NEXT> if $ i0 == $ i1 goto label4 <NEXT> label $ r5 = com github fge jackson node type array <NEXT> if r3 ! = $ r5 goto label5 <NEXT> r6 = com github fge jackson json num equal r0 <NEXT> $ z5 = specialinvoke r6 array equal r1 r2 <NEXT> goto label6 <NEXT> label return $ z5 <NEXT> if r3 ! = $ r5 goto label5 <NEXT> label r7 = com github fge jackson json num equal r0 <NEXT> $ z5 = specialinvoke r7 object equal r1 r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = com github fge jackson jsonpointer json pointer bundle <NEXT> $ r3 check not null r1 \ `` null input\ `` <NEXT> r9 = com github fge jackson jsonpointer json pointer r0 <NEXT> $ r5 = r9 token resolvers <NEXT> r2 = com google common collect list new array list $ r5 <NEXT> $ r6 = r1 token resolvers <NEXT> r2 add all $ r6 <NEXT> r8 = new com github fge jackson jsonpointer json pointer <NEXT> specialinvoke r8 < init > r2 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = r1 <NEXT> r7 = com github fge jackson jsonpointer tree pointer r0 <NEXT> $ r4 = r7 token resolvers <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = com github fge jackson jsonpointer token resolver $ r5 <NEXT> if r6 ! = null goto label2 <NEXT> goto label3 <NEXT> label return r6 <NEXT> if r6 ! = null goto label2 <NEXT> label r6 = r3 get r6 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind bean description r0 <NEXT> $ r1 = r2 _type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com fasterxml jackson databind cfg config override r0 <NEXT> $ r2 = r6 _overrides <NEXT> if $ r2 ! = null goto label1 <NEXT> return null <NEXT> if $ r2 ! = null goto label1 <NEXT> label r7 = com fasterxml jackson databind cfg config override r0 <NEXT> $ r3 = r7 _overrides <NEXT> $ r4 = $ r3 get r1 <NEXT> $ r5 = com fasterxml jackson databind cfg config override $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com fasterxml jackson databind cfg mapper builder r0 <NEXT> $ r2 = r5 _mapper <NEXT> $ r2 set default setter info r1 <NEXT> r6 = com fasterxml jackson databind cfg mapper builder r0 <NEXT> $ r4 = r6 _this <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com fasterxml jackson databind cfg mapper builder r0 <NEXT> $ r2 = r5 _mapper <NEXT> $ r2 set time zone r1 <NEXT> r6 = com fasterxml jackson databind cfg mapper builder r0 <NEXT> $ r4 = r6 _this <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind cfg mapper config base r0 <NEXT> $ r1 = r2 _mix ins <NEXT> $ i0 = $ r1 local size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get simple name <NEXT> r4 = com fasterxml jackson databind deser bean deserializer base r0 <NEXT> $ r3 = r4 find property $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com fasterxml jackson databind deser bean deserializer builder r0 <NEXT> r2 add property r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind deser impl bean property map r0 <NEXT> $ r1 = r2 _props in order <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind deser std delegate deserializer r0 <NEXT> $ r1 = r2 _delegatee <NEXT> $ z0 = $ r1 be cachable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com fasterxml jackson databind deserialization config r0 <NEXT> $ i1 = r1 _deser feature <NEXT> $ i2 = $ i1 & i0 <NEXT> if $ i2 ! = i0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i2 ! = i0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind java type r0 <NEXT> $ r1 = r2 _class <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> $ r2 = new com fasterxml jackson databind json map exception $ reference <NEXT> specialinvoke $ r2 < init > r1 i0 <NEXT> $ r3 = com fasterxml jackson databind json map exception wrap with path r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r4 = new java lang string builder <NEXT> specialinvoke r4 < init > <NEXT> r5 = com fasterxml jackson databind json map exception r0 <NEXT> $ r2 = r5 get path reference r4 <NEXT> $ r3 = $ r2 to string <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = com fasterxml jackson databind module simple module r0 <NEXT> $ r4 = r8 _subtypes <NEXT> if $ r4 ! = null goto label1 <NEXT> r7 = new java util link hash set <NEXT> specialinvoke r7 < init > <NEXT> r9 = com fasterxml jackson databind module simple module r0 <NEXT> r9 _subtypes = r7 <NEXT> label i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r3 = r1 [ i1 ] <NEXT> r10 = com fasterxml jackson databind module simple module r0 <NEXT> r10 _check not null r3 \ `` subtype to register\ `` <NEXT> r11 = com fasterxml jackson databind module simple module r0 <NEXT> $ r5 = r11 _subtypes <NEXT> $ r5 add r3 <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label3 <NEXT> label r12 = com fasterxml jackson databind module simple module r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com fasterxml jackson databind node array node r0 <NEXT> $ r3 = r4 _children <NEXT> $ r2 = r1 _children <NEXT> $ r3 add all $ r2 <NEXT> r5 = com fasterxml jackson databind node array node r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = com fasterxml jackson databind node array node r0 <NEXT> r1 = r3 array node <NEXT> r4 = com fasterxml jackson databind node array node r0 <NEXT> r5 = com fasterxml jackson databind json node r1 <NEXT> r4 _insert i0 r5 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com fasterxml jackson databind node array node r0 <NEXT> $ r2 = r3 _children <NEXT> $ r2 add r1 <NEXT> r4 = com fasterxml jackson databind node array node r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind node binary node r0 <NEXT> $ r1 = r2 _data <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> $ r1 = com fasterxml jackson databind node int node value of b0 <NEXT> r2 = com fasterxml jackson databind node numeric node $ r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = new com fasterxml jackson databind node array node <NEXT> r3 = com fasterxml jackson databind node json node factory r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new com fasterxml jackson databind node p o j o node <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = com fasterxml jackson databind node value node r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = @ parameter1 <NEXT> if r5 ! = null goto label1 <NEXT> r6 = com fasterxml jackson databind node object node r0 <NEXT> r5 = r6 null node <NEXT> label r7 = com fasterxml jackson databind node object node r0 <NEXT> $ r2 = r7 _children <NEXT> $ r3 = $ r2 put r1 r5 <NEXT> $ r4 = com fasterxml jackson databind json node $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = com fasterxml jackson databind node p o j o node r0 <NEXT> $ r1 = r4 _value <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = \ `` null\ `` <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r5 = com fasterxml jackson databind node p o j o node r0 <NEXT> $ r2 = r5 _value <NEXT> $ r3 = $ r2 to string <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind node p o j o node r0 <NEXT> $ r1 = r2 _value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com fasterxml jackson databind object mapper r0 <NEXT> $ r2 = r4 _config override <NEXT> $ r3 = com fasterxml jackson databind introspect visibility checker $ std construct r1 <NEXT> r5 = com fasterxml jackson databind introspect visibility checker $ r3 <NEXT> $ r2 set default visibility r5 <NEXT> r6 = com fasterxml jackson databind object mapper r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com fasterxml jackson databind object mapper r0 <NEXT> $ r2 = r3 _json factory <NEXT> $ z0 = $ r2 be enable r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com fasterxml jackson databind object mapper r0 <NEXT> $ r2 = r4 get serialization config <NEXT> r5 = com fasterxml jackson databind object mapper r0 <NEXT> $ r3 = r5 _serializer provider $ r2 <NEXT> $ z0 = $ r3 have serializer for r1 null <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r4 = com fasterxml jackson databind object writer r0 <NEXT> $ r1 = r4 _config <NEXT> $ r2 = $ r1 get default pretty printer <NEXT> r5 = com fasterxml jackson databind object writer r0 <NEXT> $ r3 = r5 with $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = com fasterxml jackson databind ser bean property writer r0 <NEXT> $ r3 = r8 _internal setting <NEXT> if $ r3 ! = null goto label1 <NEXT> r7 = new java util hash map <NEXT> specialinvoke r7 < init > <NEXT> r9 = com fasterxml jackson databind ser bean property writer r0 <NEXT> r9 _internal setting = r7 <NEXT> label r10 = com fasterxml jackson databind ser bean property writer r0 <NEXT> $ r4 = r10 _internal setting <NEXT> $ r5 = $ r4 put r1 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind ser default serializer provider r0 <NEXT> $ r1 = r2 _serializer cache <NEXT> $ r1 flush <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r4 = new java util hash set <NEXT> $ i0 = lengthof r0 <NEXT> specialinvoke r4 < init > $ i0 <NEXT> java util collection add all r4 r0 <NEXT> r5 = new com fasterxml jackson databind ser impl simple bean property filter $ filter except filter <NEXT> specialinvoke r5 < init > r4 <NEXT> r6 = com fasterxml jackson databind ser impl simple bean property filter r5 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i2 = lengthof r1 <NEXT> if $ i2 < = 0 goto label1 <NEXT> $ r4 = r1 [ 0 ] <NEXT> $ z0 = $ r4 instanceof com fasterxml jackson core json json write feature <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = com fasterxml jackson databind serialization config r0 <NEXT> $ r5 = specialinvoke r8 _with json write feature r1 <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r9 = com fasterxml jackson databind serialization config r0 <NEXT> i9 = r9 _format write feature <NEXT> r10 = com fasterxml jackson databind serialization config r0 <NEXT> i10 = r10 _format write feature to change <NEXT> i0 = lengthof r1 <NEXT> i11 = 0 <NEXT> label if i11 > = i0 goto label3 <NEXT> r3 = r1 [ i11 ] <NEXT> i1 = r3 get mask <NEXT> i9 = i9 | i1 <NEXT> i10 = i10 | i1 <NEXT> i11 = i11 + 1 <NEXT> goto label2 <NEXT> label if i11 > = i0 goto label3 <NEXT> label r11 = com fasterxml jackson databind serialization config r0 <NEXT> $ i3 = r11 _format write feature <NEXT> if $ i3 ! = i9 goto label4 <NEXT> r12 = com fasterxml jackson databind serialization config r0 <NEXT> $ i8 = r12 _format write feature to change <NEXT> if $ i8 ! = i10 goto label4 <NEXT> $ r6 = r0 <NEXT> goto label5 <NEXT> label r18 = com fasterxml jackson databind serialization config $ r6 <NEXT> return r18 <NEXT> if $ i8 ! = i10 goto label4 <NEXT> label r7 = new com fasterxml jackson databind serialization config <NEXT> $ r6 = r7 <NEXT> r13 = com fasterxml jackson databind serialization config r0 <NEXT> $ i7 = r13 _mapper feature <NEXT> r14 = com fasterxml jackson databind serialization config r0 <NEXT> $ i6 = r14 _ser feature <NEXT> r15 = com fasterxml jackson databind serialization config r0 <NEXT> $ i5 = r15 _generator feature <NEXT> r16 = com fasterxml jackson databind serialization config r0 <NEXT> $ i4 = r16 _generator feature to change <NEXT> r17 = com fasterxml jackson databind serialization config r0 <NEXT> specialinvoke r7 < init > r17 $ i7 $ i6 $ i5 $ i4 i9 i10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` can not pass null json serializer\ `` <NEXT> throw r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = com fasterxml jackson databind serializer provider r0 <NEXT> r4 _null value serializer = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind serializer provider r0 <NEXT> $ r1 = r2 get config <NEXT> r3 = com fasterxml jackson databind cfg mapper config $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = com fasterxml jackson databind serializer provider r0 <NEXT> $ r1 = r3 _config <NEXT> $ r2 = $ r1 get filter provider <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com fasterxml jackson databind serializer provider r0 <NEXT> $ r2 = r3 _null value serializer <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com fasterxml jackson databind type type factory unknown type <NEXT> $ r3 = com fasterxml jackson databind type type factory unknown type <NEXT> r5 = com fasterxml jackson databind type type factory r0 <NEXT> $ r4 = r5 construct map type r1 $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 get modifier <NEXT> $ i1 = i0 & 1536 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` [ null ] \ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = new java lang string builder <NEXT> $ i0 = r0 length <NEXT> $ i1 = $ i0 + 2 <NEXT> specialinvoke $ r1 < init > $ i1 <NEXT> $ r2 = $ r1 append 96 <NEXT> $ r3 = $ r2 append r0 <NEXT> $ r4 = $ r3 append 96 <NEXT> $ r5 = $ r4 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r4 = com fasterxml jackson databind util object buffer r0 <NEXT> r4 _reset <NEXT> r5 = com fasterxml jackson databind util object buffer r0 <NEXT> $ r1 = r5 _free buffer <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = newarray java lang object [ 12 ] <NEXT> r6 = com fasterxml jackson databind util object buffer r0 <NEXT> r6 _free buffer = $ r3 <NEXT> return $ r3 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r7 = com fasterxml jackson databind util object buffer r0 <NEXT> $ r2 = r7 _free buffer <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r6 = com fasterxml jackson databind util object buffer r0 <NEXT> $ i2 = r6 _size <NEXT> i1 = i0 + $ i2 <NEXT> $ r4 = java lang reflect array new instance r2 i1 <NEXT> $ r5 = java lang object [ ] $ r4 <NEXT> r3 = java lang object [ ] $ r5 <NEXT> r7 = com fasterxml jackson databind util object buffer r0 <NEXT> r7 _copy to r3 i1 r1 i0 <NEXT> r8 = com fasterxml jackson databind util object buffer r0 <NEXT> r8 _reset <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = com fasterxml jackson databind util simple bean property definition r0 <NEXT> $ r1 = r3 _full name <NEXT> $ r2 = $ r1 get simple name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new com fasterxml jackson core io serialize string <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = com fasterxml jackson core serializable string r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com fasterxml jackson databind deser bean deserializer builder r0 <NEXT> $ r2 = r6 _includable prop <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util hash set <NEXT> specialinvoke r5 < init > <NEXT> r7 = com fasterxml jackson databind deser bean deserializer builder r0 <NEXT> r7 _includable prop = r5 <NEXT> label r8 = com fasterxml jackson databind deser bean deserializer builder r0 <NEXT> $ r3 = r8 _includable prop <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com fasterxml jackson databind util enum resolver r0 <NEXT> $ z0 = r1 _is from int value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> $ r1 = com fasterxml jackson databind mapper feature use_annotations <NEXT> r4 = com fasterxml jackson databind deserialization config r0 <NEXT> $ z0 = r4 be enable $ r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = specialinvoke r0 get annotation introspector <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = com fasterxml jackson databind introspect nop annotation introspector instance <NEXT> r5 = com fasterxml jackson databind annotation introspector $ r2 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = com fasterxml jackson databind deserialization context r0 <NEXT> $ r3 = r4 weird string exception null r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = com fasterxml jackson databind introspect annotate class r0 <NEXT> $ r3 = r6 _mix in resolver <NEXT> if $ r3 == null goto label1 <NEXT> r7 = com fasterxml jackson databind introspect annotate class r0 <NEXT> $ r4 = r7 _mix in resolver <NEXT> $ r5 = $ r4 find mix in class for r2 <NEXT> r8 = com fasterxml jackson databind introspect annotate class r0 <NEXT> r8 _add class mix in r1 r2 $ r5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = specialinvoke r0 get message <NEXT> r11 = com fasterxml jackson databind json map exception r0 <NEXT> $ r2 = r11 _path <NEXT> if $ r2 ! = null goto label1 <NEXT> return r1 <NEXT> if $ r2 ! = null goto label1 <NEXT> label if r1 ! = null goto label2 <NEXT> r9 = new java lang string builder <NEXT> $ r6 = r9 <NEXT> specialinvoke r9 < init > <NEXT> goto label3 <NEXT> label $ r6 append \ `` through reference chain \ `` <NEXT> r12 = com fasterxml jackson databind json map exception r0 <NEXT> r8 = r12 get path reference $ r6 <NEXT> r8 append 41 <NEXT> $ r5 = r8 to string <NEXT> return $ r5 <NEXT> label if r1 ! = null goto label2 <NEXT> label r10 = new java lang string builder <NEXT> $ r6 = r10 <NEXT> specialinvoke r10 < init > r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com fasterxml jackson databind object mapper $ default type object_and_non_concrete <NEXT> r3 = com fasterxml jackson databind object mapper r0 <NEXT> $ r2 = r3 enable default type $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind object mapper r0 <NEXT> $ r1 = r2 create object node <NEXT> r3 = com fasterxml jackson core tree node $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = com fasterxml jackson databind ser std map serializer r0 <NEXT> $ r1 = r2 _key serializer <NEXT> return $ r1 <END>
<BEG> r2 = @ parameter0 <NEXT> r3 = com fasterxml jackson databind util class util get root cause r2 <NEXT> $ z0 = r3 instanceof java lang exception <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = java lang exception r3 <NEXT> throw $ r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r0 = java lang error r3 <NEXT> throw $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 length <NEXT> if $ i0 < 5 goto label1 <NEXT> $ c1 = r1 char at 0 <NEXT> $ z0 = java lang character be digit $ c1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ c2 = r1 char at 3 <NEXT> $ z1 = java lang character be digit $ c2 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ c3 = r1 char at 4 <NEXT> if $ c3 ! = 45 goto label1 <NEXT> return 1 <NEXT> if $ c3 ! = 45 goto label1 <NEXT> label return 0 <END>
<BEG> $ r0 = com fasterxml jackson databind node boolean node true <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r5 = com fasterxml jackson dataformat yaml u t f8 reader r0 <NEXT> r5 _input ptr = 0 <NEXT> r6 = com fasterxml jackson dataformat yaml u t f8 reader r0 <NEXT> r6 _input end = 0 <NEXT> r7 = com fasterxml jackson dataformat yaml u t f8 reader r0 <NEXT> $ r1 = r7 _input source <NEXT> if $ r1 == null goto label2 <NEXT> r8 = com fasterxml jackson dataformat yaml u t f8 reader r0 <NEXT> $ r4 = r8 _input source <NEXT> r9 = com fasterxml jackson dataformat yaml u t f8 reader r0 <NEXT> $ r3 = r9 _input buffer <NEXT> r10 = com fasterxml jackson dataformat yaml u t f8 reader r0 <NEXT> $ r2 = r10 _input buffer <NEXT> $ i1 = lengthof $ r2 <NEXT> i0 = $ r4 read $ r3 0 $ i1 <NEXT> if i0 < = 0 goto label1 <NEXT> r11 = com fasterxml jackson dataformat yaml u t f8 reader r0 <NEXT> r11 _input end = i0 <NEXT> label return i0 <NEXT> if $ r1 == null goto label2 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com fasterxml jackson datatype jdk8 jdk8 module r0 <NEXT> r1 _cfg handle absent a null = z0 <NEXT> r2 = com fasterxml jackson datatype jdk8 jdk8 module r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof com sun el method expression impl <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = com sun el method expression impl r1 <NEXT> r5 = com sun el method expression impl r0 <NEXT> $ r3 = specialinvoke r5 get node <NEXT> $ r4 = specialinvoke r2 get node <NEXT> $ z1 = $ r3 equal $ r4 <NEXT> return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r1 set property resolve 0 <NEXT> i1 = 0 <NEXT> label r7 = javax el composite e l resolver r0 <NEXT> $ i0 = r7 size <NEXT> if i1 > = $ i0 goto label3 <NEXT> r8 = javax el composite e l resolver r0 <NEXT> $ r4 = r8 el resolvers <NEXT> $ r5 = $ r4 [ i1 ] <NEXT> r6 = $ r5 get value r1 r2 r3 <NEXT> $ z0 = r1 be property resolve <NEXT> if $ z0 == 0 goto label2 <NEXT> return r6 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = javax el e l context r0 <NEXT> $ r2 = r6 listener <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r7 = javax el e l context r0 <NEXT> r7 listener = r5 <NEXT> label r8 = javax el e l context r0 <NEXT> $ r3 = r8 listener <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = javax el e l context r0 <NEXT> $ r4 = r8 lambda args <NEXT> if $ r4 ! = null goto label1 <NEXT> return null <NEXT> if $ r4 ! = null goto label1 <NEXT> label r9 = javax el e l context r0 <NEXT> $ r5 = r9 lambda args <NEXT> $ i0 = $ r5 size <NEXT> i1 = $ i0 - 1 <NEXT> label if i1 < 0 goto label4 <NEXT> r10 = javax el e l context r0 <NEXT> $ r6 = r10 lambda args <NEXT> $ r7 = $ r6 element at i1 <NEXT> r2 = java util map $ r7 <NEXT> r3 = r2 get r1 <NEXT> if r3 == null goto label3 <NEXT> return r3 <NEXT> if r3 == null goto label3 <NEXT> label i1 = i1 + -1 <NEXT> goto label2 <NEXT> label if i1 < 0 goto label4 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = javax el e l manager r0 <NEXT> $ r2 = r5 get e l context <NEXT> r4 = new javax el bean name e l resolver <NEXT> specialinvoke r4 < init > r1 <NEXT> r6 = javax el e l resolver r4 <NEXT> $ r2 add e l resolver r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javax el e l manager r0 <NEXT> $ r2 = r3 get e l context <NEXT> $ r2 add e l resolver r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = javax el e l manager r0 <NEXT> $ r4 = r9 get e l context <NEXT> $ r5 = $ r4 get bean <NEXT> r3 = $ r5 get r1 <NEXT> r10 = javax el e l manager r0 <NEXT> $ r6 = r10 get e l context <NEXT> $ r7 = $ r6 get bean <NEXT> $ r7 put r1 r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javax el e l processor r0 <NEXT> $ r2 = r3 get value r1 class \ `` ljava lang object \ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r5 = @ parameter4 <NEXT> if r1 ! = null goto label1 <NEXT> $ r10 = new java lang null pointer exception <NEXT> specialinvoke $ r10 < init > <NEXT> throw $ r10 <NEXT> if r1 ! = null goto label1 <NEXT> label $ z0 = r2 instanceof javax el e l class <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = r3 instanceof java lang string <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label return null <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label $ r8 = javax el e l class r2 <NEXT> r6 = $ r8 get klass <NEXT> r7 = java lang string r3 <NEXT> $ r9 = \ `` < init > \ `` <NEXT> $ z2 = $ r9 equal r7 <NEXT> if $ z2 == 0 goto label4 <NEXT> r11 = javax el e l util find constructor r6 r4 r5 <NEXT> r12 = javax el e l util invoke constructor r1 r11 r5 <NEXT> goto label5 <NEXT> label r1 set property resolve r2 r3 <NEXT> return r12 <NEXT> if $ z2 == 0 goto label4 <NEXT> label r13 = javax el e l util find method r6 r7 r4 r5 1 <NEXT> r12 = javax el e l util invoke method r1 r13 null r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r10 = org glassfish json json patch builder impl r0 <NEXT> $ r2 = r10 builder <NEXT> $ r3 = javax json json create object builder <NEXT> $ r4 = javax json json patch $ operation test <NEXT> $ r5 = $ r4 operation name <NEXT> $ r6 = $ r3 add \ `` op\ <NEXT> $ r7 = $ r6 add \ `` path\ <NEXT> $ r8 = $ r7 add \ `` value\ <NEXT> $ r2 add $ r8 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javax json bind jsonb config r0 <NEXT> $ r2 = r3 set property \ `` jsonb property-order-strategy\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = javax w r client entity r0 <NEXT> $ r1 = r3 variant <NEXT> $ r2 = $ r1 get medium type <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = javax w r core abstract multivalued map r0 <NEXT> r3 = r4 get value r1 <NEXT> if r2 == null goto label1 <NEXT> r3 add 0 r2 <NEXT> goto label2 <NEXT> label return <NEXT> if r2 == null goto label1 <NEXT> label r5 = javax w r core abstract multivalued map r0 <NEXT> r5 add first null r3 <END>
<BEG> r0 = @ this <NEXT> r1 = javax w r core cache control r0 <NEXT> $ i0 = r1 max age <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r5 = javax w r core cache control r0 <NEXT> $ r1 = r5 private field <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r6 = javax w r core cache control r0 <NEXT> r6 private field = r4 <NEXT> label r7 = javax w r core cache control r0 <NEXT> $ r2 = r7 private field <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = javax w r core cache control r0 <NEXT> $ z0 = r1 no store <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = javax w r core cookie r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = javax w r core cookie r0 <NEXT> $ i0 = r1 version <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = javax w r core cookie header_delegate <NEXT> $ r2 = $ r1 to string r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = javax w r ext runtime delegate get instance <NEXT> r1 = $ r2 create link builder <NEXT> r1 uri r0 <NEXT> return r1 <END>
<BEG> $ r0 = javax w r core response $ status no_content <NEXT> $ r1 = javax w r core response status $ r0 <NEXT> return $ r1 <END>
<BEG> $ r0 = javax w r core response $ status not_modified <NEXT> $ r1 = javax w r core response status $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = javax w r core response $ status not_acceptable <NEXT> $ r2 = javax w r core response status $ r1 <NEXT> $ r3 = $ r2 variant r0 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = javax xml bind datatype converter the converter <NEXT> if $ r1 ! = null goto label1 <NEXT> javax xml bind datatype converter init converter <NEXT> label $ r2 = javax xml bind datatype converter the converter <NEXT> $ r3 = $ r2 print decimal r0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = javax xml bind helper abstract marshaller impl r0 <NEXT> r2 no n s schema location = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javax xml bind helper abstract unmarshaller impl r0 <NEXT> $ r1 = r2 event handler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = javax xml bind j a x b element r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r12 = javax xml bind j a x b exception r0 <NEXT> $ r1 = r12 link exception <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r10 = specialinvoke r0 to string <NEXT> goto label2 <NEXT> label return $ r10 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r3 = specialinvoke r0 to string <NEXT> $ r4 = r11 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \n - with link exception\n [ \ `` <NEXT> r13 = javax xml bind j a x b exception r0 <NEXT> $ r6 = r13 link exception <NEXT> $ r7 = $ r6 to string <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 append \ `` ] \ `` <NEXT> $ r10 = $ r9 to string <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r17 = org jboss jandex annotation instance r0 <NEXT> $ r6 = r17 name <NEXT> r3 = r1 get class by name $ r6 <NEXT> if r3 ! = null goto label1 <NEXT> r16 = new java lang illegal argument exception <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r10 = r15 append \ `` index do not contain annotation definition \ `` <NEXT> r18 = org jboss jandex annotation instance r0 <NEXT> $ r11 = r18 name <NEXT> $ r12 = $ r10 append $ r11 <NEXT> $ r13 = $ r12 to string <NEXT> specialinvoke r16 < init > $ r13 <NEXT> throw r16 <NEXT> if r3 ! = null goto label1 <NEXT> label r19 = org jboss jandex annotation instance r0 <NEXT> r4 = r19 value r2 <NEXT> if r4 == null goto label2 <NEXT> return r4 <NEXT> if r4 == null goto label2 <NEXT> label $ r7 = newarray org jboss jandex type [ 0 ] <NEXT> r5 = r3 method r2 $ r7 <NEXT> if r5 ! = null goto label3 <NEXT> $ r14 = null <NEXT> goto label4 <NEXT> label return $ r14 <NEXT> if r5 ! = null goto label3 <NEXT> label $ r14 = r5 default value <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss jandex array type r0 <NEXT> $ r1 = r2 component <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org jboss jandex class info r0 <NEXT> $ z0 = r1 have no args constructor <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r4 = org jboss jandex class info r0 <NEXT> $ r1 = r4 nest info <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org jboss jandex class info r0 <NEXT> $ r2 = r5 nest info <NEXT> $ r3 = org jboss jandex class info $ nest info access $ 300 $ r2 <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r3 = null <END>
<BEG> r0 = @ this <NEXT> r1 = org jboss jandex dot name r0 <NEXT> $ z0 = r1 inner class <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org jboss jandex field info r0 <NEXT> $ r1 = r3 internal <NEXT> $ r2 = $ r1 name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org jboss jandex field info r0 <NEXT> $ r1 = r3 internal <NEXT> $ r2 = $ r1 type <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org jboss jandex field info r0 <NEXT> $ r2 = r3 internal <NEXT> $ z0 = $ r2 have annotation r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jboss jandex index writer r0 <NEXT> $ i0 = r2 write r1 9 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> z1 = @ parameter3 <NEXT> z2 = @ parameter4 <NEXT> $ r3 = java lang system out <NEXT> $ r2 = java lang system err <NEXT> $ r4 = org jboss jandex jar indexer create jar index r0 r1 z0 z1 z2 $ r3 $ r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org jboss jandex method info r0 <NEXT> $ r1 = r3 method internal <NEXT> $ r2 = $ r1 parameter name i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss jandex parameterized type r0 <NEXT> $ r1 = r2 owner <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss jandex type target r0 <NEXT> $ r1 = r2 target <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss jandex unresolved type variable r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org dataloader data loader r0 <NEXT> $ r2 = r3 load r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org dataloader data loader option r0 <NEXT> $ z0 = r1 cache exception enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org dataloader data loader option r0 <NEXT> r1 cache exception enable = z0 <NEXT> r2 = org dataloader data loader option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org dataloader stats statistics <NEXT> r4 = org dataloader stats statistic r0 <NEXT> $ l0 = r4 load count <NEXT> $ l1 = r1 get load count <NEXT> $ l2 = $ l0 + $ l1 <NEXT> r5 = org dataloader stats statistic r0 <NEXT> $ l3 = r5 load error count <NEXT> $ l4 = r1 get load error count <NEXT> $ l5 = $ l3 + $ l4 <NEXT> r6 = org dataloader stats statistic r0 <NEXT> $ l6 = r6 batch invoke count <NEXT> $ l7 = r1 get batch invoke count <NEXT> $ l8 = $ l6 + $ l7 <NEXT> r7 = org dataloader stats statistic r0 <NEXT> $ l9 = r7 batch load count <NEXT> $ l10 = r1 get batch load count <NEXT> $ l11 = $ l9 + $ l10 <NEXT> r8 = org dataloader stats statistic r0 <NEXT> $ l12 = r8 batch load exception count <NEXT> $ l13 = r1 get batch load exception count <NEXT> $ l14 = $ l12 + $ l13 <NEXT> r9 = org dataloader stats statistic r0 <NEXT> $ l15 = r9 cache hit count <NEXT> $ l16 = r1 get cache hit count <NEXT> $ l17 = $ l15 + $ l16 <NEXT> specialinvoke r3 < init > $ l2 $ l5 $ l8 $ l11 $ l14 $ l17 <NEXT> return r3 <END>
<BEG> $ r0 = org dataloader try nil_throwable <NEXT> $ r1 = org dataloader try fail $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r19 = new java util array list <NEXT> specialinvoke r19 < init > <NEXT> i1 = 0 <NEXT> r4 = r2 get deltas <NEXT> r15 = r4 iterator <NEXT> label $ z0 = r15 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r12 = r15 next <NEXT> r16 = com github difflib patch abstract delta $ r12 <NEXT> r20 = com github difflib text diff row generator r0 <NEXT> $ r13 = specialinvoke r20 decompress delta r16 <NEXT> r5 = $ r13 iterator <NEXT> label $ z3 = r5 have next <NEXT> if $ z3 == 0 goto label3 <NEXT> $ r14 = r5 next <NEXT> r6 = com github difflib patch abstract delta $ r14 <NEXT> r21 = com github difflib text diff row generator r0 <NEXT> i1 = specialinvoke r21 transform delta into diff row r1 i1 r19 r6 <NEXT> goto label2 <NEXT> if $ z3 == 0 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ i0 = r1 size <NEXT> $ r8 = r1 sub list i1 $ i0 <NEXT> r17 = $ r8 iterator <NEXT> label $ z1 = r17 have next <NEXT> if $ z1 == 0 goto label6 <NEXT> $ r9 = r17 next <NEXT> r18 = java lang string $ r9 <NEXT> $ r10 = com github difflib text diff row $ tag equal <NEXT> r22 = com github difflib text diff row generator r0 <NEXT> $ r11 = specialinvoke r22 build diff row $ r10 r18 r18 <NEXT> r19 add $ r11 <NEXT> goto label5 <NEXT> if $ z1 == 0 goto label6 <NEXT> label return r19 <END>
<BEG> r0 = @ this <NEXT> $ r2 = com github javaparser ast compilation unit printer_key <NEXT> r7 = com github javaparser ast compilation unit r0 <NEXT> $ z0 = r7 contain data $ r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r8 = com github javaparser ast compilation unit r0 <NEXT> r1 = r8 create default printer <NEXT> r9 = com github javaparser ast compilation unit r0 <NEXT> r9 printer r1 <NEXT> label $ r3 = com github javaparser ast compilation unit printer_key <NEXT> r10 = com github javaparser ast compilation unit r0 <NEXT> $ r4 = r10 get data $ r3 <NEXT> $ r5 = com github javaparser printer printer $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> com github javaparser utils utils assert not null r1 <NEXT> r9 = com github javaparser ast compilation unit r0 <NEXT> $ r3 = r9 import <NEXT> if r1 ! = $ r3 goto label1 <NEXT> r10 = com github javaparser ast compilation unit r0 <NEXT> return r10 <NEXT> if r1 ! = $ r3 goto label1 <NEXT> label $ r5 = com github javaparser ast observer observable property import <NEXT> r11 = com github javaparser ast compilation unit r0 <NEXT> $ r4 = r11 import <NEXT> r12 = com github javaparser ast compilation unit r0 <NEXT> r12 notify property change $ r5 $ r4 r1 <NEXT> r13 = com github javaparser ast compilation unit r0 <NEXT> $ r6 = r13 import <NEXT> if $ r6 == null goto label2 <NEXT> r14 = com github javaparser ast compilation unit r0 <NEXT> $ r7 = r14 import <NEXT> $ r7 set parent node null <NEXT> label r15 = com github javaparser ast compilation unit r0 <NEXT> r15 import = r1 <NEXT> r16 = com github javaparser ast compilation unit r0 <NEXT> r16 set a parent node of r1 <NEXT> r17 = com github javaparser ast compilation unit r0 <NEXT> return r17 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = com github javaparser ast compilation unit r0 <NEXT> $ r2 = r9 find all class \ `` lcom github javaparser ast body class or interface declaration \ `` <NEXT> $ r3 = $ r2 stream <NEXT> $ r4 = compilation unit $ lambda_get local declaration from classname_4__8 bootstrap $ r1 <NEXT> $ r5 = $ r3 filter $ r4 <NEXT> $ r6 = java util stream collector to list <NEXT> $ r7 = $ r5 collect $ r6 <NEXT> $ r8 = java util list $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new com github javaparser ast expr char literal expr <NEXT> $ r2 = com github javaparser utils utils escape end of line r0 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = com github javaparser ast expr name expr r0 <NEXT> $ r1 = r4 get symbol resolver <NEXT> r5 = com github javaparser ast node r0 <NEXT> $ r2 = $ r1 resolve declaration r5 class \ `` lcom github javaparser resolution declaration resolve value declaration \ `` <NEXT> $ r3 = com github javaparser resolution declaration resolve value declaration $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com github javaparser utils string escape utils escape java r1 <NEXT> r3 = com github javaparser ast expr string literal expr r0 <NEXT> r3 value = $ r2 <NEXT> r4 = com github javaparser ast expr string literal expr r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = com github javaparser ast import declaration r0 <NEXT> $ z0 = r1 be asterisk <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com github javaparser ast package declaration r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = com github javaparser ast stmt for stmt r0 <NEXT> $ r2 = r8 compare <NEXT> if r1 ! = $ r2 goto label1 <NEXT> r9 = com github javaparser ast stmt for stmt r0 <NEXT> return r9 <NEXT> if r1 ! = $ r2 goto label1 <NEXT> label $ r4 = com github javaparser ast observer observable property compare <NEXT> r10 = com github javaparser ast stmt for stmt r0 <NEXT> $ r3 = r10 compare <NEXT> r11 = com github javaparser ast stmt for stmt r0 <NEXT> r11 notify property change $ r4 $ r3 r1 <NEXT> r12 = com github javaparser ast stmt for stmt r0 <NEXT> $ r5 = r12 compare <NEXT> if $ r5 == null goto label2 <NEXT> r13 = com github javaparser ast stmt for stmt r0 <NEXT> $ r6 = r13 compare <NEXT> $ r6 set parent node null <NEXT> label r14 = com github javaparser ast stmt for stmt r0 <NEXT> r14 compare = r1 <NEXT> r15 = com github javaparser ast stmt for stmt r0 <NEXT> r16 = com github javaparser ast node r1 <NEXT> r15 set a parent node of r16 <NEXT> r17 = com github javaparser ast stmt for stmt r0 <NEXT> return r17 <END>
<BEG> r0 = @ this <NEXT> r2 = com github javaparser ast stmt if stmt r0 <NEXT> $ r1 = r2 then stmt <NEXT> $ z0 = $ r1 instanceof com github javaparser ast stmt block stmt <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com github javaparser ast stmt if stmt r0 <NEXT> $ r1 = r2 else stmt <NEXT> $ z0 = $ r1 instanceof com github javaparser ast stmt block stmt <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com github javaparser parse start name <NEXT> $ r3 = com github javaparser provider provider r1 <NEXT> r5 = com github javaparser java parser r0 <NEXT> $ r4 = r5 parse $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r3 = com github javaparser parser configuration r0 <NEXT> $ r1 = r3 symbol resolver <NEXT> $ r2 = java util optional of nullable $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = com github javaparser printer configuration default printer configuration r0 <NEXT> $ r2 = r7 default option <NEXT> $ r3 = $ r2 stream <NEXT> $ r4 = default printer configuration $ lambda_get_0__1 bootstrap $ r1 <NEXT> $ r5 = $ r3 filter $ r4 <NEXT> $ r6 = $ r5 find first <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r3 = com github javaparser printer configuration pretty printer configuration r0 <NEXT> $ r1 = r3 get indentation <NEXT> $ r2 = $ r1 get type <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com github javaparser range r0 <NEXT> $ z0 = r4 strictly contain r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = com github javaparser range r0 <NEXT> $ r2 = r5 begin <NEXT> $ z1 = $ r2 equal r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r6 = com github javaparser range r0 <NEXT> $ r3 = r6 end <NEXT> $ z2 = $ r3 equal r1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com github javaparser range r0 <NEXT> $ r2 = r4 begin <NEXT> $ z0 = r1 be after $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = com github javaparser range r0 <NEXT> $ r3 = r5 end <NEXT> $ z1 = r1 be before $ r3 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com github javaparser range r0 <NEXT> $ r2 = r4 begin <NEXT> $ z0 = r1 be after $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = com github javaparser range r0 <NEXT> $ r3 = r5 end <NEXT> $ z1 = r1 be before $ r3 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com github javaparser resolution declaration resolve type parameter declaration r0 <NEXT> $ r1 = r2 get container <NEXT> $ z0 = $ r1 instanceof com github javaparser resolution declaration resolve constructor declaration <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> r11 = com github javaparser resolution method usage r0 <NEXT> $ r2 = r11 get declaration <NEXT> $ r3 = $ r2 declare type <NEXT> $ r4 = $ r3 get qualify name <NEXT> $ r5 = r10 append $ r4 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> r12 = com github javaparser resolution method usage r0 <NEXT> $ r7 = r12 get signature <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r3 = com github javaparser resolution type resolve reference type r0 <NEXT> $ r1 = r3 type declaration <NEXT> $ r2 = $ r1 get qualify name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com github javaparser resolution type resolve primitive type value <NEXT> $ r2 = java util array stream $ r1 <NEXT> r4 = com github javaparser resolution type resolve reference type r0 <NEXT> $ r3 = resolve reference type $ lambda_is unboxable_10__13 bootstrap $ r4 <NEXT> $ z0 = $ r2 any match $ r3 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = java lang string format r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = com github javaparser utils log current_adapter <NEXT> $ r3 = com github javaparser utils log make format supplier r0 r1 <NEXT> $ r2 info $ r3 <NEXT> return <END>
<BEG> $ r0 = com github javaparser symbolsolver javaparsermodel java parser facade instance <NEXT> $ r0 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com github javaparser symbolsolver resolution name name category r0 <NEXT> $ z0 = r1 need disambiguation <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = com github javaparser symbolsolver resolution name name logic be a name r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r32 = new java lang illegal argument exception <NEXT> specialinvoke r32 < init > \ `` a name be expected\ `` <NEXT> throw r32 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = r0 instanceof com github javaparser ast expr name <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r29 = com github javaparser ast expr name r0 <NEXT> $ r30 = $ r29 a string <NEXT> return $ r30 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r0 instanceof com github javaparser ast expr simple name <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r27 = com github javaparser ast expr simple name r0 <NEXT> $ r28 = $ r27 get identifier <NEXT> return $ r28 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = r0 instanceof com github javaparser ast type class or interface type <NEXT> if $ z3 == 0 goto label4 <NEXT> $ r25 = com github javaparser ast type class or interface type r0 <NEXT> $ r26 = $ r25 a string <NEXT> return $ r26 <NEXT> if $ z3 == 0 goto label4 <NEXT> label $ z4 = r0 instanceof com github javaparser ast expr field access expr <NEXT> if $ z4 == 0 goto label6 <NEXT> r1 = com github javaparser ast expr field access expr r0 <NEXT> $ r14 = r1 get scope <NEXT> r37 = com github javaparser ast node $ r14 <NEXT> $ z6 = com github javaparser symbolsolver resolution name name logic be a name r37 <NEXT> if $ z6 == 0 goto label5 <NEXT> r33 = new java lang string builder <NEXT> specialinvoke r33 < init > <NEXT> $ r17 = r1 get scope <NEXT> r38 = com github javaparser ast node $ r17 <NEXT> $ r18 = com github javaparser symbolsolver resolution name name logic name a string r38 <NEXT> $ r19 = r33 append $ r18 <NEXT> $ r20 = $ r19 append \ `` \ `` <NEXT> $ r21 = r1 get name <NEXT> r39 = com github javaparser ast node $ r21 <NEXT> $ r22 = com github javaparser symbolsolver resolution name name logic name a string r39 <NEXT> $ r23 = $ r20 append $ r22 <NEXT> $ r24 = $ r23 to string <NEXT> return $ r24 <NEXT> if $ z6 == 0 goto label5 <NEXT> label r34 = new java lang illegal argument exception <NEXT> specialinvoke r34 < init > <NEXT> throw r34 <NEXT> if $ z4 == 0 goto label6 <NEXT> label $ z5 = r0 instanceof com github javaparser ast expr name expr <NEXT> if $ z5 == 0 goto label7 <NEXT> $ r12 = com github javaparser ast expr name expr r0 <NEXT> $ r13 = $ r12 get name a string <NEXT> return $ r13 <NEXT> if $ z5 == 0 goto label7 <NEXT> label r36 = new java lang unsupported operation exception <NEXT> r35 = new java lang string builder <NEXT> specialinvoke r35 < init > <NEXT> $ r4 = r35 append \ `` unknown type of name find \ `` <NEXT> $ r5 = $ r4 append r0 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r7 = r0 get class <NEXT> $ r8 = $ r7 get canonical name <NEXT> $ r9 = $ r6 append $ r8 <NEXT> $ r10 = $ r9 append \ `` \ `` <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r36 < init > $ r11 <NEXT> throw r36 <END>
<BEG> r0 = @ this <NEXT> $ r1 = java util optional empty <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> com github javaparser utils utils assert not null r0 <NEXT> $ r2 = java io file separator <NEXT> i0 = r0 last index of $ r2 <NEXT> $ r3 = r0 substring 0 i0 <NEXT> return $ r3 <END>
<BEG> c0 = @ parameter0 <NEXT> $ r0 = new javaslang collection char seq <NEXT> $ r1 = new java lang string <NEXT> $ r2 = newarray char [ 1 ] <NEXT> $ r2 [ 0 ] = c0 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> specialinvoke $ r0 < init > $ r1 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> i2 = @ parameter3 <NEXT> r3 = javaslang collection char seq r0 <NEXT> $ r2 = r3 back <NEXT> $ r2 get char i0 i1 r1 i2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r2 = javaslang collection char seq r0 <NEXT> $ r1 = r2 back <NEXT> $ i2 = $ r1 last index of i0 i1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = javaslang collection char seq r0 <NEXT> $ r3 = r6 back <NEXT> $ r2 = r1 back <NEXT> $ r4 = $ r3 concat $ r2 <NEXT> $ r5 = javaslang collection char seq of $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` array be null\ `` <NEXT> $ r2 = javaslang collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = javaslang collection hash set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = javaslang collection hash map of r0 r1 r2 r3 r4 r5 <NEXT> $ r8 = newarray javaslang tuple2 [ 3 ] <NEXT> $ r9 = javaslang tuple of r0 r1 <NEXT> $ r8 [ 0 ] = $ r9 <NEXT> $ r10 = javaslang tuple of r2 r3 <NEXT> $ r8 [ 1 ] = $ r10 <NEXT> $ r11 = javaslang tuple of r4 r5 <NEXT> $ r8 [ 2 ] = $ r11 <NEXT> r7 = javaslang collection queue of $ r8 <NEXT> $ r12 = new javaslang collection link hash map <NEXT> specialinvoke $ r12 < init > r7 r6 <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` array be null\ `` <NEXT> $ r2 = javaslang collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = javaslang collection link hash set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = javaslang collection comparators natural comparator <NEXT> $ r2 = javaslang collection priority queue of all $ r1 r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` array be null\ `` <NEXT> $ r2 = javaslang collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = javaslang collection tree set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` array be null\ `` <NEXT> $ r2 = javaslang collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = javaslang collection tree set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` array be null\ `` <NEXT> $ r2 = javaslang collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = javaslang collection tree set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` array be null\ `` <NEXT> $ r2 = javaslang collection bit map trie of all r0 <NEXT> $ r3 = javaslang collection vector of all $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r20 = javassist byte array class path r0 <NEXT> $ r4 = r20 classname <NEXT> $ z0 = $ r4 equal r1 <NEXT> if $ z0 == 0 goto label4 <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r6 = r1 replace 46 47 <NEXT> $ r7 = r16 append $ r6 <NEXT> $ r8 = $ r7 append \ `` class\ `` <NEXT> r2 = $ r8 to string <NEXT> label r19 = new java net url <NEXT> r17 = new java lang string builder <NEXT> specialinvoke r17 < init > <NEXT> $ r11 = r17 append \ `` file byte array class path \ `` <NEXT> $ r12 = $ r11 append r2 <NEXT> $ r13 = $ r12 to string <NEXT> r18 = new javassist byte array class path $ bytecode u r l stream handler <NEXT> r21 = javassist byte array class path r0 <NEXT> specialinvoke r18 < init > r21 null <NEXT> r22 = java net u r l stream handler r18 <NEXT> specialinvoke r19 < init > null $ r13 r22 <NEXT> label return r19 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return null <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & -8 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r2 = javassist bytecode analysis control flow r0 <NEXT> $ r1 = r2 basic block <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = javassist bytecode analysis frame r0 <NEXT> $ r2 = r3 local <NEXT> $ r2 [ i0 ] = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = new javassist bytecode analysis frame <NEXT> r9 = javassist bytecode analysis frame r0 <NEXT> $ r3 = r9 local <NEXT> $ i1 = lengthof $ r3 <NEXT> r10 = javassist bytecode analysis frame r0 <NEXT> $ r4 = r10 stack <NEXT> $ i0 = lengthof $ r4 <NEXT> specialinvoke r8 < init > $ i1 $ i0 <NEXT> r11 = javassist bytecode analysis frame r0 <NEXT> $ r7 = r11 stack <NEXT> $ r6 = r8 stack <NEXT> r12 = javassist bytecode analysis frame r0 <NEXT> $ r5 = r12 stack <NEXT> $ i2 = lengthof $ r5 <NEXT> java lang system arraycopy $ r7 0 $ r6 0 $ i2 <NEXT> r13 = javassist bytecode analysis frame r0 <NEXT> $ i3 = r13 top <NEXT> r8 top = $ i3 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = javassist bytecode analysis type r0 <NEXT> $ z0 = r1 special <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r19 = new java lang string buffer <NEXT> specialinvoke r19 < init > \ `` @ \ `` <NEXT> r20 = javassist bytecode annotation annotation r0 <NEXT> $ r5 = r20 get type name <NEXT> r19 append $ r5 <NEXT> r21 = javassist bytecode annotation annotation r0 <NEXT> $ r7 = r21 member <NEXT> if $ r7 == null goto label3 <NEXT> r19 append \ `` \ `` <NEXT> r22 = javassist bytecode annotation annotation r0 <NEXT> $ r10 = r22 member <NEXT> $ r11 = $ r10 key set <NEXT> r2 = $ r11 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r13 = r2 next <NEXT> r3 = java lang string $ r13 <NEXT> $ r14 = r19 append r3 <NEXT> $ r15 = $ r14 append \ `` =\ `` <NEXT> r23 = javassist bytecode annotation annotation r0 <NEXT> $ r16 = r23 get member value r3 <NEXT> $ r17 = $ r15 append $ r16 <NEXT> $ r17 append \ <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i0 = r19 length <NEXT> $ i1 = $ i0 - 2 <NEXT> r19 set length $ i1 <NEXT> r19 append \ `` \ `` <NEXT> label $ r8 = r19 to string <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = javassist bytecode annotation annotation member value r0 <NEXT> r1 visit annotation member value r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javassist bytecode annotation array member value r0 <NEXT> r3 value = r1 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ r2 = r1 [ 0 ] <NEXT> r4 = javassist bytecode annotation array member value r0 <NEXT> r4 type = $ r2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = javassist bytecode attribute info r0 <NEXT> $ r1 = r2 const pool <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i4 = 0 <NEXT> if r1 == null goto label2 <NEXT> i1 = lengthof r1 <NEXT> i5 = 0 <NEXT> label if i5 > = i1 goto label2 <NEXT> $ i2 = i4 + i0 <NEXT> $ r2 = r1 [ i5 ] <NEXT> r3 = javassist bytecode bytecode r0 <NEXT> $ i3 = r3 add load $ i2 $ r2 <NEXT> i4 = i4 + $ i3 <NEXT> i5 = i5 + 1 <NEXT> goto label1 <NEXT> label if i5 > = i1 goto label2 <NEXT> label return i4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r3 = javassist bytecode bytecode r0 <NEXT> r3 add 197 <NEXT> r4 = javassist bytecode bytecode r0 <NEXT> $ r2 = r4 const pool <NEXT> $ i1 = $ r2 add class info r1 <NEXT> r5 = javassist bytecode bytecode r0 <NEXT> r5 add index $ i1 <NEXT> r6 = javassist bytecode bytecode r0 <NEXT> r6 add i0 <NEXT> $ i2 = 1 - i0 <NEXT> r7 = javassist bytecode bytecode r0 <NEXT> r7 grow stack $ i2 <NEXT> return i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> i3 = @ parameter3 <NEXT> specialinvoke r0 add i0 i1 i2 i3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = javassist bytecode class file r0 <NEXT> $ i0 = r1 access flag <NEXT> $ i1 = $ i0 & 1024 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = javassist bytecode class file r0 <NEXT> $ i0 = r1 super class <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r11 = javassist bytecode class file r0 <NEXT> $ r2 = r11 cache interface <NEXT> if $ r2 == null goto label1 <NEXT> r12 = javassist bytecode class file r0 <NEXT> $ r9 = r12 cache interface <NEXT> return $ r9 <NEXT> if $ r2 == null goto label1 <NEXT> label r13 = javassist bytecode class file r0 <NEXT> $ r3 = r13 interface <NEXT> if $ r3 ! = null goto label2 <NEXT> r10 = newarray java lang string [ 0 ] <NEXT> goto label5 <NEXT> label r18 = javassist bytecode class file r0 <NEXT> r18 cache interface = r10 <NEXT> return r10 <NEXT> if $ r3 ! = null goto label2 <NEXT> label r14 = javassist bytecode class file r0 <NEXT> $ r4 = r14 interface <NEXT> $ i0 = lengthof $ r4 <NEXT> r1 = newarray java lang string [ $ i0 ] <NEXT> i3 = 0 <NEXT> label r15 = javassist bytecode class file r0 <NEXT> $ r5 = r15 interface <NEXT> $ i1 = lengthof $ r5 <NEXT> if i3 > = $ i1 goto label4 <NEXT> r16 = javassist bytecode class file r0 <NEXT> $ r7 = r16 const pool <NEXT> r17 = javassist bytecode class file r0 <NEXT> $ r6 = r17 interface <NEXT> $ i2 = $ r6 [ i3 ] <NEXT> $ r8 = $ r7 get class info $ i2 <NEXT> r1 [ i3 ] = $ r8 <NEXT> i3 = i3 + 1 <NEXT> goto label3 <NEXT> if i3 > = $ i1 goto label4 <NEXT> label r10 = r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = javassist bytecode class file r0 <NEXT> r6 cache interface = null <NEXT> if r1 == null goto label2 <NEXT> $ i0 = lengthof r1 <NEXT> $ r2 = newarray int [ $ i0 ] <NEXT> r7 = javassist bytecode class file r0 <NEXT> r7 interface = $ r2 <NEXT> i3 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i3 > = $ i1 goto label2 <NEXT> r8 = javassist bytecode class file r0 <NEXT> $ r5 = r8 interface <NEXT> r9 = javassist bytecode class file r0 <NEXT> $ r4 = r9 const pool <NEXT> $ r3 = r1 [ i3 ] <NEXT> $ i2 = $ r4 add class info $ r3 <NEXT> $ r5 [ i3 ] = $ i2 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i1 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = javassist bytecode class file r0 <NEXT> r1 major = 49 <NEXT> r2 = javassist bytecode class file r0 <NEXT> r2 minor = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = javassist bytecode code iterator r0 <NEXT> r1 mark = 0 <NEXT> r2 = javassist bytecode code iterator r0 <NEXT> r2 current po = 0 <NEXT> r3 = javassist bytecode code iterator r0 <NEXT> $ i1 = r3 get code length <NEXT> r4 = javassist bytecode code iterator r0 <NEXT> r4 end po = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javassist bytecode code iterator r0 <NEXT> $ r1 = r2 bytecode <NEXT> $ i0 = lengthof $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = javassist bytecode code iterator r0 <NEXT> $ i0 = r1 current po <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = javassist bytecode code iterator r0 <NEXT> $ i0 = specialinvoke r1 skip super constructor0 0 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = javassist bytecode code iterator r0 <NEXT> specialinvoke r2 insert0 i0 r1 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javassist bytecode const pool r0 <NEXT> $ i0 = r2 this class info <NEXT> r3 = javassist bytecode const pool r0 <NEXT> $ r1 = r3 get class info $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = javassist bytecode const pool r0 <NEXT> $ i0 = r1 this class info <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = javassist bytecode const pool r0 <NEXT> $ r1 = r2 get item i0 <NEXT> $ i1 = $ r1 get tag <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = javassist bytecode const pool r0 <NEXT> $ r2 = r3 get item i0 <NEXT> r1 = javassist bytecode name and type info $ r2 <NEXT> $ i1 = r1 type descriptor <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r6 = javassist bytecode const pool r0 <NEXT> $ r3 = r6 get item i0 <NEXT> r1 = javassist bytecode fieldref info $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label $ i1 = r1 name and type index <NEXT> r7 = javassist bytecode const pool r0 <NEXT> $ r4 = r7 get item $ i1 <NEXT> r2 = javassist bytecode name and type info $ r4 <NEXT> if r2 ! = null goto label2 <NEXT> label $ i2 = r2 type descriptor <NEXT> r8 = javassist bytecode const pool r0 <NEXT> $ r5 = r8 get utf8 info $ i2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = javassist bytecode const pool r0 <NEXT> $ r2 = r3 get item i0 <NEXT> r1 = javassist bytecode method handle info $ r2 <NEXT> $ i1 = r1 ref index <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = javassist bytecode const pool r0 <NEXT> $ r2 = r3 get item i0 <NEXT> r1 = javassist bytecode invoke dynamic info $ r2 <NEXT> $ i1 = r1 bootstrap <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r2 = javassist bytecode enclose method attribute r0 <NEXT> $ r1 = r2 get <NEXT> $ i0 = javassist bytecode byte array read u16bit $ r1 2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = javassist bytecode exception table r0 <NEXT> $ r1 = r2 entry <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i9 = r1 size <NEXT> label i9 = i9 + -1 <NEXT> if i9 < 0 goto label2 <NEXT> $ r3 = r1 entry <NEXT> $ r4 = $ r3 get i9 <NEXT> r2 = javassist bytecode exception table entry $ r4 <NEXT> $ i2 = r2 start pc <NEXT> $ i8 = $ i2 + i1 <NEXT> $ i3 = r2 end pc <NEXT> $ i7 = $ i3 + i1 <NEXT> $ i4 = r2 handler pc <NEXT> $ i6 = $ i4 + i1 <NEXT> $ i5 = r2 catch type <NEXT> r5 = javassist bytecode exception table r0 <NEXT> r5 add i0 $ i8 $ i7 $ i6 $ i5 <NEXT> goto label1 <NEXT> if i9 < 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r4 = javassist bytecode local variable attribute r0 <NEXT> $ r1 = r4 info <NEXT> i2 = lengthof $ r1 <NEXT> i7 = 2 <NEXT> label if i7 > = i2 goto label3 <NEXT> r5 = javassist bytecode local variable attribute r0 <NEXT> $ r2 = r5 info <NEXT> $ i4 = i7 + 8 <NEXT> i3 = javassist bytecode byte array read u16bit $ r2 $ i4 <NEXT> if i3 < i0 goto label2 <NEXT> $ i6 = i3 + i1 <NEXT> r6 = javassist bytecode local variable attribute r0 <NEXT> $ r3 = r6 info <NEXT> $ i5 = i7 + 8 <NEXT> javassist bytecode byte array write16bit $ i6 $ r3 $ i5 <NEXT> label i7 = i7 + 10 <NEXT> goto label1 <NEXT> label if i7 > = i2 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = javassist bytecode method info r0 <NEXT> $ r1 = r2 const pool <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = javassist bytecode method info r0 <NEXT> $ r1 = r3 attribute <NEXT> javassist bytecode attribute info remove $ r1 \ `` exceptions\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = javassist bytecode method info r0 <NEXT> r1 = r4 get code attribute <NEXT> if r1 ! = null goto label1 <NEXT> return -1 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r3 = r1 get attribute \ `` line number table\ `` <NEXT> r2 = javassist bytecode line number attribute $ r3 <NEXT> if r2 ! = null goto label2 <NEXT> label $ i1 = r2 to line number i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r2 = javassist bytecode nest host attribute r0 <NEXT> $ r1 = r2 info <NEXT> $ i0 = javassist bytecode byte array read u16bit $ r1 0 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r2 = javassist bytecode signature attribute parse sig r0 <NEXT> label return $ r2 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r4 = javassist can not compile exception r0 <NEXT> $ r1 = r4 message <NEXT> if $ r1 == null goto label1 <NEXT> r5 = javassist can not compile exception r0 <NEXT> $ r3 = r5 message <NEXT> return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label r6 = javassist can not compile exception r0 <NEXT> $ r2 = r6 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javassist class map r0 <NEXT> $ r2 = r3 get r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = javassist class pool r0 <NEXT> $ r1 = r3 source <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = new javassist convert transform read field <NEXT> r8 = javassist code converter r0 <NEXT> $ r5 = r8 transformer <NEXT> $ r6 = r2 get name <NEXT> specialinvoke r7 < init > $ r5 r1 $ r6 r3 <NEXT> r9 = javassist code converter r0 <NEXT> r10 = javassist convert transformer r7 <NEXT> r9 transformer = r10 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i1 = @ parameter0 <NEXT> r1 = r0 <NEXT> label $ i0 = i1 <NEXT> i1 = i1 + -1 <NEXT> if $ i0 < = 0 goto label2 <NEXT> r2 = javassist compiler ast a s t list r1 <NEXT> r1 = r2 right <NEXT> goto label1 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label r3 = javassist compiler ast a s t list r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = javassist compiler jvst code gen r0 <NEXT> $ i0 = r2 expr type <NEXT> if $ i0 ! = 344 goto label1 <NEXT> r3 = javassist compiler jvst code gen r0 <NEXT> $ r1 = r3 bytecode <NEXT> $ r1 add opcode 1 <NEXT> r4 = javassist compiler jvst code gen r0 <NEXT> r4 expr type = 307 <NEXT> r5 = javassist compiler jvst code gen r0 <NEXT> r5 array dim = 0 <NEXT> r6 = javassist compiler jvst code gen r0 <NEXT> r6 class name = \ `` java lang object\ `` <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 oprand1 <NEXT> $ z0 = r2 instanceof javassist compiler ast member <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = javassist compiler ast member r2 <NEXT> r3 = $ r4 get <NEXT> r13 = javassist compiler jvst code gen r0 <NEXT> $ r5 = r13 proc handler <NEXT> if $ r5 == null goto label1 <NEXT> r14 = javassist compiler jvst code gen r0 <NEXT> $ r8 = r14 proceed name <NEXT> $ z2 = r3 equal $ r8 <NEXT> if $ z2 == 0 goto label1 <NEXT> r15 = javassist compiler jvst code gen r0 <NEXT> $ r9 = r15 proc handler <NEXT> r16 = javassist compiler jvst code gen r0 <NEXT> $ r10 = r16 bytecode <NEXT> $ r11 = r1 oprand2 <NEXT> $ r12 = javassist compiler ast a s t list $ r11 <NEXT> r17 = javassist compiler jvst code gen r0 <NEXT> $ r9 doit r17 $ r10 $ r12 <NEXT> return <NEXT> if $ z2 == 0 goto label1 <NEXT> label $ z1 = r3 equal \ `` $ cflow\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r6 = r1 oprand2 <NEXT> $ r7 = javassist compiler ast a s t list $ r6 <NEXT> r18 = javassist compiler jvst code gen r0 <NEXT> r18 at cflow $ r7 <NEXT> if $ z1 == 0 goto label2 <NEXT> label specialinvoke r0 at call expr r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = javassist compiler parser r0 <NEXT> r2 = specialinvoke r7 parse conditional expr r1 <NEXT> r8 = javassist compiler parser r0 <NEXT> $ r4 = r8 lex <NEXT> $ i1 = $ r4 look ahead <NEXT> $ z0 = javassist compiler parser be assign op $ i1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r9 = javassist compiler parser r0 <NEXT> $ r5 = r9 lex <NEXT> i0 = $ r5 get <NEXT> r10 = javassist compiler parser r0 <NEXT> r3 = r10 parse expression r1 <NEXT> $ r6 = javassist compiler ast assign expr make assign i0 r2 r3 <NEXT> r11 = javassist compiler ast a s tree $ r6 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = javassist ct behavior r0 <NEXT> specialinvoke r2 insert before r1 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javassist ct class r0 <NEXT> r2 check modify <NEXT> r3 = javassist ct class r0 <NEXT> $ r1 = r3 get class file2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray javassist ct field [ 0 ] <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javassist ct class r0 <NEXT> $ r2 = r3 get field r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray javassist ct method [ 0 ] <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = javassist ct class type r0 <NEXT> $ i0 = r1 get count <NEXT> if $ i0 > = 2 goto label2 <NEXT> r2 = javassist ct class type r0 <NEXT> $ z0 = r2 be modify <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z3 = javassist class pool release unmodified class file <NEXT> if $ z3 == 0 goto label1 <NEXT> r3 = javassist ct class type r0 <NEXT> specialinvoke r3 remove class file <NEXT> goto label2 <NEXT> label r7 = javassist ct class type r0 <NEXT> r7 get count = 0 <NEXT> return <NEXT> if $ z3 == 0 goto label1 <NEXT> label r4 = javassist ct class type r0 <NEXT> $ z1 = r4 be frozen <NEXT> if $ z1 == 0 goto label2 <NEXT> r5 = javassist ct class type r0 <NEXT> $ z2 = r5 be prune <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r6 = javassist ct class type r0 <NEXT> specialinvoke r6 save class file <END>
<BEG> r0 = @ this <NEXT> r2 = javassist ct constructor r0 <NEXT> $ r1 = r2 method info <NEXT> $ z0 = $ r1 be static initializer <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = javassist ct method r0 <NEXT> $ r1 = r3 method info <NEXT> $ r2 = $ r1 get name <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = new javassist ct constructor <NEXT> specialinvoke $ r3 < init > r0 r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r27 = javassist expr expr r0 <NEXT> $ r5 = r27 this class <NEXT> r1 = $ r5 get class pool <NEXT> r28 = javassist expr expr r0 <NEXT> $ r6 = r28 this method <NEXT> r2 = $ r6 get const pool <NEXT> r26 = new java util link list <NEXT> specialinvoke r26 < init > <NEXT> label r29 = javassist expr expr r0 <NEXT> $ r8 = r29 this method <NEXT> r17 = $ r8 get code attribute <NEXT> r18 = r17 get exception table <NEXT> r30 = javassist expr expr r0 <NEXT> i3 = r30 current po <NEXT> i4 = r18 size <NEXT> i5 = 0 <NEXT> label if i5 > = i4 goto label07 <NEXT> $ i1 = r18 start pc i5 <NEXT> if $ i1 > i3 goto label06 <NEXT> $ i2 = r18 end pc i5 <NEXT> if i3 > = $ i2 goto label06 <NEXT> i0 = r18 catch type i5 <NEXT> if i0 < = 0 goto label06 <NEXT> label $ r12 = r2 get class info i0 <NEXT> $ r13 = r1 get $ r12 <NEXT> javassist expr expr add class r26 $ r13 <NEXT> label goto label06 <NEXT> label i5 = i5 + 1 <NEXT> goto label02 <NEXT> label if i5 > = i4 goto label07 <NEXT> label goto label09 <NEXT> label r31 = javassist expr expr r0 <NEXT> $ r9 = r31 this method <NEXT> r20 = $ r9 get exception attribute <NEXT> if r20 == null goto label15 <NEXT> r21 = r20 get exception <NEXT> if r21 == null goto label15 <NEXT> i6 = lengthof r21 <NEXT> i7 = 0 <NEXT> label if i7 > = i6 goto label15 <NEXT> label $ r10 = r21 [ i7 ] <NEXT> $ r11 = r1 get $ r10 <NEXT> javassist expr expr add class r26 $ r11 <NEXT> label goto label14 <NEXT> label i7 = i7 + 1 <NEXT> goto label10 <NEXT> label if i7 > = i6 goto label15 <NEXT> label $ i8 = r26 size <NEXT> $ r23 = newarray javassist ct class [ $ i8 ] <NEXT> $ r24 = r26 to array $ r23 <NEXT> $ r25 = javassist ct class [ ] $ r24 <NEXT> return $ r25 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = javassist expr handler r0 <NEXT> $ r3 = r7 etable <NEXT> r8 = javassist expr handler r0 <NEXT> $ i1 = r8 index <NEXT> i0 = $ r3 catch type $ i1 <NEXT> if i0 ! = 0 goto label1 <NEXT> return null <NEXT> if i0 ! = 0 goto label1 <NEXT> label r9 = javassist expr handler r0 <NEXT> r1 = r9 get const pool <NEXT> r2 = r1 get class info i0 <NEXT> r10 = javassist expr handler r0 <NEXT> $ r4 = r10 this class <NEXT> $ r5 = $ r4 get class pool <NEXT> $ r6 = $ r5 get ct class r2 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r5 = javassist expr method call r0 <NEXT> $ r1 = r5 get ct class <NEXT> r6 = javassist expr method call r0 <NEXT> $ r2 = r6 get method name <NEXT> r7 = javassist expr method call r0 <NEXT> $ r3 = r7 get signature <NEXT> $ r4 = $ r1 get method $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & 2 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & 1024 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> $ r0 = javassist runtime desc use_context_class_loader_locally <NEXT> $ r0 remove <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i1 = 0 <NEXT> label $ r1 = javassist util proxy factory helper primitive type <NEXT> $ i0 = lengthof $ r1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r8 = javassist util proxy factory helper primitive type <NEXT> $ r9 = $ r8 [ i1 ] <NEXT> if $ r9 ! = r0 goto label2 <NEXT> return i1 <NEXT> if $ r9 ! = r0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label $ r2 = new java lang runtime exception <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` bad type\ `` <NEXT> $ r5 = r0 get name <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke $ r2 < init > $ r7 <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = javassist util proxy proxy factory r0 <NEXT> $ z0 = r1 factory use cache <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = javassist util proxy proxy factory r0 <NEXT> $ z0 = r1 factory write replace <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javax servlet http http servlet request wrapper r0 <NEXT> $ r2 = specialinvoke r3 _get http servlet request <NEXT> $ i0 = $ r2 get int header r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = javax servlet http http servlet request wrapper r0 <NEXT> $ r1 = specialinvoke r3 _get http servlet request <NEXT> $ r2 = $ r1 get method <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = javax servlet http http servlet request wrapper r0 <NEXT> $ r1 = specialinvoke r3 _get http servlet request <NEXT> $ r2 = $ r1 get context path <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = javax servlet http http servlet request wrapper r0 <NEXT> $ r1 = specialinvoke r2 _get http servlet request <NEXT> $ z0 = $ r1 be request session id from cookie <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = javax servlet http http servlet response wrapper r0 <NEXT> $ r1 = specialinvoke r2 _get http servlet response <NEXT> $ r1 set status i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = javax servlet servlet output stream r0 <NEXT> r1 print \ `` \r\n\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = javax servlet servlet output stream r0 <NEXT> r1 print \ `` \r\n\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javax servlet servlet request wrapper r0 <NEXT> $ r1 = r2 request <NEXT> $ i0 = $ r1 get content length <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = javax servlet servlet request wrapper r0 <NEXT> $ r1 = r3 request <NEXT> $ r2 = $ r1 get remote addr <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = javax servlet servlet request wrapper r0 <NEXT> $ r1 = r3 request <NEXT> $ r2 = $ r1 get remote host <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = javax servlet servlet request wrapper r0 <NEXT> $ r1 = r3 request <NEXT> $ r2 = $ r1 get local addr <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = class \ `` ljavax servlet servlet request \ `` <NEXT> $ z0 = $ r2 be assignable from r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r19 = new java lang illegal argument exception <NEXT> r18 = new java lang string builder <NEXT> specialinvoke r18 < init > <NEXT> $ r10 = r18 append \ `` give class \ `` <NEXT> $ r11 = r1 get name <NEXT> $ r12 = $ r10 append $ r11 <NEXT> $ r13 = $ r12 append \ `` not a subinterface of \ `` <NEXT> $ r14 = class \ `` ljavax servlet servlet request \ `` <NEXT> $ r15 = $ r14 get name <NEXT> $ r16 = $ r13 append $ r15 <NEXT> $ r17 = $ r16 to string <NEXT> specialinvoke r19 < init > $ r17 <NEXT> throw r19 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r20 = javax servlet servlet request wrapper r0 <NEXT> $ r3 = r20 request <NEXT> $ r4 = $ r3 get class <NEXT> $ z1 = r1 be assignable from $ r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r21 = javax servlet servlet request wrapper r0 <NEXT> $ r5 = r21 request <NEXT> $ z2 = $ r5 instanceof javax servlet servlet request wrapper <NEXT> if $ z2 == 0 goto label3 <NEXT> r22 = javax servlet servlet request wrapper r0 <NEXT> $ r6 = r22 request <NEXT> $ r7 = javax servlet servlet request wrapper $ r6 <NEXT> $ z3 = $ r7 be wrapper for r1 <NEXT> return $ z3 <NEXT> if $ z2 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javax servlet servlet response wrapper r0 <NEXT> $ r2 = r3 response <NEXT> $ r2 set content type r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javax servlet servlet response wrapper r0 <NEXT> $ r1 = r2 response <NEXT> $ i0 = $ r1 get buffer size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = javax websocket default client endpoint config r0 <NEXT> $ r1 = r2 prefer subprotocols <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javax websocket session exception r0 <NEXT> $ r1 = r2 session <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com sun xml bind marshaller x m l writer r0 <NEXT> r1 write xml decl = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = com sun xml bind v2 context factory create context r1 r2 r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun xml bind v2 model impl e r property info impl r0 <NEXT> $ r1 = r2 xml name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com sun xml bind v2 runtime jax bean info r0 <NEXT> $ s0 = r1 flag <NEXT> $ s1 = $ s0 & 2 <NEXT> if $ s1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ s1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com sun xml bind v2 runtime output encode r0 <NEXT> $ r2 = r3 buf <NEXT> r4 = com sun xml bind v2 runtime output encode r0 <NEXT> $ i0 = r4 len <NEXT> r1 write $ r2 0 $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = com sun xml bind v2 runtime unmarshaller scope r0 <NEXT> $ z0 = r7 have start <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = com sun xml bind v2 runtime unmarshaller scope r0 <NEXT> $ r5 = r8 lister <NEXT> r9 = com sun xml bind v2 runtime unmarshaller scope r0 <NEXT> $ r4 = r9 pack <NEXT> r10 = com sun xml bind v2 runtime unmarshaller scope r0 <NEXT> $ r3 = r10 bean <NEXT> r11 = com sun xml bind v2 runtime unmarshaller scope r0 <NEXT> $ r2 = r11 acc <NEXT> $ r5 end pack $ r4 $ r3 $ r2 <NEXT> r12 = com sun xml bind v2 runtime unmarshaller scope r0 <NEXT> r12 reset <NEXT> label $ z1 = com sun xml bind v2 runtime unmarshaller scope $ assertion disable <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r13 = com sun xml bind v2 runtime unmarshaller scope r0 <NEXT> $ z2 = specialinvoke r13 clean <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r6 = new java lang assertion error <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = com sun xml bind v2 runtime unmarshaller tag name r0 <NEXT> r1 = r3 get qname <NEXT> i0 = r1 index of 58 <NEXT> if i0 > = 0 goto label1 <NEXT> return \ `` \ `` <NEXT> if i0 > = 0 goto label1 <NEXT> label $ r2 = r1 substring 0 i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r36 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0 <NEXT> $ r2 = r36 factory <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r37 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0 <NEXT> $ r5 = r37 factory <NEXT> $ r4 = r1 jaxb type <NEXT> $ r6 = $ r5 get $ r4 <NEXT> r29 = com sun xml bind v2 runtime unmarshaller unmarshalling context $ factory $ r6 <NEXT> if r29 == null goto label1 <NEXT> $ r7 = r29 create instance <NEXT> return $ r7 <NEXT> if r29 == null goto label1 <NEXT> label r38 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0 <NEXT> $ r3 = r1 create instance r38 <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0 <NEXT> $ r2 = r5 assoc <NEXT> if $ r2 == null goto label1 <NEXT> r6 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0 <NEXT> $ r4 = r6 assoc <NEXT> r7 = com sun xml bind v2 runtime unmarshaller unmarshalling context r0 <NEXT> $ r3 = r7 current element <NEXT> $ r4 add inner $ r3 r1 <NEXT> label return <END>
<BEG> return <END>
<BEG> r0 = @ this <NEXT> r3 = com sun xml bind v2 util collision check stack r0 <NEXT> $ r1 = r3 data <NEXT> r4 = com sun xml bind v2 util collision check stack r0 <NEXT> $ i0 = r4 size <NEXT> $ i1 = $ i0 - 1 <NEXT> $ r2 = $ r1 [ $ i1 ] <NEXT> return $ r2 <END>
<BEG> z0 = @ parameter0 <NEXT> label r26 = javax xml parser s a x parser factory new instance <NEXT> $ r1 = com sun xml bind v2 util xml factory logger <NEXT> $ r0 = java util log level fine <NEXT> $ z1 = $ r1 be loggable $ r0 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r6 = com sun xml bind v2 util xml factory logger <NEXT> $ r5 = java util log level fine <NEXT> $ r6 log $ r5 \ `` s a x parser factory instance { 0 } \ <NEXT> label r26 set namespace aware 1 <NEXT> $ z2 = com sun xml bind v2 util xml factory be x m l security disable z0 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> $ z3 = 1 <NEXT> goto label4 <NEXT> label r26 set feature \ `` http javax xml x m l constant feature secure-processing\ <NEXT> label return r26 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org jaxen base x path r0 <NEXT> r2 = r4 select node r1 <NEXT> if r2 == null goto label2 <NEXT> $ i0 = r2 size <NEXT> if $ i0 ! = 1 goto label2 <NEXT> r3 = r2 get 0 <NEXT> $ z0 = r3 instanceof java lang string <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = r3 instanceof java lang number <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z2 = r3 instanceof java lang boolean <NEXT> if $ z2 == 0 goto label2 <NEXT> label return r3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r9 = org jaxen base x path r0 <NEXT> $ r1 = r9 support <NEXT> if $ r1 ! = null goto label1 <NEXT> r8 = new org jaxen context support <NEXT> r10 = org jaxen base x path r0 <NEXT> $ r4 = r10 create namespace context <NEXT> r11 = org jaxen base x path r0 <NEXT> $ r5 = r11 create function context <NEXT> r12 = org jaxen base x path r0 <NEXT> $ r6 = r12 create variable context <NEXT> r13 = org jaxen base x path r0 <NEXT> $ r7 = r13 get navigator <NEXT> specialinvoke r8 < init > $ r4 $ r5 $ r6 $ r7 <NEXT> r14 = org jaxen base x path r0 <NEXT> r14 support = r8 <NEXT> label r15 = org jaxen base x path r0 <NEXT> $ r2 = r15 support <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = org jaxen dom namespace node r0 <NEXT> r4 = r7 get user data r1 <NEXT> r8 = org jaxen dom namespace node r0 <NEXT> $ r5 = r8 user data <NEXT> $ r5 put r1 r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org jaxen expr default name step r0 <NEXT> $ z0 = r1 match any name <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r16 = new java lang string buffer <NEXT> specialinvoke r16 < init > 64 <NEXT> r17 = org jaxen expr default name step r0 <NEXT> $ r3 = r17 get axis name <NEXT> $ r4 = r16 append $ r3 <NEXT> $ r4 append \ `` \ `` <NEXT> r18 = org jaxen expr default name step r0 <NEXT> $ r6 = r18 get prefix <NEXT> if $ r6 == null goto label1 <NEXT> r19 = org jaxen expr default name step r0 <NEXT> $ r7 = r19 get prefix <NEXT> $ i0 = $ r7 length <NEXT> if $ i0 < = 0 goto label1 <NEXT> r20 = org jaxen expr default name step r0 <NEXT> $ r8 = r20 get prefix <NEXT> $ r9 = r16 append $ r8 <NEXT> $ r9 append 58 <NEXT> label r21 = org jaxen expr default name step r0 <NEXT> $ r11 = r21 get local name <NEXT> $ r12 = r16 append $ r11 <NEXT> $ r13 = specialinvoke r0 get text <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 to string <NEXT> return $ r15 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r1 instanceof java util locale <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = java util locale r1 <NEXT> return $ r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 instanceof java util list <NEXT> if $ z1 == 0 goto label3 <NEXT> r7 = java util list r1 <NEXT> $ z2 = r7 be empty <NEXT> if $ z2 ! = 0 goto label2 <NEXT> $ r4 = r7 get 0 <NEXT> r9 = org jaxen function ext locale function support r0 <NEXT> $ r5 = r9 get locale $ r4 r2 <NEXT> return $ r5 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label goto label4 <NEXT> label return null <NEXT> if $ z1 == 0 goto label3 <NEXT> label r8 = org jaxen function string function evaluate r1 r2 <NEXT> if r8 == null goto label4 <NEXT> $ i0 = r8 length <NEXT> if $ i0 < = 0 goto label4 <NEXT> r10 = org jaxen function ext locale function support r0 <NEXT> $ r3 = r10 find locale r8 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = new java util string tokenizer <NEXT> specialinvoke r10 < init > r1 \ `` -\ `` <NEXT> $ z0 = r10 have more token <NEXT> if $ z0 == 0 goto label3 <NEXT> r3 = r10 next token <NEXT> $ z1 = r10 have more token <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r13 = org jaxen function ext locale function support r0 <NEXT> $ r9 = r13 find locale for language r3 <NEXT> return $ r9 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label r4 = r10 next token <NEXT> $ z2 = r10 have more token <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r11 = new java util locale <NEXT> specialinvoke r11 < init > r3 r4 <NEXT> return r11 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label r5 = r10 next token <NEXT> r12 = new java util locale <NEXT> specialinvoke r12 < init > r3 r4 r5 <NEXT> return r12 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r0 instanceof java lang double <NEXT> if $ z0 == 0 goto label01 <NEXT> $ r10 = java lang double r0 <NEXT> return $ r10 <NEXT> if $ z0 == 0 goto label01 <NEXT> label $ z1 = r0 instanceof java lang string <NEXT> if $ z1 == 0 goto label05 <NEXT> r2 = java lang string r0 <NEXT> label $ r9 = new java lang double <NEXT> specialinvoke $ r9 < init > r2 <NEXT> label return $ r9 <NEXT> if $ z1 == 0 goto label05 <NEXT> label $ z2 = r0 instanceof java util list <NEXT> if $ z2 ! = 0 goto label06 <NEXT> $ z3 = r0 instanceof java util iterator <NEXT> if $ z3 == 0 goto label07 <NEXT> label $ r3 = org jaxen function string function evaluate r0 r1 <NEXT> $ r4 = org jaxen function number function evaluate $ r3 r1 <NEXT> return $ r4 <NEXT> if $ z3 == 0 goto label07 <NEXT> label $ z4 = r1 be element r0 <NEXT> if $ z4 ! = 0 goto label08 <NEXT> $ z5 = r1 be attribute r0 <NEXT> if $ z5 ! = 0 goto label08 <NEXT> $ z6 = r1 be text r0 <NEXT> if $ z6 ! = 0 goto label08 <NEXT> $ z7 = r1 be comment r0 <NEXT> if $ z7 ! = 0 goto label08 <NEXT> $ z8 = r1 be process instruction r0 <NEXT> if $ z8 ! = 0 goto label08 <NEXT> $ z9 = r1 be document r0 <NEXT> if $ z9 ! = 0 goto label08 <NEXT> $ z10 = r1 be namespace r0 <NEXT> if $ z10 == 0 goto label09 <NEXT> label $ r15 = org jaxen function string function evaluate r0 r1 <NEXT> $ r16 = org jaxen function number function evaluate $ r15 r1 <NEXT> return $ r16 <NEXT> if $ z10 == 0 goto label09 <NEXT> label $ z11 = r0 instanceof java lang boolean <NEXT> if $ z11 == 0 goto label11 <NEXT> $ r6 = java lang boolean true <NEXT> $ z12 = $ r6 equal r0 <NEXT> if $ z12 == 0 goto label10 <NEXT> $ r8 = new java lang double <NEXT> specialinvoke $ r8 < init > 1 0 <NEXT> return $ r8 <NEXT> if $ z12 == 0 goto label10 <NEXT> label $ r7 = new java lang double <NEXT> specialinvoke $ r7 < init > 0 0 <NEXT> return $ r7 <NEXT> if $ z11 == 0 goto label11 <NEXT> label $ r5 = org jaxen function number function na n <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = r2 get navigator <NEXT> r8 = org jaxen pattern namespace test r0 <NEXT> $ r4 = r8 prefix <NEXT> r7 = $ r3 translate namespace prefix to uri $ r4 r1 <NEXT> if r7 ! = null goto label1 <NEXT> $ r5 = r2 get context support <NEXT> r9 = org jaxen pattern namespace test r0 <NEXT> $ r6 = r9 prefix <NEXT> r7 = $ r5 translate namespace prefix to uri $ r6 <NEXT> label if r7 ! = null goto label2 <NEXT> r7 = \ `` \ `` <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org jaxen saxpath x path syntax exception r0 <NEXT> $ r1 = r2 xpath <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jaxen util precede sibling axis iterator r0 <NEXT> $ r1 = r2 next obj <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org jaxen x path syntax exception r0 <NEXT> $ i0 = r1 position <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = javax resource resource exception r0 <NEXT> r2 link exception = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = javax resource spi work hint context r0 <NEXT> $ r3 = r5 hint <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = org jboss log delegate basic logger r0 <NEXT> $ r4 = r5 log <NEXT> $ r4 error r1 r2 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r6 = org jboss log delegate basic logger r0 <NEXT> $ r5 = r6 log <NEXT> $ r5 log r1 r2 r3 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = new org jboss log serialize logger <NEXT> r4 = org jboss log logger r0 <NEXT> $ r2 = r4 name <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jboss logmanager ext handler r0 <NEXT> $ z0 = r2 auto flush <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org jboss logmanager ext handler r0 <NEXT> r3 flush <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = org jboss logmanager formatters format step r0 <NEXT> r4 render r2 r3 <NEXT> return <END>
<BEG> z0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> z1 = @ parameter3 <NEXT> $ r0 = org jboss logmanager formatters formatters exception format step z0 i0 0 i1 null <NEXT> return $ r0 <END>
<BEG> z0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ r0 = org jboss logmanager formatters formatters ndc format step z0 i0 0 i1 0 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r4 = org jboss logmanager formatters multistep formatter r0 <NEXT> $ r1 = r4 step <NEXT> $ r2 = $ r1 clone <NEXT> $ r3 = org jboss logmanager formatters format step [ ] $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org jboss logmanager handler flushable closeable <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org jboss logmanager handler flushable closeable r0 <NEXT> goto label2 <NEXT> label r3 = org jboss logmanager handler flushable closeable $ r1 <NEXT> return r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = new org jboss logmanager handlers handler $ 1 <NEXT> $ r1 = r2 <NEXT> specialinvoke r2 < init > r0 <END>
<BEG> r0 = @ this <NEXT> r6 = org jboss logmanager handler output stream handler r0 <NEXT> $ r3 = r6 output lock <NEXT> entermonitor $ r3 <NEXT> label $ r4 = specialinvoke r0 get encode <NEXT> exitmonitor $ r3 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > = 1 goto label1 <NEXT> $ r4 = org jboss logmanager handler queue handler bad queue length <NEXT> throw $ r4 <NEXT> if i0 > = 1 goto label1 <NEXT> label r6 = org jboss logmanager handler queue handler r0 <NEXT> $ r3 = r6 buffer <NEXT> entermonitor $ r3 <NEXT> label r7 = org jboss logmanager handler queue handler r0 <NEXT> r7 limit = i0 <NEXT> exitmonitor $ r3 <NEXT> label goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org jboss logmanager handler size rotate file handler r0 <NEXT> $ r4 = r7 output lock <NEXT> entermonitor $ r4 <NEXT> label $ r5 = org jboss logmanager handler suffix rotator parse r1 <NEXT> r8 = org jboss logmanager handler size rotate file handler r0 <NEXT> r8 suffix rotator = $ r5 <NEXT> exitmonitor $ r4 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss logmanager handler socket handler r0 <NEXT> $ r1 = r2 protocol <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org jboss logmanager handler syslog handler r0 <NEXT> $ r4 = r6 output lock <NEXT> entermonitor $ r4 <NEXT> label r7 = org jboss logmanager handler syslog handler r0 <NEXT> r7 facility = r1 <NEXT> exitmonitor $ r4 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java net inet address get by name r1 <NEXT> r3 = org jboss logmanager handler syslog handler r0 <NEXT> r3 set server address $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org jboss logmanager log context r0 <NEXT> $ r3 = r5 root logger <NEXT> r2 = $ r3 get if exists r1 <NEXT> if r2 ! = null goto label1 <NEXT> $ r4 = null <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r4 = r2 create logger <END>
<BEG> $ r0 = org jboss logmanager log context instance <NEXT> return $ r0 <END>
<BEG> $ r0 = org jboss logmanager mdc mdc <NEXT> $ r1 = $ r0 get <NEXT> $ r2 = org jboss logmanager fast copy hash map $ r1 <NEXT> $ r2 clear <NEXT> return <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = org jboss logmanager ndc ndc <NEXT> $ r1 = $ r0 get <NEXT> $ r2 = org jboss logmanager ndc $ stack $ r1 <NEXT> $ r2 trim to i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org jboss thread delegate executor r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 execute r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org jboss thread enhance queue executor r0 <NEXT> $ i0 = r1 try allocate thread 1 0f <NEXT> if $ i0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ i0 == 0 goto label1 <NEXT> label r2 = org jboss thread enhance queue executor r0 <NEXT> $ z0 = r2 do start thread null <NEXT> if $ z0 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r3 = org jboss thread enhance queue executor r0 <NEXT> r3 deallocate thread <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss thread enhance queue executor r0 <NEXT> $ r1 = r2 exception handler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jboss thread enhance queue executor r0 <NEXT> r2 termination task = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ z0 = org jboss thread enhance queue executor update_statistics <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = org jboss thread enhance queue executor no_queue_limit <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r1 = org jboss thread enhance queue executor r0 <NEXT> $ i0 = r1 peak queue size <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label $ i0 = -1 <END>
<BEG> r0 = @ this <NEXT> r5 = org jboss thread enhance queue executor r0 <NEXT> $ r2 = r5 run thread <NEXT> $ r1 = org jboss thread enhance queue executor no_threads <NEXT> $ r3 = $ r2 to array $ r1 <NEXT> $ r4 = java lang thread [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = org jboss thread reject executor instance <NEXT> r1 = java util concurrent executor $ r0 <NEXT> return r1 <END>
<BEG> $ r0 = org jboss thread version jar_name <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r7 = org jboss tm transaction local r0 <NEXT> $ r1 = r7 transaction manager <NEXT> $ z0 = $ r1 instanceof org jboss tm transaction local delegate <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = org jboss tm transaction local r0 <NEXT> $ r4 = r8 transaction manager <NEXT> $ r5 = org jboss tm transaction local delegate $ r4 <NEXT> r9 = org jboss tm transaction local r0 <NEXT> r9 delegate = $ r5 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = new org jboss tm transaction local delegate impl <NEXT> r10 = org jboss tm transaction local r0 <NEXT> $ r3 = r10 transaction manager <NEXT> specialinvoke r6 < init > $ r3 <NEXT> r11 = org jboss tm transaction local r0 <NEXT> r12 = org jboss tm transaction local delegate r6 <NEXT> r11 delegate = r12 <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss tm transaction manager locator r0 <NEXT> $ r1 = r2 locate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r10 = new java lang illegal argument exception <NEXT> specialinvoke r10 < init > \ `` null listener\ `` <NEXT> throw r10 <NEXT> if r1 ! = null goto label1 <NEXT> label r12 = org jboss tm usertx user transaction registry r0 <NEXT> $ r2 = r12 listener <NEXT> $ r2 remove r1 <NEXT> $ r4 = org jboss tm usertx user transaction registry log <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r5 = r11 append r0 <NEXT> $ r6 = $ r5 append \ `` remove listener \ `` <NEXT> $ r7 = $ r6 append r1 <NEXT> $ r8 = $ r7 to string <NEXT> $ r4 debug $ r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r45 = org testcontainers jdbc container database driver r0 <NEXT> $ z0 = r45 accepts u r l r1 <NEXT> if $ z0 ! = 0 goto label01 <NEXT> return null <NEXT> if $ z0 ! = 0 goto label01 <NEXT> label r3 = org testcontainers jdbc connection url new instance r1 <NEXT> $ r9 = org testcontainers jdbc container database driver jdbc url container cache <NEXT> entermonitor $ r9 <NEXT> label $ r10 = r3 get query string <NEXT> $ r11 = $ r10 or else \ `` \ `` <NEXT> r5 = java lang string $ r11 <NEXT> $ r12 = org testcontainers jdbc container database driver jdbc url container cache <NEXT> $ r13 = r3 get url <NEXT> $ r14 = $ r12 get $ r13 <NEXT> r37 = org testcontainers container jdbc database container $ r14 <NEXT> if r37 ! = null goto label07 <NEXT> $ r21 = org testcontainers jdbc container database driver logger <NEXT> $ r21 debug \ `` container not find in cache create new instance\ `` <NEXT> r38 = r3 get container parameter <NEXT> r39 = java util service loader load class \ `` lorg testcontainers container jdbc database container provider \ `` <NEXT> r6 = r39 iterator <NEXT> label $ z3 = r6 have next <NEXT> if $ z3 == 0 goto label05 <NEXT> $ r31 = r6 next <NEXT> r7 = org testcontainers container jdbc database container provider $ r31 <NEXT> $ r32 = r3 get database type <NEXT> $ z4 = r7 support $ r32 <NEXT> if $ z4 == 0 goto label04 <NEXT> r37 = r7 new instance r3 <NEXT> $ r33 = r3 get tmpfs option <NEXT> r37 with tmp fs $ r33 <NEXT> $ r35 = r37 get jdbc driver instance <NEXT> r46 = org testcontainers jdbc container database driver r0 <NEXT> r46 delegate = $ r35 <NEXT> label goto label03 <NEXT> if $ z3 == 0 goto label05 <NEXT> label if r37 ! = null goto label06 <NEXT> r43 = new java lang unsupported operation exception <NEXT> r42 = new java lang string builder <NEXT> specialinvoke r42 < init > <NEXT> $ r26 = r42 append \ `` database name \ `` <NEXT> $ r27 = r3 get database type <NEXT> $ r28 = $ r26 append $ r27 <NEXT> $ r29 = $ r28 append \ `` not supported\ `` <NEXT> $ r30 = $ r29 to string <NEXT> specialinvoke r43 < init > $ r30 <NEXT> throw r43 <NEXT> label if r37 ! = null goto label06 <NEXT> label $ r22 = org testcontainers jdbc container database driver jdbc url container cache <NEXT> $ r22 put r1 r37 <NEXT> r37 set parameter r38 <NEXT> r37 start <NEXT> label r40 = r37 create connection r5 <NEXT> $ r15 = org testcontainers jdbc container database driver initialize container <NEXT> $ r16 = r37 get container id <NEXT> $ z1 = $ r15 contain $ r16 <NEXT> if $ z1 ! = 0 goto label08 <NEXT> r44 = new org testcontainers jdbc jdbc database delegate <NEXT> specialinvoke r44 < init > r37 r5 <NEXT> r47 = org testcontainers jdbc container database driver r0 <NEXT> r48 = org testcontainers delegate database delegate r44 <NEXT> specialinvoke r47 run init script if require r3 r48 <NEXT> r49 = org testcontainers jdbc container database driver r0 <NEXT> specialinvoke r49 run init function if require r3 r40 <NEXT> $ r19 = org testcontainers jdbc container database driver initialize container <NEXT> $ r20 = r37 get container id <NEXT> $ r19 add $ r20 <NEXT> label r50 = org testcontainers jdbc container database driver r0 <NEXT> $ r17 = specialinvoke r50 wrap connection r40 r37 r3 <NEXT> exitmonitor $ r9 <NEXT> label return $ r17 <END>
<BEG> r0 = @ this <NEXT> r1 = org jdom attribute r0 <NEXT> $ i0 = r1 type <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ i0 = specialinvoke r0 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang string buffer <NEXT> specialinvoke $ r1 < init > 64 <NEXT> $ r2 = $ r1 append \ `` [ cdata \ `` <NEXT> $ r3 = r0 get text <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` ] \ `` <NEXT> $ r6 = $ r5 to string <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org jdom document r0 <NEXT> $ r2 = r5 property map <NEXT> if $ r2 ! = null goto label1 <NEXT> return null <NEXT> if $ r2 ! = null goto label1 <NEXT> label r6 = org jdom document r0 <NEXT> $ r3 = r6 property map <NEXT> $ r4 = $ r3 get r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org jdom document r0 <NEXT> $ r1 = r2 content <NEXT> $ i0 = $ r1 index of first element <NEXT> if $ i0 > = 0 goto label1 <NEXT> $ z0 = 0 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 > = 0 goto label1 <NEXT> label $ z0 = 1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = org jdom document r0 <NEXT> $ r2 = r5 content <NEXT> $ r2 remove i0 <NEXT> r6 = org jdom document r0 <NEXT> $ r4 = r6 content <NEXT> $ r4 add all i0 r1 <NEXT> r7 = org jdom document r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org jdom text <NEXT> specialinvoke r4 < init > r1 <NEXT> r5 = org jdom element r0 <NEXT> r6 = org jdom content r4 <NEXT> $ r3 = r5 add content r6 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org jdom filter content filter r0 <NEXT> r1 filter mask = 63 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r1 = org jdom filter content filter r0 <NEXT> $ i2 = r1 filter mask <NEXT> $ i3 = $ i2 | 32 <NEXT> r2 = org jdom filter content filter r0 <NEXT> r2 filter mask = $ i3 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r3 = org jdom filter content filter r0 <NEXT> $ i0 = r3 filter mask <NEXT> $ i1 = $ i0 & -33 <NEXT> r4 = org jdom filter content filter r0 <NEXT> r4 filter mask = $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org jdom input d o m builder r0 <NEXT> $ r3 = r4 factory <NEXT> r2 = $ r3 document null <NEXT> r5 = org jdom input d o m builder r0 <NEXT> specialinvoke r5 build tree r1 r2 null 1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jdom input d o m builder r0 <NEXT> r2 factory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = new org xml sax input source <NEXT> specialinvoke r6 < init > r1 <NEXT> r6 set system id r2 <NEXT> r7 = org jdom input s a x builder r0 <NEXT> $ r5 = r7 build r6 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org jdom input s a x builder r0 <NEXT> $ r1 = r2 sax driver class <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org jdom input s a x builder r0 <NEXT> $ z0 = r1 reuse parser <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org jdom input s a x builder r0 <NEXT> r1 ignore white = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jdom j d o m exception r0 <NEXT> $ r1 = r2 cause <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jdom namespace r0 <NEXT> $ r1 = r2 uri <NEXT> return $ r1 <END>
<BEG> $ r1 = new org jdom output format <NEXT> specialinvoke $ r1 < init > <NEXT> $ r1 set indent \ `` \ `` <NEXT> $ r3 = org jdom output format $ text mode trim <NEXT> $ r1 set text mode $ r3 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org jdom output format r0 <NEXT> r1 omit declaration = z0 <NEXT> r2 = org jdom output format r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org jdom output j d o m locator r0 <NEXT> $ r1 = r2 node <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jdom output s a x outputter r0 <NEXT> $ r1 = r2 decl handler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org jdom output s a x outputter r0 <NEXT> r1 report dtd event = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org jdom process instruction r0 <NEXT> $ r2 = r6 map data <NEXT> $ r3 = $ r2 remove r1 <NEXT> if $ r3 == null goto label1 <NEXT> r7 = org jdom process instruction r0 <NEXT> $ r4 = r7 map data <NEXT> r8 = org jdom process instruction r0 <NEXT> $ r5 = specialinvoke r8 to string $ r4 <NEXT> r9 = org jdom process instruction r0 <NEXT> r9 raw data = $ r5 <NEXT> return 1 <NEXT> if $ r3 == null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string buffer <NEXT> specialinvoke r8 < init > <NEXT> $ r2 = r8 append \ `` [ processing instruction \ `` <NEXT> r9 = new org jdom output x m l outputter <NEXT> specialinvoke r9 < init > <NEXT> r10 = org jdom process instruction r0 <NEXT> $ r4 = r9 output string r10 <NEXT> $ r5 = $ r2 append $ r4 <NEXT> $ r6 = $ r5 append \ `` ] \ `` <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r3 = org jdom element r0 <NEXT> $ r1 = r3 get text <NEXT> $ r2 = org jdom text normalize string $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org jdom transform j d o m result r0 <NEXT> $ r1 = r2 factory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r2 = r0 get input source <NEXT> $ r3 = org jdom transform j d o m source $ j d o m input source $ r2 <NEXT> r1 = $ r3 get source <NEXT> r4 = null <NEXT> $ z0 = r1 instanceof java util list <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = java util list r1 <NEXT> label return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang unsupported operation exception <NEXT> specialinvoke $ r2 < init > <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = new org jdom transform j d o m source <NEXT> specialinvoke r12 < init > r1 <NEXT> r13 = new org jdom transform j d o m result <NEXT> specialinvoke r13 < init > <NEXT> label r15 = org jdom transform x s l transformer r0 <NEXT> $ r7 = r15 templates <NEXT> $ r8 = $ r7 new transformer <NEXT> r16 = javax xml transform source r12 <NEXT> r17 = javax xml transform result r13 <NEXT> $ r8 transform r16 r17 <NEXT> $ r9 = r13 get result <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = new org jdom transform j d o m source <NEXT> specialinvoke r12 < init > r1 <NEXT> r13 = new org jdom transform j d o m result <NEXT> specialinvoke r13 < init > <NEXT> label r15 = org jdom transform x s l transformer r0 <NEXT> $ r7 = r15 templates <NEXT> $ r8 = $ r7 new transformer <NEXT> r16 = javax xml transform source r12 <NEXT> r17 = javax xml transform result r13 <NEXT> $ r8 transform r16 r17 <NEXT> $ r9 = r13 get result <NEXT> return $ r9 <END>
<BEG> c0 = @ parameter0 <NEXT> $ z0 = org jdom verifier be x m l letter c0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = org jdom verifier be x m l digit c0 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> if c0 == 46 goto label1 <NEXT> if c0 == 45 goto label1 <NEXT> if c0 == 95 goto label1 <NEXT> if c0 == 58 goto label1 <NEXT> $ z2 = org jdom verifier be x m l combine char c0 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> $ z3 = org jdom verifier be x m l extender c0 <NEXT> if $ z3 ! = 0 goto label1 <NEXT> $ z4 = 0 <NEXT> goto label2 <NEXT> label return $ z4 <NEXT> if $ z3 ! = 0 goto label1 <NEXT> label $ z4 = 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r19 = org jdom xpath jaxen x path r0 <NEXT> r19 current context = r1 <NEXT> r20 = org jdom xpath jaxen x path r0 <NEXT> $ r5 = r20 x path <NEXT> r21 = org jaxen base x path $ r5 <NEXT> r2 = r21 number value of r1 <NEXT> goto label6 <NEXT> label r25 = org jdom xpath jaxen x path r0 <NEXT> r25 current context = null <NEXT> goto label2 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org jdom xpath jaxen x path r0 <NEXT> $ r4 = r6 x path <NEXT> r7 = org jaxen base x path $ r4 <NEXT> r3 = r7 get variable context <NEXT> $ z0 = r3 instanceof org jaxen simple variable context <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = org jaxen simple variable context r3 <NEXT> $ r5 set variable value null r1 r2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org jdom element r0 <NEXT> $ r2 = r3 attribute <NEXT> $ r2 clear and set r1 <NEXT> r4 = org jdom element r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp pdfa x m p schema p d f a id r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` amd\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp pdfa x m p schema p d f a id r0 <NEXT> r9 set text property $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache jempbox xmp resource event r0 <NEXT> $ r1 = r3 parent <NEXT> $ r2 = org apache jempbox impl x m l util get string value $ r1 \ `` st evtinstance i d\ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache jempbox xmp resource event r0 <NEXT> $ r1 = r3 parent <NEXT> $ r2 = org apache jempbox impl x m l util get string value $ r1 \ `` st refmanager variant\ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache jempbox xmp resource ref r0 <NEXT> $ r1 = r3 parent <NEXT> $ r2 = org apache jempbox impl x m l util get string value $ r1 \ `` st refdocument i d\ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache jempbox xmp thumbnail r0 <NEXT> $ r2 = r3 parent <NEXT> org apache jempbox impl x m l util set string value $ r2 \ `` xap g imgimage\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = new org apache jempbox xmp x m p schema medium management <NEXT> r6 = org apache jempbox xmp x m p metadata r0 <NEXT> specialinvoke r5 < init > r6 <NEXT> r7 = org apache jempbox xmp x m p metadata r0 <NEXT> r8 = org apache jempbox xmp x m p schema r5 <NEXT> $ r3 = r7 basic add schema r8 <NEXT> $ r4 = org apache jempbox xmp x m p schema medium management $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache jempbox xmp x m p metadata r0 <NEXT> r2 = specialinvoke r5 get r d f element <NEXT> $ r3 = r1 get element <NEXT> r2 append child $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache jempbox xmp x m p metadata r0 <NEXT> $ r1 = r2 xmp document <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache jempbox xmp x m p metadata r0 <NEXT> r2 = specialinvoke r5 get r d f element <NEXT> $ r3 = r1 get element <NEXT> r2 append child $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r5 = new org apache jempbox xmp x m p schema basic <NEXT> r6 = org apache jempbox xmp x m p metadata r0 <NEXT> specialinvoke r5 < init > r6 <NEXT> r7 = org apache jempbox xmp x m p metadata r0 <NEXT> r8 = org apache jempbox xmp x m p schema r5 <NEXT> $ r3 = r7 basic add schema r8 <NEXT> $ r4 = org apache jempbox xmp x m p schema basic $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org apache jempbox xmp x m p metadata <NEXT> $ r2 = org apache jempbox impl x m l util parse r0 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = null <NEXT> r17 = org apache jempbox xmp x m p schema r0 <NEXT> $ r8 = r17 schema <NEXT> r2 = $ r8 get element by tag name r1 <NEXT> $ i0 = r2 get length <NEXT> if $ i0 < = 0 goto label3 <NEXT> $ r9 = r2 item 0 <NEXT> r3 = org w3c dom element $ r9 <NEXT> r4 = r3 get element by tag name \ `` rdf seq\ `` <NEXT> $ i1 = r4 get length <NEXT> if $ i1 < = 0 goto label3 <NEXT> $ r10 = r4 item 0 <NEXT> r5 = org w3c dom element $ r10 <NEXT> r16 = new java util array list <NEXT> specialinvoke r16 < init > <NEXT> r6 = r5 get element by tag name \ `` rdfli\ `` <NEXT> i3 = 0 <NEXT> label $ i2 = r6 get length <NEXT> if i3 > = $ i2 goto label2 <NEXT> $ r12 = r6 item i3 <NEXT> r7 = org w3c dom element $ r12 <NEXT> $ r13 = org apache jempbox impl x m l util get string value r7 <NEXT> r16 add $ r13 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i2 goto label2 <NEXT> label r14 = java util collection unmodifiable list r16 <NEXT> label return r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` advisory\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema basic r0 <NEXT> r9 remove bag value $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` advisory\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r6 = r9 get bag list $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` metadata date\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema basic r0 <NEXT> r9 set date property $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` modify date\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r6 = r9 get date property $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` thumbnails\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r6 = r9 get thumbnail property $ r5 null <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` thumbnails\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema basic r0 <NEXT> $ r6 = r9 get language property languages $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` description\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> r9 set language property $ r6 null r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` language\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> r9 remove bag value $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` relation\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r6 = r9 get bag list $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` rights\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r6 = r9 get language property $ r5 null <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` subject\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> r9 remove bag value $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` subject\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r6 = r9 get bag list $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` title\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> r9 set language property $ r6 null r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` title\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema dublin core r0 <NEXT> $ r6 = r9 get language property $ r5 null <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema iptc4xmp core r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` ci adr extadr\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema iptc4xmp core r0 <NEXT> r9 set text property $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema medium management r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` document i d\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema medium management r0 <NEXT> r9 set text property $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema medium management r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` history\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema medium management r0 <NEXT> r10 = org apache jempbox xmp elementable r1 <NEXT> r9 remove sequence value $ r6 r10 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema p d f r0 <NEXT> $ r2 = r8 prefix <NEXT> $ r3 = r7 append $ r2 <NEXT> $ r4 = $ r3 append \ `` keywords\ `` <NEXT> $ r5 = $ r4 to string <NEXT> r9 = org apache jempbox xmp x m p schema p d f r0 <NEXT> $ r6 = r9 get text property $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema photoshop r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` supplemental categories\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema photoshop r0 <NEXT> r9 remove bag value $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache jempbox xmp x m p schema right management r0 <NEXT> $ r3 = r8 prefix <NEXT> $ r4 = r7 append $ r3 <NEXT> $ r5 = $ r4 append \ `` owner\ `` <NEXT> $ r6 = $ r5 to string <NEXT> r9 = org apache jempbox xmp x m p schema right management r0 <NEXT> r9 remove bag value $ r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> r9 = org apache jempbox xmp x m p schema right management r0 <NEXT> $ r4 = r9 prefix <NEXT> $ r5 = r8 append $ r4 <NEXT> $ r6 = $ r5 append \ `` usage terms\ `` <NEXT> $ r7 = $ r6 to string <NEXT> r10 = org apache jempbox xmp x m p schema right management r0 <NEXT> r10 set language property $ r7 r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey client abstract rx invoker r0 <NEXT> $ r1 = r2 sync invoker <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey client client request r0 <NEXT> $ r1 = r2 reader interceptor <NEXT> return $ r1 <END>
<BEG> $ r0 = org glassfish jersey client internal jdkconnector localization message localizer <NEXT> $ r1 = org glassfish jersey client internal jdkconnector localization message localizable r e d i r e c t_ i n f i n i t e_ l o o p <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = org glassfish jersey client internal jdkconnector localization message localizer <NEXT> $ r1 = org glassfish jersey client internal jdkconnector localization message localizable c l o s e d_ b y_ c l i e n t_ w h i l e_ r e c e i v i n g_ b o d y <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey client internal jdkconnector localization message localizer <NEXT> $ r2 = org glassfish jersey client internal jdkconnector localization message localizable h t t p_ c o n n e c t i o n_ e s t a b l i s h i n g_ i l l e g a l_ s t a t e r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> $ r0 = org glassfish jersey client internal jdkconnector localization message localizer <NEXT> $ r1 = org glassfish jersey client internal jdkconnector localization message localizable h t t p_ p a c k e t_ h e a d e r_ o v e r f l o w <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey client internal jdkconnector localization message localizer <NEXT> $ r2 = org glassfish jersey client internal jdkconnector localization message localizable p r o x y_ c o n n e c t_ f a i l r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> $ r0 = org glassfish jersey client internal jdkconnector localization message localizer <NEXT> $ r1 = org glassfish jersey client internal jdkconnector localization message localizable u n e x p e c t e d_ d a t a_ i n_ b u f f e r <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey client internal localization message localizer <NEXT> $ r2 = org glassfish jersey client internal localization message localizable e r r o r_ l i s t e n e r_ i n i t r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey client internal localization message localizer <NEXT> $ r2 = org glassfish jersey client internal localization message localizable e r r o r_ s e r v i c e_ l o c a t o r_ p r o v i d e r_ i n s t a n c e_ r e q u e s t r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> $ r0 = org glassfish jersey client internal localization message localizer <NEXT> $ r1 = org glassfish jersey client internal localization message localizable n u l l_ t r u s t s t o r e <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = org glassfish jersey client internal localization message localizer <NEXT> $ r1 = org glassfish jersey client internal localization message localizable c l i e n t_ u r i_ n u l l <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r1 have entity <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = r1 get medium type <NEXT> if $ r5 ! = null goto label1 <NEXT> r13 = new org glassfish jersey client internal rout client response medium type determiner $ 1 <NEXT> r14 = org glassfish jersey client internal rout client response medium type determiner r0 <NEXT> specialinvoke r13 < init > r14 r2 <NEXT> $ r7 = r1 get header <NEXT> $ r8 = org glassfish jersey message internal header utils a string header $ r7 r2 <NEXT> r15 = org glassfish jersey message internal inbound message context r13 <NEXT> r15 header $ r8 <NEXT> $ r10 = r1 get entity <NEXT> r16 = org glassfish jersey message internal inbound message context r13 <NEXT> $ r11 = r16 get qualify acceptable medium type <NEXT> r17 = org glassfish jersey client internal rout client response medium type determiner r0 <NEXT> r4 = specialinvoke r17 determine response medium type $ r10 $ r11 <NEXT> $ r12 = r1 get header <NEXT> $ r12 add \ `` content- type\ <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey severity fatal <NEXT> org glassfish jersey internal error error r0 r1 $ r2 <NEXT> return <END>
<BEG> $ r2 = org glassfish jersey internal error get instance <NEXT> $ r3 = $ r2 issue <NEXT> r0 = $ r3 iterator <NEXT> label $ z0 = r0 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r4 = r0 next <NEXT> r1 = org glassfish jersey internal error $ error message $ r4 <NEXT> $ r5 = r1 get severity <NEXT> $ r6 = org glassfish jersey severity fatal <NEXT> if $ r5 ! = $ r6 goto label2 <NEXT> return 1 <NEXT> if $ r5 ! = $ r6 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey internal error process r0 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = specialinvoke r0 set exception r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org glassfish jersey internal inject abstract binder r0 <NEXT> $ r2 = r3 internal binding <NEXT> $ r2 add r1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org glassfish jersey internal inject abstract binder r0 <NEXT> $ r2 = r3 internal binding <NEXT> $ r2 add r1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey internal inject bind r0 <NEXT> $ r1 = r2 analyzer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = java util optional int of i0 <NEXT> r2 = org glassfish jersey internal inject alias bind r0 <NEXT> r2 rank = $ r1 <NEXT> r3 = org glassfish jersey internal inject alias bind r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org glassfish jersey internal inject injectee impl r0 <NEXT> r2 injectee descriptor = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new java util array list <NEXT> specialinvoke r6 < init > <NEXT> r6 get class <NEXT> $ r5 = provider binder $ add__1 bootstrap $ r6 <NEXT> r1 for each $ r5 <NEXT> r7 = org glassfish jersey internal inject provider binder r0 <NEXT> r7 bind instance r6 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey internal localization message localizer <NEXT> $ r2 = org glassfish jersey internal localization message localizable e r r o r s_ a n d_ w a r n i n g s_ d e t e c t e d r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey internal localization message localizer <NEXT> $ r2 = org glassfish jersey internal localization message localizable u r i_ c o m p o n e n t_ e n c o d e d_ o c t e t_ m a l f o r m e d r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org glassfish jersey internal localization message localizer <NEXT> $ r4 = org glassfish jersey internal localization message localizable e r r o r_ t e m p l a t e_ p a r s e r_ i l l e g a l_ c h a r_ s t a r t_ n a m e r0 r1 r2 <NEXT> $ r5 = $ r3 localize $ r4 <NEXT> return $ r5 <END>
<BEG> $ r0 = org glassfish jersey internal localization message localizer <NEXT> $ r1 = org glassfish jersey internal localization message localizable e r r o r_ r e a d i n g_ e n t i t y_ f r o m_ i n p u t_ s t r e a m <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org glassfish jersey internal localization message localizer <NEXT> $ r4 = org glassfish jersey internal localization message localizable f e a t u r e_ c o n s t r a i n e d_ t o_ i g n o r e d r0 r1 r2 <NEXT> $ r5 = $ r3 localize $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey internal localization message localizer <NEXT> $ r2 = org glassfish jersey internal localization message localizable i n j e c t i o n_ e r r o r_ n o n s t a t i c_ m e m b e r_ c l a s s_ n o t_ s u p p o r t e d r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey internal localization message localizer <NEXT> $ r3 = org glassfish jersey internal localization message localizable t o o_ m a n y_ h e a d e r_ v a l u e s r0 r1 <NEXT> $ r4 = $ r2 localize $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = org glassfish jersey internal localization message localizer <NEXT> $ r1 = org glassfish jersey internal localization message localizable e r r o r_ i n t e r c e p t o r_ w r i t e r_ p r o c e e d <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey internal localization message localizer <NEXT> $ r3 = org glassfish jersey internal localization message localizable h t t p_ h e a d e r_ n o_ c h a r s_ b e t w e e n_ s e p a r a t o r s r0 r1 <NEXT> $ r4 = $ r2 localize $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey internal localization message localizer <NEXT> $ r2 = org glassfish jersey internal localization message localizable m b r_ t r y i n g_ t o_ c l o s e_ s t r e a m r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey internal localization message localizer <NEXT> $ r2 = org glassfish jersey internal localization message localizable i n j e c t i o n_ e r r o r_ s u i t a b l e_ c o n s t r u c t o r_ n o t_ f o u n d r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey internal routing request specific consumes produce acceptor r0 <NEXT> $ r1 = r2 method rout <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r1 = org glassfish jersey internal service finder _get context class loader <NEXT> $ r2 = org glassfish jersey internal service finder find r0 $ r1 z0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey internal service finder _get context class loader <NEXT> $ r2 = org glassfish jersey internal service finder find r0 $ r1 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r6 = new java lang string builder <NEXT> specialinvoke r6 < init > <NEXT> r7 = org glassfish jersey internal sonar sonar jersey common r0 <NEXT> $ r2 = r7 common <NEXT> $ r3 = r6 append $ r2 <NEXT> $ r4 = $ r3 append \ `` unit test\ `` <NEXT> $ r5 = $ r4 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org glassfish jersey internal util collection class type pair <NEXT> specialinvoke $ r1 < init > r0 r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org glassfish jersey internal guava precondition check not null r0 \ `` set1\ `` <NEXT> org glassfish jersey internal guava precondition check not null r1 \ `` set2\ `` <NEXT> r5 = new org glassfish jersey internal util collection view $ 4 <NEXT> specialinvoke r5 < init > r0 r1 <NEXT> r6 = java util set r5 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` null\ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = r0 size <NEXT> $ r1 = newarray java lang object [ $ i0 ] <NEXT> $ r2 = r0 to array $ r1 <NEXT> $ r3 = org glassfish jersey internal util pretty array $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = org glassfish jersey internal util property helper get value r0 r1 r2 r4 r5 <NEXT> if r6 ! = null goto label1 <NEXT> r6 = r3 <NEXT> label return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org glassfish jersey internal util reflection helper get type argument r0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r8 = java util collection empty list <NEXT> return $ r8 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = java util array stream r1 <NEXT> $ r3 = reflection helper $ erasure__1 bootstrap $ <NEXT> $ r4 = $ r2 map $ r3 <NEXT> $ r5 = java util stream collector to list <NEXT> $ r6 = $ r4 collect $ r5 <NEXT> $ r7 = java util list $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey internal util reflection helper get class r0 r1 r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new java util link list <NEXT> specialinvoke $ r3 < init > <NEXT> r2 = org glassfish jersey internal util tokenizer tokenize r0 r1 $ r3 <NEXT> $ i0 = r2 size <NEXT> $ r4 = newarray java lang string [ $ i0 ] <NEXT> $ r5 = r2 to array $ r4 <NEXT> $ r6 = java lang string [ ] $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey message internal reader writer read from a string r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = new org glassfish jersey message internal inbound message context $ 2 <NEXT> r5 = org glassfish jersey message internal inbound message context r0 <NEXT> specialinvoke r4 < init > r5 <NEXT> r6 = org glassfish jersey message internal inbound message context r0 <NEXT> r7 = java util function function r4 <NEXT> $ r2 = specialinvoke r6 single header \ `` date\ <NEXT> $ r3 = java util date $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey message internal inbound message context r0 <NEXT> $ r1 = r2 entity content <NEXT> $ r1 close 1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get remainder <NEXT> r2 = r0 next 0 <NEXT> $ r4 = org glassfish jersey message internal http header reader $ event quote string <NEXT> if r2 ! = $ r4 goto label1 <NEXT> $ r9 = new org glassfish jersey message internal matching entity tag <NEXT> $ r10 = r0 get event value <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke $ r9 < init > $ r11 <NEXT> return $ r9 <NEXT> if r2 ! = $ r4 goto label1 <NEXT> label $ r5 = org glassfish jersey message internal http header reader $ event token <NEXT> if r2 ! = $ r5 goto label2 <NEXT> r3 = r0 get event value <NEXT> if r3 == null goto label2 <NEXT> $ i0 = r3 length <NEXT> if $ i0 ! = 1 goto label2 <NEXT> $ c1 = r3 char at 0 <NEXT> if 87 ! = $ c1 goto label2 <NEXT> r0 next separator 47 <NEXT> $ r6 = new org glassfish jersey message internal matching entity tag <NEXT> $ r7 = r0 next quote string <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke $ r6 < init > $ r8 1 <NEXT> return $ r6 <NEXT> if 87 ! = $ c1 goto label2 <NEXT> label $ r12 = new java text parse exception <NEXT> $ r13 = org glassfish jersey internal localization message error_parsing_entity_tag r1 <NEXT> $ i2 = r0 get index <NEXT> specialinvoke $ r12 < init > $ r13 $ i2 <NEXT> throw $ r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r3 = org glassfish jersey message internal outbound message context empty_annotations <NEXT> goto label2 <NEXT> label r4 = org glassfish jersey message internal outbound message context r0 <NEXT> r4 entity annotation = $ r3 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label $ r3 = r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org glassfish jersey message internal quality source medium type r0 <NEXT> $ i0 = r1 q <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = new org glassfish jersey model internal component bag $ immutable component bag <NEXT> r3 = org glassfish jersey model internal component bag r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = org glassfish jersey model internal component bag r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org glassfish jersey process internal request scope r0 <NEXT> $ r1 = r3 current <NEXT> $ r2 = $ r1 get reference <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r6 = org glassfish jersey process internal stage $ continuation of r0 r1 <NEXT> label $ r3 = r6 next <NEXT> if $ r3 == null goto label2 <NEXT> $ r5 = r6 result <NEXT> r6 = $ r3 apply $ r5 <NEXT> goto label1 <NEXT> if $ r3 == null goto label2 <NEXT> label $ r4 = r6 result <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = org glassfish jersey uri internal character iterator r0 <NEXT> $ i0 = r4 po <NEXT> if $ i0 ! = -1 goto label1 <NEXT> r3 = new java lang illegal state exception <NEXT> specialinvoke r3 < init > \ `` iterator not use yet \ `` <NEXT> throw r3 <NEXT> if $ i0 ! = -1 goto label1 <NEXT> label r5 = org glassfish jersey uri internal character iterator r0 <NEXT> $ r1 = r5 s <NEXT> r6 = org glassfish jersey uri internal character iterator r0 <NEXT> $ i1 = r6 po <NEXT> $ c2 = $ r1 char at $ i1 <NEXT> return $ c2 <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey uri uri template r0 <NEXT> $ r1 = r2 template variable <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org glassfish jersey uri uri template <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org glassfish jersey uri uri template r1 <NEXT> r5 = org glassfish jersey uri uri template r0 <NEXT> $ r4 = r5 pattern <NEXT> $ r3 = r2 pattern <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey core header content disposition r0 <NEXT> $ r1 = r2 read date <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 to char array <NEXT> i0 = lengthof r1 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label3 <NEXT> c1 = r1 [ i2 ] <NEXT> $ z0 = com sun jersey core header grammar util be token c1 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label3 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = new java util array list <NEXT> specialinvoke $ r3 < init > <NEXT> label i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r2 = r0 [ i1 ] <NEXT> com sun jersey core header reader http header reader read medium type $ r3 r2 <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r4 = com sun jersey core header medium type media_type_comparator <NEXT> java util collection sort $ r3 $ r4 <NEXT> label return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 get modifier <NEXT> $ z0 = java lang reflect modifier be public $ i0 <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r3 = new com sun jersey core reflection reflection helper $ 2 <NEXT> specialinvoke r3 < init > r0 <NEXT> r4 = java security privilege action r3 <NEXT> java security access controller do privilege r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r5 = r0 generic interface <NEXT> $ z0 = $ r5 instanceof java lang reflect parameterized type <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r6 = r0 generic interface <NEXT> r11 = java lang reflect parameterized type $ r6 <NEXT> r1 = r11 get actual type argument <NEXT> $ i0 = lengthof r1 <NEXT> r2 = newarray java lang reflect type [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label5 <NEXT> r3 = r1 [ i2 ] <NEXT> $ z1 = r3 instanceof java lang class <NEXT> if $ z1 == 0 goto label2 <NEXT> r2 [ i2 ] = r3 <NEXT> goto label4 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r3 instanceof java lang reflect parameterized type <NEXT> if $ z2 == 0 goto label3 <NEXT> r12 = java lang reflect parameterized type r3 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = r3 instanceof java lang reflect type variable <NEXT> if $ z3 == 0 goto label4 <NEXT> $ r9 = r0 concrete class <NEXT> $ r8 = r0 declare class <NEXT> $ r7 = java lang reflect type variable r3 <NEXT> r4 = com sun jersey core reflection reflection helper resolve type variable $ r9 $ r8 $ r7 <NEXT> $ r10 = r4 t <NEXT> r2 [ i2 ] = $ r10 <NEXT> if i2 > = $ i1 goto label5 <NEXT> label return r2 <NEXT> if $ z0 == 0 goto label6 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com sun jersey impl impl message localizer <NEXT> $ r2 = com sun jersey impl impl message localizable e r r o r_ n o_ s u b_ r e s_ m e t h o d_ l o c a t o r_ f o u n d r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = com sun jersey impl impl message localizer <NEXT> $ r3 = com sun jersey impl impl message localizable e r r o r_ p r o c e s s i n g_ m e t h o d r0 r1 <NEXT> $ r4 = $ r2 localize $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com sun jersey impl impl message localizer <NEXT> $ r2 = com sun jersey impl impl message localizable e r r o r_ m a r s h a l l i n g_ j a x b r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = javax w r core cookie r0 <NEXT> $ r1 = r2 domain <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = javax w r core cookie r0 <NEXT> $ r1 = r2 path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ i0 = 97 * 7 <NEXT> r9 = javax w r core cookie r0 <NEXT> $ r1 = r9 name <NEXT> if $ r1 == null goto label1 <NEXT> r10 = javax w r core cookie r0 <NEXT> $ r8 = r10 name <NEXT> $ i7 = $ r8 hash code <NEXT> goto label2 <NEXT> label i8 = $ i0 + $ i7 <NEXT> $ i1 = 97 * i8 <NEXT> r11 = javax w r core cookie r0 <NEXT> $ r2 = r11 value <NEXT> if $ r2 == null goto label3 <NEXT> r12 = javax w r core cookie r0 <NEXT> $ r7 = r12 value <NEXT> $ i9 = $ r7 hash code <NEXT> goto label4 <NEXT> label i10 = $ i1 + $ i9 <NEXT> $ i3 = 97 * i10 <NEXT> r13 = javax w r core cookie r0 <NEXT> $ i2 = r13 version <NEXT> i11 = $ i3 + $ i2 <NEXT> $ i4 = 97 * i11 <NEXT> r14 = javax w r core cookie r0 <NEXT> $ r3 = r14 path <NEXT> if $ r3 == null goto label5 <NEXT> r15 = javax w r core cookie r0 <NEXT> $ r6 = r15 path <NEXT> $ i12 = $ r6 hash code <NEXT> goto label6 <NEXT> label i13 = $ i4 + $ i12 <NEXT> $ i5 = 97 * i13 <NEXT> r16 = javax w r core cookie r0 <NEXT> $ r4 = r16 domain <NEXT> if $ r4 == null goto label7 <NEXT> r17 = javax w r core cookie r0 <NEXT> $ r5 = r17 domain <NEXT> $ i14 = $ r5 hash code <NEXT> goto label8 <NEXT> label i15 = $ i5 + $ i14 <NEXT> return i15 <NEXT> if $ r4 == null goto label7 <NEXT> label $ i14 = 0 <NEXT> if $ r3 == null goto label5 <NEXT> label $ i12 = 0 <NEXT> if $ r2 == null goto label3 <NEXT> label $ i9 = 0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ i7 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = javax w r core entity tag r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> r11 = javax w r core medium type r0 <NEXT> $ r2 = r11 type <NEXT> $ r3 = $ r2 to lower case <NEXT> $ r4 = r10 append $ r3 <NEXT> r12 = javax w r core medium type r0 <NEXT> $ r5 = r12 subtype <NEXT> $ r6 = $ r5 to lower case <NEXT> $ r7 = $ r4 append $ r6 <NEXT> $ r8 = $ r7 to string <NEXT> $ i0 = $ r8 hash code <NEXT> r13 = javax w r core medium type r0 <NEXT> $ r9 = r13 parameter <NEXT> $ i1 = $ r9 hash code <NEXT> $ i2 = $ i0 + $ i1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = r1 get name <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 append \ `` _\ `` <NEXT> $ r8 = $ r7 append r2 <NEXT> $ r9 = $ r8 append \ `` _\ `` <NEXT> $ r10 = r3 get name <NEXT> $ r11 = $ r9 append $ r10 <NEXT> $ r12 = $ r11 to string <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey message filter spi filter helper entity_classes <NEXT> $ z0 = $ r1 contain key r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r5 = org glassfish jersey message filter spi filter helper entity_classes <NEXT> $ r6 = org glassfish jersey message filter spi filter helper _get entity class r0 <NEXT> $ r5 put if absent r0 $ r6 <NEXT> label $ r2 = org glassfish jersey message filter spi filter helper entity_classes <NEXT> $ r3 = $ r2 get r0 <NEXT> $ r4 = java lang class $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = org glassfish jersey message filter spi scope provider default_scope <NEXT> $ r1 = java util collection singleton $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org glassfish jersey jackson internal jackson jaxrs base provider base r0 <NEXT> $ z0 = r2 have match medium type r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org eclipse jetty annotation annotation decorator r0 <NEXT> $ r3 = r4 _introspector <NEXT> $ r3 introspect r1 r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org eclipse jetty annotation resource annotation handler env_entry_types <NEXT> $ z0 = $ r2 contain r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = null <NEXT> i1 = 0 <NEXT> label r12 = org eclipse jetty http http field r0 <NEXT> $ i0 = r12 _size <NEXT> if i1 > = $ i0 goto label4 <NEXT> r13 = org eclipse jetty http http field r0 <NEXT> $ r4 = r13 _fields <NEXT> r3 = $ r4 [ i1 ] <NEXT> $ r5 = r3 get name <NEXT> $ z0 = $ r5 equal ignore case r1 <NEXT> if $ z0 == 0 goto label3 <NEXT> if r9 ! = null goto label2 <NEXT> r11 = new org eclipse jetty http quote c s v <NEXT> $ r8 = newarray java lang string [ 0 ] <NEXT> specialinvoke r11 < init > 0 $ r8 <NEXT> r9 = r11 <NEXT> label $ r6 = r3 get value <NEXT> r9 add value $ r6 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label4 <NEXT> label r14 = org eclipse jetty http http field r0 <NEXT> r10 = r14 add c s v r9 r2 <NEXT> if r10 == null goto label5 <NEXT> r15 = org eclipse jetty http http field r0 <NEXT> r15 add r1 r10 <NEXT> return 1 <NEXT> if r10 == null goto label5 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i2 = 0 <NEXT> label r10 = org eclipse jetty http http field r0 <NEXT> $ i1 = r10 _size <NEXT> if i2 > = $ i1 goto label3 <NEXT> r11 = org eclipse jetty http http field r0 <NEXT> $ r4 = r11 _fields <NEXT> r2 = $ r4 [ i2 ] <NEXT> $ r5 = r2 get name <NEXT> $ z0 = $ r5 equal ignore case r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r2 get value <NEXT> if $ r6 == null goto label2 <NEXT> r9 = new org eclipse jetty http http field $ 1 <NEXT> r12 = org eclipse jetty http http field r0 <NEXT> specialinvoke r9 < init > r12 r2 i2 r1 <NEXT> r13 = java util enumeration r9 <NEXT> return r13 <NEXT> if $ r6 == null goto label2 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label3 <NEXT> label r8 = java util collection empty list <NEXT> $ r3 = java util collection enumeration r8 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> r2 = org eclipse jetty http date generator format date l0 <NEXT> r3 = org eclipse jetty http http field r0 <NEXT> r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jetty io byte buffer output stream2 r0 <NEXT> $ r1 = r3 _accumulator <NEXT> $ r2 = $ r1 take byte buffer <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jetty io client connector r0 <NEXT> r1 reuse port = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org eclipse jetty io datagram channel end point r0 <NEXT> $ z0 = r9 be input shutdown <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r8 = org eclipse jetty io datagram channel end point eof <NEXT> return $ r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label i0 = org eclipse jetty util buffer util flip to fill r1 <NEXT> r10 = org eclipse jetty io datagram channel end point r0 <NEXT> $ r3 = r10 get channel <NEXT> r2 = $ r3 receive r1 <NEXT> org eclipse jetty util buffer util flip to flush r1 i0 <NEXT> if r2 ! = null goto label2 <NEXT> return null <NEXT> if r2 ! = null goto label2 <NEXT> label r11 = org eclipse jetty io datagram channel end point r0 <NEXT> r11 not idle <NEXT> i1 = r1 remain <NEXT> $ r4 = org eclipse jetty io datagram channel end point log <NEXT> $ z1 = $ r4 be debug enabled <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r5 = org eclipse jetty io datagram channel end point log <NEXT> $ r6 = java lang integer value of i1 <NEXT> $ r7 = org eclipse jetty util buffer util to detail string r1 <NEXT> $ r5 debug \ `` fill { } { } \ <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = jakarta servlet generic servlet r0 <NEXT> $ r3 = r6 get servlet context <NEXT> r7 = jakarta servlet generic servlet r0 <NEXT> $ r4 = r7 get servlet name <NEXT> $ r5 = dynamicinvoke \ `` make concat with constants\ `` < java lang string java lang string java lang string > $ r4 r1 java lang invoke string concat factory make concat with constant \ `` \u \u0001\ `` <NEXT> $ r3 log $ r5 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return -1l <END>
<BEG> r0 = @ this <NEXT> r3 = jakarta servlet http http servlet request wrapper r0 <NEXT> $ r1 = r3 _get http servlet request <NEXT> $ r2 = $ r1 get http servlet map <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = jakarta websocket close reason r0 <NEXT> $ r1 = r6 reason phrase <NEXT> if $ r1 ! = null goto label1 <NEXT> r7 = jakarta websocket close reason r0 <NEXT> $ r4 = r7 close code <NEXT> $ i1 = $ r4 get code <NEXT> $ r5 = dynamicinvoke \ `` make concat with constants\ `` < java lang string int > $ i1 java lang invoke string concat factory make concat with constant \ `` close reason [ \u0001 ] \ `` <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r8 = jakarta websocket close reason r0 <NEXT> $ r2 = r8 close code <NEXT> $ i0 = $ r2 get code <NEXT> r9 = jakarta websocket close reason r0 <NEXT> $ r3 = r9 reason phrase <NEXT> $ r5 = dynamicinvoke \ `` make concat with constants\ `` < java lang string int java lang string > $ i0 $ r3 java lang invoke string concat factory make concat with constant \ `` close reason [ \u0001 \u0001 ] \ `` <END>
<BEG> r0 = @ this <NEXT> r2 = jakarta websocket server default server endpoint config r0 <NEXT> $ r1 = r2 encoders <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jetty proxy after content transformer r0 <NEXT> $ l0 = r1 max input buffer size <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r9 = new java lang illegal argument exception <NEXT> specialinvoke r9 < init > <NEXT> throw r9 <NEXT> if r1 ! = null goto label1 <NEXT> label r8 = r1 <NEXT> label $ r3 = r8 get handler <NEXT> $ z0 = $ r3 instanceof org eclipse jetty server handler handler wrapper <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r6 = r8 get handler <NEXT> r8 = org eclipse jetty server handler handler wrapper $ r6 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r4 = r8 get handler <NEXT> if $ r4 == null goto label4 <NEXT> r10 = new java lang illegal argument exception <NEXT> specialinvoke r10 < init > \ `` bad tail of inserted wrapper chain\ `` <NEXT> throw r10 <NEXT> if $ r4 == null goto label4 <NEXT> label r11 = org eclipse jetty server handler handler wrapper r0 <NEXT> r2 = r11 get handler <NEXT> r12 = org eclipse jetty server handler handler wrapper r0 <NEXT> r13 = org eclipse jetty server handler r1 <NEXT> r12 set handler r13 <NEXT> r8 set handler r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jetty server handler idle timeout handler r0 <NEXT> r1 _apply to async = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org eclipse jetty server handler inet access handler r0 <NEXT> $ r2 = r4 _set <NEXT> $ r3 = org eclipse jetty server handler inet access set $ pattern tuple from r1 <NEXT> $ r2 exclude $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r6 = r2 get http channel <NEXT> $ r7 = $ r6 get connector <NEXT> r4 = $ r7 get name <NEXT> $ r8 = r2 get meta data <NEXT> $ r9 = $ r8 get u r i <NEXT> r5 = $ r9 get decode path <NEXT> r13 = org eclipse jetty server handler inet access handler r0 <NEXT> $ r11 = r13 _set <NEXT> r12 = new org eclipse jetty server handler inet access set $ access tuple <NEXT> specialinvoke r12 < init > r4 r1 r5 <NEXT> $ z0 = $ r11 test r12 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r4 = org eclipse jetty server http configuration r0 <NEXT> r4 _server authority = null <NEXT> goto label3 <NEXT> label return <NEXT> if r1 ! = null goto label1 <NEXT> label $ z0 = r1 have host <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r3 = new java lang illegal state exception <NEXT> specialinvoke r3 < init > \ `` server authority must have host declared\ `` <NEXT> throw r3 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r5 = org eclipse jetty server http configuration r0 <NEXT> r5 _server authority = r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r5 = org eclipse jetty server optional ssl connection factory log <NEXT> $ z0 = $ r5 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r13 = org eclipse jetty server optional ssl connection factory log <NEXT> r15 = org eclipse jetty server optional ssl connection factory r0 <NEXT> $ r12 = r15 _next protocol <NEXT> $ r13 debug \ `` optional s s l tls detection unsuccessful attempt to upgrade to { } \ <NEXT> label r16 = org eclipse jetty server optional ssl connection factory r0 <NEXT> $ r6 = r16 _next protocol <NEXT> if $ r6 == null goto label3 <NEXT> r17 = org eclipse jetty server optional ssl connection factory r0 <NEXT> $ r7 = r17 _next protocol <NEXT> r4 = r1 get connection factory $ r7 <NEXT> if r4 ! = null goto label2 <NEXT> r14 = new java lang illegal state exception <NEXT> r18 = org eclipse jetty server optional ssl connection factory r0 <NEXT> $ r9 = r18 _next protocol <NEXT> $ r10 = r1 get protocols <NEXT> $ r11 = dynamicinvoke \ `` make concat with constants\ `` < java lang string java lang string java util list org eclipse jetty io end point > $ r9 $ r10 r2 java lang invoke string concat factory make concat with constant \ `` can not find protocol \'\u0001\ ' in connector\ 's protocol list \u0001 for \u0001\ `` <NEXT> specialinvoke r14 < init > $ r11 <NEXT> throw r14 <NEXT> if r4 ! = null goto label2 <NEXT> label org eclipse jetty server optional ssl connection factory upgrade to connection factory r4 r1 r2 <NEXT> goto label4 <NEXT> label return <NEXT> if $ r6 == null goto label3 <NEXT> label r19 = org eclipse jetty server optional ssl connection factory r0 <NEXT> r19 other protocol r3 r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r5 = org eclipse jetty server session abstract session data store r0 <NEXT> $ z0 = r5 be start <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = new java lang illegal state exception <NEXT> specialinvoke r4 < init > \ `` not started\ `` <NEXT> throw r4 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r6 = org eclipse jetty server session abstract session data store r0 <NEXT> r1 = abstract session data store $ lambda_clean orphans_0__3 bootstrap $ r6 l0 <NEXT> r7 = org eclipse jetty server session abstract session data store r0 <NEXT> $ r2 = r7 _context <NEXT> $ r2 run r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org eclipse jetty server session database adaptor r0 <NEXT> r3 _driver class name = r1 <NEXT> r4 = org eclipse jetty server session database adaptor r0 <NEXT> r4 _connection url = r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org eclipse jetty server session default session id manager r0 <NEXT> r1 _reseed = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jetty server abstract n c s a request log r0 <NEXT> $ z0 = r1 _prefer proxied for address <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r1 [ i1 ] <NEXT> r5 = org eclipse jetty server handler gzip gzip handler r0 <NEXT> $ r4 = r5 _methods <NEXT> $ r4 exclude r3 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r1 [ i1 ] <NEXT> r6 = org eclipse jetty server handler gzip gzip handler r0 <NEXT> $ r4 = r6 _paths <NEXT> $ r5 = org eclipse jetty util string util csv split r3 <NEXT> $ r4 include $ r5 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org eclipse jetty util string util csv split r1 <NEXT> r3 = org eclipse jetty server handler gzip gzip handler r0 <NEXT> r3 set exclude method $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r21 = org eclipse jetty server handler i p access handler r0 <NEXT> $ r5 = r21 _white <NEXT> $ i0 = $ r5 size <NEXT> if $ i0 < = 0 goto label06 <NEXT> z3 = 0 <NEXT> z4 = 0 <NEXT> r22 = org eclipse jetty server handler i p access handler r0 <NEXT> $ r11 = r22 _white <NEXT> $ r12 = $ r11 get match r2 <NEXT> r16 = $ r12 iterator <NEXT> label $ z1 = r16 have next <NEXT> if $ z1 == 0 goto label04 <NEXT> $ r13 = r16 next <NEXT> r3 = java util map $ entry $ r13 <NEXT> z4 = 1 <NEXT> $ r14 = r3 get value <NEXT> r4 = org eclipse jetty util i p address map $ r14 <NEXT> if r4 == null goto label03 <NEXT> $ i2 = r4 size <NEXT> if $ i2 == 0 goto label02 <NEXT> $ r15 = r4 match r1 <NEXT> if $ r15 == null goto label03 <NEXT> label z3 = 1 <NEXT> goto label04 <NEXT> label r23 = org eclipse jetty server handler i p access handler r0 <NEXT> $ z2 = r23 _white list by path <NEXT> if $ z2 == 0 goto label05 <NEXT> if z4 == 0 goto label06 <NEXT> if z3 ! = 0 goto label06 <NEXT> return 0 <NEXT> if z3 ! = 0 goto label06 <NEXT> label r24 = org eclipse jetty server handler i p access handler r0 <NEXT> $ r17 = r24 _black <NEXT> $ i3 = $ r17 size <NEXT> if $ i3 < = 0 goto label10 <NEXT> r25 = org eclipse jetty server handler i p access handler r0 <NEXT> $ r6 = r25 _black <NEXT> $ r7 = $ r6 get match r2 <NEXT> r18 = $ r7 iterator <NEXT> label $ z0 = r18 have next <NEXT> if $ z0 == 0 goto label10 <NEXT> $ r8 = r18 next <NEXT> r19 = java util map $ entry $ r8 <NEXT> $ r9 = r19 get value <NEXT> r20 = org eclipse jetty util i p address map $ r9 <NEXT> if r20 == null goto label09 <NEXT> $ i1 = r20 size <NEXT> if $ i1 == 0 goto label08 <NEXT> $ r10 = r20 match r1 <NEXT> if $ r10 == null goto label09 <NEXT> label return 0 <NEXT> if $ r10 == null goto label09 <NEXT> label goto label07 <NEXT> if $ z0 == 0 goto label10 <NEXT> label return 1 <NEXT> if $ z2 == 0 goto label05 <NEXT> label if z3 ! = 0 goto label06 <NEXT> if $ r15 == null goto label03 <NEXT> label goto label01 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse jetty server http configuration r0 <NEXT> r1 _request header size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jetty servlet servlet context handler r0 <NEXT> $ r1 = r2 _obj factory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new org eclipse jetty servlet servlet handler $ chain <NEXT> specialinvoke r4 < init > r1 r2 <NEXT> r5 = javax servlet filter chain r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> l3 = org eclipse jetty util atomic bi integer encode i1 i2 <NEXT> r1 = org eclipse jetty util atomic bi integer r0 <NEXT> $ z0 = r1 compare and set l0 l3 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = org eclipse jetty util buffer util flip to fill r0 <NEXT> label i1 = org eclipse jetty util buffer util put r1 r0 <NEXT> label org eclipse jetty util buffer util flip to flush r0 i0 <NEXT> return i1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> if r0 ! = null goto label1 <NEXT> $ r2 = org eclipse jetty util buffer util empty_buffer <NEXT> return $ r2 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = java nio byte buffer wrap r0 i0 i1 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` null\ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = org eclipse jetty util buffer util to array r0 <NEXT> $ r2 = org eclipse jetty util type util to hex string $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return 0 <NEXT> if r0 ! = null goto label1 <NEXT> label $ z0 = r0 instanceof java util list <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r1 = java util list r0 <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = java lang system identity hash code r1 <NEXT> $ r2 = java lang string value of $ i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org eclipse jetty util multi map r0 <NEXT> $ r3 = r8 get r1 <NEXT> r6 = java util list $ r3 <NEXT> if r6 ! = null goto label1 <NEXT> r7 = new java util array list <NEXT> specialinvoke r7 < init > <NEXT> r6 = r7 <NEXT> label r6 add r2 <NEXT> specialinvoke r0 put r1 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jetty util resource path resource r0 <NEXT> $ r1 = r2 alias <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = null <NEXT> if r2 == null goto label5 <NEXT> label $ r4 = r1 get certificate r2 <NEXT> r12 = org eclipse jetty util security certificate validator r0 <NEXT> r12 validate r1 $ r4 <NEXT> label goto label4 <NEXT> label r10 = r2 <NEXT> label return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jetty util ssl ssl context factory r0 <NEXT> $ r2 = org eclipse jetty util ssl ssl context factory get x509 cert chain r3 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org eclipse jetty util thread queue thread pool r0 <NEXT> r4 _idle timeout = i0 <NEXT> r5 = org eclipse jetty util thread queue thread pool r0 <NEXT> $ r2 = r5 get bean class \ `` lorg eclipse jetty util thread reserve thread executor \ `` <NEXT> r1 = org eclipse jetty util thread reserve thread executor $ r2 <NEXT> if r1 == null goto label1 <NEXT> $ l1 = long i0 <NEXT> $ r3 = java util concurrent time unit milliseconds <NEXT> r1 set idle timeout $ l1 $ r3 <NEXT> label return <END>
<BEG> $ r0 = org eclipse jetty util thread shutdown thread _thread <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jetty util pool r0 <NEXT> $ i0 = r1 max usage count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 be directory <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r7 = java util collection empty set <NEXT> return $ r7 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r12 = new java util hash set <NEXT> specialinvoke r12 < init > <NEXT> r3 = r1 list file <NEXT> if r3 == null goto label6 <NEXT> i0 = lengthof r3 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label6 <NEXT> r5 = r3 [ i1 ] <NEXT> $ z1 = r5 be directory <NEXT> if $ z1 == 0 goto label4 <NEXT> r13 = org eclipse jetty webapp meta inf configuration r0 <NEXT> $ r11 = r13 get tlds r5 <NEXT> r12 add all $ r11 <NEXT> goto label5 <NEXT> label i1 = i1 + 1 <NEXT> goto label3 <NEXT> if $ z1 == 0 goto label4 <NEXT> label r6 = r5 get canonical path <NEXT> $ z2 = r6 contain \ `` meta-inf\ `` <NEXT> if $ z2 == 0 goto label5 <NEXT> $ z3 = r6 end with \ `` tld\ `` <NEXT> if $ z3 == 0 goto label5 <NEXT> $ r9 = r5 to u r i <NEXT> $ r10 = $ r9 to u r l <NEXT> r12 add $ r10 <NEXT> label if i1 > = i0 goto label6 <NEXT> label return r12 <END>
<BEG> z0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> if z0 ! = 0 goto label1 <NEXT> $ r1 = new java lang illegal argument exception <NEXT> specialinvoke $ r1 < init > r0 <NEXT> throw $ r1 <NEXT> if z0 ! = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = io jsonwebtoken lang string have text r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> specialinvoke $ r2 < init > r1 <NEXT> throw $ r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = io jsonwebtoken lang object be empty r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> specialinvoke $ r2 < init > r1 <NEXT> throw $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return 0 <NEXT> if r0 ! = null goto label1 <NEXT> label i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r3 = r0 [ i1 ] <NEXT> $ z0 = io jsonwebtoken lang object null safe equal r3 r1 <NEXT> if $ z0 == 0 goto label3 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof java lang object [ ] <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r15 = java lang object [ ] r0 <NEXT> $ r16 = java lang object [ ] $ r15 <NEXT> return $ r16 <NEXT> if $ z0 == 0 goto label1 <NEXT> label if r0 ! = null goto label2 <NEXT> $ r14 = newarray java lang object [ 0 ] <NEXT> return $ r14 <NEXT> label if r0 ! = null goto label2 <NEXT> label $ r3 = r0 get class <NEXT> $ z1 = $ r3 be array <NEXT> if $ z1 ! = 0 goto label3 <NEXT> $ r9 = new java lang illegal argument exception <NEXT> $ r10 = new java lang string builder <NEXT> specialinvoke $ r10 < init > <NEXT> $ r11 = $ r10 append \ `` source be not an array \ `` <NEXT> $ r12 = $ r11 append r0 <NEXT> $ r13 = $ r12 to string <NEXT> specialinvoke $ r9 < init > $ r13 <NEXT> throw $ r9 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label i0 = java lang reflect array get length r0 <NEXT> if i0 ! = 0 goto label4 <NEXT> $ r8 = newarray java lang object [ 0 ] <NEXT> return $ r8 <NEXT> if i0 ! = 0 goto label4 <NEXT> label $ r4 = java lang reflect array get r0 0 <NEXT> r1 = $ r4 get class <NEXT> $ r5 = java lang reflect array new instance r1 i0 <NEXT> $ r6 = java lang object [ ] $ r5 <NEXT> r2 = java lang object [ ] $ r6 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label6 <NEXT> $ r7 = java lang reflect array get r0 i1 <NEXT> r2 [ i1 ] = $ r7 <NEXT> i1 = i1 + 1 <NEXT> goto label5 <NEXT> label if i1 > = i0 goto label6 <NEXT> label return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return 0 <NEXT> if r0 ! = null goto label1 <NEXT> label i3 = 7 <NEXT> i0 = lengthof r0 <NEXT> i4 = 0 <NEXT> label if i4 > = i0 goto label3 <NEXT> $ i1 = 31 * i3 <NEXT> $ z0 = r0 [ i4 ] <NEXT> $ i2 = io jsonwebtoken lang object hash code $ z0 <NEXT> i3 = $ i1 + $ i2 <NEXT> i4 = i4 + 1 <NEXT> goto label2 <NEXT> label if i4 > = i0 goto label3 <NEXT> label return i3 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` \ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = io jsonwebtoken lang object null safe to string r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> if r1 ! = null goto label2 <NEXT> label return 0 <NEXT> if r1 ! = null goto label2 <NEXT> label $ z0 = r0 end with r1 <NEXT> if $ z0 == 0 goto label3 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ i0 = r0 length <NEXT> $ i1 = r1 length <NEXT> if $ i0 > = $ i1 goto label4 <NEXT> return 0 <NEXT> if $ i0 > = $ i1 goto label4 <NEXT> label $ i2 = r0 length <NEXT> $ i3 = r1 length <NEXT> $ i4 = $ i2 - $ i3 <NEXT> $ r4 = r0 substring $ i4 <NEXT> r2 = $ r4 to lower case <NEXT> r3 = r1 to lower case <NEXT> $ z1 = r2 equal r3 <NEXT> return $ z1 <END>
<BEG> r0 = @ parameter0 <NEXT> c0 = @ parameter1 <NEXT> $ i1 = r0 last index of c0 <NEXT> $ i2 = $ i1 + 1 <NEXT> $ r1 = r0 substring $ i2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = r0 size <NEXT> $ r1 = newarray java lang string [ $ i0 ] <NEXT> $ r2 = r0 to array $ r1 <NEXT> $ r3 = java lang string [ ] $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = io jsonwebtoken signature algorithm r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com sun jna function parameter context r0 <NEXT> $ i0 = r1 index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = com sun jna memory r0 <NEXT> r1 bound check l0 8l <NEXT> $ d0 = specialinvoke r0 get double l0 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> s1 = @ parameter1 <NEXT> r1 = com sun jna memory r0 <NEXT> r1 bound check l0 2l <NEXT> specialinvoke r0 set short l0 s1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> r1 = com sun jna memory r0 <NEXT> r1 bound check l0 4l <NEXT> specialinvoke r0 set float l0 f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = com sun jna pointer r0 <NEXT> $ l1 = r1 peer <NEXT> r2 = com sun jna pointer r0 <NEXT> $ f0 = com sun jna native get float r2 $ l1 l0 <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r1 = newarray short [ i1 ] <NEXT> r2 = com sun jna pointer r0 <NEXT> r2 read l0 r1 0 i1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r1 = newarray int [ i1 ] <NEXT> r2 = com sun jna pointer r0 <NEXT> r2 read l0 r1 0 i1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> $ r4 = new java util array list <NEXT> specialinvoke $ r4 < init > <NEXT> r8 = r0 get class <NEXT> label $ z0 = r8 equal class \ `` lcom sun jna structure \ `` <NEXT> if $ z0 ! = 0 goto label6 <NEXT> $ r5 = new java util array list <NEXT> specialinvoke $ r5 < init > <NEXT> r3 = r8 get declare field <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r3 <NEXT> if i2 > = $ i1 goto label5 <NEXT> $ r6 = r3 [ i2 ] <NEXT> i0 = $ r6 get modifier <NEXT> $ z2 = java lang reflect modifier be static i0 <NEXT> if $ z2 ! = 0 goto label4 <NEXT> $ z3 = java lang reflect modifier be public i0 <NEXT> if $ z3 ! = 0 goto label3 <NEXT> goto label4 <NEXT> label i2 = i2 + 1 <NEXT> goto label2 <NEXT> if $ z3 ! = 0 goto label3 <NEXT> label $ r7 = r3 [ i2 ] <NEXT> $ r5 add $ r7 <NEXT> if i2 > = $ i1 goto label5 <NEXT> label $ r4 add all 0 $ r5 <NEXT> r8 = r8 get superclass <NEXT> goto label1 <NEXT> if $ z0 ! = 0 goto label6 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com sun jna structure r0 <NEXT> $ z0 = r2 data equal r1 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = com sun jna klass new instance r0 <NEXT> r1 = com sun jna structure $ r2 <NEXT> $ z0 = r1 instanceof com sun jna structure $ by value <NEXT> if $ z0 == 0 goto label1 <NEXT> r1 allocate memory <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r9 = com sun jna union r0 <NEXT> r1 = r9 get field list <NEXT> r8 = new java util array list <NEXT> $ i0 = r1 size <NEXT> specialinvoke r8 < init > $ i0 <NEXT> r3 = r1 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r3 next <NEXT> r4 = java lang reflect field $ r6 <NEXT> $ r7 = r4 get name <NEXT> r8 add $ r7 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r8 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jna platform dnd ghost drag image r0 <NEXT> $ r1 = r2 drag image <NEXT> $ r1 dispose <NEXT> r3 = com sun jna platform dnd ghost drag image r0 <NEXT> r3 drag image = null <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = com sun jna platform linux x attr instance <NEXT> $ r3 = new com sun jna platform linux x attr $ size_t <NEXT> $ i2 = lengthof r2 <NEXT> $ l3 = long $ i2 <NEXT> specialinvoke $ r3 < init > $ l3 <NEXT> i0 = $ r4 lsetxattr r0 r1 r2 $ r3 0 <NEXT> if i0 == 0 goto label1 <NEXT> i1 = com sun jna native get last error <NEXT> $ r5 = new java io i o exception <NEXT> $ r6 = new java lang string builder <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = $ r6 append \ `` errno \ `` <NEXT> $ r8 = $ r7 append i1 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r5 < init > $ r9 <NEXT> throw $ r5 <NEXT> if i0 == 0 goto label1 <NEXT> label return <END>
<BEG> $ r1 = new com sun jna ptr int by reference <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = com sun jna platform mac i o kit util io <NEXT> $ r2 i o master port 0 $ r1 <NEXT> $ i1 = $ r1 get value <NEXT> return $ i1 <END>
<BEG> i0 = com sun jna platform mac i o kit util get master port <NEXT> $ r1 = com sun jna platform mac i o kit util io <NEXT> r0 = $ r1 i o registry get root entry i0 <NEXT> $ r3 = com sun jna platform mac i o kit util sys <NEXT> $ r2 = com sun jna platform mac i o kit util sys <NEXT> $ i1 = $ r2 mach_task_self <NEXT> $ r3 mach_port_deallocate $ i1 i0 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jna platform win32 com c o m bind base object r0 <NEXT> $ r1 = r2 i dispatch <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jna platform win32 com c o m invoke exception r0 <NEXT> $ r1 = r2 error arg <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jna platform win32 com tlb imp tlb base r0 <NEXT> $ r1 = r2 class buffer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r6 = new com sun jna ptr int by reference <NEXT> specialinvoke r6 < init > <NEXT> r8 = com sun jna platform win32 com type info util r0 <NEXT> $ r5 = r8 type info <NEXT> r7 = new com sun jna platform win32 win def $ uint <NEXT> $ l1 = long i0 <NEXT> specialinvoke r7 < init > $ l1 <NEXT> r2 = $ r5 get impl type flag r7 r6 <NEXT> com sun jna platform win32 com c o m utils check r c r2 <NEXT> $ i2 = r6 get value <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new com sun jna ptr pointer by reference <NEXT> specialinvoke r8 < init > <NEXT> r10 = com sun jna platform win32 com type info util r0 <NEXT> $ r5 = r10 type info <NEXT> r3 = $ r5 get ref type info r1 r8 <NEXT> com sun jna platform win32 com c o m utils check r c r3 <NEXT> r9 = new com sun jna platform win32 com type info <NEXT> $ r7 = r8 get value <NEXT> specialinvoke r9 < init > $ r7 <NEXT> r11 = com sun jna platform win32 com i type info r9 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jna platform win32 com type lib util r0 <NEXT> $ r1 = r2 lcid <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com sun jna platform win32 crypt32 util crypt unprotect data r0 0 <NEXT> return $ r1 <END>
<BEG> $ r0 = com sun jna platform win32 secur32 util get user name ex 2 <NEXT> $ r1 = com sun jna platform win32 netapi32 util get user local group $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = new com sun jna platform win32 guid $ guid <NEXT> $ r4 = r0 get pointer <NEXT> specialinvoke $ r3 < init > $ r4 <NEXT> r2 = newarray char [ 39 ] <NEXT> $ r5 = com sun jna platform win32 ole32 instance <NEXT> i1 = $ r5 string from g u i d2 $ r3 r2 39 <NEXT> if i1 ! = 0 goto label1 <NEXT> $ r7 = new java lang runtime exception <NEXT> specialinvoke $ r7 < init > \ `` string from g u i d2\ `` <NEXT> throw $ r7 <NEXT> if i1 ! = 0 goto label1 <NEXT> label $ i2 = i1 - 1 <NEXT> r2 [ $ i2 ] = 0 <NEXT> $ r6 = com sun jna native to string r2 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = com sun jna platform win32 rasapi32 instance <NEXT> i0 = $ r1 ra hang up r0 <NEXT> if i0 == 0 goto label2 <NEXT> r3 = new com sun jna platform win32 rasapi32 util $ ras32 exception <NEXT> specialinvoke r3 < init > i0 <NEXT> r4 = java lang throwable r3 <NEXT> throw r4 <NEXT> if i0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r4 = com sun jna platform win32 shl obj $ known_folder_flag none <NEXT> i0 = $ r4 get flag <NEXT> r11 = new com sun jna ptr pointer by reference <NEXT> specialinvoke r11 < init > <NEXT> $ r6 = com sun jna platform win32 shell32 instance <NEXT> r2 = $ r6 s h get know folder path r0 i0 null r11 <NEXT> $ i1 = r2 int value <NEXT> $ z0 = com sun jna platform win32 w32 error succeed $ i1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r12 = new com sun jna platform win32 win32 exception <NEXT> specialinvoke r12 < init > r2 <NEXT> r13 = java lang throwable r12 <NEXT> throw r13 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r7 = r11 get value <NEXT> r3 = $ r7 get wide string 0l <NEXT> $ r8 = com sun jna platform win32 ole32 instance <NEXT> $ r9 = r11 get value <NEXT> $ r8 co task mem free $ r9 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r7 = com sun jna platform win32 w32 service manager r0 <NEXT> $ r1 = r7 _handle <NEXT> if $ r1 == null goto label2 <NEXT> $ r3 = com sun jna platform win32 advapi32 instance <NEXT> r8 = com sun jna platform win32 w32 service manager r0 <NEXT> $ r2 = r8 _handle <NEXT> $ z0 = $ r3 close service handle $ r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = new com sun jna platform win32 win32 exception <NEXT> $ r5 = com sun jna platform win32 kernel32 instance <NEXT> $ i0 = $ r5 get last error <NEXT> specialinvoke r6 < init > $ i0 <NEXT> r9 = java lang throwable r6 <NEXT> throw r9 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r10 = com sun jna platform win32 w32 service manager r0 <NEXT> r10 _handle = null <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r4 = com sun jna platform win32 advapi32 instance <NEXT> r10 = com sun jna platform win32 w32 service manager r0 <NEXT> $ r3 = r10 _handle <NEXT> r2 = $ r4 open service $ r3 r1 i0 <NEXT> if r2 ! = null goto label1 <NEXT> r8 = new com sun jna platform win32 win32 exception <NEXT> $ r7 = com sun jna platform win32 kernel32 instance <NEXT> $ i1 = $ r7 get last error <NEXT> specialinvoke r8 < init > $ i1 <NEXT> r11 = java lang throwable r8 <NEXT> throw r11 <NEXT> if r2 ! = null goto label1 <NEXT> label r9 = new com sun jna platform win32 w32 service <NEXT> specialinvoke r9 < init > r2 <NEXT> return r9 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r13 = new com sun jna ptr int by reference <NEXT> specialinvoke r13 < init > <NEXT> $ r5 = com sun jna platform win32 wevtapi instance <NEXT> z0 = $ r5 evt get channel config property r0 i0 0 0 null r13 <NEXT> $ r6 = com sun jna platform win32 kernel32 instance <NEXT> i1 = $ r6 get last error <NEXT> if z0 ! = 0 goto label1 <NEXT> if i1 == 122 goto label1 <NEXT> r14 = new com sun jna platform win32 win32 exception <NEXT> specialinvoke r14 < init > i1 <NEXT> r18 = java lang throwable r14 <NEXT> throw r18 <NEXT> if i1 == 122 goto label1 <NEXT> label r15 = new com sun jna memory <NEXT> $ i2 = r13 get value <NEXT> $ l3 = long $ i2 <NEXT> specialinvoke r15 < init > $ l3 <NEXT> $ r8 = com sun jna platform win32 wevtapi instance <NEXT> $ l4 = r15 size <NEXT> $ i5 = int $ l4 <NEXT> r19 = com sun jna pointer r15 <NEXT> z1 = $ r8 evt get channel config property r0 i0 0 $ i5 r19 r13 <NEXT> if z1 ! = 0 goto label2 <NEXT> r16 = new com sun jna platform win32 win32 exception <NEXT> $ r11 = com sun jna platform win32 kernel32 instance <NEXT> $ i6 = $ r11 get last error <NEXT> specialinvoke r16 < init > $ i6 <NEXT> r20 = java lang throwable r16 <NEXT> throw r20 <NEXT> if z1 ! = 0 goto label2 <NEXT> label r17 = new com sun jna platform win32 winevt $ evt_variant <NEXT> r21 = com sun jna pointer r15 <NEXT> specialinvoke r17 < init > r21 <NEXT> r17 read <NEXT> return r17 <END>
<BEG> r0 = @ this <NEXT> r7 = org joda time base abstract date time r0 <NEXT> r1 = r7 get zone <NEXT> r6 = new java util gregorian calendar <NEXT> $ r4 = r1 to time zone <NEXT> specialinvoke r6 < init > $ r4 <NEXT> r8 = org joda time base abstract date time r0 <NEXT> $ r5 = r8 to date <NEXT> r6 set time $ r5 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r3 = new org joda time date time <NEXT> r4 = org joda time base abstract instant r0 <NEXT> $ l0 = r4 get millis <NEXT> r5 = org joda time base abstract instant r0 <NEXT> $ r2 = r5 get zone <NEXT> specialinvoke r3 < init > $ l0 $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = new java util date <NEXT> r3 = org joda time base abstract instant r0 <NEXT> $ l0 = r3 get millis <NEXT> specialinvoke r2 < init > $ l0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org joda time base abstract interval r0 <NEXT> $ l1 = r1 get start millis <NEXT> $ b2 = $ l1 cmp l0 <NEXT> if $ b2 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b2 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r0 ! = r1 goto label1 <NEXT> return 1 <NEXT> if r0 ! = r1 goto label1 <NEXT> label $ z0 = r1 instanceof org joda time readable interval <NEXT> if $ z0 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r2 = org joda time readable interval r1 <NEXT> r5 = org joda time base abstract interval r0 <NEXT> $ l0 = r5 get start millis <NEXT> $ l1 = r2 get start millis <NEXT> $ b2 = $ l0 cmp $ l1 <NEXT> if $ b2 ! = 0 goto label3 <NEXT> r6 = org joda time base abstract interval r0 <NEXT> $ l3 = r6 get end millis <NEXT> $ l4 = r2 get end millis <NEXT> $ b5 = $ l3 cmp $ l4 <NEXT> if $ b5 ! = 0 goto label3 <NEXT> r7 = org joda time base abstract interval r0 <NEXT> $ r3 = r7 get chronology <NEXT> $ r4 = r2 get chronology <NEXT> $ z1 = org joda time field field utils equal $ r3 $ r4 <NEXT> if $ z1 == 0 goto label3 <NEXT> $ z2 = 1 <NEXT> goto label4 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org joda time base abstract partial r0 <NEXT> $ i0 = r3 size <NEXT> r1 = newarray org joda time date time field type [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r4 = org joda time base abstract partial r0 <NEXT> $ r2 = r4 get field type i2 <NEXT> r1 [ i2 ] = $ r2 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org joda time base abstract partial r0 <NEXT> $ i0 = r3 size <NEXT> r1 = newarray org joda time date time field [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r4 = org joda time base abstract partial r0 <NEXT> $ r2 = r4 get field i2 <NEXT> r1 [ i2 ] = $ r2 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org joda time base abstract partial r0 <NEXT> $ i0 = r2 index of r1 <NEXT> if $ i0 == -1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 == -1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i1 = 0 <NEXT> r3 = org joda time base abstract partial r0 <NEXT> i0 = r3 size <NEXT> label if i1 > = i0 goto label3 <NEXT> r4 = org joda time base abstract partial r0 <NEXT> $ r2 = r4 get field type i1 <NEXT> if $ r2 ! = r1 goto label2 <NEXT> return i1 <NEXT> if $ r2 ! = r1 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new org joda time period <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org joda time period <NEXT> r4 = org joda time base base duration r0 <NEXT> $ l0 = r4 get millis <NEXT> specialinvoke r3 < init > $ l0 r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org joda time base base period r0 <NEXT> $ r1 = r2 i type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org joda time base base single field period r0 <NEXT> r1 i period = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org joda time date time field type year <NEXT> r4 = org joda time chrono base chronology r0 <NEXT> $ r2 = r4 year <NEXT> $ r3 = org joda time field unsupported date time field get instance $ r1 $ r2 <NEXT> r5 = org joda time date time field $ r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org joda time date time field type year of century <NEXT> r4 = org joda time chrono base chronology r0 <NEXT> $ r2 = r4 year <NEXT> $ r3 = org joda time field unsupported date time field get instance $ r1 $ r2 <NEXT> r5 = org joda time date time field $ r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r0 ! = r1 goto label1 <NEXT> return 1 <NEXT> if r0 ! = r1 goto label1 <NEXT> label if r1 == null goto label4 <NEXT> $ r3 = r0 get class <NEXT> $ r4 = r1 get class <NEXT> if $ r3 ! = $ r4 goto label4 <NEXT> r2 = org joda time chrono basic chronology r1 <NEXT> r7 = org joda time chrono basic chronology r0 <NEXT> $ i0 = r7 get minimum day in first week <NEXT> $ i1 = r2 get minimum day in first week <NEXT> if $ i0 ! = $ i1 goto label2 <NEXT> r8 = org joda time chrono basic chronology r0 <NEXT> $ r5 = r8 get zone <NEXT> $ r6 = r2 get zone <NEXT> $ z0 = $ r5 equal $ r6 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <NEXT> if $ r3 ! = $ r4 goto label4 <NEXT> label return 0 <END>
<BEG> $ r0 = org joda time chrono coptic chronology instance_utc <NEXT> return $ r0 <END>
<BEG> $ r0 = org joda time date time zone get default <NEXT> $ r1 = org joda time chrono coptic chronology get instance $ r0 4 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r2 = org joda time chrono g j day of week date time field r0 <NEXT> $ r1 = r2 i chronology <NEXT> $ i1 = $ r1 get day of week l0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org joda time chrono g j locale symbol for locale r2 <NEXT> $ i0 = $ r3 day of week text to value r1 <NEXT> return $ i0 <END>
<BEG> $ r0 = org joda time date time zone get default <NEXT> $ r1 = org joda time chrono gregorian chronology get instance $ r0 4 <NEXT> return $ r1 <END>
<BEG> $ r0 = org joda time date time zone get default <NEXT> $ r1 = org joda time chrono islamic chronology leap_year_16_based <NEXT> $ r2 = org joda time chrono islamic chronology get instance $ r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org joda time convert converter manager r0 <NEXT> r1 = r3 i instant converter <NEXT> $ i0 = r1 size <NEXT> r2 = newarray org joda time convert instant converter [ $ i0 ] <NEXT> r4 = org joda time convert converter [ ] r2 <NEXT> r1 copy into r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = @ parameter1 <NEXT> if r3 ! = null goto label1 <NEXT> $ r2 = org joda time readable instant r1 <NEXT> r4 = $ r2 get chronology <NEXT> r3 = org joda time date time utils get chronology r4 <NEXT> label return r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r1 day of month <NEXT> $ l1 = $ r2 round floor l0 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 0 goto label1 <NEXT> r4 = org joda time date midnight r0 <NEXT> return r4 <NEXT> if i0 ! = 0 goto label1 <NEXT> label r5 = org joda time date midnight r0 <NEXT> $ r1 = r5 get chronology <NEXT> $ r2 = $ r1 week <NEXT> r6 = org joda time date midnight r0 <NEXT> $ l2 = r6 get millis <NEXT> l1 = $ r2 add $ l2 i0 <NEXT> r7 = org joda time date midnight r0 <NEXT> $ r3 = r7 with millis l1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 0 goto label1 <NEXT> r4 = org joda time date midnight r0 <NEXT> return r4 <NEXT> if i0 ! = 0 goto label1 <NEXT> label r5 = org joda time date midnight r0 <NEXT> $ r1 = r5 get chronology <NEXT> $ r2 = $ r1 day <NEXT> r6 = org joda time date midnight r0 <NEXT> $ l2 = r6 get millis <NEXT> l1 = $ r2 subtract $ l2 i0 <NEXT> r7 = org joda time date midnight r0 <NEXT> $ r3 = r7 with millis l1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r6 = org joda time date midnight r0 <NEXT> r1 = r6 get chronology <NEXT> r7 = org joda time date midnight r0 <NEXT> l0 = r7 get millis <NEXT> $ r2 = org joda time duration field type day <NEXT> $ r3 = $ r2 get field r1 <NEXT> l1 = $ r3 add l0 1 <NEXT> r5 = new org joda time interval <NEXT> specialinvoke r5 < init > l0 l1 r1 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org joda time date midnight r0 <NEXT> $ r1 = r4 get chronology <NEXT> $ r2 = $ r1 weekyear <NEXT> r5 = org joda time date midnight r0 <NEXT> $ l1 = r5 get millis <NEXT> $ l2 = $ r2 set $ l1 i0 <NEXT> r6 = org joda time date midnight r0 <NEXT> $ r3 = r6 with millis $ l2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org joda time date midnight r0 <NEXT> $ r1 = r4 get chronology <NEXT> $ r2 = $ r1 month of year <NEXT> r5 = org joda time date midnight r0 <NEXT> $ l1 = r5 get millis <NEXT> $ l2 = $ r2 set $ l1 i0 <NEXT> r6 = org joda time date midnight r0 <NEXT> $ r3 = r6 with millis $ l2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r4 = new org joda time date midnight $ property <NEXT> r5 = org joda time date midnight r0 <NEXT> $ r2 = r5 get chronology <NEXT> $ r3 = $ r2 day of month <NEXT> r6 = org joda time date midnight r0 <NEXT> specialinvoke r4 < init > r6 $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org joda time date time r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org joda time date time r0 <NEXT> $ r1 = r3 get zone <NEXT> r4 = org joda time date time r0 <NEXT> $ l1 = r4 get millis <NEXT> l0 = $ r1 adjust offset $ l1 0 <NEXT> r5 = org joda time date time r0 <NEXT> $ r2 = r5 with millis l0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> r6 = org joda time date time r0 <NEXT> r1 = r6 get chronology <NEXT> r7 = org joda time date time r0 <NEXT> l3 = r7 get millis <NEXT> $ r2 = r1 year <NEXT> l4 = $ r2 set l3 i0 <NEXT> $ r3 = r1 month of year <NEXT> l5 = $ r3 set l4 i1 <NEXT> $ r4 = r1 day of month <NEXT> l6 = $ r4 set l5 i2 <NEXT> r8 = org joda time date time r0 <NEXT> $ r5 = r8 with millis l6 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 0 goto label1 <NEXT> r4 = org joda time date time r0 <NEXT> return r4 <NEXT> if i0 ! = 0 goto label1 <NEXT> label r5 = org joda time date time r0 <NEXT> $ r1 = r5 get chronology <NEXT> $ r2 = $ r1 month <NEXT> r6 = org joda time date time r0 <NEXT> $ l2 = r6 get millis <NEXT> l1 = $ r2 add $ l2 i0 <NEXT> r7 = org joda time date time r0 <NEXT> $ r3 = r7 with millis l1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 0 goto label1 <NEXT> r4 = org joda time date time r0 <NEXT> return r4 <NEXT> if i0 ! = 0 goto label1 <NEXT> label r5 = org joda time date time r0 <NEXT> $ r1 = r5 get chronology <NEXT> $ r2 = $ r1 week <NEXT> r6 = org joda time date time r0 <NEXT> $ l2 = r6 get millis <NEXT> l1 = $ r2 subtract $ l2 i0 <NEXT> r7 = org joda time date time r0 <NEXT> $ r3 = r7 with millis l1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org joda time date time r0 <NEXT> $ r1 = r4 get chronology <NEXT> $ r2 = $ r1 week of weekyear <NEXT> r5 = org joda time date time r0 <NEXT> $ l1 = r5 get millis <NEXT> $ l2 = $ r2 set $ l1 i0 <NEXT> r6 = org joda time date time r0 <NEXT> $ r3 = r6 with millis $ l2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r5 = org joda time date time comparator r0 <NEXT> $ r1 = r5 i lower limit <NEXT> if $ r1 ! = null goto label1 <NEXT> $ i2 = 0 <NEXT> goto label2 <NEXT> label r7 = org joda time date time comparator r0 <NEXT> $ r3 = r7 i upper limit <NEXT> if $ r3 ! = null goto label3 <NEXT> $ i4 = 0 <NEXT> goto label4 <NEXT> label $ i5 = 123 * $ i4 <NEXT> $ i6 = $ i2 + $ i5 <NEXT> return $ i6 <NEXT> if $ r3 ! = null goto label3 <NEXT> label r8 = org joda time date time comparator r0 <NEXT> $ r4 = r8 i upper limit <NEXT> $ i4 = $ r4 hash code <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = org joda time date time comparator r0 <NEXT> $ r2 = r6 i lower limit <NEXT> $ i2 = $ r2 hash code <END>
<BEG> $ r0 = org joda time date time field type weekyear_type <NEXT> return $ r0 <END>
<BEG> l0 = @ parameter0 <NEXT> org joda time date time utils check permission <NEXT> r1 = new org joda time date time utils $ fix millis provider <NEXT> specialinvoke r1 < init > l0 <NEXT> r2 = org joda time date time utils $ millis provider r1 <NEXT> org joda time date time utils c millis provider = r2 <NEXT> return <END>
<BEG> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> l0 = org joda time date time utils current time millis <NEXT> r2 = new org joda time interval <NEXT> specialinvoke r2 < init > l0 l0 <NEXT> r1 = r2 <NEXT> label r3 = org joda time readable interval r1 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r1 = org joda time date time zone get default <NEXT> return $ r1 <NEXT> if r0 ! = null goto label1 <NEXT> label return r0 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = d0 - 2440587 5 <NEXT> $ d2 = d1 * 8 64e7 <NEXT> $ l0 = long $ d2 <NEXT> return $ l0 <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 < -86399999 goto label1 <NEXT> if i0 < = 86399999 goto label2 <NEXT> label $ r1 = new java lang illegal argument exception <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` millis out of range \ `` <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke $ r1 < init > $ r5 <NEXT> throw $ r1 <NEXT> if i0 < = 86399999 goto label2 <NEXT> label r0 = org joda time date time zone print offset i0 <NEXT> $ r6 = org joda time date time zone fix offset zone r0 i0 <NEXT> return $ r6 <END>
<BEG> $ r0 = org joda time date time zone c available i ds <NEXT> return $ r0 <END>
<BEG> $ r0 = org joda time date time zone c provider <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org joda time date time zone r0 <NEXT> $ r1 = r2 i i d <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org joda time duration r0 <NEXT> return r1 <END>
<BEG> $ r0 = org joda time duration field type minutes_type <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org joda time field abstract partial field property r0 <NEXT> $ i0 = r2 get <NEXT> $ r1 = java lang integer to string $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org joda time field abstract partial field property r0 <NEXT> $ r1 = r2 get a text null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org joda time field abstract partial field property r0 <NEXT> $ r1 = r2 get field <NEXT> $ i0 = $ r1 get maximum value <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org joda time field abstract partial field property r0 <NEXT> $ r1 = r3 get field <NEXT> r4 = org joda time field abstract partial field property r0 <NEXT> $ r2 = r4 get readable partial <NEXT> $ i0 = $ r1 get maximum value $ r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r4 = org joda time field base date time field r0 <NEXT> $ r3 = r4 get a text i0 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> r2 = org joda time field base date time field r0 <NEXT> $ r1 = r2 get duration field <NEXT> $ i2 = $ r1 get difference l0 l1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org joda time field base date time field r0 <NEXT> $ i1 = r1 get maximum value <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> l2 = @ parameter0 <NEXT> r1 = org joda time field base date time field r0 <NEXT> l0 = r1 round floor l2 <NEXT> $ b1 = l0 cmp l2 <NEXT> if $ b1 == 0 goto label1 <NEXT> r2 = org joda time field base date time field r0 <NEXT> l2 = r2 add l0 1 <NEXT> label return l2 <END>
<BEG> r0 = @ this <NEXT> r1 = org joda time field divide date time field r0 <NEXT> $ i0 = r1 i max <NEXT> return $ i0 <END>
<BEG> r3 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> if r3 ! = null goto label1 <NEXT> return null <NEXT> if r3 ! = null goto label1 <NEXT> label $ z0 = r3 instanceof org joda time field strict date time field <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r2 = org joda time field strict date time field r3 <NEXT> r3 = $ r2 get wrap field <NEXT> label $ z1 = r3 be lenient <NEXT> if $ z1 == 0 goto label3 <NEXT> return r3 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r4 = new org joda time field lenient date time field <NEXT> specialinvoke r4 < init > r3 r0 <NEXT> r5 = org joda time date time field r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> l4 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> l5 = specialinvoke r0 add l4 i0 <NEXT> r1 = org joda time field offset date time field r0 <NEXT> $ i1 = r1 get l5 <NEXT> r2 = org joda time field offset date time field r0 <NEXT> $ i3 = r2 i min <NEXT> r3 = org joda time field offset date time field r0 <NEXT> $ i2 = r3 i max <NEXT> r4 = org joda time date time field r0 <NEXT> org joda time field field utils verify value bound r4 $ i1 $ i3 $ i2 <NEXT> return l5 <END>
<BEG> $ r0 = org joda time format date time format create formatter for style index 3 3 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r3 = org joda time format date time formatter r0 <NEXT> $ r1 = r3 i parser <NEXT> $ r2 = org joda time format internal parser date time parser of $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org joda time date time zone utc <NEXT> r3 = org joda time format date time formatter r0 <NEXT> $ r2 = r3 with zone $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org joda time format date time formatter r0 <NEXT> r2 = specialinvoke r10 require parser <NEXT> r11 = org joda time format date time formatter r0 <NEXT> $ r5 = r11 i chrono <NEXT> r12 = org joda time format date time formatter r0 <NEXT> r3 = specialinvoke r12 select chronology $ r5 <NEXT> r9 = new org joda time format date time parser bucket <NEXT> r13 = org joda time format date time formatter r0 <NEXT> $ r8 = r13 i locale <NEXT> r14 = org joda time format date time formatter r0 <NEXT> $ r7 = r14 i pivot year <NEXT> r15 = org joda time format date time formatter r0 <NEXT> $ i0 = r15 i default year <NEXT> specialinvoke r9 < init > 0l r3 $ r8 $ r7 $ i0 <NEXT> $ l1 = r9 do parse millis r2 r1 <NEXT> return $ l1 <END>
<BEG> $ r0 = org joda time format i s o date time format $ constant access $ 900 <NEXT> return $ r0 <END>
<BEG> $ r0 = org joda time format i s o date time format year month day <NEXT> return $ r0 <END>
<BEG> $ r0 = org joda time format i s o date time format $ constant access $ 1600 <NEXT> return $ r0 <END>
<BEG> $ r0 = org joda time format i s o date time format $ constant access $ 4700 <NEXT> return $ r0 <END>
<BEG> $ r0 = java util locale get default <NEXT> $ r1 = org joda time format period format word base $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org joda time format period formatter r0 <NEXT> specialinvoke r9 check printer <NEXT> r10 = org joda time format period formatter r0 <NEXT> specialinvoke r10 check period r1 <NEXT> r11 = org joda time format period formatter r0 <NEXT> r2 = r11 get printer <NEXT> r8 = new java lang string buffer <NEXT> r12 = org joda time format period formatter r0 <NEXT> $ r5 = r12 i locale <NEXT> $ i0 = r2 calculate print length r1 $ r5 <NEXT> specialinvoke r8 < init > $ i0 <NEXT> r13 = org joda time format period formatter r0 <NEXT> $ r6 = r13 i locale <NEXT> r2 print to r8 r1 $ r6 <NEXT> $ r7 = r8 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r7 = org joda time format period formatter builder r0 <NEXT> $ r2 = r7 i element pair <NEXT> r8 = org joda time format period formatter builder r0 <NEXT> $ z1 = r8 i not printer <NEXT> r9 = org joda time format period formatter builder r0 <NEXT> $ z0 = r9 i not parser <NEXT> r1 = org joda time format period formatter builder to formatter $ r2 $ z1 $ z0 <NEXT> r10 = org joda time format period formatter builder r0 <NEXT> $ r3 = r10 i field formatters <NEXT> $ r4 = $ r3 clone <NEXT> $ r5 = org joda time format period formatter builder $ field formatter [ ] $ r4 <NEXT> $ r6 = org joda time format period formatter builder $ field formatter [ ] $ r5 <NEXT> r11 = org joda time format period formatter builder r0 <NEXT> r11 i field formatters = $ r6 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r6 = org joda time format period formatter builder r0 <NEXT> r6 i min print digit = 1 <NEXT> r7 = org joda time format period formatter builder r0 <NEXT> r7 i print zero set = 2 <NEXT> r8 = org joda time format period formatter builder r0 <NEXT> r8 i max parse digit = 10 <NEXT> r9 = org joda time format period formatter builder r0 <NEXT> r9 i reject sign value = 0 <NEXT> r10 = org joda time format period formatter builder r0 <NEXT> r10 i prefix = null <NEXT> r11 = org joda time format period formatter builder r0 <NEXT> $ r1 = r11 i element pair <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r12 = org joda time format period formatter builder r0 <NEXT> r12 i element pair = r5 <NEXT> goto label2 <NEXT> label r14 = org joda time format period formatter builder r0 <NEXT> r14 i not printer = 0 <NEXT> r15 = org joda time format period formatter builder r0 <NEXT> r15 i not parser = 0 <NEXT> $ r3 = newarray org joda time format period formatter builder $ field formatter [ 10 ] <NEXT> r16 = org joda time format period formatter builder r0 <NEXT> r16 i field formatters = $ r3 <NEXT> return <NEXT> if $ r1 ! = null goto label1 <NEXT> label r13 = org joda time format period formatter builder r0 <NEXT> $ r2 = r13 i element pair <NEXT> $ r2 clear <END>
<BEG> r0 = @ this <NEXT> r1 = org joda time format period formatter builder r0 <NEXT> specialinvoke r1 append field 1 <NEXT> r2 = org joda time format period formatter builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org joda time illegal field value exception r0 <NEXT> $ r1 = r2 i duration field type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = org joda time date time utils get duration millis r1 <NEXT> r5 = org joda time interval r0 <NEXT> $ l3 = r5 to duration millis <NEXT> $ b4 = l0 cmp $ l3 <NEXT> if $ b4 ! = 0 goto label1 <NEXT> r6 = org joda time interval r0 <NEXT> return r6 <NEXT> if $ b4 ! = 0 goto label1 <NEXT> label r7 = org joda time interval r0 <NEXT> r2 = r7 get chronology <NEXT> r8 = org joda time interval r0 <NEXT> l1 = r8 get end millis <NEXT> l2 = r2 add l1 l0 -1 <NEXT> r4 = new org joda time interval <NEXT> specialinvoke r4 < init > l2 l1 r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r2 = org joda time mutable interval r0 <NEXT> $ l1 = r2 get end millis <NEXT> r3 = org joda time mutable interval r0 <NEXT> $ r1 = r3 get chronology <NEXT> specialinvoke r0 set interval l0 $ l1 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = org joda time mutable interval r0 <NEXT> $ l2 = r3 get end millis <NEXT> r4 = org joda time mutable interval r0 <NEXT> r4 set start millis $ l2 <NEXT> goto label2 <NEXT> label return <NEXT> if r1 ! = null goto label1 <NEXT> label r5 = org joda time mutable interval r0 <NEXT> $ r2 = r5 get chronology <NEXT> r6 = org joda time mutable interval r0 <NEXT> $ l0 = r6 get end millis <NEXT> $ l1 = $ r2 add r1 $ l0 -1 <NEXT> r7 = org joda time mutable interval r0 <NEXT> r7 set start millis $ l1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org joda time duration field type week <NEXT> specialinvoke r0 add field $ r1 i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r7 = org joda time partial r0 <NEXT> i1 = r7 index of support r1 <NEXT> if i0 ! = 0 goto label1 <NEXT> r8 = org joda time partial r0 <NEXT> return r8 <NEXT> if i0 ! = 0 goto label1 <NEXT> label r9 = org joda time partial r0 <NEXT> r4 = r9 get value <NEXT> r10 = org joda time partial r0 <NEXT> $ r2 = r10 get field i1 <NEXT> r5 = $ r2 add r0 i1 r4 i0 <NEXT> r6 = new org joda time partial <NEXT> r11 = org joda time partial r0 <NEXT> specialinvoke r6 < init > r11 r5 <NEXT> return r6 <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = new org joda time period <NEXT> $ r1 = newarray int [ 8 ] <NEXT> $ r1 [ 0 ] = 0 <NEXT> $ r1 [ 1 ] = 0 <NEXT> $ r1 [ 2 ] = 0 <NEXT> $ r1 [ 3 ] = i0 <NEXT> $ r1 [ 4 ] = 0 <NEXT> $ r1 [ 5 ] = 0 <NEXT> $ r1 [ 6 ] = 0 <NEXT> $ r1 [ 7 ] = 0 <NEXT> $ r2 = org joda time period type standard <NEXT> specialinvoke $ r0 < init > $ r1 $ r2 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ i1 = neg i0 <NEXT> r2 = org joda time period r0 <NEXT> $ r1 = r2 plus day $ i1 <NEXT> return $ r1 <END>
<BEG> r7 = org joda time period type c time <NEXT> if r7 ! = null goto label1 <NEXT> $ r0 = new org joda time period type <NEXT> $ r1 = newarray org joda time duration field type [ 4 ] <NEXT> $ r2 = org joda time duration field type hour <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> $ r3 = org joda time duration field type minute <NEXT> $ r1 [ 1 ] = $ r3 <NEXT> $ r4 = org joda time duration field type second <NEXT> $ r1 [ 2 ] = $ r4 <NEXT> $ r5 = org joda time duration field type millis <NEXT> $ r1 [ 3 ] = $ r5 <NEXT> $ r6 = newarray int [ 8 ] <NEXT> $ r6 [ 0 ] = -1 <NEXT> $ r6 [ 1 ] = -1 <NEXT> $ r6 [ 2 ] = -1 <NEXT> $ r6 [ 3 ] = -1 <NEXT> $ r6 [ 4 ] = 0 <NEXT> $ r6 [ 5 ] = 1 <NEXT> $ r6 [ 6 ] = 2 <NEXT> $ r6 [ 7 ] = 3 <NEXT> specialinvoke $ r0 < init > \ `` time\ <NEXT> r7 = $ r0 <NEXT> org joda time period type c time = $ r0 <NEXT> label return r7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org joda time tz cache date time zone <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = org joda time tz cache date time zone r0 <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = new org joda time tz cache date time zone <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r3 = org jolokia backend backend manager r0 <NEXT> $ r2 = r3 restrictor <NEXT> $ z1 = $ r2 be origin allow r1 z0 <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = java lang management management factory get platform m bean server <NEXT> org jolokia util jmx util remove m bean registration listener r1 r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org jolokia config config key r0 <NEXT> $ z0 = r1 request config <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org jolokia detector server handle r0 <NEXT> $ r1 = r2 product <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = org jolokia config config key detector_options <NEXT> r3 = r1 get $ r4 <NEXT> label if r3 == null goto label3 <NEXT> r19 = new org json simple parser j s o n parser <NEXT> specialinvoke r19 < init > <NEXT> $ r6 = r19 parse r3 <NEXT> r17 = org json simple j s o n object $ r6 <NEXT> r21 = org jolokia detector server handle r0 <NEXT> $ r7 = r21 get product <NEXT> $ r8 = r17 get $ r7 <NEXT> $ r9 = org json simple j s o n object $ r8 <NEXT> label return $ r9 <NEXT> label if r3 == null goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 size <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` path contains extra element not usable for a list request \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke $ r2 < init > $ r6 <NEXT> throw $ r2 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org jolokia history history limit r0 <NEXT> $ i1 = r1 max entry <NEXT> if $ i1 > i0 goto label1 <NEXT> r2 = org jolokia history history limit r0 <NEXT> $ i2 = r2 max entry <NEXT> if $ i2 ! = 0 goto label2 <NEXT> label r3 = org jolokia history history limit r0 <NEXT> r3 max entry = i0 <NEXT> label r4 = org jolokia history history limit r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ l1 = java lang system current time millis <NEXT> l0 = $ l1 1000l <NEXT> $ r5 = java lang long value of l0 <NEXT> r2 put \ `` timestamp\ <NEXT> r3 = r1 get type <NEXT> r9 = org jolokia history history store r0 <NEXT> $ r7 = r9 history updaters <NEXT> $ r8 = $ r7 get r3 <NEXT> r4 = org jolokia history history store $ history updater $ r8 <NEXT> if r4 == null goto label1 <NEXT> r4 update history r2 r1 l0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org jolokia request jmx request r0 <NEXT> $ r1 = r2 value fault handler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r8 = new org json simple j s o n object <NEXT> specialinvoke r8 < init > <NEXT> r9 = org jolokia request proxy target config r0 <NEXT> $ r3 = r9 url <NEXT> r8 put \ `` url\ <NEXT> r10 = org jolokia request proxy target config r0 <NEXT> $ r5 = r10 env <NEXT> if $ r5 == null goto label1 <NEXT> r11 = org jolokia request proxy target config r0 <NEXT> $ r6 = r11 env <NEXT> r8 put \ `` env\ <NEXT> label return r8 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label6 <NEXT> $ i0 = r0 size <NEXT> if $ i0 < = 0 goto label6 <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r6 = r2 next <NEXT> r3 = java lang string $ r6 <NEXT> if r3 == null goto label2 <NEXT> $ r11 = r3 <NEXT> goto label3 <NEXT> label $ r7 = org jolokia util escape util escape part $ r11 <NEXT> $ r4 append $ r7 <NEXT> $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r4 append \ `` \ `` <NEXT> label goto label1 <NEXT> if r3 == null goto label2 <NEXT> label $ r11 = \ `` * \ `` <NEXT> if $ z0 == 0 goto label5 <NEXT> label $ r5 = $ r4 to string <NEXT> return $ r5 <NEXT> if $ i0 < = 0 goto label6 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = joptsimple argument accept option spec r0 <NEXT> specialinvoke r4 add default value r1 <NEXT> r5 = joptsimple argument accept option spec r0 <NEXT> r5 default to r2 <NEXT> r6 = joptsimple argument accept option spec r0 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 last index of 46 <NEXT> $ i1 = $ i0 + 1 <NEXT> $ r1 = r0 substring $ i1 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org json j s o n tokener <NEXT> specialinvoke $ r2 < init > r1 <NEXT> $ r3 = org json cdl to j s o n array r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = r0 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return null <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r4 = new java lang string buffer <NEXT> specialinvoke $ r4 < init > <NEXT> i2 = 0 <NEXT> label $ i1 = r1 length <NEXT> if i2 > = $ i1 goto label5 <NEXT> r3 = r1 opt j s o n object i2 <NEXT> if r3 == null goto label4 <NEXT> $ r6 = r3 to j s o n array r0 <NEXT> $ r7 = org json cdl row to string $ r6 <NEXT> $ r4 append $ r7 <NEXT> label i2 = i2 + 1 <NEXT> goto label3 <NEXT> if i2 > = $ i1 goto label5 <NEXT> label $ r5 = $ r4 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r3 = org json j s o n stringer r0 <NEXT> $ c0 = r3 mode <NEXT> if $ c0 ! = 100 goto label1 <NEXT> r4 = org json j s o n stringer r0 <NEXT> $ r1 = r4 writer <NEXT> $ r2 = $ r1 to string <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ c0 ! = 100 goto label1 <NEXT> label $ r2 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r16 = new org json j s o n exception <NEXT> specialinvoke r16 < init > \ `` null key \ `` <NEXT> r19 = java lang throwable r16 <NEXT> throw r19 <NEXT> if r1 ! = null goto label1 <NEXT> label r20 = org json j s o n writer r0 <NEXT> $ c0 = r20 mode <NEXT> if $ c0 ! = 107 goto label6 <NEXT> label r21 = org json j s o n writer r0 <NEXT> $ r4 = r21 stack <NEXT> r22 = org json j s o n writer r0 <NEXT> $ i1 = r22 top <NEXT> $ i2 = $ i1 - 1 <NEXT> $ r6 = $ r4 [ $ i2 ] <NEXT> $ r5 = java lang boolean true <NEXT> $ r6 put once r1 $ r5 <NEXT> r23 = org json j s o n writer r0 <NEXT> $ z0 = r23 comma <NEXT> if $ z0 == 0 goto label3 <NEXT> r24 = org json j s o n writer r0 <NEXT> $ r11 = r24 writer <NEXT> $ r11 write 44 <NEXT> label r25 = org json j s o n writer r0 <NEXT> $ r8 = r25 writer <NEXT> $ r9 = org json j s o n object quote r1 <NEXT> $ r8 write $ r9 <NEXT> r26 = org json j s o n writer r0 <NEXT> $ r10 = r26 writer <NEXT> $ r10 write 58 <NEXT> r27 = org json j s o n writer r0 <NEXT> r27 comma = 0 <NEXT> r28 = org json j s o n writer r0 <NEXT> r28 mode = 111 <NEXT> label r29 = org json j s o n writer r0 <NEXT> return r29 <NEXT> if $ c0 ! = 107 goto label6 <NEXT> label r18 = new org json j s o n exception <NEXT> specialinvoke r18 < init > \ `` misplace key \ `` <NEXT> r31 = java lang throwable r18 <NEXT> throw r31 <END>
<BEG> r0 = @ this <NEXT> r2 = org json x m l parser configuration r0 <NEXT> $ r1 = r2 c data tag name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com jayway jsonpath internal filter relational operator eq <NEXT> r4 = com jayway jsonpath criterion r0 <NEXT> r4 criterion type = $ r2 <NEXT> $ r3 = com jayway jsonpath internal filter value node to value node r1 <NEXT> r5 = com jayway jsonpath criterion r0 <NEXT> r5 right = $ r3 <NEXT> r6 = com jayway jsonpath criterion r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof java util map <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = com jayway jsonpath spi json abstract json provider r0 <NEXT> $ z0 = r14 be array r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = java util list r1 <NEXT> $ i2 = $ r10 size <NEXT> return $ i2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r15 = com jayway jsonpath spi json abstract json provider r0 <NEXT> $ z1 = r15 be map r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> r16 = com jayway jsonpath spi json abstract json provider r0 <NEXT> $ r9 = r16 get property key r1 <NEXT> $ i1 = $ r9 size <NEXT> return $ i1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r1 instanceof java lang string <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r8 = java lang string r1 <NEXT> $ i0 = $ r8 length <NEXT> return $ i0 <NEXT> if $ z2 == 0 goto label3 <NEXT> label r13 = new com jayway jsonpath json path exception <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r4 = r12 append \ `` length operation can not be apply to \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 to string <NEXT> if $ r6 == null goto label4 <NEXT> $ r7 = r1 get class <NEXT> $ r11 = $ r7 get name <NEXT> goto label5 <NEXT> label specialinvoke r13 < init > $ r11 <NEXT> r17 = java lang throwable r13 <NEXT> throw r17 <NEXT> if $ r6 == null goto label4 <NEXT> label $ r11 = \ `` null\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io restassured path json json path r0 <NEXT> $ r2 = r5 get r1 <NEXT> $ r3 = io restassured internal common path object converter convert object to $ r2 class \ `` ljava lang boolean \ `` <NEXT> $ r4 = java lang boolean $ r3 <NEXT> $ z0 = $ r4 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io restassured path json json path r0 <NEXT> $ r2 = r5 get r1 <NEXT> $ r3 = io restassured internal common path object converter convert object to $ r2 class \ `` ljava lang character \ `` <NEXT> $ r4 = java lang character $ r3 <NEXT> $ c0 = $ r4 char value <NEXT> return $ c0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = java lang system out <NEXT> r3 = io restassured path json json path r0 <NEXT> $ r2 = specialinvoke r3 to json string <NEXT> $ r1 println $ r2 <NEXT> r4 = io restassured path json json path r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = io restassured path json json path r0 <NEXT> r2 pretty print <NEXT> r3 = io restassured path json json path r0 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new io restassured path json json path <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> io restassured path json json path config = null <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com github fge jsonschema core util regex e c m a262 helper primary_script_engine <NEXT> if $ r1 == null goto label1 <NEXT> $ r4 = newarray java lang object [ 1 ] <NEXT> $ r4 [ 0 ] = r0 <NEXT> $ z1 = com github fge jsonschema core util regex e c m a262 helper invoke script engine \ `` regex be valid\ <NEXT> return $ z1 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r3 = com github fge jsonschema core util regex e c m a262 helper regex_is_valid <NEXT> $ r2 = newarray java lang object [ 1 ] <NEXT> $ r2 [ 0 ] = r0 <NEXT> $ z0 = com github fge jsonschema core util regex e c m a262 helper invoke fallback engine $ r3 $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com github fge jsonschema core util value holder r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> $ r0 = com github fge jsonschema cfg validation configuration new builder <NEXT> $ r1 = $ r0 freeze <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com github fge jsonschema library library r0 <NEXT> $ r1 = r2 digester <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if r0 ! = null goto label1 <NEXT> r1 append \ `` null\ `` <NEXT> return <NEXT> if r0 ! = null goto label1 <NEXT> label $ r3 = net minidev json reader json writer j s o n iterable writer <NEXT> $ r3 write j s o n string r0 r1 r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = net minidev json j s o n value compression <NEXT> $ r2 = net minidev json j s o n array to j s o n string r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = net minidev json j s o n array r0 <NEXT> $ r1 = r2 to j s o n string <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = net minidev json j s o n navi r0 <NEXT> $ r1 = r5 current <NEXT> if $ r1 ! = null goto label1 <NEXT> return null <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = net minidev json j s o n navi r0 <NEXT> $ r2 = r6 current <NEXT> $ z0 = $ r2 instanceof java lang boolean <NEXT> if $ z0 == 0 goto label2 <NEXT> r7 = net minidev json j s o n navi r0 <NEXT> $ r3 = r7 current <NEXT> $ r4 = java lang boolean $ r3 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r10 = net minidev json j s o n navi r0 <NEXT> $ z0 = r10 failure <NEXT> if $ z0 == 0 goto label1 <NEXT> r11 = net minidev json j s o n navi r0 <NEXT> return r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r12 = net minidev json j s o n navi r0 <NEXT> $ r1 = r12 current <NEXT> if $ r1 ! = null goto label2 <NEXT> r13 = net minidev json j s o n navi r0 <NEXT> $ z3 = r13 readonly <NEXT> if $ z3 == 0 goto label2 <NEXT> r14 = net minidev json j s o n navi r0 <NEXT> specialinvoke r14 failure \ `` can not create array child in readonly\ <NEXT> label r15 = net minidev json j s o n navi r0 <NEXT> $ r9 = r15 current <NEXT> if $ r9 == null goto label5 <NEXT> r16 = net minidev json j s o n navi r0 <NEXT> $ z1 = r16 be array <NEXT> if $ z1 == 0 goto label3 <NEXT> r17 = net minidev json j s o n navi r0 <NEXT> return r17 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r18 = net minidev json j s o n navi r0 <NEXT> $ z2 = r18 be object <NEXT> if $ z2 == 0 goto label4 <NEXT> r19 = net minidev json j s o n navi r0 <NEXT> specialinvoke r19 failure \ `` can not use object feature on array \ <NEXT> label r20 = net minidev json j s o n navi r0 <NEXT> specialinvoke r20 failure \ `` can not use current possition a object\ <NEXT> goto label6 <NEXT> label r23 = net minidev json j s o n navi r0 <NEXT> $ r4 = r23 root <NEXT> if $ r4 ! = null goto label7 <NEXT> r24 = net minidev json j s o n navi r0 <NEXT> $ r5 = r24 current <NEXT> r25 = net minidev json j s o n navi r0 <NEXT> r25 root = $ r5 <NEXT> goto label8 <NEXT> label r27 = net minidev json j s o n navi r0 <NEXT> return r27 <NEXT> if $ r4 ! = null goto label7 <NEXT> label r26 = net minidev json j s o n navi r0 <NEXT> specialinvoke r26 store <NEXT> if $ r9 == null goto label5 <NEXT> label r21 = net minidev json j s o n navi r0 <NEXT> $ r2 = r21 mapper <NEXT> $ r3 = $ r2 create array <NEXT> r22 = net minidev json j s o n navi r0 <NEXT> r22 current = $ r3 <END>
<BEG> r0 = @ this <NEXT> r6 = net minidev json j s o n navi r0 <NEXT> $ z0 = r6 failure <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = net minidev json j s o n navi r0 <NEXT> return r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = net minidev json j s o n navi r0 <NEXT> $ r2 = r8 current <NEXT> $ z1 = $ r2 instanceof java util list <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r9 = net minidev json j s o n navi r0 <NEXT> $ r5 = specialinvoke r9 failure \ `` current node be not an array\ <NEXT> return $ r5 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r10 = net minidev json j s o n navi r0 <NEXT> $ r3 = r10 current <NEXT> r1 = java util list $ r3 <NEXT> $ i0 = r1 size <NEXT> r11 = net minidev json j s o n navi r0 <NEXT> $ r4 = r11 at $ i0 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = net minidev json reader json writer r0 <NEXT> r3 register writer interface last r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> goto label2 <NEXT> label if i1 < i0 goto label1 <NEXT> label r3 = r2 [ i1 ] <NEXT> r7 = net minidev json reader json writer r0 <NEXT> $ r5 = r7 data <NEXT> $ r5 put r3 r1 <NEXT> i1 = i1 + 1 <NEXT> label if i1 < i0 goto label1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> if z0 == 0 goto label1 <NEXT> $ r4 = org skyscreamer jsonassert j s o n compare mode strict <NEXT> goto label2 <NEXT> label org skyscreamer jsonassert j s o n assert assert not equal r0 r1 $ r4 <NEXT> return <NEXT> if z0 == 0 goto label1 <NEXT> label $ r4 = org skyscreamer jsonassert j s o n compare mode lenient <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> if z0 == 0 goto label1 <NEXT> $ r4 = org skyscreamer jsonassert j s o n compare mode strict <NEXT> goto label2 <NEXT> label org skyscreamer jsonassert j s o n assert assert not equal r0 r1 $ r4 <NEXT> return <NEXT> if z0 == 0 goto label1 <NEXT> label $ r4 = org skyscreamer jsonassert j s o n compare mode lenient <END>
<BEG> r0 = @ this <NEXT> r2 = org skyscreamer jsonassert j s o n compare result r0 <NEXT> $ r1 = r2 _expected <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org jsoup helper data util read file to byte buffer r0 <NEXT> $ r4 = org jsoup parser parser html parser <NEXT> $ r5 = org jsoup helper data util parse byte data r3 r1 r2 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = new org jsoup helper descendable link list $ descend iterator <NEXT> r3 = org jsoup helper descendable link list r0 <NEXT> $ i0 = r3 size <NEXT> r4 = org jsoup helper descendable link list r0 <NEXT> specialinvoke r2 < init > r4 $ i0 null <NEXT> r5 = java util iterator r2 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 iterator <NEXT> $ r3 = org jsoup helper string util join $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org jsoup helper data util load r0 r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org jsoup helper data util load r0 r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if z0 == 0 goto label1 <NEXT> r3 = new org jsoup node boolean attribute <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org jsoup node attribute r0 <NEXT> r5 = org jsoup node attribute r3 <NEXT> r4 put r5 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r6 = org jsoup node attribute r0 <NEXT> r6 remove r1 <END>
<BEG> r0 = @ parameter0 <NEXT> org jsoup helper validate not null r0 <NEXT> $ r3 = new org jsoup node document <NEXT> specialinvoke $ r3 < init > r0 <NEXT> r2 = $ r3 append element \ `` html\ `` <NEXT> r2 append element \ `` head\ `` <NEXT> r2 append element \ `` body\ `` <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org jsoup node document r0 <NEXT> $ r1 = r2 location <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new org jsoup node element <NEXT> $ r3 = org jsoup parser parse setting preserve case <NEXT> $ r4 = org jsoup parser tag value of r1 $ r3 <NEXT> r7 = org jsoup node document r0 <NEXT> $ r5 = r7 base uri <NEXT> specialinvoke r6 < init > $ r4 $ r5 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org jsoup helper validate not null r1 <NEXT> $ r2 = newarray org jsoup nod node [ 1 ] <NEXT> $ r2 [ 0 ] = r1 <NEXT> r3 = org jsoup node element r0 <NEXT> r3 add child 0 $ r2 <NEXT> r4 = org jsoup node element r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = new org jsoup select evaluator $ index great than <NEXT> specialinvoke r3 < init > i0 <NEXT> r4 = org jsoup select evaluator r3 <NEXT> r5 = org jsoup node element r0 <NEXT> $ r2 = org jsoup select collector collect r4 r5 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = org jsoup node element r0 <NEXT> $ r1 = r4 tag name <NEXT> $ z0 = $ r1 equal \ `` textarea\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org jsoup node element r0 <NEXT> $ r3 = r5 text <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org jsoup node element r0 <NEXT> $ r2 = r6 attr \ `` value\ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org jsoup node element r0 <NEXT> $ r4 = r6 child node <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = org jsoup nod node $ r5 <NEXT> r3 outer html r1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = specialinvoke r0 after r1 <NEXT> $ r3 = org jsoup node element $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = specialinvoke r0 after r1 <NEXT> $ r3 = org jsoup node element $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org jsoup helper validate not null r1 <NEXT> r4 = org jsoup nod node r0 <NEXT> $ r2 = r4 parent node <NEXT> org jsoup helper validate not null $ r2 <NEXT> r5 = org jsoup nod node r0 <NEXT> $ r3 = r5 parent node <NEXT> r6 = org jsoup nod node r0 <NEXT> $ r3 replace child r6 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org jsoup parser tag r0 <NEXT> $ z0 = r1 can contain inline <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r2 = org jsoup parser tag r0 <NEXT> $ z1 = r2 be empty <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org jsoup parser token queue r0 <NEXT> $ z0 = r2 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> $ c1 = 0 <NEXT> goto label2 <NEXT> label return $ c1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r3 = org jsoup parser token queue r0 <NEXT> $ r1 = r3 queue <NEXT> r4 = org jsoup parser token queue r0 <NEXT> $ i0 = r4 po <NEXT> $ c1 = $ r1 char at $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 to string <NEXT> r3 = org jsoup parser token queue r0 <NEXT> r3 add first $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org jsoup parser token queue r0 <NEXT> $ z0 = r1 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r2 = org jsoup parser token queue r0 <NEXT> $ i0 = r2 po <NEXT> $ i1 = $ i0 + 1 <NEXT> r3 = org jsoup parser token queue r0 <NEXT> r3 po = $ i1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org jsoup parser token queue r0 <NEXT> $ r3 = r6 queue <NEXT> r7 = org jsoup parser token queue r0 <NEXT> $ i1 = r7 po <NEXT> i0 = $ r3 index of r1 $ i1 <NEXT> if i0 == -1 goto label1 <NEXT> r8 = org jsoup parser token queue r0 <NEXT> $ r5 = r8 queue <NEXT> r9 = org jsoup parser token queue r0 <NEXT> $ i2 = r9 po <NEXT> r2 = $ r5 substring $ i2 i0 <NEXT> r10 = org jsoup parser token queue r0 <NEXT> $ i3 = r10 po <NEXT> $ i4 = r2 length <NEXT> $ i5 = $ i3 + $ i4 <NEXT> r11 = org jsoup parser token queue r0 <NEXT> r11 po = $ i5 <NEXT> return r2 <NEXT> if i0 == -1 goto label1 <NEXT> label r12 = org jsoup parser token queue r0 <NEXT> $ r4 = r12 remainder <NEXT> return $ r4 <END>
<BEG> $ r0 = new org jsoup safety whitelist <NEXT> specialinvoke $ r0 < init > <NEXT> $ r1 = newarray java lang string [ 24 ] <NEXT> $ r1 [ 0 ] = \ `` a\ `` <NEXT> $ r1 [ 1 ] = \ `` b\ `` <NEXT> $ r1 [ 2 ] = \ `` blockquote\ `` <NEXT> $ r1 [ 3 ] = \ `` br\ `` <NEXT> $ r1 [ 4 ] = \ `` cite\ `` <NEXT> $ r1 [ 5 ] = \ `` code\ `` <NEXT> $ r1 [ 6 ] = \ `` dd\ `` <NEXT> $ r1 [ 7 ] = \ `` dl\ `` <NEXT> $ r1 [ 8 ] = \ `` dt\ `` <NEXT> $ r1 [ 9 ] = \ `` em\ `` <NEXT> $ r1 [ 10 ] = \ `` i\ `` <NEXT> $ r1 [ 11 ] = \ `` li\ `` <NEXT> $ r1 [ 12 ] = \ `` ol\ `` <NEXT> $ r1 [ 13 ] = \ `` p\ `` <NEXT> $ r1 [ 14 ] = \ `` pre\ `` <NEXT> $ r1 [ 15 ] = \ `` q\ `` <NEXT> $ r1 [ 16 ] = \ `` small\ `` <NEXT> $ r1 [ 17 ] = \ `` span\ `` <NEXT> $ r1 [ 18 ] = \ `` strike\ `` <NEXT> $ r1 [ 19 ] = \ `` strong\ `` <NEXT> $ r1 [ 20 ] = \ `` sub\ `` <NEXT> $ r1 [ 21 ] = \ `` sup\ `` <NEXT> $ r1 [ 22 ] = \ `` u\ `` <NEXT> $ r1 [ 23 ] = \ `` ul\ `` <NEXT> $ r2 = $ r0 add tags $ r1 <NEXT> $ r3 = newarray java lang string [ 1 ] <NEXT> $ r3 [ 0 ] = \ `` href\ `` <NEXT> $ r4 = $ r2 add attribute \ `` a\ <NEXT> $ r5 = newarray java lang string [ 1 ] <NEXT> $ r5 [ 0 ] = \ `` cite\ `` <NEXT> $ r6 = $ r4 add attribute \ `` blockquote\ <NEXT> $ r7 = newarray java lang string [ 1 ] <NEXT> $ r7 [ 0 ] = \ `` cite\ `` <NEXT> $ r8 = $ r6 add attribute \ `` q\ <NEXT> $ r9 = newarray java lang string [ 4 ] <NEXT> $ r9 [ 0 ] = \ `` ftp\ `` <NEXT> $ r9 [ 1 ] = \ `` http\ `` <NEXT> $ r9 [ 2 ] = \ `` https\ `` <NEXT> $ r9 [ 3 ] = \ `` mailto\ `` <NEXT> $ r10 = $ r8 add protocols \ `` a\ <NEXT> $ r11 = newarray java lang string [ 2 ] <NEXT> $ r11 [ 0 ] = \ `` http\ `` <NEXT> $ r11 [ 1 ] = \ `` https\ `` <NEXT> $ r12 = $ r10 add protocols \ `` blockquote\ <NEXT> $ r13 = newarray java lang string [ 2 ] <NEXT> $ r13 [ 0 ] = \ `` http\ `` <NEXT> $ r13 [ 1 ] = \ `` https\ `` <NEXT> $ r14 = $ r12 add protocols \ `` cite\ <NEXT> $ r15 = $ r14 add enforce attribute \ `` a\ <NEXT> return $ r15 <END>
<BEG> r0 = @ this <NEXT> r4 = org jsoup select element r0 <NEXT> r1 = r4 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r3 = r1 next <NEXT> r2 = org jsoup node element $ r3 <NEXT> r2 remove <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r5 = org jsoup select element r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org jsoup select element r0 <NEXT> $ r1 = specialinvoke r2 sibling null 0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = r1 <NEXT> i1 = 0 <NEXT> label if r6 == null goto label5 <NEXT> r7 = org jsoup select node traversor r0 <NEXT> $ r2 = r7 visitor <NEXT> $ r2 head r6 i1 <NEXT> $ i0 = r6 child node size <NEXT> if $ i0 < = 0 goto label2 <NEXT> r6 = r6 child node 0 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label $ r3 = r6 next sibling <NEXT> if $ r3 ! = null goto label3 <NEXT> if i1 < = 0 goto label3 <NEXT> r8 = org jsoup select node traversor r0 <NEXT> $ r5 = r8 visitor <NEXT> $ r5 tail r6 i1 <NEXT> r6 = r6 parent node <NEXT> i1 = i1 + -1 <NEXT> goto label2 <NEXT> if i1 < = 0 goto label3 <NEXT> label r9 = org jsoup select node traversor r0 <NEXT> $ r4 = r9 visitor <NEXT> $ r4 tail r6 i1 <NEXT> if r6 ! = r1 goto label4 <NEXT> goto label5 <NEXT> label return <NEXT> if r6 ! = r1 goto label4 <NEXT> label r6 = r6 next sibling <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org jsoup helper validate not empty r0 <NEXT> org jsoup helper validate not null r1 <NEXT> r2 = org jsoup select query parser parse r0 <NEXT> $ r10 = new java util array list <NEXT> specialinvoke $ r10 < init > <NEXT> $ r11 = new java util identity hash map <NEXT> specialinvoke $ r11 < init > <NEXT> r5 = r1 iterator <NEXT> label $ z0 = r5 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r13 = r5 next <NEXT> r6 = org jsoup node element $ r13 <NEXT> r7 = org jsoup select selector select r2 r6 <NEXT> r8 = r7 iterator <NEXT> label $ z1 = r8 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r14 = r8 next <NEXT> r9 = org jsoup node element $ r14 <NEXT> $ z2 = $ r11 contain key r9 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> $ r10 add r9 <NEXT> $ r15 = java lang boolean true <NEXT> $ r11 put r9 $ r15 <NEXT> label goto label2 <NEXT> if $ z1 == 0 goto label4 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label5 <NEXT> label $ r12 = new org jsoup select element <NEXT> specialinvoke $ r12 < init > $ r10 <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = java util array a list r0 <NEXT> $ r3 = org jsoup internal string util join $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org jsoup nodes comment r0 <NEXT> r1 = r2 get data <NEXT> $ i0 = r1 length <NEXT> if $ i0 < = 1 goto label2 <NEXT> $ z0 = r1 start with \ `` ! \ `` <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = r1 start with \ `` ? \ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r4 = org jsoup nod node r0 <NEXT> $ r2 = r4 attribute <NEXT> r1 = $ r2 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> r1 next <NEXT> r1 remove <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r5 = org jsoup nod node r0 <NEXT> return r5 <END>
<BEG> r0 = org slf4j bridge s l f4 j bridge handler get root logger <NEXT> r1 = r0 get handler <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> $ r2 = r1 [ i1 ] <NEXT> r0 remove handler $ r2 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label return <END>
<BEG> junit framework assert fail null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r4 = @ parameter0 <NEXT> $ i0 = junit runner base test runner fg max message length <NEXT> if $ i0 == -1 goto label1 <NEXT> $ i1 = r4 length <NEXT> $ i2 = junit runner base test runner fg max message length <NEXT> if $ i1 < = $ i2 goto label1 <NEXT> $ r0 = new java lang string buffer <NEXT> $ i3 = junit runner base test runner fg max message length <NEXT> $ r1 = r4 substring 0 $ i3 <NEXT> $ r2 = java lang string value of $ r1 <NEXT> specialinvoke $ r0 < init > $ r2 <NEXT> $ r3 = $ r0 append \ `` \ `` <NEXT> r4 = $ r3 to string <NEXT> label return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new junit textui test runner <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 do run r0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new junit framework test result <NEXT> specialinvoke $ r1 < init > <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = junit framework test suite r0 <NEXT> $ r1 = r3 f test <NEXT> $ r2 = $ r1 element <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label org junit assert assert true r0 $ z0 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org junit comparison failure r0 <NEXT> $ r1 = r2 f expect <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ r1 = java text number format get instance <NEXT> $ d0 = double l0 <NEXT> $ d1 = $ d0 1000 0 <NEXT> $ r2 = $ r1 format $ d1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org junit runner description <NEXT> $ r3 = newarray java lang object [ 2 ] <NEXT> $ r3 [ 0 ] = r1 <NEXT> $ r4 = r0 get name <NEXT> $ r3 [ 1 ] = $ r4 <NEXT> $ r5 = java lang string format \ `` % s % s \ <NEXT> specialinvoke $ r2 < init > $ r5 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org junit runner request class \ `` all\ <NEXT> r4 = org junit runner j unit core r0 <NEXT> $ r3 = r4 run $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org junit runner request class \ `` all\ <NEXT> r4 = org junit runner j unit core r0 <NEXT> $ r3 = r4 run $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org junit runner notification run notifier r0 <NEXT> $ r2 = r3 f listener <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java io file <NEXT> specialinvoke $ r1 < init > r0 <NEXT> $ r2 = org junit experimental max max core store locally $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org junit experimental result printable result r0 <NEXT> $ r1 = r3 result <NEXT> $ r2 = $ r1 get failure <NEXT> $ i0 = $ r2 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org junit rule temporary folder r0 <NEXT> $ r1 = r3 get root <NEXT> r4 = org junit rule temporary folder r0 <NEXT> $ r2 = specialinvoke r4 create temporary folder in $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new org junit rule test watcher $ 1 <NEXT> r5 = org junit rule test watcher r0 <NEXT> specialinvoke r4 < init > r5 r2 r1 <NEXT> r6 = org junit runner model statement r4 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org junit runner j unit core default computer <NEXT> $ r2 = org junit runner request class $ r1 r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org junit runner model initialization error r0 <NEXT> $ r1 = r2 f error <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = new org junit comparison failure $ comparison compactor <NEXT> r7 = org junit comparison failure r0 <NEXT> $ r3 = r7 f expect <NEXT> r8 = org junit comparison failure r0 <NEXT> $ r2 = r8 f actual <NEXT> specialinvoke r6 < init > 20 $ r3 $ r2 <NEXT> $ r4 = specialinvoke r0 get message <NEXT> $ r5 = r6 compact $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org junit internal matcher throwable cause matcher <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org hamcrest matcher r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org hamcrest core matcher contain string r1 <NEXT> r3 = org junit rule expect exception r0 <NEXT> r3 expect message $ r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new org junit runner j unit command line parse result <NEXT> specialinvoke $ r2 < init > <NEXT> specialinvoke $ r2 parse args r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = org junit runner model test class r0 <NEXT> $ r2 = r4 method for annotation <NEXT> r5 = org junit runner model test class r0 <NEXT> r1 = specialinvoke r5 collect value $ r2 <NEXT> $ r3 = org junit runner model test class method_comparator <NEXT> r6 = java util comparator $ r3 <NEXT> java util collection sort r1 r6 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = org junit validator annotation validator factory validators_for_annotation_types <NEXT> $ r5 = $ r4 get r1 <NEXT> r2 = org junit validator annotation validator $ r5 <NEXT> if r2 == null goto label1 <NEXT> return r2 <NEXT> if r2 == null goto label1 <NEXT> label r3 = r1 value <NEXT> if r3 ! = null goto label2 <NEXT> $ r12 = new java lang illegal argument exception <NEXT> $ r13 = new java lang string builder <NEXT> specialinvoke $ r13 < init > <NEXT> $ r14 = $ r13 append \ `` can\'t create validator value be null in annotation \ `` <NEXT> $ r15 = r1 get class <NEXT> $ r16 = $ r15 get name <NEXT> $ r17 = $ r14 append $ r16 <NEXT> $ r18 = $ r17 to string <NEXT> specialinvoke $ r12 < init > $ r18 <NEXT> throw $ r12 <NEXT> if r3 ! = null goto label2 <NEXT> label $ r6 = r3 new instance <NEXT> r26 = org junit validator annotation validator $ r6 <NEXT> $ r7 = org junit validator annotation validator factory validators_for_annotation_types <NEXT> $ r7 put if absent r1 r26 <NEXT> $ r9 = org junit validator annotation validator factory validators_for_annotation_types <NEXT> $ r10 = $ r9 get r1 <NEXT> $ r11 = org junit validator annotation validator $ r10 <NEXT> label return $ r11 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r4 = new org hamcrest core describe a <NEXT> specialinvoke r4 < init > r0 r1 r2 <NEXT> r5 = org hamcrest matcher r4 <NEXT> return r5 <END>
<BEG> r1 = new org hamcrest core be null <NEXT> specialinvoke r1 < init > <NEXT> r2 = org hamcrest matcher r1 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org junit internal matcher combinable matcher <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org junit rule temporary folder r0 <NEXT> $ r1 = r2 folder <NEXT> r3 = org junit rule temporary folder r0 <NEXT> specialinvoke r3 recursive delete $ r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org junit jupiter api extension condition evaluation result <NEXT> specialinvoke $ r1 < init > 0 r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org junit platform common util precondition not null r1 \ `` type must not be null\ `` <NEXT> if r0 ! = null goto label3 <NEXT> $ z2 = r1 be primitive <NEXT> if $ z2 ! = 0 goto label1 <NEXT> $ z3 = 1 <NEXT> goto label2 <NEXT> label return $ z3 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label $ z3 = 0 <NEXT> if r0 ! = null goto label3 <NEXT> label $ z0 = r1 be instance r0 <NEXT> if $ z0 == 0 goto label4 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ z1 = r1 be primitive <NEXT> if $ z1 == 0 goto label7 <NEXT> $ r3 = org junit platform common util reflection utils primitive to wrapper map <NEXT> $ r4 = $ r3 get r1 <NEXT> $ r5 = r0 get class <NEXT> if $ r4 ! = $ r5 goto label5 <NEXT> $ z4 = 1 <NEXT> goto label6 <NEXT> label return $ z4 <NEXT> if $ r4 ! = $ r5 goto label5 <NEXT> label $ z4 = 0 <NEXT> if $ z1 == 0 goto label7 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org junit platform common util reflection utils primitive to wrapper map <NEXT> $ r2 = $ r1 get r0 <NEXT> $ r3 = java lang class $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r11 = com google i18n phonenumbers a you type formatter r0 <NEXT> r11 current output = \ `` \ `` <NEXT> r12 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r1 = r12 accrue input <NEXT> $ r1 set length 0 <NEXT> r13 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r2 = r13 accrue input without format <NEXT> $ r2 set length 0 <NEXT> r14 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r3 = r14 format template <NEXT> $ r3 set length 0 <NEXT> r15 = com google i18n phonenumbers a you type formatter r0 <NEXT> r15 last match position = 0 <NEXT> r16 = com google i18n phonenumbers a you type formatter r0 <NEXT> r16 current formatting pattern = \ `` \ `` <NEXT> r17 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r4 = r17 prefix before national number <NEXT> $ r4 set length 0 <NEXT> r18 = com google i18n phonenumbers a you type formatter r0 <NEXT> r18 extract national prefix = \ `` \ `` <NEXT> r19 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r5 = r19 national number <NEXT> $ r5 set length 0 <NEXT> r20 = com google i18n phonenumbers a you type formatter r0 <NEXT> r20 able to format = 1 <NEXT> r21 = com google i18n phonenumbers a you type formatter r0 <NEXT> r21 input have format = 0 <NEXT> r22 = com google i18n phonenumbers a you type formatter r0 <NEXT> r22 position to remember = 0 <NEXT> r23 = com google i18n phonenumbers a you type formatter r0 <NEXT> r23 original position = 0 <NEXT> r24 = com google i18n phonenumbers a you type formatter r0 <NEXT> r24 be complete number = 0 <NEXT> r25 = com google i18n phonenumbers a you type formatter r0 <NEXT> r25 be expect country call code = 0 <NEXT> r26 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r6 = r26 possible format <NEXT> $ r6 clear <NEXT> r27 = com google i18n phonenumbers a you type formatter r0 <NEXT> r27 should add space after national prefix = 0 <NEXT> r28 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r8 = r28 current metadata <NEXT> r29 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r7 = r29 default metadata <NEXT> $ z0 = $ r8 equal $ r7 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r30 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r9 = r30 default country <NEXT> r31 = com google i18n phonenumbers a you type formatter r0 <NEXT> $ r10 = specialinvoke r31 get metadata for region $ r9 <NEXT> r32 = com google i18n phonenumbers a you type formatter r0 <NEXT> r32 current metadata = $ r10 <NEXT> label return <END>
<BEG> r1 = new com google i18n phonenumbers internal regex base matcher <NEXT> specialinvoke r1 < init > <NEXT> r2 = com google i18n phonenumbers internal matcher api r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com google i18n phonenumbers phone number match r0 <NEXT> $ r1 = r2 raw string <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache log4j console appender r0 <NEXT> r1 follow = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log4j lf5 log level r0 <NEXT> $ r1 = r2 _label <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new org apache log4j lf5 viewer log broker monitor <NEXT> $ r3 = org apache log4j lf5 log level get log4 j level <NEXT> specialinvoke $ r2 < init > $ r3 <NEXT> $ i0 = org apache log4j lf5 l f5 appender get default monitor width <NEXT> $ i1 = org apache log4j lf5 l f5 appender get default monitor height <NEXT> $ r2 set frame size $ i0 $ i1 <NEXT> $ r2 set font size 12 <NEXT> $ r2 show <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache log4j lf5 util log file parser r0 <NEXT> r5 _monitor = r1 <NEXT> r4 = new java lang thread <NEXT> specialinvoke r4 < init > r0 <NEXT> r4 start <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r5 = @ parameter4 <NEXT> r9 = new org apache log4j lf5 util adapter log record <NEXT> specialinvoke r9 < init > <NEXT> r9 set category r1 <NEXT> r9 set message r3 <NEXT> r9 set n d c r5 <NEXT> r9 set thrown r4 <NEXT> if r2 ! = null goto label1 <NEXT> r10 = org apache log4j lf5 util log monitor adapter r0 <NEXT> $ r8 = r10 get default level <NEXT> r9 set level $ r8 <NEXT> goto label2 <NEXT> label r11 = org apache log4j lf5 util log monitor adapter r0 <NEXT> r12 = org apache log4j lf5 log record r9 <NEXT> r11 add message r12 <NEXT> return <NEXT> if r2 ! = null goto label1 <NEXT> label r9 set level r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log4j lf5 util resource r0 <NEXT> $ r1 = r2 _name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log4j lf5 util resource r0 <NEXT> $ r1 = org apache log4j lf5 util resource utils get resource a u r l r0 r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i1 = 0 <NEXT> r8 = org apache log4j lf5 viewer categoryexplorer category node editor r0 <NEXT> $ r4 = r8 _category model <NEXT> r1 = $ r4 get root category node <NEXT> r2 = r1 depth first enumeration <NEXT> label $ z0 = r2 have more element <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next element <NEXT> r3 = org apache log4j lf5 viewer categoryexplorer category node $ r5 <NEXT> $ z1 = r3 be leaf <NEXT> if $ z1 == 0 goto label2 <NEXT> $ i0 = r3 get number of contained record <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ r6 = r3 get parent <NEXT> if $ r6 == null goto label2 <NEXT> r9 = org apache log4j lf5 viewer categoryexplorer category node editor r0 <NEXT> $ r7 = r9 _category model <NEXT> r10 = javax swing tree mutable tree node r3 <NEXT> $ r7 remove node from parent r10 <NEXT> i1 = i1 + 1 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r5 = org apache log4j lf5 viewer configure m r u file manager r0 <NEXT> $ r1 = r5 _mru file list <NEXT> $ i1 = $ r1 size <NEXT> if i0 > = $ i1 goto label2 <NEXT> i4 = 0 <NEXT> label r6 = org apache log4j lf5 viewer configure m r u file manager r0 <NEXT> $ r2 = r6 _mru file list <NEXT> $ i2 = $ r2 size <NEXT> $ i3 = $ i2 - i0 <NEXT> if i4 > = $ i3 goto label2 <NEXT> r7 = org apache log4j lf5 viewer configure m r u file manager r0 <NEXT> $ r3 = r7 _mru file list <NEXT> $ r3 remove last <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i3 goto label2 <NEXT> label r8 = org apache log4j lf5 viewer configure m r u file manager r0 <NEXT> r8 _max size = i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org apache log4j lf5 viewer l f5 swing utils $ 1 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = java lang runnable r2 <NEXT> javax swing swing utility invoke later r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = 0 <NEXT> label r14 = new org apache log4j lf5 util log file parser <NEXT> specialinvoke r14 < init > r1 <NEXT> r17 = org apache log4j lf5 viewer log broker monitor r0 <NEXT> r14 parse r17 <NEXT> z0 = 1 <NEXT> label goto label4 <NEXT> label return z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org apache log4j logger r0 <NEXT> $ r3 = r8 repository <NEXT> $ z0 = $ r3 be disabled 5000 <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r4 = org apache log4j level trace <NEXT> r9 = org apache log4j logger r0 <NEXT> $ r5 = r9 get effective level <NEXT> r10 = org apache log4j priority $ r5 <NEXT> $ z1 = $ r4 be great or equal r10 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r7 = org apache log4j logger fqcn <NEXT> $ r6 = org apache log4j level trace <NEXT> r11 = org apache log4j logger r0 <NEXT> r12 = org apache log4j priority $ r6 <NEXT> r11 force log $ r7 r12 r1 r2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org apache log4j level fatal <NEXT> r6 = org apache log4j priority $ r3 <NEXT> $ z0 = r0 be enable for r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = org apache log4j level fatal <NEXT> $ r5 = org apache log4j log m f format r1 r2 <NEXT> org apache log4j log m f force log r0 $ r4 $ r5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache log4j net s m t p appender r0 <NEXT> r2 cc = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log4j net s m t p appender r0 <NEXT> $ r1 = r2 smtp protocol <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache log4j net socket appender r0 <NEXT> $ z0 = r6 advertise via multicast d n s <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = new org apache log4j net zero conf support <NEXT> r7 = org apache log4j net socket appender r0 <NEXT> $ i1 = r7 port <NEXT> r8 = org apache log4j net socket appender r0 <NEXT> $ r3 = r8 get name <NEXT> specialinvoke r5 < init > \ `` _log4j_obj_tcpconnect_appender local \ <NEXT> r9 = org apache log4j net socket appender r0 <NEXT> r9 zero conf = r5 <NEXT> r10 = org apache log4j net socket appender r0 <NEXT> $ r4 = r10 zero conf <NEXT> $ r4 advertise <NEXT> label r11 = org apache log4j net socket appender r0 <NEXT> $ r1 = r11 address <NEXT> r12 = org apache log4j net socket appender r0 <NEXT> $ i0 = r12 port <NEXT> r13 = org apache log4j net socket appender r0 <NEXT> r13 connect $ r1 $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache log4j net socket appender r0 <NEXT> r2 application = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ l0 = r1 get time <NEXT> r5 = org apache log4j pattern cache date format r0 <NEXT> r5 format $ l0 r2 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache log4j pattern format info r0 <NEXT> $ z0 = r1 leave align <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache log4j pattern log event r0 <NEXT> $ r1 = r3 get property <NEXT> $ r2 = $ r1 key set <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org apache log4j pattern relative time pattern converter <NEXT> specialinvoke $ r1 < init > <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache log log4j internal default log builder r0 <NEXT> r2 in use = 1 <NEXT> r3 = org apache log log4j internal default log builder r0 <NEXT> r3 level = r1 <NEXT> r4 = org apache log log4j internal default log builder r0 <NEXT> r4 marker = null <NEXT> r5 = org apache log log4j internal default log builder r0 <NEXT> r5 throwable = null <NEXT> r6 = org apache log log4j internal default log builder r0 <NEXT> r6 location = null <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> label $ r3 = org apache log log4j log manager factory <NEXT> $ r2 = org apache log log4j log manager fqcn <NEXT> $ r4 = $ r3 get context $ r2 r0 null z0 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r16 = null <NEXT> if r1 ! = null goto label01 <NEXT> return null <NEXT> if r1 ! = null goto label01 <NEXT> label if r2 == null goto label02 <NEXT> r16 = java util resource bundle get bundle r1 r2 <NEXT> goto label03 <NEXT> label goto label05 <NEXT> label r18 = r1 <NEXT> label if r16 ! = null goto label11 <NEXT> $ i1 = r18 last index of 46 <NEXT> if $ i1 < = 0 goto label11 <NEXT> r18 = r18 substring 0 $ i1 <NEXT> label if r2 == null goto label08 <NEXT> r16 = java util resource bundle get bundle r18 r2 <NEXT> goto label09 <NEXT> label goto label06 <NEXT> label if r2 == null goto label08 <NEXT> label r16 = java util resource bundle get bundle r18 <NEXT> if $ i1 < = 0 goto label11 <NEXT> label return r16 <NEXT> label if r2 == null goto label02 <NEXT> label r16 = java util resource bundle get bundle r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j message parameterized message r0 <NEXT> $ r1 = r2 throwable <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j message structure data message r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache log log4j level info <NEXT> r3 = org apache log log4j spi abstract logger r0 <NEXT> $ r2 = r3 at level $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache log log4j spi mutable thread context stack r0 <NEXT> r1 freeze = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j status status console listener r0 <NEXT> $ r1 = r2 level <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if r1 ! = null goto label1 <NEXT> $ r5 = r2 <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r3 = java util locale english <NEXT> $ r4 = r1 to upper case $ r3 <NEXT> $ r5 = java lang enum value of r0 $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label r1 = r0 get <NEXT> $ z0 = r1 instanceof org apache log log4j message message <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r2 = org apache log log4j message message r1 <NEXT> $ r3 = $ r2 get format message <NEXT> goto label3 <NEXT> label return $ r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r3 = r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r5 = org apache log log4j util property util r0 <NEXT> r2 = r5 get string property r1 <NEXT> if r2 == null goto label4 <NEXT> label $ i1 = java lang integer parse int r2 <NEXT> label return $ i1 <NEXT> if r2 == null goto label4 <NEXT> label return i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r5 = new java util property <NEXT> specialinvoke $ r5 < init > <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return $ r5 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ i1 = r1 length <NEXT> $ i2 = $ i1 - 1 <NEXT> $ c3 = r1 char at $ i2 <NEXT> if $ c3 == 46 goto label3 <NEXT> $ r14 = new java lang string builder <NEXT> specialinvoke $ r14 < init > <NEXT> $ r15 = $ r14 append r1 <NEXT> $ r16 = $ r15 append 46 <NEXT> $ r17 = $ r16 to string <NEXT> goto label4 <NEXT> label r3 = $ r17 <NEXT> $ r6 = new java util array list <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = r0 string property name <NEXT> r18 = $ r7 iterator <NEXT> label $ z3 = r18 have next <NEXT> if $ z3 == 0 goto label7 <NEXT> $ r10 = r18 next <NEXT> r19 = java lang string $ r10 <NEXT> $ z1 = r19 start with r3 <NEXT> if $ z1 == 0 goto label6 <NEXT> $ i4 = r3 length <NEXT> $ r11 = r19 substring $ i4 <NEXT> $ r12 = r0 get property r19 <NEXT> $ r5 set property $ r11 $ r12 <NEXT> $ r6 add r19 <NEXT> label goto label5 <NEXT> if $ z3 == 0 goto label7 <NEXT> label r20 = $ r6 iterator <NEXT> label $ z0 = r20 have next <NEXT> if $ z0 == 0 goto label9 <NEXT> $ r8 = r20 next <NEXT> r21 = java lang string $ r8 <NEXT> r0 remove r21 <NEXT> goto label8 <NEXT> if $ z0 == 0 goto label9 <NEXT> label return $ r5 <NEXT> if $ c3 == 46 goto label3 <NEXT> label $ r17 = r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ z0 = r0 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i2 = 0 <NEXT> label $ i1 = r0 length <NEXT> if i2 > = $ i1 goto label5 <NEXT> c0 = r0 char at i2 <NEXT> $ z1 = java lang character be whitespace c0 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> return 0 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> label i2 = i2 + 1 <NEXT> goto label3 <NEXT> if i2 > = $ i1 goto label5 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core appender abstract appender r0 <NEXT> $ r1 = r2 handler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core appender abstract appender r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache log log4j core appender abstract output stream appender r0 <NEXT> $ z0 = r1 immediate flush <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache log log4j core appender async appender r0 <NEXT> $ r2 = r6 appender ref <NEXT> $ i0 = lengthof $ r2 <NEXT> r1 = newarray java lang string [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r7 = org apache log log4j core appender async appender r0 <NEXT> $ r3 = r7 appender ref <NEXT> $ r4 = $ r3 [ i2 ] <NEXT> $ r5 = $ r4 get ref <NEXT> r1 [ i2 ] = $ r5 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = lengthof r1 <NEXT> r2 = org apache log log4j core appender output stream manager r0 <NEXT> r2 write r1 0 $ i0 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r2 = org apache log log4j core appender output stream manager r0 <NEXT> r2 write byte r1 i0 i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> label r13 = org apache log log4j core appender output stream manager r0 <NEXT> $ r3 = r13 get output stream <NEXT> $ r3 write r1 i0 i1 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> $ r0 = new org apache log log4j core appender random access file appender $ builder <NEXT> specialinvoke $ r0 < init > <NEXT> $ r1 = $ r0 a builder <NEXT> $ r2 = org apache log log4j core appender random access file appender $ builder $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r8 = org apache log log4j core appender roll action composite action r0 <NEXT> $ z0 = r8 stop on error <NEXT> if $ z0 == 0 goto label04 <NEXT> r9 = org apache log log4j core appender roll action composite action r0 <NEXT> r4 = r9 action <NEXT> i0 = lengthof r4 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label03 <NEXT> r5 = r4 [ i1 ] <NEXT> $ z2 = r5 execute <NEXT> if $ z2 ! = 0 goto label02 <NEXT> return 0 <NEXT> if $ z2 ! = 0 goto label02 <NEXT> label i1 = i1 + 1 <NEXT> goto label01 <NEXT> label if i1 > = i0 goto label03 <NEXT> label return 1 <NEXT> if $ z0 == 0 goto label04 <NEXT> label z3 = 1 <NEXT> r6 = null <NEXT> r10 = org apache log log4j core appender roll action composite action r0 <NEXT> r7 = r10 action <NEXT> i2 = lengthof r7 <NEXT> i3 = 0 <NEXT> label if i3 > = i2 goto label10 <NEXT> r1 = r7 [ i3 ] <NEXT> label $ z1 = r1 execute <NEXT> z3 = z3 & $ z1 <NEXT> label goto label09 <NEXT> label i3 = i3 + 1 <NEXT> goto label05 <NEXT> label if i3 > = i2 goto label10 <NEXT> label if r6 == null goto label11 <NEXT> throw r6 <NEXT> label if r6 == null goto label11 <NEXT> label return z3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core appender roll action file rename action r0 <NEXT> $ r1 = r2 destination <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r22 = new javax script simple binding <NEXT> specialinvoke r22 < init > <NEXT> r22 put \ `` base path\ <NEXT> r22 put \ `` path list\ <NEXT> r23 = org apache log log4j core appender roll action script condition r0 <NEXT> $ r8 = r23 configuration <NEXT> $ r9 = $ r8 get property <NEXT> r22 put all $ r9 <NEXT> r24 = org apache log log4j core appender roll action script condition r0 <NEXT> $ r10 = r24 configuration <NEXT> r22 put \ `` configuration\ <NEXT> r25 = org apache log log4j core appender roll action script condition r0 <NEXT> $ r12 = r25 configuration <NEXT> $ r13 = $ r12 get str substitutor <NEXT> r22 put \ `` substitutor\ <NEXT> $ r15 = org apache log log4j core appender roll action script condition logger <NEXT> r22 put \ `` status logger\ <NEXT> r26 = org apache log log4j core appender roll action script condition r0 <NEXT> $ r17 = r26 configuration <NEXT> $ r18 = $ r17 get script manager <NEXT> r27 = org apache log log4j core appender roll action script condition r0 <NEXT> $ r19 = r27 script <NEXT> $ r20 = $ r19 get name <NEXT> r4 = $ r18 execute $ r20 r22 <NEXT> $ r21 = java util list r4 <NEXT> return $ r21 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> $ r0 = new org apache log log4j core appender roll file appender $ builder <NEXT> specialinvoke $ r0 < init > <NEXT> $ r1 = $ r0 a builder <NEXT> $ r2 = org apache log log4j core appender roll file appender $ builder $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core appender rout route r0 <NEXT> $ r1 = r2 route <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache log log4j core async async logger r0 <NEXT> $ r4 = r6 private config <NEXT> r2 = $ r4 logger config <NEXT> r3 = r2 get property list <NEXT> if r3 == null goto label1 <NEXT> r7 = org apache log log4j core async async logger r0 <NEXT> specialinvoke r7 on property present r1 r3 <NEXT> label $ r5 = r2 get reliability strategy <NEXT> r8 = org apache log log4j util supplier r0 <NEXT> r9 = org apache log log4j core log event r1 <NEXT> $ r5 log r8 r9 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache log log4j core config abstract configuration r0 <NEXT> $ r2 = r3 listener <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core config abstract configuration r0 <NEXT> $ r1 = r2 root <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache log log4j core config abstract configuration r0 <NEXT> $ r2 = r4 logger configs <NEXT> $ r2 remove r1 <NEXT> r5 = org apache log log4j core config abstract configuration r0 <NEXT> specialinvoke r5 set parent <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core config custom level config r0 <NEXT> $ r1 = r2 level name <NEXT> return $ r1 <END>
<BEG> r5 = org apache log log4j core config plugins convert type converter registry instance <NEXT> if r5 ! = null goto label6 <NEXT> $ r2 = org apache log log4j core config plugins convert type converter registry instance_lock <NEXT> entermonitor $ r2 <NEXT> label r5 = org apache log log4j core config plugins convert type converter registry instance <NEXT> if r5 ! = null goto label2 <NEXT> $ r3 = new org apache log log4j core config plugins convert type converter registry <NEXT> specialinvoke $ r3 < init > <NEXT> r5 = $ r3 <NEXT> org apache log log4j core config plugins convert type converter registry instance = $ r3 <NEXT> label exitmonitor $ r2 <NEXT> label goto label6 <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core config plugins util resolver util r0 <NEXT> $ r1 = r2 resource match <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r2 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = org apache log log4j core config plugins visitor abstract plugin visitor r0 <NEXT> $ r6 = r9 conversion type <NEXT> $ r5 = java lang string r2 <NEXT> $ r7 = org apache log log4j util string trim to null $ r5 <NEXT> $ r8 = org apache log log4j core config plugins convert type converter convert r1 $ r6 $ r7 <NEXT> return $ r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r10 = org apache log log4j core config plugins visitor abstract plugin visitor r0 <NEXT> $ r3 = r10 conversion type <NEXT> $ r4 = org apache log log4j core config plugins convert type converter convert r1 $ r3 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org apache log log4j core filter abstract filterable r0 <NEXT> $ z0 = r2 stop l0 r1 1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache log log4j core impl log4j log event r0 <NEXT> $ r1 = r7 source <NEXT> if $ r1 == null goto label1 <NEXT> r8 = org apache log log4j core impl log4j log event r0 <NEXT> $ r6 = r8 source <NEXT> return $ r6 <NEXT> if $ r1 == null goto label1 <NEXT> label r9 = org apache log log4j core impl log4j log event r0 <NEXT> $ r2 = r9 logger fqcn <NEXT> if $ r2 == null goto label2 <NEXT> r10 = org apache log log4j core impl log4j log event r0 <NEXT> $ z0 = r10 include location <NEXT> if $ z0 ! = 0 goto label3 <NEXT> label return null <NEXT> if $ z0 ! = 0 goto label3 <NEXT> label r11 = org apache log log4j core impl log4j log event r0 <NEXT> $ r3 = r11 logger fqcn <NEXT> $ r4 = org apache log log4j util stack locator util calc location $ r3 <NEXT> r12 = org apache log log4j core impl log4j log event r0 <NEXT> r12 source = $ r4 <NEXT> r13 = org apache log log4j core impl log4j log event r0 <NEXT> $ r5 = r13 source <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org apache log log4j core log event r1 <NEXT> r4 = org apache log log4j core layout abstract layout r0 <NEXT> r4 encode $ r3 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache log log4j core logger r0 <NEXT> $ r3 = r10 get level <NEXT> if r1 ! = $ r3 goto label1 <NEXT> return <NEXT> if r1 ! = $ r3 goto label1 <NEXT> label if r1 == null goto label2 <NEXT> r5 = r1 <NEXT> goto label5 <NEXT> label r9 = new org apache log log4j core logger $ private config <NEXT> r13 = org apache log log4j core logger r0 <NEXT> $ r8 = r13 private config <NEXT> r14 = org apache log log4j core logger r0 <NEXT> specialinvoke r9 < init > r14 $ r8 r5 <NEXT> r15 = org apache log log4j core logger r0 <NEXT> r15 private config = r9 <NEXT> label if r1 == null goto label2 <NEXT> label r11 = org apache log log4j core logger r0 <NEXT> r2 = r11 get parent <NEXT> if r2 == null goto label3 <NEXT> $ r6 = r2 get level <NEXT> goto label4 <NEXT> label r5 = $ r6 <NEXT> if r2 == null goto label3 <NEXT> label r12 = org apache log log4j core logger r0 <NEXT> $ r4 = r12 private config <NEXT> $ r6 = org apache log log4j core logger $ private config access $ 000 $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache log log4j core logger context r0 <NEXT> r2 config location = r1 <NEXT> r3 = org apache log log4j core logger context r0 <NEXT> specialinvoke r3 reconfigure r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core logger context r0 <NEXT> $ r1 = r2 configuration <NEXT> r3 = org apache log log4j core logger context r0 <NEXT> r3 update logger $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> $ r4 = r1 get message <NEXT> $ z0 = $ r4 instanceof org apache log log4j message structure data message <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label return null <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r5 = r1 get message <NEXT> r3 = org apache log log4j message structure data message $ r5 <NEXT> $ z1 = r2 equal ignore case \ `` id\ `` <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r8 = r3 get id <NEXT> $ r9 = $ r8 get name <NEXT> return $ r9 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z2 = r2 equal ignore case \ `` type\ `` <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r7 = r3 get type <NEXT> return $ r7 <NEXT> if $ z2 == 0 goto label4 <NEXT> label $ r6 = r3 get r2 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache log log4j core net multicast dns advertiser jm d n s <NEXT> if $ r2 == null goto label5 <NEXT> label $ r5 = org apache log log4j core net multicast dns advertiser jm d n s class <NEXT> $ r3 = newarray java lang class [ 1 ] <NEXT> $ r4 = org apache log log4j core net multicast dns advertiser service info class <NEXT> $ r3 [ 0 ] = $ r4 <NEXT> r13 = $ r5 get method \ `` unregister service\ <NEXT> $ r7 = org apache log log4j core net multicast dns advertiser jm d n s <NEXT> $ r6 = newarray java lang object [ 1 ] <NEXT> $ r6 [ 0 ] = r1 <NEXT> r13 invoke $ r7 $ r6 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache log log4j core net ssl store configuration r0 <NEXT> r1 location = null <NEXT> r2 = org apache log log4j core net ssl store configuration r0 <NEXT> r2 password provider = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core pattern process id pattern converter r0 <NEXT> $ r1 = r2 pid <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache log log4j core tool picocli command line r0 <NEXT> $ r1 = r2 unmatched argument <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org apache log log4j core tool picocli command line to command line r0 <NEXT> r2 parse r1 <NEXT> return r0 <END>
<BEG> $ l5 = java lang system current time millis <NEXT> $ l6 = $ l5 * 10000l <NEXT> $ l7 = $ l6 + 122192928000000000l <NEXT> $ r0 = org apache log log4j core util uuid util count <NEXT> $ i8 = $ r0 increment and get <NEXT> $ i9 = $ i8 % 10000 <NEXT> $ l10 = long $ i9 <NEXT> l0 = $ l7 + $ l10 <NEXT> $ l11 = l0 & 4294967295l <NEXT> l1 = $ l11 < < 32 <NEXT> $ l12 = l0 & 281470681743360l <NEXT> l2 = $ l12 > > 16 <NEXT> $ l13 = l0 & 1152640029630136320l <NEXT> l3 = $ l13 > > 48 <NEXT> $ l14 = l1 | l2 <NEXT> $ l15 = $ l14 | 4096l <NEXT> l4 = $ l15 | l3 <NEXT> $ r1 = new java util uuid <NEXT> $ l16 = org apache log log4j core util uuid util least <NEXT> specialinvoke $ r1 < init > l4 $ l16 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r4 = null <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if r1 ! = null goto label1 <NEXT> label r5 = org apache log log4j core lookup property lookup r0 <NEXT> $ r2 = r5 property <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java lang string $ r3 <END>
<BEG> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback classic net j m s queue appender r0 <NEXT> r2 queue bind name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = ch qos logback classic net j m s queue appender r0 <NEXT> $ r1 = r2 queue bind name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = ch qos logback classic selector context j n d i selector thread local <NEXT> $ r2 set r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback classic sift context base discriminator r0 <NEXT> r2 default value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback classic sift m d c base discriminator r0 <NEXT> r2 default value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label r9 = ch qos logback classic util logback m d c adapter r0 <NEXT> $ r5 = r9 copy on inherit thread local <NEXT> $ r6 = $ r5 get <NEXT> r2 = java util map $ r6 <NEXT> if r2 ! = null goto label2 <NEXT> label r10 = ch qos logback classic util logback m d c adapter r0 <NEXT> r3 = specialinvoke r10 get and set last operation 1 <NEXT> r11 = ch qos logback classic util logback m d c adapter r0 <NEXT> $ z0 = specialinvoke r11 be last op read or null r3 <NEXT> if $ z0 == 0 goto label3 <NEXT> r12 = ch qos logback classic util logback m d c adapter r0 <NEXT> r4 = specialinvoke r12 duplicate and insert new map r2 <NEXT> r4 remove r1 <NEXT> goto label4 <NEXT> label return <NEXT> if $ z0 == 0 goto label3 <NEXT> label r2 remove r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = ch qos logback classic util logback m d c adapter r0 <NEXT> r2 = r5 get property map <NEXT> if r2 == null goto label1 <NEXT> if r1 == null goto label1 <NEXT> $ r3 = r2 get r1 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <NEXT> if r1 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r8 = ch qos logback classic util logback m d c adapter r0 <NEXT> $ r2 = r8 last operation <NEXT> $ r3 = java lang integer value of 2 <NEXT> $ r2 set $ r3 <NEXT> r9 = ch qos logback classic util logback m d c adapter r0 <NEXT> $ r4 = r9 copy on inherit thread local <NEXT> $ r5 = $ r4 get <NEXT> r1 = java util map $ r5 <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = new java util hash map <NEXT> specialinvoke r7 < init > r1 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = ch qos logback classic net server server socket receiver r0 <NEXT> $ i0 = r1 backlog <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r5 = ch qos logback classic net server s s l server socket receiver r0 <NEXT> $ r1 = r5 ssl <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new ch qos logback core net ssl s s l configuration <NEXT> specialinvoke r4 < init > <NEXT> r6 = ch qos logback classic net server s s l server socket receiver r0 <NEXT> r6 ssl = r4 <NEXT> label r7 = ch qos logback classic net server s s l server socket receiver r0 <NEXT> $ r2 = r7 ssl <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback classic net syslog appender r0 <NEXT> r2 stack trace pattern = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = ch qos logback classic spi log event r0 <NEXT> $ l0 = r1 time stamp <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = ch qos logback core db driver manager connection source r0 <NEXT> $ r1 = r2 driver class <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback core html h t m l layout base r0 <NEXT> r2 pattern = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r32 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> $ z0 = r32 in error <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r33 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> $ r4 = r33 evaluator <NEXT> $ z1 = $ r4 instanceof ch qos logback core spi life cycle <NEXT> if $ z1 == 0 goto label2 <NEXT> r34 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> $ r13 = r34 evaluator <NEXT> r35 = ch qos logback core spi life cycle $ r13 <NEXT> r35 start <NEXT> r30 = new java lang string builder <NEXT> specialinvoke r30 < init > <NEXT> $ r15 = r30 append \ `` start evaluator name [ \ `` <NEXT> r36 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> $ r16 = r36 evaluator <NEXT> $ r17 = $ r16 get name <NEXT> $ r18 = $ r15 append $ r17 <NEXT> $ r19 = $ r18 append \ `` ] \ `` <NEXT> $ r20 = $ r19 to string <NEXT> r37 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> r37 add info $ r20 <NEXT> label r3 = r1 peek object <NEXT> r38 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> $ r5 = r38 evaluator <NEXT> if r3 == $ r5 goto label3 <NEXT> r39 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> r39 add warn \ `` the object on the top the of the stack be not the evaluator push early \ `` <NEXT> goto label8 <NEXT> label return <NEXT> if r3 == $ r5 goto label3 <NEXT> label r1 pop object <NEXT> label r40 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> $ r7 = r40 context <NEXT> $ r8 = $ r7 get object \ `` evaluator_map\ `` <NEXT> r28 = java util map $ r8 <NEXT> if r28 ! = null goto label5 <NEXT> r41 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> r41 add error \ `` could not find evaluator map\ `` <NEXT> goto label6 <NEXT> label goto label8 <NEXT> if r28 ! = null goto label5 <NEXT> label r42 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> $ r9 = r42 evaluator <NEXT> $ r10 = $ r9 get name <NEXT> r43 = ch qos logback core joran action abstract event evaluator action r0 <NEXT> $ r11 = r43 evaluator <NEXT> r28 put $ r10 $ r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r16 = ch qos logback core joran action appender action r0 <NEXT> $ z0 = r16 in error <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r17 = ch qos logback core joran action appender action r0 <NEXT> $ r4 = r17 appender <NEXT> $ z1 = $ r4 instanceof ch qos logback core spi life cycle <NEXT> if $ z1 == 0 goto label2 <NEXT> r18 = ch qos logback core joran action appender action r0 <NEXT> $ r14 = r18 appender <NEXT> r19 = ch qos logback core spi life cycle $ r14 <NEXT> r19 start <NEXT> label r3 = r1 peek object <NEXT> r20 = ch qos logback core joran action appender action r0 <NEXT> $ r5 = r20 appender <NEXT> if r3 == $ r5 goto label3 <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r8 = r15 append \ `` the object at the of the stack be not the appender name [ \ `` <NEXT> r21 = ch qos logback core joran action appender action r0 <NEXT> $ r9 = r21 appender <NEXT> $ r10 = $ r9 get name <NEXT> $ r11 = $ r8 append $ r10 <NEXT> $ r12 = $ r11 append \ `` ] push earlier \ `` <NEXT> $ r13 = $ r12 to string <NEXT> r22 = ch qos logback core joran action appender action r0 <NEXT> r22 add warn $ r13 <NEXT> goto label4 <NEXT> label return <NEXT> if r3 == $ r5 goto label3 <NEXT> label r1 pop object <END>
<BEG> r0 = @ this <NEXT> r24 = ch qos logback core net s m t p appender base r0 <NEXT> $ z0 = r24 start <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r21 = new java lang string builder <NEXT> specialinvoke r21 < init > <NEXT> $ r17 = r21 append \ `` attempt to append to a non-started appender \ `` <NEXT> r25 = ch qos logback core net s m t p appender base r0 <NEXT> $ r18 = r25 get name <NEXT> $ r19 = $ r17 append $ r18 <NEXT> $ r20 = $ r19 to string <NEXT> r26 = ch qos logback core net s m t p appender base r0 <NEXT> r26 add error $ r20 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r27 = ch qos logback core net s m t p appender base r0 <NEXT> $ r1 = r27 mime msg <NEXT> if $ r1 ! = null goto label2 <NEXT> r28 = ch qos logback core net s m t p appender base r0 <NEXT> r28 add error \ `` message object not configure \ `` <NEXT> if $ r1 ! = null goto label2 <NEXT> label r29 = ch qos logback core net s m t p appender base r0 <NEXT> $ r2 = r29 event evaluator <NEXT> if $ r2 ! = null goto label3 <NEXT> r22 = new java lang string builder <NEXT> specialinvoke r22 < init > <NEXT> $ r11 = r22 append \ `` no event evaluator be set for appender [ \ `` <NEXT> r30 = ch qos logback core net s m t p appender base r0 <NEXT> $ r12 = r30 name <NEXT> $ r13 = $ r11 append $ r12 <NEXT> $ r14 = $ r13 append \ `` ] \ `` <NEXT> $ r15 = $ r14 to string <NEXT> r31 = ch qos logback core net s m t p appender base r0 <NEXT> r31 add error $ r15 <NEXT> if $ r2 ! = null goto label3 <NEXT> label r32 = ch qos logback core net s m t p appender base r0 <NEXT> $ r3 = r32 layout <NEXT> if $ r3 ! = null goto label4 <NEXT> r23 = new java lang string builder <NEXT> specialinvoke r23 < init > <NEXT> $ r5 = r23 append \ `` no layout set for appender name [ \ `` <NEXT> r33 = ch qos logback core net s m t p appender base r0 <NEXT> $ r6 = r33 name <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` ] for more information please visit http logback qos ch code html #smtp_no_layout\ `` <NEXT> $ r9 = $ r8 to string <NEXT> r34 = ch qos logback core net s m t p appender base r0 <NEXT> r34 add error $ r9 <NEXT> if $ r3 ! = null goto label4 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = ch qos logback core net s m t p appender base r0 <NEXT> $ r1 = r2 smtp host <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = ch qos logback core net socket appender base r0 <NEXT> r1 port = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> c0 = @ parameter2 <NEXT> i1 = @ parameter3 <NEXT> specialinvoke r0 escape \ `` % \ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = ch qos logback core roll rolling policy base r0 <NEXT> $ r1 = r6 file name pattern str <NEXT> $ z0 = $ r1 end with \ `` gz\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = ch qos logback core roll rolling policy base r0 <NEXT> r7 add info \ `` will use gz compression\ `` <NEXT> $ r5 = ch qos logback core roll helper compression mode gz <NEXT> r8 = ch qos logback core roll rolling policy base r0 <NEXT> r8 compression mode = $ r5 <NEXT> goto label3 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r9 = ch qos logback core roll rolling policy base r0 <NEXT> $ r2 = r9 file name pattern str <NEXT> $ z1 = $ r2 end with \ `` zip\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> r10 = ch qos logback core roll rolling policy base r0 <NEXT> r10 add info \ `` will use zip compression\ `` <NEXT> $ r4 = ch qos logback core roll helper compression mode zip <NEXT> r11 = ch qos logback core roll rolling policy base r0 <NEXT> r11 compression mode = $ r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r12 = ch qos logback core roll rolling policy base r0 <NEXT> r12 add info \ `` no compression will be used\ `` <NEXT> $ r3 = ch qos logback core roll helper compression mode none <NEXT> r13 = ch qos logback core roll rolling policy base r0 <NEXT> r13 compression mode = $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label r12 = null <NEXT> r13 = ch qos logback core spi appender attachable impl r0 <NEXT> $ r5 = r13 r <NEXT> $ r5 lock <NEXT> label r14 = ch qos logback core spi appender attachable impl r0 <NEXT> $ r6 = r14 appender list <NEXT> r2 = $ r6 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r8 = r2 next <NEXT> r3 = ch qos logback core appender $ r8 <NEXT> $ r9 = r3 get name <NEXT> $ z1 = r1 equal $ r9 <NEXT> if $ z1 == 0 goto label4 <NEXT> r12 = r3 <NEXT> goto label5 <NEXT> label r15 = ch qos logback core spi appender attachable impl r0 <NEXT> $ r7 = r15 r <NEXT> $ r7 unlock <NEXT> goto label8 <NEXT> label return r12 <NEXT> if $ z1 == 0 goto label4 <NEXT> label goto label3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r5 = new java util array list <NEXT> specialinvoke $ r5 < init > <NEXT> r3 = r1 get resource r0 <NEXT> label $ z0 = r3 have more element <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r3 next element <NEXT> r4 = java net url $ r6 <NEXT> $ r5 add r4 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = ch qos logback core util loader has_get_class_loader_permission <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r4 = new ch qos logback core util loader $ 2 <NEXT> specialinvoke r4 < init > r0 <NEXT> r5 = java security privilege action r4 <NEXT> $ r2 = java security access controller do privilege r5 <NEXT> $ r3 = java lang class loader $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get class loader <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = java lang class loader get system class loader <NEXT> return $ r2 <NEXT> if r1 ! = null goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r11 = new java lang illegal argument exception <NEXT> specialinvoke $ r11 < init > \ `` context argument can not be null\ `` <NEXT> throw $ r11 <NEXT> if r0 ! = null goto label1 <NEXT> label r1 = r0 get status manager <NEXT> if r1 ! = null goto label2 <NEXT> $ r5 = ch qos logback core util status printer ps <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r6 = $ r4 append \ `` warn context name \\\ `` \ `` <NEXT> $ r7 = r0 get name <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 append \ `` \\\ `` have no status manager\ `` <NEXT> $ r10 = $ r9 to string <NEXT> $ r5 println $ r10 <NEXT> goto label3 <NEXT> label return <NEXT> if r1 ! = null goto label2 <NEXT> label $ r3 = new ch qos logback core status status checker <NEXT> specialinvoke $ r3 < init > r0 <NEXT> $ i0 = $ r3 get high level 0l <NEXT> if $ i0 ! = 2 goto label3 <NEXT> ch qos logback core util status printer print r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = ch qos logback core basic status manager r0 <NEXT> $ r4 = r9 status listener list lock <NEXT> entermonitor $ r4 <NEXT> label $ z1 = r1 instanceof ch qos logback core status on console status listener <NEXT> if $ z1 == 0 goto label3 <NEXT> r10 = ch qos logback core basic status manager r0 <NEXT> $ r6 = r10 status listener list <NEXT> $ r7 = r1 get class <NEXT> r11 = ch qos logback core basic status manager r0 <NEXT> z0 = specialinvoke r11 check for presence $ r6 $ r7 <NEXT> if z0 == 0 goto label3 <NEXT> exitmonitor $ r4 <NEXT> label return 0 <NEXT> if z0 == 0 goto label3 <NEXT> label r12 = ch qos logback core basic status manager r0 <NEXT> $ r5 = r12 status listener list <NEXT> $ r5 add r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback core net s m t p appender base r0 <NEXT> r2 localhost = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback core net ssl key manager factory factory bean r0 <NEXT> r2 algorithm = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback core net ssl key manager factory factory bean r0 <NEXT> r2 provider = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback core net ssl s s l parameter configuration r0 <NEXT> r2 include protocol = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback core net ssl s s l parameter configuration r0 <NEXT> r2 need client auth = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = ch qos logback core net ssl s s l parameter configuration r0 <NEXT> $ r1 = r2 want client auth <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = ch qos logback core html h t m l layout base r0 <NEXT> r2 title = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = ch qos logback core joran util bean bean description cache r0 <NEXT> $ r3 = r10 class to bean description <NEXT> $ z0 = $ r3 contain key r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r11 = ch qos logback core joran util bean bean description cache r0 <NEXT> $ r7 = specialinvoke r11 get bean description factory <NEXT> r2 = $ r7 create r1 <NEXT> r12 = ch qos logback core joran util bean bean description cache r0 <NEXT> $ r8 = r12 class to bean description <NEXT> $ r8 put r1 r2 <NEXT> label r13 = ch qos logback core joran util bean bean description cache r0 <NEXT> $ r4 = r13 class to bean description <NEXT> $ r5 = $ r4 get r1 <NEXT> $ r6 = ch qos logback core joran util bean bean description $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = ch qos logback core net s m t p appender base r0 <NEXT> r1 asynchronous send = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = ch qos logback core spi context aware base r0 <NEXT> $ r1 = r2 declare origin <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = ch qos logback core util c o w array list r0 <NEXT> specialinvoke r2 refresh copy if necessary <NEXT> r3 = ch qos logback core util c o w array list r0 <NEXT> $ r1 = r3 our copy <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ r1 = r0 trim <NEXT> $ i0 = $ r1 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ b1 = r0 [ i0 ] <NEXT> $ s6 = $ b1 & 255 <NEXT> $ i2 = i0 + 1 <NEXT> $ b3 = r0 [ $ i2 ] <NEXT> $ s4 = $ b3 & 255 <NEXT> $ i5 = $ s4 < < 8 <NEXT> $ i11 = $ s6 | $ i5 <NEXT> $ i7 = i0 + 2 <NEXT> $ b8 = r0 [ $ i7 ] <NEXT> $ s9 = $ b8 & 255 <NEXT> $ i10 = $ s9 < < 16 <NEXT> $ i15 = $ i11 | $ i10 <NEXT> $ i12 = i0 + 3 <NEXT> $ b13 = r0 [ $ i12 ] <NEXT> $ i14 = $ b13 < < 24 <NEXT> $ i16 = $ i15 | $ i14 <NEXT> return $ i16 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = net jpountz lz4 l z4 decompressor with length get decompress length r1 i0 <NEXT> r4 = net jpountz lz4 l z4 decompressor with length r0 <NEXT> $ r2 = r4 decompressor <NEXT> $ i2 = i0 + 4 <NEXT> $ r3 = $ r2 decompress r1 $ i2 i1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = net jpountz lz4 l z4 frame input stream r0 <NEXT> $ z0 = r1 read single frame <NEXT> if $ z0 == 0 goto label3 <NEXT> r2 = net jpountz lz4 l z4 frame input stream r0 <NEXT> $ l0 = r2 expect content size <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 < 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ b1 < 0 goto label1 <NEXT> label $ z1 = 0 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven artifact repository authentication r0 <NEXT> $ r1 = r2 private key <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven repository proxy r0 <NEXT> $ r1 = r2 user name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven artifact resolver artifact resolution request r0 <NEXT> $ r1 = r2 collection filter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven execution build failure r0 <NEXT> $ r1 = r2 cause <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven extension internal core export r0 <NEXT> $ r1 = r2 artifact <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven project maven project r0 <NEXT> $ r1 = r2 parent <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r16 = org apache maven project maven project r0 <NEXT> $ r3 = r16 artifact <NEXT> if $ r3 ! = null goto label5 <NEXT> r17 = org apache maven project maven project r0 <NEXT> $ r4 = r17 artifact filter <NEXT> if $ r4 == null goto label1 <NEXT> r18 = org apache maven project maven project r0 <NEXT> $ r6 = r18 resolve artifact <NEXT> if $ r6 ! = null goto label2 <NEXT> label r14 = new java util link hash set <NEXT> specialinvoke r14 < init > <NEXT> r19 = org apache maven project maven project r0 <NEXT> r19 artifact = r14 <NEXT> goto label5 <NEXT> label r25 = org apache maven project maven project r0 <NEXT> $ r13 = r25 artifact <NEXT> return $ r13 <NEXT> if $ r6 ! = null goto label2 <NEXT> label r15 = new java util link hash set <NEXT> r20 = org apache maven project maven project r0 <NEXT> $ r8 = r20 resolve artifact <NEXT> $ i0 = $ r8 size <NEXT> $ i1 = $ i0 * 2 <NEXT> specialinvoke r15 < init > $ i1 <NEXT> r21 = org apache maven project maven project r0 <NEXT> r21 artifact = r15 <NEXT> r22 = org apache maven project maven project r0 <NEXT> $ r9 = r22 resolve artifact <NEXT> r1 = $ r9 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r10 = r1 next <NEXT> r2 = org apache maven artifact artifact $ r10 <NEXT> r23 = org apache maven project maven project r0 <NEXT> $ r11 = r23 artifact filter <NEXT> $ z1 = $ r11 include r2 <NEXT> if $ z1 == 0 goto label4 <NEXT> r24 = org apache maven project maven project r0 <NEXT> $ r12 = r24 artifact <NEXT> $ r12 add r2 <NEXT> label goto label3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven cli internal extension model core extension r0 <NEXT> $ r1 = r2 artifact id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven share invoker default invocation request r0 <NEXT> $ r1 = r2 property <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven share invoker maven command line builder r0 <NEXT> r2 logger = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model activation r0 <NEXT> $ r1 = r2 file <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model activation r0 <NEXT> r2 o = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model activation file r0 <NEXT> $ r1 = r2 exist <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model build base r0 <NEXT> r2 default goal = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model build base r0 <NEXT> r2 directory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model contributor r0 <NEXT> $ r1 = r2 timezone <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model dependency r0 <NEXT> r2 system path = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model distribution management r0 <NEXT> $ r1 = r2 relocation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model distribution management r0 <NEXT> $ r1 = r2 snapshot repository <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model distribution management r0 <NEXT> r2 relocation = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model distribution management r0 <NEXT> r2 status = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache maven model input location r0 <NEXT> $ i0 = r1 column number <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model issue management r0 <NEXT> r2 system = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model license r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model license r0 <NEXT> r2 distribution = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model license r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model model r0 <NEXT> $ r1 = r2 issue management <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model model r0 <NEXT> r2 ci management = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model model r0 <NEXT> r2 issue management = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model model r0 <NEXT> r2 mailing list = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model model r0 <NEXT> r2 version = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model model base r0 <NEXT> $ r1 = r2 report <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model model base r0 <NEXT> r2 module = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model organization r0 <NEXT> r2 url = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model parent r0 <NEXT> r2 relative path = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model plugin r0 <NEXT> $ r1 = r2 extension <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model plugin r0 <NEXT> $ r1 = r2 group id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model prerequisite r0 <NEXT> $ r1 = r2 maven <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model profile r0 <NEXT> r2 id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model relocation r0 <NEXT> $ r1 = r2 version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model relocation r0 <NEXT> r2 group id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model report r0 <NEXT> $ r1 = r2 exclude default <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model report r0 <NEXT> r2 output directory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model report set r0 <NEXT> $ r1 = r2 id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model repository policy r0 <NEXT> $ r1 = r2 checksum policy <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = java lang string value of z0 <NEXT> r2 = org apache maven model repository policy r0 <NEXT> r2 enable = $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model build model data r0 <NEXT> $ r1 = r2 active profile <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache maven model build result error null r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model profile default profile activation context r0 <NEXT> r2 project directory = r1 <NEXT> r3 = org apache maven model profile default profile activation context r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven plugin descriptor plugin descriptor r0 <NEXT> $ r1 = r2 artifact <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven artifact repository metadata plugin r0 <NEXT> r2 prefix = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven artifact repository metadata versioning r0 <NEXT> r2 snapshot version = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = java util collection empty list <NEXT> r3 = org eclipse aether collection collect request r0 <NEXT> r3 manage dependency = $ r2 <NEXT> goto label2 <NEXT> label r5 = org eclipse aether collection collect request r0 <NEXT> return r5 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org eclipse aether collection collect request r0 <NEXT> r4 manage dependency = r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse aether deployment deploy request r0 <NEXT> r2 repository = r1 <NEXT> r3 = org eclipse aether deployment deploy request r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = java util collection empty list <NEXT> r3 = org eclipse aether deployment deploy result r0 <NEXT> r3 metadata = $ r2 <NEXT> goto label2 <NEXT> label r5 = org eclipse aether deployment deploy result r0 <NEXT> return r5 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org eclipse aether deployment deploy result r0 <NEXT> r4 metadata = r1 <END>
<BEG> r0 = @ this <NEXT> $ r2 = java lang boolean true <NEXT> r3 = org eclipse aether graph dependency r0 <NEXT> $ r1 = r3 optional <NEXT> $ z0 = $ r2 equal $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = java util collection empty list <NEXT> r3 = org eclipse aether installation install request r0 <NEXT> r3 metadata = $ r2 <NEXT> goto label2 <NEXT> label r5 = org eclipse aether installation install request r0 <NEXT> return r5 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org eclipse aether installation install request r0 <NEXT> r4 metadata = r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org eclipse aether repository authentication context r0 <NEXT> $ r2 = r4 get r1 null class \ `` ljava lang string \ `` <NEXT> $ r3 = java lang string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = org eclipse aether repository local artifact registration r0 <NEXT> r3 context = r1 <NEXT> goto label2 <NEXT> label r5 = org eclipse aether repository local artifact registration r0 <NEXT> return r5 <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = java util collection empty list <NEXT> r4 = org eclipse aether repository local artifact registration r0 <NEXT> r4 context = $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether repository local artifact request r0 <NEXT> $ r1 = r2 artifact <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = org eclipse aether repository local metadata registration r0 <NEXT> r3 context = r1 <NEXT> goto label2 <NEXT> label r5 = org eclipse aether repository local metadata registration r0 <NEXT> return r5 <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = java util collection empty list <NEXT> r4 = org eclipse aether repository local metadata registration r0 <NEXT> r4 context = $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether repository event r0 <NEXT> $ r1 = r2 artifact <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether resolution artifact descriptor policy request r0 <NEXT> $ r1 = r2 artifact <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether resolution artifact descriptor result r0 <NEXT> $ r1 = r2 relocation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse aether resolution artifact request r0 <NEXT> r5 node = r1 <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 get dependency <NEXT> $ r3 = $ r2 get artifact <NEXT> r6 = org eclipse aether resolution artifact request r0 <NEXT> r6 set artifact $ r3 <NEXT> label r7 = org eclipse aether resolution artifact request r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether resolution artifact result r0 <NEXT> $ r1 = r2 repository <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse aether resolution dependency request r0 <NEXT> r2 collect request = r1 <NEXT> r3 = org eclipse aether resolution dependency request r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether resolution metadata request r0 <NEXT> $ r1 = r2 repository <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse aether resolution metadata result r0 <NEXT> r2 exception = r1 <NEXT> r3 = org eclipse aether resolution metadata result r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse aether resolution version range result r0 <NEXT> $ r1 = r5 version <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org eclipse aether resolution version range result r0 <NEXT> $ r2 = r6 version <NEXT> $ r3 = $ r2 get 0 <NEXT> $ r4 = org eclipse aether version version $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether resolution version range result r0 <NEXT> $ r1 = r2 version constraint <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse aether resolution version request r0 <NEXT> r2 artifact = r1 <NEXT> r3 = org eclipse aether resolution version request r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether resolution version result r0 <NEXT> $ r1 = r2 exception <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether resolution version result r0 <NEXT> $ r1 = r2 repository <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse aether transfer transfer event r0 <NEXT> $ r1 = r3 data buffer <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org eclipse aether transfer transfer event r0 <NEXT> $ r2 = r4 data buffer <NEXT> $ i0 = $ r2 remain <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ i0 = 0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org eclipse aether transfer transfer resource r0 <NEXT> r1 content length = l0 <NEXT> r2 = org eclipse aether transfer transfer resource r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether transfer transfer resource r0 <NEXT> $ r1 = r2 trace <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org eclipse aether impl default service locator r0 <NEXT> $ r3 = specialinvoke r4 get entry r1 1 <NEXT> $ r3 set service r2 <NEXT> r5 = org eclipse aether impl default service locator r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether impl update check r0 <NEXT> $ r1 = r2 item <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether spi connector artifact transfer r0 <NEXT> $ r1 = r2 artifact <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set exception r1 <NEXT> r3 = org eclipse aether spi connector artifact download r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse aether spi connector metadata transfer r0 <NEXT> $ r1 = r2 metadata <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse aether spi connector transport put task r0 <NEXT> r3 data file = r1 <NEXT> $ r2 = org eclipse aether spi connector transport put task empty <NEXT> r4 = org eclipse aether spi connector transport put task r0 <NEXT> r4 data bytes = $ r2 <NEXT> r5 = org eclipse aether spi connector transport put task r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 add r1 <NEXT> r3 = org eclipse aether util artifact default artifact type registry r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r12 = new java util array list <NEXT> r13 = org eclipse aether util graph visitor abstract depth first node list generator r0 <NEXT> $ r6 = r13 get node <NEXT> $ i0 = $ r6 size <NEXT> specialinvoke r12 < init > $ i0 <NEXT> r14 = org eclipse aether util graph visitor abstract depth first node list generator r0 <NEXT> $ r7 = r14 get node <NEXT> r2 = $ r7 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r8 = r2 next <NEXT> r3 = org eclipse aether graph dependency node $ r8 <NEXT> $ r9 = r3 get dependency <NEXT> if $ r9 == null goto label2 <NEXT> $ r10 = r3 get dependency <NEXT> $ r11 = $ r10 get artifact <NEXT> r4 = $ r11 get file <NEXT> if r4 == null goto label2 <NEXT> r12 add r4 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = org eclipse aether util listener chain repository listener r0 <NEXT> $ r2 = r3 listener <NEXT> $ r2 remove r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse aether util repository authentication builder r0 <NEXT> $ r2 = r3 add string \ `` username\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse aether util repository authentication builder r0 <NEXT> $ r2 = r3 add secret \ `` password\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse aether util repository authentication builder r0 <NEXT> $ r2 = r3 add secret \ `` password\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven setting mirror r0 <NEXT> $ r1 = r2 mirror of <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting mirror r0 <NEXT> r2 layout = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting mirror r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting profile r0 <NEXT> r2 plugin repository = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting profile r0 <NEXT> r2 property = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting proxy r0 <NEXT> r2 non proxy host = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven setting server r0 <NEXT> $ r1 = r2 configuration <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven setting server r0 <NEXT> $ r1 = r2 directory permission <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting server r0 <NEXT> r2 file permission = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache maven setting setting r0 <NEXT> r1 interactive mode = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting setting r0 <NEXT> r2 profile = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r4 append 34 <NEXT> $ r6 = specialinvoke r0 get command line r1 r2 <NEXT> $ r7 = $ r6 get 0 <NEXT> $ r8 = java lang string $ r7 <NEXT> $ r4 append $ r8 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache maven share utils io directory scanner r0 <NEXT> $ r2 = r6 dirs include <NEXT> r7 = org apache maven share utils io directory scanner r0 <NEXT> $ r1 = r7 dirs include <NEXT> $ i0 = $ r1 size <NEXT> $ r3 = newarray java lang string [ $ i0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = java lang string [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache maven share utils io directory scanner r0 <NEXT> r6 slow scan <NEXT> r7 = org apache maven share utils io directory scanner r0 <NEXT> $ r2 = r7 dirs exclude <NEXT> r8 = org apache maven share utils io directory scanner r0 <NEXT> $ r1 = r8 dirs exclude <NEXT> $ i0 = $ r1 size <NEXT> $ r3 = newarray java lang string [ $ i0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = java lang string [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache maven share utils io file utils extension r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com draw metadata directory r0 <NEXT> $ r1 = r2 _defined tag list <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = com draw metadata directory r0 <NEXT> r2 set object array i0 r1 <NEXT> return <END>
<BEG> $ r3 = org eclipse microprofile rest client spi rest client builder resolver instance <NEXT> if $ r3 ! = null goto label9 <NEXT> entermonitor class \ `` lorg eclipse microprofile rest client spi rest client builder resolver \ `` <NEXT> label $ r5 = org eclipse microprofile rest client spi rest client builder resolver instance <NEXT> if $ r5 == null goto label3 <NEXT> $ r9 = org eclipse microprofile rest client spi rest client builder resolver instance <NEXT> exitmonitor class \ `` lorg eclipse microprofile rest client spi rest client builder resolver \ `` <NEXT> label return $ r9 <NEXT> if $ r5 == null goto label3 <NEXT> label r11 = rest client builder resolver $ lambda_instance_0__1 bootstrap $ <NEXT> $ r6 = java security access controller do privilege r11 <NEXT> r12 = java lang class loader $ r6 <NEXT> if r12 ! = null goto label4 <NEXT> r13 = rest client builder resolver $ lambda_instance_1__2 bootstrap $ <NEXT> $ r8 = java security access controller do privilege r13 <NEXT> r12 = java lang class loader $ r8 <NEXT> label r1 = org eclipse microprofile rest client spi rest client builder resolver load spi r12 <NEXT> if r1 ! = null goto label5 <NEXT> $ r7 = new java lang illegal state exception <NEXT> specialinvoke $ r7 < init > \ `` no rest client builder resolver implementation find ! \ `` <NEXT> throw $ r7 <NEXT> if r1 ! = null goto label5 <NEXT> label org eclipse microprofile rest client spi rest client builder resolver instance = r1 <NEXT> if $ r3 ! = null goto label9 <NEXT> label $ r4 = org eclipse microprofile rest client spi rest client builder resolver instance <NEXT> return $ r4 <END>
<BEG> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> $ r0 = com eclipsesource json json true <NEXT> goto label2 <NEXT> label return $ r0 <NEXT> if z0 == 0 goto label1 <NEXT> label $ r0 = com eclipsesource json json false <END>
<BEG> $ r0 = new com eclipsesource json json array <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r2 = com eclipsesource json json value z0 <NEXT> r4 = com eclipsesource json json object r0 <NEXT> r4 set r1 $ r2 <NEXT> r5 = com eclipsesource json json object r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r2 = com eclipsesource json json value z0 <NEXT> r4 = com eclipsesource json json object r0 <NEXT> r4 set r1 $ r2 <NEXT> r5 = com eclipsesource json json object r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r9 = new java lang null pointer exception <NEXT> specialinvoke r9 < init > \ `` object be null\ `` <NEXT> throw r9 <NEXT> if r1 ! = null goto label1 <NEXT> label r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r4 = r2 next <NEXT> r3 = com eclipsesource json json object $ member $ r4 <NEXT> $ r5 = com eclipsesource json json object $ member access $ 000 r3 <NEXT> $ r6 = com eclipsesource json json object $ member access $ 100 r3 <NEXT> r10 = com eclipsesource json json object r0 <NEXT> r10 set $ r5 $ r6 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r11 = com eclipsesource json json object r0 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang unsupported operation exception <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> $ r3 = r7 append \ `` not a number \ `` <NEXT> r9 = com eclipsesource json json value r0 <NEXT> $ r4 = r9 to string <NEXT> $ r5 = $ r3 append $ r4 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke r8 < init > $ r6 <NEXT> throw r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com eclipsesource json writer config minimal <NEXT> r3 = com eclipsesource json json value r0 <NEXT> r3 write to r1 $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com eclipsesource json parse exception r0 <NEXT> $ r1 = r2 location <NEXT> $ i0 = $ r1 column <NEXT> return $ i0 <END>
<BEG> b0 = @ parameter0 <NEXT> r3 = new org mockito internal matcher less or equal <NEXT> $ r1 = java lang byte value of b0 <NEXT> specialinvoke r3 < init > $ r1 <NEXT> r4 = org mockito argument matcher r3 <NEXT> $ r2 = org mockito additional matcher report matcher r4 <NEXT> $ b1 = $ r2 return zero <NEXT> return $ b1 <END>
<BEG> b0 = @ parameter0 <NEXT> r3 = new org mockito internal matcher less or equal <NEXT> $ r1 = java lang byte value of b0 <NEXT> specialinvoke r3 < init > $ r1 <NEXT> r4 = org mockito argument matcher r3 <NEXT> $ r2 = org mockito additional matcher report matcher r4 <NEXT> $ b1 = $ r2 return zero <NEXT> return $ b1 <END>
<BEG> b0 = @ parameter0 <NEXT> r3 = new org mockito internal matcher less or equal <NEXT> $ r1 = java lang byte value of b0 <NEXT> specialinvoke r3 < init > $ r1 <NEXT> r4 = org mockito argument matcher r3 <NEXT> $ r2 = org mockito additional matcher report matcher r4 <NEXT> $ b1 = $ r2 return zero <NEXT> return $ b1 <END>
<BEG> b0 = @ parameter0 <NEXT> r3 = new org mockito internal matcher less than <NEXT> $ r1 = java lang byte value of b0 <NEXT> specialinvoke r3 < init > $ r1 <NEXT> r4 = org mockito argument matcher r3 <NEXT> $ r2 = org mockito additional matcher report matcher r4 <NEXT> $ b1 = $ r2 return zero <NEXT> return $ b1 <END>
<BEG> b0 = @ parameter0 <NEXT> r3 = new org mockito internal matcher less than <NEXT> $ r1 = java lang byte value of b0 <NEXT> specialinvoke r3 < init > $ r1 <NEXT> r4 = org mockito argument matcher r3 <NEXT> $ r2 = org mockito additional matcher report matcher r4 <NEXT> $ b1 = $ r2 return zero <NEXT> return $ b1 <END>
<BEG> r0 = @ parameter0 <NEXT> r5 = new org mockito internal matcher array equal <NEXT> specialinvoke r5 < init > r0 <NEXT> r6 = org mockito argument matcher r5 <NEXT> $ r2 = org mockito additional matcher report matcher r6 <NEXT> $ r3 = $ r2 return null <NEXT> $ r4 = boolean [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> $ r0 = org mockito additional matcher mock progress <NEXT> $ r1 = $ r0 get argument matcher storage <NEXT> $ r2 = $ r1 report and <NEXT> $ z2 = $ r2 return false <NEXT> return $ z2 <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> $ r0 = org mockito additional matcher mock progress <NEXT> $ r1 = $ r0 get argument matcher storage <NEXT> $ r2 = $ r1 report or <NEXT> $ z2 = $ r2 return false <NEXT> return $ z2 <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> $ r0 = org mockito additional matcher mock progress <NEXT> $ r1 = $ r0 get argument matcher storage <NEXT> $ r2 = $ r1 report or <NEXT> $ z2 = $ r2 return false <NEXT> return $ z2 <END>
<BEG> z0 = @ parameter0 <NEXT> $ r0 = org mockito additional matcher mock progress <NEXT> $ r1 = $ r0 get argument matcher storage <NEXT> $ r2 = $ r1 report not <NEXT> $ z1 = $ r2 return false <NEXT> return $ z1 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r4 = new org mockito internal matcher equal with delta <NEXT> $ r1 = java lang double value of d0 <NEXT> $ r2 = java lang double value of d1 <NEXT> specialinvoke r4 < init > $ r1 $ r2 <NEXT> r5 = org mockito argument matcher r4 <NEXT> $ r3 = org mockito additional matcher report matcher r5 <NEXT> $ b0 = $ r3 return zero <NEXT> $ d2 = double $ b0 <NEXT> return $ d2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = r0 get class <NEXT> r2 = $ r3 get simple name <NEXT> $ r4 = org mockito internal util decamelizer decamelize matcher r2 <NEXT> r1 append text $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org mockito asm class writer r0 <NEXT> $ r2 = r3 new class item r1 <NEXT> $ i0 = $ r2 index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org mockito asm label r0 <NEXT> $ i0 = r3 status <NEXT> $ i1 = $ i0 & 2 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> r2 = new java lang illegal state exception <NEXT> specialinvoke r2 < init > \ `` label offset position have not be resolve yet\ `` <NEXT> throw r2 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label r4 = org mockito asm label r0 <NEXT> $ i2 = r4 position <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r2 = org mockito asm tree analysis analyzer r0 <NEXT> $ r1 = r2 frame <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org mockito asm tree insn list r0 <NEXT> r2 = r3 first <NEXT> label if r2 == null goto label2 <NEXT> if r2 == r1 goto label2 <NEXT> r2 = r2 next <NEXT> goto label1 <NEXT> if r2 == r1 goto label2 <NEXT> label if r2 == null goto label3 <NEXT> $ z0 = 1 <NEXT> goto label4 <NEXT> label return $ z0 <NEXT> label if r2 == null goto label3 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if i0 == 5 goto label1 <NEXT> if i0 == 2 goto label1 <NEXT> if i0 ! = 4 goto label2 <NEXT> label if r1 == null goto label3 <NEXT> r8 = org mockito asm util trace abstract visitor r0 <NEXT> $ r2 = r8 buf <NEXT> $ r3 = $ r2 append \ `` signature \ `` <NEXT> $ r4 = $ r3 append r1 <NEXT> $ r4 append 10 <NEXT> goto label3 <NEXT> label return <NEXT> if i0 ! = 4 goto label2 <NEXT> label r9 = org mockito asm util trace abstract visitor r0 <NEXT> $ r6 = r9 buf <NEXT> $ r6 append r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mockito cglib core abstract class generator r0 <NEXT> r2 class loader = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r4 = new java lang illegal argument exception <NEXT> specialinvoke r4 < init > \ `` array can not be empty\ `` <NEXT> throw r4 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ r2 = org mockito cglib proxy callback info determine type r1 <NEXT> r5 = org mockito cglib proxy enhancer r0 <NEXT> r5 callback type = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org mockito cglib util parallel sorter r0 <NEXT> $ i1 = specialinvoke r1 len <NEXT> r2 = org mockito cglib util parallel sorter r0 <NEXT> r2 quick sort i0 0 $ i1 null <NEXT> return <END>
<BEG> $ r0 = org mockito internal matcher any any <NEXT> r3 = org hamcrest matcher $ r0 <NEXT> $ r1 = org mockito matcher report matcher r3 <NEXT> $ r2 = $ r1 return set <NEXT> return $ r2 <END>
<BEG> z0 = @ parameter0 <NEXT> r3 = new org mockito internal matcher equal <NEXT> $ r1 = java lang boolean value of z0 <NEXT> specialinvoke r3 < init > $ r1 <NEXT> r4 = org hamcrest matcher r3 <NEXT> $ r2 = org mockito matcher report matcher r4 <NEXT> $ z1 = $ r2 return false <NEXT> return $ z1 <END>
<BEG> $ r1 = org mockito mockito mockito_core <NEXT> r3 = new org mockito internal stubbing answer do nothing <NEXT> specialinvoke r3 < init > <NEXT> r4 = org mockito stub answer r3 <NEXT> $ r2 = $ r1 do answer r4 <NEXT> return $ r2 <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = org mockito internal verification verification mode factory at least i0 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org mockito internal stubbing defaultanswers forward invocation <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org mockito stub answer r2 <NEXT> return r3 <END>
<BEG> $ r0 = org mockito internal configuration plugins plugins registry <NEXT> $ r1 = $ r0 get stack trace cleaner provider <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new java util link list <NEXT> specialinvoke $ r2 < init > <NEXT> label $ z0 = r0 have more element <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r3 = r0 next element <NEXT> $ r2 add $ r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org mockito internal util default mock detail r0 <NEXT> $ r2 = r3 delegate <NEXT> r4 = org mockito internal util default mock detail r0 <NEXT> $ r1 = r4 to inspect <NEXT> $ z0 = $ r2 be mock $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org mockito internal util reflection field initialization report r0 <NEXT> $ r1 = r2 field instance <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r24 = new org mockito internal util reflection accessibility changer <NEXT> specialinvoke r24 < init > <NEXT> r27 = org mockito internal util reflection field initializer r0 <NEXT> $ r4 = r27 field <NEXT> r24 enable access $ r4 <NEXT> label r28 = org mockito internal util reflection field initializer r0 <NEXT> r22 = specialinvoke r28 acquire field instance <NEXT> label r29 = org mockito internal util reflection field initializer r0 <NEXT> $ r5 = r29 field <NEXT> r24 safely disable access $ r5 <NEXT> return r22 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new java util array list <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = r0 get class <NEXT> $ r4 = $ r3 get declare field <NEXT> $ r5 = org mockito internal util reflection field instance field in r0 $ r4 <NEXT> $ r2 add all $ r5 <NEXT> $ r6 = new org mockito internal util reflection field $ instance field <NEXT> specialinvoke $ r6 < init > r0 $ r2 <NEXT> return $ r6 <END>
<BEG> $ r0 = org mockito internal matcher any any <NEXT> r2 = org hamcrest matcher $ r0 <NEXT> $ r1 = org mockito matcher report matcher r2 <NEXT> $ z0 = $ r1 return false <NEXT> return $ z0 <END>
<BEG> z0 = @ parameter0 <NEXT> r3 = new org mockito internal matcher equal <NEXT> $ r1 = java lang boolean value of z0 <NEXT> specialinvoke r3 < init > $ r1 <NEXT> r4 = org hamcrest matcher r3 <NEXT> $ r2 = org mockito matcher report matcher r4 <NEXT> $ z1 = $ r2 return false <NEXT> return $ z1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org mockito matcher report matcher r0 <NEXT> $ b0 = $ r1 return zero <NEXT> $ l1 = long $ b0 <NEXT> return $ l1 <END>
<BEG> l0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> r2 = new org mockito internal stubbing answer answer with delay <NEXT> specialinvoke r2 < init > l0 r0 <NEXT> r3 = org mockito stub answer r2 <NEXT> return r3 <END>
<BEG> r1 = new org mockito internal matcher instance of <NEXT> specialinvoke r1 < init > class \ `` ljava lang boolean \ <NEXT> r2 = org mockito argument matcher r1 <NEXT> org mockito argument matcher report matcher r2 <NEXT> return 0 <END>
<BEG> r1 = new org mockito internal matcher instance of <NEXT> specialinvoke r1 < init > class \ `` ljava lang byte \ <NEXT> r2 = org mockito argument matcher r1 <NEXT> org mockito argument matcher report matcher r2 <NEXT> return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> org mockito hamcrest mockito hamcrest report matcher r0 <NEXT> return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org mockito internal junit exception factory factory <NEXT> $ r4 = $ r3 create r0 r1 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org mockito internal stub invocation container impl r0 <NEXT> $ r1 = r2 stub <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 be use <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r1 = r0 get strictness <NEXT> $ r2 = org mockito quality strictness lenient <NEXT> if $ r1 == $ r2 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ r1 == $ r2 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org mockito mockito time 1 <NEXT> $ r2 = $ r1 description r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org mockserver client forward chain expectation r0 <NEXT> $ r3 = r10 expectation <NEXT> r9 = new org mockserver model http object callback <NEXT> specialinvoke r9 < init > <NEXT> r11 = org mockserver client forward chain expectation r0 <NEXT> r12 = org mockserver mock action expectation callback r1 <NEXT> $ r4 = specialinvoke r11 register web socket client r12 <NEXT> $ r5 = r9 with client id $ r4 <NEXT> $ r3 then respond $ r5 <NEXT> r13 = org mockserver client forward chain expectation r0 <NEXT> $ r8 = r13 mock server client <NEXT> r14 = org mockserver client forward chain expectation r0 <NEXT> $ r7 = r14 expectation <NEXT> $ r8 send expectation $ r7 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = org mockserver model http request request <NEXT> $ r4 = $ r3 with method \ `` put\ `` <NEXT> r16 = org mockserver client mock server client r0 <NEXT> $ r5 = specialinvoke r16 calculate path \ `` bind\ `` <NEXT> $ r6 = $ r4 with path $ r5 <NEXT> r17 = org mockserver client mock server client r0 <NEXT> $ r7 = r17 port bind serializer <NEXT> $ r8 = org mockserver model port bind port bind r1 <NEXT> $ r9 = $ r7 serialize $ r8 <NEXT> $ r10 = java nio charset standard charsets utf_8 <NEXT> $ r11 = $ r6 with body $ r9 $ r10 <NEXT> r18 = org mockserver client mock server client r0 <NEXT> $ r12 = specialinvoke r18 send request $ r11 <NEXT> r2 = $ r12 get body a string <NEXT> r19 = org mockserver client mock server client r0 <NEXT> $ r13 = r19 port bind serializer <NEXT> $ r14 = $ r13 deserialize r2 <NEXT> $ r15 = $ r14 get port <NEXT> return $ r15 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = org mockserver client mock server event bus get instance <NEXT> $ r2 = org mockserver client mock server event bus $ event type stop <NEXT> $ r1 publish $ r2 <NEXT> label $ r3 = org mockserver model http request request <NEXT> $ r4 = $ r3 with method \ `` put\ `` <NEXT> r33 = org mockserver client mock server client r0 <NEXT> $ r5 = specialinvoke r33 calculate path \ `` stop\ `` <NEXT> $ r6 = $ r4 with path $ r5 <NEXT> r34 = org mockserver client mock server client r0 <NEXT> specialinvoke r34 send request $ r6 <NEXT> r35 = org mockserver client mock server client r0 <NEXT> $ z1 = r35 be run <NEXT> if $ z1 == 0 goto label3 <NEXT> i0 = 0 <NEXT> label r36 = org mockserver client mock server client r0 <NEXT> $ z2 = r36 be run <NEXT> if $ z2 == 0 goto label3 <NEXT> if i0 > = 50 goto label3 <NEXT> $ r13 = java util concurrent time unit milliseconds <NEXT> $ r13 sleep 5l <NEXT> i0 = i0 + 1 <NEXT> goto label2 <NEXT> if i0 > = 50 goto label3 <NEXT> label goto label6 <NEXT> label r39 = org mockserver client mock server client r0 <NEXT> $ r30 = r39 event loop group <NEXT> $ z3 = $ r30 be shut down <NEXT> if $ z3 ! = 0 goto label7 <NEXT> r40 = org mockserver client mock server client r0 <NEXT> $ r11 = r40 event loop group <NEXT> $ r11 shutdown gracefully <NEXT> label r41 = org mockserver client mock server client r0 <NEXT> $ r8 = r41 client class <NEXT> $ r9 = $ r8 cast r0 <NEXT> $ r10 = org mockserver client mock server client $ r9 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 == 0 goto label1 <NEXT> $ r4 = r1 [ 0 ] <NEXT> if $ r4 ! = null goto label2 <NEXT> label r20 = new java lang illegal argument exception <NEXT> specialinvoke r20 < init > \ `` verify http request require a non null non empty array of http request objects\ `` <NEXT> throw r20 <NEXT> if $ r4 ! = null goto label2 <NEXT> label r21 = new org mockserver verify verification sequence <NEXT> specialinvoke r21 < init > <NEXT> r2 = r21 with request r1 <NEXT> $ r6 = org mockserver model http request request <NEXT> $ r7 = $ r6 with method \ `` put\ `` <NEXT> r23 = org mockserver client mock server client r0 <NEXT> $ r8 = specialinvoke r23 calculate path \ `` verify sequence\ `` <NEXT> $ r9 = $ r7 with path $ r8 <NEXT> r24 = org mockserver client mock server client r0 <NEXT> $ r10 = r24 verification sequence serializer <NEXT> $ r11 = $ r10 serialize r2 <NEXT> $ r12 = java nio charset standard charsets utf_8 <NEXT> $ r13 = $ r9 with body $ r11 $ r12 <NEXT> r25 = org mockserver client mock server client r0 <NEXT> $ r14 = specialinvoke r25 send request $ r13 <NEXT> r3 = $ r14 get body a string <NEXT> if r3 == null goto label3 <NEXT> $ z0 = r3 be empty <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r22 = new java lang assertion error <NEXT> specialinvoke r22 < init > r3 <NEXT> throw r22 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> label r26 = org mockserver client mock server client r0 <NEXT> $ r15 = r26 client class <NEXT> $ r16 = $ r15 cast r0 <NEXT> $ r17 = org mockserver client mock server client $ r16 <NEXT> return $ r17 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mockserver model action r0 <NEXT> r2 delay = r1 <NEXT> r3 = org mockserver model action r0 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org mockserver model http override forward request <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 with http request r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org mockserver model http request r0 <NEXT> $ r2 = r3 with body r1 <NEXT> r4 = org mockserver model http object $ r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org mockserver model http request r0 <NEXT> $ r2 = r3 header <NEXT> $ z0 = $ r2 contain entry r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org mockserver model http request r0 <NEXT> $ r2 = r3 with cooky r1 <NEXT> r4 = org mockserver model http object $ r2 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org mockserver model http template <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = java util locale get default <NEXT> r3 = com github fge msgsimple bundle message bundle r0 <NEXT> r3 check argument z0 $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = io smallrye mutiny helper parameter validation non null r1 \ `` executor\ `` <NEXT> $ r3 = java util concurrent schedule executor service $ r2 <NEXT> r4 = io smallrye mutiny group uni on item delay r0 <NEXT> r4 executor = $ r3 <NEXT> r5 = io smallrye mutiny group uni on item delay r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new io smallrye mutiny group uni on timeout <NEXT> r8 = io smallrye mutiny group uni on timeout r0 <NEXT> $ r3 = r8 failure <NEXT> r9 = io smallrye mutiny group uni on timeout r0 <NEXT> $ r4 = r9 timeout <NEXT> $ r5 = io smallrye mutiny helper parameter validation non null r1 \ `` executor\ `` <NEXT> $ r6 = java util concurrent schedule executor service $ r5 <NEXT> specialinvoke r7 < init > $ r3 $ r4 $ r6 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = io smallrye mutiny helper queue spsc link array queue r0 <NEXT> l5 = specialinvoke r1 lv consumer index <NEXT> label l0 = l5 <NEXT> r2 = io smallrye mutiny helper queue spsc link array queue r0 <NEXT> l1 = specialinvoke r2 lv producer index <NEXT> r3 = io smallrye mutiny helper queue spsc link array queue r0 <NEXT> l5 = specialinvoke r3 lv consumer index <NEXT> $ b2 = l0 cmp l5 <NEXT> if $ b2 ! = 0 goto label2 <NEXT> $ l3 = l1 - l5 <NEXT> $ i4 = int $ l3 <NEXT> return $ i4 <NEXT> if $ b2 ! = 0 goto label2 <NEXT> label goto label1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r8 = org mvel2 asm class visitor r0 <NEXT> $ r5 = r8 cv <NEXT> if $ r5 == null goto label1 <NEXT> r9 = org mvel2 asm class visitor r0 <NEXT> $ r6 = r9 cv <NEXT> $ r7 = $ r6 visit method i0 r1 r2 r3 r4 <NEXT> return $ r7 <NEXT> if $ r5 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r6 = org mvel2 asm class writer r0 <NEXT> $ r5 = r6 new invoke dynamic item r1 r2 r3 r4 <NEXT> $ i0 = $ r5 index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org mvel2 asm method visitor r0 <NEXT> $ r2 = r4 mv <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org mvel2 asm method visitor r0 <NEXT> $ r3 = r5 mv <NEXT> $ r3 visit ldc insn r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 262144 goto label17 <NEXT> r44 = org mvel2 asm tree method node r0 <NEXT> $ r1 = r44 visible type annotation <NEXT> if $ r1 == null goto label01 <NEXT> r45 = org mvel2 asm tree method node r0 <NEXT> $ r31 = r45 visible type annotation <NEXT> $ i11 = $ r31 size <NEXT> if $ i11 < = 0 goto label01 <NEXT> r35 = new java lang runtime exception <NEXT> specialinvoke r35 < init > <NEXT> throw r35 <NEXT> if $ i11 < = 0 goto label01 <NEXT> label r46 = org mvel2 asm tree method node r0 <NEXT> $ r2 = r46 invisible type annotation <NEXT> if $ r2 == null goto label02 <NEXT> r47 = org mvel2 asm tree method node r0 <NEXT> $ r29 = r47 invisible type annotation <NEXT> $ i10 = $ r29 size <NEXT> if $ i10 < = 0 goto label02 <NEXT> r36 = new java lang runtime exception <NEXT> specialinvoke r36 < init > <NEXT> throw r36 <NEXT> if $ i10 < = 0 goto label02 <NEXT> label r48 = org mvel2 asm tree method node r0 <NEXT> $ r3 = r48 try catch block <NEXT> if $ r3 ! = null goto label03 <NEXT> $ i12 = 0 <NEXT> goto label04 <NEXT> label i1 = $ i12 <NEXT> i13 = 0 <NEXT> label if i13 > = i1 goto label08 <NEXT> r50 = org mvel2 asm tree method node r0 <NEXT> $ r21 = r50 try catch block <NEXT> $ r22 = $ r21 get i13 <NEXT> r33 = org mvel2 asm tree try catch block node $ r22 <NEXT> $ r23 = r33 visible type annotation <NEXT> if $ r23 == null goto label06 <NEXT> $ r27 = r33 visible type annotation <NEXT> $ i9 = $ r27 size <NEXT> if $ i9 < = 0 goto label06 <NEXT> r37 = new java lang runtime exception <NEXT> specialinvoke r37 < init > <NEXT> throw r37 <NEXT> if $ i9 < = 0 goto label06 <NEXT> label $ r24 = r33 invisible type annotation <NEXT> if $ r24 == null goto label07 <NEXT> $ r25 = r33 invisible type annotation <NEXT> $ i8 = $ r25 size <NEXT> if $ i8 < = 0 goto label07 <NEXT> r38 = new java lang runtime exception <NEXT> specialinvoke r38 < init > <NEXT> throw r38 <NEXT> if $ i8 < = 0 goto label07 <NEXT> label i13 = i13 + 1 <NEXT> goto label05 <NEXT> label if i13 > = i1 goto label08 <NEXT> label i14 = 0 <NEXT> label r51 = org mvel2 asm tree method node r0 <NEXT> $ r5 = r51 instruction <NEXT> $ i2 = $ r5 size <NEXT> if i14 > = $ i2 goto label15 <NEXT> r52 = org mvel2 asm tree method node r0 <NEXT> $ r12 = r52 instruction <NEXT> r34 = $ r12 get i14 <NEXT> $ r13 = r34 visible type annotation <NEXT> if $ r13 == null goto label10 <NEXT> $ r19 = r34 visible type annotation <NEXT> $ i7 = $ r19 size <NEXT> if $ i7 < = 0 goto label10 <NEXT> r39 = new java lang runtime exception <NEXT> specialinvoke r39 < init > <NEXT> throw r39 <NEXT> if $ i7 < = 0 goto label10 <NEXT> label $ r14 = r34 invisible type annotation <NEXT> if $ r14 == null goto label11 <NEXT> $ r17 = r34 invisible type annotation <NEXT> $ i6 = $ r17 size <NEXT> if $ i6 < = 0 goto label11 <NEXT> r40 = new java lang runtime exception <NEXT> specialinvoke r40 < init > <NEXT> throw r40 <NEXT> if $ i6 < = 0 goto label11 <NEXT> label $ z1 = r34 instanceof org mvel2 asm tree method insn node <NEXT> if $ z1 == 0 goto label14 <NEXT> $ r15 = org mvel2 asm tree method insn node r34 <NEXT> z0 = $ r15 itf <NEXT> $ i5 = r34 opcode <NEXT> if $ i5 ! = 185 goto label12 <NEXT> $ z3 = 1 <NEXT> goto label13 <NEXT> label if z0 == $ z3 goto label14 <NEXT> r41 = new java lang runtime exception <NEXT> specialinvoke r41 < init > <NEXT> throw r41 <NEXT> label if z0 == $ z3 goto label14 <NEXT> label i14 = i14 + 1 <NEXT> goto label09 <NEXT> if $ i5 ! = 185 goto label12 <NEXT> label $ z3 = 0 <NEXT> if i14 > = $ i2 goto label15 <NEXT> label r53 = org mvel2 asm tree method node r0 <NEXT> $ r6 = r53 visible local variable annotation <NEXT> if $ r6 == null goto label16 <NEXT> r54 = org mvel2 asm tree method node r0 <NEXT> $ r10 = r54 visible local variable annotation <NEXT> $ i4 = $ r10 size <NEXT> if $ i4 < = 0 goto label16 <NEXT> r42 = new java lang runtime exception <NEXT> specialinvoke r42 < init > <NEXT> throw r42 <NEXT> if $ i4 < = 0 goto label16 <NEXT> label r55 = org mvel2 asm tree method node r0 <NEXT> $ r7 = r55 invisible local variable annotation <NEXT> if $ r7 == null goto label17 <NEXT> r56 = org mvel2 asm tree method node r0 <NEXT> $ r8 = r56 invisible local variable annotation <NEXT> $ i3 = $ r8 size <NEXT> if $ i3 < = 0 goto label17 <NEXT> r43 = new java lang runtime exception <NEXT> specialinvoke r43 < init > <NEXT> throw r43 <NEXT> if $ i3 < = 0 goto label17 <NEXT> label return <NEXT> if $ r3 ! = null goto label03 <NEXT> label r49 = org mvel2 asm tree method node r0 <NEXT> $ r4 = r49 try catch block <NEXT> $ i12 = $ r4 size <END>
<BEG> r0 = @ this <NEXT> r1 = org mvel2 asm type reference r0 <NEXT> $ i0 = r1 value <NEXT> $ i1 = $ i0 & 16776960 <NEXT> $ i2 = $ i1 > > 8 <NEXT> $ s3 = short $ i2 <NEXT> return $ s3 <END>
<BEG> r0 = @ this <NEXT> r1 = org mvel2 asm type reference r0 <NEXT> $ i0 = r1 value <NEXT> $ i1 = $ i0 & 16711680 <NEXT> $ i2 = $ i1 > > 16 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r2 = new java lang runtime exception <NEXT> specialinvoke $ r2 < init > \ `` must be overriden\ `` <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> $ r3 = new java lang runtime exception <NEXT> specialinvoke $ r3 < init > \ `` must be overriden\ `` <NEXT> throw $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = new org mvel2 m v e l interpret runtime <NEXT> specialinvoke $ r3 < init > r0 r1 <NEXT> $ r4 = $ r3 parse <NEXT> $ r5 = org mvel2 data conversion convert $ r4 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org mvel2 mvel eval r0 <NEXT> $ r2 = java lang string value of $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r8 = new org mvel2 integration impl cache map variable resolver factory <NEXT> specialinvoke r8 < init > r2 <NEXT> label r9 = org mvel2 integration variable resolver factory r8 <NEXT> r4 = org mvel2 mvel _eval file r0 r1 r9 <NEXT> label r8 externalize <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> label r14 = r0 get method r1 r2 <NEXT> $ i0 = r14 get modifier <NEXT> $ i1 = $ i0 & 8 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> $ r3 = new java lang runtime exception <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append \ `` method not a static method \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke $ r3 < init > $ r7 <NEXT> throw $ r3 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> label return r14 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org mvel2 parser context r0 <NEXT> r1 line count = i0 <NEXT> return i0 <END>
<BEG> $ r0 = com arjuna common internal util propertyservice bean populator get default instance class \ `` lcom arjuna at arjuna common core environment bean \ `` <NEXT> $ r1 = com arjuna at arjuna common core environment bean $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = com arjuna at arjuna common coordinator environment bean r0 <NEXT> r1 tx reaper cancel wait period = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> entermonitor r0 <NEXT> label r9 = com arjuna at arjuna common coordinator environment bean r0 <NEXT> $ r7 = r9 check action factory class name <NEXT> if $ r7 == null goto label2 <NEXT> r10 = com arjuna at arjuna common coordinator environment bean r0 <NEXT> $ z0 = r10 allow check action factory override <NEXT> if $ z0 == 0 goto label4 <NEXT> label r11 = com arjuna at arjuna common coordinator environment bean r0 <NEXT> r3 = r11 check action factory <NEXT> r12 = com arjuna at arjuna common coordinator environment bean r0 <NEXT> r12 check action factory = r1 <NEXT> if r1 ! = null goto label3 <NEXT> r13 = com arjuna at arjuna common coordinator environment bean r0 <NEXT> r13 check action factory class name = null <NEXT> goto label4 <NEXT> label exitmonitor r0 <NEXT> label goto label8 <NEXT> label return <NEXT> if r1 ! = null goto label3 <NEXT> label if r1 == r3 goto label4 <NEXT> r4 = com arjuna common internal util classloading utility get name for class r1 <NEXT> r14 = com arjuna at arjuna common coordinator environment bean r0 <NEXT> r14 check action factory class name = r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com arjuna at arjuna common core environment bean r0 <NEXT> r2 var dir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com arjuna at arjuna common core environment bean r0 <NEXT> $ r1 = r2 node identifier <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com arjuna at arjuna common object store environment bean r0 <NEXT> $ i0 = r1 cache store remove item <NEXT> if $ i0 > = 0 goto label1 <NEXT> return 0 <NEXT> if $ i0 > = 0 goto label1 <NEXT> label r2 = com arjuna at arjuna common object store environment bean r0 <NEXT> $ i1 = r2 cache store remove item <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com arjuna at arjuna common object store environment bean r0 <NEXT> r1 cache store hash = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com arjuna at arjuna common object store environment bean r0 <NEXT> $ i0 = r1 hierarchy retry <NEXT> if $ i0 > = 0 goto label1 <NEXT> return 100 <NEXT> if $ i0 > = 0 goto label1 <NEXT> label r2 = com arjuna at arjuna common object store environment bean r0 <NEXT> $ i1 = r2 hierarchy retry <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = com arjuna at arjuna common recovery environment bean r0 <NEXT> $ i0 = r1 recovery backoff period <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = com arjuna at arjuna common recovery environment bean r0 <NEXT> $ i0 = r1 transaction status manager port <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> entermonitor r0 <NEXT> label if r1 ! = null goto label2 <NEXT> r10 = new java util array list <NEXT> specialinvoke r10 < init > <NEXT> r13 = com arjuna at arjuna common recovery environment bean r0 <NEXT> r13 recovery module = r10 <NEXT> r11 = new java util array list <NEXT> specialinvoke r11 < init > <NEXT> r14 = com arjuna at arjuna common recovery environment bean r0 <NEXT> r14 recovery module class name = r11 <NEXT> goto label3 <NEXT> label exitmonitor r0 <NEXT> label goto label7 <NEXT> label return <NEXT> label if r1 ! = null goto label2 <NEXT> label r15 = com arjuna at arjuna common recovery environment bean r0 <NEXT> $ r5 = r15 recovery module class name <NEXT> $ z0 = r1 equal $ r5 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r16 = com arjuna at arjuna common recovery environment bean r0 <NEXT> r16 recovery module = null <NEXT> r12 = new java util array list <NEXT> specialinvoke r12 < init > r1 <NEXT> r17 = com arjuna at arjuna common recovery environment bean r0 <NEXT> r17 recovery module class name = r12 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0 <NEXT> r1 file size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0 <NEXT> r1 pool size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0 <NEXT> $ i0 = r1 compact min file <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0 <NEXT> $ r1 = r2 file prefix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0 <NEXT> $ r1 = r2 file extension <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com arjuna ats internal arjuna objectstore hornetq hornetq journal environment bean r0 <NEXT> r2 store dir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com arjuna ats internal arjuna objectstore slot slot store environment bean r0 <NEXT> r1 sync delete = z0 <NEXT> return <END>
<BEG> $ r0 = com arjuna ats internal arjuna recovery transaction status manager item _type name <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com arjuna ats internal jta transaction arjunacore jca subordinate xid imple r0 <NEXT> $ r2 = r4 _the xid <NEXT> $ i0 = $ r2 format i d <NEXT> if $ i0 == 131077 goto label1 <NEXT> $ z1 = specialinvoke r0 equal r1 <NEXT> return $ z1 <NEXT> if $ i0 == 131077 goto label1 <NEXT> label z2 = 0 <NEXT> $ z0 = r1 instanceof com arjuna ats internal jta transaction arjunacore jca subordinate xid imple <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r3 = com arjuna ats internal jta transaction arjunacore jca subordinate xid imple r1 <NEXT> r5 = com arjuna ats internal jta transaction arjunacore jca subordinate xid imple r0 <NEXT> r6 = javax transaction xa xid $ r3 <NEXT> z2 = r5 be same transaction r6 <NEXT> label return z2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r5 = new java util hashtable <NEXT> specialinvoke r5 < init > <NEXT> r6 = com arjuna at jdbc common j d b c environment bean r0 <NEXT> r6 jndi property = r5 <NEXT> goto label2 <NEXT> label return <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = r1 clone <NEXT> $ r3 = java util hashtable $ r2 <NEXT> r7 = com arjuna at jdbc common j d b c environment bean r0 <NEXT> r7 jndi property = $ r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com arjuna at jta common j t a environment bean r0 <NEXT> r1 support subtransactions = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> entermonitor r0 <NEXT> label r7 = new java util array list <NEXT> r8 = com arjuna at jta common j t a environment bean r0 <NEXT> $ r5 = r8 xa resource orphan filter class name <NEXT> specialinvoke r7 < init > $ r5 <NEXT> exitmonitor r0 <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = com arjuna at jta common j t a environment bean r0 <NEXT> $ z0 = r1 xa rollback optimization <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com arjuna at jta common j t a environment bean r0 <NEXT> r2 transaction manager j n d i context = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com arjuna at jta common j t a environment bean r0 <NEXT> $ r1 = r2 transaction synchronization registry j n d i context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> entermonitor r0 <NEXT> label if r1 ! = null goto label2 <NEXT> r11 = com arjuna at jta common j t a environment bean r0 <NEXT> r11 xa resource map = null <NEXT> r9 = new java util array list <NEXT> specialinvoke r9 < init > <NEXT> r12 = com arjuna at jta common j t a environment bean r0 <NEXT> r12 xa resource map class name = r9 <NEXT> goto label3 <NEXT> label exitmonitor r0 <NEXT> label goto label7 <NEXT> label return <NEXT> label if r1 ! = null goto label2 <NEXT> label r13 = com arjuna at jta common j t a environment bean r0 <NEXT> $ r5 = r13 xa resource map class name <NEXT> $ z0 = r1 equal $ r5 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r14 = com arjuna at jta common j t a environment bean r0 <NEXT> r14 xa resource map = null <NEXT> r10 = new java util array list <NEXT> specialinvoke r10 < init > r1 <NEXT> r15 = com arjuna at jta common j t a environment bean r0 <NEXT> r15 xa resource map class name = r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> entermonitor r0 <NEXT> label r8 = com arjuna at jta common j t a environment bean r0 <NEXT> r3 = r8 last resource optimisation interface <NEXT> r9 = com arjuna at jta common j t a environment bean r0 <NEXT> r9 last resource optimisation interface = r1 <NEXT> if r1 ! = null goto label2 <NEXT> r10 = com arjuna at jta common j t a environment bean r0 <NEXT> r10 last resource optimisation interface class name = null <NEXT> goto label3 <NEXT> label exitmonitor r0 <NEXT> label goto label7 <NEXT> label return <NEXT> if r1 ! = null goto label2 <NEXT> label if r1 == r3 goto label3 <NEXT> r4 = com arjuna common internal util classloading utility get name for class r1 <NEXT> r11 = com arjuna at jta common j t a environment bean r0 <NEXT> r11 last resource optimisation interface class name = r4 <END>
<BEG> r0 = @ this <NEXT> entermonitor r0 <NEXT> label r7 = new java util array list <NEXT> r8 = com arjuna at jta common j t a environment bean r0 <NEXT> $ r5 = r8 commit markable resource j n d i name <NEXT> specialinvoke r7 < init > $ r5 <NEXT> exitmonitor r0 <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> entermonitor r0 <NEXT> label if r1 ! = null goto label2 <NEXT> r9 = new java util array list <NEXT> specialinvoke r9 < init > <NEXT> r11 = com arjuna at jta common j t a environment bean r0 <NEXT> r11 commit markable resource j n d i name = r9 <NEXT> goto label3 <NEXT> label exitmonitor r0 <NEXT> label goto label7 <NEXT> label return <NEXT> label if r1 ! = null goto label2 <NEXT> label r12 = com arjuna at jta common j t a environment bean r0 <NEXT> $ r5 = r12 commit markable resource j n d i name <NEXT> $ z0 = r1 equal $ r5 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r10 = new java util array list <NEXT> specialinvoke r10 < init > r1 <NEXT> r13 = com arjuna at jta common j t a environment bean r0 <NEXT> r13 commit markable resource j n d i name = r10 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com arjuna at jta common j t a environment bean r0 <NEXT> r1 notify commit markable resource recovery module of complete branch = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> com arjuna at jta utils j n d i manager bind j t a transaction manager implementation r0 <NEXT> com arjuna at jta utils j n d i manager bind j t a user transaction implementation r0 <NEXT> com arjuna at jta utils j n d i manager bind j t a transaction synchronization registry implementation r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> $ r5 = r3 to lower case <NEXT> $ z0 = $ r5 equal \ `` entry\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ i0 = r4 get length <NEXT> if $ i0 < = 0 goto label1 <NEXT> r10 = com arjuna common util propertyservice sax handler r0 <NEXT> $ r6 = specialinvoke r10 get attribute value \ `` key\ <NEXT> r11 = com arjuna common util propertyservice sax handler r0 <NEXT> r11 current key = $ r6 <NEXT> r12 = com arjuna common util propertyservice sax handler r0 <NEXT> $ r7 = r12 current key <NEXT> if $ r7 == null goto label1 <NEXT> r13 = com arjuna common util propertyservice sax handler r0 <NEXT> r13 be entry = 1 <NEXT> r9 = new java lang string buffer <NEXT> specialinvoke r9 < init > <NEXT> r14 = com arjuna common util propertyservice sax handler r0 <NEXT> r14 current buffer = r9 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com arjuna common util propertyservice string property replacer replace property r0 null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r13 = org jboss narayana jta jms connection manager r0 <NEXT> $ z0 = r13 be connect <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r14 = org jboss narayana jta jms connection manager r0 <NEXT> $ r3 = specialinvoke r14 create x a connection <NEXT> r15 = org jboss narayana jta jms connection manager r0 <NEXT> r15 connection = $ r3 <NEXT> r16 = org jboss narayana jta jms connection manager r0 <NEXT> $ r4 = r16 connection <NEXT> $ r5 = $ r4 create x a session <NEXT> r17 = org jboss narayana jta jms connection manager r0 <NEXT> r17 session = $ r5 <NEXT> label goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r15 = org jboss narayana jta jms connection proxy r0 <NEXT> $ r2 = r15 transaction helper <NEXT> $ z0 = $ r2 be transaction available <NEXT> if $ z0 == 0 goto label2 <NEXT> r13 = new org jboss narayana jta jms connection close synchronization <NEXT> r16 = org jboss narayana jta jms connection proxy r0 <NEXT> $ r5 = r16 xa connection <NEXT> r17 = javax jms connection $ r5 <NEXT> specialinvoke r13 < init > r17 <NEXT> r18 = org jboss narayana jta jms connection proxy r0 <NEXT> $ r6 = r18 transaction helper <NEXT> r19 = javax transaction synchronization r13 <NEXT> $ r6 register synchronization r19 <NEXT> $ r7 = com arjuna at jta log jta logger logger <NEXT> $ z1 = $ r7 be trace enabled <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r9 = com arjuna at jta log jta logger logger <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> $ r10 = r14 append \ `` registered synchronization to close the connection \ `` <NEXT> $ r11 = $ r10 append r13 <NEXT> $ r12 = $ r11 to string <NEXT> $ r9 trace $ r12 <NEXT> label goto label3 <NEXT> label return <NEXT> if $ z0 == 0 goto label2 <NEXT> label r20 = org jboss narayana jta jms connection proxy r0 <NEXT> $ r3 = r20 xa connection <NEXT> $ r3 close <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org jboss narayana jta jms jms x a resource recovery helper r0 <NEXT> $ r2 = r4 connection manager <NEXT> $ r3 = jms x a resource recovery helper $ lambda_rollback_5__5 bootstrap $ r1 <NEXT> $ r2 connect and accept $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r2 = com arjuna at jta log jta logger logger <NEXT> $ z0 = $ r2 be trace enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = com arjuna at jta log jta logger logger <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> $ r6 = r14 append \ `` close session \ `` <NEXT> r15 = org jboss narayana jta jms session close synchronization r0 <NEXT> $ r7 = r15 session <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> $ r5 trace $ r9 <NEXT> label r16 = org jboss narayana jta jms session close synchronization r0 <NEXT> $ r3 = r16 session <NEXT> $ r3 close <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> $ r1 = com arjuna at jta transaction manager transaction manager <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org cyberneko html filter default filter r0 <NEXT> $ r2 = r4 f document handler <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org cyberneko html filter default filter r0 <NEXT> $ r3 = r5 f document handler <NEXT> $ r3 start c d a t a r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org cyberneko html filter default filter r0 <NEXT> $ r2 = r4 f document handler <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org cyberneko html filter default filter r0 <NEXT> $ r3 = r5 f document handler <NEXT> $ r3 end c d a t a r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org cyberneko html filter writer r0 <NEXT> $ r2 = r7 f printer <NEXT> $ r2 print \ `` < \ `` <NEXT> r8 = org cyberneko html filter writer r0 <NEXT> $ r4 = r8 f printer <NEXT> $ r3 = r1 rawname <NEXT> $ r4 print $ r3 <NEXT> r9 = org cyberneko html filter writer r0 <NEXT> $ r5 = r9 f printer <NEXT> $ r5 print 62 <NEXT> r10 = org cyberneko html filter writer r0 <NEXT> $ r6 = r10 f printer <NEXT> $ r6 flush <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org cyberneko html h t m l configuration r0 <NEXT> $ r2 = r3 f document scanner <NEXT> $ r2 evaluate input source r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org cyberneko html h t m l entity entities <NEXT> $ r3 = $ r2 get r0 <NEXT> r1 = java lang string $ r3 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 char at 0 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if r1 == null goto label1 <NEXT> label $ i0 = -1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org cyberneko html h t m l entity entities <NEXT> $ r3 = $ r2 get r0 <NEXT> r1 = java lang string $ r3 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 char at 0 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if r1 == null goto label1 <NEXT> label $ i0 = -1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> $ l1 = java lang double double to raw long bit d0 <NEXT> r2 = io netty buffer byte buf r0 <NEXT> $ r1 = r2 set long l e i0 $ l1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io netty buffer byte buf output stream r0 <NEXT> $ r1 = r2 buffer <NEXT> return $ r1 <END>
<BEG> $ i0 = io netty buffer pooled byte buf allocator default_normal_cache_size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = io netty buffer pooled byte buf allocator r0 <NEXT> $ r1 = r2 heap arena metric <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = io netty buffer pooled byte buf allocator r0 <NEXT> $ r1 = r2 direct arena metric <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i2 = @ parameter1 <NEXT> label $ i1 = i2 <NEXT> i2 = i2 + -1 <NEXT> if $ i1 < = 0 goto label2 <NEXT> r1 = io netty handler codec compression crc32 r0 <NEXT> r1 update c r c i0 <NEXT> goto label1 <NEXT> if $ i1 < = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = io netty handler codec http cookie client cookie encoder lax <NEXT> r3 = io netty handler codec http cookie cookie r0 <NEXT> $ r2 = $ r1 encode r3 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = io netty handler codec http cors cors config r0 <NEXT> $ r1 = r2 origins <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = io netty handler codec http cors cors config r0 <NEXT> $ z0 = r1 allow credential <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = io netty handler codec http cors cors config r0 <NEXT> $ r1 = r3 allow request header <NEXT> $ r2 = java util collection unmodifiable set $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = io netty handler codec http cors cors config builder r0 <NEXT> r1 enable = 0 <NEXT> r2 = io netty handler codec http cors cors config builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io netty handler codec http cors cors config builder r0 <NEXT> $ r2 = r4 request method <NEXT> $ r3 = java util array a list r1 <NEXT> $ r2 add all $ r3 <NEXT> r5 = io netty handler codec http cors cors config builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r1 [ i1 ] <NEXT> r6 = io netty handler codec http cors cors config builder r0 <NEXT> $ r4 = r6 request header <NEXT> $ r5 = r3 to string <NEXT> $ r4 add $ r5 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label r7 = io netty handler codec http cors cors config builder r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = io netty handler codec http cors cors config builder r0 <NEXT> r1 short circuit = 1 <NEXT> r2 = io netty handler codec http cors cors config builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io netty handler codec http http method r0 <NEXT> $ r1 = r3 name <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 header <NEXT> $ r3 = io netty handler codec http http header name content_type <NEXT> r5 = java lang char sequence $ r3 <NEXT> r1 = $ r2 get r5 <NEXT> if r1 == null goto label1 <NEXT> $ r4 = io netty handler codec http http util get mime type r1 <NEXT> return $ r4 <NEXT> if r1 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = io netty handler codec http multipart http post multipart request decoder r0 <NEXT> $ i0 = r1 discard threshold <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> $ r4 = r2 get name <NEXT> r5 = io netty handler codec http multipart http post request encoder r0 <NEXT> r5 add body file upload r1 $ r4 r2 r3 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = io netty handler codec http query string decoder r0 <NEXT> $ i1 = specialinvoke r4 path end idx <NEXT> i0 = $ i1 + 1 <NEXT> r5 = io netty handler codec http query string decoder r0 <NEXT> $ r1 = r5 uri <NEXT> $ i2 = $ r1 length <NEXT> if i0 > = $ i2 goto label1 <NEXT> r6 = io netty handler codec http query string decoder r0 <NEXT> $ r2 = r6 uri <NEXT> $ r3 = $ r2 substring i0 <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if i0 > = $ i2 goto label1 <NEXT> label $ r3 = \ `` \ `` <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = io netty handler codec http http constant default_charset <NEXT> $ r2 = io netty handler codec http query string decoder decode component r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = io netty handler codec http websocketx web socket server handshaker r0 <NEXT> $ r1 = r2 decoder config <NEXT> $ i0 = $ r1 max frame payload length <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = io netty handler codec http2 abstract http2 connection handler builder r0 <NEXT> $ r1 = r3 encoder enforce max concurrent stream <NEXT> if $ r1 == null goto label1 <NEXT> r4 = io netty handler codec http2 abstract http2 connection handler builder r0 <NEXT> $ r2 = r4 encoder enforce max concurrent stream <NEXT> $ z0 = $ r2 boolean value <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> l0 = @ parameter0 <NEXT> $ r1 = io netty handler codec http2 http2 error protocol_error <NEXT> $ r0 = newarray java lang object [ 1 ] <NEXT> $ r2 = java lang long value of l0 <NEXT> $ r0 [ 0 ] = $ r2 <NEXT> $ r3 = io netty handler codec http2 http2 exception connection error $ r1 \ `` header size exceed max allow size % d \ <NEXT> r4 = java lang throwable $ r3 <NEXT> throw r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof io netty handler codec http2 http2 exception $ stream exception <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> s0 = @ parameter1 <NEXT> if z0 == 0 goto label1 <NEXT> r1 = io netty handler codec http2 http2 flag r0 <NEXT> $ s5 = r1 value <NEXT> $ s6 = $ s5 | s0 <NEXT> $ s7 = short $ s6 <NEXT> r2 = io netty handler codec http2 http2 flag r0 <NEXT> r2 value = $ s7 <NEXT> goto label2 <NEXT> label r5 = io netty handler codec http2 http2 flag r0 <NEXT> return r5 <NEXT> if z0 == 0 goto label1 <NEXT> label r3 = io netty handler codec http2 http2 flag r0 <NEXT> $ s2 = r3 value <NEXT> $ s1 = s0 ^ -1 <NEXT> $ s3 = $ s2 & $ s1 <NEXT> $ s4 = short $ s3 <NEXT> r4 = io netty handler codec http2 http2 flag r0 <NEXT> r4 value = $ s4 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = io netty handler codec http2 http2 flag r0 <NEXT> $ s1 = r1 value <NEXT> $ s2 = $ s1 & s0 <NEXT> if $ s2 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ s2 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = io netty util ascii string r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> i12 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> i13 = @ parameter3 <NEXT> i0 = @ parameter4 <NEXT> if z0 ! = 0 goto label1 <NEXT> r4 = io netty util ascii string r0 <NEXT> $ z2 = r4 region match i12 r1 i13 i0 <NEXT> return $ z2 <NEXT> if z0 ! = 0 goto label1 <NEXT> label io netty util internal object util check not null r1 \ `` string\ `` <NEXT> r5 = io netty util ascii string r0 <NEXT> i1 = r5 length <NEXT> if i12 < 0 goto label2 <NEXT> $ i3 = i1 - i12 <NEXT> if i0 < = $ i3 goto label3 <NEXT> label return 0 <NEXT> if i0 < = $ i3 goto label3 <NEXT> label if i13 < 0 goto label4 <NEXT> $ i4 = r1 length <NEXT> $ i5 = $ i4 - i13 <NEXT> if i0 < = $ i5 goto label5 <NEXT> label return 0 <NEXT> if i0 < = $ i5 goto label5 <NEXT> label r6 = io netty util ascii string r0 <NEXT> $ i6 = r6 array offset <NEXT> i14 = i12 + $ i6 <NEXT> i2 = i14 + i0 <NEXT> label if i14 > = i2 goto label7 <NEXT> r7 = io netty util ascii string r0 <NEXT> $ r3 = r7 value <NEXT> $ i7 = i14 <NEXT> i14 = i14 + 1 <NEXT> $ b8 = $ r3 [ $ i7 ] <NEXT> $ c9 = io netty util ascii string b2c $ b8 <NEXT> $ i10 = i13 <NEXT> i13 = i13 + 1 <NEXT> $ c11 = r1 char at $ i10 <NEXT> $ z1 = io netty util ascii string equal ignore case $ c9 $ c11 <NEXT> if $ z1 ! = 0 goto label6 <NEXT> return 0 <NEXT> label if i14 > = i2 goto label7 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r9 = new net bytebuddy description type type variable token <NEXT> $ r3 = r0 get symbol <NEXT> $ r4 = r0 get upper bound <NEXT> r8 = new net bytebuddy description type type description $ generic $ visitor $ substitutor $ for detachment <NEXT> specialinvoke r8 < init > r1 <NEXT> r10 = net bytebuddy description type type description $ generic $ visitor r8 <NEXT> $ r6 = $ r4 accept r10 <NEXT> $ r7 = r0 get declare annotation <NEXT> r11 = java util list $ r6 <NEXT> r12 = java util list $ r7 <NEXT> specialinvoke r9 < init > $ r3 r11 r12 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = new net bytebuddy implementation invoke dynamic <NEXT> r9 = net bytebuddy implementation invoke dynamic r0 <NEXT> $ r7 = r9 bootstrap method <NEXT> r10 = net bytebuddy implementation invoke dynamic r0 <NEXT> $ r6 = r10 handle argument <NEXT> r11 = net bytebuddy implementation invoke dynamic r0 <NEXT> $ r5 = r11 invocation provider <NEXT> r12 = net bytebuddy implementation invoke dynamic r0 <NEXT> $ r4 = r12 termination handler <NEXT> specialinvoke r8 < init > $ r7 $ r6 $ r5 $ r4 r1 r2 <NEXT> r13 = net bytebuddy implementation implementation $ composable r8 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = new net bytebuddy implementation method call <NEXT> r10 = net bytebuddy implementation method call r0 <NEXT> $ r8 = r10 method locator <NEXT> r11 = net bytebuddy implementation method call r0 <NEXT> $ r7 = r11 target handler <NEXT> r12 = net bytebuddy implementation method call r0 <NEXT> $ r6 = r12 argument loader <NEXT> r13 = net bytebuddy implementation method call r0 <NEXT> $ r5 = r13 method invoker <NEXT> r14 = net bytebuddy implementation method call r0 <NEXT> $ r4 = r14 termination handler <NEXT> specialinvoke r9 < init > $ r8 $ r7 $ r6 $ r5 $ r4 r1 r2 <NEXT> r15 = net bytebuddy implementation implementation $ composable r9 <NEXT> return r15 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org apache common collections4 queue predicate queue <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = r1 get method <NEXT> if i0 ! = -1 goto label1 <NEXT> r11 = new java lang illegal argument exception <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r7 = r10 append \ `` method must be set on zip archive entry \ `` <NEXT> $ r8 = $ r7 append r1 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> throw r11 <NEXT> if i0 ! = -1 goto label1 <NEXT> label r3 = org apache common compress archivers zip zip archive entry request create zip archive entry request r1 r2 <NEXT> r12 = new org apache common compress archivers zip parallel scatter zip creator $ 2 <NEXT> r13 = org apache common compress archivers zip parallel scatter zip creator r0 <NEXT> specialinvoke r12 < init > r13 r3 <NEXT> r14 = java util concurrent callable r12 <NEXT> return r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common math3 fit leastsquares least square builder r0 <NEXT> r2 param validator = r1 <NEXT> r3 = org apache common math3 fit leastsquares least square builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org apache common math3 fit simple curve fitter <NEXT> specialinvoke $ r2 < init > r0 r1 2147483647 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org apache common math3 geometry vector r1 <NEXT> $ d0 = r0 distance r2 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = new org apache common math3 geometry euclidean threed field vector3 d <NEXT> r16 = org apache common math3 geometry euclidean threed field vector3 d r0 <NEXT> $ r4 = r16 x <NEXT> $ r3 = r1 x <NEXT> $ r5 = $ r4 add $ r3 <NEXT> $ r8 = org apache common math3 real field element $ r5 <NEXT> r17 = org apache common math3 geometry euclidean threed field vector3 d r0 <NEXT> $ r7 = r17 y <NEXT> $ r6 = r1 y <NEXT> $ r9 = $ r7 add $ r6 <NEXT> $ r12 = org apache common math3 real field element $ r9 <NEXT> r18 = org apache common math3 geometry euclidean threed field vector3 d r0 <NEXT> $ r11 = r18 z <NEXT> $ r10 = r1 z <NEXT> $ r13 = $ r11 add $ r10 <NEXT> $ r14 = org apache common math3 real field element $ r13 <NEXT> specialinvoke r15 < init > $ r8 $ r12 $ r14 <NEXT> return r15 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 cross product r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache common math3 geometry euclidean threed polyhedron set r0 <NEXT> $ r3 = r5 get tree 1 <NEXT> r6 = org apache common math3 geometry euclidean threed polyhedron set r0 <NEXT> $ r4 = specialinvoke r6 recurse first intersection $ r3 r1 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache common math3 ode nonstiff runge kutta field step interpolator r0 <NEXT> $ r4 = r8 field <NEXT> r9 = org apache common math3 ode nonstiff runge kutta field step interpolator r0 <NEXT> $ r2 = r9 y dot k <NEXT> $ r3 = $ r2 [ 0 ] <NEXT> $ i0 = lengthof $ r3 <NEXT> $ r5 = org apache common math3 util math array build array $ r4 $ i0 <NEXT> $ r6 = org apache common math3 real field element [ ] $ r5 <NEXT> r10 = org apache common math3 ode nonstiff runge kutta field step interpolator r0 <NEXT> $ r7 = specialinvoke r10 combine $ r6 r1 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r13 = org apache deltaspike core util metadata builder annotate type builder r0 <NEXT> $ r3 = r13 method <NEXT> $ r4 = $ r3 get r1 <NEXT> if $ r4 ! = null goto label1 <NEXT> r14 = org apache deltaspike core util metadata builder annotate type builder r0 <NEXT> $ r10 = r14 method <NEXT> r12 = new org apache deltaspike core util metadata builder annotation builder <NEXT> specialinvoke r12 < init > <NEXT> $ r10 put r1 r12 <NEXT> label r15 = org apache deltaspike core util metadata builder annotate type builder r0 <NEXT> $ r5 = r15 method <NEXT> $ r6 = $ r5 get r1 <NEXT> $ r7 = org apache deltaspike core util metadata builder annotation builder $ r6 <NEXT> $ r7 add r2 <NEXT> r16 = org apache deltaspike core util metadata builder annotate type builder r0 <NEXT> return r16 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = microsoft exchange webservices data autodiscover configuration outlook outlook account r0 <NEXT> r2 response type = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new microsoft exchange webservices data autodiscover web client url <NEXT> specialinvoke $ r2 < init > <NEXT> label r0 read <NEXT> $ r3 = r0 get node type <NEXT> $ i0 = $ r3 get node type <NEXT> if $ i0 ! = 1 goto label3 <NEXT> $ r4 = r0 get local name <NEXT> $ z0 = $ r4 equal \ `` authentication methods\ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r8 = r0 read element value class \ `` ljava lang string \ `` <NEXT> $ r9 = java lang string $ r8 <NEXT> $ r2 set authentication method $ r9 <NEXT> goto label3 <NEXT> label $ r10 = microsoft exchange webservices data core enumeration misc xml namespace autodiscover <NEXT> $ z2 = r0 be end element $ r10 \ `` web client url\ `` <NEXT> if $ z2 == 0 goto label1 <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r5 = r0 get local name <NEXT> $ z1 = $ r5 equal \ `` url\ `` <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r6 = r0 read element value class \ `` ljava lang string \ `` <NEXT> $ r7 = java lang string $ r6 <NEXT> $ r2 set url $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 have attribute <NEXT> microsoft exchange webservices data core ew utility ews assert $ z0 \ `` exchange server version parse\ <NEXT> $ r2 = new microsoft exchange webservices data core exchange server info <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = r0 read attribute value class \ `` ljava lang integer \ <NEXT> $ r4 = java lang integer $ r3 <NEXT> $ i0 = $ r4 int value <NEXT> $ r2 major version = $ i0 <NEXT> $ r5 = r0 read attribute value class \ `` ljava lang integer \ <NEXT> $ r6 = java lang integer $ r5 <NEXT> $ i1 = $ r6 int value <NEXT> $ r2 minor version = $ i1 <NEXT> $ r7 = r0 read attribute value class \ `` ljava lang integer \ <NEXT> $ r8 = java lang integer $ r7 <NEXT> $ i2 = $ r8 int value <NEXT> $ r2 major build number = $ i2 <NEXT> $ r9 = r0 read attribute value class \ `` ljava lang integer \ <NEXT> $ r10 = java lang integer $ r9 <NEXT> $ i3 = $ r10 int value <NEXT> $ r2 minor build number = $ i3 <NEXT> $ r11 = r0 read attribute value \ `` version\ `` <NEXT> $ r2 version string = $ r11 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r11 = new microsoft exchange webservices data core request move folder request <NEXT> $ r6 = microsoft exchange webservices data core enumeration service error service error handle throw on error <NEXT> r12 = microsoft exchange webservices data core exchange service r0 <NEXT> specialinvoke r11 < init > r12 $ r6 <NEXT> r11 set destination folder id r2 <NEXT> $ r7 = r11 get folder id <NEXT> $ r7 add r1 <NEXT> r4 = r11 execute <NEXT> $ r8 = r4 get response at index 0 <NEXT> $ r9 = microsoft exchange webservices data core response move copy folder response $ r8 <NEXT> $ r10 = $ r9 get folder <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = microsoft exchange webservices data core exchange service r0 <NEXT> r9 = java util concurrent future r1 <NEXT> $ r3 = microsoft exchange webservices data misc async request result extract service request r8 r9 <NEXT> r2 = microsoft exchange webservices data core request sync folder hierarchy request $ r3 <NEXT> $ r4 = r2 end execute r1 <NEXT> $ r5 = $ r4 get response at index 0 <NEXT> $ r6 = microsoft exchange webservices data core response sync folder hierarchy response $ r5 <NEXT> $ r7 = $ r6 get change <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> microsoft exchange webservices data core ew utility validate param r1 \ `` id\ `` <NEXT> r10 = new java util array list <NEXT> specialinvoke r10 < init > <NEXT> r10 add r1 <NEXT> $ r6 = microsoft exchange webservices data core enumeration service error service error handle throw on error <NEXT> r11 = microsoft exchange webservices data core exchange service r0 <NEXT> r4 = specialinvoke r11 internal convert id r10 r2 $ r6 <NEXT> $ r7 = r4 get response at index 0 <NEXT> $ r8 = microsoft exchange webservices data core response convert id response $ r7 <NEXT> $ r9 = $ r8 get convert id <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label microsoft exchange webservices data core ew utility ews assert $ z0 \ `` exchange service load property for user configuration\ <NEXT> r7 = new microsoft exchange webservices data core request get user configuration request <NEXT> r8 = microsoft exchange webservices data core exchange service r0 <NEXT> specialinvoke r7 < init > r8 <NEXT> r7 set user configuration r1 <NEXT> r9 = java lang enum r2 <NEXT> $ r5 = java util enum set of r9 <NEXT> r7 set property $ r5 <NEXT> r7 execute <NEXT> return <NEXT> if r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = microsoft exchange webservices data core property bag r0 <NEXT> $ r4 = r6 property <NEXT> $ z0 = $ r4 contain key r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = microsoft exchange webservices data core property bag r0 <NEXT> $ r5 = r7 property <NEXT> r3 = $ r5 get r1 <NEXT> r2 set param r3 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 set param null <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = microsoft exchange webservices data core request simple service request base r0 <NEXT> r12 validate <NEXT> r13 = microsoft exchange webservices data core request simple service request base r0 <NEXT> r2 = r13 build ews http web request <NEXT> r9 = new microsoft exchange webservices data misc async executor <NEXT> specialinvoke r9 < init > <NEXT> r10 = new microsoft exchange webservices data misc callable method <NEXT> specialinvoke r10 < init > r2 <NEXT> r14 = java util concurrent callable r10 <NEXT> r5 = r9 submit r14 r1 <NEXT> r9 shutdown <NEXT> r11 = new microsoft exchange webservices data misc async request result <NEXT> specialinvoke r11 < init > r0 r2 r5 null <NEXT> return r11 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new microsoft exchange webservices data property complex folder id <NEXT> specialinvoke $ r2 < init > r1 <NEXT> $ r3 = microsoft exchange webservices data core property set get first class property <NEXT> $ r4 = microsoft exchange webservices data core service folder calendar folder bind r0 $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = r0 bind to item class \ `` lmicrosoft exchange webservices data core service item post item \ <NEXT> $ r4 = microsoft exchange webservices data core service item post item $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = microsoft exchange webservices data notification stream subscription connection r0 <NEXT> $ r2 = r3 on subscription error <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = microsoft exchange webservices data property complex delegate permission r0 <NEXT> $ r1 = r5 delegate folder permission <NEXT> $ r2 = $ r1 get \ `` calendar folder permission level\ `` <NEXT> $ r3 = microsoft exchange webservices data property complex delegate permission $ delegate folder permission $ r2 <NEXT> $ r4 = $ r3 get permission level <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new microsoft exchange webservices data property complex folder id <NEXT> specialinvoke r5 < init > r1 <NEXT> r7 = microsoft exchange webservices data property complex folder id collection r0 <NEXT> r8 = microsoft exchange webservices data property complex complex property r5 <NEXT> $ z0 = r7 contain r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` the id be already in the list \ `` <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r9 = microsoft exchange webservices data property complex folder id collection r0 <NEXT> r10 = microsoft exchange webservices data property complex complex property r5 <NEXT> r9 internal add r10 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = microsoft exchange webservices data property complex recurrence day of the week collection r0 <NEXT> $ r1 = r4 item <NEXT> $ r2 = $ r1 get i0 <NEXT> $ r3 = microsoft exchange webservices data core enumeration property time day of the week $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 setup recurrence r1 <NEXT> r3 = microsoft exchange webservices data property complex recurrence range end date recurrence range r0 <NEXT> $ r2 = r3 end date <NEXT> r1 set end date $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = microsoft exchange webservices data property definition extend property definition r0 <NEXT> $ r1 = r2 property set <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == r1 goto label1 <NEXT> if r0 == null goto label2 <NEXT> if r1 == null goto label2 <NEXT> $ r2 = r0 get uri <NEXT> $ r3 = r1 get uri <NEXT> $ z0 = $ r2 equal ignore case $ r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r0 index <NEXT> $ r4 = r1 index <NEXT> $ z1 = $ r5 equal ignore case $ r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new gate creole annic apache lucene search hit <NEXT> r5 = gate creole annic apache lucene search searcher r0 <NEXT> specialinvoke r4 < init > r5 r1 r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ i1 = i0 | 4096 <NEXT> r7 = org codehaus groovy ast class node r0 <NEXT> r6 = r7 add method r1 $ i1 r2 r3 r4 r5 <NEXT> r6 set synthetic 1 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> i0 = @ parameter3 <NEXT> r3 = @ parameter4 <NEXT> z0 = @ parameter5 <NEXT> z1 = @ parameter6 <NEXT> z2 = @ parameter7 <NEXT> $ r4 = org codehaus groovy vmplugin v7 indy interface select_method <NEXT> $ r5 = org codehaus groovy vmplugin v7 indy interface make r0 r1 r2 i0 r3 z0 z1 z2 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = r1 next r0 r2 <NEXT> $ r4 = org hibernate engine internal versioning log <NEXT> $ z0 = $ r4 be trace enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = org hibernate engine internal versioning log <NEXT> $ r6 = r2 get factory <NEXT> $ r7 = r1 to loggable string r0 $ r6 <NEXT> $ r8 = r2 get factory <NEXT> $ r9 = r1 to loggable string r3 $ r8 <NEXT> $ r5 tracef \ `` incrementing % s to % s\ <NEXT> label return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = new org hibernate engine jdbc env internal lob creator builder impl <NEXT> $ z0 = org hibernate engine jdbc env internal lob creator builder impl use contextual lob creation r0 r1 r2 <NEXT> specialinvoke $ r3 < init > $ z0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = org hibernate loader abstract entity join walker r0 <NEXT> $ z0 = r4 be join fetch enable in map r2 r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> i0 = @ parameter3 <NEXT> $ r5 = r2 get name parameter <NEXT> r12 = org hibernate param positional parameter specification r0 <NEXT> $ i1 = r12 label <NEXT> $ r6 = java lang integer to string $ i1 <NEXT> $ r7 = $ r5 get $ r6 <NEXT> r4 = org hibernate engine spi type value $ r7 <NEXT> $ r8 = r4 get type <NEXT> $ r9 = r4 get value <NEXT> $ r8 null safe set r1 $ r9 i0 r3 <NEXT> $ r10 = r4 get type <NEXT> $ r11 = r3 get factory <NEXT> r13 = org hibernate engine spi map $ r11 <NEXT> $ i2 = $ r10 get column span r13 <NEXT> return $ i2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get collection definition <NEXT> $ r3 = $ r2 get collection persister <NEXT> r1 = org hibernate persister collection queryable collection $ r3 <NEXT> $ r4 = r0 get source <NEXT> $ r5 = r1 get owner entity persister <NEXT> $ r6 = org hibernate persister entity outer join loadable $ r5 <NEXT> $ r7 = r1 get element type <NEXT> $ r8 = org hibernate type composite type $ r7 <NEXT> $ r9 = r1 get table name <NEXT> $ r10 = r1 get element column name <NEXT> $ r11 = org hibernate persister walk internal composition singular sub attribute helper get singular sub attribute $ r4 $ r6 $ r8 $ r9 $ r10 <NEXT> return $ r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = com fasterxml jackson databind deser bean deserializer base r0 <NEXT> $ r3 = r4 deserialize from object r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r13 = com fasterxml jackson databind deser bean deserializer base r0 <NEXT> r3 = specialinvoke r13 _delegate deserializer <NEXT> if r3 == null goto label2 <NEXT> r14 = com fasterxml jackson databind deser bean deserializer base r0 <NEXT> $ r8 = r14 _value instantiator <NEXT> $ z0 = $ r8 can create from boolean <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r15 = com fasterxml jackson databind deser bean deserializer base r0 <NEXT> $ r9 = r15 _value instantiator <NEXT> $ r10 = r3 deserialize r1 r2 <NEXT> r12 = $ r9 create use delegate r2 $ r10 <NEXT> r16 = com fasterxml jackson databind deser bean deserializer base r0 <NEXT> $ r11 = r16 _injectables <NEXT> if $ r11 == null goto label1 <NEXT> r17 = com fasterxml jackson databind deser bean deserializer base r0 <NEXT> r17 inject value r2 r12 <NEXT> label return r12 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r4 = r1 get current token <NEXT> $ r5 = com fasterxml jackson core json token value_true <NEXT> if $ r4 ! = $ r5 goto label3 <NEXT> $ z1 = 1 <NEXT> goto label4 <NEXT> label r18 = com fasterxml jackson databind deser bean deserializer base r0 <NEXT> $ r6 = r18 _value instantiator <NEXT> $ r7 = $ r6 create from boolean r2 $ z1 <NEXT> return $ r7 <NEXT> if $ r4 ! = $ r5 goto label3 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get raw class <NEXT> $ z0 = r2 be primitive <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r4 = java lang boolean type <NEXT> if r2 ! = $ r4 goto label1 <NEXT> $ r9 = com fasterxml jackson databind introspect basic class introspector boolean_desc <NEXT> return $ r9 <NEXT> if r2 ! = $ r4 goto label1 <NEXT> label $ r5 = java lang integer type <NEXT> if r2 ! = $ r5 goto label2 <NEXT> $ r8 = com fasterxml jackson databind introspect basic class introspector int_desc <NEXT> return $ r8 <NEXT> if r2 ! = $ r5 goto label2 <NEXT> label $ r6 = java lang long type <NEXT> if r2 ! = $ r6 goto label4 <NEXT> $ r7 = com fasterxml jackson databind introspect basic class introspector long_desc <NEXT> return $ r7 <NEXT> if r2 ! = $ r6 goto label4 <NEXT> label return null <NEXT> if $ z0 == 0 goto label3 <NEXT> label if r2 ! = class \ `` ljava lang string \ `` goto label4 <NEXT> $ r3 = com fasterxml jackson databind introspect basic class introspector string_desc <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com fasterxml jackson databind ser container serializer r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r7 = com fasterxml jackson databind ser std std delegate serializer r0 <NEXT> r5 = r7 convert value r1 <NEXT> r8 = com fasterxml jackson databind ser std std delegate serializer r0 <NEXT> r6 = r8 _delegate serializer <NEXT> if r6 ! = null goto label1 <NEXT> r9 = com fasterxml jackson databind ser std std delegate serializer r0 <NEXT> r6 = r9 _find serializer r1 r3 <NEXT> label r6 serialize with type r5 r2 r3 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = r2 get upper bound <NEXT> $ r5 = $ r4 [ 0 ] <NEXT> r7 = com fasterxml jackson databind type type factory r0 <NEXT> $ r6 = r7 _from any r1 $ r5 r3 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com fasterxml jackson databind ser basic serializer factory r0 <NEXT> $ r2 = r5 _factory config <NEXT> $ r3 = $ r2 with serializer modifier r1 <NEXT> r6 = com fasterxml jackson databind ser basic serializer factory r0 <NEXT> $ r4 = r6 with config $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = com fasterxml jackson databind ser std token buffer serializer r0 <NEXT> $ r3 = r4 create schema node \ `` any\ <NEXT> r5 = com fasterxml jackson databind json node $ r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = new com github javaparser ast body annotation declaration <NEXT> $ r5 = com github javaparser ast modifier create modifier list r2 <NEXT> specialinvoke r7 < init > $ r5 r1 <NEXT> r8 = com github javaparser ast compilation unit r0 <NEXT> $ r6 = r8 get type <NEXT> r9 = com github javaparser ast node r7 <NEXT> $ r6 add r9 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = com github javaparser printer configuration pretty printer configuration r0 <NEXT> $ r3 = r7 get indentation <NEXT> $ r4 = com github javaparser utils utils assert not null r1 <NEXT> $ r5 = com github javaparser printer configuration indentation $ indent type $ r4 <NEXT> r2 = $ r3 set type $ r5 <NEXT> r8 = com github javaparser printer configuration pretty printer configuration r0 <NEXT> r8 set indentation r2 <NEXT> r9 = com github javaparser printer configuration pretty printer configuration r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r5 = new com github javaparser printer configuration default configuration option <NEXT> $ r2 = com github javaparser printer configuration default printer configuration $ config option max_enum_constants_to_align_horizontally <NEXT> $ r3 = java lang integer value of i0 <NEXT> specialinvoke r5 < init > $ r2 $ r3 <NEXT> r6 = com github javaparser printer configuration pretty printer configuration r0 <NEXT> r7 = com github javaparser printer configuration configuration option r5 <NEXT> r6 add option r7 <NEXT> r8 = com github javaparser printer configuration pretty printer configuration r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 <NEXT> z2 = 0 <NEXT> label r2 = com github javaparser symbolsolver javaparser navigator demand parent node r2 <NEXT> $ z3 = r2 instanceof com github javaparser ast body body declaration <NEXT> if $ z3 == 0 goto label3 <NEXT> $ z1 = r2 instanceof com github javaparser ast body type declaration <NEXT> if $ z1 == 0 goto label2 <NEXT> return r2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label z2 = 1 <NEXT> goto label1 <NEXT> if $ z3 == 0 goto label3 <NEXT> label $ z0 = r2 instanceof com github javaparser ast expr object creation expr <NEXT> if $ z0 == 0 goto label1 <NEXT> if z2 == 0 goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = r1 <NEXT> z3 = 0 <NEXT> label r7 = com github javaparser symbolsolver javaparser navigator demand parent node r7 <NEXT> $ z4 = r7 instanceof com github javaparser ast body body declaration <NEXT> if $ z4 == 0 goto label3 <NEXT> $ z1 = r7 instanceof com github javaparser ast body type declaration <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r3 = com github javaparser ast body type declaration r7 <NEXT> $ r4 = $ r3 get fully qualify name <NEXT> $ r5 = $ r4 get <NEXT> $ r6 = java lang string $ r5 <NEXT> $ z2 = $ r6 end with r2 <NEXT> if $ z2 == 0 goto label2 <NEXT> return r7 <NEXT> if $ z2 == 0 goto label2 <NEXT> label z3 = 1 <NEXT> goto label1 <NEXT> if $ z4 == 0 goto label3 <NEXT> label $ z0 = r7 instanceof com github javaparser ast expr object creation expr <NEXT> if $ z0 == 0 goto label1 <NEXT> if z3 == 0 goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r1 instanceof com github javaparser symbolsolver javaparsermodel declaration java parser class declaration <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r25 = com github javaparser symbolsolver javaparsermodel declaration java parser class declaration r1 <NEXT> r27 = $ r25 get context <NEXT> $ r26 = r27 solve symbol r2 <NEXT> return $ r26 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 instanceof com github javaparser symbolsolver javaparsermodel declaration java parser interface declaration <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r23 = com github javaparser symbolsolver javaparsermodel declaration java parser interface declaration r1 <NEXT> r28 = $ r23 get context <NEXT> $ r24 = r28 solve symbol r2 <NEXT> return $ r24 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r1 instanceof com github javaparser symbolsolver javaparsermodel declaration java parser enum declaration <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r21 = com github javaparser symbolsolver javaparsermodel declaration java parser enum declaration r1 <NEXT> r29 = $ r21 get context <NEXT> $ r22 = r29 solve symbol r2 <NEXT> return $ r22 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = r1 instanceof com github javaparser symbolsolver reflectionmodel reflection class declaration <NEXT> if $ z3 == 0 goto label4 <NEXT> $ r19 = com github javaparser symbolsolver reflectionmodel reflection class declaration r1 <NEXT> r31 = com github javaparser symbolsolver resolution symbol solver r0 <NEXT> $ r18 = r31 type solver <NEXT> $ r20 = $ r19 solve symbol r2 $ r18 <NEXT> return $ r20 <NEXT> if $ z3 == 0 goto label4 <NEXT> label $ z4 = r1 instanceof com github javaparser symbolsolver reflectionmodel reflection interface declaration <NEXT> if $ z4 == 0 goto label5 <NEXT> $ r16 = com github javaparser symbolsolver reflectionmodel reflection interface declaration r1 <NEXT> r32 = com github javaparser symbolsolver resolution symbol solver r0 <NEXT> $ r15 = r32 type solver <NEXT> $ r17 = $ r16 solve symbol r2 $ r15 <NEXT> return $ r17 <NEXT> if $ z4 == 0 goto label5 <NEXT> label $ z5 = r1 instanceof com github javaparser symbolsolver reflectionmodel reflection enum declaration <NEXT> if $ z5 == 0 goto label6 <NEXT> $ r13 = com github javaparser symbolsolver reflectionmodel reflection enum declaration r1 <NEXT> r30 = $ r13 get enum constant r2 <NEXT> r33 = com github javaparser resolution declaration resolve declaration r30 <NEXT> $ r14 = com github javaparser symbolsolver model resolution symbol reference solve r33 <NEXT> return $ r14 <NEXT> if $ z5 == 0 goto label6 <NEXT> label $ z6 = r1 instanceof com github javaparser symbolsolver javassistmodel javassist class declaration <NEXT> if $ z6 == 0 goto label7 <NEXT> $ r11 = com github javaparser symbolsolver javassistmodel javassist class declaration r1 <NEXT> r34 = com github javaparser symbolsolver resolution symbol solver r0 <NEXT> $ r10 = r34 type solver <NEXT> $ r12 = $ r11 solve symbol r2 $ r10 <NEXT> return $ r12 <NEXT> if $ z6 == 0 goto label7 <NEXT> label $ z7 = r1 instanceof com github javaparser symbolsolver javassistmodel javassist enum declaration <NEXT> if $ z7 == 0 goto label8 <NEXT> $ r8 = com github javaparser symbolsolver javassistmodel javassist enum declaration r1 <NEXT> r35 = com github javaparser symbolsolver resolution symbol solver r0 <NEXT> $ r7 = r35 type solver <NEXT> $ r9 = $ r8 solve symbol r2 $ r7 <NEXT> return $ r9 <NEXT> if $ z7 == 0 goto label8 <NEXT> label $ z8 = r1 instanceof com github javaparser symbolsolver javassistmodel javassist interface declaration <NEXT> if $ z8 == 0 goto label9 <NEXT> $ r5 = com github javaparser symbolsolver javassistmodel javassist interface declaration r1 <NEXT> r36 = com github javaparser symbolsolver resolution symbol solver r0 <NEXT> $ r4 = r36 type solver <NEXT> $ r6 = $ r5 solve symbol r2 $ r4 <NEXT> return $ r6 <NEXT> if $ z8 == 0 goto label9 <NEXT> label $ r3 = com github javaparser symbolsolver model resolution symbol reference unsolved class \ `` lcom github javaparser resolution declaration resolve value declaration \ `` <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 path \ `` id\ `` <NEXT> $ r3 = com github fge jsonschema core load configuration load configuration builder bundle <NEXT> $ z0 = r2 be textual <NEXT> $ r3 check argument $ z0 \ `` load cfg no i d in schema\ `` <NEXT> $ r4 = r2 text value <NEXT> r6 = com github fge jsonschema core load configuration load configuration builder r0 <NEXT> $ r5 = r6 preload schema $ r4 r1 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache log log4j core config builder impl default configuration builder r0 <NEXT> r2 source = r1 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse aether default repository system session r0 <NEXT> specialinvoke r2 fail if read only <NEXT> r3 = org eclipse aether default repository system session r0 <NEXT> r3 dependency graph transformer = r1 <NEXT> r4 = org eclipse aether default repository system session r0 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r1 get proxy <NEXT> if r2 == null goto label1 <NEXT> $ r7 = r2 get authentication <NEXT> goto label2 <NEXT> label $ r3 = org eclipse aether repository authentication context new instance r0 r1 r2 $ r7 <NEXT> return $ r3 <NEXT> if r2 == null goto label1 <NEXT> label $ r7 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 == null goto label2 <NEXT> r8 = org eclipse aether resolution version range result r0 <NEXT> $ r3 = r8 repository <NEXT> $ z0 = $ r3 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = new java util hash map <NEXT> specialinvoke r7 < init > <NEXT> r9 = org eclipse aether resolution version range result r0 <NEXT> r9 repository = r7 <NEXT> label r10 = org eclipse aether resolution version range result r0 <NEXT> $ r4 = r10 repository <NEXT> $ r4 put r1 r2 <NEXT> label r11 = org eclipse aether resolution version range result r0 <NEXT> return r11 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return r1 <NEXT> if r0 ! = null goto label1 <NEXT> label if r1 == null goto label2 <NEXT> $ z0 = r1 equal r0 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r0 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r4 = new org eclipse aether util graph traverser and dependency traverser <NEXT> $ r3 = newarray org eclipse aether collection dependency traverser [ 2 ] <NEXT> $ r3 [ 0 ] = r0 <NEXT> $ r3 [ 1 ] = r1 <NEXT> specialinvoke r4 < init > $ r3 <NEXT> r5 = org eclipse aether collection dependency traverser r4 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> org eclipse microprofile reactive stream operator spi reactive stream factory resolver instance = r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> io netty util internal object util check not null r1 \ `` channel\ `` <NEXT> $ r4 = r1 new promise <NEXT> r6 = io netty handler codec http websocketx web socket client handshaker r0 <NEXT> $ r5 = r6 close r1 r2 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r10 = r1 header <NEXT> $ r11 = io netty handler codec http http header name sec_websocket_key <NEXT> r47 = java lang char sequence $ r11 <NEXT> r3 = $ r10 get r47 <NEXT> if r3 ! = null goto label1 <NEXT> r44 = new io netty handler codec http websocketx web socket server handshake exception <NEXT> r48 = io netty handler codec http http request r1 <NEXT> specialinvoke r44 < init > \ `` not a web socket request miss key\ <NEXT> r49 = java lang throwable r44 <NEXT> throw r49 <NEXT> if r3 ! = null goto label1 <NEXT> label r45 = new io netty handler codec http default full http response <NEXT> $ r13 = io netty handler codec http http version http_1_1 <NEXT> $ r14 = io netty handler codec http http response status switching_protocols <NEXT> $ r15 = r1 content <NEXT> $ r16 = $ r15 alloc <NEXT> $ r17 = $ r16 buffer 0 <NEXT> specialinvoke r45 < init > $ r13 $ r14 $ r17 <NEXT> if r2 == null goto label2 <NEXT> r50 = io netty handler codec http full http response r45 <NEXT> $ r41 = r50 header <NEXT> $ r41 add r2 <NEXT> label r46 = new java lang string builder <NEXT> specialinvoke r46 < init > <NEXT> $ r19 = r46 append r3 <NEXT> $ r20 = $ r19 append \ `` 258eafa5-e914-47da-95ca-c5ab0dc85b11\ `` <NEXT> r5 = $ r20 to string <NEXT> $ r21 = io netty util charset util us_ascii <NEXT> $ r22 = r5 get bytes $ r21 <NEXT> r6 = io netty handler codec http websocketx web socket util sha1 $ r22 <NEXT> r7 = io netty handler codec http websocketx web socket util base64 r6 <NEXT> $ r23 = io netty handler codec http websocketx web socket server handshaker08 logger <NEXT> $ z0 = $ r23 be debug enabled <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r40 = io netty handler codec http websocketx web socket server handshaker08 logger <NEXT> $ r40 debug \ `` web socket version 08 server handshake key { } response { } \ <NEXT> label r51 = io netty handler codec http full http response r45 <NEXT> $ r24 = r51 header <NEXT> $ r26 = io netty handler codec http http header name upgrade <NEXT> $ r25 = io netty handler codec http http header value websocket <NEXT> r52 = java lang char sequence $ r26 <NEXT> $ r27 = $ r24 set r52 $ r25 <NEXT> $ r29 = io netty handler codec http http header name connection <NEXT> $ r28 = io netty handler codec http http header value upgrade <NEXT> r53 = java lang char sequence $ r29 <NEXT> $ r30 = $ r27 set r53 $ r28 <NEXT> $ r31 = io netty handler codec http http header name sec_websocket_accept <NEXT> r54 = java lang char sequence $ r31 <NEXT> $ r30 set r54 r7 <NEXT> $ r33 = r1 header <NEXT> $ r34 = io netty handler codec http http header name sec_websocket_protocol <NEXT> r55 = java lang char sequence $ r34 <NEXT> r8 = $ r33 get r55 <NEXT> if r8 == null goto label5 <NEXT> r56 = io netty handler codec http websocketx web socket server handshaker08 r0 <NEXT> r9 = r56 select subprotocol r8 <NEXT> if r9 ! = null goto label4 <NEXT> $ r38 = io netty handler codec http websocketx web socket server handshaker08 logger <NEXT> $ z1 = $ r38 be debug enabled <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r39 = io netty handler codec http websocketx web socket server handshaker08 logger <NEXT> $ r39 debug \ `` request subprotocol s not support { } \ <NEXT> goto label5 <NEXT> label r59 = io netty handler codec http full http response r45 <NEXT> return r59 <NEXT> if r9 ! = null goto label4 <NEXT> label r57 = io netty handler codec http full http response r45 <NEXT> $ r35 = r57 header <NEXT> $ r36 = io netty handler codec http http header name sec_websocket_protocol <NEXT> r58 = java lang char sequence $ r36 <NEXT> $ r35 set r58 r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io netty util concurrent fast thread local thread r0 <NEXT> r2 thread local map = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = io netty util internal logging jdk logger r0 <NEXT> $ r5 = r10 logger <NEXT> $ r4 = java util log level fine <NEXT> $ z0 = $ r5 be loggable $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = io netty util internal logging message formatter format r1 r2 <NEXT> $ r6 = io netty util internal logging jdk logger self <NEXT> $ r7 = java util log level fine <NEXT> $ r8 = r3 get message <NEXT> $ r9 = r3 get throwable <NEXT> r11 = io netty util internal logging jdk logger r0 <NEXT> specialinvoke r11 log $ r6 $ r7 $ r8 $ r9 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = io netty util internal logging jdk logger r0 <NEXT> $ r5 = r10 logger <NEXT> $ r4 = java util log level fine <NEXT> $ z0 = $ r5 be loggable $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = io netty util internal logging message formatter format r1 r2 <NEXT> $ r6 = io netty util internal logging jdk logger self <NEXT> $ r7 = java util log level fine <NEXT> $ r8 = r3 get message <NEXT> $ r9 = r3 get throwable <NEXT> r11 = io netty util internal logging jdk logger r0 <NEXT> specialinvoke r11 log $ r6 $ r7 $ r8 $ r9 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io netty util internal logging jdk logger r0 <NEXT> $ r3 = r6 logger <NEXT> $ r2 = java util log level info <NEXT> $ z0 = $ r3 be loggable $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = io netty util internal logging jdk logger self <NEXT> $ r4 = java util log level info <NEXT> r7 = io netty util internal logging jdk logger r0 <NEXT> specialinvoke r7 log $ r5 $ r4 r1 null <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = io netty util internal logging log4 j logger r0 <NEXT> $ z0 = r9 be trace enabled <NEXT> if $ z0 == 0 goto label3 <NEXT> r3 = io netty util internal logging message formatter format r1 r2 <NEXT> r10 = io netty util internal logging log4 j logger r0 <NEXT> $ r4 = r10 logger <NEXT> $ r5 = io netty util internal logging log4 j logger fqcn <NEXT> r11 = io netty util internal logging log4 j logger r0 <NEXT> $ z1 = r11 trace capable <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r8 = org apache log4j level trace <NEXT> goto label2 <NEXT> label $ r6 = r3 get message <NEXT> $ r7 = r3 get throwable <NEXT> r12 = org apache log4j priority $ r8 <NEXT> $ r4 log $ r5 r12 $ r6 $ r7 <NEXT> label return <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ r8 = org apache log4j level debug <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r11 = io netty util internal logging log4 j logger r0 <NEXT> $ r5 = r11 logger <NEXT> $ z0 = $ r5 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = io netty util internal logging message formatter format r1 r2 r3 <NEXT> r12 = io netty util internal logging log4 j logger r0 <NEXT> $ r6 = r12 logger <NEXT> $ r7 = io netty util internal logging log4 j logger fqcn <NEXT> $ r8 = org apache log4j level debug <NEXT> $ r9 = r4 get message <NEXT> $ r10 = r4 get throwable <NEXT> r13 = org apache log4j priority $ r8 <NEXT> $ r6 log $ r7 r13 $ r9 $ r10 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io netty util internal logging log4 j logger r0 <NEXT> $ r4 = r5 logger <NEXT> $ r3 = io netty util internal logging log4 j logger fqcn <NEXT> $ r2 = org apache log4j level error <NEXT> r6 = org apache log4j priority $ r2 <NEXT> $ r4 log $ r3 r6 r1 null <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> io netty util internal object util check not null r0 r1 <NEXT> $ i0 = lengthof r0 <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append r1 <NEXT> $ r5 = $ r4 append \ `` length\ `` <NEXT> $ r6 = $ r5 to string <NEXT> io netty util internal object util check positive $ i0 $ r6 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> $ l1 = r0 long value <NEXT> goto label2 <NEXT> label return $ l1 <NEXT> if r0 == null goto label1 <NEXT> label $ l1 = l0 <END>
<BEG> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ z0 = io netty util internal shade org jctools util pow2 be power of two i1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r0 = new java lang illegal argument exception <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` alignment must be a power of \ `` <NEXT> $ r3 = $ r2 append i1 <NEXT> $ r4 = $ r3 to string <NEXT> specialinvoke $ r0 < init > $ r4 <NEXT> throw $ r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ i2 = i1 - 1 <NEXT> $ l3 = long $ i2 <NEXT> $ l7 = l0 + $ l3 <NEXT> $ i4 = i1 - 1 <NEXT> $ i5 = $ i4 ^ -1 <NEXT> $ l6 = long $ i5 <NEXT> $ l8 = $ l7 & $ l6 <NEXT> return $ l8 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 < i1 goto label1 <NEXT> r2 = new java lang illegal argument exception <NEXT> specialinvoke r2 < init > <NEXT> throw r2 <NEXT> if i0 < i1 goto label1 <NEXT> label $ i2 = i1 - i0 <NEXT> r3 = io netty util internal thread local random r0 <NEXT> $ i3 = r3 next int $ i2 <NEXT> $ i4 = $ i3 + i0 <NEXT> return $ i4 <END>
<BEG> r0 = @ this <NEXT> $ r1 = io netty util internal internal thread local map get if set <NEXT> r2 = io netty util concurrent fast thread local r0 <NEXT> r2 remove $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = io netty handler ssl open ssl session stats r0 <NEXT> $ r3 = r7 context <NEXT> $ r4 = $ r3 ctx lock <NEXT> r1 = $ r4 read lock <NEXT> r1 lock <NEXT> label r8 = io netty handler ssl open ssl session stats r0 <NEXT> $ r5 = r8 context <NEXT> $ l1 = $ r5 ctx <NEXT> l0 = io netty internal tcnative s s l context session ticket key new $ l1 <NEXT> label r1 unlock <NEXT> return l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label $ r3 = io netty handler ssl ssl context to x509 certificate r1 <NEXT> r13 = io netty handler ssl ssl context builder r0 <NEXT> $ r4 = r13 trust manager $ r3 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = io netty handler ssl ssl handler r0 <NEXT> $ l0 = r1 close notify read timeout millis <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = io netty handler stream chunk file r0 <NEXT> $ l0 = r1 offset <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = lengthof r1 <NEXT> $ i1 = $ i0 % 48 <NEXT> if $ i1 == 0 goto label1 <NEXT> r15 = new java lang illegal argument exception <NEXT> specialinvoke r15 < init > \ `` key length % 48 ! = 0\ `` <NEXT> throw r15 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ i2 = lengthof r1 <NEXT> $ i3 = $ i2 48 <NEXT> r2 = newarray io netty internal tcnative session ticket key [ $ i3 ] <NEXT> i8 = 0 <NEXT> i9 = 0 <NEXT> label $ i4 = lengthof r2 <NEXT> if i8 > = $ i4 goto label3 <NEXT> r3 = java util array copy of range r1 i9 16 <NEXT> i10 = i9 + 16 <NEXT> r4 = java util array copy of range r1 i10 16 <NEXT> i11 = i8 + 16 <NEXT> r5 = java util array copy of range r1 i10 16 <NEXT> i9 = i10 + 16 <NEXT> r16 = new io netty internal tcnative session ticket key <NEXT> specialinvoke r16 < init > r3 r4 r5 <NEXT> r2 [ i11 ] = r16 <NEXT> i8 = i11 + 1 <NEXT> goto label2 <NEXT> if i8 > = $ i4 goto label3 <NEXT> label r17 = io netty handler ssl open ssl session context r0 <NEXT> $ r7 = r17 context <NEXT> $ r8 = $ r7 ctx lock <NEXT> r14 = $ r8 write lock <NEXT> r14 lock <NEXT> label r18 = io netty handler ssl open ssl session context r0 <NEXT> $ r9 = r18 context <NEXT> $ l6 = $ r9 ctx <NEXT> $ i5 = io netty internal tcnative ssl ssl_op_no_ticket <NEXT> io netty internal tcnative s s l context clear option $ l6 $ i5 <NEXT> r19 = io netty handler ssl open ssl session context r0 <NEXT> $ r10 = r19 context <NEXT> $ l7 = $ r10 ctx <NEXT> io netty internal tcnative s s l context set session ticket key $ l7 r2 <NEXT> label r14 unlock <NEXT> goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = io netty channel abstract coalesce buffer queue r0 <NEXT> $ r1 = r2 buf and listener pair <NEXT> $ z0 = $ r1 be empty <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose compression algorithm r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> $ r0 = com nimbusds jose crypto bc bouncy castle provider singleton bouncy castle provider <NEXT> if $ r0 == null goto label1 <NEXT> $ r3 = com nimbusds jose crypto bc bouncy castle provider singleton bouncy castle provider <NEXT> return $ r3 <NEXT> if $ r0 == null goto label1 <NEXT> label $ r1 = new org bouncycastle jce provider bouncy castle provider <NEXT> specialinvoke $ r1 < init > <NEXT> com nimbusds jose crypto bc bouncy castle provider singleton bouncy castle provider = $ r1 <NEXT> $ r2 = com nimbusds jose crypto bc bouncy castle provider singleton bouncy castle provider <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose crypto impl composite key r0 <NEXT> $ r1 = r2 enc key <NEXT> return $ r1 <END>
<BEG> i0 = @ parameter0 <NEXT> $ r1 = new java util link hash set <NEXT> specialinvoke $ r1 < init > <NEXT> if i0 < 256 goto label1 <NEXT> $ r5 = com nimbusds jose j w s algorithm hs256 <NEXT> $ r1 add $ r5 <NEXT> label if i0 < 384 goto label2 <NEXT> $ r4 = com nimbusds jose j w s algorithm hs384 <NEXT> $ r1 add $ r4 <NEXT> label if i0 < 512 goto label3 <NEXT> $ r3 = com nimbusds jose j w s algorithm hs512 <NEXT> $ r1 add $ r3 <NEXT> label $ r2 = java util collection unmodifiable set $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof com nimbusds jose j w s algorithm <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = com nimbusds jose j w s algorithm r0 <NEXT> $ z5 = com nimbusds jose jca j c a support be support $ r10 <NEXT> return $ z5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof com nimbusds jose j w e algorithm <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r9 = com nimbusds jose j w e algorithm r0 <NEXT> $ z4 = com nimbusds jose jca j c a support be support $ r9 <NEXT> return $ z4 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r0 instanceof com nimbusds jose encryption method <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r8 = com nimbusds jose encryption method r0 <NEXT> $ z3 = com nimbusds jose jca j c a support be support $ r8 <NEXT> return $ z3 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ r1 = new java lang illegal argument exception <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` unexpected algorithm class \ `` <NEXT> $ r4 = r0 get class <NEXT> $ r5 = $ r4 get canonical name <NEXT> $ r6 = $ r3 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke $ r1 < init > $ r7 <NEXT> throw $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof com nimbusds jose j w s algorithm <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = com nimbusds jose j w s algorithm r0 <NEXT> $ z5 = com nimbusds jose jca j c a support be support $ r10 <NEXT> return $ z5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof com nimbusds jose j w e algorithm <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r9 = com nimbusds jose j w e algorithm r0 <NEXT> $ z4 = com nimbusds jose jca j c a support be support $ r9 <NEXT> return $ z4 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r0 instanceof com nimbusds jose encryption method <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r8 = com nimbusds jose encryption method r0 <NEXT> $ z3 = com nimbusds jose jca j c a support be support $ r8 <NEXT> return $ z3 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ r1 = new java lang illegal argument exception <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` unexpected algorithm class \ `` <NEXT> $ r4 = r0 get class <NEXT> $ r5 = $ r4 get canonical name <NEXT> $ r6 = $ r3 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke $ r1 < init > $ r7 <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds jose jca j w e j c a context r0 <NEXT> r2 ce provider = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose j w e crypto part r0 <NEXT> $ r1 = r2 encrypt key <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose j w e object r0 <NEXT> $ r1 = r2 auth tag <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose jwk e c key r0 <NEXT> $ r1 = r2 x <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose jwk j w k matcher r0 <NEXT> $ r1 = r2 size bit <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = new java util link list <NEXT> specialinvoke r9 < init > <NEXT> if r1 ! = null goto label1 <NEXT> return r9 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r6 = r1 get key <NEXT> r3 = $ r6 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r7 = r3 next <NEXT> r4 = com nimbusds jose jwk jwk $ r7 <NEXT> r10 = com nimbusds jose jwk j w k selector r0 <NEXT> $ r8 = r10 matcher <NEXT> $ z1 = $ r8 match r4 <NEXT> if $ z1 == 0 goto label3 <NEXT> r9 add r4 <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return r9 <END>
<BEG> r0 = @ this <NEXT> r10 = new java util link list <NEXT> specialinvoke r10 < init > <NEXT> r12 = com nimbusds jose jwk j w k set r0 <NEXT> $ r6 = r12 key <NEXT> r2 = $ r6 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r9 = r2 next <NEXT> r3 = com nimbusds jose jwk jwk $ r9 <NEXT> r4 = r3 to public j w k <NEXT> if r4 == null goto label2 <NEXT> r10 add r4 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r11 = new com nimbusds jose jwk j w k set <NEXT> r13 = com nimbusds jose jwk j w k set r0 <NEXT> $ r8 = r13 custom member <NEXT> specialinvoke r11 < init > r10 $ r8 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose jwk key operation r0 <NEXT> $ r1 = r2 identifier <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose jwk r s a key r0 <NEXT> $ r1 = r2 dq <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose jwk r s a key r0 <NEXT> $ r1 = r2 qi <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = com nimbusds jose jwk source immutable secret r0 <NEXT> $ r1 = r6 get j w k set <NEXT> $ r2 = $ r1 get key <NEXT> $ r3 = $ r2 get 0 <NEXT> $ r4 = com nimbusds jose jwk octet sequence key $ r3 <NEXT> $ r5 = $ r4 to byte array <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jose jwk source j w k set with timestamp r0 <NEXT> $ r1 = r2 timestamp <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new com nimbusds jose util base64 <NEXT> $ r2 = com nimbusds jose util base64 codec encode to string r0 0 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new com nimbusds jose util base64 u r l <NEXT> $ r2 = com nimbusds jose util base64 codec encode to string r0 1 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = new javax crypto spec secret key spec <NEXT> $ r2 = r0 get encode <NEXT> specialinvoke $ r1 < init > $ r2 \ `` aes\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r2 = com nimbusds jose util x509 cert utils parse with exception r0 <NEXT> label return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com nimbusds jose util x509 cert utils to p e m string r0 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds jwt proc default j w t claim verifier r0 <NEXT> $ r1 = r2 exact match claim <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds oauth2 sdk a authorization server metadata r0 <NEXT> r2 introspection endpoint auth method = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk assertion assertion detail r0 <NEXT> $ r1 = r2 id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk assertion saml2 s a m l2 assertion detail r0 <NEXT> $ r1 = r2 subject format <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk auth p k i t l s client authentication r0 <NEXT> $ r1 = r2 cert subject d n <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk auth verifier context r0 <NEXT> $ r1 = r2 o <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = com nimbusds oauth2 sdk auth x509 certificate confirmation r0 <NEXT> r2 = r10 to j w t claim <NEXT> r9 = new com nimbusds jwt j w t claim set $ builder <NEXT> specialinvoke r9 < init > r1 <NEXT> $ r4 = r2 get key <NEXT> $ r5 = java lang string $ r4 <NEXT> $ r6 = r2 get value <NEXT> $ r7 = r9 claim $ r5 $ r6 <NEXT> $ r8 = $ r7 build <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk authorization code grant r0 <NEXT> $ r1 = r2 code <NEXT> return $ r1 <END>
<BEG> $ r0 = com nimbusds oauth2 sdk authorization error response std error <NEXT> $ r1 = java util collection unmodifiable set $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = com nimbusds oauth2 sdk authorization request r0 <NEXT> $ z0 = r5 specifies request object <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = new java lang illegal state exception <NEXT> specialinvoke r4 < init > \ `` can not create nested jwt secure authorization request\ `` <NEXT> throw r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = com nimbusds oauth2 sdk authorization request r0 <NEXT> $ r1 = r6 to parameter <NEXT> $ r2 = com nimbusds oauth2 sdk util j w t claim set utils to j w t claim set $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk authorization response r0 <NEXT> $ r1 = r2 issuer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk authorization success response r0 <NEXT> $ r1 = r2 access token <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk ciba c i b a request r0 <NEXT> $ r1 = r2 bind message <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com nimbusds oauth2 sdk ciba c i b a error response r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = com nimbusds oauth2 sdk ciba c i b a token delivery r0 <NEXT> $ r1 = r4 get tokens <NEXT> $ z0 = $ r1 instanceof com nimbusds openid connect sdk token o i d c token <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = com nimbusds oauth2 sdk ciba c i b a token delivery r0 <NEXT> $ r2 = r5 get tokens <NEXT> $ r3 = $ r2 to o i d c tokens <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r3 = null <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk client client information r0 <NEXT> $ r1 = r2 metadata <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r3 = java util collection singleton r1 <NEXT> goto label2 <NEXT> label r4 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r4 set redirection u r be $ r3 <NEXT> return <NEXT> if r1 == null goto label1 <NEXT> label $ r3 = null <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r1 = r2 get logo u r i null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> com nimbusds oauth2 sdk util u r i utils ensure scheme be h t t p sor h t t p r1 <NEXT> r4 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r2 = r4 tos u r i entry <NEXT> $ r2 put null r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r1 = r2 request object j w s alg <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r2 request object j w e alg = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r2 software i d = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r2 software version = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r1 = r2 authz j w e alg <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r1 = r2 back channel token delivery mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r20 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r1 = r20 response type <NEXT> if $ r1 ! = null goto label1 <NEXT> r18 = new java util hash set <NEXT> specialinvoke r18 < init > <NEXT> r21 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r21 response type = r18 <NEXT> r22 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r15 = r22 response type <NEXT> $ r16 = com nimbusds oauth2 sdk response type get default <NEXT> $ r15 add $ r16 <NEXT> label r23 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r2 = r23 grant type <NEXT> if $ r2 ! = null goto label2 <NEXT> r19 = new java util hash set <NEXT> specialinvoke r19 < init > <NEXT> r24 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r24 grant type = r19 <NEXT> r25 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r13 = r25 grant type <NEXT> $ r12 = com nimbusds oauth2 sdk grant type authorization_code <NEXT> $ r13 add $ r12 <NEXT> label r26 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r3 = r26 auth method <NEXT> if $ r3 ! = null goto label4 <NEXT> r27 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r7 = r27 grant type <NEXT> $ r6 = com nimbusds oauth2 sdk grant type implicit <NEXT> $ z0 = $ r7 contain $ r6 <NEXT> if $ z0 == 0 goto label3 <NEXT> r28 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r9 = r28 grant type <NEXT> $ i0 = $ r9 size <NEXT> if $ i0 ! = 1 goto label3 <NEXT> $ r10 = com nimbusds oauth2 sdk auth client authentication method none <NEXT> r29 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r29 auth method = $ r10 <NEXT> goto label4 <NEXT> label r31 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r17 = r31 authz j w e alg <NEXT> if $ r17 == null goto label5 <NEXT> r32 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> $ r4 = r32 authz j w e enc <NEXT> if $ r4 ! = null goto label5 <NEXT> $ r5 = com nimbusds jose encryption method a128cbc_hs256 <NEXT> r33 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r33 authz j w e enc = $ r5 <NEXT> label return <NEXT> if $ i0 ! = 1 goto label3 <NEXT> label $ r8 = com nimbusds oauth2 sdk auth client authentication method get default <NEXT> r30 = com nimbusds oauth2 sdk client client metadata r0 <NEXT> r30 auth method = $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk device device authorization success response r0 <NEXT> $ r1 = r2 get verification u r i <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = com nimbusds oauth2 sdk dpop j w k thumbprint confirmation r0 <NEXT> r2 = r10 to j w t claim <NEXT> r9 = new com nimbusds jwt j w t claim set $ builder <NEXT> specialinvoke r9 < init > r1 <NEXT> $ r4 = r2 get key <NEXT> $ r5 = java lang string $ r4 <NEXT> $ r6 = r2 get value <NEXT> $ r7 = r9 claim $ r5 $ r6 <NEXT> $ r8 = $ r7 build <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk dpop verifier default d po p single use checker r0 <NEXT> $ r1 = r2 cache j t be <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk dpop verifier default d po p single use checker r0 <NEXT> $ r1 = r2 timer <NEXT> $ r1 cancel <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk general exception r0 <NEXT> $ r1 = r2 error <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk http h t t p request r0 <NEXT> $ r1 = r2 fragment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds oauth2 sdk http h t t p request r0 <NEXT> r2 fragment = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk http h t t p request r0 <NEXT> $ r1 = r2 client x509 certificate <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r7 = java util collection empty list <NEXT> return $ r7 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r4 = new java util array list <NEXT> $ i0 = r0 size <NEXT> specialinvoke $ r4 < init > $ i0 <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = com nimbusds oauth2 sdk id identifier $ r5 <NEXT> $ r6 = r3 get value <NEXT> $ r4 add $ r6 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk request object p o s t request r0 <NEXT> $ r1 = r2 request j s o n object <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 implies implicit flow <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = r0 implies hybrid flow <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r1 = com nimbusds oauth2 sdk response mode fragment_jwt <NEXT> return $ r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r2 = com nimbusds oauth2 sdk response mode query_jwt <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk token tokens r0 <NEXT> $ r1 = r2 refresh token <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk token token scheme error r0 <NEXT> $ r1 = r2 realm <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk tokenexchange token exchange grant r0 <NEXT> $ r1 = r2 audience <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk token introspection request r0 <NEXT> $ r1 = r2 client authz <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com nimbusds oauth2 sdk token introspection error response r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds oauth2 sdk token request r0 <NEXT> $ r1 = r2 exist grant <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com nimbusds oauth2 sdk util date simple date r0 <NEXT> $ i0 = r1 day <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = new java net uri <NEXT> $ r3 = r0 get scheme <NEXT> $ r4 = r0 get host <NEXT> $ i0 = r0 get port <NEXT> $ r5 = r0 get path <NEXT> specialinvoke $ r2 < init > $ r3 null $ r4 $ i0 $ r5 null null <NEXT> label return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 get value <NEXT> r3 = com nimbusds openid connect sdk assurance claim birthplace r0 <NEXT> r3 set claim \ `` country\ <NEXT> goto label2 <NEXT> label return <NEXT> if r1 == null goto label1 <NEXT> label r4 = com nimbusds openid connect sdk assurance claim birthplace r0 <NEXT> r4 set claim \ `` country\ <END>
<BEG> r0 = @ this <NEXT> $ r1 = com nimbusds openid connect sdk assurance claim i s o3166_3 country code r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> com nimbusds openid connect sdk assurance claim i s o3166_1 alpha country code mapper lazy load map_3_2 <NEXT> $ r2 = com nimbusds openid connect sdk assurance claim i s o3166_1 alpha country code mapper map_3_2 <NEXT> $ r3 = r0 get value <NEXT> r1 = $ r2 get property $ r3 <NEXT> if r1 == null goto label1 <NEXT> $ r4 = new com nimbusds openid connect sdk assurance claim i s o3166_1 alpha2 country code <NEXT> specialinvoke $ r4 < init > r1 <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if r1 == null goto label1 <NEXT> label $ r4 = null <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance evidence attachment attachment r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com nimbusds openid connect sdk assurance evidence attachment embed attachment r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance evidence attachment content r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance evidence attestation r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance evidence document evidence r0 <NEXT> $ r1 = r2 time <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance evidence electronic signature evidence r0 <NEXT> $ r1 = r2 signature type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance evidence electronic signature evidence r0 <NEXT> $ r1 = r2 issuer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r27 = new net minidev json j s o n object <NEXT> specialinvoke r27 < init > <NEXT> r29 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r4 = r29 get type <NEXT> $ r5 = $ r4 get value <NEXT> r27 put \ `` type\ <NEXT> r30 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r7 = r30 get number <NEXT> if $ r7 == null goto label1 <NEXT> r31 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r25 = r31 get number <NEXT> r27 put \ `` number\ <NEXT> label r28 = new net minidev json j s o n object <NEXT> specialinvoke r28 < init > <NEXT> r32 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r9 = r32 get issuer name <NEXT> if $ r9 == null goto label2 <NEXT> r33 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r23 = r33 get issuer name <NEXT> r28 put \ `` name\ <NEXT> label r34 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r10 = r34 get issuer country <NEXT> if $ r10 == null goto label3 <NEXT> r35 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r20 = r35 get issuer country <NEXT> $ r21 = $ r20 get value <NEXT> r28 put \ `` country\ <NEXT> label $ z0 = r28 be empty <NEXT> if $ z0 ! = 0 goto label4 <NEXT> r27 put \ `` issuer\ <NEXT> label r36 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r11 = r36 get date of issuance <NEXT> if $ r11 == null goto label5 <NEXT> r37 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r16 = r37 get date of issuance <NEXT> $ r17 = $ r16 to i s o8601 string <NEXT> r27 put \ `` date_of_issuance\ <NEXT> label r38 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r12 = r38 get date of expiry <NEXT> if $ r12 == null goto label6 <NEXT> r39 = com nimbusds openid connect sdk assurance evidence i d document description r0 <NEXT> $ r13 = r39 get date of expiry <NEXT> $ r14 = $ r13 to i s o8601 string <NEXT> r27 put \ `` date_of_expiry\ <NEXT> label return r27 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance evidence voucher r0 <NEXT> $ r1 = r2 birthdate string <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance identity verification r0 <NEXT> $ r1 = r2 trust framework <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk assurance identity verification r0 <NEXT> $ r1 = r2 assurance process <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 == null goto label1 <NEXT> r7 = com nimbusds openid connect sdk claim claim set r0 <NEXT> $ r5 = r7 claim <NEXT> $ r5 put r1 r2 <NEXT> goto label2 <NEXT> label return <NEXT> if r2 == null goto label1 <NEXT> label r8 = com nimbusds openid connect sdk claim claim set r0 <NEXT> $ r3 = r8 claim <NEXT> $ r3 remove r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 ! = null goto label1 <NEXT> r10 = com nimbusds openid connect sdk claim claim set r0 <NEXT> $ r8 = r10 get string claim r1 <NEXT> goto label2 <NEXT> label return $ r8 <NEXT> if r2 ! = null goto label1 <NEXT> label r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r4 = r9 append r1 <NEXT> $ r5 = $ r4 append 35 <NEXT> $ r6 = $ r5 append r2 <NEXT> $ r7 = $ r6 to string <NEXT> r11 = com nimbusds openid connect sdk claim claim set r0 <NEXT> $ r8 = r11 get string claim $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 == null goto label1 <NEXT> $ r5 = r2 to string <NEXT> r6 = com nimbusds openid connect sdk claim claim set r0 <NEXT> r6 set claim r1 $ r5 <NEXT> goto label2 <NEXT> label return <NEXT> if r2 == null goto label1 <NEXT> label r7 = com nimbusds openid connect sdk claim claim set r0 <NEXT> $ r3 = r7 claim <NEXT> $ r3 remove r1 <END>
<BEG> r0 = @ this <NEXT> r11 = new net minidev json j s o n object <NEXT> specialinvoke r11 < init > <NEXT> r12 = com nimbusds openid connect sdk claim claim set request r0 <NEXT> $ r6 = r12 entry <NEXT> r2 = $ r6 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r2 next <NEXT> r3 = com nimbusds openid connect sdk claim claim set request $ entry $ r7 <NEXT> r4 = r3 to j s o n object entry <NEXT> $ r8 = r4 get key <NEXT> $ r9 = r4 get value <NEXT> r11 put $ r8 $ r9 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r11 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk claim i d token claim set r0 <NEXT> $ r1 = r2 get date claim \ `` auth_time\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r10 = com nimbusds openid connect sdk claim i d token claim set r0 <NEXT> r1 = r10 get string list claim \ `` amr\ `` <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label return null <NEXT> if $ z0 == 0 goto label2 <NEXT> label r8 = new java util array list <NEXT> $ i0 = r1 size <NEXT> specialinvoke r8 < init > $ i0 <NEXT> r3 = r1 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r6 = r3 next <NEXT> r4 = java lang string $ r6 <NEXT> r9 = new com nimbusds openid connect sdk claim amr <NEXT> specialinvoke r9 < init > r4 <NEXT> r8 add r9 <NEXT> goto label3 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label3 <NEXT> r8 = new java util array list <NEXT> $ i0 = r1 size <NEXT> specialinvoke r8 < init > $ i0 <NEXT> r3 = r1 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r3 next <NEXT> r4 = com nimbusds openid connect sdk claim amr $ r6 <NEXT> $ r7 = r4 get value <NEXT> r8 add $ r7 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r9 = com nimbusds openid connect sdk claim i d token claim set r0 <NEXT> r9 set claim \ `` amr\ <NEXT> goto label4 <NEXT> label return <NEXT> if r1 == null goto label3 <NEXT> label r10 = com nimbusds openid connect sdk claim i d token claim set r0 <NEXT> r10 set claim \ `` amr\ <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds openid connect sdk claim person claim r0 <NEXT> r2 set claim \ `` family_name\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = null <NEXT> if r1 == null goto label3 <NEXT> r8 = new java util link list <NEXT> specialinvoke r8 < init > <NEXT> r7 = r8 <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = com nimbusds openid connect sdk assurance claim country code $ r5 <NEXT> if r3 == null goto label2 <NEXT> $ r6 = r3 get value <NEXT> r8 add $ r6 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r9 = com nimbusds openid connect sdk claim person claim r0 <NEXT> r9 set claim \ `` nationalities\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk claim person claim r0 <NEXT> $ r1 = r2 get string claim \ `` birth_middle_name\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r2 = r4 user info claim <NEXT> $ r3 = com nimbusds openid connect sdk claim request remove claim $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r2 = r4 verify user info claim <NEXT> $ r3 = com nimbusds openid connect sdk claim request remove claim $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r41 = new net minidev json j s o n object <NEXT> specialinvoke r41 < init > <NEXT> r46 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r3 = r46 get i d token claim <NEXT> $ z0 = $ r3 be empty <NEXT> if $ z0 ! = 0 goto label01 <NEXT> r47 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r33 = r47 get i d token claim <NEXT> $ r34 = com nimbusds openid connect sdk claim request $ entry to j s o n object $ r33 <NEXT> r41 put \ `` id_token\ <NEXT> label r48 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r4 = r48 get verify i d token claim <NEXT> $ z1 = $ r4 be empty <NEXT> if $ z1 ! = 0 goto label05 <NEXT> $ r21 = r41 get \ `` id_token\ `` <NEXT> if $ r21 == null goto label02 <NEXT> $ r32 = r41 get \ `` id_token\ `` <NEXT> r36 = net minidev json j s o n object $ r32 <NEXT> goto label03 <NEXT> label r43 = new net minidev json j s o n object <NEXT> specialinvoke r43 < init > <NEXT> r49 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r24 = r49 get verify i d token claim <NEXT> $ r25 = com nimbusds openid connect sdk claim request $ entry to j s o n object $ r24 <NEXT> r43 put \ `` claims\ <NEXT> r50 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r27 = r50 get i d token claim verification j s o n object <NEXT> if $ r27 == null goto label04 <NEXT> r51 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r30 = r51 get i d token claim verification j s o n object <NEXT> r43 put \ `` verification\ <NEXT> label r36 put \ `` verified_claims\ <NEXT> if $ r21 == null goto label02 <NEXT> label r42 = new net minidev json j s o n object <NEXT> specialinvoke r42 < init > <NEXT> r36 = r42 <NEXT> if $ z1 ! = 0 goto label05 <NEXT> label r52 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r38 = r52 get user info claim <NEXT> $ z3 = $ r38 be empty <NEXT> if $ z3 ! = 0 goto label06 <NEXT> r53 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r18 = r53 get user info claim <NEXT> $ r19 = com nimbusds openid connect sdk claim request $ entry to j s o n object $ r18 <NEXT> r41 put \ `` userinfo\ <NEXT> label r54 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r5 = r54 get verify user info claim <NEXT> $ z2 = $ r5 be empty <NEXT> if $ z2 ! = 0 goto label10 <NEXT> $ r6 = r41 get \ `` userinfo\ `` <NEXT> if $ r6 == null goto label07 <NEXT> $ r17 = r41 get \ `` userinfo\ `` <NEXT> r39 = net minidev json j s o n object $ r17 <NEXT> goto label08 <NEXT> label r45 = new net minidev json j s o n object <NEXT> specialinvoke r45 < init > <NEXT> r55 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r9 = r55 get verify user info claim <NEXT> $ r10 = com nimbusds openid connect sdk claim request $ entry to j s o n object $ r9 <NEXT> r45 put \ `` claims\ <NEXT> r56 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r12 = r56 get user info claim verification j s o n object <NEXT> if $ r12 == null goto label09 <NEXT> r57 = com nimbusds openid connect sdk claim request r0 <NEXT> $ r15 = r57 get user info claim verification j s o n object <NEXT> r45 put \ `` verification\ <NEXT> label r39 put \ `` verified_claims\ <NEXT> if $ r6 == null goto label07 <NEXT> label r44 = new net minidev json j s o n object <NEXT> specialinvoke r44 < init > <NEXT> r39 = r44 <NEXT> if $ z2 ! = 0 goto label10 <NEXT> label return r41 <END>
<BEG> r0 = @ this <NEXT> r5 = com nimbusds openid connect sdk federation entity entity statement claim set r0 <NEXT> r1 = r5 get j s o n object claim \ `` jwks\ `` <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label r6 = java util map r1 <NEXT> $ r3 = com nimbusds jose jwk j w k set parse r6 <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r4 = r1 to j s o n object <NEXT> goto label2 <NEXT> label $ r3 = com nimbusds openid connect sdk federation entity federation metadata type openid_relying_party <NEXT> r5 = com nimbusds openid connect sdk federation entity entity statement claim set r0 <NEXT> r5 set metadata $ r3 $ r4 <NEXT> return <NEXT> if r1 == null goto label1 <NEXT> label $ r4 = null <END>
<BEG> r0 = @ this <NEXT> $ r3 = com nimbusds openid connect sdk federation entity federation metadata type openid_provider <NEXT> r6 = com nimbusds openid connect sdk federation entity entity statement claim set r0 <NEXT> r1 = r6 get metadata $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label $ r4 = com nimbusds openid connect sdk op o i d c provider metadata parse r1 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk federation entity entity statement claim set r0 <NEXT> $ r1 = r2 get j s o n object claim \ `` metadata_policy\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r1 = r2 federation a p i endpoint <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r34 = new net minidev json j s o n object <NEXT> specialinvoke r34 < init > <NEXT> r36 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r6 = r36 get federation a p i endpoint u r i <NEXT> if $ r6 == null goto label1 <NEXT> r37 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r31 = r37 get federation a p i endpoint u r i <NEXT> $ r32 = $ r31 to string <NEXT> r34 put \ `` federation_api_endpoint\ <NEXT> label r38 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r7 = r38 get trust anchor i d <NEXT> if $ r7 == null goto label2 <NEXT> r39 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r28 = r39 get trust anchor i d <NEXT> $ r29 = $ r28 get value <NEXT> r34 put \ `` trust_anchor_id\ <NEXT> label r40 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r8 = r40 get name <NEXT> if $ r8 == null goto label3 <NEXT> r41 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r26 = r41 get name <NEXT> r34 put \ `` name\ <NEXT> label r42 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r9 = r42 get contact <NEXT> if $ r9 == null goto label4 <NEXT> r43 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r24 = r43 get contact <NEXT> r34 put \ `` contacts\ <NEXT> label r44 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r10 = r44 get policy u r i <NEXT> if $ r10 == null goto label5 <NEXT> r45 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r21 = r45 get policy u r i <NEXT> $ r22 = $ r21 to string <NEXT> r34 put \ `` policy_uri\ <NEXT> label r46 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r11 = r46 get homepage u r i <NEXT> if $ r11 == null goto label6 <NEXT> r47 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r18 = r47 get homepage u r i <NEXT> $ r19 = $ r18 to string <NEXT> r34 put \ `` homepage_uri\ <NEXT> label r48 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r12 = r48 trust mark <NEXT> $ z0 = com nimbusds oauth2 sdk util collection utils be not empty $ r12 <NEXT> if $ z0 == 0 goto label9 <NEXT> r35 = new net minidev json j s o n array <NEXT> specialinvoke r35 < init > <NEXT> r49 = com nimbusds openid connect sdk federation entity federation entity metadata r0 <NEXT> $ r14 = r49 trust mark <NEXT> r3 = $ r14 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label8 <NEXT> $ r16 = r3 next <NEXT> r4 = com nimbusds jwt sign j w t $ r16 <NEXT> $ r17 = r4 serialize <NEXT> r35 add $ r17 <NEXT> goto label7 <NEXT> if $ z1 == 0 goto label8 <NEXT> label r34 put \ `` trust_marks\ <NEXT> label return r34 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new com nimbusds openid connect sdk federation policy metadata policy entry <NEXT> $ r4 = java util collection singleton list r2 <NEXT> specialinvoke r5 < init > r1 $ r4 <NEXT> r6 = com nimbusds openid connect sdk federation policy metadata policy r0 <NEXT> r6 put r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com nimbusds openid connect sdk federation policy metadata policy r0 <NEXT> $ r2 = r5 entry <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java util list $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk federation registration explicit client registration request r0 <NEXT> $ r1 = r2 entity statement <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com nimbusds openid connect sdk federation trust constraint trust chain constraint r0 <NEXT> $ i0 = r1 max path length <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk federation trust default trust chain retriever r0 <NEXT> $ r1 = r2 constraint <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = java util collection empty map <NEXT> $ r3 = com nimbusds openid connect sdk o i d c claim request resolve r0 r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds openid connect sdk op o i d c provider metadata r0 <NEXT> r2 user info j w e encs = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds openid connect sdk op o i d c provider metadata r0 <NEXT> r2 document verification method = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com nimbusds openid connect sdk op o i d c provider metadata r0 <NEXT> r2 electronic record type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com nimbusds openid connect sdk rp o i d c client metadata r0 <NEXT> $ i0 = r1 default max age <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> com nimbusds oauth2 sdk util u r i utils ensure scheme be h t t p sor h t t p r1 <NEXT> r2 = com nimbusds openid connect sdk rp o i d c client metadata r0 <NEXT> r2 back channel logout u r i = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = com nimbusds openid connect sdk user info success response r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk validators abstract j w t validator r0 <NEXT> $ r1 = r2 client i d <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com nimbusds openid connect sdk validators i d token claim verifier r0 <NEXT> $ r1 = r2 expect issuer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com squareup okhttp address r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = com squareup okhttp address r0 <NEXT> $ r1 = r3 url <NEXT> $ r2 = $ r1 host <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = 0 <NEXT> r5 = com squareup okhttp connection pool r0 <NEXT> $ r3 = r5 connection <NEXT> r1 = $ r3 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r4 = r1 next <NEXT> r2 = com squareup okhttp internal io real connection $ r4 <NEXT> $ z1 = r2 be multiplexed <NEXT> if $ z1 == 0 goto label2 <NEXT> i0 = i0 + 1 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> label $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append r0 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r7 = $ r6 append r1 <NEXT> r15 = $ r7 to string <NEXT> r2 = r15 get bytes \ `` iso-8859-1\ `` <NEXT> $ r8 = okio byte string of r2 <NEXT> r3 = $ r8 base64 <NEXT> $ r9 = new java lang string builder <NEXT> specialinvoke $ r9 < init > <NEXT> $ r10 = $ r9 append \ `` basic \ `` <NEXT> $ r11 = $ r10 append r3 <NEXT> $ r12 = $ r11 to string <NEXT> label return $ r12 <END>
<BEG> r0 = @ this <NEXT> r1 = com squareup okhttp internal disk lru cache r0 <NEXT> $ l0 = r1 max size <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r3 = com squareup okhttp internal disk lru cache r0 <NEXT> r3 max size = l0 <NEXT> r4 = com squareup okhttp internal disk lru cache r0 <NEXT> $ z0 = r4 initialize <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = com squareup okhttp internal disk lru cache r0 <NEXT> $ r2 = r5 executor <NEXT> r6 = com squareup okhttp internal disk lru cache r0 <NEXT> $ r1 = r6 cleanup runnable <NEXT> $ r2 execute $ r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = com squareup okhttp internal framed frame stream r0 <NEXT> $ r1 = r2 error code <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = com squareup okhttp internal http http1x stream r0 <NEXT> $ r3 = r10 http engine <NEXT> $ r3 write request header <NEXT> r11 = com squareup okhttp internal http http1x stream r0 <NEXT> $ r4 = r11 http engine <NEXT> $ r5 = $ r4 get connection <NEXT> $ r6 = $ r5 get route <NEXT> $ r7 = $ r6 get proxy <NEXT> $ r8 = $ r7 type <NEXT> r2 = com squareup okhttp internal http request line get r1 $ r8 <NEXT> $ r9 = r1 header <NEXT> r12 = com squareup okhttp internal http http1x stream r0 <NEXT> r12 write request $ r9 r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == r1 goto label1 <NEXT> if r0 == null goto label2 <NEXT> $ z0 = r0 equal r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com squareup okhttp ok http client r0 <NEXT> r1 retry on connection failure = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = new java lang string <NEXT> r6 = com squareup okhttp response body r0 <NEXT> $ r2 = r6 bytes <NEXT> r7 = com squareup okhttp response body r0 <NEXT> $ r3 = specialinvoke r7 charset <NEXT> $ r4 = $ r3 name <NEXT> specialinvoke r5 < init > $ r2 $ r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r6 = com squareup okhttp route r0 <NEXT> $ r1 = r6 address <NEXT> $ r2 = $ r1 ssl socket factory <NEXT> if $ r2 == null goto label1 <NEXT> r7 = com squareup okhttp route r0 <NEXT> $ r3 = r7 proxy <NEXT> $ r4 = $ r3 type <NEXT> $ r5 = java net proxy $ type http <NEXT> if $ r4 ! = $ r5 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r4 ! = $ r5 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = okhttp3 address r0 <NEXT> $ r1 = r2 protocol <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r1 value \ `` set- cookie\ `` <NEXT> r7 = null <NEXT> i1 = 0 <NEXT> i0 = r2 size <NEXT> label if i1 > = i0 goto label5 <NEXT> $ r4 = r2 get i1 <NEXT> $ r5 = java lang string $ r4 <NEXT> r3 = okhttp3 cookie parse r0 $ r5 <NEXT> if r3 ! = null goto label2 <NEXT> goto label4 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if r3 ! = null goto label2 <NEXT> label if r7 ! = null goto label3 <NEXT> $ r6 = new java util array list <NEXT> specialinvoke $ r6 < init > <NEXT> r7 = $ r6 <NEXT> label r7 add r3 <NEXT> label if i1 > = i0 goto label5 <NEXT> label if r7 == null goto label6 <NEXT> $ r8 = java util collection unmodifiable list r7 <NEXT> goto label7 <NEXT> label return $ r8 <NEXT> label if r7 == null goto label6 <NEXT> label $ r8 = java util collection empty list <END>
<BEG> r0 = @ this <NEXT> r2 = okhttp3 form body r0 <NEXT> $ r1 = r2 encode names <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r2 = okhttp3 internal frame error code no_error <NEXT> $ r1 = okhttp3 internal frame error code cancel <NEXT> r3 = okhttp3 internal framed frame connection r0 <NEXT> specialinvoke r3 close $ r2 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = okhttp3 internal http2 http2 connection r0 <NEXT> r1 start 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = okhttp3 ok http client r0 <NEXT> $ i0 = r1 ping interval <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = okhttp3 http url r0 <NEXT> $ r1 = r2 scheme <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = okhttp3 http url r0 <NEXT> $ r1 = r2 password <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = okhttp3 ok http client r0 <NEXT> $ i0 = r1 connect timeout <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = okhttp3 ok http client r0 <NEXT> $ i0 = r1 ping interval <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = okio buffer r0 <NEXT> $ r2 = specialinvoke r3 hmac \ `` hmac s h a512\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = okio buffer r0 <NEXT> $ r1 = r3 snapshot <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = okio buffer r0 <NEXT> $ r1 = specialinvoke r2 digest \ `` sha-256\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = okio buffer r0 <NEXT> $ r2 = specialinvoke r3 hmac \ `` hmac s h a512\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = okio byte string r0 <NEXT> $ r1 = r2 data <NEXT> $ i0 = lengthof $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = okio timeout r0 <NEXT> $ z0 = r1 have deadline <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = okio byte string r0 <NEXT> $ r1 = specialinvoke r2 digest \ `` md5\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openid4java association association session type r0 <NEXT> $ r1 = r2 _sess type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org openid4java association association session type r0 <NEXT> $ z0 = r1 _compat <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org openid4java association diffie hellman session r0 <NEXT> $ r2 = r5 _key pair <NEXT> $ r3 = $ r2 get public <NEXT> r1 = javax crypto interface d h public key $ r3 <NEXT> $ r4 = org openid4java association diffie hellman session public key to string r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org openid4java consumer consumer manager r0 <NEXT> r2 _dh params = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org openid4java consumer consumer manager r0 <NEXT> r2 _min assoc sess enc = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org openid4java consumer consumer manager r0 <NEXT> $ r1 = r2 _min assoc sess enc <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org openid4java consumer consumer manager r0 <NEXT> r1 _immediate auth = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org openid4java discovery yadis yadis result r0 <NEXT> $ r1 = r2 _content type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org openid4java discovery yadis yadis url r0 <NEXT> $ r1 = r3 _yadis url <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org openid4java message association request r0 <NEXT> r1 = r3 get parameter value \ `` openid dh_modulus\ `` <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 <NEXT> goto label3 <NEXT> label return $ r2 <NEXT> if r1 == null goto label1 <NEXT> label r4 = org openid4java message association request r0 <NEXT> $ z0 = r4 have parameter \ `` openid dh_consumer_public\ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r2 = \ `` a nz5 ogu i o x l dhm yms wizj e o h tdxfo2 vcbt2 i3 m y zu ye91ou j4m l b x+ ykc liem oc pym2 c b r y h n oyyjm g0mg3 b vd9 rc ln5 s3 i h ho x g hblzqd l f ei 368 ygo79 j rnx tk xjgm y0rxl j5b u1z i ka s du kdi i+ x uk k j x8 fvf8 w8vsix y or\ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r2 = null <END>
<BEG> r0 = @ this <NEXT> r3 = org openid4java message association request r0 <NEXT> r1 = r3 get parameter value \ `` openid dh_gen\ `` <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 <NEXT> goto label3 <NEXT> label return $ r2 <NEXT> if r1 == null goto label1 <NEXT> label r4 = org openid4java message association request r0 <NEXT> $ z0 = r4 have parameter \ `` openid dh_consumer_public\ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r2 = \ `` ag==\ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r2 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org openid4java message association response r0 <NEXT> r2 set \ `` enc_mac_key\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org openid4java message auth success r0 <NEXT> $ r2 = r4 _sign extension <NEXT> $ z0 = $ r2 contain r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = org openid4java message auth success r0 <NEXT> $ r3 = r5 _sign extension <NEXT> $ r3 add r1 <NEXT> r6 = org openid4java message auth success r0 <NEXT> r6 build sign list <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org openid4java message ax ax message r0 <NEXT> $ r2 = r4 _parameters <NEXT> $ r3 = $ r2 get parameter value r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org openid4java message message have extension factory r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r2 = org openid4java message message _extension factory <NEXT> $ r3 = $ r2 get r0 <NEXT> r11 = java lang class $ r3 <NEXT> $ r4 = r11 new instance <NEXT> r1 = org openid4java message message extension factory $ r4 <NEXT> label goto label4 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org openid4java message message r0 <NEXT> $ r2 = r3 _ext aliases <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org openid4java message pape pape message r0 <NEXT> $ r2 = r3 _parameters <NEXT> $ z0 = $ r2 have parameter r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> return \ `` http openid net extension sreg 1 1\ `` <END>
<BEG> r0 = @ this <NEXT> r2 = org openid4java message sreg s reg message r0 <NEXT> $ r1 = r2 _type uri <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openid4java server server manager r0 <NEXT> $ r1 = r2 _sign field <NEXT> return $ r1 <END>
<BEG> z0 = @ parameter0 <NEXT> org openid4java util http client factory multi thread http client = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org opentest4j multiple failure error r0 <NEXT> $ r1 = r2 failure <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org opentest4j value wrapper r0 <NEXT> $ i0 = r1 identity hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache oltu oauth2 common o auth provider type r0 <NEXT> $ r1 = r2 provider name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache oltu oauth2 common o auth provider type r0 <NEXT> $ r1 = r2 token endpoint <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r7 = new java lang null pointer exception <NEXT> specialinvoke r7 < init > <NEXT> throw r7 <NEXT> if r1 ! = null goto label1 <NEXT> label r9 = org eclipse core command category r0 <NEXT> $ r2 = r9 category listener <NEXT> if $ r2 ! = null goto label2 <NEXT> r8 = new java util array list <NEXT> specialinvoke r8 < init > <NEXT> r10 = org eclipse core command category r0 <NEXT> r10 category listener = r8 <NEXT> label r11 = org eclipse core command category r0 <NEXT> $ r3 = r11 category listener <NEXT> $ z0 = $ r3 contain r1 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r12 = org eclipse core command category r0 <NEXT> $ r4 = r12 category listener <NEXT> $ r4 add r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse core command command r1 <NEXT> r15 = org eclipse core command command r0 <NEXT> $ r4 = r15 category <NEXT> $ r3 = r2 category <NEXT> i0 = org eclipse core internal command util util compare $ r4 $ r3 <NEXT> if i0 ! = 0 goto label1 <NEXT> r16 = org eclipse core command command r0 <NEXT> $ z1 = r16 define <NEXT> $ z0 = r2 define <NEXT> i0 = org eclipse core internal command util util compare $ z1 $ z0 <NEXT> if i0 ! = 0 goto label1 <NEXT> label return i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org eclipse core command command manager r0 <NEXT> r3 = r4 get category \ `` org eclipse core command category autogenerated\ `` <NEXT> r3 define r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org eclipse core command command manager r0 <NEXT> $ r2 = r6 define handle object <NEXT> r7 = org eclipse core command command manager r0 <NEXT> $ r1 = r7 define handle object <NEXT> $ i0 = $ r1 size <NEXT> $ r3 = newarray org eclipse core command command [ $ i0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = org eclipse core command command [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse core command command manager event r0 <NEXT> $ r1 = r2 category id <NEXT> if $ r1 == null goto label1 <NEXT> return 1 <NEXT> if $ r1 == null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang null pointer exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r8 = org eclipse core command contexts context r0 <NEXT> $ r2 = r8 listener <NEXT> if $ r2 ! = null goto label2 <NEXT> r7 = new java util hash set <NEXT> specialinvoke r7 < init > <NEXT> r9 = org eclipse core command contexts context r0 <NEXT> r9 listener = r7 <NEXT> label r10 = org eclipse core command contexts context r0 <NEXT> $ r3 = r10 listener <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse core command state r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse core command state r0 <NEXT> r2 id = r1 <NEXT> return <END>
<BEG> $ r0 = org eclipse core expression element handler instance <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r7 = org eclipse core expression expression info r0 <NEXT> $ r1 = r7 f misbehave expression type <NEXT> if $ r1 ! = null goto label1 <NEXT> return null <NEXT> if $ r1 ! = null goto label1 <NEXT> label r8 = org eclipse core expression expression info r0 <NEXT> $ r3 = r8 f misbehave expression type <NEXT> r9 = org eclipse core expression expression info r0 <NEXT> $ r2 = r9 f misbehave expression type <NEXT> $ i0 = $ r2 size <NEXT> $ r4 = newarray java lang class [ $ i0 ] <NEXT> $ r5 = $ r3 to array $ r4 <NEXT> $ r6 = java lang class [ ] $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r5 = new org eclipse core internal expression property tester descriptor <NEXT> r6 = org eclipse core expression property tester r0 <NEXT> $ r4 = r6 f config element <NEXT> r7 = org eclipse core expression property tester r0 <NEXT> $ r3 = r7 f namespace <NEXT> r8 = org eclipse core expression property tester r0 <NEXT> $ r2 = r8 f property <NEXT> specialinvoke r5 < init > $ r4 $ r3 $ r2 <NEXT> return r5 <END>
<BEG> $ r0 = org eclipse core internal filebuffers file buffer plugin get file buffer manager <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = org eclipse core internal filebuffers extension registry r0 <NEXT> $ r7 = r14 f setup participant descriptor <NEXT> $ r8 = $ r7 get r1 <NEXT> r2 = java util set $ r8 <NEXT> if r2 ! = null goto label1 <NEXT> return null <NEXT> if r2 ! = null goto label1 <NEXT> label r13 = new java util array list <NEXT> specialinvoke r13 < init > <NEXT> r4 = r2 iterator <NEXT> goto label3 <NEXT> label $ z1 = r4 have next <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label $ r10 = r4 next <NEXT> r5 = org eclipse core runtime i configuration element $ r10 <NEXT> r15 = org eclipse core internal filebuffers extension registry r0 <NEXT> $ r11 = r15 f setup participant <NEXT> r16 = org eclipse core internal filebuffers extension registry r0 <NEXT> $ r12 = r16 get extension r5 $ r11 class \ `` lorg eclipse core filebuffers i document setup participant \ `` <NEXT> r6 = org eclipse core filebuffers i document setup participant $ r12 <NEXT> if r6 == null goto label3 <NEXT> r13 add r6 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org eclipse core internal filebuffers extension registry r0 <NEXT> $ r3 = r7 find content type r1 r2 <NEXT> r8 = org eclipse core internal filebuffers extension registry r0 <NEXT> r6 = r8 get document factory $ r3 <NEXT> if r6 ! = null goto label1 <NEXT> $ r5 = r1 last segment <NEXT> r9 = org eclipse core internal filebuffers extension registry r0 <NEXT> r6 = r9 get document factory $ r5 <NEXT> label if r6 ! = null goto label2 <NEXT> $ r4 = r1 get file extension <NEXT> r10 = org eclipse core internal filebuffers extension registry r0 <NEXT> r6 = r10 get document factory $ r4 <NEXT> label if r6 ! = null goto label3 <NEXT> r11 = org eclipse core internal filebuffers extension registry r0 <NEXT> r6 = r11 get document factory \ `` * \ `` <NEXT> label return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java lang system line separator <NEXT> return $ r3 <END>
<BEG> r1 = new org eclipse core filesystem provider file info <NEXT> specialinvoke r1 < init > <NEXT> r2 = org eclipse core filesystem i file info r1 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org eclipse core internal filesystem internal file system core get instance <NEXT> $ r2 = $ r1 get file system r0 <NEXT> return $ r2 <END>
<BEG> $ r0 = org eclipse core internal filesystem internal file system core get instance <NEXT> $ r1 = $ r0 get local file system <NEXT> return $ r1 <END>
<BEG> $ i0 = org eclipse core internal filesystem local local file native native attribute <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = new org eclipse core internal job order lock <NEXT> r3 = org eclipse core internal job lock manager r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse core internal job worker r0 <NEXT> $ r1 = r3 current job <NEXT> $ r2 = org eclipse core runtime job job $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org eclipse core runtime job job $ 2 <NEXT> specialinvoke r3 < init > r0 r1 <NEXT> r4 = org eclipse core runtime job job r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 get rule <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ z0 = specialinvoke r0 be user <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 get active job <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org eclipse core internal dtree delta data tree r0 <NEXT> $ r3 = r5 root node <NEXT> $ r4 = $ r3 assemble with r2 r1 0 <NEXT> r6 = org eclipse core internal dtree delta data tree r0 <NEXT> r6 root node = $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse core internal dtree delta data tree r0 <NEXT> $ r1 = r2 root node <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = org eclipse core internal dtree delta data tree r0 <NEXT> $ z0 = r6 be immutable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = new java lang illegal argument exception <NEXT> $ r4 = org eclipse core internal utils message dtree_not immutable <NEXT> specialinvoke r5 < init > $ r4 <NEXT> throw r5 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r7 = org eclipse core internal dtree delta data tree r0 <NEXT> $ r2 = r7 copy <NEXT> r1 = org eclipse core internal dtree delta data tree $ r2 <NEXT> r8 = org eclipse core internal dtree delta data tree r0 <NEXT> r1 set parent r8 <NEXT> r1 empty delta <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse core internal localstore collect sync status visitor r0 <NEXT> r1 ignore local deletion = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r10 = org eclipse core internal resource folder r0 <NEXT> $ r3 = r10 get property manager <NEXT> r11 = org eclipse core resource i resource r0 <NEXT> $ r3 delete property r11 2 <NEXT> r12 = org eclipse core internal resource folder r0 <NEXT> $ r4 = r12 workspace <NEXT> $ r5 = $ r4 get root <NEXT> r13 = org eclipse core internal resource folder r0 <NEXT> $ r6 = r13 path <NEXT> r1 = $ r5 get file $ r6 <NEXT> r14 = org eclipse core internal resource folder r0 <NEXT> $ z0 = r14 be link <NEXT> if $ z0 == 0 goto label1 <NEXT> r15 = org eclipse core internal resource folder r0 <NEXT> r2 = r15 get raw location u r i <NEXT> r16 = org eclipse core internal resource folder r0 <NEXT> r16 delete 0 null <NEXT> r1 create link r2 16 null <NEXT> goto label2 <NEXT> label return r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r17 = org eclipse core internal resource folder r0 <NEXT> $ r7 = r17 workspace <NEXT> r18 = org eclipse core resource i resource r0 <NEXT> $ r7 delete resource r18 <NEXT> r19 = org eclipse core internal resource folder r0 <NEXT> $ r8 = r19 workspace <NEXT> r20 = org eclipse core resource i resource r1 <NEXT> $ r8 create resource r20 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> i0 = @ parameter3 <NEXT> r9 = new java util array list <NEXT> specialinvoke r9 < init > <NEXT> r10 = org eclipse core internal resource marker manager r0 <NEXT> r10 do find marker r1 r9 r2 z0 i0 <NEXT> $ z1 = r9 be empty <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r8 = org eclipse core internal resource marker manager no_markers <NEXT> return $ r8 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ i1 = r9 size <NEXT> $ r5 = newarray org eclipse core resource i marker [ $ i1 ] <NEXT> $ r6 = r9 to array $ r5 <NEXT> $ r7 = org eclipse core resource i marker [ ] $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org eclipse core internal resource marker manager r0 <NEXT> $ r3 = r6 cache <NEXT> $ r4 = r1 get type <NEXT> $ z0 = $ r3 be persistent $ r4 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r2 = r1 get attribute \ `` transient\ `` <NEXT> if r2 == null goto label2 <NEXT> $ z1 = r2 instanceof java lang boolean <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 = java lang boolean r2 <NEXT> $ z2 = $ r5 boolean value <NEXT> if $ z2 == 0 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse core internal resource marker manager r0 <NEXT> $ r2 = r3 cache <NEXT> $ z0 = $ r2 be persistent r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r7 = org eclipse core internal resource marker set r0 <NEXT> $ r4 = r7 element <NEXT> $ i2 = lengthof $ r4 <NEXT> $ i3 = $ i2 * 2 <NEXT> r1 = newarray org eclipse core internal resource i marker set element [ $ i3 ] <NEXT> $ i4 = lengthof r1 <NEXT> i0 = $ i4 - 1 <NEXT> r8 = org eclipse core internal resource marker set r0 <NEXT> $ r5 = r8 element <NEXT> i1 = lengthof $ r5 <NEXT> i8 = 0 <NEXT> goto label5 <NEXT> label if i8 < i1 goto label1 <NEXT> label r2 = $ r5 [ i8 ] <NEXT> if r2 == null goto label4 <NEXT> $ l5 = r2 get id <NEXT> r9 = org eclipse core internal resource marker set r0 <NEXT> $ i6 = r9 hash for $ l5 <NEXT> $ i7 = lengthof r1 <NEXT> i9 = $ i6 % $ i7 <NEXT> goto label3 <NEXT> label $ r6 = r1 [ i9 ] <NEXT> if $ r6 ! = null goto label2 <NEXT> label i9 = i9 + 1 <NEXT> if i9 < = i0 goto label3 <NEXT> i9 = 0 <NEXT> if $ r6 ! = null goto label2 <NEXT> r1 [ i9 ] = r2 <NEXT> label i8 = i8 + 1 <NEXT> label if i8 < i1 goto label1 <NEXT> r10 = org eclipse core internal resource marker set r0 <NEXT> r10 element = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 get type <NEXT> if $ i0 ! = 1 goto label1 <NEXT> $ r2 = r1 get full path <NEXT> $ i1 = $ r2 segment count <NEXT> if $ i1 ! = 2 goto label1 <NEXT> $ r3 = r1 get name <NEXT> $ z0 = $ r3 equal \ `` project\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org eclipse core internal resource project r0 <NEXT> $ r1 = r2 internal get description <NEXT> r3 = org eclipse core internal resource project r0 <NEXT> r4 = org eclipse core resource i project description $ r1 <NEXT> r3 write description r4 i0 1 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse core internal resource project info r0 <NEXT> r2 property store = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse core internal resource resource info r0 <NEXT> $ i0 = r1 flag <NEXT> $ i1 = org eclipse core internal resource resource info get type $ i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse core internal resource resource info r0 <NEXT> $ i0 = r1 flag <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = org eclipse core internal utils file util compute overlap r0 r1 1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = org eclipse core internal utils file util compute overlap r0 r1 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return r1 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse core internal utils string pool r0 <NEXT> $ r3 = r7 map <NEXT> r2 = $ r3 get r1 <NEXT> if r2 == null goto label3 <NEXT> if r2 == r1 goto label2 <NEXT> r8 = org eclipse core internal utils string pool r0 <NEXT> $ i0 = r8 saving <NEXT> $ i1 = r1 length <NEXT> $ i2 = 2 * $ i1 <NEXT> $ i3 = 44 + $ i2 <NEXT> $ i4 = $ i0 + $ i3 <NEXT> r9 = org eclipse core internal utils string pool r0 <NEXT> r9 saving = $ i4 <NEXT> label $ r6 = java lang string r2 <NEXT> return $ r6 <NEXT> if r2 == null goto label3 <NEXT> label r10 = org eclipse core internal utils string pool r0 <NEXT> $ r4 = r10 map <NEXT> $ r4 put r1 r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ i0 = org eclipse core internal watson element tree reader read number r2 <NEXT> r5 = org eclipse core internal watson element tree reader r0 <NEXT> r3 = r5 get reader $ i0 <NEXT> $ r4 = r3 read delta r1 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r11 = org eclipse core internal watson element tree writer r0 <NEXT> r11 write number 1 r3 <NEXT> r10 = new org eclipse core internal dtree delta data tree <NEXT> $ r6 = r1 get data tree <NEXT> $ r7 = org eclipse core runtime path root <NEXT> r12 = org eclipse core runtime i path $ r7 <NEXT> $ r8 = $ r6 copy complete subtree r12 <NEXT> specialinvoke r10 < init > $ r8 <NEXT> r13 = org eclipse core internal watson element tree writer r0 <NEXT> $ r9 = r13 data tree writer <NEXT> r14 = org eclipse core internal dtree abstract data tree r10 <NEXT> $ r9 write tree r14 r2 i0 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 forget last built state <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = newarray org eclipse core resource map resource mapping [ 0 ] <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r10 = org eclipse core resource map resource traversal r0 <NEXT> $ r3 = r10 resource <NEXT> $ i0 = lengthof $ r3 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ r8 = newarray org eclipse core resource i marker [ 0 ] <NEXT> return $ r8 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r9 = new java util array list <NEXT> specialinvoke r9 < init > <NEXT> r11 = org eclipse core resource map resource traversal r0 <NEXT> r11 do find marker r9 r1 z0 <NEXT> $ i1 = r9 size <NEXT> $ r5 = newarray org eclipse core resource i marker [ $ i1 ] <NEXT> $ r6 = r9 to array $ r5 <NEXT> $ r7 = org eclipse core resource i marker [ ] $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = specialinvoke r0 create polling monitor r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse core resource resource attribute r0 <NEXT> $ i0 = r1 attribute <NEXT> $ i1 = $ i0 & 16 <NEXT> if $ i1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r10 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> $ z1 = r10 get boolean r1 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r8 = java lang boolean true <NEXT> goto label2 <NEXT> label r2 = $ r8 <NEXT> if z0 == 0 goto label3 <NEXT> $ r9 = java lang boolean true <NEXT> goto label4 <NEXT> label r3 = $ r9 <NEXT> if $ r9 ! = r2 goto label5 <NEXT> return <NEXT> if $ r9 ! = r2 goto label5 <NEXT> label r11 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> r11 notify = 0 <NEXT> r12 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> $ z2 = r12 get default boolean r1 <NEXT> if $ z2 ! = z0 goto label6 <NEXT> r13 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> $ r6 = r13 get plugin preference 1 <NEXT> $ r6 remove r1 <NEXT> goto label7 <NEXT> label r15 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> r15 fire property change event r1 r2 r3 <NEXT> goto label9 <NEXT> label r17 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> r17 notify = 1 <NEXT> if $ z2 ! = z0 goto label6 <NEXT> label r14 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> $ r5 = r14 get plugin preference 1 <NEXT> $ r5 put boolean r1 z0 <NEXT> if z0 == 0 goto label3 <NEXT> label $ r9 = java lang boolean false <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ r8 = java lang boolean false <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> $ r2 = r6 get plugin preference 1 <NEXT> r7 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> $ r3 = r7 get default preference <NEXT> $ r4 = $ r3 get r1 \ `` \ `` <NEXT> $ r5 = $ r2 get r1 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse core internal preference legacy preference forwarder r0 <NEXT> $ r1 = r2 get plugin preference 1 <NEXT> $ z0 = $ r1 be dirty <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org eclipse core runtime performance stats enable <NEXT> if $ z0 == 0 goto label1 <NEXT> org eclipse core internal runtime performance stats processor add listener r0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse core runtime performance stats r0 <NEXT> $ z0 = r1 be failure <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org eclipse core runtime file locator to file u r l r0 <NEXT> return $ r1 <END>
<BEG> $ r0 = org eclipse core internal runtime internal platform get default <NEXT> $ r1 = $ r0 get location <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> return null <END>
<BEG> $ r0 = org eclipse core internal runtime internal platform get default <NEXT> $ r1 = $ r0 get n l <NEXT> return $ r1 <END>
<BEG> $ r0 = org eclipse core internal runtime internal platform get default <NEXT> $ r1 = $ r0 get w s <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org eclipse core internal runtime internal platform get default <NEXT> $ z0 = $ r1 be fragment r0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> label $ r4 = org eclipse core resource resource plugin get workspace <NEXT> $ r4 run r2 r1 1 null <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = new org eclipse debug core debug event <NEXT> specialinvoke r2 < init > r0 16 i0 <NEXT> r3 = org eclipse debug core model debug element r0 <NEXT> r3 fire event r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse debug core model memory byte r0 <NEXT> $ b0 = r1 flag <NEXT> $ b1 = $ b0 | 1 <NEXT> $ b2 = byte $ b1 <NEXT> r2 = org eclipse debug core model memory byte r0 <NEXT> r2 flag = $ b2 <NEXT> if z0 ! = 0 goto label1 <NEXT> r3 = org eclipse debug core model memory byte r0 <NEXT> $ b3 = r3 flag <NEXT> $ b4 = $ b3 ^ 1 <NEXT> $ b5 = byte $ b4 <NEXT> r4 = org eclipse debug core model memory byte r0 <NEXT> r4 flag = $ b5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse debug core model memory byte r0 <NEXT> $ b0 = r1 flag <NEXT> $ b1 = $ b0 & 16 <NEXT> if $ b1 ! = 16 goto label1 <NEXT> return 1 <NEXT> if $ b1 ! = 16 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = org eclipse debug core refresh util attr_refresh_scope <NEXT> r2 = r0 get attribute $ r4 null <NEXT> if r2 == null goto label2 <NEXT> r3 = org eclipse debug core refresh util to resource r2 <NEXT> if r3 == null goto label2 <NEXT> $ i0 = lengthof r3 <NEXT> if $ i0 < = 0 goto label2 <NEXT> b1 = 1 <NEXT> $ z0 = org eclipse debug core refresh util be refresh recursive r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> b1 = 2 <NEXT> label org eclipse debug core refresh util refresh resource r3 b1 r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse debug core sourcelookup abstract source lookup director r0 <NEXT> r2 f id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new org eclipse debug core sourcelookup abstract source lookup director $ source lookup query <NEXT> r9 = org eclipse debug core sourcelookup abstract source lookup director r0 <NEXT> specialinvoke r8 < init > r9 r1 <NEXT> r10 = org eclipse core runtime i safe runnable r8 <NEXT> org eclipse core runtime safe runner run r10 <NEXT> r3 = r8 get source element <NEXT> r4 = r8 get exception <NEXT> if r4 == null goto label2 <NEXT> $ z0 = r4 instanceof org eclipse core runtime core exception <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org eclipse core runtime core exception r4 <NEXT> $ r7 = r5 get status <NEXT> $ i0 = $ r7 get severity <NEXT> if $ i0 ! = 4 goto label2 <NEXT> r11 = java lang throwable r5 <NEXT> org eclipse debug core debug plugin log r11 <NEXT> goto label2 <NEXT> label r8 dispose <NEXT> return r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label org eclipse debug core debug plugin log r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = new org eclipse core runtime status <NEXT> $ r5 = org eclipse debug core debug plugin get unique identifier <NEXT> specialinvoke r7 < init > 4 $ r5 125 r1 r2 <NEXT> r8 = new org eclipse core runtime core exception <NEXT> r9 = org eclipse core runtime i status r7 <NEXT> specialinvoke r8 < init > r9 <NEXT> r10 = java lang throwable r8 <NEXT> throw r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org eclipse debug core debug plugin parse document r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse debug core sourcelookup container archive source container r0 <NEXT> $ r1 = r2 f file <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse debug core sourcelookup container directory source container r0 <NEXT> $ r1 = r2 f directory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse debug internal core breakpoint manager r0 <NEXT> $ r2 = r3 f suppress change <NEXT> $ z0 = $ r2 contain r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org eclipse debug internal core group group launch r0 <NEXT> $ r3 = r8 sub launch <NEXT> entermonitor $ r3 <NEXT> label r9 = org eclipse debug internal core group group launch r0 <NEXT> $ r5 = r9 sub launch <NEXT> $ r4 = newarray org eclipse debug core model i process [ 0 ] <NEXT> $ r5 put r1 $ r4 <NEXT> exitmonitor $ r3 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse debug internal core launch configuration info r0 <NEXT> r2 f type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get attribute \ `` key\ `` <NEXT> r3 = r1 get child node <NEXT> i0 = r3 get length <NEXT> r11 = new java util array list <NEXT> specialinvoke r11 < init > i0 <NEXT> i2 = 0 <NEXT> goto label4 <NEXT> label if i2 < i0 goto label1 <NEXT> label r9 = r3 item i2 <NEXT> $ s1 = r9 get node type <NEXT> if $ s1 ! = 1 goto label3 <NEXT> r10 = org w3c dom element r9 <NEXT> $ r6 = r10 get node name <NEXT> $ z0 = $ r6 equal ignore case \ `` list entry\ `` <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r12 = org eclipse debug internal core launch configuration info r0 <NEXT> $ r8 = r12 get invalid format debug exception <NEXT> r13 = java lang throwable $ r8 <NEXT> throw r13 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r14 = org eclipse debug internal core launch configuration info r0 <NEXT> $ r7 = r14 get value attribute r10 <NEXT> r11 add $ r7 <NEXT> label i2 = i2 + 1 <NEXT> label if i2 < i0 goto label1 <NEXT> r15 = org eclipse debug internal core launch configuration info r0 <NEXT> r15 set attribute r2 r11 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse debug internal core launch configuration info r0 <NEXT> $ z0 = r3 be prototype <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r4 = org eclipse debug internal core launch configuration info r0 <NEXT> $ r1 = r4 f visible attribute <NEXT> if $ r1 ! = null goto label2 <NEXT> r5 = org eclipse debug internal core launch configuration info r0 <NEXT> r5 initialize visible attribute <NEXT> label r6 = org eclipse debug internal core launch configuration info r0 <NEXT> $ r2 = r6 f visible attribute <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r5 = org eclipse debug internal core launch configuration info r0 <NEXT> $ r2 = r5 f visible attribute <NEXT> if $ r2 == null goto label2 <NEXT> if z0 == 0 goto label1 <NEXT> r6 = org eclipse debug internal core launch configuration info r0 <NEXT> $ r4 = r6 f visible attribute <NEXT> $ r4 add r1 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r7 = org eclipse debug internal core launch configuration info r0 <NEXT> $ r3 = r7 f visible attribute <NEXT> $ r3 remove r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org eclipse debug internal core launch configuration type r0 <NEXT> r4 initialize migration delegate <NEXT> r5 = org eclipse debug internal core launch configuration type r0 <NEXT> $ r2 = r5 f migration delegate <NEXT> if $ r2 == null goto label1 <NEXT> r6 = org eclipse debug internal core launch configuration type r0 <NEXT> $ r3 = r6 f migration delegate <NEXT> $ z0 = $ r3 be candidate r1 <NEXT> return $ z0 <NEXT> if $ r2 == null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r6 = org eclipse debug internal core launch manager r0 <NEXT> r6 initialize launch delegate <NEXT> r7 = org eclipse debug internal core launch manager r0 <NEXT> $ r2 = r7 f launch delegate <NEXT> r1 = $ r2 value <NEXT> $ i0 = r1 size <NEXT> $ r3 = newarray org eclipse debug core i launch delegate [ $ i0 ] <NEXT> $ r4 = r1 to array $ r3 <NEXT> $ r5 = org eclipse debug core i launch delegate [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse debug internal core launch manager r0 <NEXT> $ r3 = r7 f launch <NEXT> entermonitor $ r3 <NEXT> label r8 = org eclipse debug internal core launch manager r0 <NEXT> $ r4 = r8 f launch set <NEXT> $ r4 remove r1 <NEXT> r9 = org eclipse debug internal core launch manager r0 <NEXT> $ r5 = r9 f launch <NEXT> $ z1 = $ r5 remove r1 <NEXT> exitmonitor $ r3 <NEXT> label return $ z1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get delta <NEXT> if r2 == null goto label4 <NEXT> r8 = org eclipse debug internal core launch manager r0 <NEXT> r3 = r8 get delta visitor <NEXT> r7 = null <NEXT> r9 = org eclipse debug internal core launch manager r0 <NEXT> $ z0 = r9 be delete configuration <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = org eclipse debug internal core launch manager r0 <NEXT> r7 = r10 get map resource visitor <NEXT> label r11 = org eclipse core resource i resource delta visitor r3 <NEXT> r2 accept r11 <NEXT> if r7 == null goto label4 <NEXT> r12 = org eclipse core resource i resource delta visitor r7 <NEXT> r2 accept r12 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse debug internal core launch manager r0 <NEXT> r1 = r5 get launch configuration type <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> goto label2 <NEXT> label if i1 < i0 goto label1 <NEXT> label r2 = r1 [ i1 ] <NEXT> $ r4 = org eclipse debug internal core launch configuration type r2 <NEXT> r6 = org eclipse debug internal core launch manager r0 <NEXT> r6 persist prefer launch delegate $ r4 <NEXT> i1 = i1 + 1 <NEXT> label if i1 < i0 goto label1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse debug internal core launch manager r0 <NEXT> r2 = r5 get launch mode r1 <NEXT> if r2 == null goto label1 <NEXT> $ r3 = r2 get label <NEXT> $ r4 = org eclipse debug internal core launch manager remove accelerator $ r3 <NEXT> return $ r4 <NEXT> if r2 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse debug internal core launch manager r0 <NEXT> $ r1 = r5 f step filter manager <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new org eclipse debug internal core step filter manager <NEXT> specialinvoke r4 < init > <NEXT> r6 = org eclipse debug internal core launch manager r0 <NEXT> r6 f step filter manager = r4 <NEXT> label r7 = org eclipse debug internal core launch manager r0 <NEXT> $ r2 = r7 f step filter manager <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = org eclipse debug internal core launch manager r0 <NEXT> $ r6 = r15 f active mode <NEXT> if $ r6 ! = null goto label6 <NEXT> r14 = new java util hash set <NEXT> specialinvoke r14 < init > 3 <NEXT> r16 = org eclipse debug internal core launch manager r0 <NEXT> r16 f active mode = r14 <NEXT> r17 = org eclipse debug internal core launch manager r0 <NEXT> $ r9 = r17 get launch configuration type <NEXT> i0 = lengthof $ r9 <NEXT> i2 = 0 <NEXT> goto label5 <NEXT> label if i2 < i0 goto label1 <NEXT> label r2 = $ r9 [ i2 ] <NEXT> r18 = org eclipse debug internal core launch manager r0 <NEXT> $ r10 = r18 get launch mode <NEXT> i1 = lengthof $ r10 <NEXT> i3 = 0 <NEXT> goto label4 <NEXT> label if i3 < i1 goto label2 <NEXT> label r4 = $ r10 [ i3 ] <NEXT> $ r11 = r4 get identifier <NEXT> $ z1 = r2 support mode $ r11 <NEXT> if $ z1 == 0 goto label3 <NEXT> r19 = org eclipse debug internal core launch manager r0 <NEXT> $ r12 = r19 f active mode <NEXT> $ r13 = r4 get identifier <NEXT> $ r12 add $ r13 <NEXT> label i3 = i3 + 1 <NEXT> label if i3 < i1 goto label2 <NEXT> i2 = i2 + 1 <NEXT> label if i2 < i0 goto label1 <NEXT> label r20 = org eclipse debug internal core launch manager r0 <NEXT> $ r7 = r20 f active mode <NEXT> $ z0 = $ r7 contain r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> entermonitor r0 <NEXT> label r13 = org eclipse debug internal core output stream monitor r0 <NEXT> $ r3 = r13 f thread <NEXT> if $ r3 ! = null goto label2 <NEXT> r14 = org eclipse debug internal core output stream monitor r0 <NEXT> $ r4 = r14 f do <NEXT> $ r4 set 0 <NEXT> r12 = new java lang thread <NEXT> r15 = org eclipse debug internal core output stream monitor r0 <NEXT> $ r6 = output stream monitor $ read__1 bootstrap $ r15 <NEXT> $ r7 = org eclipse debug internal core debug core message output stream monitor_label <NEXT> specialinvoke r12 < init > $ r6 $ r7 <NEXT> r16 = org eclipse debug internal core output stream monitor r0 <NEXT> r16 f thread = r12 <NEXT> r17 = org eclipse debug internal core output stream monitor r0 <NEXT> $ r8 = r17 f thread <NEXT> $ r8 set daemon 1 <NEXT> r18 = org eclipse debug internal core output stream monitor r0 <NEXT> $ r9 = r18 f thread <NEXT> $ r9 set priority 1 <NEXT> r19 = org eclipse debug internal core output stream monitor r0 <NEXT> $ r10 = r19 f thread <NEXT> $ r10 start <NEXT> label exitmonitor r0 <NEXT> label goto label6 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> $ r2 = org eclipse debug internal core preference contexts <NEXT> $ r3 = $ r2 [ 1 ] <NEXT> $ r4 = $ r3 get node r0 <NEXT> $ r4 remove r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org eclipse debug internal core x m l memento r0 <NEXT> $ r3 = r9 factory <NEXT> r2 = $ r3 create element r1 <NEXT> r10 = org eclipse debug internal core x m l memento r0 <NEXT> $ r4 = r10 element <NEXT> $ r4 append child r2 <NEXT> r8 = new org eclipse debug internal core x m l memento <NEXT> r11 = org eclipse debug internal core x m l memento r0 <NEXT> $ r7 = r11 factory <NEXT> specialinvoke r8 < init > $ r7 r2 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r2 = org osgi service application application admin permission r0 <NEXT> $ r1 = r2 action <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = org osgi service application application descriptor r0 <NEXT> r2 = r13 get property specific r1 <NEXT> $ r5 = r2 remove \ `` application locked\ `` <NEXT> r3 = java lang boolean $ r5 <NEXT> r14 = org osgi service application application descriptor r0 <NEXT> $ r6 = r14 lock <NEXT> entermonitor $ r6 <NEXT> label if r3 == null goto label3 <NEXT> $ z1 = r3 boolean value <NEXT> r15 = org osgi service application application descriptor r0 <NEXT> $ r10 = r15 lock <NEXT> $ z2 = $ r10 [ 0 ] <NEXT> if $ z1 == $ z2 goto label3 <NEXT> r16 = org osgi service application application descriptor r0 <NEXT> $ r11 = r16 lock <NEXT> $ z3 = $ r11 [ 0 ] <NEXT> if $ z3 == 0 goto label2 <NEXT> r17 = org osgi service application application descriptor r0 <NEXT> r17 lock specific <NEXT> goto label3 <NEXT> label exitmonitor $ r6 <NEXT> label goto label7 <NEXT> label r19 = org osgi service application application descriptor r0 <NEXT> $ r7 = r19 lock <NEXT> $ z0 = $ r7 [ 0 ] <NEXT> $ r8 = java lang boolean value of $ z0 <NEXT> r2 put \ `` application locked\ <NEXT> return r2 <NEXT> if $ z3 == 0 goto label2 <NEXT> label r18 = org osgi service application application descriptor r0 <NEXT> r18 unlock specific <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse core internal runtime activator r0 <NEXT> r2 = r5 get bundle admin <NEXT> if r2 ! = null goto label1 <NEXT> $ r4 = newarray org osgi framework bundle [ 0 ] <NEXT> return $ r4 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r3 = r2 get fragment r1 <NEXT> return $ r3 <END>
<BEG> $ r0 = org eclipse core internal runtime meta data keeper meta area <NEXT> if $ r0 == null goto label1 <NEXT> $ r3 = org eclipse core internal runtime meta data keeper meta area <NEXT> return $ r3 <NEXT> if $ r0 == null goto label1 <NEXT> label $ r1 = new org eclipse core internal runtime data area <NEXT> specialinvoke $ r1 < init > <NEXT> org eclipse core internal runtime meta data keeper meta area = $ r1 <NEXT> $ r2 = org eclipse core internal runtime meta data keeper meta area <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org eclipse core internal runtime runtime log log listener <NEXT> entermonitor $ r2 <NEXT> label $ r3 = org eclipse core internal runtime runtime log log listener <NEXT> $ z0 = $ r3 contain r0 <NEXT> exitmonitor $ r2 <NEXT> label return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org eclipse core internal runtime find support find r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org eclipse core internal runtime activator get u r l converter r0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = r0 <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = r1 resolve r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse core runtime listener list r0 <NEXT> $ r1 = r2 listener <NEXT> $ i0 = lengthof $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label org eclipse core runtime assert be legal $ z2 <NEXT> $ z1 = r1 be multi status <NEXT> if $ z1 ! = 0 goto label3 <NEXT> r2 = org eclipse core runtime multi status r0 <NEXT> r2 add r1 <NEXT> goto label4 <NEXT> label return <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label r3 = org eclipse core runtime multi status r0 <NEXT> r3 add all r1 <NEXT> if r1 == null goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse core runtime plugin version identifier r0 <NEXT> $ r1 = r3 version <NEXT> $ r2 = $ r1 get qualifier <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse core runtime progress monitor wrapper r0 <NEXT> $ r1 = r2 progress monitor <NEXT> $ r1 clear block <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> org eclipse core runtime assert be not null r0 <NEXT> label $ r2 = r0 run with result <NEXT> label return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse core runtime status r0 <NEXT> r1 code = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label org eclipse core runtime assert be legal $ z1 <NEXT> r2 = org eclipse core runtime status r0 <NEXT> r2 plugin id = r1 <NEXT> return <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org eclipse core runtime registry factory get registry <NEXT> $ r1 remove listener r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org eclipse core internal registry extension registry r0 <NEXT> $ r3 = r8 access <NEXT> $ r3 enter write <NEXT> label $ r4 = org eclipse core internal registry combine event delta record removal <NEXT> r9 = org eclipse core internal registry extension registry r0 <NEXT> r9 event delta = $ r4 <NEXT> r10 = org eclipse core internal registry extension registry r0 <NEXT> r10 basic remove r1 <NEXT> r11 = org eclipse core internal registry extension registry r0 <NEXT> r11 fire registry change event <NEXT> r12 = org eclipse core internal registry extension registry r0 <NEXT> r12 event delta = null <NEXT> goto label3 <NEXT> label r14 = org eclipse core internal registry extension registry r0 <NEXT> $ r5 = r14 access <NEXT> $ r5 exit write <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org eclipse core internal registry reference map r0 <NEXT> r2 purge <NEXT> r3 = org eclipse core internal registry reference map r0 <NEXT> $ r1 = r3 do remove i0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse core internal registry registry timestamp r0 <NEXT> r1 aggregate timestamp = 0l <NEXT> r2 = org eclipse core internal registry registry timestamp r0 <NEXT> r2 modify = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse core internal registry registry timestamp r0 <NEXT> $ z0 = r1 modify <NEXT> return $ z0 <END>
<BEG> r0 = org eclipse core internal registry registry provider factory get default <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = r0 get registry <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org eclipse jdt core compiler char operation no_strings <NEXT> return $ r1 <END>
<BEG> r2 = @ parameter0 <NEXT> c0 = @ parameter1 <NEXT> if r2 ! = null goto label1 <NEXT> $ r1 = newarray char [ 1 ] <NEXT> $ r1 [ 0 ] = c0 <NEXT> return $ r1 <NEXT> if r2 ! = null goto label1 <NEXT> label i1 = lengthof r2 <NEXT> $ i2 = i1 + 1 <NEXT> $ r0 = newarray char [ $ i2 ] <NEXT> java lang system arraycopy r2 0 $ r0 0 i1 <NEXT> $ r0 [ i1 ] = c0 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> return r0 <NEXT> if r1 ! = null goto label1 <NEXT> label if r0 ! = null goto label2 <NEXT> $ r3 = newarray char [ ] [ 1 ] <NEXT> $ r3 [ 0 ] = r1 <NEXT> return $ r3 <NEXT> label if r0 ! = null goto label2 <NEXT> label i0 = lengthof r0 <NEXT> $ i1 = i0 + 1 <NEXT> r2 = newarray char [ ] [ $ i1 ] <NEXT> java lang system arraycopy r0 0 r2 0 i0 <NEXT> r2 [ i0 ] = r1 <NEXT> return r2 <END>
<BEG> c0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> c1 = @ parameter2 <NEXT> if r0 ! = null goto label1 <NEXT> $ r2 = newarray char [ 2 ] <NEXT> $ r2 [ 0 ] = c0 <NEXT> $ r2 [ 1 ] = c1 <NEXT> return $ r2 <NEXT> if r0 ! = null goto label1 <NEXT> label i2 = lengthof r0 <NEXT> $ i3 = i2 + 2 <NEXT> r1 = newarray char [ $ i3 ] <NEXT> r1 [ 0 ] = c0 <NEXT> java lang system arraycopy r0 0 r1 1 i2 <NEXT> $ i4 = i2 + 1 <NEXT> r1 [ $ i4 ] = c1 <NEXT> return r1 <END>
<BEG> c0 = @ parameter0 <NEXT> if c0 > = 128 goto label1 <NEXT> $ r0 = org eclipse jdt internal compiler parser scanner helper obvious_ident_char_natures <NEXT> $ i1 = $ r0 [ c0 ] <NEXT> $ i2 = $ i1 & 256 <NEXT> if $ i2 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i2 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> c0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i2 = @ parameter3 <NEXT> i4 = i1 <NEXT> goto label3 <NEXT> label if i4 < i2 goto label1 <NEXT> label $ c3 = r0 [ i4 ] <NEXT> if c0 ! = $ c3 goto label2 <NEXT> return i4 <NEXT> if c0 ! = $ c3 goto label2 <NEXT> label i4 = i4 + 1 <NEXT> label if i4 < i2 goto label1 <NEXT> return -1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core compiler reconcile context r0 <NEXT> $ r1 = r2 operation <NEXT> $ z0 = $ r1 resolve binding <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse jdt core compiler reconcile context r0 <NEXT> $ r1 = r4 operation <NEXT> $ r2 = $ r1 delta builder <NEXT> $ r3 = $ r2 delta <NEXT> r5 = org eclipse jdt core i java element delta $ r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org eclipse jdt core compiler reconcile context r0 <NEXT> $ r2 = r8 operation <NEXT> $ r3 = $ r2 problem <NEXT> if $ r3 ! = null goto label1 <NEXT> return null <NEXT> if $ r3 ! = null goto label1 <NEXT> label r9 = org eclipse jdt core compiler reconcile context r0 <NEXT> $ r4 = r9 operation <NEXT> $ r5 = $ r4 problem <NEXT> $ r6 = $ r5 get r1 <NEXT> $ r7 = org eclipse jdt core compiler categorize problem [ ] $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> if r3 ! = null goto label1 <NEXT> r7 = new java lang illegal argument exception <NEXT> $ r6 = org eclipse jdt internal core util message correction_null unit <NEXT> specialinvoke r7 < init > $ r6 <NEXT> throw r7 <NEXT> if r3 ! = null goto label1 <NEXT> label $ i0 = r1 get i d <NEXT> $ i1 = r1 get source start <NEXT> $ i2 = r1 get source end <NEXT> $ r4 = r1 get argument <NEXT> r8 = org eclipse jdt core correction engine r0 <NEXT> r8 compute correction r2 $ i0 $ i1 $ i2 $ r4 r3 <NEXT> return <END>
<BEG> $ r0 = org eclipse jdt internal compiler impl compiler option warn token <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom abstract type declaration r0 <NEXT> r1 = r2 get parent <NEXT> $ z0 = r1 instanceof org eclipse jdt core dom compilation unit <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom annotation type member declaration r0 <NEXT> $ r1 = r2 optional default value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse jdt core dom annotation type member declaration r0 <NEXT> $ r1 = r4 ast <NEXT> $ r2 = $ r1 get bind resolver <NEXT> r5 = org eclipse jdt core dom annotation type member declaration r0 <NEXT> $ r3 = $ r2 resolve member r5 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom break statement r0 <NEXT> $ r1 = r2 optional label <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom cast expression r0 <NEXT> r2 = r7 type <NEXT> $ r3 = org eclipse jdt core dom cast expression type_property <NEXT> r8 = org eclipse jdt core dom cast expression r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom cast expression r0 <NEXT> r11 type = r1 <NEXT> $ r4 = org eclipse jdt core dom cast expression type_property <NEXT> r12 = org eclipse jdt core dom cast expression r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse jdt core dom compilation unit r0 <NEXT> $ r2 = r5 ast <NEXT> $ r3 = $ r2 get bind resolver <NEXT> $ r4 = $ r3 find declare node r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom conditional expression r0 <NEXT> r2 = r7 else expression <NEXT> $ r3 = org eclipse jdt core dom conditional expression else_expression_property <NEXT> r8 = org eclipse jdt core dom conditional expression r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom conditional expression r0 <NEXT> r11 else expression = r1 <NEXT> $ r4 = org eclipse jdt core dom conditional expression else_expression_property <NEXT> r12 = org eclipse jdt core dom conditional expression r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom continue statement r0 <NEXT> $ r1 = r2 optional label <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom enhance for statement r0 <NEXT> r2 = r7 expression <NEXT> $ r3 = org eclipse jdt core dom enhance for statement expression_property <NEXT> r8 = org eclipse jdt core dom enhance for statement r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom enhance for statement r0 <NEXT> r11 expression = r1 <NEXT> $ r4 = org eclipse jdt core dom enhance for statement expression_property <NEXT> r12 = org eclipse jdt core dom enhance for statement r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom field access r0 <NEXT> r2 = r7 field name <NEXT> $ r3 = org eclipse jdt core dom field access name_property <NEXT> r8 = org eclipse jdt core dom field access r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom field access r0 <NEXT> r11 field name = r1 <NEXT> $ r4 = org eclipse jdt core dom field access name_property <NEXT> r12 = org eclipse jdt core dom field access r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom if statement r0 <NEXT> $ r1 = r2 optional else statement <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse jdt core dom if statement r0 <NEXT> r2 = r5 optional else statement <NEXT> $ r3 = org eclipse jdt core dom if statement else_statement_property <NEXT> r6 = org eclipse jdt core dom if statement r0 <NEXT> r7 = org eclipse jdt core dom a s t node r2 <NEXT> r8 = org eclipse jdt core dom a s t node r1 <NEXT> r6 pre replace child r7 r8 $ r3 <NEXT> r9 = org eclipse jdt core dom if statement r0 <NEXT> r9 optional else statement = r1 <NEXT> $ r4 = org eclipse jdt core dom if statement else_statement_property <NEXT> r10 = org eclipse jdt core dom if statement r0 <NEXT> r11 = org eclipse jdt core dom a s t node r2 <NEXT> r12 = org eclipse jdt core dom a s t node r1 <NEXT> r10 post replace child r11 r12 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse jdt core dom import declaration r0 <NEXT> $ r1 = r4 ast <NEXT> $ r2 = $ r1 get bind resolver <NEXT> r5 = org eclipse jdt core dom import declaration r0 <NEXT> $ r3 = $ r2 resolve import r5 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r5 = new java lang illegal argument exception <NEXT> specialinvoke r5 < init > <NEXT> throw r5 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = org eclipse jdt core dom infix expression operator_property <NEXT> r6 = org eclipse jdt core dom infix expression r0 <NEXT> r6 pre value change $ r2 <NEXT> r7 = org eclipse jdt core dom infix expression r0 <NEXT> r7 operator = r1 <NEXT> $ r3 = org eclipse jdt core dom infix expression operator_property <NEXT> r8 = org eclipse jdt core dom infix expression r0 <NEXT> r8 post value change $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom label statement r0 <NEXT> r2 = r7 body <NEXT> $ r3 = org eclipse jdt core dom label statement body_property <NEXT> r8 = org eclipse jdt core dom label statement r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom label statement r0 <NEXT> r11 body = r1 <NEXT> $ r4 = org eclipse jdt core dom label statement body_property <NEXT> r12 = org eclipse jdt core dom label statement r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse jdt core dom member ref r0 <NEXT> r2 = r5 optional qualifier <NEXT> $ r3 = org eclipse jdt core dom member ref qualifier_property <NEXT> r6 = org eclipse jdt core dom member ref r0 <NEXT> r7 = org eclipse jdt core dom a s t node r2 <NEXT> r8 = org eclipse jdt core dom a s t node r1 <NEXT> r6 pre replace child r7 r8 $ r3 <NEXT> r9 = org eclipse jdt core dom member ref r0 <NEXT> r9 optional qualifier = r1 <NEXT> $ r4 = org eclipse jdt core dom member ref qualifier_property <NEXT> r10 = org eclipse jdt core dom member ref r0 <NEXT> r11 = org eclipse jdt core dom a s t node r2 <NEXT> r12 = org eclipse jdt core dom a s t node r1 <NEXT> r10 post replace child r11 r12 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse jdt core dom method declaration r0 <NEXT> r5 unsupported in2_3_4 <NEXT> r6 = org eclipse jdt core dom method declaration r0 <NEXT> r2 = r6 optional receiver qualifier <NEXT> $ r3 = org eclipse jdt core dom method declaration receiver_qualifier_property <NEXT> r7 = org eclipse jdt core dom method declaration r0 <NEXT> r8 = org eclipse jdt core dom a s t node r2 <NEXT> r9 = org eclipse jdt core dom a s t node r1 <NEXT> r7 pre replace child r8 r9 $ r3 <NEXT> r10 = org eclipse jdt core dom method declaration r0 <NEXT> r10 optional receiver qualifier = r1 <NEXT> $ r4 = org eclipse jdt core dom method declaration receiver_qualifier_property <NEXT> r11 = org eclipse jdt core dom method declaration r0 <NEXT> r12 = org eclipse jdt core dom a s t node r2 <NEXT> r13 = org eclipse jdt core dom a s t node r1 <NEXT> r11 post replace child r12 r13 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jdt core dom modifier r0 <NEXT> $ r2 = r3 modifier keyword <NEXT> $ r1 = org eclipse jdt core dom modifier $ modifier keyword protected_keyword <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> return 1 <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jdt core dom modifier r0 <NEXT> $ r2 = r3 modifier keyword <NEXT> $ r1 = org eclipse jdt core dom modifier $ modifier keyword synchronized_keyword <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> return 1 <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom module declaration r0 <NEXT> $ r1 = r2 module statement <NEXT> r3 = java util list $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jdt core dom module modifier r0 <NEXT> $ r2 = r3 modifier keyword <NEXT> $ r1 = org eclipse jdt core dom module modifier $ module modifier keyword transitive_keyword <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> return 1 <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse jdt core dom module qualify name r0 <NEXT> r2 = r5 name <NEXT> $ r3 = org eclipse jdt core dom module qualify name name_property <NEXT> r6 = org eclipse jdt core dom module qualify name r0 <NEXT> r7 = org eclipse jdt core dom a s t node r2 <NEXT> r8 = org eclipse jdt core dom a s t node r1 <NEXT> r6 pre replace child r7 r8 $ r3 <NEXT> r9 = org eclipse jdt core dom module qualify name r0 <NEXT> r9 name = r1 <NEXT> $ r4 = org eclipse jdt core dom module qualify name name_property <NEXT> r10 = org eclipse jdt core dom module qualify name r0 <NEXT> r11 = org eclipse jdt core dom a s t node r2 <NEXT> r12 = org eclipse jdt core dom a s t node r1 <NEXT> r10 post replace child r11 r12 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ z0 = r0 instanceof org eclipse jdt core dom qualify name <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom node finder r0 <NEXT> $ r1 = r2 f cover node <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom node finder r0 <NEXT> $ r1 = r2 f cover node <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom parenthesized expression r0 <NEXT> r2 = r7 expression <NEXT> $ r3 = org eclipse jdt core dom parenthesized expression expression_property <NEXT> r8 = org eclipse jdt core dom parenthesized expression r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom parenthesized expression r0 <NEXT> r11 expression = r1 <NEXT> $ r4 = org eclipse jdt core dom parenthesized expression expression_property <NEXT> r12 = org eclipse jdt core dom parenthesized expression r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom prefix expression r0 <NEXT> r2 = r7 operand <NEXT> $ r3 = org eclipse jdt core dom prefix expression operand_property <NEXT> r8 = org eclipse jdt core dom prefix expression r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom prefix expression r0 <NEXT> r11 operand = r1 <NEXT> $ r4 = org eclipse jdt core dom prefix expression operand_property <NEXT> r12 = org eclipse jdt core dom prefix expression r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom record declaration r0 <NEXT> $ r1 = r2 super interface type <NEXT> r3 = java util list $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom single member annotation r0 <NEXT> r2 = r7 value <NEXT> $ r3 = org eclipse jdt core dom single member annotation value_property <NEXT> r8 = org eclipse jdt core dom single member annotation r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom single member annotation r0 <NEXT> r11 value = r1 <NEXT> $ r4 = org eclipse jdt core dom single member annotation value_property <NEXT> r12 = org eclipse jdt core dom single member annotation r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jdt core dom single variable declaration r0 <NEXT> $ r1 = r3 varargs annotation <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = org eclipse jdt core dom single variable declaration r0 <NEXT> r4 unsupported in2_3_4 <NEXT> label r5 = org eclipse jdt core dom single variable declaration r0 <NEXT> $ r2 = r5 varargs annotation <NEXT> r6 = java util list $ r2 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom text element r0 <NEXT> $ r1 = r2 text <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ z0 = r0 instanceof org eclipse jdt core dom wildcard type <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom type declaration r0 <NEXT> $ r1 = r2 internal get superclass <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org eclipse jdt core dom type method reference r0 <NEXT> r2 = r7 type <NEXT> $ r3 = org eclipse jdt core dom type method reference type_property <NEXT> r8 = org eclipse jdt core dom type method reference r0 <NEXT> r9 = org eclipse jdt core dom a s t node r2 <NEXT> r10 = org eclipse jdt core dom a s t node r1 <NEXT> r8 pre replace child r9 r10 $ r3 <NEXT> r11 = org eclipse jdt core dom type method reference r0 <NEXT> r11 type = r1 <NEXT> $ r4 = org eclipse jdt core dom type method reference type_property <NEXT> r12 = org eclipse jdt core dom type method reference r0 <NEXT> r13 = org eclipse jdt core dom a s t node r2 <NEXT> r14 = org eclipse jdt core dom a s t node r1 <NEXT> r12 post replace child r13 r14 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core dom union type r0 <NEXT> $ r1 = r2 type <NEXT> r3 = java util list $ r1 <NEXT> return r3 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & 16 <NEXT> if $ i1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & 4096 <NEXT> if $ i1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & 64 <NEXT> if $ i1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org eclipse jdt core java convention validate identifier r0 \ `` 1 3\ <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> r2 = @ parameter4 <NEXT> if z0 == 0 goto label2 <NEXT> $ i2 = org eclipse jdt core naming convention get field variable kind i0 <NEXT> r13 = org eclipse jdt internal core internal naming convention get base name $ i2 r0 r1 0 <NEXT> $ r7 = org eclipse jdt core naming convention getter_bool_name <NEXT> i1 = lengthof $ r7 <NEXT> $ r8 = org eclipse jdt core naming convention getter_bool_name <NEXT> $ z1 = org eclipse jdt core compiler char operation prefix equal $ r8 r13 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ i3 = lengthof r13 <NEXT> if $ i3 < = i1 goto label1 <NEXT> $ c4 = r13 [ i1 ] <NEXT> $ z2 = org eclipse jdt internal compiler parser scanner helper be upper case $ c4 <NEXT> if $ z2 == 0 goto label1 <NEXT> $ i5 = lengthof r13 <NEXT> r14 = org eclipse jdt core compiler char operation subarray r13 i1 $ i5 <NEXT> $ r9 = org eclipse jdt core naming convention setter_name <NEXT> $ r10 = org eclipse jdt core naming convention suggest accessor name r0 r14 i0 <NEXT> $ r11 = org eclipse jdt core compiler char operation concat $ r9 $ r10 <NEXT> $ r12 = org eclipse jdt core naming convention suggest new name $ r11 r2 <NEXT> return $ r12 <NEXT> if $ z2 == 0 goto label1 <NEXT> label $ r15 = org eclipse jdt core naming convention setter_name <NEXT> $ r16 = org eclipse jdt core naming convention suggest accessor name r0 r1 i0 <NEXT> $ r17 = org eclipse jdt core compiler char operation concat $ r15 $ r16 <NEXT> $ r18 = org eclipse jdt core naming convention suggest new name $ r17 r2 <NEXT> return $ r18 <NEXT> if z0 == 0 goto label2 <NEXT> label $ r3 = org eclipse jdt core naming convention setter_name <NEXT> $ r4 = org eclipse jdt core naming convention suggest accessor name r0 r1 i0 <NEXT> $ r5 = org eclipse jdt core compiler char operation concat $ r3 $ r4 <NEXT> $ r6 = org eclipse jdt core naming convention suggest new name $ r5 r2 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core search search document r0 <NEXT> $ r1 = r2 document path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> label $ r6 = org eclipse jdt core search search engine $ search pattern adapter r2 <NEXT> $ r8 = $ r6 pattern <NEXT> $ r7 = newarray org eclipse jdt core search search participant [ 1 ] <NEXT> $ r9 = org eclipse jdt core search search engine get default search participant <NEXT> $ r7 [ 0 ] = $ r9 <NEXT> r15 = new org eclipse jdt core search search engine $ result collector adapter <NEXT> specialinvoke r15 < init > r4 <NEXT> $ r11 = r4 get progress monitor <NEXT> r17 = org eclipse jdt core search search engine r0 <NEXT> r18 = org eclipse jdt core search search requestor r15 <NEXT> r17 search $ r8 $ r7 r3 r18 $ r11 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = new org eclipse jdt internal core search match declaration of referenced method pattern <NEXT> specialinvoke r9 < init > r2 <NEXT> r11 = org eclipse jdt core search search engine r0 <NEXT> $ r7 = r11 basic engine <NEXT> r10 = new org eclipse jdt core search search engine $ result collector adapter <NEXT> specialinvoke r10 < init > r3 <NEXT> $ r8 = r3 get progress monitor <NEXT> r12 = org eclipse jdt core search search requestor r10 <NEXT> r13 = org eclipse jdt core search search pattern r9 <NEXT> $ r7 search declaration r2 r12 r13 $ r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = org eclipse jdt core search type name match r0 <NEXT> $ r2 = r7 get type <NEXT> r1 = $ r2 get declare type <NEXT> if r1 == null goto label1 <NEXT> $ r6 = r1 get fully qualify name 46 <NEXT> return $ r6 <NEXT> if r1 == null goto label1 <NEXT> label r8 = org eclipse jdt core search type name match r0 <NEXT> $ r3 = r8 get type <NEXT> $ r4 = $ r3 get package fragment <NEXT> $ r5 = $ r4 get element name <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 resolve r1 <NEXT> r2 = org eclipse jdt internal codeassist complete completion javadoc r0 <NEXT> r3 = org eclipse jdt internal compiler lookup scope r1 <NEXT> r2 internal resolve r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse jdt internal codeassist thrown exception finder r0 <NEXT> $ r2 = r4 catch exception <NEXT> $ i0 = $ r2 element size <NEXT> r1 = newarray org eclipse jdt internal compiler lookup reference bind [ $ i0 ] <NEXT> r5 = org eclipse jdt internal codeassist thrown exception finder r0 <NEXT> $ r3 = r5 catch exception <NEXT> $ r3 a array r1 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org eclipse jdt internal compiler lookup reference bind <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org eclipse jdt internal compiler lookup reference bind r0 <NEXT> $ z1 = $ r1 have type bit 3 <NEXT> if $ z1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = r0 <NEXT> label r7 = org eclipse jdt internal compiler ast fake track variable r6 <NEXT> $ r3 = r7 bind <NEXT> r1 mark a definitely non null $ r3 <NEXT> r8 = org eclipse jdt internal compiler ast fake track variable r6 <NEXT> $ i0 = r8 global closing state <NEXT> $ i1 = $ i0 | 1 <NEXT> r9 = org eclipse jdt internal compiler ast fake track variable r6 <NEXT> r9 global closing state = $ i1 <NEXT> r10 = org eclipse jdt internal compiler ast fake track variable r6 <NEXT> $ r4 = r10 bind <NEXT> r2 mark finally null status $ r4 4 <NEXT> r11 = org eclipse jdt internal compiler ast fake track variable r6 <NEXT> r6 = r11 inner tracker <NEXT> if r6 ! = null goto label1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt internal compiler ast fake track variable r0 <NEXT> $ i0 = r1 global closing state <NEXT> $ i1 = $ i0 | 8 <NEXT> r2 = org eclipse jdt internal compiler ast fake track variable r0 <NEXT> r2 global closing state = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal compiler ast do statement r0 <NEXT> $ r1 = r2 action <NEXT> $ z0 = $ r1 continue at outer label <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ z0 = r3 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ l2 = r4 match <NEXT> r5 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ i1 = r5 path ptr <NEXT> r6 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ r2 = r6 restrict $ l2 $ i1 <NEXT> r7 = org eclipse jdt internal compiler env i type annotation walker $ r2 <NEXT> return r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = specialinvoke r0 to next detail i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r13 = org eclipse jdt internal compiler codegen constant pool r0 <NEXT> r13 current index = i0 <NEXT> r14 = org eclipse jdt internal compiler codegen constant pool r0 <NEXT> r14 current offset = i1 <NEXT> r15 = org eclipse jdt internal compiler codegen constant pool r0 <NEXT> $ r2 = r15 u t f8 cache <NEXT> $ r1 = org eclipse jdt internal compiler codegen attribute name constant code name <NEXT> $ i2 = $ r2 get $ r1 <NEXT> if $ i2 < i0 goto label1 <NEXT> r16 = org eclipse jdt internal compiler codegen constant pool r0 <NEXT> $ r12 = r16 u t f8 cache <NEXT> $ r11 = org eclipse jdt internal compiler codegen attribute name constant code name <NEXT> $ r12 remove $ r11 <NEXT> label r17 = org eclipse jdt internal compiler codegen constant pool r0 <NEXT> $ r4 = r17 u t f8 cache <NEXT> $ r3 = org eclipse jdt internal compiler codegen constant pool clinit signature <NEXT> $ i3 = $ r4 get $ r3 <NEXT> if $ i3 < i0 goto label2 <NEXT> r18 = org eclipse jdt internal compiler codegen constant pool r0 <NEXT> $ r10 = r18 u t f8 cache <NEXT> $ r9 = org eclipse jdt internal compiler codegen constant pool clinit signature <NEXT> $ r10 remove $ r9 <NEXT> label r19 = org eclipse jdt internal compiler codegen constant pool r0 <NEXT> $ r6 = r19 u t f8 cache <NEXT> $ r5 = org eclipse jdt internal compiler codegen constant pool clinit <NEXT> $ i4 = $ r6 get $ r5 <NEXT> if $ i4 < i0 goto label3 <NEXT> r20 = org eclipse jdt internal compiler codegen constant pool r0 <NEXT> $ r8 = r20 u t f8 cache <NEXT> $ r7 = org eclipse jdt internal compiler codegen constant pool clinit <NEXT> $ r8 remove $ r7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 consume package declaration name <NEXT> r8 = org eclipse jdt internal compiler document element parser r0 <NEXT> $ r2 = r8 compilation unit <NEXT> r1 = $ r2 current package <NEXT> r9 = org eclipse jdt internal compiler document element parser r0 <NEXT> $ r3 = r9 requestor <NEXT> $ i2 = r1 declaration source start <NEXT> $ i3 = r1 declaration source end <NEXT> r10 = org eclipse jdt internal compiler document element parser r0 <NEXT> $ r4 = r10 int array stack <NEXT> r11 = org eclipse jdt internal compiler document element parser r0 <NEXT> $ i0 = r11 int array ptr <NEXT> $ i1 = $ i0 - 1 <NEXT> r12 = org eclipse jdt internal compiler document element parser r0 <NEXT> r12 int array ptr = $ i1 <NEXT> $ r5 = $ r4 [ $ i0 ] <NEXT> $ r6 = r1 get import name <NEXT> $ r7 = org eclipse jdt core compiler char operation concat with $ r6 46 <NEXT> $ i4 = r1 source start <NEXT> $ r3 accept package $ i2 $ i3 $ r5 $ r7 $ i4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal compiler env name environment answer r0 <NEXT> $ r1 = r2 compilation unit <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal compiler env name environment answer r0 <NEXT> $ r1 = r2 bind <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label i3 = 0 <NEXT> goto label4 <NEXT> label if i3 < 3 goto label2 <NEXT> label r4 = org eclipse jdt internal compiler impl irritant set r0 <NEXT> $ r2 = r4 bit <NEXT> $ i1 = $ r2 [ i3 ] <NEXT> $ r3 = r1 bit <NEXT> $ i0 = $ r3 [ i3 ] <NEXT> $ i2 = $ i1 & $ i0 <NEXT> if $ i2 == 0 goto label3 <NEXT> return 1 <NEXT> if $ i2 == 0 goto label3 <NEXT> label i3 = i3 + 1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jdt internal compiler lookup field bind r0 <NEXT> $ i0 = r3 modifier <NEXT> $ i1 = $ i0 & 1073741824 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> return null <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label r4 = org eclipse jdt internal compiler lookup field bind r0 <NEXT> $ r1 = r4 type <NEXT> $ r2 = $ r1 generic type signature <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt internal compiler lookup method bind r0 <NEXT> $ i0 = r1 modifier <NEXT> $ i1 = $ i0 & 16 <NEXT> if $ i1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal compiler lookup method bind r0 <NEXT> $ r1 = r2 original <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal compiler lookup variable binding r0 <NEXT> $ r1 = r2 constant <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r9 = org eclipse jdt internal compiler parser recover block r0 <NEXT> $ r3 = r9 parent <NEXT> if $ r3 == null goto label1 <NEXT> r10 = org eclipse jdt internal compiler parser recover block r0 <NEXT> $ r4 = r10 parent <NEXT> $ z0 = $ r4 instanceof org eclipse jdt internal compiler parser recover method <NEXT> if $ z0 == 0 goto label1 <NEXT> r11 = org eclipse jdt internal compiler parser recover block r0 <NEXT> $ r5 = r11 parent <NEXT> r2 = org eclipse jdt internal compiler parser recover method $ r5 <NEXT> $ r6 = r2 method body <NEXT> if $ r6 ! = r0 goto label1 <NEXT> $ r7 = r2 parent <NEXT> if $ r7 ! = null goto label1 <NEXT> r12 = org eclipse jdt internal compiler parser recover block r0 <NEXT> r12 reset pending modifier <NEXT> r13 = org eclipse jdt internal compiler parser recover element r0 <NEXT> return r13 <NEXT> if $ r7 ! = null goto label1 <NEXT> label $ r8 = specialinvoke r0 add r1 i0 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = r0 <NEXT> goto label3 <NEXT> label if r2 ! = null goto label1 <NEXT> label $ z0 = r2 instanceof org eclipse jdt internal compiler parser recover initializer <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r1 = org eclipse jdt internal compiler parser recover initializer r2 <NEXT> return $ r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r3 = org eclipse jdt internal compiler parser recover element r2 <NEXT> r2 = r3 parent <NEXT> label if r2 ! = null goto label1 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse jdt internal core annotatable info r0 <NEXT> r1 name end = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse jdt internal core builder build notifier r0 <NEXT> $ r1 = r5 monitor <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org eclipse jdt internal core builder build notifier r0 <NEXT> $ r2 = r6 monitor <NEXT> $ z0 = $ r2 be cancel <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = new org eclipse core runtime operation cancel exception <NEXT> specialinvoke r4 < init > <NEXT> r7 = java lang throwable r4 <NEXT> throw r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> $ r1 = java util locale get default <NEXT> $ r2 = org eclipse jdt internal core builder problem factory get problem factory $ r1 <NEXT> r3 = org eclipse jdt internal compiler i problem factory $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r21 = org eclipse jdt internal core javadoc content r0 <NEXT> $ r3 = r21 content <NEXT> if $ r3 ! = null goto label01 <NEXT> return null <NEXT> if $ r3 ! = null goto label01 <NEXT> label r16 = null <NEXT> entermonitor r0 <NEXT> label r22 = org eclipse jdt internal core javadoc content r0 <NEXT> $ r5 = r22 method doc range <NEXT> if $ r5 ! = null goto label03 <NEXT> r17 = new org eclipse jdt internal compiler util hashtable of object to int array <NEXT> specialinvoke r17 < init > <NEXT> r23 = org eclipse jdt internal core javadoc content r0 <NEXT> r23 method doc range = r17 <NEXT> goto label04 <NEXT> label if r16 ! = null goto label05 <NEXT> r25 = org eclipse jdt internal core javadoc content r0 <NEXT> r16 = r25 compute method range r1 <NEXT> r26 = org eclipse jdt internal core javadoc content r0 <NEXT> $ r12 = r26 method doc range <NEXT> $ r12 put r1 r16 <NEXT> label exitmonitor r0 <NEXT> label goto label09 <NEXT> label if r16 == null goto label11 <NEXT> $ r7 = org eclipse jdt internal core javadoc content unknown_format <NEXT> if r16 ! = $ r7 goto label10 <NEXT> r19 = new org eclipse jdt core java model exception <NEXT> r18 = new org eclipse jdt internal core java model status <NEXT> r27 = org eclipse jdt core i java element r1 <NEXT> specialinvoke r18 < init > 1009 r27 <NEXT> r28 = org eclipse jdt core i java model status r18 <NEXT> specialinvoke r19 < init > r28 <NEXT> r29 = java lang throwable r19 <NEXT> throw r29 <NEXT> if r16 ! = $ r7 goto label10 <NEXT> label r20 = new java lang string <NEXT> r30 = org eclipse jdt internal core javadoc content r0 <NEXT> $ r9 = r30 content <NEXT> $ i3 = r16 [ 0 ] <NEXT> $ i1 = r16 [ 1 ] <NEXT> $ i0 = r16 [ 0 ] <NEXT> $ i2 = $ i1 - $ i0 <NEXT> specialinvoke r20 < init > $ r9 $ i3 $ i2 <NEXT> return r20 <NEXT> label if r16 == null goto label11 <NEXT> label return null <NEXT> if $ r5 ! = null goto label03 <NEXT> label r24 = org eclipse jdt internal core javadoc content r0 <NEXT> $ r6 = r24 method doc range <NEXT> r16 = $ r6 get r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jdt internal core jdom d o m builder r0 <NEXT> $ z0 = r2 f building single member <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org eclipse jdt internal core jdom d o m builder r0 <NEXT> $ z1 = r3 f finish single member <NEXT> if $ z1 == 0 goto label1 <NEXT> return <NEXT> if $ z1 == 0 goto label1 <NEXT> label r4 = org eclipse jdt internal core jdom d o m builder r0 <NEXT> r4 f abort = 1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r4 = org eclipse jdt internal core jdom d o m builder r0 <NEXT> $ r2 = r4 f stack <NEXT> $ r3 = $ r2 pop <NEXT> r1 = org eclipse jdt internal core jdom d o m method $ r3 <NEXT> r1 set source range end i1 <NEXT> $ i2 = i0 + 1 <NEXT> r1 set body range end $ i2 <NEXT> r5 = org eclipse jdt internal core jdom d o m builder r0 <NEXT> r6 = org eclipse jdt internal core jdom d o m node r1 <NEXT> r5 f node = r6 <NEXT> r7 = org eclipse jdt internal core jdom d o m builder r0 <NEXT> $ z0 = r7 f building single member <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = org eclipse jdt internal core jdom d o m builder r0 <NEXT> r8 f finish single member = 1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r1 = org eclipse jdt internal core jdom d o m builder r0 <NEXT> r1 exit type i0 i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r21 = org eclipse jdt internal core jdom d o m field r0 <NEXT> $ z0 = r21 be detailed <NEXT> if $ z0 ! = 0 goto label8 <NEXT> r22 = org eclipse jdt internal core jdom d o m field r0 <NEXT> $ z1 = r22 be variable declarator <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r23 = org eclipse jdt internal core jdom d o m field r0 <NEXT> $ z2 = r23 have multiple variable declarators <NEXT> if $ z2 == 0 goto label7 <NEXT> label r24 = org eclipse jdt internal core jdom d o m field r0 <NEXT> r1 = r24 get first field declaration <NEXT> r25 = org eclipse jdt internal core jdom d o m field r0 <NEXT> r2 = r25 get last field declaration <NEXT> r15 = r1 <NEXT> r26 = org eclipse jdt internal core jdom d o m node r1 <NEXT> r16 = r26 get content <NEXT> goto label3 <NEXT> label if r15 ! = r2 goto label2 <NEXT> label r27 = org eclipse jdt internal core jdom d o m node r15 <NEXT> r15 = r27 f next node <NEXT> r18 = new java lang string builder <NEXT> $ r6 = java lang string value of r16 <NEXT> specialinvoke r18 < init > $ r6 <NEXT> r28 = org eclipse jdt internal core jdom d o m node r15 <NEXT> $ r7 = r28 get content <NEXT> $ r8 = r18 append $ r7 <NEXT> r16 = $ r8 to string <NEXT> label if r15 ! = r2 goto label2 <NEXT> r19 = new org eclipse jdt internal core jdom d o m builder <NEXT> specialinvoke r19 < init > <NEXT> $ r10 = r16 to char array <NEXT> r4 = r19 create field $ r10 <NEXT> $ i0 = lengthof r4 <NEXT> if $ i0 ! = 0 goto label4 <NEXT> r20 = new org eclipse jdt core jdom d o m exception <NEXT> $ r14 = org eclipse jdt internal core util message dom_cannot detail <NEXT> specialinvoke r20 < init > $ r14 <NEXT> r29 = java lang throwable r20 <NEXT> throw r29 <NEXT> if $ i0 ! = 0 goto label4 <NEXT> label r17 = r0 <NEXT> i2 = 0 <NEXT> goto label6 <NEXT> label $ i1 = lengthof r4 <NEXT> if i2 < $ i1 goto label5 <NEXT> label $ r11 = r4 [ i2 ] <NEXT> $ r12 = org eclipse jdt internal core jdom d o m node $ r11 <NEXT> r30 = org eclipse jdt internal core jdom d o m node r17 <NEXT> r30 share content $ r12 <NEXT> r31 = org eclipse jdt internal core jdom d o m node r17 <NEXT> r17 = r31 f next node <NEXT> i2 = i2 + 1 <NEXT> if i2 < $ i1 goto label5 <NEXT> goto label8 <NEXT> label return <NEXT> if $ z2 == 0 goto label7 <NEXT> label specialinvoke r0 become detail <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jdt internal core jdom d o m method r0 <NEXT> r1 set mask 1024 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse jdt internal core l r u cache enumerator r0 <NEXT> $ r2 = r5 element queue <NEXT> r1 = $ r2 value <NEXT> r6 = org eclipse jdt internal core l r u cache enumerator r0 <NEXT> $ r3 = r6 element queue <NEXT> $ r4 = $ r3 next <NEXT> r7 = org eclipse jdt internal core l r u cache enumerator r0 <NEXT> r7 element queue = $ r4 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r21 = new org eclipse jdt internal compiler util simple set <NEXT> specialinvoke r21 < init > <NEXT> $ z0 = org eclipse jdt internal core search index index manager disable_meta_index <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r22 = new org eclipse core runtime path <NEXT> specialinvoke r22 < init > \ `` meta_index\ `` <NEXT> r24 = org eclipse jdt internal core search index index manager r0 <NEXT> r25 = org eclipse core runtime i path r22 <NEXT> $ r16 = r24 compute index location r25 <NEXT> r21 add $ r16 <NEXT> label r2 = org eclipse jdt internal core search basic search engine create workspace scope <NEXT> r23 = new org eclipse jdt internal core search pattern search job <NEXT> $ r8 = org eclipse jdt core search search engine get default search participant <NEXT> specialinvoke r23 < init > null $ r8 r2 null <NEXT> r4 = r23 get index null <NEXT> i3 = 0 <NEXT> i4 = lengthof r4 <NEXT> goto label3 <NEXT> label if i3 < i4 goto label2 <NEXT> label $ r9 = r4 [ i3 ] <NEXT> r18 = $ r9 get index location <NEXT> r21 add r18 <NEXT> i3 = i3 + 1 <NEXT> label if i3 < i4 goto label2 <NEXT> r26 = org eclipse jdt internal core search index index manager r0 <NEXT> $ r11 = r26 index state <NEXT> if $ r11 == null goto label7 <NEXT> r27 = org eclipse jdt internal core search index index manager r0 <NEXT> $ r12 = r27 index state <NEXT> r19 = $ r12 key table <NEXT> r28 = org eclipse jdt internal core search index index manager r0 <NEXT> $ r13 = r28 index state <NEXT> $ i1 = $ r13 element size <NEXT> r20 = newarray org eclipse jdt internal core index index location [ $ i1 ] <NEXT> i5 = 0 <NEXT> i6 = 0 <NEXT> i0 = lengthof r19 <NEXT> goto label6 <NEXT> label if i6 < i0 goto label4 <NEXT> label $ r14 = r19 [ i6 ] <NEXT> r5 = org eclipse jdt internal core index index location $ r14 <NEXT> if r5 == null goto label5 <NEXT> $ z1 = r21 include r5 <NEXT> if $ z1 ! = 0 goto label5 <NEXT> $ i2 = i5 <NEXT> i5 = i5 + 1 <NEXT> r20 [ $ i2 ] = r5 <NEXT> label i6 = i6 + 1 <NEXT> label if i6 < i0 goto label4 <NEXT> if i5 < = 0 goto label7 <NEXT> r29 = org eclipse jdt internal core search index index manager r0 <NEXT> r29 remove index state r20 <NEXT> label r30 = org eclipse jdt internal core search index index manager r0 <NEXT> r30 delete index file r21 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jdt internal core search java search type name match r0 <NEXT> $ r1 = r3 type <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = org eclipse jdt internal core search java search type name match r0 <NEXT> $ i1 = r4 modifier <NEXT> return $ i1 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r5 = org eclipse jdt internal core search java search type name match r0 <NEXT> $ r2 = r5 type <NEXT> $ i0 = $ r2 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse jdt internal core search match possible match r0 <NEXT> $ r1 = r4 openable <NEXT> $ r2 = $ r1 get element name <NEXT> $ r3 = $ r2 to char array <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt internal core single type requestor r0 <NEXT> r1 element = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jdt internal core source field element info r0 <NEXT> $ r1 = r3 type name <NEXT> $ r2 = org eclipse jdt core signature create type signature $ r1 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> $ r1 = newarray char [ 1 ] <NEXT> $ r1 [ 0 ] = c0 <NEXT> r3 = org eclipse jdt internal core util char array buffer r0 <NEXT> r3 append $ r1 0 1 <NEXT> r4 = org eclipse jdt internal core util char array buffer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse jdt internal core util constant pool entry r0 <NEXT> r1 string index = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = org eclipse jdt internal eval code snippet scope r0 <NEXT> r4 = r8 find field for code snippet r1 r2 r3 <NEXT> if r4 ! = null goto label3 <NEXT> r7 = new org eclipse jdt internal compiler lookup problem field bind <NEXT> $ z0 = r1 instanceof org eclipse jdt internal compiler lookup reference bind <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = org eclipse jdt internal compiler lookup reference bind r1 <NEXT> goto label2 <NEXT> label specialinvoke r7 < init > $ r6 r2 1 <NEXT> r9 = org eclipse jdt internal compiler lookup field bind r7 <NEXT> return r9 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r6 = null <NEXT> if r4 ! = null goto label3 <NEXT> label return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal eval global variable r0 <NEXT> $ r1 = r2 type name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core manipulation change correction proposal core r0 <NEXT> $ r1 = r2 f name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse jdt core manipulation change correction proposal core r0 <NEXT> r1 f relevance = i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> r3 = @ parameter4 <NEXT> r4 = @ parameter5 <NEXT> $ r5 = r0 get java project <NEXT> $ r6 = org eclipse jdt internal core manipulation stub utility get method body content z0 $ r5 r1 r2 r3 r4 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core manipulation organize import operation r0 <NEXT> $ r1 = r2 f parse error <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jdt core refactoring compilation unit change r0 <NEXT> r2 f descriptor = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jdt core refactoring descriptor extract class descriptor r0 <NEXT> $ r2 = r3 f argument <NEXT> org eclipse jdt internal core refactoring descriptor java refactoring descriptor util set string $ r2 \ `` package name\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt core refactoring descriptor introduce parameter object descriptor r0 <NEXT> $ z0 = r1 f delegate <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt core refactoring descriptor introduce parameter object descriptor r0 <NEXT> $ z0 = r1 f deprecate delegate <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org eclipse core runtime assert be not null r1 <NEXT> r2 = org eclipse jdt core refactoring descriptor move static member descriptor r0 <NEXT> r2 f type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jdt core refactoring descriptor move static member descriptor r0 <NEXT> r1 f delegate = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org eclipse core runtime assert be not null r1 <NEXT> r2 = org eclipse jdt core refactoring descriptor move static member descriptor r0 <NEXT> r2 f member = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core refactoring participant change method signature argument r0 <NEXT> $ r1 = r2 f new name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt core refactoring participant change method signature participant r0 <NEXT> $ r1 = r2 f argument <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org eclipse jdt core dom infix expression <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org eclipse jdt core dom infix expression r0 <NEXT> $ r2 = $ r1 get operator <NEXT> $ i0 = org eclipse jdt internal core manipulation dom operator precedence get operator precedence $ r2 <NEXT> return $ i0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof org eclipse jdt core dom assignment <NEXT> if $ z1 == 0 goto label2 <NEXT> return 0 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r0 instanceof org eclipse jdt core dom conditional expression <NEXT> if $ z2 == 0 goto label3 <NEXT> return 1 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = r0 instanceof org eclipse jdt core dom instanceof expression <NEXT> if $ z3 == 0 goto label4 <NEXT> return 8 <NEXT> if $ z3 == 0 goto label4 <NEXT> label $ z4 = r0 instanceof org eclipse jdt core dom cast expression <NEXT> if $ z4 == 0 goto label5 <NEXT> return 12 <NEXT> if $ z4 == 0 goto label5 <NEXT> label $ z5 = r0 instanceof org eclipse jdt core dom prefix expression <NEXT> if $ z5 == 0 goto label6 <NEXT> return 13 <NEXT> if $ z5 == 0 goto label6 <NEXT> label $ z6 = r0 instanceof org eclipse jdt core dom class instance creation <NEXT> if $ z6 ! = 0 goto label7 <NEXT> $ z7 = r0 instanceof org eclipse jdt core dom field access <NEXT> if $ z7 ! = 0 goto label7 <NEXT> $ z8 = r0 instanceof org eclipse jdt core dom method invocation <NEXT> if $ z8 ! = 0 goto label7 <NEXT> $ z9 = r0 instanceof org eclipse jdt core dom array access <NEXT> if $ z9 ! = 0 goto label7 <NEXT> $ z10 = r0 instanceof org eclipse jdt core dom postfix expression <NEXT> if $ z10 == 0 goto label8 <NEXT> label return 14 <NEXT> if $ z10 == 0 goto label8 <NEXT> label return 2147483647 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get openable <NEXT> $ z0 = r1 instanceof org eclipse jdt core i type root <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = r1 get buffer <NEXT> if r2 == null goto label1 <NEXT> $ r3 = org eclipse jdt core i source reference r0 <NEXT> $ r4 = $ r3 get source range <NEXT> i0 = $ r4 get offset <NEXT> $ r5 = r0 get java project <NEXT> $ i1 = org eclipse jdt internal core manipulation stub utility get indent use r2 i0 $ r5 <NEXT> return $ i1 <NEXT> if r2 == null goto label1 <NEXT> label return 0 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> i1 = @ parameter3 <NEXT> r2 = @ parameter4 <NEXT> z0 = @ parameter5 <NEXT> $ r3 = org eclipse jdt internal core manipulation stub utility remove type argument r1 <NEXT> $ r4 = org eclipse jdt internal core manipulation stub utility get exclude array r2 <NEXT> $ r5 = org eclipse jdt core naming convention suggest variable name i0 2 $ r3 r0 i1 $ r4 z0 <NEXT> return $ r5 <END>
<BEG> c0 = @ parameter0 <NEXT> $ c1 = java lang character to lower case c0 <NEXT> if $ c1 ! = c0 goto label1 <NEXT> return 1 <NEXT> if $ c1 ! = c0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> $ i1 = org eclipse jdt internal corext util code formatter util get tab width r1 <NEXT> $ i2 = org eclipse jdt internal corext util code formatter util get indent width r1 <NEXT> $ r2 = org eclipse jdt core formatter indent manipulation trim indent r0 i0 $ i1 $ i2 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jdt internal corext callhierarchy caller method wrapper r0 <NEXT> r1 f expand with constructor = z0 <NEXT> r2 = org eclipse jdt internal corext callhierarchy caller method wrapper r0 <NEXT> r2 f be expand with constructor set = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jdt internal corext callhierarchy call hierarchy core r0 <NEXT> r2 default ignore filter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> $ r1 = r7 f parent <NEXT> $ z0 = $ r1 instanceof org eclipse jdt internal corext callhierarchy real caller <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> r6 = r8 get parent <NEXT> goto label4 <NEXT> label if r6 ! = null goto label2 <NEXT> label r9 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> $ r2 = r9 get member <NEXT> $ r3 = $ r2 get handle identifier <NEXT> $ r4 = r6 get member <NEXT> $ r5 = $ r4 get handle identifier <NEXT> $ z1 = $ r3 equal $ r5 <NEXT> if $ z1 == 0 goto label3 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r6 = r6 get parent <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> $ r5 = r8 get parent <NEXT> if $ r5 == null goto label1 <NEXT> r9 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> $ r7 = r9 get parent <NEXT> $ z1 = $ r7 be recursive <NEXT> if $ z1 == 0 goto label1 <NEXT> return <NEXT> if $ z1 == 0 goto label1 <NEXT> label r10 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> r10 check cancel r2 <NEXT> r11 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> r1 pre visit r11 <NEXT> r12 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> $ z0 = r1 visit r12 <NEXT> if $ z0 == 0 goto label4 <NEXT> r13 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> $ r6 = r13 get call r2 <NEXT> i0 = lengthof $ r6 <NEXT> i1 = 0 <NEXT> goto label3 <NEXT> label if i1 < i0 goto label2 <NEXT> label r3 = $ r6 [ i1 ] <NEXT> r3 accept r1 r2 <NEXT> i1 = i1 + 1 <NEXT> label if i1 < i0 goto label2 <NEXT> label r14 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> r1 post visit r14 <NEXT> if r2 == null goto label5 <NEXT> r2 work 1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> r5 f element = null <NEXT> r6 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> $ r1 = r6 f method cache <NEXT> r7 = org eclipse jdt internal corext callhierarchy method wrapper r0 <NEXT> $ r2 = r7 get method call <NEXT> $ r3 = $ r2 get key <NEXT> $ r1 remove $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = r1 iterator <NEXT> goto label5 <NEXT> label $ z5 = r4 have next <NEXT> if $ z5 ! = 0 goto label1 <NEXT> label $ r8 = r4 next <NEXT> r3 = org eclipse jdt core dom body declaration $ r8 <NEXT> $ z0 = r3 instanceof org eclipse jdt core dom method declaration <NEXT> if $ z0 == 0 goto label5 <NEXT> r5 = org eclipse jdt core dom method declaration r3 <NEXT> $ r9 = r5 get name <NEXT> $ r10 = $ r9 get identifier <NEXT> $ r11 = r2 get name <NEXT> $ r12 = $ r11 get identifier <NEXT> $ z1 = $ r10 equal $ r12 <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r13 = r5 parameter <NEXT> $ i0 = $ r13 size <NEXT> $ r14 = r2 parameter <NEXT> $ i1 = $ r14 size <NEXT> if $ i0 ! = $ i1 goto label5 <NEXT> $ r15 = r2 parameter <NEXT> r6 = $ r15 iterator <NEXT> $ r16 = r5 parameter <NEXT> r7 = $ r16 iterator <NEXT> z4 = 1 <NEXT> goto label3 <NEXT> label $ z2 = r6 have next <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label $ r17 = r6 next <NEXT> $ r18 = org eclipse jdt core dom single variable declaration $ r17 <NEXT> $ r19 = $ r18 get type <NEXT> r24 = new org eclipse jdt core dom a s t matcher <NEXT> specialinvoke r24 < init > <NEXT> $ r21 = r7 next <NEXT> $ r22 = org eclipse jdt core dom single variable declaration $ r21 <NEXT> $ r23 = $ r22 get type <NEXT> $ z3 = $ r19 subtree match r24 $ r23 <NEXT> if $ z3 ! = 0 goto label3 <NEXT> z4 = 0 <NEXT> goto label4 <NEXT> label if z4 == 0 goto label5 <NEXT> r25 = org eclipse jdt core dom body declaration r5 <NEXT> return r25 <NEXT> if $ z5 ! = 0 goto label1 <NEXT> return null <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 < 0 goto label1 <NEXT> if i1 < i0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label org eclipse core runtime assert be true $ z1 <NEXT> $ r1 = new org eclipse jdt internal corext dom selection <NEXT> specialinvoke $ r1 < init > <NEXT> $ r1 f start = i0 <NEXT> $ i2 = i1 - i0 <NEXT> $ i3 = $ i2 + 1 <NEXT> $ r1 f length = $ i3 <NEXT> $ i4 = $ r1 f start <NEXT> $ i5 = $ r1 f length <NEXT> $ i6 = $ i4 + $ i5 <NEXT> $ r1 f exclusive end = $ i6 <NEXT> return $ r1 <NEXT> if i1 < i0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = r1 get start position <NEXT> $ i2 = r1 get length <NEXT> i1 = i0 + $ i2 <NEXT> r2 = org eclipse jdt internal corext dom selection r0 <NEXT> $ i3 = r2 f start <NEXT> if i1 > $ i3 goto label1 <NEXT> return 1 <NEXT> if i1 > $ i3 goto label1 <NEXT> label r3 = org eclipse jdt internal corext dom selection r0 <NEXT> $ z0 = r3 cover r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> return 2 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r4 = org eclipse jdt internal corext dom selection r0 <NEXT> $ i4 = r4 f exclusive end <NEXT> if $ i4 > i0 goto label3 <NEXT> return 3 <NEXT> if $ i4 > i0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = java util collection empty list <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray java lang string [ 0 ] <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = org eclipse jdt internal corext fix update property r0 <NEXT> $ r4 = r5 myfinder <NEXT> r6 = org eclipse jdt internal corext fix update property r0 <NEXT> $ r4 finder r6 r1 r2 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = org eclipse jdt internal corext refactoring delegate delegate creator r0 <NEXT> r12 f original rewrite = r1 <NEXT> $ r2 = r1 get cu <NEXT> $ r3 = org eclipse jdt internal ui preference java preference setting get code generation setting $ r2 <NEXT> r13 = org eclipse jdt internal corext refactoring delegate delegate creator r0 <NEXT> r13 f preference = $ r3 <NEXT> r11 = new org eclipse jdt internal corext refactoring structure compilation unit rewrite <NEXT> $ r5 = r1 get cu <NEXT> $ r6 = r1 get root <NEXT> specialinvoke r11 < init > $ r5 $ r6 <NEXT> r14 = org eclipse jdt internal corext refactoring delegate delegate creator r0 <NEXT> r14 f delegate rewrite = r11 <NEXT> r15 = org eclipse jdt internal corext refactoring delegate delegate creator r0 <NEXT> $ r7 = r15 f delegate rewrite <NEXT> $ r8 = $ r7 get a s t rewrite <NEXT> $ r9 = r1 get a s t rewrite <NEXT> $ r10 = $ r9 get extend source range computer <NEXT> $ r8 set target source range computer $ r10 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org eclipse core runtime assert be not null r1 <NEXT> r2 = org eclipse jdt internal corext refactoring refactoring search engine2 r0 <NEXT> r2 f requestor = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org eclipse core runtime assert be not null r1 <NEXT> r32 = org eclipse jdt internal corext refactoring structure move instance method processor r0 <NEXT> $ r6 = r32 f possible target <NEXT> $ i0 = lengthof $ r6 <NEXT> if $ i0 == 0 goto label01 <NEXT> r33 = org eclipse jdt internal corext refactoring structure move instance method processor r0 <NEXT> $ r17 = r33 f candidate target <NEXT> $ i3 = lengthof $ r17 <NEXT> if $ i3 ! = 0 goto label15 <NEXT> label r29 = new java util array list <NEXT> specialinvoke r29 < init > 16 <NEXT> r30 = new java util array list <NEXT> specialinvoke r30 < init > 16 <NEXT> r4 = r1 resolve bind <NEXT> if r4 == null goto label14 <NEXT> r5 = r4 get declare class <NEXT> $ r13 = org eclipse jdt internal corext refactoring structure move instance method processor get argument binding r1 <NEXT> i4 = lengthof $ r13 <NEXT> i5 = 0 <NEXT> goto label05 <NEXT> label if i5 < i4 goto label02 <NEXT> label r19 = $ r13 [ i5 ] <NEXT> r20 = r19 get type <NEXT> $ z0 = r20 be class <NEXT> if $ z0 ! = 0 goto label03 <NEXT> $ z1 = r20 be enum <NEXT> if $ z1 ! = 0 goto label03 <NEXT> $ z2 = org eclipse jdt internal corext refactoring structure move instance method processor is18 or high interface r20 <NEXT> if $ z2 == 0 goto label04 <NEXT> label $ z9 = r20 be from source <NEXT> if $ z9 == 0 goto label04 <NEXT> r29 add r19 <NEXT> r30 add r19 <NEXT> label i5 = i5 + 1 <NEXT> label if i5 < i4 goto label02 <NEXT> r31 = new org eclipse jdt internal corext refactoring structure move instance method processor $ ready only field finder <NEXT> specialinvoke r31 < init > r5 <NEXT> r34 = org eclipse jdt core dom a s t visitor r31 <NEXT> r1 accept r34 <NEXT> $ r15 = r31 get read only field <NEXT> i6 = lengthof $ r15 <NEXT> i7 = 0 <NEXT> goto label09 <NEXT> label if i7 < i6 goto label06 <NEXT> label r23 = $ r15 [ i7 ] <NEXT> r24 = r23 get type <NEXT> $ z3 = r24 be class <NEXT> if $ z3 ! = 0 goto label07 <NEXT> $ z5 = org eclipse jdt internal corext refactoring structure move instance method processor is18 or high interface r24 <NEXT> if $ z5 == 0 goto label08 <NEXT> label $ z4 = r24 be from source <NEXT> if $ z4 == 0 goto label08 <NEXT> r29 add r23 <NEXT> label i7 = i7 + 1 <NEXT> label if i7 < i6 goto label06 <NEXT> $ r16 = r31 get declare field <NEXT> i8 = lengthof $ r16 <NEXT> i9 = 0 <NEXT> goto label13 <NEXT> label if i9 < i8 goto label10 <NEXT> label r26 = $ r16 [ i9 ] <NEXT> r27 = r26 get type <NEXT> $ z6 = r27 be class <NEXT> if $ z6 ! = 0 goto label11 <NEXT> $ z8 = org eclipse jdt internal corext refactoring structure move instance method processor is18 or high interface r27 <NEXT> if $ z8 == 0 goto label12 <NEXT> label $ z7 = r27 be from source <NEXT> if $ z7 == 0 goto label12 <NEXT> r30 add r26 <NEXT> label i9 = i9 + 1 <NEXT> label if i9 < i8 goto label10 <NEXT> label $ i1 = r29 size <NEXT> $ r9 = newarray org eclipse jdt core dom i variable bind [ $ i1 ] <NEXT> r35 = org eclipse jdt internal corext refactoring structure move instance method processor r0 <NEXT> r35 f possible target = $ r9 <NEXT> r36 = org eclipse jdt internal corext refactoring structure move instance method processor r0 <NEXT> $ r10 = r36 f possible target <NEXT> r29 to array $ r10 <NEXT> $ i2 = r30 size <NEXT> $ r11 = newarray org eclipse jdt core dom i variable bind [ $ i2 ] <NEXT> r37 = org eclipse jdt internal corext refactoring structure move instance method processor r0 <NEXT> r37 f candidate target = $ r11 <NEXT> r38 = org eclipse jdt internal corext refactoring structure move instance method processor r0 <NEXT> $ r12 = r38 f candidate target <NEXT> r30 to array $ r12 <NEXT> label r39 = org eclipse jdt internal corext refactoring structure move instance method processor r0 <NEXT> $ r28 = r39 f possible target <NEXT> return $ r28 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt internal corext refactoring typeconstraints type t type r0 <NEXT> $ i0 = r1 f flag <NEXT> $ i1 = $ i0 & 16 <NEXT> if $ i1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt internal corext refactoring typeconstraints type t type r0 <NEXT> $ i0 = r1 f flag <NEXT> $ i1 = $ i0 & 32 <NEXT> if $ i1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt internal corext refactoring typeconstraints type t type r0 <NEXT> $ i0 = r1 f flag <NEXT> $ i1 = $ i0 & 64 <NEXT> if $ i1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal corext refactoring typeconstraints type type environment r0 <NEXT> $ r1 = r2 object_type <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = null <NEXT> if r1 == null goto label1 <NEXT> r5 = new org eclipse jdt core source range <NEXT> $ i0 = r1 get start position <NEXT> $ i1 = r1 get length <NEXT> specialinvoke r5 < init > $ i0 $ i1 <NEXT> r4 = r5 <NEXT> label r6 = org eclipse jdt core i source range r4 <NEXT> $ r2 = org eclipse jdt internal corext refactoring util java status context create r0 r6 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org eclipse text edit multi text edit <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = r0 have child <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r1 = r0 get child <NEXT> $ i1 = r0 get offset <NEXT> $ r4 = r1 [ 0 ] <NEXT> $ i2 = $ r4 get offset <NEXT> if $ i1 == $ i2 goto label3 <NEXT> return 0 <NEXT> if $ i1 == $ i2 goto label3 <NEXT> label $ i3 = r0 get exclusive end <NEXT> $ i4 = lengthof r1 <NEXT> $ i5 = $ i4 - 1 <NEXT> $ r5 = r1 [ $ i5 ] <NEXT> $ i6 = $ r5 get exclusive end <NEXT> if $ i3 == $ i6 goto label4 <NEXT> label i0 = lengthof r1 <NEXT> i7 = 0 <NEXT> goto label7 <NEXT> label if i7 < i0 goto label5 <NEXT> label r2 = r1 [ i7 ] <NEXT> $ z2 = org eclipse jdt internal corext refactoring util text edit util be pack r2 <NEXT> if $ z2 ! = 0 goto label6 <NEXT> label i7 = i7 + 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i2 = lengthof r0 <NEXT> if $ i2 > = 1 goto label1 <NEXT> return r0 <NEXT> if $ i2 > = 1 goto label1 <NEXT> label $ i3 = lengthof r0 <NEXT> if $ i3 ! = 1 goto label2 <NEXT> $ c10 = r0 [ 0 ] <NEXT> if $ c10 ! = 42 goto label2 <NEXT> label i0 = org eclipse jdt internal corext template java signature util index of r0 43 <NEXT> if i0 ! = 0 goto label3 <NEXT> $ r6 = org eclipse jdt internal corext template java signature util null_type_signature_array <NEXT> return $ r6 <NEXT> if i0 ! = 0 goto label3 <NEXT> label if i0 == -1 goto label5 <NEXT> $ i9 = i0 + 1 <NEXT> c11 = r0 [ $ i9 ] <NEXT> if c11 == 42 goto label4 <NEXT> if c11 ! = 43 goto label5 <NEXT> label $ r5 = org eclipse jdt internal corext template java signature util null_type_signature_array <NEXT> return $ r5 <NEXT> if c11 ! = 43 goto label5 <NEXT> label $ r2 = org eclipse jdt core signature get type argument r0 <NEXT> i1 = lengthof $ r2 <NEXT> i12 = 0 <NEXT> goto label8 <NEXT> label if i12 < i1 goto label6 <NEXT> label r7 = $ r2 [ i12 ] <NEXT> $ r3 = org eclipse jdt internal corext template java signature util null_type_signature_array <NEXT> $ z0 = java util array equal r7 $ r3 <NEXT> if $ z0 == 0 goto label7 <NEXT> $ r4 = org eclipse jdt internal corext template java signature util null_type_signature_array <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label7 <NEXT> label i12 = i12 + 1 <NEXT> label if i12 < i1 goto label6 <NEXT> $ c4 = r0 [ 0 ] <NEXT> if $ c4 ! = 45 goto label9 <NEXT> $ i5 = lengthof r0 <NEXT> $ i6 = $ i5 - 1 <NEXT> r8 = newarray char [ $ i6 ] <NEXT> $ i7 = lengthof r0 <NEXT> $ i8 = $ i7 - 1 <NEXT> java lang system arraycopy r0 1 r8 0 $ i8 <NEXT> return r8 <NEXT> if $ c4 ! = 45 goto label9 <NEXT> label return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r2 = null <NEXT> r4 = org eclipse jdt internal corext util method override tester r0 <NEXT> r3 = r4 find overridden method r1 z0 <NEXT> goto label2 <NEXT> label if r3 ! = null goto label1 <NEXT> label r2 = r3 <NEXT> r5 = org eclipse jdt internal corext util method override tester r0 <NEXT> r3 = r5 find overridden method r3 z0 <NEXT> label if r3 ! = null goto label1 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = newarray org eclipse core resource i resource [ 1 ] <NEXT> $ r2 [ 0 ] = r0 <NEXT> $ r3 = org eclipse jdt internal corext util resource make committable $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get location u r i <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = \ `` file\ `` <NEXT> $ r3 = r1 get scheme <NEXT> $ z0 = $ r2 equal ignore case $ r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = new java io file <NEXT> specialinvoke $ r4 < init > r1 <NEXT> $ r5 = $ r4 get absolute path <NEXT> goto label3 <NEXT> label return $ r5 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r5 = r1 to string <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org eclipse jdt internal corext util super type hierarchy cache find type hierarchy in cache r0 <NEXT> if $ r1 == null goto label1 <NEXT> return 1 <NEXT> if $ r1 == null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jdt internal ui dialog status info r0 <NEXT> $ i0 = r1 f severity <NEXT> if $ i0 ! = 1 goto label1 <NEXT> return 1 <NEXT> if $ i0 ! = 1 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ i1 = r2 get offset <NEXT> r4 = org eclipse jdt internal ui javaeditor semantic highlighting presenter core r0 <NEXT> i2 = r4 compute index at offset r1 $ i1 <NEXT> i0 = r1 size <NEXT> goto label3 <NEXT> label if i2 < i0 goto label1 <NEXT> label $ r3 = r1 get i2 <NEXT> if $ r3 ! = r2 goto label2 <NEXT> return i2 <NEXT> if $ r3 ! = r2 goto label2 <NEXT> label i2 = i2 + 1 <NEXT> label if i2 < i0 goto label1 <NEXT> return -1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r6 = org eclipse jdt internal launching environment environment manager r0 <NEXT> r6 initialize extension <NEXT> r7 = org eclipse jdt internal launching environment environment manager r0 <NEXT> $ r2 = r7 f rule participant <NEXT> r8 = org eclipse jdt internal launching environment environment manager r0 <NEXT> $ r1 = r8 f rule participant <NEXT> $ i0 = $ r1 size <NEXT> $ r3 = newarray org eclipse jdt launch environment i access rule participant [ $ i0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = org eclipse jdt launch environment i access rule participant [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = new org eclipse core runtime status <NEXT> $ r2 = org eclipse jdt internal launching launch plugin get unique identifier <NEXT> specialinvoke r3 < init > 4 $ r2 4 r0 null <NEXT> r4 = org eclipse core runtime i status r3 <NEXT> org eclipse jdt internal launching launch plugin log r4 <NEXT> return <END>
<BEG> $ r0 = org eclipse jdt internal launching launch plugin fg x m l parser <NEXT> if $ r0 ! = null goto label5 <NEXT> label $ r1 = javax xml parser document builder factory new instance <NEXT> $ r2 = $ r1 new document builder <NEXT> org eclipse jdt internal launching launch plugin fg x m l parser = $ r2 <NEXT> $ r4 = org eclipse jdt internal launching launch plugin fg x m l parser <NEXT> $ r3 = new org xml sax helper default handler <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 set error handler $ r3 <NEXT> label goto label5 <NEXT> label $ r11 = org eclipse jdt internal launching launch plugin fg x m l parser <NEXT> return $ r11 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal launching library info r0 <NEXT> $ r1 = r2 f bootpath <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt internal launching library info r0 <NEXT> $ r1 = r2 f endorse dirs <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse debug core debug plugin get default <NEXT> if r1 == null goto label1 <NEXT> $ r2 = newarray org eclipse debug core debug event [ 1 ] <NEXT> $ r3 = new org eclipse debug core debug event <NEXT> specialinvoke $ r3 < init > r0 32 1001 <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> r1 fire debug event set $ r2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org eclipse jdt internal launching v m definition container r0 <NEXT> $ r3 = r8 f v m list <NEXT> $ r3 remove r1 <NEXT> r9 = org eclipse jdt internal launching v m definition container r0 <NEXT> $ r4 = r9 f invalid v m list <NEXT> $ r4 remove r1 <NEXT> r10 = org eclipse jdt internal launching v m definition container r0 <NEXT> $ r5 = r10 f v m type to v m map <NEXT> $ r6 = r1 get v m install type <NEXT> $ r7 = $ r5 get $ r6 <NEXT> r2 = java util list $ r7 <NEXT> if r2 == null goto label1 <NEXT> r2 remove r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt launch abstract v m install r0 <NEXT> $ r1 = r2 f id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse jdt launch abstract v m install r0 <NEXT> $ r2 = r5 f attribute map <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r5 = org eclipse jdt launch abstract v m runner quote windows args r4 <NEXT> $ r3 = org eclipse debug core debug plugin exec r5 r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt launch library location r0 <NEXT> $ r1 = r2 f javadoc location <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt launch property change event r0 <NEXT> $ r1 = r2 new value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jdt launch property change event r0 <NEXT> $ r1 = r2 old value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jdt launch sourcelookup archive source location r0 <NEXT> $ r1 = r3 get name <NEXT> $ r2 = org eclipse jdt launch sourcelookup archive source location get zip file $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse ltk core refactoring check condition operation r0 <NEXT> $ r1 = r2 f status <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label3 <NEXT> $ r2 = r1 get parent <NEXT> if $ r2 ! = null goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label org eclipse core runtime assert be true $ z2 <NEXT> r4 = org eclipse ltk core refactoring composite change r0 <NEXT> $ r3 = r4 f change <NEXT> $ r3 add r1 <NEXT> r1 set parent r0 <NEXT> label return <NEXT> if $ r2 ! = null goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r6 = org eclipse ltk core refactoring composite change r0 <NEXT> $ r2 = r6 f change <NEXT> r7 = org eclipse ltk core refactoring composite change r0 <NEXT> $ r1 = r7 f change <NEXT> $ i0 = $ r1 size <NEXT> $ r3 = newarray org eclipse ltk core refactoring change [ $ i0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = org eclipse ltk core refactoring change [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse ltk core refactoring history refactoring execution event r0 <NEXT> $ i0 = r1 f type <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse ltk core refactoring participant move argument r0 <NEXT> $ z0 = r1 f update reference <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse ltk core refactoring participant move refactoring r0 <NEXT> $ r1 = r2 f processor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse ltk core refactoring participant reorg execution log r0 <NEXT> $ r2 = r3 f new name <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r5 = new org eclipse ltk core refactoring participant resource change checker <NEXT> specialinvoke $ r5 < init > <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> goto label2 <NEXT> label if i1 < i0 goto label1 <NEXT> label r3 = r0 [ i1 ] <NEXT> $ r6 = $ r5 get delta factory <NEXT> $ r6 change r3 <NEXT> i1 = i1 + 1 <NEXT> label if i1 < i0 goto label1 <NEXT> $ r7 = $ r5 check r1 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse ltk core refactoring perform change operation r0 <NEXT> $ r1 = r2 f validation status <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse ltk core refactoring refactoring r0 <NEXT> r1 = r2 do get refactoring tick provider <NEXT> if r1 ! = null goto label1 <NEXT> r1 = org eclipse ltk core refactoring refactoring tick provider default <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org eclipse core runtime assert be not null r1 <NEXT> $ r2 = r1 get full path <NEXT> r3 = org eclipse ltk core refactoring resource move rename resource descriptor r0 <NEXT> r3 f destination path = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse ltk core refactoring text edit base change r0 <NEXT> $ z0 = r1 f track edit <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse ltk core refactoring multi state text file change r0 <NEXT> r1 f save mode = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse ltk core refactoring multi state text file change r0 <NEXT> $ i0 = r1 f save mode <NEXT> $ i1 = $ i0 & 2 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> r2 = org eclipse ltk core refactoring multi state text file change r0 <NEXT> $ z0 = r2 f dirty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r3 = org eclipse ltk core refactoring multi state text file change r0 <NEXT> $ i2 = r3 f save mode <NEXT> $ i3 = $ i2 & 1 <NEXT> if $ i3 ! = 0 goto label2 <NEXT> label return 0 <NEXT> if $ i3 ! = 0 goto label2 <NEXT> label return 1 <END>
<BEG> l0 = @ parameter0 <NEXT> $ r1 = org eclipse ltk internal core refactoring history refactoring history manager fg calendar <NEXT> $ r1 set time in millis l0 <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > 256 <NEXT> $ r3 = org eclipse ltk internal core refactoring history refactoring history manager fg calendar <NEXT> $ i1 = $ r3 get 1 <NEXT> r13 append $ i1 <NEXT> r13 append 47 <NEXT> $ r6 = org eclipse ltk internal core refactoring history refactoring history manager fg calendar <NEXT> $ i2 = $ r6 get 2 <NEXT> $ i3 = $ i2 + 1 <NEXT> r13 append $ i3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse ltk internal core refactoring resource move rename resource processor r0 <NEXT> $ r1 = r2 f new resource name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org eclipse ltk internal core refactoring resource resource modification r0 <NEXT> $ r2 = r8 f create <NEXT> if $ r2 ! = null goto label1 <NEXT> r6 = new java util array list <NEXT> specialinvoke r6 < init > 2 <NEXT> r9 = org eclipse ltk internal core refactoring resource resource modification r0 <NEXT> r9 f create = r6 <NEXT> label r10 = org eclipse ltk internal core refactoring resource resource modification r0 <NEXT> $ r3 = r10 f create <NEXT> $ r3 add r1 <NEXT> r11 = org eclipse ltk internal core refactoring resource resource modification r0 <NEXT> $ i0 = r11 f ignore count <NEXT> if $ i0 ! = 0 goto label2 <NEXT> r7 = new org eclipse ltk internal core refactoring resource resource modification $ create description <NEXT> specialinvoke r7 < init > r1 <NEXT> r12 = org eclipse ltk internal core refactoring resource resource modification r0 <NEXT> r13 = org eclipse ltk internal core refactoring resource resource modification $ delta description r7 <NEXT> r12 internal add r13 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse osgi container module container r0 <NEXT> $ r1 = r2 adaptor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org eclipse osgi container module container adaptor default executor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse osgi container module database r0 <NEXT> r4 read lock <NEXT> label r5 = org eclipse osgi container module database r0 <NEXT> $ r2 = r5 revision time stamp <NEXT> l0 = $ r2 get <NEXT> label r6 = org eclipse osgi container module database r0 <NEXT> r6 read unlock <NEXT> return l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org eclipse osgi container module revision r0 <NEXT> $ r2 = r4 capability <NEXT> $ r3 = $ r2 get list r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse osgi container module revision builder r0 <NEXT> r2 symbolic name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = new org eclipse osgi framework eventmgr copy on write identity map $ snapshot <NEXT> r5 = org eclipse osgi framework eventmgr copy on write identity map r0 <NEXT> $ r2 = specialinvoke r5 entry <NEXT> specialinvoke r4 < init > $ r2 <NEXT> $ r3 = r4 value <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java lang system get security manager <NEXT> if $ r2 ! = null goto label1 <NEXT> $ z1 = r1 be directory <NEXT> return $ z1 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r7 = new org eclipse osgi framework util secure action $ 12 <NEXT> r8 = org eclipse osgi framework util secure action r0 <NEXT> specialinvoke r7 < init > r8 r1 <NEXT> r9 = org eclipse osgi framework util secure action r0 <NEXT> $ r4 = r9 control context <NEXT> r10 = java security privilege action r7 <NEXT> $ r5 = java security access controller do privilege r10 $ r4 <NEXT> $ r6 = java lang boolean $ r5 <NEXT> $ z0 = $ r6 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse osgi internal cd c d s bundle file r0 <NEXT> $ z0 = r1 prim <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse osgi internal debug framework debug trace entry r0 <NEXT> $ r1 = r2 message <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse osgi internal debug framework debug trace entry r0 <NEXT> $ r1 = r2 option path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 to lower case <NEXT> $ r3 = org eclipse osgi internal framework alias mapper processor alias table <NEXT> r5 = org eclipse osgi internal framework alias mapper r0 <NEXT> $ r4 = specialinvoke r5 get alias $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse osgi internal hookregistry hook registry r0 <NEXT> $ r1 = r3 container <NEXT> $ r2 = $ r1 get configuration <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse osgi internal loader classpath classpath entry r0 <NEXT> $ r1 = r2 bundlefile <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r19 = org eclipse osgi internal loader classpath classpath manager r0 <NEXT> $ r1 = r19 entry <NEXT> i0 = lengthof $ r1 <NEXT> i1 = 0 <NEXT> goto label6 <NEXT> label if i1 < i0 goto label1 <NEXT> label r14 = $ r1 [ i1 ] <NEXT> if r14 == null goto label5 <NEXT> label r14 close <NEXT> label goto label5 <NEXT> label i1 = i1 + 1 <NEXT> label if i1 < i0 goto label1 <NEXT> r22 = org eclipse osgi internal loader classpath classpath manager r0 <NEXT> r16 = r22 get fragment classpaths <NEXT> i2 = lengthof r16 <NEXT> i3 = 0 <NEXT> goto label8 <NEXT> label if i3 < i2 goto label7 <NEXT> label r18 = r16 [ i3 ] <NEXT> r18 close <NEXT> i3 = i3 + 1 <NEXT> label if i3 < i2 goto label7 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get action <NEXT> $ z0 = $ r2 equal \ `` import\ `` <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = new java lang security exception <NEXT> specialinvoke r5 < init > <NEXT> throw r5 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r6 = org eclipse osgi internal permadmin bundle permission r0 <NEXT> $ r3 = r6 woven permission <NEXT> r7 = java security permission r1 <NEXT> $ r3 add r7 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse osgi internal serviceregistry filter service listener r0 <NEXT> $ z0 = r1 remove <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse osgi internal serviceregistry service reference impl r0 <NEXT> $ r1 = r3 registration <NEXT> $ r2 = $ r1 get bundle <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = org eclipse osgi internal serviceregistry service registry r0 <NEXT> $ r5 = r13 service event listener <NEXT> entermonitor $ r5 <NEXT> label r14 = org eclipse osgi internal serviceregistry service registry r0 <NEXT> $ r6 = r14 service event listener <NEXT> $ r7 = $ r6 remove r1 <NEXT> r2 = java util map $ r7 <NEXT> exitmonitor $ r5 <NEXT> label goto label5 <NEXT> label if r2 == null goto label6 <NEXT> $ z0 = r2 be empty <NEXT> if $ z0 == 0 goto label7 <NEXT> label return <NEXT> if $ z0 == 0 goto label7 <NEXT> label r12 = r2 value <NEXT> r4 = r12 iterator <NEXT> goto label9 <NEXT> label $ z1 = r4 have next <NEXT> if $ z1 ! = 0 goto label8 <NEXT> label $ r8 = r4 next <NEXT> r3 = org eclipse osgi internal serviceregistry filter service listener $ r8 <NEXT> r3 mark remove <NEXT> if $ z1 ! = 0 goto label8 <NEXT> $ r9 = org eclipse osgi internal serviceregistry service registry a listener info r12 <NEXT> r15 = org eclipse osgi internal serviceregistry service registry r0 <NEXT> specialinvoke r15 notify listener hook $ r9 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r1 = org osgi framework version empty version <NEXT> label r2 = org eclipse osgi service resolver version range r0 <NEXT> $ z0 = r2 include r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org osgi framework version r0 <NEXT> $ i0 = r1 micro <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org osgi framework version range r0 <NEXT> $ r1 = r2 right <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org osgi framework version range r0 <NEXT> $ z0 = r1 leave closed <NEXT> if $ z0 == 0 goto label1 <NEXT> $ c0 = 91 <NEXT> goto label2 <NEXT> label return $ c0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ c0 = 40 <END>
<BEG> r0 = @ this <NEXT> r1 = org osgi framework version range r0 <NEXT> $ z0 = r1 empty <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 length <NEXT> if $ i0 ! = 0 goto label01 <NEXT> r54 = new java lang illegal argument exception <NEXT> r53 = new java lang string builder <NEXT> specialinvoke r53 < init > \ `` invalid attribute name \\\ `` \ `` <NEXT> $ r44 = r53 append r1 <NEXT> $ r45 = $ r44 append \ `` \\\ `` \ `` <NEXT> $ r46 = $ r45 to string <NEXT> specialinvoke r54 < init > $ r46 <NEXT> throw r54 <NEXT> if $ i0 ! = 0 goto label01 <NEXT> label $ r3 = r1 to char array <NEXT> i1 = lengthof $ r3 <NEXT> i2 = 0 <NEXT> goto label05 <NEXT> label if i2 < i1 goto label02 <NEXT> label c3 = $ r3 [ i2 ] <NEXT> if c3 == 61 goto label03 <NEXT> if c3 == 62 goto label03 <NEXT> if c3 == 60 goto label03 <NEXT> if c3 == 126 goto label03 <NEXT> if c3 == 40 goto label03 <NEXT> if c3 ! = 41 goto label04 <NEXT> label r56 = new java lang illegal argument exception <NEXT> r55 = new java lang string builder <NEXT> specialinvoke r55 < init > \ `` invalid attribute name \\\ `` \ `` <NEXT> $ r49 = r55 append r1 <NEXT> $ r50 = $ r49 append \ `` \\\ `` \ `` <NEXT> $ r51 = $ r50 to string <NEXT> specialinvoke r56 < init > $ r51 <NEXT> throw r56 <NEXT> if c3 ! = 41 goto label04 <NEXT> label i2 = i2 + 1 <NEXT> label if i2 < i1 goto label02 <NEXT> r57 = new java lang string builder <NEXT> specialinvoke r57 < init > 128 <NEXT> r58 = org osgi framework version range r0 <NEXT> $ z0 = r58 leave closed <NEXT> if $ z0 ! = 0 goto label07 <NEXT> r59 = org osgi framework version range r0 <NEXT> $ r41 = r59 right <NEXT> if $ r41 == null goto label06 <NEXT> r60 = org osgi framework version range r0 <NEXT> $ z3 = r60 right close <NEXT> if $ z3 ! = 0 goto label07 <NEXT> label $ z4 = 1 <NEXT> goto label08 <NEXT> label z5 = $ z4 <NEXT> if $ z4 ! = 0 goto label09 <NEXT> r61 = org osgi framework version range r0 <NEXT> $ r40 = r61 right <NEXT> if $ r40 ! = null goto label09 <NEXT> $ z6 = 0 <NEXT> goto label10 <NEXT> label z7 = $ z6 <NEXT> if $ z6 == 0 goto label11 <NEXT> r57 append \ `` & \ `` <NEXT> label if z5 == 0 goto label12 <NEXT> r57 append 40 <NEXT> r57 append r1 <NEXT> r57 append \ `` = * \ `` <NEXT> label r62 = org osgi framework version range r0 <NEXT> $ z1 = r62 leave closed <NEXT> if $ z1 == 0 goto label13 <NEXT> label r57 append \ `` ! \ `` <NEXT> if $ r40 ! = null goto label09 <NEXT> label $ z6 = 1 <NEXT> if $ z3 ! = 0 goto label07 <NEXT> label $ z4 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r8 = \ `` org osgi service condpermadmin bundle signer condition\ `` <NEXT> $ r9 = r1 get type <NEXT> $ z0 = $ r8 equal $ r9 <NEXT> if $ z0 ! = 0 goto label01 <NEXT> $ r23 = new java lang illegal argument exception <NEXT> specialinvoke $ r23 < init > \ `` condition info must be of type \\\ `` org osgi service condpermadmin bundle signer condition\\\ `` \ `` <NEXT> throw $ r23 <NEXT> if $ z0 ! = 0 goto label01 <NEXT> label r2 = r1 get args <NEXT> $ i0 = lengthof r2 <NEXT> if $ i0 == 1 goto label02 <NEXT> $ i3 = lengthof r2 <NEXT> if $ i3 == 2 goto label02 <NEXT> $ r19 = new java lang illegal argument exception <NEXT> $ r20 = new java lang string builder <NEXT> specialinvoke $ r20 < init > \ `` illegal number of args \ `` <NEXT> $ i4 = lengthof r2 <NEXT> $ r21 = $ r20 append $ i4 <NEXT> $ r22 = $ r21 to string <NEXT> specialinvoke $ r19 < init > $ r22 <NEXT> throw $ r19 <NEXT> if $ i3 == 2 goto label02 <NEXT> label r3 = r0 get signer certificate 2 <NEXT> z6 = 0 <NEXT> $ r10 = r3 value <NEXT> r4 = $ r10 iterator <NEXT> goto label06 <NEXT> label $ z1 = r4 have next <NEXT> if $ z1 ! = 0 goto label03 <NEXT> label $ r11 = r4 next <NEXT> r24 = java util list $ r11 <NEXT> $ r12 = new java util array list <NEXT> $ i1 = r24 size <NEXT> specialinvoke $ r12 < init > $ i1 <NEXT> r7 = r24 iterator <NEXT> goto label05 <NEXT> label $ z2 = r7 have next <NEXT> if $ z2 ! = 0 goto label04 <NEXT> label $ r13 = r7 next <NEXT> r6 = java security cert x509 certificate $ r13 <NEXT> $ r14 = r6 get subject d n <NEXT> $ r15 = $ r14 get name <NEXT> $ r12 add $ r15 <NEXT> if $ z2 ! = 0 goto label04 <NEXT> $ r16 = r2 [ 0 ] <NEXT> $ z4 = org osgi framework framework util match distinguish name chain $ r16 $ r12 <NEXT> if $ z4 == 0 goto label06 <NEXT> z6 = 1 <NEXT> goto label07 <NEXT> label $ i2 = lengthof r2 <NEXT> if $ i2 ! = 2 goto label08 <NEXT> $ r18 = \ `` ! \ `` <NEXT> $ r17 = r2 [ 1 ] <NEXT> $ z7 = $ r18 equal $ r17 <NEXT> goto label09 <NEXT> label $ z5 = $ z7 ^ z6 <NEXT> if $ z5 == 0 goto label10 <NEXT> $ r25 = org osgi service condpermadmin condition true <NEXT> goto label11 <NEXT> label return $ r25 <NEXT> if $ z5 == 0 goto label10 <NEXT> label $ r25 = org osgi service condpermadmin condition false <NEXT> if $ i2 ! = 2 goto label08 <NEXT> label $ z7 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jface text abstract document r0 <NEXT> r2 f tracker = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jface text gap text store r0 <NEXT> $ i0 = r2 get length <NEXT> r3 = org eclipse jface text gap text store r0 <NEXT> r3 replace 0 $ i0 r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if r0 == null goto label01 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label02 <NEXT> label return null <NEXT> if $ i0 ! = 0 goto label02 <NEXT> label $ r2 = new java util hash set <NEXT> specialinvoke $ r2 < init > <NEXT> r10 = null <NEXT> i2 = lengthof r0 <NEXT> i3 = 0 <NEXT> goto label05 <NEXT> label if i3 < i2 goto label03 <NEXT> label r12 = r0 [ i3 ] <NEXT> $ r3 = org eclipse jface text link link mode manager fg manager <NEXT> $ r4 = $ r3 get r12 <NEXT> r10 = org eclipse jface text link link mode manager $ r4 <NEXT> if r10 == null goto label04 <NEXT> $ r2 add r10 <NEXT> label i3 = i3 + 1 <NEXT> label if i3 < i2 goto label03 <NEXT> $ i1 = $ r2 size <NEXT> if $ i1 < = 1 goto label09 <NEXT> if z0 == 0 goto label08 <NEXT> r13 = $ r2 iterator <NEXT> goto label07 <NEXT> label $ z3 = r13 have next <NEXT> if $ z3 ! = 0 goto label06 <NEXT> label $ r9 = r13 next <NEXT> r14 = org eclipse jface text link link mode manager $ r9 <NEXT> r14 close all environment <NEXT> if $ z3 ! = 0 goto label06 <NEXT> goto label09 <NEXT> label $ z2 = $ r2 be empty <NEXT> if $ z2 == 0 goto label10 <NEXT> $ r7 = new org eclipse jface text link link mode manager <NEXT> specialinvoke $ r7 < init > <NEXT> r10 = $ r7 <NEXT> label i4 = lengthof r0 <NEXT> i5 = 0 <NEXT> goto label12 <NEXT> label if i5 < i4 goto label11 <NEXT> label r16 = r0 [ i5 ] <NEXT> $ r5 = org eclipse jface text link link mode manager fg manager <NEXT> $ r5 put r16 r10 <NEXT> i5 = i5 + 1 <NEXT> label if i5 < i4 goto label11 <NEXT> return r10 <NEXT> if z0 == 0 goto label08 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org eclipse jface text link link mode model r0 <NEXT> $ r1 = r2 f document listener <NEXT> $ r1 f exit = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jface text link link mode model r0 <NEXT> $ r1 = r2 f parent environment <NEXT> if $ r1 == null goto label1 <NEXT> return 1 <NEXT> if $ r1 == null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jface text link link mode model r0 <NEXT> $ r1 = r2 f position sequence <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org eclipse jface text link link mode model r0 <NEXT> $ r4 = r6 f group <NEXT> r3 = $ r4 iterator <NEXT> goto label2 <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r5 = r3 next <NEXT> r2 = org eclipse jface text link link position group $ r5 <NEXT> $ z1 = r2 contain r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> return r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r3 = org eclipse jface text link link position r0 <NEXT> $ r2 = r3 f document <NEXT> if r1 ! = $ r2 goto label1 <NEXT> r4 = org eclipse jface text link link position r0 <NEXT> $ i2 = r4 offset <NEXT> if i0 < $ i2 goto label1 <NEXT> $ i6 = i1 + i0 <NEXT> r5 = org eclipse jface text link link position r0 <NEXT> $ i4 = r5 offset <NEXT> r6 = org eclipse jface text link link position r0 <NEXT> $ i3 = r6 length <NEXT> $ i5 = $ i4 + $ i3 <NEXT> if $ i6 > $ i5 goto label1 <NEXT> return 1 <NEXT> if $ i6 > $ i5 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse jface text link link position r0 <NEXT> r1 f sequence number = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label org eclipse core runtime assert be true $ z1 <NEXT> r1 = org eclipse jface text position r0 <NEXT> r1 length = i0 <NEXT> return <NEXT> if i0 < 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse jface text projection child document r0 <NEXT> $ r2 = r5 get document information map <NEXT> r1 = $ r2 get coverage <NEXT> r4 = new org eclipse jface text projection child document $ visible region <NEXT> $ i0 = r1 get offset <NEXT> $ i1 = r1 get length <NEXT> specialinvoke r4 < init > $ i0 $ i1 <NEXT> r6 = org eclipse jface text position r4 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jface text projection projection document r0 <NEXT> $ r2 = r3 f slave event <NEXT> r4 = org eclipse jface text document event $ r2 <NEXT> specialinvoke r0 fire document change r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jface text projection projection map r0 <NEXT> r1 f cache segment = null <NEXT> r2 = org eclipse jface text projection projection map r0 <NEXT> r2 f cache fragment = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org eclipse jface text templates document template context r0 <NEXT> r2 f original offset = i0 <NEXT> r3 = org eclipse jface text templates document template context r0 <NEXT> $ r1 = r3 f position <NEXT> $ r1 set offset i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org eclipse core runtime assert be not null r1 <NEXT> r5 = org eclipse jface text templates template context type r0 <NEXT> $ r2 = r5 f resolvers <NEXT> $ r3 = r1 get type <NEXT> $ r2 put $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jface text templates template variable resolver r0 <NEXT> $ r1 = r2 f type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jface text templates template variable type r0 <NEXT> $ r1 = r2 f name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse text edit copy source edit r0 <NEXT> $ r1 = r2 f target <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse text edit text edit r0 <NEXT> $ r1 = r3 f child <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org eclipse text edit text edit r0 <NEXT> $ r2 = r4 f child <NEXT> $ i0 = $ r2 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r4 = new org eclipse text edit text edit copier <NEXT> r5 = org eclipse text edit text edit r0 <NEXT> specialinvoke r4 < init > r5 <NEXT> $ r3 = r4 perform <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org eclipse text edit copy source edit r0 <NEXT> $ r4 = r8 f target <NEXT> if $ r4 == null goto label1 <NEXT> $ r5 = r1 get copy r0 <NEXT> r2 = org eclipse text edit copy source edit $ r5 <NEXT> r9 = org eclipse text edit copy source edit r0 <NEXT> $ r6 = r9 f target <NEXT> r10 = org eclipse text edit text edit $ r6 <NEXT> $ r7 = r1 get copy r10 <NEXT> r3 = org eclipse text edits copy target edit $ r7 <NEXT> if r2 == null goto label1 <NEXT> if r3 == null goto label1 <NEXT> r2 set target edit r3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse text edit text edit processor r0 <NEXT> $ r1 = r2 f root <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse text edit text edit visitor r0 <NEXT> r3 = org eclipse text edit text edit r1 <NEXT> $ z0 = r2 visit node r3 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse text edit text edit visitor r0 <NEXT> r3 = org eclipse text edit text edit r1 <NEXT> $ z0 = r2 visit node r3 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse text templates template persistence data r0 <NEXT> $ z0 = r1 f be delete <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse text templates template store core r0 <NEXT> $ r1 = r5 f property listener <NEXT> if $ r1 ! = null goto label1 <NEXT> r6 = org eclipse text templates template store core r0 <NEXT> $ r2 = template store core $ lambda_0__1 bootstrap $ r6 <NEXT> r7 = org eclipse text templates template store core r0 <NEXT> r7 f property listener = $ r2 <NEXT> r8 = org eclipse text templates template store core r0 <NEXT> $ r4 = r8 f preference store <NEXT> r9 = org eclipse text templates template store core r0 <NEXT> $ r3 = r9 f property listener <NEXT> $ r4 add preference change listener $ r3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse text templates template store core r0 <NEXT> $ r1 = r2 get templates null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse text templates template store core r0 <NEXT> $ r2 = r3 find template r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> org eclipse core runtime assert be not null r1 <NEXT> r10 = org eclipse text templates template store core r0 <NEXT> $ r6 = r10 f templates <NEXT> r4 = $ r6 iterator <NEXT> goto label3 <NEXT> label $ z4 = r4 have next <NEXT> if $ z4 ! = 0 goto label1 <NEXT> label $ r7 = r4 next <NEXT> r3 = org eclipse text templates template persistence data $ r7 <NEXT> r5 = r3 get template <NEXT> $ z0 = r3 be enable <NEXT> if $ z0 == 0 goto label3 <NEXT> $ z1 = r3 be delete <NEXT> if $ z1 ! = 0 goto label3 <NEXT> if r2 == null goto label2 <NEXT> $ r9 = r5 get context type id <NEXT> $ z3 = r2 equal $ r9 <NEXT> if $ z3 == 0 goto label3 <NEXT> label $ r8 = r5 get name <NEXT> $ z2 = r1 equal $ r8 <NEXT> if $ z2 == 0 goto label3 <NEXT> return r5 <NEXT> if $ z4 ! = 0 goto label1 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r2 = org osgi service permissionadmin permission info r0 <NEXT> $ r1 = r2 action <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = r0 goto label01 <NEXT> return 1 <NEXT> if r1 ! = r0 goto label01 <NEXT> label $ z0 = r1 instanceof org osgi service permissionadmin permission info <NEXT> if $ z0 ! = 0 goto label02 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label02 <NEXT> label r2 = org osgi service permissionadmin permission info r1 <NEXT> r17 = org osgi service permissionadmin permission info r0 <NEXT> $ r4 = r17 type <NEXT> $ r3 = r2 type <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> if $ z1 == 0 goto label11 <NEXT> r18 = org osgi service permissionadmin permission info r0 <NEXT> $ r5 = r18 name <NEXT> if $ r5 ! = null goto label03 <NEXT> $ z5 = 1 <NEXT> goto label04 <NEXT> label $ r6 = r2 name <NEXT> if $ r6 ! = null goto label05 <NEXT> $ z6 = 1 <NEXT> goto label06 <NEXT> label $ z7 = $ z5 ^ $ z6 <NEXT> if $ z7 ! = 0 goto label11 <NEXT> r19 = org osgi service permissionadmin permission info r0 <NEXT> $ r7 = r19 action <NEXT> if $ r7 ! = null goto label07 <NEXT> $ z8 = 1 <NEXT> goto label08 <NEXT> label $ r8 = r2 action <NEXT> if $ r8 ! = null goto label09 <NEXT> $ z9 = 1 <NEXT> goto label10 <NEXT> label $ z10 = $ z8 ^ $ z9 <NEXT> if $ z10 == 0 goto label12 <NEXT> label return 0 <NEXT> if $ z10 == 0 goto label12 <NEXT> label r20 = org osgi service permissionadmin permission info r0 <NEXT> $ r9 = r20 name <NEXT> if $ r9 == null goto label16 <NEXT> r21 = org osgi service permissionadmin permission info r0 <NEXT> $ r10 = r21 action <NEXT> if $ r10 == null goto label15 <NEXT> r22 = org osgi service permissionadmin permission info r0 <NEXT> $ r14 = r22 name <NEXT> $ r13 = r2 name <NEXT> $ z3 = $ r14 equal $ r13 <NEXT> if $ z3 == 0 goto label13 <NEXT> r23 = org osgi service permissionadmin permission info r0 <NEXT> $ r16 = r23 action <NEXT> $ r15 = r2 action <NEXT> $ z4 = $ r16 equal $ r15 <NEXT> if $ z4 == 0 goto label13 <NEXT> $ z11 = 1 <NEXT> goto label14 <NEXT> label return $ z11 <NEXT> if $ z4 == 0 goto label13 <NEXT> label $ z11 = 0 <NEXT> if $ r10 == null goto label15 <NEXT> label r24 = org osgi service permissionadmin permission info r0 <NEXT> $ r12 = r24 name <NEXT> $ r11 = r2 name <NEXT> $ z2 = $ r12 equal $ r11 <NEXT> return $ z2 <NEXT> if $ r9 == null goto label16 <NEXT> label return 1 <NEXT> if $ r8 ! = null goto label09 <NEXT> label $ z9 = 0 <NEXT> if $ r7 ! = null goto label07 <NEXT> label $ z8 = 0 <NEXT> if $ r6 ! = null goto label05 <NEXT> label $ z6 = 0 <NEXT> if $ r5 ! = null goto label03 <NEXT> label $ z5 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = specialinvoke r0 hash code r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org apache pdfbox contentstream operator color set stroke device r g b color r0 <NEXT> $ r4 = r9 context <NEXT> $ r5 = $ r4 get resource <NEXT> $ r6 = org apache pdfbox co c o s name devicergb <NEXT> r3 = $ r5 get color space $ r6 <NEXT> r10 = org apache pdfbox contentstream operator color set stroke device r g b color r0 <NEXT> $ r7 = r10 context <NEXT> $ r8 = $ r7 get graphic state <NEXT> $ r8 set stroke color space r3 <NEXT> specialinvoke r0 process r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox contentstream operator operator r0 <NEXT> r2 image parameter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox contentstream p d f stream engine r0 <NEXT> r2 graphic stack = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox co c o s array r0 <NEXT> $ r1 = r2 object <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache pdfbox co c o s array r0 <NEXT> $ r2 = r3 object <NEXT> $ r2 add all r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> i3 = i1 <NEXT> r4 = org apache pdfbox co c o s array r0 <NEXT> $ i2 = r4 size <NEXT> if i0 > = $ i2 goto label1 <NEXT> r5 = org apache pdfbox co c o s array r0 <NEXT> $ r2 = r5 object <NEXT> r1 = $ r2 get i0 <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s number <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org apache pdfbox co c o s number r1 <NEXT> i3 = $ r3 int value <NEXT> label return i3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> r3 = new org apache pdfbox co c o s string <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org apache pdfbox co c o s array r0 <NEXT> r5 = org apache pdfbox co c o s base r3 <NEXT> r4 set i0 r5 <NEXT> goto label2 <NEXT> label return <NEXT> if r1 == null goto label1 <NEXT> label r6 = org apache pdfbox co c o s array r0 <NEXT> r6 set i0 null <END>
<BEG> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> $ r0 = org apache pdfbox co c o s boolean true <NEXT> goto label2 <NEXT> label return $ r0 <NEXT> if z0 == 0 goto label1 <NEXT> label $ r0 = org apache pdfbox co c o s boolean false <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox co c o s dictionary r0 <NEXT> r2 = r4 get dictionary object r1 <NEXT> $ z0 = r2 instanceof org apache pdfbox co c o s name <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org apache pdfbox co c o s name r2 <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox co c o s dictionary r0 <NEXT> r2 = r4 get item r1 <NEXT> $ z0 = r2 instanceof org apache pdfbox co c o s object <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org apache pdfbox co c o s object r2 <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox co c o s document r0 <NEXT> $ r2 = r4 get trailer <NEXT> $ r3 = org apache pdfbox co c o s name id <NEXT> r5 = org apache pdfbox co c o s base r1 <NEXT> $ r2 set item $ r3 r5 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r4 = new java io byte array output stream <NEXT> specialinvoke $ r4 < init > <NEXT> r2 = r0 to char array <NEXT> i0 = lengthof r2 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label4 <NEXT> c1 = r2 [ i3 ] <NEXT> $ r6 = org apache pdfbox co p d f doc encode uni_to_code <NEXT> $ r7 = java lang character value of c1 <NEXT> $ r8 = $ r6 get $ r7 <NEXT> r3 = java lang integer $ r8 <NEXT> if r3 ! = null goto label2 <NEXT> $ r4 write 0 <NEXT> goto label3 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if r3 ! = null goto label2 <NEXT> label $ i2 = r3 int value <NEXT> $ r4 write $ i2 <NEXT> label if i3 > = i0 goto label4 <NEXT> label $ r5 = $ r4 to byte array <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox filter decode option r0 <NEXT> r2 source region = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache pdfbox filter decode option r0 <NEXT> r1 subsampling x = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox io memory usage set r0 <NEXT> r2 temp dir = r1 <NEXT> r3 = org apache pdfbox io memory usage set r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache pdfbox io scratch file buffer <NEXT> r3 = org apache pdfbox io scratch file r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = org apache pdfbox io random access r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox multipdf overlay r0 <NEXT> r2 all page overlay = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox multipdf overlay r0 <NEXT> r2 odd page overlay = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox multipdf p d f clone utility r0 <NEXT> $ r1 = r2 destination <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache pdfbox multipdf p d f merger utility r0 <NEXT> $ r2 = r3 source <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > 0 goto label1 <NEXT> r2 = new java lang illegal argument exception <NEXT> specialinvoke r2 < init > \ `` start page be small than one\ `` <NEXT> throw r2 <NEXT> if i0 > 0 goto label1 <NEXT> label r3 = org apache pdfbox multipdf splitter r0 <NEXT> r3 start page = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox multipdf splitter r0 <NEXT> $ r1 = r2 source document <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache pdfbox pdfparser c o s parser r0 <NEXT> $ r1 = r5 document <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java io i o exception <NEXT> specialinvoke r4 < init > \ `` you must parse the document first before call get encryption \ `` <NEXT> throw r4 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = org apache pdfbox pdfparser c o s parser r0 <NEXT> $ r2 = r6 encryption <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r7 = new org apache pdfbox pdmodel p d document <NEXT> r8 = org apache pdfbox pdfparser p d f parser r0 <NEXT> $ r3 = r8 get document <NEXT> r9 = org apache pdfbox pdfparser p d f parser r0 <NEXT> $ r4 = r9 source <NEXT> r10 = org apache pdfbox pdfparser p d f parser r0 <NEXT> $ r5 = r10 get access permission <NEXT> specialinvoke r7 < init > $ r3 $ r4 $ r5 <NEXT> r11 = org apache pdfbox pdfparser p d f parser r0 <NEXT> $ r6 = r11 get encryption <NEXT> r7 set encryption dictionary $ r6 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r12 = org apache pdfbox pdfparser xref trailer resolver r0 <NEXT> $ r3 = r12 byte po to xref map <NEXT> $ z0 = $ r3 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label r13 = org apache pdfbox pdfparser xref trailer resolver r0 <NEXT> $ r4 = r13 byte po to xref map <NEXT> r1 = $ r4 key set <NEXT> r11 = new java util tree set <NEXT> specialinvoke r11 < init > r1 <NEXT> r14 = org apache pdfbox pdfparser xref trailer resolver r0 <NEXT> $ r6 = r14 byte po to xref map <NEXT> $ r7 = r11 last <NEXT> $ r8 = $ r6 get $ r7 <NEXT> $ r9 = org apache pdfbox pdfparser xref trailer resolver $ xref trailer obj $ r8 <NEXT> $ r10 = $ r9 trailer <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r16 = org apache pdfbox pdfparser xref trailer resolver r0 <NEXT> $ r4 = r16 resolve xref trailer <NEXT> if $ r4 ! = null goto label1 <NEXT> return null <NEXT> if $ r4 ! = null goto label1 <NEXT> label r15 = new java util hash set <NEXT> specialinvoke r15 < init > <NEXT> $ i2 = neg i0 <NEXT> l1 = long $ i2 <NEXT> r17 = org apache pdfbox pdfparser xref trailer resolver r0 <NEXT> $ r6 = r17 resolve xref trailer <NEXT> $ r7 = org apache pdfbox pdfparser xref trailer resolver $ xref trailer obj access $ 200 $ r6 <NEXT> $ r8 = $ r7 entry set <NEXT> r2 = $ r8 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r9 = r2 next <NEXT> r3 = java util map $ entry $ r9 <NEXT> $ r10 = r3 get value <NEXT> $ r11 = java lang long $ r10 <NEXT> $ l3 = $ r11 long value <NEXT> $ b4 = $ l3 cmp l1 <NEXT> if $ b4 ! = 0 goto label3 <NEXT> $ r12 = r3 get key <NEXT> $ r13 = org apache pdfbox co c o s object key $ r12 <NEXT> $ l5 = $ r13 get number <NEXT> $ r14 = java lang long value of $ l5 <NEXT> r15 add $ r14 <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return r15 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdfwriter c o s writer r0 <NEXT> $ r1 = r2 standard output <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel common filespecification p d complex file specification r0 <NEXT> $ r3 = r4 f <NEXT> $ r2 = org apache pdfbox co c o s name unix <NEXT> $ r3 set string $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache pdfbox pdmodel common filespecification p d complex file specification r0 <NEXT> r6 = specialinvoke r8 get e f dictionary <NEXT> if r6 ! = null goto label1 <NEXT> if r1 == null goto label1 <NEXT> r7 = new org apache pdfbox co c o s dictionary <NEXT> specialinvoke r7 < init > <NEXT> r6 = r7 <NEXT> r9 = org apache pdfbox pdmodel common filespecification p d complex file specification r0 <NEXT> $ r5 = r9 f <NEXT> $ r4 = org apache pdfbox co c o s name ef <NEXT> r10 = org apache pdfbox co c o s base r7 <NEXT> $ r5 set item $ r4 r10 <NEXT> label if r6 == null goto label2 <NEXT> $ r2 = org apache pdfbox co c o s name uf <NEXT> r11 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> r6 set item $ r2 r11 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel common filespecification p d embed file r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name subtype <NEXT> $ r2 set name $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel common filespecification p d embed file r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = $ r1 get embed date \ `` params\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = null <NEXT> r6 = org apache pdfbox pdmodel common filespecification p d embed file r0 <NEXT> $ r2 = r6 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name params <NEXT> $ r4 = $ r2 get dictionary object $ r3 <NEXT> r1 = org apache pdfbox co c o s dictionary $ r4 <NEXT> if r1 == null goto label1 <NEXT> r5 = r1 get embed string \ `` mac\ <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel common function p d function type0 r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name bits_per_sample <NEXT> $ i0 = $ r1 get int $ r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel common function p d function type2 r0 <NEXT> $ r1 = r2 c1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel common function type4 execution context r0 <NEXT> $ r1 = r4 stack <NEXT> $ r2 = $ r1 pop <NEXT> $ r3 = java lang number $ r2 <NEXT> $ f0 = $ r3 float value <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel common function type4 instruction sequence r0 <NEXT> $ r1 = r3 instruction <NEXT> $ r2 = java lang integer value of i0 <NEXT> $ r1 add $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel common function type4 instruction sequence builder r0 <NEXT> $ r1 = r2 main sequence <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel common p d object stream r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name n <NEXT> $ i0 = $ r1 get int $ r2 0 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if i0 > = 0 goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` start page parameter of set label item may not be < 0\ `` <NEXT> throw r6 <NEXT> if i0 > = 0 goto label1 <NEXT> label r7 = org apache pdfbox pdmodel common p d page label r0 <NEXT> $ r2 = r7 label <NEXT> $ r3 = java lang integer value of i0 <NEXT> $ r2 put $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel common p d rectangle r0 <NEXT> $ r2 = r4 rect array <NEXT> r3 = new org apache pdfbox co c o s float <NEXT> specialinvoke r3 < init > f0 <NEXT> r5 = org apache pdfbox co c o s base r3 <NEXT> $ r2 set 0 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel common p d rectangle r0 <NEXT> $ r2 = r4 rect array <NEXT> r3 = new org apache pdfbox co c o s float <NEXT> specialinvoke r3 < init > f0 <NEXT> r5 = org apache pdfbox co c o s base r3 <NEXT> $ r2 set 1 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = org apache pdfbox pdmodel common p d stream r0 <NEXT> $ r6 = r18 stream <NEXT> r15 = $ r6 create raw input stream <NEXT> r16 = new java io byte array output stream <NEXT> specialinvoke r16 < init > <NEXT> r19 = org apache pdfbox pdmodel common p d stream r0 <NEXT> r3 = r19 get filter <NEXT> if r3 == null goto label3 <NEXT> i1 = 0 <NEXT> label $ i0 = r3 size <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r8 = r3 get i1 <NEXT> r4 = org apache pdfbox co c o s name $ r8 <NEXT> if r1 == null goto label2 <NEXT> $ r14 = r4 get name <NEXT> $ z0 = r1 contain $ r14 <NEXT> if $ z0 == 0 goto label2 <NEXT> goto label3 <NEXT> label return r15 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r9 = org apache pdfbox filter filter factory instance <NEXT> r5 = $ r9 get filter r4 <NEXT> r20 = org apache pdfbox pdmodel common p d stream r0 <NEXT> $ r10 = r20 stream <NEXT> r21 = org apache pdfbox co c o s dictionary $ r10 <NEXT> r5 decode r15 r16 r21 i1 <NEXT> org apache pdfbox io i o utils close quietly r15 <NEXT> r17 = new java io byte array input stream <NEXT> $ r13 = r16 to byte array <NEXT> specialinvoke r17 < init > $ r13 <NEXT> r15 = r17 <NEXT> r16 reset <NEXT> i1 = i1 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel common p d stream r0 <NEXT> $ r3 = r4 stream <NEXT> $ r2 = org apache pdfbox co c o s name metadata <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel documentinterchange logicalstructure p d attribute object r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name o <NEXT> $ r2 set name $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > = 0 goto label1 <NEXT> r4 = new java lang illegal argument exception <NEXT> specialinvoke r4 < init > \ `` the revision number shall be > -1\ `` <NEXT> throw r4 <NEXT> if i0 > = 0 goto label1 <NEXT> label r5 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure element r0 <NEXT> $ r1 = r5 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name r <NEXT> $ r1 set int $ r2 i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = org apache pdfbox pdmodel documentinterchange logicalstructure p d structure tree root r0 <NEXT> $ r2 = r7 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name id_tree <NEXT> r1 = $ r2 get dictionary object $ r3 <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s dictionary <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new org apache pdfbox pdmodel p d structure element name tree node <NEXT> $ r5 = org apache pdfbox co c o s dictionary r1 <NEXT> specialinvoke r6 < init > $ r5 <NEXT> r8 = org apache pdfbox pdmodel common p d name tree node r6 <NEXT> return r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r5 = org apache pdfbox pdmodel documentinterchange markedcontent p d mark content r0 <NEXT> $ r1 = r5 get property <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r4 = null <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = org apache pdfbox pdmodel documentinterchange markedcontent p d mark content r0 <NEXT> $ r2 = r6 get property <NEXT> $ r3 = org apache pdfbox co c o s name alt <NEXT> $ r4 = $ r2 get string $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d artifact mark content r0 <NEXT> $ z0 = specialinvoke r1 be attach \ `` right\ `` <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d four colour r0 <NEXT> specialinvoke r2 set colour by index 2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> $ r1 = r2 get color \ `` color\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> r2 set color \ `` color\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> r1 set number \ `` space before\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> $ r1 = r2 get name \ `` text align\ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> r2 set name \ `` t border style\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> r2 set array of name \ `` t border style\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> r2 set color \ `` text decoration color\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> $ f0 = r1 get number \ `` text decoration thickness\ `` <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> r2 set name \ `` glyph orientation vertical\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache pdfbox pdmodel documentinterchange taggedpdf p d layout attribute object r0 <NEXT> r1 set integer \ `` column count\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> $ r5 = r8 get c o s object <NEXT> r3 = $ r5 get dictionary object r1 <NEXT> r9 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> $ r6 = r9 get c o s object <NEXT> $ r6 set string r1 r2 <NEXT> r10 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> $ r7 = r10 get c o s object <NEXT> r4 = $ r7 get dictionary object r1 <NEXT> r11 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> r11 potentially notify change r3 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r12 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> $ r7 = r12 get c o s object <NEXT> r3 = $ r7 get dictionary object r1 <NEXT> $ z0 = r3 instanceof org apache pdfbox co c o s array <NEXT> if $ z0 == 0 goto label4 <NEXT> r4 = org apache pdfbox co c o s array r3 <NEXT> $ i0 = r4 size <NEXT> r5 = newarray java lang string [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = r4 size <NEXT> if i2 > = $ i1 goto label3 <NEXT> r6 = r4 get object i2 <NEXT> $ z2 = r6 instanceof org apache pdfbox co c o s name <NEXT> if $ z2 == 0 goto label2 <NEXT> $ r10 = org apache pdfbox co c o s name r6 <NEXT> $ r11 = $ r10 get name <NEXT> r5 [ i2 ] = $ r11 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label3 <NEXT> label return r5 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ z1 = r3 instanceof org apache pdfbox co c o s name <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r8 = org apache pdfbox co c o s name r3 <NEXT> $ r9 = $ r8 get name <NEXT> return $ r9 <NEXT> if $ z1 == 0 goto label5 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> $ r5 = r8 get c o s object <NEXT> r3 = $ r5 get dictionary object r1 <NEXT> r9 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> $ r6 = r9 get c o s object <NEXT> $ r6 set name r1 r2 <NEXT> r10 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> $ r7 = r10 get c o s object <NEXT> r4 = $ r7 get dictionary object r1 <NEXT> r11 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> r11 potentially notify change r3 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache pdfbox pdmodel documentinterchange taggedpdf p d standard attribute object r0 <NEXT> $ r3 = r7 get c o s object <NEXT> $ r4 = $ r3 get dictionary object r1 <NEXT> r2 = org apache pdfbox co c o s array $ r4 <NEXT> if r2 == null goto label1 <NEXT> r6 = new org apache pdfbox pdmodel graphic color p d gamma <NEXT> specialinvoke r6 < init > r2 <NEXT> return r6 <NEXT> if r2 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z0 = r1 can assemble document <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z1 = r2 can extract content <NEXT> if $ z1 == 0 goto label1 <NEXT> r3 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z2 = r3 can extract for accessibility <NEXT> if $ z2 == 0 goto label1 <NEXT> r4 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z3 = r4 can fill in form <NEXT> if $ z3 == 0 goto label1 <NEXT> r5 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z4 = r5 can modify <NEXT> if $ z4 == 0 goto label1 <NEXT> r6 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z5 = r6 can modify annotation <NEXT> if $ z5 == 0 goto label1 <NEXT> r7 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z6 = r7 can print <NEXT> if $ z6 == 0 goto label1 <NEXT> r8 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z7 = r8 can print degraded <NEXT> if $ z7 == 0 goto label1 <NEXT> $ z8 = 1 <NEXT> goto label2 <NEXT> label return $ z8 <NEXT> if $ z7 == 0 goto label1 <NEXT> label $ z8 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox pdmodel encryption access permission r0 <NEXT> $ z0 = specialinvoke r1 be permission bit on 11 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel encryption p d crypt filter dictionary r0 <NEXT> $ r1 = r2 crypt filter dictionary <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel encryption p d encryption r0 <NEXT> $ r2 = r4 dictionary <NEXT> $ r1 = org apache pdfbox co c o s name filter <NEXT> $ r3 = $ r2 get name a string $ r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel encryption p d encryption r0 <NEXT> $ r2 = r3 dictionary <NEXT> $ r1 = org apache pdfbox co c o s name r <NEXT> $ i0 = $ r2 get int $ r1 0 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache pdfbox co c o s name std_cf <NEXT> r3 = org apache pdfbox pdmodel encryption p d encryption r0 <NEXT> r3 set crypt filter dictionary $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel encryption public key protection policy r0 <NEXT> $ r1 = r2 decryption certificate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r7 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ i2 = r7 b <NEXT> $ i3 = $ i2 + 1 <NEXT> $ i4 = $ i3 % 256 <NEXT> r8 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> r8 b = $ i4 <NEXT> r9 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ r2 = r9 salt <NEXT> r10 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ i5 = r10 b <NEXT> $ i7 = $ r2 [ $ i5 ] <NEXT> r11 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ i6 = r11 c <NEXT> $ i8 = $ i7 + $ i6 <NEXT> $ i9 = $ i8 % 256 <NEXT> r12 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> r12 c = $ i9 <NEXT> r13 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ r3 = r13 salt <NEXT> r14 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ i11 = r14 b <NEXT> r15 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ i10 = r15 c <NEXT> org apache pdfbox pdmodel encryption r c4 cipher swap $ r3 $ i11 $ i10 <NEXT> r16 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ r4 = r16 salt <NEXT> r17 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ i12 = r17 b <NEXT> $ i15 = $ r4 [ $ i12 ] <NEXT> r18 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ r5 = r18 salt <NEXT> r19 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ i13 = r19 c <NEXT> $ i14 = $ r5 [ $ i13 ] <NEXT> $ i16 = $ i15 + $ i14 <NEXT> i1 = $ i16 % 256 <NEXT> r20 = org apache pdfbox pdmodel encryption r c4 cipher r0 <NEXT> $ r6 = r20 salt <NEXT> $ i17 = $ r6 [ i1 ] <NEXT> $ b18 = byte $ i17 <NEXT> $ b19 = b0 ^ $ b18 <NEXT> r1 write $ b19 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel fdf f d f annotation r0 <NEXT> $ r2 = r3 annot <NEXT> $ r1 = org apache pdfbox co c o s name f <NEXT> $ r2 set flag $ r1 1 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel fdf f d f annotation r0 <NEXT> $ r3 = r4 annot <NEXT> $ r2 = org apache pdfbox co c o s name nm <NEXT> $ r3 set string $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache pdfbox pdmodel fdf f d f annotation r0 <NEXT> $ r2 = r5 annot <NEXT> $ r1 = org apache pdfbox co c o s name rc <NEXT> $ r3 = $ r2 get dictionary object $ r1 <NEXT> r6 = org apache pdfbox pdmodel fdf f d f annotation r0 <NEXT> $ r4 = r6 get string or stream $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel fdf f d f annotation r0 <NEXT> $ r3 = r4 annot <NEXT> $ r2 = org apache pdfbox co c o s name be <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = new org apache pdfbox co c o s array <NEXT> specialinvoke r11 < init > <NEXT> r3 = r1 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r9 = r3 next <NEXT> r4 = float [ ] $ r9 <NEXT> r12 = new org apache pdfbox co c o s array <NEXT> specialinvoke r12 < init > <NEXT> r12 set float array r4 <NEXT> r13 = org apache pdfbox co c o s base r12 <NEXT> r11 add r13 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r14 = org apache pdfbox pdmodel fdf f d f annotation ink r0 <NEXT> $ r8 = r14 annot <NEXT> $ r7 = org apache pdfbox co c o s name inklist <NEXT> r15 = org apache pdfbox co c o s base r11 <NEXT> $ r8 set item $ r7 r15 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel fdf f d f annotation line r0 <NEXT> $ r2 = r3 annot <NEXT> $ r1 = org apache pdfbox co c o s name llo <NEXT> $ r2 set float $ r1 f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = 0 0f <NEXT> r6 = org apache pdfbox pdmodel fdf f d f annotation line r0 <NEXT> $ r3 = r6 annot <NEXT> $ r2 = org apache pdfbox co c o s name co <NEXT> $ r4 = $ r3 get dictionary object $ r2 <NEXT> r1 = org apache pdfbox co c o s array $ r4 <NEXT> if r1 == null goto label1 <NEXT> $ r5 = r1 to float array <NEXT> f0 = $ r5 [ 0 ] <NEXT> label return f0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel fdf f d f catalog r0 <NEXT> $ r3 = r4 catalog <NEXT> $ r2 = org apache pdfbox co c o s name fdf <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel fdf f d f dictionary r0 <NEXT> $ r3 = r4 fdf <NEXT> $ r2 = org apache pdfbox co c o s name target <NEXT> $ r3 set string $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache pdfbox pdmodel fdf f d f dictionary r0 <NEXT> $ r2 = r5 fdf <NEXT> $ r3 = org apache pdfbox co c o s name embedded_fdfs <NEXT> $ r4 = org apache pdfbox pdmodel common c o s array list converter to c o s array r1 <NEXT> r6 = org apache pdfbox co c o s base $ r4 <NEXT> $ r2 set item $ r3 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel fdf f d f field r0 <NEXT> $ r3 = r4 field <NEXT> $ r2 = org apache pdfbox co c o s name if <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel fdf f d f field r0 <NEXT> $ r3 = r4 field <NEXT> $ r2 = org apache pdfbox co c o s name rv <NEXT> r5 = org apache pdfbox co c o s base r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel fdf f d f name page reference r0 <NEXT> $ r3 = r4 ref <NEXT> $ r2 = org apache pdfbox co c o s name f <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel fdf f d f template r0 <NEXT> $ r3 = r4 template <NEXT> $ r2 = org apache pdfbox co c o s name tref <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache pdfbox co c o s name standard_encoding <NEXT> $ z0 = $ r1 equal r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r8 = org apache pdfbox pdmodel font encode standard encode instance <NEXT> r9 = org apache pdfbox pdmodel font encode encode $ r8 <NEXT> return r9 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = org apache pdfbox co c o s name win_ansi_encoding <NEXT> $ z1 = $ r2 equal r0 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r7 = org apache pdfbox pdmodel font encode win ansi encode instance <NEXT> r10 = org apache pdfbox pdmodel font encode encode $ r7 <NEXT> return r10 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r3 = org apache pdfbox co c o s name mac_roman_encoding <NEXT> $ z2 = $ r3 equal r0 <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r6 = org apache pdfbox pdmodel font encode mac roman encode instance <NEXT> r11 = org apache pdfbox pdmodel font encode encode $ r6 <NEXT> return r11 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ r4 = org apache pdfbox co c o s name mac_expert_encoding <NEXT> $ z3 = $ r4 equal r0 <NEXT> if $ z3 == 0 goto label4 <NEXT> $ r5 = org apache pdfbox pdmodel font encode mac expert encode instance <NEXT> r12 = org apache pdfbox pdmodel font encode encode $ r5 <NEXT> return r12 <NEXT> if $ z3 == 0 goto label4 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache pdfbox pdmodel font encode glyph list r0 <NEXT> $ r3 = r5 unicode to name <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = java lang string $ r4 <NEXT> if r2 ! = null goto label1 <NEXT> return \ `` notdef\ `` <NEXT> if r2 ! = null goto label1 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache pdfbox pdmodel font font cache r0 <NEXT> $ r3 = r7 cache <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = java lang ref soft reference $ r4 <NEXT> if r2 == null goto label1 <NEXT> $ r5 = r2 get <NEXT> $ r6 = org apache fontbox font box font $ r5 <NEXT> goto label2 <NEXT> label return $ r6 <NEXT> if r2 == null goto label1 <NEXT> label $ r6 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get font info <NEXT> r4 = org apache pdfbox pdmodel font font mapper impl r0 <NEXT> $ r3 = specialinvoke r4 create font info by name $ r2 <NEXT> r5 = org apache pdfbox pdmodel font font mapper impl r0 <NEXT> r5 font info by name = $ r3 <NEXT> r6 = org apache pdfbox pdmodel font font mapper impl r0 <NEXT> r6 font provider = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r6 = org apache pdfbox pdmodel font p d c i d font r0 <NEXT> i1 = r6 code to c i d i0 <NEXT> r7 = org apache pdfbox pdmodel font p d c i d font r0 <NEXT> $ r1 = r7 vertical displacement y <NEXT> $ r2 = java lang integer value of i1 <NEXT> $ r3 = $ r1 get $ r2 <NEXT> r5 = java lang float $ r3 <NEXT> if r5 ! = null goto label1 <NEXT> r8 = org apache pdfbox pdmodel font p d c i d font r0 <NEXT> $ r4 = r8 dw2 <NEXT> $ f1 = $ r4 [ 1 ] <NEXT> r5 = java lang float value of $ f1 <NEXT> label $ f0 = r5 float value <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r8 = org apache pdfbox pdmodel font p d c i d font type0 r0 <NEXT> $ r1 = r8 cid font <NEXT> if $ r1 == null goto label1 <NEXT> r9 = org apache pdfbox pdmodel font p d c i d font type0 r0 <NEXT> $ r6 = r9 cid font <NEXT> $ r7 = $ r6 get type2 char string i0 <NEXT> r10 = org apache fontbox cff type2 char string $ r7 <NEXT> return r10 <NEXT> if $ r1 == null goto label1 <NEXT> label r11 = org apache pdfbox pdmodel font p d c i d font type0 r0 <NEXT> $ r2 = r11 t1 font <NEXT> $ z0 = $ r2 instanceof org apache fontbox cff c f f type1 font <NEXT> if $ z0 == 0 goto label2 <NEXT> r12 = org apache pdfbox pdmodel font p d c i d font type0 r0 <NEXT> $ r3 = r12 t1 font <NEXT> $ r4 = org apache fontbox cff c f f type1 font $ r3 <NEXT> $ r5 = $ r4 get type2 char string i0 <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r5 = new org apache pdfbox pdmodel font p d c i d font type2 <NEXT> r6 = org apache pdfbox pdmodel font p d c i d font type2 embedder r0 <NEXT> $ r4 = r6 cid font <NEXT> r7 = org apache pdfbox pdmodel font p d c i d font type2 embedder r0 <NEXT> $ r3 = r7 parent <NEXT> r8 = org apache pdfbox pdmodel font p d c i d font type2 embedder r0 <NEXT> $ r2 = r8 ttf <NEXT> specialinvoke r5 < init > $ r4 $ r3 $ r2 <NEXT> r9 = org apache pdfbox pdmodel font p d c i d font r5 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel font p d font r0 <NEXT> $ r2 = r4 dict <NEXT> $ r1 = org apache pdfbox co c o s name type <NEXT> $ r3 = $ r2 get name a string $ r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r5 = null <NEXT> r6 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r3 = r6 dic <NEXT> $ r2 = org apache pdfbox co c o s name font_stretch <NEXT> $ r4 = $ r3 get dictionary object $ r2 <NEXT> r1 = org apache pdfbox co c o s name $ r4 <NEXT> if r1 == null goto label1 <NEXT> r5 = r1 get name <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ i0 = r3 flag <NEXT> if $ i0 ! = -1 goto label1 <NEXT> r4 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r2 = r4 dic <NEXT> $ r1 = org apache pdfbox co c o s name flag <NEXT> $ i2 = $ r2 get int $ r1 0 <NEXT> r5 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> r5 flag = $ i2 <NEXT> label r6 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ i1 = r6 flag <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r2 = r3 dic <NEXT> $ r1 = org apache pdfbox co c o s name italic_angle <NEXT> $ r2 set float $ r1 f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r2 = r3 dic <NEXT> $ r1 = org apache pdfbox co c o s name cap_height <NEXT> $ r2 set float $ r1 f0 <NEXT> r4 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> r4 cap height = f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r2 = r3 dic <NEXT> $ r1 = org apache pdfbox co c o s name avg_width <NEXT> $ r2 set float $ r1 f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r2 = r3 dic <NEXT> $ r1 = org apache pdfbox co c o s name max_width <NEXT> $ r2 set float $ r1 f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r2 = r3 dic <NEXT> $ r1 = org apache pdfbox co c o s name missing_width <NEXT> $ r2 set float $ r1 f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = null <NEXT> r6 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r3 = r6 dic <NEXT> $ r2 = org apache pdfbox co c o s name char_set <NEXT> $ r4 = $ r3 get dictionary object $ r2 <NEXT> r1 = org apache pdfbox co c o s string $ r4 <NEXT> if r1 == null goto label1 <NEXT> r5 = r1 get string <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel font p d font descriptor r0 <NEXT> $ r3 = r4 dic <NEXT> $ r2 = org apache pdfbox co c o s name cid_set <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel font p d true type font r0 <NEXT> $ r2 = r4 dict <NEXT> $ r1 = org apache pdfbox co c o s name base_font <NEXT> $ r3 = $ r2 get name a string $ r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache pdfbox pdmodel font encode glyph list get adobe glyph list <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel font p d type1 font embedder r0 <NEXT> $ r1 = r2 type1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r8 = org apache pdfbox pdmodel font p d type3 font r0 <NEXT> $ r3 = r8 dict <NEXT> $ r2 = org apache pdfbox co c o s name font_bbox <NEXT> r1 = $ r3 get dictionary object $ r2 <NEXT> r6 = null <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s array <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = new org apache pdfbox pdmodel common p d rectangle <NEXT> $ r5 = org apache pdfbox co c o s array r1 <NEXT> specialinvoke r7 < init > $ r5 <NEXT> r6 = r7 <NEXT> label return r6 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache pdfbox pdmodel font p d type3 font r0 <NEXT> $ r1 = r7 char procs <NEXT> if $ r1 ! = null goto label1 <NEXT> r8 = org apache pdfbox pdmodel font p d type3 font r0 <NEXT> $ r4 = r8 dict <NEXT> $ r3 = org apache pdfbox co c o s name char_procs <NEXT> $ r5 = $ r4 get dictionary object $ r3 <NEXT> $ r6 = org apache pdfbox co c o s dictionary $ r5 <NEXT> r9 = org apache pdfbox pdmodel font p d type3 font r0 <NEXT> r9 char procs = $ r6 <NEXT> label r10 = org apache pdfbox pdmodel font p d type3 font r0 <NEXT> $ r2 = r10 char procs <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r17 = org apache pdfbox pdmodel graphic color p d cal r g b r0 <NEXT> $ r2 = r17 dictionary <NEXT> $ r1 = org apache pdfbox co c o s name gamma <NEXT> $ r3 = $ r2 get dictionary object $ r1 <NEXT> r11 = org apache pdfbox co c o s array $ r3 <NEXT> if r11 ! = null goto label1 <NEXT> r12 = new org apache pdfbox co c o s array <NEXT> specialinvoke r12 < init > <NEXT> r11 = r12 <NEXT> r13 = new org apache pdfbox co c o s float <NEXT> specialinvoke r13 < init > 1 0f <NEXT> r18 = org apache pdfbox co c o s base r13 <NEXT> r12 add r18 <NEXT> r14 = new org apache pdfbox co c o s float <NEXT> specialinvoke r14 < init > 1 0f <NEXT> r19 = org apache pdfbox co c o s base r14 <NEXT> r12 add r19 <NEXT> r15 = new org apache pdfbox co c o s float <NEXT> specialinvoke r15 < init > 1 0f <NEXT> r20 = org apache pdfbox co c o s base r15 <NEXT> r12 add r20 <NEXT> r21 = org apache pdfbox pdmodel graphic color p d cal r g b r0 <NEXT> $ r10 = r21 dictionary <NEXT> $ r9 = org apache pdfbox co c o s name gamma <NEXT> r22 = org apache pdfbox co c o s base r12 <NEXT> $ r10 set item $ r9 r22 <NEXT> label r16 = new org apache pdfbox pdmodel graphic color p d gamma <NEXT> specialinvoke r16 < init > r11 <NEXT> return r16 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel graphic color p d color r0 <NEXT> $ r1 = r2 pattern name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = new org apache pdfbox co c o s array <NEXT> specialinvoke r6 < init > <NEXT> r7 = org apache pdfbox pdmodel graphic color p d color r0 <NEXT> $ r3 = r7 component <NEXT> r6 set float array $ r3 <NEXT> r8 = org apache pdfbox pdmodel graphic color p d color r0 <NEXT> $ r4 = r8 pattern name <NEXT> if $ r4 == null goto label1 <NEXT> r9 = org apache pdfbox pdmodel graphic color p d color r0 <NEXT> $ r5 = r9 pattern name <NEXT> r10 = org apache pdfbox co c o s base $ r5 <NEXT> r6 add r10 <NEXT> label return r6 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel graphic color p d tristimulus r0 <NEXT> $ r1 = r4 value <NEXT> $ r2 = $ r1 get 0 <NEXT> $ r3 = org apache pdfbox co c o s number $ r2 <NEXT> $ f0 = $ r3 float value <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel graphic color p d tristimulus r0 <NEXT> $ r1 = r4 value <NEXT> $ r2 = $ r1 get 2 <NEXT> $ r3 = org apache pdfbox co c o s number $ r2 <NEXT> $ f0 = $ r3 float value <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache pdfbox pdmodel graphic image sample image reader get r g b image r0 null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel graphic pattern p d tile pattern r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name resource <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r2 set item $ r3 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = org apache pdfbox pdmodel graphic shade p d shade type2 r0 <NEXT> $ r1 = r7 domain <NEXT> if $ r1 ! = null goto label1 <NEXT> r8 = org apache pdfbox pdmodel graphic shade p d shade type2 r0 <NEXT> $ r3 = r8 get c o s object <NEXT> $ r4 = org apache pdfbox co c o s name domain <NEXT> $ r5 = $ r3 get dictionary object $ r4 <NEXT> $ r6 = org apache pdfbox co c o s array $ r5 <NEXT> r9 = org apache pdfbox pdmodel graphic shade p d shade type2 r0 <NEXT> r9 domain = $ r6 <NEXT> label r10 = org apache pdfbox pdmodel graphic shade p d shade type2 r0 <NEXT> $ r2 = r10 domain <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel graphic shade p d shade type2 r0 <NEXT> r4 coords = r1 <NEXT> r5 = org apache pdfbox pdmodel graphic shade p d shade type2 r0 <NEXT> $ r2 = r5 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name coords <NEXT> r6 = org apache pdfbox co c o s base r1 <NEXT> $ r2 set item $ r3 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel graphic shade p d shade type4 r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name bits_per_flag <NEXT> $ r1 set int $ r2 i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache pdfbox co c o s name sm <NEXT> r3 = org apache pdfbox pdmodel graphic state p d extend graphic state r0 <NEXT> $ r2 = specialinvoke r3 get float item $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache pdfbox pdmodel graphic state p d extend graphic state r0 <NEXT> $ r3 = r5 dict <NEXT> $ r2 = org apache pdfbox co c o s name tr2 <NEXT> r1 = $ r3 get dictionary object $ r2 <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s array <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = org apache pdfbox co c o s array r1 <NEXT> $ i0 = $ r4 size <NEXT> if $ i0 == 4 goto label1 <NEXT> return null <NEXT> if $ i0 == 4 goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel graphic state p d extend graphic state r0 <NEXT> $ r3 = r4 dict <NEXT> $ r2 = org apache pdfbox co c o s name tr2 <NEXT> $ r3 set item $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache pdfbox pdmodel graphic state p d graphic state r0 <NEXT> r1 non stroke alpha constant = d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox pdmodel graphic state p d graphic state r0 <NEXT> $ z0 = r1 alpha source <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache pdfbox pdmodel graphic state p d graphic state r0 <NEXT> r1 overprint = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache pdfbox pdmodel graphic state p d graphic state r0 <NEXT> r1 overprint mode = d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel graphic state p d graphic state r0 <NEXT> $ r1 = r2 text state <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel graphic state p d graphic state r0 <NEXT> r2 text state = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel graphic state p d graphic state r0 <NEXT> $ r1 = r2 stroke color <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel graphic state p d graphic state r0 <NEXT> $ r1 = r2 clip path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache pdfbox pdmodel graphic state p d soft mask r0 <NEXT> $ r2 = r7 transfer function <NEXT> if $ r2 ! = null goto label1 <NEXT> r8 = org apache pdfbox pdmodel graphic state p d soft mask r0 <NEXT> $ r3 = r8 get c o s object <NEXT> $ r4 = org apache pdfbox co c o s name tr <NEXT> r1 = $ r3 get dictionary object $ r4 <NEXT> if r1 == null goto label1 <NEXT> $ r5 = org apache pdfbox pdmodel common function p d function create r1 <NEXT> r9 = org apache pdfbox pdmodel graphic state p d soft mask r0 <NEXT> r9 transfer function = $ r5 <NEXT> label r10 = org apache pdfbox pdmodel graphic state p d soft mask r0 <NEXT> $ r6 = r10 transfer function <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r1 = org apache pdfbox pdmodel graphic state p d text state r0 <NEXT> r1 font size = f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org apache pdfbox pdmodel interactive documentnavigation destination p d page destination <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org apache pdfbox pdmodel interactive documentnavigation destination p d page destination r1 <NEXT> r3 = r2 get c o s object <NEXT> $ i0 = r3 size <NEXT> if $ i0 < 1 goto label1 <NEXT> r4 = r3 get object 0 <NEXT> $ z1 = r4 instanceof org apache pdfbox co c o s dictionary <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r8 = new java lang illegal argument exception <NEXT> specialinvoke r8 < init > \ `` destination of a go to action must be a page dictionary object\ `` <NEXT> throw r8 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label r9 = org apache pdfbox pdmodel interactive action p d action go to r0 <NEXT> $ r6 = r9 get c o s object <NEXT> $ r7 = org apache pdfbox co c o s name d <NEXT> r10 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r6 set item $ r7 r10 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive action p d action sound r0 <NEXT> $ r2 = r3 action <NEXT> $ r1 = org apache pdfbox co c o s name repeat <NEXT> $ r2 set boolean $ r1 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive action p d annotation additional action r0 <NEXT> $ r3 = r4 action <NEXT> $ r2 = org apache pdfbox co c o s name d <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive action p d form field additional action r0 <NEXT> $ r3 = r4 action <NEXT> $ r2 = org apache pdfbox co c o s name c <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache pdfbox pdmodel interactive annotation p d annotation line r0 <NEXT> $ r2 = r5 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name ic <NEXT> $ r4 = r1 to c o s array <NEXT> r6 = org apache pdfbox co c o s base $ r4 <NEXT> $ r2 set item $ r3 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive annotation p d annotation link r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name h <NEXT> $ r2 set name $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel interactive annotation p d annotation markup r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = $ r1 get name a string \ `` rt\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive annotation p d annotation square circle r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name be <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r2 set item $ r3 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = org apache pdfbox pdmodel interactive annotation p d annotation widget r0 <NEXT> $ r2 = r7 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name mk <NEXT> r1 = $ r2 get dictionary object $ r3 <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s dictionary <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new org apache pdfbox pdmodel interactive annotation p d appearance characteristic dictionary <NEXT> $ r5 = org apache pdfbox co c o s dictionary r1 <NEXT> specialinvoke r6 < init > $ r5 <NEXT> return r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive annotation p d annotation widget r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name a <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r2 set item $ r3 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel interactive annotation p d appearance characteristic dictionary r0 <NEXT> $ r1 = r4 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name rc <NEXT> $ r3 = $ r1 get string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache pdfbox pdmodel interactive annotation p d appearance characteristic dictionary r0 <NEXT> $ r2 = r7 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name ri <NEXT> r1 = $ r2 get dictionary object $ r3 <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s stream <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new org apache pdfbox pdmodel graphic form p d form x object <NEXT> $ r5 = org apache pdfbox co c o s stream r1 <NEXT> specialinvoke r6 < init > $ r5 <NEXT> return r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel interactive annotation p d appearance entry r0 <NEXT> $ r1 = r2 entry <NEXT> $ z0 = $ r1 instanceof org apache pdfbox co c o s stream <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive annotation p d border effect dictionary r0 <NEXT> $ r2 = r3 get c o s object <NEXT> $ r2 set name \ `` s\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = null <NEXT> if r1 == null goto label1 <NEXT> r3 = r1 <NEXT> label r4 = org apache pdfbox pdmodel interactive annotation p d border style dictionary r0 <NEXT> $ r2 = r4 get c o s object <NEXT> r5 = org apache pdfbox co c o s base r3 <NEXT> $ r2 set item \ `` d\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel interactive digitalsignature p d prop build data dict r0 <NEXT> $ r2 = r4 dictionary <NEXT> $ r1 = org apache pdfbox co c o s name date <NEXT> $ r3 = $ r2 get string $ r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name ff <NEXT> $ r1 set flag $ r2 1 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name ff <NEXT> $ r1 set flag $ r2 32 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache pdfbox pdmodel interactive digitalsignature p d seed value r0 <NEXT> $ r2 = r5 dictionary <NEXT> $ r3 = org apache pdfbox co c o s name reason <NEXT> $ r4 = org apache pdfbox pdmodel common c o s array list converter to c o s array r1 <NEXT> r6 = org apache pdfbox co c o s base $ r4 <NEXT> $ r2 set item $ r3 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value certificate r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name ff <NEXT> $ r1 set flag $ r2 4 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org apache pdfbox pdmodel interactive digitalsignature p d seed value certificate r0 <NEXT> $ r4 = r6 dictionary <NEXT> $ r3 = org apache pdfbox co c o s name oid <NEXT> r1 = $ r4 get dictionary object $ r3 <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s array <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org apache pdfbox co c o s array r1 <NEXT> $ r5 = org apache pdfbox pdmodel interactive digitalsignature p d seed value certificate get list of byte array from c o s array r2 <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel interactive digitalsignature p d seed value time stamp r0 <NEXT> $ r2 = r3 dictionary <NEXT> $ r1 = org apache pdfbox co c o s name ft <NEXT> $ i0 = $ r2 get int $ r1 0 <NEXT> if $ i0 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive digitalsignature p d signature r0 <NEXT> $ r3 = r4 dictionary <NEXT> $ r2 = org apache pdfbox co c o s name sub_filter <NEXT> r5 = org apache pdfbox co c o s base r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org apache pdfbox pdmodel interactive digitalsignature p d signature r0 <NEXT> $ r4 = r6 dictionary <NEXT> $ r3 = org apache pdfbox co c o s name byterange <NEXT> $ r5 = $ r4 get dictionary object $ r3 <NEXT> r1 = org apache pdfbox co c o s array $ r5 <NEXT> $ i0 = r1 size <NEXT> r2 = newarray int [ $ i0 ] <NEXT> i3 = 0 <NEXT> label $ i1 = lengthof r2 <NEXT> if i3 > = $ i1 goto label2 <NEXT> $ i2 = r1 get int i3 <NEXT> r2 [ i3 ] = $ i2 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i1 goto label2 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d f template structure r0 <NEXT> $ r1 = r2 page <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d f template structure r0 <NEXT> r2 page = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel interactive digitalsignature visible p d f template structure r0 <NEXT> r2 image form = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r2 = \ `` fit b\ `` <NEXT> r4 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit destination r0 <NEXT> $ r1 = r4 array <NEXT> $ r3 = $ r1 get name 1 <NEXT> $ z0 = $ r2 equal $ r3 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit rectangle destination r0 <NEXT> $ r1 = r2 array <NEXT> $ i0 = $ r1 get int 4 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel interactive documentnavigation destination p d page fit rectangle destination r0 <NEXT> $ r1 = r2 array <NEXT> $ i0 = $ r1 get int 5 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive documentnavigation outline p d outline item r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name a <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r2 set item $ r3 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive documentnavigation outline p d outline item r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name se <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r2 set item $ r3 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel interactive form p d acro form r0 <NEXT> $ r2 = r4 dictionary <NEXT> $ r1 = org apache pdfbox co c o s name da <NEXT> $ r3 = $ r2 get string $ r1 \ `` \ `` <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel interactive form p d acro form r0 <NEXT> $ r2 = r3 dictionary <NEXT> $ r1 = org apache pdfbox co c o s name need_appearances <NEXT> $ z0 = $ r2 get boolean $ r1 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive form p d button r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name ff <NEXT> $ r1 set flag $ r2 65536 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 == null goto label5 <NEXT> if r2 == null goto label5 <NEXT> $ z0 = r1 be empty <NEXT> if $ z0 ! = 0 goto label5 <NEXT> $ z1 = r2 be empty <NEXT> if $ z1 ! = 0 goto label5 <NEXT> $ i0 = r1 size <NEXT> $ i1 = r2 size <NEXT> if $ i0 == $ i1 goto label1 <NEXT> r21 = new java lang illegal argument exception <NEXT> specialinvoke r21 < init > \ `` the number of entry for export value and display value shall be the same \ `` <NEXT> throw r21 <NEXT> if $ i0 == $ i1 goto label1 <NEXT> label r3 = org apache pdfbox pdmodel interactive form field utils to key value list r1 r2 <NEXT> r26 = org apache pdfbox pdmodel interactive form p d choice r0 <NEXT> $ z2 = r26 be sort <NEXT> if $ z2 == 0 goto label2 <NEXT> org apache pdfbox pdmodel interactive form field utils sort by value r3 <NEXT> label r22 = new org apache pdfbox co c o s array <NEXT> specialinvoke r22 < init > <NEXT> i2 = 0 <NEXT> label $ i3 = r1 size <NEXT> if i2 > = $ i3 goto label4 <NEXT> r23 = new org apache pdfbox co c o s array <NEXT> specialinvoke r23 < init > <NEXT> r24 = new org apache pdfbox co c o s string <NEXT> $ r11 = r3 get i2 <NEXT> $ r12 = org apache pdfbox pdmodel interactive form field utils $ key value $ r11 <NEXT> $ r13 = $ r12 get key <NEXT> specialinvoke r24 < init > $ r13 <NEXT> r27 = org apache pdfbox co c o s base r24 <NEXT> r23 add r27 <NEXT> r25 = new org apache pdfbox co c o s string <NEXT> $ r15 = r3 get i2 <NEXT> $ r16 = org apache pdfbox pdmodel interactive form field utils $ key value $ r15 <NEXT> $ r17 = $ r16 get value <NEXT> specialinvoke r25 < init > $ r17 <NEXT> r28 = org apache pdfbox co c o s base r25 <NEXT> r23 add r28 <NEXT> r29 = org apache pdfbox co c o s base r23 <NEXT> r22 add r29 <NEXT> i2 = i2 + 1 <NEXT> goto label3 <NEXT> if i2 > = $ i3 goto label4 <NEXT> label r30 = org apache pdfbox pdmodel interactive form p d choice r0 <NEXT> $ r7 = r30 get c o s object <NEXT> $ r8 = org apache pdfbox co c o s name opt <NEXT> r31 = org apache pdfbox co c o s base r22 <NEXT> $ r7 set item $ r8 r31 <NEXT> goto label6 <NEXT> label return <NEXT> if $ z1 ! = 0 goto label5 <NEXT> label r32 = org apache pdfbox pdmodel interactive form p d choice r0 <NEXT> $ r19 = r32 get c o s object <NEXT> $ r20 = org apache pdfbox co c o s name opt <NEXT> $ r19 remove item $ r20 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel interactive form p d choice r0 <NEXT> $ r1 = r2 get option <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel interactive form p d non terminal field r0 <NEXT> $ r1 = r4 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name v <NEXT> $ r3 = $ r1 get dictionary object $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r12 = org apache pdfbox pdmodel interactive form p d radio button r0 <NEXT> r1 = r12 get on value <NEXT> r13 = org apache pdfbox pdmodel interactive form p d radio button r0 <NEXT> r2 = r13 get export value <NEXT> r11 = new java util array list <NEXT> specialinvoke r11 < init > <NEXT> $ z0 = r2 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> r14 = org apache pdfbox pdmodel interactive form p d radio button r0 <NEXT> $ r10 = r14 get value <NEXT> r11 add $ r10 <NEXT> return r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r15 = org apache pdfbox pdmodel interactive form p d radio button r0 <NEXT> r4 = r15 get value <NEXT> r5 = r1 iterator <NEXT> label $ z1 = r5 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r8 = r5 next <NEXT> r6 = java lang string $ r8 <NEXT> $ i1 = r6 compare to r4 <NEXT> if $ i1 ! = 0 goto label3 <NEXT> $ r9 = r2 get 0 <NEXT> r11 add $ r9 <NEXT> label goto label2 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive form p d signature field r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name dv <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r2 set item $ r3 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive form p d text field r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name ff <NEXT> $ r1 set flag $ r2 16777216 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel interactive form p d text field r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name max_len <NEXT> $ i0 = $ r1 get int $ r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache pdfbox co c o s name dv <NEXT> r4 = org apache pdfbox pdmodel interactive form p d text field r0 <NEXT> $ r2 = r4 get inheritable attribute $ r1 <NEXT> r5 = org apache pdfbox pdmodel interactive form p d text field r0 <NEXT> $ r3 = r5 get string or stream $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> return \ `` measure\ `` <END>
<BEG> r0 = @ this <NEXT> r9 = org apache pdfbox pdmodel interactive measurement p d rectlinear measure dictionary r0 <NEXT> $ r4 = r9 get c o s object <NEXT> $ r5 = $ r4 get dictionary object \ `` x\ `` <NEXT> r1 = org apache pdfbox co c o s array $ r5 <NEXT> if r1 == null goto label3 <NEXT> $ i0 = r1 size <NEXT> r2 = newarray org apache pdfbox pdmodel interactive measurement p d number format dictionary [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = r1 size <NEXT> if i2 > = $ i1 goto label2 <NEXT> $ r6 = r1 get i2 <NEXT> r3 = org apache pdfbox co c o s dictionary $ r6 <NEXT> r8 = new org apache pdfbox pdmodel interactive measurement p d number format dictionary <NEXT> specialinvoke r8 < init > r3 <NEXT> r2 [ i2 ] = r8 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r2 <NEXT> if r1 == null goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive measurement p d viewport dictionary r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name name <NEXT> $ r2 set name $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = null <NEXT> r8 = org apache pdfbox pdmodel interactive pagenavigation p d thread bead r0 <NEXT> $ r3 = r8 bead <NEXT> $ r2 = org apache pdfbox co c o s name r <NEXT> $ r4 = $ r3 get dictionary object $ r2 <NEXT> r1 = org apache pdfbox co c o s array $ r4 <NEXT> if r1 == null goto label1 <NEXT> r7 = new org apache pdfbox pdmodel common p d rectangle <NEXT> specialinvoke r7 < init > r1 <NEXT> r6 = r7 <NEXT> label return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive pagenavigation p d thread bead r0 <NEXT> $ r3 = r4 bead <NEXT> $ r2 = org apache pdfbox co c o s name r <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0 <NEXT> $ r2 = r3 prefs <NEXT> $ r1 = org apache pdfbox co c o s name hide_toolbar <NEXT> $ r2 set boolean $ r1 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0 <NEXT> $ r2 = r3 prefs <NEXT> $ r1 = org apache pdfbox co c o s name fit_window <NEXT> $ r2 set boolean $ r1 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0 <NEXT> $ r2 = r6 prefs <NEXT> $ r3 = org apache pdfbox co c o s name view_clip <NEXT> $ r1 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference $ boundary crop box <NEXT> $ r4 = $ r1 to string <NEXT> $ r5 = $ r2 get name a string $ r3 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference r0 <NEXT> $ r3 = r4 prefs <NEXT> $ r2 = org apache pdfbox co c o s name print_area <NEXT> $ r3 set name $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new org apache pdfbox pdmodel interactive digitalsignature signature option <NEXT> specialinvoke r4 < init > <NEXT> r5 = org apache pdfbox pdmodel p d document r0 <NEXT> r5 add signature r1 r2 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r10 = new java util array list <NEXT> specialinvoke r10 < init > <NEXT> r11 = org apache pdfbox pdmodel p d document r0 <NEXT> $ r6 = r11 get document catalog <NEXT> r2 = $ r6 get acro form <NEXT> if r2 == null goto label3 <NEXT> $ r7 = r2 get field tree <NEXT> r3 = $ r7 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r8 = r3 next <NEXT> r4 = org apache pdfbox pdmodel interactive form p d field $ r8 <NEXT> $ z1 = r4 instanceof org apache pdfbox pdmodel interactive form p d signature field <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r9 = org apache pdfbox pdmodel interactive form p d signature field r4 <NEXT> r10 add $ r9 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = org apache pdfbox pdmodel p d document r0 <NEXT> $ z0 = r15 be all security to be remove <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r11 = org apache pdfbox pdmodel p d document log <NEXT> $ r11 warn \ `` do not call set all security to be remove true before call protect a protect implies set all security to be remove false \ `` <NEXT> r16 = org apache pdfbox pdmodel p d document r0 <NEXT> r16 set all security to be remove 0 <NEXT> label r17 = org apache pdfbox pdmodel p d document r0 <NEXT> $ z1 = r17 be encrypt <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r12 = new org apache pdfbox pdmodel encryption p d encryption <NEXT> specialinvoke r12 < init > <NEXT> r18 = org apache pdfbox pdmodel p d document r0 <NEXT> r18 encryption = r12 <NEXT> label $ r3 = org apache pdfbox pdmodel encryption security handler factory instance <NEXT> r2 = $ r3 new security handler for policy r1 <NEXT> if r2 ! = null goto label3 <NEXT> r14 = new java io i o exception <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r7 = r13 append \ `` no security handler for policy \ `` <NEXT> $ r8 = $ r7 append r1 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r14 < init > $ r9 <NEXT> throw r14 <NEXT> if r2 ! = null goto label3 <NEXT> label r19 = org apache pdfbox pdmodel p d document r0 <NEXT> $ r4 = r19 get encryption <NEXT> $ r4 set security handler r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel p d document r0 <NEXT> r2 resource cache = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = org apache pdfbox pdmodel p d document catalog r0 <NEXT> $ r3 = r7 root <NEXT> $ r2 = org apache pdfbox co c o s name viewer_preferences <NEXT> r1 = $ r3 get dictionary object $ r2 <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s dictionary <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new org apache pdfbox pdmodel interactive viewerpreferences p d viewer preference <NEXT> $ r5 = r6 <NEXT> $ r4 = org apache pdfbox co c o s dictionary r1 <NEXT> specialinvoke r6 < init > $ r4 <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r5 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel p d document catalog r0 <NEXT> $ r3 = r4 root <NEXT> $ r2 = org apache pdfbox co c o s name names <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache pdfbox pdmodel p d document catalog r0 <NEXT> $ r2 = r5 root <NEXT> $ r3 = org apache pdfbox co c o s name page_mode <NEXT> $ r4 = r1 string value <NEXT> $ r2 set name $ r3 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel p d document catalog r0 <NEXT> $ r3 = r4 root <NEXT> $ r2 = org apache pdfbox co c o s name page_labels <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r3 set item $ r2 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache pdfbox pdmodel p d document information r0 <NEXT> $ r2 = r4 info <NEXT> $ r1 = org apache pdfbox co c o s name trap <NEXT> $ r3 = $ r2 get name a string $ r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache pdfbox pdmodel p d page r0 <NEXT> $ r2 = r5 page <NEXT> $ r3 = org apache pdfbox co c o s name b <NEXT> $ r4 = org apache pdfbox pdmodel common c o s array list converter to c o s array r1 <NEXT> r6 = org apache pdfbox co c o s base $ r4 <NEXT> $ r2 set item $ r3 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r11 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ z0 = r11 in text mode <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = org apache pdfbox pdmodel p d page content stream log <NEXT> $ r10 warn \ `` restore the graphic state be not allow within text object \ `` <NEXT> label r12 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ r1 = r12 font stack <NEXT> $ z1 = $ r1 be empty <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r13 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ r8 = r13 font stack <NEXT> $ r8 pop <NEXT> label r14 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ r2 = r14 stroke color space stack <NEXT> $ z2 = $ r2 be empty <NEXT> if $ z2 ! = 0 goto label3 <NEXT> r15 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ r6 = r15 stroke color space stack <NEXT> $ r6 pop <NEXT> label r16 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ r3 = r16 non stroke color space stack <NEXT> $ z3 = $ r3 be empty <NEXT> if $ z3 ! = 0 goto label4 <NEXT> r17 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ r4 = r17 non stroke color space stack <NEXT> $ r4 pop <NEXT> label r18 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> specialinvoke r18 write operator \ `` q\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ z0 = r3 in text mode <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = new java lang illegal state exception <NEXT> specialinvoke r2 < init > \ `` error fill even odd be not allow within a text block \ `` <NEXT> throw r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> specialinvoke r4 write operator \ `` f * \ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ z0 = r6 in text mode <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = new java lang illegal state exception <NEXT> specialinvoke r5 < init > \ `` error shading fill be not allow within a text block \ `` <NEXT> throw r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> $ r2 = r7 resource <NEXT> $ r3 = $ r2 add r1 <NEXT> r8 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> specialinvoke r8 write operand $ r3 <NEXT> r9 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> specialinvoke r9 write operator \ `` sh\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> specialinvoke r2 write operand r1 <NEXT> r3 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> specialinvoke r3 write operator \ `` bmc\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r1 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> r1 write operand f0 <NEXT> r2 = org apache pdfbox pdmodel p d page content stream r0 <NEXT> specialinvoke r2 write operator \ `` tc\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r2 get c o s object <NEXT> $ r7 = org apache pdfbox co c o s name parent <NEXT> $ r8 = r3 get dictionary object $ r7 <NEXT> r4 = org apache pdfbox co c o s dictionary $ r8 <NEXT> $ r9 = org apache pdfbox co c o s name kid <NEXT> $ r10 = r4 get dictionary object $ r9 <NEXT> r5 = org apache pdfbox co c o s array $ r10 <NEXT> z1 = 0 <NEXT> i1 = 0 <NEXT> label $ i0 = r5 size <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r12 = r5 get object i1 <NEXT> r6 = org apache pdfbox co c o s dictionary $ r12 <NEXT> $ r13 = r2 get c o s object <NEXT> $ z0 = r6 equal $ r13 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r14 = r1 get c o s object <NEXT> r18 = org apache pdfbox co c o s base $ r14 <NEXT> r5 add i1 r18 <NEXT> $ r15 = r1 get c o s object <NEXT> $ r16 = org apache pdfbox co c o s name parent <NEXT> r19 = org apache pdfbox co c o s base r4 <NEXT> $ r15 set item $ r16 r19 <NEXT> z1 = 1 <NEXT> goto label3 <NEXT> label if z1 ! = 0 goto label4 <NEXT> r17 = new java lang illegal argument exception <NEXT> specialinvoke r17 < init > \ `` attempt to insert before orphan page\ `` <NEXT> throw r17 <NEXT> label if z1 ! = 0 goto label4 <NEXT> label r20 = org apache pdfbox pdmodel p d page tree r0 <NEXT> specialinvoke r20 increase parent r4 <NEXT> return <NEXT> if $ z0 == 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache pdfbox co c o s name font <NEXT> r3 = org apache pdfbox pdmodel p d resource r0 <NEXT> $ r2 = specialinvoke r3 get names $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache pdfbox co c o s name shade <NEXT> r3 = org apache pdfbox pdmodel p d resource r0 <NEXT> $ r2 = specialinvoke r3 get names $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org apache pdfbox co c o s name xobject <NEXT> r5 = org apache pdfbox pdmodel p d resource r0 <NEXT> r6 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r4 = specialinvoke r5 add $ r3 r2 r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org apache pdfbox co c o s name property <NEXT> r4 = org apache pdfbox pdmodel p d resource r0 <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r2 <NEXT> specialinvoke r4 put $ r3 r1 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org apache pdfbox co c o s name property <NEXT> r4 = org apache pdfbox pdmodel p d resource r0 <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r2 <NEXT> specialinvoke r4 put $ r3 r1 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org apache pdfbox co c o s name property <NEXT> r4 = org apache pdfbox pdmodel p d resource r0 <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r2 <NEXT> specialinvoke r4 put $ r3 r1 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox render page drawer r0 <NEXT> $ r1 = r2 graphic <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org apache pdfbox render p d f renderer r0 <NEXT> r2 render page to graphic i0 r1 1 0f <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox text p d f text stripper r0 <NEXT> $ z0 = r1 should separate by bead <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache pdfbox text p d f text stripper r0 <NEXT> r1 add more formatting = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox text p d f text stripper r0 <NEXT> $ f0 = r1 drop threshold <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox text p d f text stripper r0 <NEXT> $ r1 = r2 paragraph end <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache pdfbox text p d f text stripper r0 <NEXT> r2 page start = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox text text position r0 <NEXT> $ i0 = r1 rotation <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox text text position r0 <NEXT> $ f0 = r1 page width <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache pdfbox util filetypedetector byte trie r0 <NEXT> r8 = r10 root <NEXT> r9 = r8 get value <NEXT> i0 = lengthof r1 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label4 <NEXT> b1 = r1 [ i2 ] <NEXT> $ r4 = org apache pdfbox util filetypedetector byte trie $ byte trie node access $ 000 r8 <NEXT> $ r5 = java lang byte value of b1 <NEXT> $ r6 = $ r4 get $ r5 <NEXT> r3 = org apache pdfbox util filetypedetector byte trie $ byte trie node $ r6 <NEXT> if r3 ! = null goto label2 <NEXT> goto label4 <NEXT> label return r9 <NEXT> if r3 ! = null goto label2 <NEXT> label r8 = r3 <NEXT> $ r7 = r3 get value <NEXT> if $ r7 == null goto label3 <NEXT> r9 = r3 get value <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <END>
<BEG> s0 = @ parameter0 <NEXT> r0 = newarray char [ 4 ] <NEXT> $ r1 = org apache pdfbox util hex hex_chars <NEXT> $ s1 = s0 > > 12 <NEXT> $ s2 = $ s1 & 15 <NEXT> $ c3 = $ r1 [ $ s2 ] <NEXT> r0 [ 0 ] = $ c3 <NEXT> $ r2 = org apache pdfbox util hex hex_chars <NEXT> $ s4 = s0 > > 8 <NEXT> $ s5 = $ s4 & 15 <NEXT> $ c6 = $ r2 [ $ s5 ] <NEXT> r0 [ 1 ] = $ c6 <NEXT> $ r3 = org apache pdfbox util hex hex_chars <NEXT> $ s7 = s0 > > 4 <NEXT> $ s8 = $ s7 & 15 <NEXT> $ c9 = $ r3 [ $ s8 ] <NEXT> r0 [ 2 ] = $ c9 <NEXT> $ r4 = org apache pdfbox util hex hex_chars <NEXT> $ s10 = s0 & 15 <NEXT> $ c11 = $ r4 [ $ s10 ] <NEXT> r0 [ 3 ] = $ c11 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org apache pdfbox co c o s array <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r6 = new org apache pdfbox util matrix <NEXT> specialinvoke $ r6 < init > <NEXT> return $ r6 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r1 = org apache pdfbox co c o s array r0 <NEXT> $ i0 = r1 size <NEXT> if $ i0 > = 6 goto label2 <NEXT> $ r5 = new org apache pdfbox util matrix <NEXT> specialinvoke $ r5 < init > <NEXT> return $ r5 <NEXT> if $ i0 > = 6 goto label2 <NEXT> label i1 = 0 <NEXT> label if i1 > = 6 goto label5 <NEXT> $ r3 = r1 get object i1 <NEXT> $ z1 = $ r3 instanceof org apache pdfbox co c o s number <NEXT> if $ z1 ! = 0 goto label4 <NEXT> $ r4 = new org apache pdfbox util matrix <NEXT> specialinvoke $ r4 < init > <NEXT> return $ r4 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> label i1 = i1 + 1 <NEXT> goto label3 <NEXT> label if i1 > = 6 goto label5 <NEXT> label $ r2 = new org apache pdfbox util matrix <NEXT> specialinvoke $ r2 < init > r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache pdfbox util matrix <NEXT> specialinvoke r4 < init > <NEXT> r5 = org apache pdfbox util matrix r0 <NEXT> $ r3 = r5 multiply r1 r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache pdfbox util matrix r0 <NEXT> $ r2 = r10 single <NEXT> f0 = $ r2 [ 0 ] <NEXT> r11 = org apache pdfbox util matrix r0 <NEXT> $ r3 = r11 single <NEXT> f1 = $ r3 [ 1 ] <NEXT> r12 = org apache pdfbox util matrix r0 <NEXT> $ r4 = r12 single <NEXT> f2 = $ r4 [ 3 ] <NEXT> r13 = org apache pdfbox util matrix r0 <NEXT> $ r5 = r13 single <NEXT> f3 = $ r5 [ 4 ] <NEXT> r14 = org apache pdfbox util matrix r0 <NEXT> $ r6 = r14 single <NEXT> f4 = $ r6 [ 6 ] <NEXT> r15 = org apache pdfbox util matrix r0 <NEXT> $ r7 = r15 single <NEXT> f5 = $ r7 [ 7 ] <NEXT> f6 = r1 get x <NEXT> f7 = r1 get y <NEXT> r9 = new org apache pdfbox util vector <NEXT> $ f9 = f6 * f0 <NEXT> $ f8 = f7 * f2 <NEXT> $ f10 = $ f9 + $ f8 <NEXT> $ f15 = $ f10 + f4 <NEXT> $ f12 = f6 * f1 <NEXT> $ f11 = f7 * f3 <NEXT> $ f13 = $ f12 + $ f11 <NEXT> $ f14 = $ f13 + f5 <NEXT> specialinvoke r9 < init > $ f15 $ f14 <NEXT> return r9 <END>
<BEG> d0 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> f1 = @ parameter2 <NEXT> $ d1 = java lang math co d0 <NEXT> f2 = float $ d1 <NEXT> $ d2 = java lang math sin d0 <NEXT> f3 = float $ d2 <NEXT> $ r1 = new org apache pdfbox util matrix <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 single <NEXT> $ r2 [ 0 ] = f2 <NEXT> $ r3 = $ r1 single <NEXT> $ r3 [ 1 ] = f3 <NEXT> $ r4 = $ r1 single <NEXT> $ f4 = neg f3 <NEXT> $ r4 [ 3 ] = $ f4 <NEXT> $ r5 = $ r1 single <NEXT> $ r5 [ 4 ] = f2 <NEXT> $ r6 = $ r1 single <NEXT> $ r6 [ 6 ] = f0 <NEXT> $ r7 = $ r1 single <NEXT> $ r7 [ 7 ] = f1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache pdfbox tool text to p d f r0 <NEXT> $ z0 = r1 landscape <NEXT> return $ z0 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ l4 = long i0 <NEXT> l2 = $ l4 < < 32 <NEXT> $ i5 = java lang integer rotate leave i1 1 <NEXT> $ l6 = long $ i5 <NEXT> l3 = $ l6 & 4294967295l <NEXT> $ l7 = l2 | l3 <NEXT> $ l8 = java lang long rotate right $ l7 1 <NEXT> return $ l8 <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus plexus context default context r0 <NEXT> $ r1 = r2 parent <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 ! = null goto label1 <NEXT> return r1 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r3 = new java lang string buffer <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append r1 <NEXT> $ r5 = $ r4 append \ `` \ `` <NEXT> $ r6 = $ r5 append r2 <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org codehaus plexus interpolation reflection method map r0 <NEXT> $ r2 = r5 method by name map <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java util list $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org sonatype plexus component sec dispatcher model config property r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r29 = org codehaus plexus util directory scanner r0 <NEXT> $ z0 = r29 have slow result <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r30 = org codehaus plexus util directory scanner r0 <NEXT> $ r3 = r30 dirs exclude <NEXT> $ i0 = $ r3 size <NEXT> r1 = newarray java lang string [ $ i0 ] <NEXT> r31 = org codehaus plexus util directory scanner r0 <NEXT> $ r4 = r31 dirs exclude <NEXT> $ r4 copy into r1 <NEXT> r32 = org codehaus plexus util directory scanner r0 <NEXT> $ r5 = r32 dirs not include <NEXT> $ i1 = $ r5 size <NEXT> r2 = newarray java lang string [ $ i1 ] <NEXT> r33 = org codehaus plexus util directory scanner r0 <NEXT> $ r6 = r33 dirs not include <NEXT> $ r6 copy into r2 <NEXT> i2 = lengthof r1 <NEXT> i3 = 0 <NEXT> label if i3 > = i2 goto label4 <NEXT> r22 = r1 [ i3 ] <NEXT> r34 = org codehaus plexus util directory scanner r0 <NEXT> $ z2 = r34 could hold included r22 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> r25 = new java io file <NEXT> r35 = org codehaus plexus util directory scanner r0 <NEXT> $ r15 = r35 basedir <NEXT> specialinvoke r25 < init > $ r15 r22 <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r17 = r26 append r22 <NEXT> $ r18 = java io file separator <NEXT> $ r19 = $ r17 append $ r18 <NEXT> $ r20 = $ r19 to string <NEXT> r36 = org codehaus plexus util directory scanner r0 <NEXT> r36 scandir r25 $ r20 0 <NEXT> label i3 = i3 + 1 <NEXT> goto label2 <NEXT> label if i3 > = i2 goto label4 <NEXT> label i4 = lengthof r2 <NEXT> i5 = 0 <NEXT> label if i5 > = i4 goto label7 <NEXT> r24 = r2 [ i5 ] <NEXT> r37 = org codehaus plexus util directory scanner r0 <NEXT> $ z1 = r37 could hold included r24 <NEXT> if $ z1 ! = 0 goto label6 <NEXT> r27 = new java io file <NEXT> r38 = org codehaus plexus util directory scanner r0 <NEXT> $ r8 = r38 basedir <NEXT> specialinvoke r27 < init > $ r8 r24 <NEXT> r28 = new java lang string builder <NEXT> specialinvoke r28 < init > <NEXT> $ r10 = r28 append r24 <NEXT> $ r11 = java io file separator <NEXT> $ r12 = $ r10 append $ r11 <NEXT> $ r13 = $ r12 to string <NEXT> r39 = org codehaus plexus util directory scanner r0 <NEXT> r39 scandir r27 $ r13 0 <NEXT> label i5 = i5 + 1 <NEXT> goto label5 <NEXT> label if i5 > = i4 goto label7 <NEXT> label r40 = org codehaus plexus util directory scanner r0 <NEXT> r40 have slow result = 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org codehaus plexus util directory walker r0 <NEXT> $ r2 = r3 listener <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus plexus util exception utils cause_method_names <NEXT> $ r2 = org codehaus plexus util exception utils get cause r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java lang system err <NEXT> org codehaus plexus util exception utils print root cause stack trace r0 $ r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get method <NEXT> $ r5 = new java util array list <NEXT> specialinvoke $ r5 < init > <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r4 = r1 [ i1 ] <NEXT> $ z0 = org codehaus plexus util reflection utils be setter r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 add r4 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 length <NEXT> if $ i0 ! = 4 goto label5 <NEXT> $ c1 = r0 char at 0 <NEXT> if $ c1 == 116 goto label1 <NEXT> $ c8 = r0 char at 0 <NEXT> if $ c8 ! = 84 goto label5 <NEXT> label $ c2 = r0 char at 1 <NEXT> if $ c2 == 114 goto label2 <NEXT> $ c7 = r0 char at 1 <NEXT> if $ c7 ! = 82 goto label5 <NEXT> label $ c3 = r0 char at 2 <NEXT> if $ c3 == 117 goto label3 <NEXT> $ c6 = r0 char at 2 <NEXT> if $ c6 ! = 85 goto label5 <NEXT> label $ c4 = r0 char at 3 <NEXT> if $ c4 == 101 goto label4 <NEXT> $ c5 = r0 char at 3 <NEXT> if $ c5 ! = 69 goto label5 <NEXT> label $ z0 = 1 <NEXT> goto label6 <NEXT> label return $ z0 <NEXT> if $ c5 ! = 69 goto label5 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org codehaus plexus util xml pretty print x m l writer r0 <NEXT> $ r1 = r3 get line separator <NEXT> r4 = org codehaus plexus util xml pretty print x m l writer r0 <NEXT> specialinvoke r4 write $ r1 <NEXT> i1 = 0 <NEXT> label r5 = org codehaus plexus util xml pretty print x m l writer r0 <NEXT> $ i0 = r5 get depth <NEXT> if i1 > = $ i0 goto label2 <NEXT> r6 = org codehaus plexus util xml pretty print x m l writer r0 <NEXT> $ r2 = r6 get line indenter <NEXT> r7 = org codehaus plexus util xml pretty print x m l writer r0 <NEXT> specialinvoke r7 write $ r2 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label return <END>
<BEG> c0 = @ parameter0 <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> org codehaus plexus util xml pull m x serializer add printable $ r1 c0 <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus plexus util cli commandline r0 <NEXT> $ r1 = r2 create argument 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org codehaus plexus util o be family \ `` windows\ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r2 = r0 get name <NEXT> $ r3 = org codehaus plexus util file utils invalid_characters_for_windows_file_name <NEXT> $ i0 = org codehaus plexus util string utils index of any $ r2 $ r3 <NEXT> if $ i0 == -1 goto label1 <NEXT> return 0 <NEXT> if $ i0 == -1 goto label1 <NEXT> label r1 = r0 get parent file <NEXT> if r1 == null goto label2 <NEXT> $ z1 = org codehaus plexus util file utils be valid window file name r1 <NEXT> return $ z1 <NEXT> if r1 == null goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache poi ddf abstract escher opt record r0 <NEXT> $ r2 = r3 property <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi ddf abstract escher opt record r0 <NEXT> $ r1 = r2 property <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi ddf escher bitmap blip r0 <NEXT> $ b0 = r1 field_2_marker <NEXT> return $ b0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ i1 = 0 <NEXT> goto label2 <NEXT> label r4 = org apache poi ddf escher blip record r0 <NEXT> r4 set picture data r1 0 $ i1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label $ i1 = lengthof r1 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi ddf escher client anchor record r0 <NEXT> r1 field_4_row1 = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi ddf escher dgg record r0 <NEXT> $ r1 = r3 field_5_file id cluster <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> $ i1 = 0 <NEXT> goto label2 <NEXT> label return $ i1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = org apache poi ddf escher dgg record r0 <NEXT> $ r2 = r4 field_5_file id cluster <NEXT> $ i0 = $ r2 size <NEXT> $ i1 = $ i0 + 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi ddf escher dgg record r0 <NEXT> $ i0 = r1 field_4_drawings save <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi ddf escher pict blip r0 <NEXT> $ i0 = r1 field_5_cb save <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi ddf escher record f instance <NEXT> r2 = org apache poi ddf escher record r0 <NEXT> $ s0 = r2 _options <NEXT> $ s1 = $ r1 get short value $ s0 <NEXT> return $ s1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi ddf escher split menu color record r0 <NEXT> $ i0 = r1 field_1_color1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi ddf escher split menu color record r0 <NEXT> r1 field_1_color1 = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi ddf escher split menu color record r0 <NEXT> r1 field_4_color4 = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi ddf escher sp record r0 <NEXT> $ s0 = r1 get instance <NEXT> return $ s0 <END>
<BEG> r0 = @ parameter0 <NEXT> org apache poi extractor o l e2 extractor factory all prefer event extractor = r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi extractor p o i o l e2 text extractor r0 <NEXT> $ r1 = r3 document <NEXT> $ r2 = $ r1 get summary information <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache poi hpsf custom property r0 <NEXT> $ r1 = r4 dictionary <NEXT> $ r2 = $ r1 value <NEXT> $ r3 = java util collection unmodifiable set $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hpsf document summary information r0 <NEXT> r1 set1st property 4l i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hpsf document summary information r0 <NEXT> r1 remove1st property 7l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hpsf document summary information r0 <NEXT> r1 set1st property 9l i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hpsf document summary information r0 <NEXT> r1 remove1st property 10l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hpsf document summary information r0 <NEXT> $ i0 = r1 get property int value 23 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hpsf document summary information r0 <NEXT> r1 remove1st property 28l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hpsf document summary information r0 <NEXT> r1 remove1st property 29l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hpsf property r0 <NEXT> $ l0 = r1 id <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache poi hpsf section r0 <NEXT> $ r1 = r6 property <NEXT> $ r2 = $ r1 value <NEXT> $ r3 = newarray org apache poi hpsf property [ 0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = org apache poi hpsf property [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi hpsf summary information r0 <NEXT> r2 set1st property 6l r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi hpsf summary information r0 <NEXT> r2 set1st property 8l r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hpsf summary information r0 <NEXT> r1 remove1st property 10l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hpsf summary information r0 <NEXT> r1 set1st property 15l i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf eventusermodel dummyrecord last cell of row dummy record r0 <NEXT> $ i0 = r1 last column number <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> label r5 = org apache poi hssf eventusermodel h s s f event factory r0 <NEXT> specialinvoke r5 generic process event r1 r2 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi hssf record record factory get all know record s i ds <NEXT> i0 = lengthof r2 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label2 <NEXT> s1 = r2 [ i2 ] <NEXT> r4 = org apache poi hssf eventusermodel h s s f request r0 <NEXT> r4 add listener r1 s1 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache poi hssf eventusermodel h s s f request r0 <NEXT> $ r4 = r9 _records <NEXT> $ s0 = r1 get sid <NEXT> $ r5 = java lang short value of $ s0 <NEXT> $ r6 = $ r4 get $ r5 <NEXT> r2 = java util list $ r6 <NEXT> s2 = 0 <NEXT> if r2 == null goto label5 <NEXT> i3 = 0 <NEXT> label $ i1 = r2 size <NEXT> if i3 > = $ i1 goto label5 <NEXT> r3 = r2 get i3 <NEXT> $ z0 = r3 instanceof org apache poi hssf eventusermodel abortable h s s f listener <NEXT> if $ z0 == 0 goto label3 <NEXT> r7 = org apache poi hssf eventusermodel abortable h s s f listener r3 <NEXT> s2 = r7 abortable process record r1 <NEXT> if s2 == 0 goto label2 <NEXT> goto label5 <NEXT> label return s2 <NEXT> if s2 == 0 goto label2 <NEXT> label goto label4 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r8 = org apache poi hssf eventusermodel h s s f listener r3 <NEXT> r8 process record r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = org apache poi hssf model internal sheet log <NEXT> $ r2 = newarray java lang object [ 1 ] <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r5 = r9 append \ `` remove value record row \ `` <NEXT> $ r6 = $ r5 append i0 <NEXT> $ r7 = $ r6 to string <NEXT> $ r2 [ 0 ] = $ r7 <NEXT> $ r4 log 1 $ r2 <NEXT> r10 = org apache poi hssf model internal sheet r0 <NEXT> $ r8 = r10 _rows aggregate <NEXT> $ r8 remove cell r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org apache poi hssf model internal sheet r0 <NEXT> $ r1 = r2 gridset <NEXT> if z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label $ r1 set gridset $ z1 <NEXT> return <NEXT> if z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r3 = org apache poi hssf model internal sheet r0 <NEXT> $ r2 = r3 _column info <NEXT> r1 = $ r2 find column info s0 <NEXT> if r1 == null goto label1 <NEXT> $ i1 = r1 get x f index <NEXT> $ s2 = short $ i1 <NEXT> return $ s2 <NEXT> if r1 == null goto label1 <NEXT> label return 15 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r3 = org apache poi hssf model internal sheet r0 <NEXT> $ r1 = r3 window two <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org apache poi hssf model internal sheet r0 <NEXT> $ r2 = r4 window two <NEXT> $ r2 set leave col s0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r5 = org apache poi hssf record aggregate value record aggregate r0 <NEXT> $ r2 = r5 record <NEXT> $ i1 = lengthof $ r2 <NEXT> if i0 < $ i1 goto label1 <NEXT> return 0 <NEXT> if i0 < $ i1 goto label1 <NEXT> label r6 = org apache poi hssf record aggregate value record aggregate r0 <NEXT> $ r3 = r6 record <NEXT> r1 = $ r3 [ i0 ] <NEXT> if r1 ! = null goto label2 <NEXT> label i3 = 0 <NEXT> label $ i2 = lengthof r1 <NEXT> if i3 > = $ i2 goto label5 <NEXT> $ r4 = r1 [ i3 ] <NEXT> if $ r4 == null goto label4 <NEXT> return 1 <NEXT> if $ r4 == null goto label4 <NEXT> label i3 = i3 + 1 <NEXT> goto label3 <NEXT> if i3 > = $ i2 goto label5 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record b o f record r0 <NEXT> $ i0 = r1 field_3_build <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hssf record bound sheet record r0 <NEXT> r1 field_1_position_of_ b o f = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record cf border formatting bord leave line style <NEXT> r2 = org apache poi hssf record cf border format r0 <NEXT> $ i0 = r2 field_13_border_styles1 <NEXT> $ i1 = $ r1 get value $ i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org apache poi hssf record cf border format bord diag line style <NEXT> r2 = org apache poi hssf record cf border format r0 <NEXT> $ i1 = r2 field_14_border_styles2 <NEXT> $ i2 = $ r1 set value $ i1 i0 <NEXT> r3 = org apache poi hssf record cf border format r0 <NEXT> r3 field_14_border_styles2 = $ i2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org apache poi hssf record cf border formatting bord right line color <NEXT> r2 = org apache poi hssf record cf border format r0 <NEXT> $ i1 = r2 field_13_border_styles1 <NEXT> $ i2 = $ r1 set value $ i1 i0 <NEXT> r3 = org apache poi hssf record cf border format r0 <NEXT> r3 field_13_border_styles1 = $ i2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> $ s0 = 700 <NEXT> goto label2 <NEXT> label r2 = org apache poi hssf record cf font format r0 <NEXT> specialinvoke r2 set font weight $ s0 <NEXT> return <NEXT> if z0 == 0 goto label1 <NEXT> label $ s0 = 400 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r8 = new java lang illegal argument exception <NEXT> specialinvoke r8 < init > \ `` cell range must not be null\ `` <NEXT> throw r8 <NEXT> if r1 ! = null goto label1 <NEXT> label r9 = new org apache poi s util cell range address list <NEXT> specialinvoke r9 < init > <NEXT> r7 = null <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r4 = r1 [ i1 ] <NEXT> r7 = org apache poi s util cell range util create enclose cell range r4 r7 <NEXT> r9 add cell range address r4 <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label3 <NEXT> label r10 = org apache poi hssf record c f header base r0 <NEXT> r10 field_3_enclosing_cell_range = r7 <NEXT> r11 = org apache poi hssf record c f header base r0 <NEXT> r11 field_4_cell_ranges = r9 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org apache poi hssf record c f rule12 record parse formula r1 r0 <NEXT> $ r3 = new org apache poi hssf record c f rule12 record <NEXT> specialinvoke $ r3 < init > 2 0 r2 null null <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = r1 get workbook <NEXT> r6 = org apache poi ss usermodel sheet r1 <NEXT> i0 = $ r2 get sheet index r6 <NEXT> $ r3 = r1 get workbook <NEXT> $ r4 = org apache poi s formula formula type cell <NEXT> $ r5 = org apache poi hssf model h s s f formula parser parse r0 $ r3 $ r4 i0 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart area format record r0 <NEXT> r1 field_3_pattern = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart axis option record r0 <NEXT> $ s0 = r1 field_2_maximum category <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart axis option record r0 <NEXT> $ s0 = r1 field_5_minor unit value <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart axis option record r0 <NEXT> r1 field_5_minor unit value = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = org apache poi hssf record chart axis option record default minimum <NEXT> r2 = org apache poi hssf record chart axis option record r0 <NEXT> $ s0 = r2 field_9_options <NEXT> $ s1 = $ r1 set short boolean $ s0 z0 <NEXT> r3 = org apache poi hssf record chart axis option record r0 <NEXT> r3 field_9_options = $ s1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record chart axis option record default cross <NEXT> r2 = org apache poi hssf record chart axis option record r0 <NEXT> $ s0 = r2 field_9_options <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart bar record r0 <NEXT> $ s0 = r1 field_1_bar space <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart bar record r0 <NEXT> $ s0 = r1 field_3_format flag <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart data format record r0 <NEXT> r1 field_1_point number = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record chart dat record show series key <NEXT> r2 = org apache poi hssf record chart dat record r0 <NEXT> $ s0 = r2 field_1_options <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart font basis record r0 <NEXT> $ s0 = r1 field_3_height basis <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart frame record r0 <NEXT> r1 field_2_options = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record chart legend record vertical <NEXT> r2 = org apache poi hssf record chart legend record r0 <NEXT> $ s0 = r2 field_7_options <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record chart legend record data table <NEXT> r2 = org apache poi hssf record chart legend record r0 <NEXT> $ s0 = r2 field_7_options <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart line format record r0 <NEXT> r1 field_2_line pattern = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart line format record r0 <NEXT> $ s0 = r1 field_5_colour palette index <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart link data record r0 <NEXT> $ b0 = r1 field_2_reference type <NEXT> return $ b0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart link data record r0 <NEXT> $ s0 = r1 field_3_options <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart link data record r0 <NEXT> r1 field_3_options = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart number format index record r0 <NEXT> r1 field_1_format index = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record chart series label record show actual <NEXT> r2 = org apache poi hssf record chart series label record r0 <NEXT> $ s0 = r2 field_1_format flag <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart series record r0 <NEXT> $ s0 = r1 field_1_category data type <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart series record r0 <NEXT> r1 field_1_category data type = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart series record r0 <NEXT> $ s0 = r1 field_4_num value <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart series record r0 <NEXT> r1 field_4_num value = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart series record r0 <NEXT> r1 field_5_bubble series type = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart series text record r0 <NEXT> $ i0 = r1 field_1_id <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart sheet property record r0 <NEXT> r1 field_2_empty = b0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = org apache poi hssf record chart sheet property record plot visible only <NEXT> r2 = org apache poi hssf record chart sheet property record r0 <NEXT> $ i0 = r2 field_1_flags <NEXT> $ i1 = $ r1 set boolean $ i0 z0 <NEXT> r3 = org apache poi hssf record chart sheet property record r0 <NEXT> r3 field_1_flags = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart text record r0 <NEXT> r1 field_9_options1 = s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record chart text record r0 <NEXT> $ s0 = r1 field_12_text rotation <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hssf record chart tick record r0 <NEXT> r1 field_6_zero1 = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record chart tick record autorotate <NEXT> r2 = org apache poi hssf record chart tick record r0 <NEXT> $ s0 = r2 field_10_options <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record chart value range record automatic category cross <NEXT> r2 = org apache poi hssf record chart value range record r0 <NEXT> $ s0 = r2 field_6_options <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record common object data sub record lock <NEXT> r2 = org apache poi hssf record common object data sub record r0 <NEXT> $ s0 = r2 field_3_option <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record cont unknown length record output r0 <NEXT> $ i0 = r1 _size <NEXT> $ i1 = 4 + $ i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache poi hssf record escher aggregate r0 <NEXT> $ r3 = r5 shape to obj <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf record font record italic <NEXT> r2 = org apache poi hssf record font record r0 <NEXT> $ s0 = r2 field_2_attributes <NEXT> $ z0 = $ r1 be set $ s0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record font record r0 <NEXT> $ b0 = r1 field_8_charset <NEXT> return $ b0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf record font record r0 <NEXT> $ r1 = r2 field_11_font_name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache poi hssf record formula record r0 <NEXT> r1 field_4_value = d0 <NEXT> r2 = org apache poi hssf record formula record r0 <NEXT> r2 special cache value = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record hyperlink record r0 <NEXT> $ i0 = r1 _link opts <NEXT> $ i1 = $ i0 & 1 <NEXT> if $ i1 < = 0 goto label1 <NEXT> r2 = org apache poi hssf record hyperlink record r0 <NEXT> $ i2 = r2 _link opts <NEXT> $ i3 = $ i2 & 2 <NEXT> if $ i3 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i3 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record hyperlink record r0 <NEXT> $ i0 = r1 _link opts <NEXT> $ i1 = $ i0 & 1 <NEXT> if $ i1 < = 0 goto label1 <NEXT> r2 = org apache poi hssf record hyperlink record r0 <NEXT> $ i2 = r2 _link opts <NEXT> $ i3 = $ i2 & 2 <NEXT> if $ i3 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i3 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = org apache poi hssf record iteration record iteration on <NEXT> r2 = org apache poi hssf record iteration record r0 <NEXT> $ i0 = r2 _flags <NEXT> $ i1 = $ r1 set boolean $ i0 z0 <NEXT> r3 = org apache poi hssf record iteration record r0 <NEXT> r3 _flags = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org apache poi util record format exception <NEXT> specialinvoke r3 < init > \ `` label record be support read only convert to label s s t\ `` <NEXT> r4 = java lang throwable r3 <NEXT> throw r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache poi hssf record mul r k record r0 <NEXT> $ r1 = r3 field_3_rks <NEXT> $ r2 = $ r1 [ i0 ] <NEXT> $ i1 = $ r2 rk <NEXT> $ d0 = org apache poi hssf util r k util decode number $ i1 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r8 = org apache poi hssf record name record r0 <NEXT> $ r3 = r8 field_13_name_definition <NEXT> r1 = $ r3 get token <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r2 = r1 [ 0 ] <NEXT> $ r4 = r2 get class <NEXT> if $ r4 ! = class \ `` lorg apache poi s formula ptg area3 d ptg \ `` goto label2 <NEXT> $ r7 = org apache poi s formula ptg area3 d ptg r2 <NEXT> $ i2 = $ r7 get extern sheet index <NEXT> return $ i2 <NEXT> if $ r4 ! = class \ `` lorg apache poi s formula ptg area3 d ptg \ `` goto label2 <NEXT> label $ r5 = r2 get class <NEXT> if $ r5 ! = class \ `` lorg apache poi s formula ptg ref3 d ptg \ `` goto label3 <NEXT> $ r6 = org apache poi s formula ptg ref3 d ptg r2 <NEXT> $ i1 = $ r6 get extern sheet index <NEXT> return $ i1 <NEXT> if $ r5 ! = class \ `` lorg apache poi s formula ptg ref3 d ptg \ `` goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache poi hssf record number record r0 <NEXT> r1 field_4_value = d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = org apache poi hssf record protection rev4 record protect flag <NEXT> r2 = org apache poi hssf record protection rev4 record r0 <NEXT> $ i0 = r2 _options <NEXT> $ i1 = $ r1 set boolean $ i0 z0 <NEXT> r3 = org apache poi hssf record protection rev4 record r0 <NEXT> r3 _options = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf record record input stream r0 <NEXT> specialinvoke r2 check record position 2 <NEXT> r3 = org apache poi hssf record record input stream r0 <NEXT> $ i0 = r3 _current data offset <NEXT> $ i1 = $ i0 + 2 <NEXT> r4 = org apache poi hssf record record input stream r0 <NEXT> r4 _current data offset = $ i1 <NEXT> r5 = org apache poi hssf record record input stream r0 <NEXT> $ r1 = r5 _data input <NEXT> $ i2 = $ r1 read u short <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi hssf record record input stream r0 <NEXT> i0 = r3 remain <NEXT> if i0 ! = 0 goto label1 <NEXT> $ r2 = org apache poi hssf record record input stream empty_byte_array <NEXT> return $ r2 <NEXT> if i0 ! = 0 goto label1 <NEXT> label $ l1 = long i0 <NEXT> r1 = org apache poi util i o utils safely allocate $ l1 100000 <NEXT> r4 = org apache poi hssf record record input stream r0 <NEXT> r4 read fully r1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> $ r1 = org apache poi hssf record row record outline level <NEXT> r2 = org apache poi hssf record row record r0 <NEXT> $ i1 = r2 field_7_option_flags <NEXT> $ i2 = $ r1 set value $ i1 s0 <NEXT> r3 = org apache poi hssf record row record r0 <NEXT> r3 field_7_option_flags = $ i2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hssf record row record r0 <NEXT> $ i0 = r1 field_3_last_col <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hssf record selection record r0 <NEXT> r1 field_2_row_active_cell = i0 <NEXT> r2 = org apache poi hssf record selection record r0 <NEXT> specialinvoke r2 reset field6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org apache poi hssf record s s t record r0 <NEXT> $ r1 = r4 field_3_strings <NEXT> $ r2 = $ r1 get i0 <NEXT> $ r3 = org apache poi hssf record common unicode string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r4 = org apache poi hssf usermodel escher graphics2d r0 <NEXT> $ r3 = r4 _escher graphic <NEXT> $ r3 fill polygon r1 r2 i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hssf usermodel h s s f cell style get data format string cache <NEXT> $ r2 = $ r1 get <NEXT> if $ r2 == null goto label1 <NEXT> $ r3 = org apache poi hssf usermodel h s s f cell style last date format <NEXT> $ r4 = $ r3 get <NEXT> $ r5 = java lang short $ r4 <NEXT> $ s0 = $ r5 short value <NEXT> r24 = org apache poi hssf usermodel h s s f cell style r0 <NEXT> $ s1 = r24 get data format <NEXT> if $ s0 ! = $ s1 goto label1 <NEXT> r25 = org apache poi hssf usermodel h s s f cell style r0 <NEXT> $ r6 = r25 _workbook <NEXT> $ r7 = $ r6 get format <NEXT> $ r8 = org apache poi hssf usermodel h s s f cell style last format <NEXT> $ r9 = $ r8 get <NEXT> $ z0 = $ r7 equal $ r9 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = org apache poi hssf usermodel h s s f cell style get data format string cache <NEXT> $ r11 = $ r10 get <NEXT> $ r12 = java lang string $ r11 <NEXT> return $ r12 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r13 = org apache poi hssf usermodel h s s f cell style last format <NEXT> r26 = org apache poi hssf usermodel h s s f cell style r0 <NEXT> $ r14 = r26 _workbook <NEXT> $ r15 = $ r14 get format <NEXT> $ r13 set $ r15 <NEXT> $ r16 = org apache poi hssf usermodel h s s f cell style last date format <NEXT> r27 = org apache poi hssf usermodel h s s f cell style r0 <NEXT> $ s2 = r27 get data format <NEXT> $ r17 = java lang short value of $ s2 <NEXT> $ r16 set $ r17 <NEXT> $ r18 = org apache poi hssf usermodel h s s f cell style get data format string cache <NEXT> r28 = org apache poi hssf usermodel h s s f cell style r0 <NEXT> $ r19 = r28 _workbook <NEXT> r29 = org apache poi hssf usermodel h s s f cell style r0 <NEXT> $ r20 = r29 get data format string $ r19 <NEXT> $ r18 set $ r20 <NEXT> $ r21 = org apache poi hssf usermodel h s s f cell style get data format string cache <NEXT> $ r22 = $ r21 get <NEXT> $ r23 = java lang string $ r22 <NEXT> return $ r23 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf usermodel h s s f cell style r0 <NEXT> $ r1 = r2 _format <NEXT> $ z0 = $ r1 get123 prefix <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf usermodel h s s f cell style r0 <NEXT> $ r1 = r2 _format <NEXT> $ s0 = $ r1 get read order <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache poi hssf usermodel h s s f conditional formatting r0 <NEXT> $ r2 = r4 cf aggregate <NEXT> $ r3 = r1 get cf rule record <NEXT> $ r2 add rule $ r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ i0 = org apache poi s usermodel date util absolute day r0 z0 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org apache poi hssf usermodel h s s f evaluation workbook r0 <NEXT> i0 = specialinvoke r7 get sheet ext ix r2 <NEXT> r8 = org apache poi hssf usermodel h s s f evaluation workbook r0 <NEXT> $ r4 = r8 _i book <NEXT> r9 = org apache poi hssf usermodel h s s f evaluation workbook r0 <NEXT> $ r3 = r9 _u book <NEXT> $ r5 = $ r3 get u d f finder <NEXT> $ r6 = $ r4 get name x ptg r1 i0 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r3 = org apache poi hssf usermodel h s s f font r0 <NEXT> $ r2 = r3 font <NEXT> $ r2 set bold weight 700 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r4 = org apache poi hssf usermodel h s s f font r0 <NEXT> $ r1 = r4 font <NEXT> $ r1 set bold weight 400 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache poi hssf usermodel h s s f formula evaluator r0 <NEXT> $ r3 = r5 _book evaluator <NEXT> r4 = new org apache poi hssf usermodel h s s f evaluation cell <NEXT> specialinvoke r4 < init > r1 <NEXT> r6 = org apache poi s formula evaluation cell r4 <NEXT> $ r3 notify delete cell r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r28 = org apache poi hssf usermodel h s s f formula evaluator r0 <NEXT> $ r5 = r28 _book evaluator <NEXT> r23 = new org apache poi hssf usermodel h s s f evaluation cell <NEXT> $ r4 = org apache poi hssf usermodel h s s f cell r1 <NEXT> specialinvoke r23 < init > $ r4 <NEXT> r29 = org apache poi s formula evaluation cell r23 <NEXT> r2 = $ r5 evaluate r29 <NEXT> $ z0 = r2 instanceof org apache poi s formula eval bool eval <NEXT> if $ z0 == 0 goto label1 <NEXT> r20 = org apache poi s formula eval bool eval r2 <NEXT> $ z4 = r20 get boolean value <NEXT> $ r19 = org apache poi s usermodel cell value value of $ z4 <NEXT> return $ r19 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r2 instanceof org apache poi s formula eval numeric value eval <NEXT> if $ z1 == 0 goto label2 <NEXT> r21 = org apache poi s formula eval numeric value eval r2 <NEXT> r24 = new org apache poi s usermodel cell value <NEXT> $ d0 = r21 get number value <NEXT> specialinvoke r24 < init > $ d0 <NEXT> return r24 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r2 instanceof org apache poi s formula eval string value eval <NEXT> if $ z2 == 0 goto label3 <NEXT> r22 = org apache poi s formula eval string value eval r2 <NEXT> r25 = new org apache poi s usermodel cell value <NEXT> $ r17 = r22 get string value <NEXT> specialinvoke r25 < init > $ r17 <NEXT> return r25 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = r2 instanceof org apache poi s formula eval error eval <NEXT> if $ z3 == 0 goto label4 <NEXT> $ r14 = org apache poi s formula eval error eval r2 <NEXT> $ i0 = $ r14 get error code <NEXT> $ r15 = org apache poi s usermodel cell value get error $ i0 <NEXT> return $ r15 <NEXT> if $ z3 == 0 goto label4 <NEXT> label r27 = new java lang runtime exception <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r8 = r26 append \ `` unexpected eval class \ `` <NEXT> $ r9 = r2 get class <NEXT> $ r10 = $ r9 get name <NEXT> $ r11 = $ r8 append $ r10 <NEXT> $ r12 = $ r11 append \ `` \ `` <NEXT> $ r13 = $ r12 to string <NEXT> specialinvoke r27 < init > $ r13 <NEXT> throw r27 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org apache poi hssf usermodel h s s f print setup r0 <NEXT> $ r1 = r2 print setup record <NEXT> $ r1 set no color z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r2 = org apache poi hssf usermodel h s s f print setup r0 <NEXT> $ r1 = r2 print setup record <NEXT> $ r1 set copy s0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf usermodel h s s f print setup r0 <NEXT> $ r1 = r2 print setup record <NEXT> $ s0 = $ r1 get page start <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf usermodel h s s f print setup r0 <NEXT> $ r1 = r2 print setup record <NEXT> $ z0 = $ r1 get no color <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf usermodel h s s f print setup r0 <NEXT> $ r1 = r2 print setup record <NEXT> $ z0 = $ r1 get no orientation <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf usermodel h s s f print setup r0 <NEXT> $ r1 = r2 print setup record <NEXT> $ s0 = $ r1 get v resolution <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi hssf usermodel h s s f rich text string r0 <NEXT> $ r1 = specialinvoke r3 clone string if require <NEXT> r4 = org apache poi hssf usermodel h s s f rich text string r0 <NEXT> r4 _string = $ r1 <NEXT> r5 = org apache poi hssf usermodel h s s f rich text string r0 <NEXT> $ r2 = r5 _string <NEXT> $ r2 clear format <NEXT> r6 = org apache poi hssf usermodel h s s f rich text string r0 <NEXT> specialinvoke r6 add to s s t if require <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r5 = org apache poi hssf usermodel h s s f rich text string r0 <NEXT> $ r2 = r5 _string <NEXT> i1 = $ r2 get format run count <NEXT> r4 = null <NEXT> i4 = 0 <NEXT> label if i4 > = i1 goto label3 <NEXT> r6 = org apache poi hssf usermodel h s s f rich text string r0 <NEXT> $ r3 = r6 _string <NEXT> r1 = $ r3 get format run i4 <NEXT> $ s3 = r1 get character po <NEXT> if $ s3 < = i0 goto label2 <NEXT> goto label3 <NEXT> label if r4 ! = null goto label4 <NEXT> return 0 <NEXT> label if r4 ! = null goto label4 <NEXT> label $ s2 = r4 get font index <NEXT> return $ s2 <NEXT> if $ s3 < = i0 goto label2 <NEXT> label r4 = r1 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache poi hssf usermodel h s s f shape r0 <NEXT> $ r2 = r4 _opt record <NEXT> $ r3 = $ r2 lookup 448 <NEXT> r1 = org apache poi ddf escher r g b property $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> $ i0 = 134217792 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i0 = r1 get rgb color <END>
<BEG> r0 = @ this <NEXT> r4 = org apache poi hssf usermodel h s s f shape r0 <NEXT> $ r2 = r4 _opt record <NEXT> $ r3 = $ r2 lookup 385 <NEXT> r1 = org apache poi ddf escher r g b property $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> $ i0 = 134217737 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i0 = r1 get rgb color <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = new org apache poi ddf escher simple property <NEXT> specialinvoke r2 < init > 129 i0 <NEXT> r3 = org apache poi hssf usermodel h s s f textbox r0 <NEXT> r4 = org apache poi ddf escher property r2 <NEXT> r3 set property value r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hssf usermodel h s s f textbox r0 <NEXT> $ r1 = r2 get text object record <NEXT> $ i0 = $ r1 get horizontal text alignment <NEXT> $ s1 = short $ i0 <NEXT> return $ s1 <END>
<BEG> $ r0 = new org apache poi hssf usermodel h s s f workbook <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> r17 = org apache poi hssf util h s s f color r0 <NEXT> $ r2 = r17 color <NEXT> $ i0 = $ r2 get red <NEXT> $ i1 = $ i0 * 257 <NEXT> $ r3 = java lang integer to hex string $ i1 <NEXT> $ r4 = r16 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \ `` <NEXT> r18 = org apache poi hssf util h s s f color r0 <NEXT> $ r6 = r18 color <NEXT> $ i2 = $ r6 get green <NEXT> $ i3 = $ i2 * 257 <NEXT> $ r7 = java lang integer to hex string $ i3 <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 append \ `` \ `` <NEXT> r19 = org apache poi hssf util h s s f color r0 <NEXT> $ r10 = r19 color <NEXT> $ i4 = $ r10 get blue <NEXT> $ i5 = $ i4 * 257 <NEXT> $ r11 = java lang integer to hex string $ i5 <NEXT> $ r12 = $ r9 append $ r11 <NEXT> $ r13 = $ r12 to string <NEXT> $ r14 = java util locale root <NEXT> $ r15 = $ r13 to upper case $ r14 <NEXT> return $ r15 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r2 = @ parameter3 <NEXT> r3 = org apache poi ss usermodel sheet r1 <NEXT> org apache poi s util region util set top border color i0 r0 r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = org apache poi poifs crypt crypto function get block x r0 i0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = org apache poi poifs crypt crypto function create xor verifier2 r0 <NEXT> $ r2 = java util locale root <NEXT> $ r1 = newarray java lang object [ 1 ] <NEXT> $ r3 = java lang integer value of i0 <NEXT> $ r1 [ 0 ] = $ r3 <NEXT> $ r4 = java lang string format $ r2 \ `` % 1 $ 08x\ <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r7 = new org apache poi poifs filesystem filter directory node <NEXT> $ r4 = r0 get root <NEXT> r9 = org apache poi poifs filesystem directory entry $ r4 <NEXT> specialinvoke r7 < init > r9 r2 <NEXT> r8 = new org apache poi poifs filesystem filter directory node <NEXT> $ r6 = r1 get root <NEXT> r10 = org apache poi poifs filesystem directory entry $ r6 <NEXT> specialinvoke r8 < init > r10 r2 <NEXT> r11 = org apache poi poifs filesystem directory entry r7 <NEXT> r12 = org apache poi poifs filesystem directory entry r8 <NEXT> org apache poi poifs filesystem entry utils copy node r11 r12 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r5 = org apache poi poifs filesystem p o i f s file system r0 <NEXT> $ r3 = r5 get root <NEXT> $ r4 = $ r3 create document r1 i0 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> $ z0 = specialinvoke r0 should use small block <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi poifs property property r0 <NEXT> $ r1 = r2 _storage_clsid <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache poi poifs property property r0 <NEXT> $ r2 = r3 _size <NEXT> r4 = org apache poi poifs property property r0 <NEXT> $ r1 = r4 _raw_data <NEXT> $ r2 set i0 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi sl draw bind c t adj point2 d r0 <NEXT> r2 y = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi sl draw bind c t color r0 <NEXT> r2 scrgb clr = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi sl draw bind c t color r0 <NEXT> r2 srgb clr = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi sl draw bind c t color r0 <NEXT> r2 prst clr = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi sl draw bind c t custom geometry2 d r0 <NEXT> $ r1 = r2 gd lst <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi sl draw bind c t custom geometry2 d r0 <NEXT> $ r1 = r2 ah lst <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi sl draw bind c t custom geometry2 d r0 <NEXT> $ r1 = r2 cxn lst <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi sl draw bind c t embed w a v audio file r0 <NEXT> $ r1 = r2 embed <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi sl draw bind c t group transform2 d r0 <NEXT> $ r1 = r2 ch ext <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi sl draw bind c t group transform2 d r0 <NEXT> $ r1 = r3 rot <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache poi sl draw bind c t group transform2 d r0 <NEXT> $ r2 = r4 rot <NEXT> $ i0 = $ r2 int value <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = java lang boolean value of z0 <NEXT> r2 = org apache poi sl draw bind c t group transform2 d r0 <NEXT> r2 flip v = $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi sl draw bind c t path2 d r0 <NEXT> $ r1 = r3 h <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0l <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache poi sl draw bind c t path2 d r0 <NEXT> $ r2 = r4 h <NEXT> $ l0 = $ r2 long value <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi sl draw bind c t point3 d r0 <NEXT> $ l0 = r1 z <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi sl draw bind c t polar adjust handle r0 <NEXT> r2 min ang = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi sl draw bind c t scale2 d r0 <NEXT> $ r1 = r2 sx <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi sl draw bind c t scale2 d r0 <NEXT> r2 sx = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache poi sl draw bind c t vector3 d r0 <NEXT> r1 dy = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r2 = org apache poi sl draw s l graphic r0 <NEXT> $ r1 = r2 _transform <NEXT> $ r1 shear d0 d1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = org apache poi sl draw s l graphic log <NEXT> $ z0 = $ r4 check 5 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = org apache poi sl draw s l graphic log <NEXT> $ r5 = newarray java lang object [ 1 ] <NEXT> $ r5 [ 0 ] = \ `` not implemented\ `` <NEXT> $ r6 log 5 $ r5 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> label $ r2 = r0 clone <NEXT> $ r3 = java awt graphic $ r2 <NEXT> label return $ r3 <END>
<BEG> $ r5 = org apache poi s formula atp analysis tool pak instance <NEXT> r0 = org apache poi s formula atp analysis tool pak $ r5 <NEXT> $ r6 = new java util tree set <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = r0 _functions by name <NEXT> $ r8 = $ r7 entry set <NEXT> r2 = $ r8 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r10 = r2 next <NEXT> r3 = java util map $ entry $ r10 <NEXT> $ r11 = r3 get value <NEXT> r4 = org apache poi s formula function free ref function $ r11 <NEXT> $ z1 = r4 instanceof org apache poi s formula atp analysis tool pak $ not implement <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r12 = r3 get key <NEXT> $ r6 add $ r12 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r9 = java util collection unmodifiable collection $ r6 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ i3 = lengthof r1 <NEXT> if $ i3 < 2 goto label1 <NEXT> $ i4 = lengthof r1 <NEXT> if $ i4 < = 3 goto label2 <NEXT> label $ r4 = org apache poi s formula eval error eval value_invalid <NEXT> r19 = org apache poi s formula eval value eval $ r4 <NEXT> return r19 <NEXT> if $ i4 < = 3 goto label2 <NEXT> label i0 = r2 get row index <NEXT> i1 = r2 get column index <NEXT> label r20 = org apache poi s formula atp workday function r0 <NEXT> $ r6 = r20 evaluator <NEXT> $ r5 = r1 [ 0 ] <NEXT> d0 = $ r6 evaluate date arg $ r5 i0 i1 <NEXT> r21 = org apache poi s formula atp workday function r0 <NEXT> $ r8 = r21 evaluator <NEXT> $ r7 = r1 [ 1 ] <NEXT> $ d1 = $ r8 evaluate number arg $ r7 i0 i1 <NEXT> $ d2 = java lang math floor $ d1 <NEXT> i2 = int $ d2 <NEXT> $ i5 = lengthof r1 <NEXT> if $ i5 ! = 3 goto label4 <NEXT> $ r15 = r1 [ 2 ] <NEXT> goto label5 <NEXT> label r22 = org apache poi s formula atp workday function r0 <NEXT> $ r9 = r22 evaluator <NEXT> r3 = $ r9 evaluate date arg $ r15 i0 i1 <NEXT> r18 = new org apache poi s formula eval number eval <NEXT> $ r11 = org apache poi s formula atp workday calculator instance <NEXT> $ r12 = $ r11 calculate workday d0 i2 r3 <NEXT> $ d3 = org apache poi s usermodel date util get excel date $ r12 <NEXT> specialinvoke r18 < init > $ d3 <NEXT> label r23 = org apache poi s formula eval value eval r18 <NEXT> return r23 <NEXT> if $ i5 ! = 3 goto label4 <NEXT> label $ r15 = null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 get cell type <NEXT> if r2 == r1 goto label1 <NEXT> $ r3 = org apache poi s usermodel cell type formula <NEXT> if r2 ! = $ r3 goto label2 <NEXT> $ r4 = r0 get cache formula result type <NEXT> if $ r4 ! = r1 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ r4 ! = r1 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache poi s formula evaluation cache r0 <NEXT> $ r1 = r5 _evaluation listener <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org apache poi s formula evaluation cache r0 <NEXT> $ r4 = r6 _evaluation listener <NEXT> $ r4 on clear whole cache <NEXT> label r7 = org apache poi s formula evaluation cache r0 <NEXT> $ r2 = r7 _plain cell cache <NEXT> $ r2 clear <NEXT> r8 = org apache poi s formula evaluation cache r0 <NEXT> $ r3 = r8 _formula cell cache <NEXT> $ r3 clear <NEXT> return <END>
<BEG> d0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> d1 = @ parameter2 <NEXT> $ d2 = org apache poi s formula function finance pmt d0 i0 d1 0 0 <NEXT> return $ d2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ i2 = lengthof r1 <NEXT> if $ i2 == 2 goto label1 <NEXT> $ r5 = org apache poi s formula eval error eval value_invalid <NEXT> r6 = org apache poi s formula eval value eval $ r5 <NEXT> return r6 <NEXT> if $ i2 == 2 goto label1 <NEXT> label $ r3 = r1 [ 0 ] <NEXT> $ r2 = r1 [ 1 ] <NEXT> r7 = org apache poi s formula function fixed2 arg function r0 <NEXT> $ r4 = r7 evaluate i0 i1 $ r3 $ r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ i2 = lengthof r1 <NEXT> if $ i2 == 4 goto label1 <NEXT> $ r7 = org apache poi s formula eval error eval value_invalid <NEXT> r8 = org apache poi s formula eval value eval $ r7 <NEXT> return r8 <NEXT> if $ i2 == 4 goto label1 <NEXT> label $ r5 = r1 [ 0 ] <NEXT> $ r4 = r1 [ 1 ] <NEXT> $ r3 = r1 [ 2 ] <NEXT> $ r2 = r1 [ 3 ] <NEXT> r9 = org apache poi s formula function fixed4 arg function r0 <NEXT> $ r6 = r9 evaluate i0 i1 $ r5 $ r4 $ r3 $ r2 <NEXT> return $ r6 <END>
<BEG> d0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r0 = java math round mode half_up <NEXT> $ d1 = org apache poi s formula function math x round d0 i0 $ r0 <NEXT> return $ d1 <END>
<BEG> r0 = @ parameter0 <NEXT> d3 = 0 0 <NEXT> i2 = 0 <NEXT> i0 = lengthof r0 <NEXT> label if i2 > = i0 goto label2 <NEXT> $ d1 = r0 [ i2 ] <NEXT> d3 = d3 + $ d1 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label2 <NEXT> label $ i1 = lengthof r0 <NEXT> $ d0 = double $ i1 <NEXT> d4 = d3 $ d0 <NEXT> return d4 <END>
<BEG> r0 = @ parameter0 <NEXT> d3 = 0 0 <NEXT> i1 = 0 <NEXT> i0 = lengthof r0 <NEXT> label if i1 > = i0 goto label2 <NEXT> $ d1 = r0 [ i1 ] <NEXT> $ d0 = r0 [ i1 ] <NEXT> $ d2 = $ d1 * $ d0 <NEXT> d3 = d3 + $ d2 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return d3 <END>
<BEG> r0 = @ parameter0 <NEXT> d1 = 0 0 <NEXT> if r0 == null goto label2 <NEXT> $ i1 = lengthof r0 <NEXT> if $ i1 < = 0 goto label2 <NEXT> d1 = 1 0 <NEXT> i2 = 0 <NEXT> i0 = lengthof r0 <NEXT> label if i2 > = i0 goto label2 <NEXT> $ d0 = r0 [ i2 ] <NEXT> d1 = d1 * $ d0 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label2 <NEXT> label return d1 <END>
<BEG> r0 = @ parameter0 <NEXT> d1 = #infinity <NEXT> i1 = 0 <NEXT> i0 = lengthof r0 <NEXT> label if i1 > = i0 goto label2 <NEXT> $ d0 = r0 [ i1 ] <NEXT> d1 = java lang math min d1 $ d0 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return d1 <END>
<BEG> d0 = @ parameter0 <NEXT> $ d1 = java lang math pow d0 2 0 <NEXT> $ d2 = $ d1 - 1 0 <NEXT> $ d3 = java lang math sqrt $ d2 <NEXT> $ d4 = $ d3 + d0 <NEXT> $ d5 = java lang math log $ d4 <NEXT> return $ d5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i1 = lengthof r1 <NEXT> r8 = org apache poi s formula function multi operand numeric function r0 <NEXT> $ i2 = r8 get max num operands <NEXT> if $ i1 < = $ i2 goto label1 <NEXT> $ r6 = org apache poi s formula eval evaluation exception invalid value <NEXT> r9 = java lang throwable $ r6 <NEXT> throw r9 <NEXT> if $ i1 < = $ i2 goto label1 <NEXT> label r7 = new org apache poi s formula function multi operand numeric function $ double list <NEXT> specialinvoke r7 < init > <NEXT> i3 = 0 <NEXT> i0 = lengthof r1 <NEXT> label if i3 > = i0 goto label3 <NEXT> $ r5 = r1 [ i3 ] <NEXT> r10 = org apache poi s formula function multi operand numeric function r0 <NEXT> specialinvoke r10 collect value $ r5 r7 <NEXT> i3 = i3 + 1 <NEXT> goto label2 <NEXT> label if i3 > = i0 goto label3 <NEXT> label $ r4 = r7 to array <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java util locale root <NEXT> $ r2 = r0 to upper case $ r1 <NEXT> s0 = org apache poi s formula function function metadata registry lookup index by name $ r2 <NEXT> if s0 > = 0 goto label1 <NEXT> return 255 <NEXT> if s0 > = 0 goto label1 <NEXT> label return s0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi s usermodel font charset r0 <NEXT> $ i0 = r1 charset <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 ! = null goto label1 <NEXT> return null <NEXT> if r2 ! = null goto label1 <NEXT> label r7 = new org apache poi s util cell reference <NEXT> $ r4 = r2 get sheet <NEXT> $ r5 = $ r4 get sheet name <NEXT> $ i0 = r2 get row index <NEXT> $ i1 = r2 get column index <NEXT> specialinvoke r7 < init > $ r5 $ i0 $ i1 1 1 <NEXT> r8 = org apache poi s usermodel table style type r0 <NEXT> $ r6 = r8 applies to r1 r7 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi s util area reference r0 <NEXT> $ r1 = r2 _last cell <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ i0 = r0 size <NEXT> if $ i0 < = 1 goto label10 <NEXT> z0 = 0 <NEXT> i5 = 0 <NEXT> label $ i1 = r0 size <NEXT> if i5 > = $ i1 goto label08 <NEXT> $ r3 = r0 get i5 <NEXT> r9 = org apache poi s util cell range address $ r3 <NEXT> i6 = i5 + 1 <NEXT> label $ i2 = r0 size <NEXT> if i6 > = $ i2 goto label07 <NEXT> $ r4 = r0 get i6 <NEXT> r1 = org apache poi s util cell range address $ r4 <NEXT> r2 = org apache poi s util cell range util merge range r9 r1 <NEXT> if r2 ! = null goto label04 <NEXT> goto label06 <NEXT> label i6 = i6 + 1 <NEXT> goto label03 <NEXT> if r2 ! = null goto label04 <NEXT> label z0 = 1 <NEXT> r9 = r2 [ 0 ] <NEXT> $ r5 = r2 [ 0 ] <NEXT> r0 set i5 $ r5 <NEXT> $ i3 = i6 <NEXT> i6 = i6 + -1 <NEXT> r0 remove $ i3 <NEXT> i7 = 1 <NEXT> label $ i4 = lengthof r2 <NEXT> if i7 > = $ i4 goto label06 <NEXT> i6 = i6 + 1 <NEXT> $ r8 = r2 [ i7 ] <NEXT> r0 add i6 $ r8 <NEXT> i7 = i7 + 1 <NEXT> goto label05 <NEXT> if i6 > = $ i2 goto label07 <NEXT> label i5 = i5 + 1 <NEXT> goto label02 <NEXT> if i5 > = $ i1 goto label08 <NEXT> label if z0 ! = 0 goto label09 <NEXT> goto label10 <NEXT> label return r0 <NEXT> label if z0 ! = 0 goto label09 <NEXT> label goto label01 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> $ r3 = r0 copy <NEXT> return $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> label $ i4 = r1 get first row <NEXT> $ i5 = r0 get first row <NEXT> $ z0 = org apache poi s util cell range util lt $ i4 $ i5 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ i12 = r1 get first row <NEXT> goto label3 <NEXT> label i0 = $ i12 <NEXT> $ i6 = r1 get last row <NEXT> $ i7 = r0 get last row <NEXT> $ z1 = org apache poi s util cell range util gt $ i6 $ i7 <NEXT> if $ z1 == 0 goto label4 <NEXT> $ i13 = r1 get last row <NEXT> goto label5 <NEXT> label i1 = $ i13 <NEXT> $ i8 = r1 get first column <NEXT> $ i9 = r0 get first column <NEXT> $ z2 = org apache poi s util cell range util lt $ i8 $ i9 <NEXT> if $ z2 == 0 goto label6 <NEXT> $ i14 = r1 get first column <NEXT> goto label7 <NEXT> label i2 = $ i14 <NEXT> $ i10 = r1 get last column <NEXT> $ i11 = r0 get last column <NEXT> $ z3 = org apache poi s util cell range util gt $ i10 $ i11 <NEXT> if $ z3 == 0 goto label8 <NEXT> $ i15 = r1 get last column <NEXT> goto label9 <NEXT> label $ r2 = new org apache poi s util cell range address <NEXT> specialinvoke $ r2 < init > i0 i1 i2 $ i15 <NEXT> return $ r2 <NEXT> if $ z3 == 0 goto label8 <NEXT> label $ i15 = r0 get last column <NEXT> if $ z2 == 0 goto label6 <NEXT> label $ i14 = r0 get first column <NEXT> if $ z1 == 0 goto label4 <NEXT> label $ i13 = r0 get last row <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i12 = r0 get first row <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org apache poi s util cell util set cell style property r0 \ `` alignment\ <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org apache poi s util cell util set cell style property r0 \ `` vertical alignment\ <NEXT> return <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> i1 = r0 get first column <NEXT> i2 = r0 get last column <NEXT> i3 = r0 get last row <NEXT> $ r4 = new org apache poi s util region util $ cell property setter <NEXT> specialinvoke $ r4 < init > \ `` bottom border color\ <NEXT> r3 = org apache poi s util cell util get row i3 r1 <NEXT> i4 = i1 <NEXT> label if i4 > i2 goto label2 <NEXT> $ r4 set property r3 i4 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> label if i4 > i2 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = lengthof r1 <NEXT> $ i1 = org apache poi util i o utils read fully r0 r1 0 $ i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r1 get parent file <NEXT> $ z0 = r2 exist <NEXT> if $ z0 ! = 0 goto label01 <NEXT> $ z1 = r2 mkdirs <NEXT> if $ z1 ! = 0 goto label01 <NEXT> $ r8 = new java lang runtime exception <NEXT> $ r9 = new java lang string builder <NEXT> specialinvoke $ r9 < init > <NEXT> $ r10 = $ r9 append \ `` can\'t create destination directory \ `` <NEXT> $ r11 = $ r10 append r2 <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke $ r8 < init > $ r12 <NEXT> throw $ r8 <NEXT> if $ z1 ! = 0 goto label01 <NEXT> label $ r7 = new java io file output stream <NEXT> specialinvoke $ r7 < init > r1 <NEXT> r17 = null <NEXT> label l0 = org apache poi util i o utils copy r0 $ r7 <NEXT> label if $ r7 == null goto label05 <NEXT> goto label04 <NEXT> label $ r7 close <NEXT> label return l0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new java util zip crc32 <NEXT> specialinvoke $ r2 < init > <NEXT> $ i0 = lengthof r0 <NEXT> $ r2 update r0 0 $ i0 <NEXT> $ l1 = $ r2 get value <NEXT> return $ l1 <END>
<BEG> r0 = java lang system get property \ `` java version\ `` <NEXT> $ r2 = java lang system get property \ `` os name\ `` <NEXT> $ r3 = java util locale root <NEXT> r1 = $ r2 to low case $ r3 <NEXT> z0 = java lang boolean get boolean \ `` org apache poi jvm bug line break measurer ignore\ `` <NEXT> if z0 ! = 0 goto label2 <NEXT> $ z2 = r1 contain \ `` win\ `` <NEXT> if $ z2 == 0 goto label2 <NEXT> $ r6 = \ `` 1 6 0_45\ `` <NEXT> $ z3 = $ r6 equal r0 <NEXT> if $ z3 ! = 0 goto label1 <NEXT> $ r7 = \ `` 1 7 0_21\ `` <NEXT> $ z4 = $ r7 equal r0 <NEXT> if $ z4 == 0 goto label2 <NEXT> label $ z5 = 1 <NEXT> goto label3 <NEXT> label z1 = $ z5 <NEXT> if $ z5 == 0 goto label4 <NEXT> $ r5 = org apache poi util jvm bug log <NEXT> $ r4 = newarray java lang object [ 1 ] <NEXT> $ r4 [ 0 ] = \ `` jvm have line break measurer bug - see poi bug #54904 - caller code might default to lucida sans\ `` <NEXT> $ r5 log 5 $ r4 <NEXT> label return z1 <NEXT> if $ z4 == 0 goto label2 <NEXT> label $ z5 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ l0 = org apache poi util little endian get long r0 0 <NEXT> $ d0 = java lang double long bit to double $ l0 <NEXT> return $ d0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ b0 = r0 [ 0 ] <NEXT> $ s1 = $ b0 & 255 <NEXT> $ s2 = short $ s1 <NEXT> return $ s2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ l0 = org apache poi util little endian get u int r0 0 <NEXT> return $ l0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> f0 = @ parameter2 <NEXT> $ i1 = java lang float float to int bit f0 <NEXT> org apache poi util little endian put int r0 i0 $ i1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i9 = i0 + 1 <NEXT> $ i2 = i1 > > > 0 <NEXT> $ i3 = $ i2 & 255 <NEXT> $ b4 = byte $ i3 <NEXT> r0 [ i0 ] = $ b4 <NEXT> $ i5 = i1 > > > 8 <NEXT> $ i6 = $ i5 & 255 <NEXT> $ b7 = byte $ i6 <NEXT> r0 [ i9 ] = $ b7 <NEXT> return <END>
<BEG> z0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> if z0 ! = 0 goto label1 <NEXT> r2 = new org apache poi util record format exception <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = java lang throwable r2 <NEXT> throw r3 <NEXT> if z0 ! = 0 goto label1 <NEXT> label return <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = i0 > > 16 <NEXT> i2 = i0 & 65535 <NEXT> $ d2 = double i1 <NEXT> $ d0 = double i2 <NEXT> $ d1 = $ d0 65536 0 <NEXT> $ d3 = $ d2 + $ d1 <NEXT> return $ d3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get relation class <NEXT> label r8 = org apache poi ooxml p o i x m l factory r0 <NEXT> $ r4 = r8 create document part r2 null null <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi ooxml p o i x m l relation r0 <NEXT> $ r1 = r2 _type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi ooxml p o i x m l relation r0 <NEXT> $ r1 = r2 _relation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache poi ooxml p o i x m l relation r0 <NEXT> $ r3 = r9 _default name <NEXT> r2 = $ r3 replace \ `` #\ <NEXT> $ r4 = r1 get package part <NEXT> $ r5 = $ r4 get part name <NEXT> $ r6 = $ r5 get name <NEXT> $ r7 = $ r6 replace all r2 \ `` $ 1\ `` <NEXT> $ r8 = java lang integer value of $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache poi openxml4j opc internal content type r0 <NEXT> $ r1 = r9 parameter <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r8 = newarray java lang string [ 0 ] <NEXT> return $ r8 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r10 = org apache poi openxml4j opc internal content type r0 <NEXT> $ r2 = r10 parameter <NEXT> $ r3 = $ r2 key set <NEXT> r11 = org apache poi openxml4j opc internal content type r0 <NEXT> $ r4 = r11 parameter <NEXT> $ i0 = $ r4 size <NEXT> $ r5 = newarray java lang string [ $ i0 ] <NEXT> $ r6 = $ r3 to array $ r5 <NEXT> $ r7 = java lang string [ ] $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r11 = new java io file input stream <NEXT> specialinvoke $ r11 < init > r0 <NEXT> r29 = null <NEXT> label $ r12 = new java io file output stream <NEXT> specialinvoke $ r12 < init > r1 <NEXT> r31 = null <NEXT> label r32 = $ r11 get channel <NEXT> r33 = null <NEXT> label r34 = $ r12 get channel <NEXT> r35 = null <NEXT> label $ l0 = r32 size <NEXT> r32 transfer to 0l $ l0 r34 <NEXT> r32 close <NEXT> label if r34 == null goto label15 <NEXT> goto label06 <NEXT> label r34 close <NEXT> goto label15 <NEXT> label if r32 == null goto label25 <NEXT> goto label16 <NEXT> label r32 close <NEXT> goto label25 <NEXT> label if $ r12 == null goto label35 <NEXT> goto label26 <NEXT> label $ r12 close <NEXT> goto label35 <NEXT> label if $ r11 == null goto label45 <NEXT> goto label36 <NEXT> label $ r11 close <NEXT> goto label45 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi openxml4j opc internal package property part r0 <NEXT> $ r1 = r2 last printed <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ z0 = r0 exist <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z2 = r0 be directory <NEXT> if $ z2 == 0 goto label2 <NEXT> label r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` file\ `` <NEXT> throw r6 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z1 = r0 exist <NEXT> if $ z1 == 0 goto label3 <NEXT> r7 = new org apache poi openxml4j exception invalid operation exception <NEXT> specialinvoke r7 < init > \ `` this package or file already exist use the open method or delete the file \ `` <NEXT> r9 = java lang throwable r7 <NEXT> throw r9 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r8 = new org apache poi openxml4j opc zip package <NEXT> specialinvoke r8 < init > <NEXT> $ r4 = r0 get absolute path <NEXT> r10 = org apache poi openxml4j opc o p c package r8 <NEXT> r10 original package path = $ r4 <NEXT> r11 = org apache poi openxml4j opc o p c package r8 <NEXT> org apache poi openxml4j opc o p c package configure package r11 <NEXT> r12 = org apache poi openxml4j opc o p c package r8 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache poi openxml4j opc o p c package r0 <NEXT> r10 throw exception if write only <NEXT> if r1 ! = null goto label1 <NEXT> r9 = new java lang illegal argument exception <NEXT> specialinvoke r9 < init > \ `` part name\ `` <NEXT> throw r9 <NEXT> if r1 ! = null goto label1 <NEXT> label r11 = org apache poi openxml4j opc o p c package r0 <NEXT> $ r3 = r11 part list <NEXT> if $ r3 ! = null goto label5 <NEXT> label r12 = org apache poi openxml4j opc o p c package r0 <NEXT> r12 get part <NEXT> label goto label5 <NEXT> label r13 = org apache poi openxml4j opc o p c package r0 <NEXT> $ r4 = r13 part list <NEXT> $ r5 = $ r4 get r1 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache poi openxml4j opc o p c package r0 <NEXT> $ r2 = r3 get part r1 <NEXT> if $ r2 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r2 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi openxml4j opc o p c package r0 <NEXT> $ r1 = r2 package access <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi openxml4j opc package part r0 <NEXT> $ r1 = specialinvoke r2 get relationship core null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r11 = org apache poi openxml4j opc package part r0 <NEXT> r1 = r11 get input stream impl <NEXT> if r1 ! = null goto label1 <NEXT> r10 = new java io i o exception <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r4 = r9 append \ `` can\'t obtain the input stream from \ `` <NEXT> r12 = org apache poi openxml4j opc package part r0 <NEXT> $ r5 = r12 _part name <NEXT> $ r6 = $ r5 get name <NEXT> $ r7 = $ r4 append $ r6 <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke r10 < init > $ r8 <NEXT> throw r10 <NEXT> if r1 ! = null goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 length <NEXT> if i0 ! = 0 goto label1 <NEXT> return r0 <NEXT> if i0 ! = 0 goto label1 <NEXT> label $ r3 = java nio charset standard charsets utf_8 <NEXT> $ r4 = r0 get bytes $ r3 <NEXT> r1 = java nio byte buffer wrap $ r4 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> label $ z0 = r1 have remain <NEXT> if $ z0 == 0 goto label5 <NEXT> $ b2 = r1 get <NEXT> s1 = $ b2 & 255 <NEXT> $ z1 = org apache poi openxml4j opc package u r i helper be unsafe s1 <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r5 append 37 <NEXT> $ r9 = org apache poi openxml4j opc package u r i helper hex digit <NEXT> $ s4 = s1 > > 4 <NEXT> $ s5 = $ s4 & 15 <NEXT> $ c6 = $ r9 [ $ s5 ] <NEXT> $ r5 append $ c6 <NEXT> $ r11 = org apache poi openxml4j opc package u r i helper hex digit <NEXT> $ s7 = s1 > > 0 <NEXT> $ s8 = $ s7 & 15 <NEXT> $ c9 = $ r11 [ $ s8 ] <NEXT> $ r5 append $ c9 <NEXT> goto label4 <NEXT> label goto label2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ c3 = char s1 <NEXT> $ r5 append $ c3 <NEXT> if $ z0 == 0 goto label5 <NEXT> label $ r6 = $ r5 to string <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi openxml4j opc zip package r0 <NEXT> $ r1 = r2 zip archive <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r11 = org apache poi poifs crypt temp encrypt temp data r0 <NEXT> $ r5 = r11 skey spec <NEXT> $ r4 = org apache poi poifs crypt temp encrypt temp data cipher algorithm <NEXT> $ r3 = org apache poi poifs crypt chain mode cbc <NEXT> r12 = org apache poi poifs crypt temp encrypt temp data r0 <NEXT> $ r2 = r12 iv bytes <NEXT> r1 = org apache poi poifs crypt crypto function get cipher $ r5 $ r4 $ r3 $ r2 1 \ `` p k c s5 padding\ `` <NEXT> r10 = new javax crypto cipher output stream <NEXT> r9 = new java io file output stream <NEXT> r13 = org apache poi poifs crypt temp encrypt temp data r0 <NEXT> $ r8 = r13 temp file <NEXT> specialinvoke r9 < init > $ r8 <NEXT> specialinvoke r10 < init > r9 r1 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi xddf usermodel chart x d d f manual layout r0 <NEXT> $ r1 = r2 layout <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r4 = org apache poi xddf usermodel text x d d f text paragraph r0 <NEXT> $ r3 = r4 _p <NEXT> $ z0 = $ r3 be set p pr <NEXT> if $ z0 == 0 goto label2 <NEXT> label r5 = org apache poi xddf usermodel text x d d f text paragraph r0 <NEXT> $ r2 = specialinvoke r5 get or create property <NEXT> $ r2 set indentation r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r4 = org apache poi xddf usermodel text x d d f text paragraph r0 <NEXT> $ r3 = r4 _p <NEXT> $ z0 = $ r3 be set p pr <NEXT> if $ z0 == 0 goto label2 <NEXT> label r5 = org apache poi xddf usermodel text x d d f text paragraph r0 <NEXT> $ r2 = specialinvoke r5 get or create property <NEXT> $ r2 set margin leave r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> $ r1 = x d d f text paragraph $ lambda_get space before_21__16 bootstrap $ <NEXT> $ r2 = x d d f text paragraph $ lambda_get space before_22__18 bootstrap $ <NEXT> r8 = org apache poi xddf usermodel text x d d f text paragraph r0 <NEXT> $ r3 = r8 find define paragraph property $ r1 $ r2 <NEXT> r9 = org apache poi xddf usermodel text x d d f text paragraph r0 <NEXT> $ r4 = x d d f text paragraph $ lambda_get space before_23__27 bootstrap $ r9 <NEXT> $ r5 = $ r3 map $ r4 <NEXT> $ r6 = $ r5 or else null <NEXT> $ r7 = org apache poi xddf usermodel text x d d f space $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi xddf usermodel text x d d f text paragraph r0 <NEXT> $ r1 = r2 get or create bullet property <NEXT> $ r1 set bullet font follow text <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache poi xddf usermodel text x d d f text run r0 <NEXT> $ r2 = specialinvoke r3 get or create property <NEXT> $ r2 set bold r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r5 = org apache poi xddf usermodel text x d d f text run r0 <NEXT> $ r4 = specialinvoke r5 get or create property <NEXT> $ r4 set baseline null <NEXT> goto label2 <NEXT> label return <NEXT> if r1 ! = null goto label1 <NEXT> label r6 = org apache poi xddf usermodel text x d d f text run r0 <NEXT> $ r2 = specialinvoke r6 get or create property <NEXT> $ d0 = r1 double value <NEXT> $ d1 = $ d0 * 1000 0 <NEXT> $ i0 = int $ d1 <NEXT> $ r3 = java lang integer value of $ i0 <NEXT> $ r2 set baseline $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ r3 = null <NEXT> goto label2 <NEXT> label r4 = org apache poi xddf usermodel text x d d f text run r0 <NEXT> r4 set baseline $ r3 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label $ d0 = r1 double value <NEXT> $ d1 = java lang math ab $ d0 <NEXT> $ r3 = java lang double value of $ d1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache poi xdgf usermodel x d g f connection r0 <NEXT> $ r1 = r4 _connect <NEXT> $ z0 = $ r1 be set to part <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache poi xdgf usermodel x d g f connection r0 <NEXT> $ r2 = r5 _connect <NEXT> $ i0 = $ r2 get to part <NEXT> $ r3 = java lang integer value of $ i0 <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> r2 = org apache poi xslf extractor x s l f power point extractor r0 <NEXT> $ z3 = r2 comment by default <NEXT> r3 = org apache poi xslf extractor x s l f power point extractor r0 <NEXT> $ z2 = r3 master by default <NEXT> r4 = org apache poi xslf extractor x s l f power point extractor r0 <NEXT> $ r1 = r4 get text z0 z1 $ z3 $ z2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if z0 == 0 goto label1 <NEXT> $ r4 = org apache poi openxml4j opc package access read <NEXT> goto label2 <NEXT> label r1 = org apache poi openxml4j opc o p c package open r0 $ r4 <NEXT> $ r2 = org apache poi xslf usermodel x s l f slide show factory create slide show r1 <NEXT> return $ r2 <NEXT> if z0 == 0 goto label1 <NEXT> label $ r4 = org apache poi openxml4j opc package access read_write <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi xslf usermodel x s l f text run r0 <NEXT> $ r1 = r2 _r <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache poi xslf usermodel x s l f theme r0 <NEXT> $ r2 = r3 _theme <NEXT> $ r2 set name r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache poi xslf usermodel x s l f theme r0 <NEXT> $ r2 = r5 _scheme color <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org openxmlformats schemas drawingml x2006 main c t color $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r16 = org apache poi xssf eventusermodel x s s f b reader r0 <NEXT> $ r6 = r16 workbook part <NEXT> r1 = $ r6 get input stream <NEXT> r12 = null <NEXT> label r15 = new org apache poi xssf eventusermodel x s s f b reader $ path extractor <NEXT> specialinvoke r15 < init > r1 <NEXT> r15 parse <NEXT> r2 = r15 get path <NEXT> label if r1 == null goto label04 <NEXT> goto label03 <NEXT> label r1 close <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r75 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> $ r18 = r75 map <NEXT> r3 = $ r18 get relate single x m l cell <NEXT> r76 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> $ r19 = r76 map <NEXT> r4 = $ r19 get related table <NEXT> r77 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> $ r20 = r77 map <NEXT> $ r21 = $ r20 get ct map <NEXT> r5 = $ r21 get root element <NEXT> r6 = org apache poi ooxml util document helper create document <NEXT> r78 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> $ z1 = specialinvoke r78 be namespace declare <NEXT> if $ z1 == 0 goto label01 <NEXT> r79 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> $ r51 = specialinvoke r79 get namespace <NEXT> r52 = r6 create element n s $ r51 r5 <NEXT> goto label02 <NEXT> label r6 append child r52 <NEXT> r70 = new java util vector <NEXT> specialinvoke r70 < init > <NEXT> r71 = new java util hash map <NEXT> specialinvoke r71 < init > <NEXT> r72 = new java util hash map <NEXT> specialinvoke r72 < init > <NEXT> r53 = r3 iterator <NEXT> label $ z9 = r53 have next <NEXT> if $ z9 == 0 goto label04 <NEXT> $ r47 = r53 next <NEXT> r54 = org apache poi xssf usermodel helper x s s f single xml cell $ r47 <NEXT> $ r48 = r54 get xpath <NEXT> r70 add $ r48 <NEXT> $ r49 = r54 get xpath <NEXT> r71 put $ r49 r54 <NEXT> goto label03 <NEXT> if $ z9 == 0 goto label04 <NEXT> label r55 = r4 iterator <NEXT> label $ z2 = r55 have next <NEXT> if $ z2 == 0 goto label06 <NEXT> $ r45 = r55 next <NEXT> r56 = org apache poi xssf usermodel x s s f table $ r45 <NEXT> r57 = r56 get common xpath <NEXT> r70 add r57 <NEXT> r72 put r57 r56 <NEXT> goto label05 <NEXT> if $ z2 == 0 goto label06 <NEXT> label r80 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> $ r26 = r80 index map <NEXT> $ r26 clear <NEXT> r70 sort r0 <NEXT> r81 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> $ r27 = r81 index map <NEXT> $ r27 clear <NEXT> r58 = r70 iterator <NEXT> label $ z3 = r58 have next <NEXT> if $ z3 == 0 goto label14 <NEXT> $ r30 = r58 next <NEXT> r59 = java lang string $ r30 <NEXT> $ r31 = r71 get r59 <NEXT> r60 = org apache poi xssf usermodel helper x s s f single xml cell $ r31 <NEXT> $ r32 = r72 get r59 <NEXT> r61 = org apache poi xssf usermodel x s s f table $ r32 <NEXT> $ z4 = r59 match \ `` * \\ [ * \ `` <NEXT> if $ z4 ! = 0 goto label13 <NEXT> if r60 == null goto label08 <NEXT> r62 = r60 get reference cell <NEXT> if r62 == null goto label08 <NEXT> $ r39 = r6 get first child <NEXT> r82 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> r63 = specialinvoke r82 get node by x path r59 $ r39 r6 0 <NEXT> r83 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> specialinvoke r83 map cell on node r62 r63 <NEXT> $ r40 = \ `` \ `` <NEXT> $ r41 = r63 get text content <NEXT> $ z6 = $ r40 equal $ r41 <NEXT> if $ z6 == 0 goto label08 <NEXT> $ r42 = r63 get parent node <NEXT> if $ r42 == null goto label08 <NEXT> $ r43 = r63 get parent node <NEXT> $ r43 remove child r63 <NEXT> label if r61 == null goto label13 <NEXT> r64 = r61 get columns <NEXT> r65 = r61 get x s s f sheet <NEXT> $ r33 = r61 get start cell reference <NEXT> $ i3 = $ r33 get row <NEXT> $ i4 = r61 get header row count <NEXT> i0 = $ i3 + $ i4 <NEXT> $ r34 = r61 get end cell reference <NEXT> i1 = $ r34 get row <NEXT> i7 = i0 <NEXT> label if i7 > i1 goto label13 <NEXT> r10 = r65 get row i7 <NEXT> $ r35 = r61 get common xpath <NEXT> $ r36 = r6 get first child <NEXT> r84 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> r11 = specialinvoke r84 get node by x path $ r35 $ r36 r6 1 <NEXT> $ r37 = r61 get start cell reference <NEXT> s2 = $ r37 get col <NEXT> r12 = r64 iterator <NEXT> label $ z5 = r12 have next <NEXT> if $ z5 == 0 goto label12 <NEXT> $ r38 = r12 next <NEXT> r13 = org apache poi xssf usermodel x s s f table column $ r38 <NEXT> $ i5 = r13 get column index <NEXT> $ i6 = s2 + $ i5 <NEXT> r14 = r10 get cell $ i6 <NEXT> if r14 == null goto label11 <NEXT> r15 = r13 get xml column pr <NEXT> if r15 == null goto label11 <NEXT> r16 = r15 get local x path <NEXT> r85 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> r17 = specialinvoke r85 get node by x path r16 r11 r6 0 <NEXT> r86 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> specialinvoke r86 map cell on node r14 r17 <NEXT> label goto label10 <NEXT> if $ z5 == 0 goto label12 <NEXT> label i7 = i7 + 1 <NEXT> goto label09 <NEXT> label if i7 > i1 goto label13 <NEXT> label goto label07 <NEXT> if $ z3 == 0 goto label14 <NEXT> label z10 = 1 <NEXT> if z0 == 0 goto label15 <NEXT> r87 = org apache poi xssf extractor x s s f export to xml r0 <NEXT> z10 = specialinvoke r87 be valid r6 <NEXT> label if z10 == 0 goto label16 <NEXT> r66 = javax xml transform transformer factory new instance <NEXT> r67 = r66 new transformer <NEXT> r67 set output property \ `` omit-xml-declaration\ <NEXT> r67 set output property \ `` indent\ <NEXT> r67 set output property \ `` encoding\ <NEXT> r73 = new javax xml transform stream stream result <NEXT> specialinvoke r73 < init > r1 <NEXT> r74 = new javax xml transform dom d o m source <NEXT> specialinvoke r74 < init > r6 <NEXT> r67 transform r74 r73 <NEXT> label return <NEXT> if $ z1 == 0 goto label01 <NEXT> label r52 = r6 create element n s \ `` \ <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi xssf model comment table r0 <NEXT> $ r1 = r2 comment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi xssf stream auto size column tracker r0 <NEXT> r2 track all columns = 1 <NEXT> r3 = org apache poi xssf stream auto size column tracker r0 <NEXT> $ r1 = r3 untracked columns <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi xssf stream auto size column tracker r0 <NEXT> r3 track all columns = 0 <NEXT> r4 = org apache poi xssf stream auto size column tracker r0 <NEXT> $ r1 = r4 max column width <NEXT> $ r1 clear <NEXT> r5 = org apache poi xssf stream auto size column tracker r0 <NEXT> $ r2 = r5 untracked columns <NEXT> $ r2 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r3 = r2 next <NEXT> $ r4 = java lang integer $ r3 <NEXT> i0 = $ r4 int value <NEXT> r5 = org apache poi xssf stream auto size column tracker r0 <NEXT> r5 track column i0 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi xssf stream s x s s f picture r0 <NEXT> $ r1 = r3 _picture <NEXT> $ r2 = $ r1 get c t picture <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache poi xssf stream s x s s f sheet r0 <NEXT> $ r1 = r7 _writer <NEXT> $ i0 = $ r1 get number of flushed row <NEXT> if $ i0 < = 0 goto label1 <NEXT> r8 = org apache poi xssf stream s x s s f sheet r0 <NEXT> $ r6 = r8 _writer <NEXT> $ i2 = $ r6 get low index of flush row <NEXT> return $ i2 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label r9 = org apache poi xssf stream s x s s f sheet r0 <NEXT> $ r2 = r9 _rows <NEXT> $ i1 = $ r2 size <NEXT> if $ i1 ! = 0 goto label2 <NEXT> $ i3 = 0 <NEXT> goto label3 <NEXT> label return $ i3 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> label r10 = org apache poi xssf stream s x s s f sheet r0 <NEXT> $ r3 = r10 _rows <NEXT> $ r4 = $ r3 first key <NEXT> $ r5 = java lang integer $ r4 <NEXT> $ i3 = $ r5 int value <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache poi xssf stream s x s s f sheet r0 <NEXT> $ r1 = r2 _sh <NEXT> $ f0 = $ r1 get column width in pixel i0 <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org apache poi xssf stream s x s s f sheet r0 <NEXT> $ r1 = specialinvoke r2 safe get protection field <NEXT> $ r1 set auto filter z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache poi xssf stream s x s s f workbook r0 <NEXT> r1 _compress tmp file = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi xssf usermodel extension x s s f cell border r0 <NEXT> r2 _theme = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ l1 = l0 + 1l <NEXT> r2 = org apache poi xssf usermodel helper column helper r0 <NEXT> $ z0 = specialinvoke r2 column exists1 base r1 $ l1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return 0 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = r0 get name <NEXT> org apache poi xssf usermodel x s s f builtin table style value of $ r2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache poi xssf usermodel x s s f chart r0 <NEXT> $ r3 = r7 chart <NEXT> $ z0 = $ r3 be set title <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r8 = org apache poi xssf usermodel x s s f chart r0 <NEXT> $ r4 = r8 chart <NEXT> r1 = $ r4 get title <NEXT> $ z1 = r1 be set tx <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r2 = r1 get tx <NEXT> $ z2 = r2 be set str ref <NEXT> if $ z2 ! = 0 goto label3 <NEXT> label $ r5 = r2 get str ref <NEXT> $ r6 = $ r5 get f <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi xssf usermodel x s s f color r0 <NEXT> $ r1 = r2 ct color <NEXT> $ l0 = $ r1 get theme <NEXT> $ i1 = int $ l0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache poi xssf usermodel x s s f graphic frame r0 <NEXT> $ r1 = r4 graphic frame <NEXT> $ r2 = $ r1 get nv graphic frame pr <NEXT> $ r3 = $ r2 get c nv pr <NEXT> $ l0 = $ r3 get id <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi xssf usermodel x s s f hyperlink r0 <NEXT> $ r2 = r3 _type <NEXT> $ r1 = org apache poi common usermodel hyperlink type document <NEXT> if $ r2 == $ r1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r2 == $ r1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi xssf usermodel x s s f hyperlink r0 <NEXT> $ r1 = r3 _ct hyperlink <NEXT> $ r2 = $ r1 get location <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang illegal state exception <NEXT> specialinvoke $ r2 < init > \ `` you can not change text of a line break it be always \'\\n\'\ `` <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache poi xssf usermodel x s s f name r0 <NEXT> $ r2 = r3 _ct name <NEXT> $ r2 set comment r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache poi xssf usermodel x s s f picture r0 <NEXT> $ r2 = r6 ct picture <NEXT> $ r3 = $ r2 get blip fill <NEXT> $ r4 = $ r3 get blip <NEXT> $ r5 = r1 get id <NEXT> $ r4 set embed $ r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r17 = org apache poi xssf usermodel x s s f pivot table r0 <NEXT> specialinvoke r17 check column index i0 <NEXT> r18 = org apache poi xssf usermodel x s s f pivot table r0 <NEXT> r1 = r18 get pivot area <NEXT> $ r5 = r1 get last cell <NEXT> $ i2 = $ r5 get row <NEXT> $ r6 = r1 get first cell <NEXT> $ i3 = $ r6 get row <NEXT> i1 = $ i2 - $ i3 <NEXT> r19 = org apache poi xssf usermodel x s s f pivot table r0 <NEXT> $ r7 = r19 pivot table definition <NEXT> r2 = $ r7 get pivot field <NEXT> r3 = org openxmlformats schemas spreadsheetml x2006 main c t pivot field $ factory new instance <NEXT> r4 = r3 add new item <NEXT> $ r8 = org openxmlformats schemas spreadsheetml x2006 main s t axis axis_row <NEXT> r3 set axis $ r8 <NEXT> r3 set show all 0 <NEXT> i8 = 0 <NEXT> label if i8 > i1 goto label2 <NEXT> $ r14 = r4 add new item <NEXT> $ r15 = org openxmlformats schemas spreadsheetml x2006 main s t item type default <NEXT> $ r14 set t $ r15 <NEXT> i8 = i8 + 1 <NEXT> goto label1 <NEXT> label if i8 > i1 goto label2 <NEXT> label $ i4 = r4 size of item array <NEXT> $ l5 = long $ i4 <NEXT> r4 set count $ l5 <NEXT> r2 set pivot field array i0 r3 <NEXT> r20 = org apache poi xssf usermodel x s s f pivot table r0 <NEXT> $ r9 = r20 pivot table definition <NEXT> $ r10 = $ r9 get row field <NEXT> if $ r10 == null goto label3 <NEXT> r21 = org apache poi xssf usermodel x s s f pivot table r0 <NEXT> $ r13 = r21 pivot table definition <NEXT> r16 = $ r13 get row field <NEXT> goto label4 <NEXT> label $ r12 = r16 add new field <NEXT> $ r12 set x i0 <NEXT> $ i6 = r16 size of field array <NEXT> $ l7 = long $ i6 <NEXT> r16 set count $ l7 <NEXT> return <NEXT> if $ r10 == null goto label3 <NEXT> label r22 = org apache poi xssf usermodel x s s f pivot table r0 <NEXT> $ r11 = r22 pivot table definition <NEXT> r16 = $ r11 add new row field <END>
<BEG> r0 = @ this <NEXT> r6 = org apache poi xssf usermodel x s s f print setup r0 <NEXT> $ r1 = r6 page setup <NEXT> $ r2 = $ r1 get page order <NEXT> if $ r2 ! = null goto label1 <NEXT> $ r5 = null <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r7 = org apache poi xssf usermodel x s s f print setup r0 <NEXT> $ r3 = r7 page setup <NEXT> $ r4 = $ r3 get page order <NEXT> $ i0 = $ r4 int value <NEXT> $ r5 = org apache poi s usermodel page order value of $ i0 <END>
<BEG> $ r9 = org apache poi xssf usermodel x s s f shape group prototype <NEXT> if $ r9 ! = null goto label1 <NEXT> r0 = org openxmlformats schemas drawingml x2006 spreadsheet draw c t group shape $ factory new instance <NEXT> r1 = r0 add new nv grp sp pr <NEXT> r2 = r1 add new c nv pr <NEXT> r2 set id 0l <NEXT> r2 set name \ `` group 0\ `` <NEXT> r1 add new c nv grp sp pr <NEXT> r3 = r0 add new grp sp pr <NEXT> r4 = r3 add new xfrm <NEXT> r5 = r4 add new ext <NEXT> r5 set cx 0l <NEXT> r5 set cy 0l <NEXT> r6 = r4 add new off <NEXT> r6 set x 0l <NEXT> r6 set y 0l <NEXT> r7 = r4 add new ch ext <NEXT> r7 set cx 0l <NEXT> r7 set cy 0l <NEXT> r8 = r4 add new ch off <NEXT> r8 set x 0l <NEXT> r8 set y 0l <NEXT> org apache poi xssf usermodel x s s f shape group prototype = r0 <NEXT> label $ r10 = org apache poi xssf usermodel x s s f shape group prototype <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi xssf usermodel x s s f text run r0 <NEXT> r2 set font family r1 -1 -1 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache poi xwpf extractor x w p f word extractor r0 <NEXT> r1 concatenate phonetic run = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 1 goto label1 <NEXT> r6 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r4 = r6 first page footer <NEXT> if $ r4 == null goto label1 <NEXT> r7 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r5 = r7 first page footer <NEXT> return $ r5 <NEXT> if $ r4 == null goto label1 <NEXT> label $ i1 = i0 % 2 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> r8 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r2 = r8 even page footer <NEXT> if $ r2 == null goto label2 <NEXT> r9 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r3 = r9 even page footer <NEXT> return $ r3 <NEXT> if $ r2 == null goto label2 <NEXT> label r10 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r1 = r10 default footer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 1 goto label1 <NEXT> r6 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r4 = r6 first page footer <NEXT> if $ r4 == null goto label1 <NEXT> r7 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r5 = r7 first page footer <NEXT> return $ r5 <NEXT> if $ r4 == null goto label1 <NEXT> label $ i1 = i0 % 2 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> r8 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r2 = r8 even page footer <NEXT> if $ r2 == null goto label2 <NEXT> r9 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r3 = r9 even page footer <NEXT> return $ r3 <NEXT> if $ r2 == null goto label2 <NEXT> label r10 = org apache poi xwpf model x w p f header footer policy r0 <NEXT> $ r1 = r10 default footer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> l2 = @ parameter2 <NEXT> l3 = @ parameter3 <NEXT> r1 = org apache poi xwpf usermodel x w p f chart r0 <NEXT> r1 set chart bottom margin l2 <NEXT> r2 = org apache poi xwpf usermodel x w p f chart r0 <NEXT> r2 set chart right margin l1 <NEXT> r3 = org apache poi xwpf usermodel x w p f chart r0 <NEXT> r3 set chart leave margin l3 <NEXT> r4 = org apache poi xwpf usermodel x w p f chart r0 <NEXT> r4 set chart right margin l1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi xwpf usermodel x w p f document r0 <NEXT> r3 = org apache poi xwpf usermodel i body element r1 <NEXT> $ i0 = specialinvoke r2 get po of body element r3 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r8 = new org apache poi xwpf usermodel x w p f table <NEXT> r9 = org apache poi xwpf usermodel x w p f document r0 <NEXT> $ r3 = r9 ct document <NEXT> $ r4 = $ r3 get body <NEXT> $ r5 = $ r4 add new tbl <NEXT> specialinvoke r8 < init > $ r5 r0 i0 i1 <NEXT> r10 = org apache poi xwpf usermodel x w p f document r0 <NEXT> $ r6 = r10 body element <NEXT> $ r6 add r8 <NEXT> r11 = org apache poi xwpf usermodel x w p f document r0 <NEXT> $ r7 = r11 table <NEXT> $ r7 add r8 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ r4 = org apache poi xwpf usermodel x w p f relation chart <NEXT> r13 = org apache poi xwpf usermodel x w p f document r0 <NEXT> $ r3 = r13 chart <NEXT> $ i3 = $ r3 size <NEXT> $ i4 = $ i3 + 1 <NEXT> r14 = org apache poi xwpf usermodel x w p f document r0 <NEXT> r15 = org apache poi ooxml p o i x m l relation $ r4 <NEXT> i2 = r14 get next part number r15 $ i4 <NEXT> $ r5 = org apache poi xwpf usermodel x w p f relation chart <NEXT> $ r6 = org apache poi xwpf usermodel x w p f factory get instance <NEXT> r16 = org apache poi xwpf usermodel x w p f document r0 <NEXT> r17 = org apache poi ooxml p o i x m l relation $ r5 <NEXT> r18 = org apache poi ooxml p o i x m l factory $ r6 <NEXT> r1 = r16 create relationship r17 r18 i2 0 <NEXT> $ r7 = r1 get document part <NEXT> r2 = org apache poi xwpf usermodel x w p f chart $ r7 <NEXT> r2 set chart index i2 <NEXT> $ r8 = r1 get relationship <NEXT> $ r9 = $ r8 get id <NEXT> r19 = org apache poi xwpf usermodel x w p f document r0 <NEXT> $ r10 = r19 create paragraph <NEXT> $ r11 = $ r10 create run <NEXT> r2 attach $ r9 $ r11 <NEXT> $ l6 = long i0 <NEXT> $ l5 = long i1 <NEXT> r2 set chart bound box $ l6 $ l5 <NEXT> r20 = org apache poi xwpf usermodel x w p f document r0 <NEXT> $ r12 = r20 chart <NEXT> $ r12 add r2 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache poi xwpf usermodel x w p f endnotes r0 <NEXT> $ r1 = r2 get footnote by id i0 <NEXT> r3 = org apache poi xwpf usermodel x w p f abstract footnote endnote $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi xwpf usermodel x w p f header footer r0 <NEXT> $ r1 = r3 document <NEXT> $ r2 = $ r1 get all package picture <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache poi xwpf usermodel x w p f header footer r0 <NEXT> $ r2 = r6 header footer <NEXT> r1 = $ r2 new cursor <NEXT> r1 remove xml content <NEXT> r1 dispose <NEXT> r7 = org apache poi xwpf usermodel x w p f header footer r0 <NEXT> $ r3 = r7 paragraph <NEXT> $ r3 clear <NEXT> r8 = org apache poi xwpf usermodel x w p f header footer r0 <NEXT> $ r4 = r8 table <NEXT> $ r4 clear <NEXT> r9 = org apache poi xwpf usermodel x w p f header footer r0 <NEXT> $ r5 = r9 body element <NEXT> $ r5 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi xwpf usermodel x w p f hyperlink run r0 <NEXT> $ r1 = r3 hyperlink <NEXT> $ r2 = $ r1 get id <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache poi xwpf usermodel x w p f number r0 <NEXT> $ r4 = r8 nums <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = org apache poi xwpf usermodel x w p f num $ r5 <NEXT> $ r6 = r3 get c t num <NEXT> $ r7 = $ r6 get num id <NEXT> $ z1 = $ r7 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache poi xwpf usermodel x w p f style r0 <NEXT> $ r1 = r6 ct style <NEXT> $ r2 = $ r1 get link <NEXT> if $ r2 == null goto label1 <NEXT> r7 = org apache poi xwpf usermodel x w p f style r0 <NEXT> $ r3 = r7 ct style <NEXT> $ r4 = $ r3 get link <NEXT> $ r5 = $ r4 get val <NEXT> return $ r5 <NEXT> if $ r2 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache poi xwpf usermodel x w p f table cell r0 <NEXT> r2 = r6 get tc pr <NEXT> $ z0 = r2 be set shd <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = r2 get shd <NEXT> goto label2 <NEXT> label $ r5 set color \ `` auto\ `` <NEXT> $ r4 = org openxmlformats schemas wordprocessingml x2006 main s t shd clear <NEXT> $ r5 set val $ r4 <NEXT> $ r5 set fill r1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r5 = r2 add new shd <END>
<BEG> r0 = @ this <NEXT> r5 = org apache poi xwpf usermodel x w p f table cell r0 <NEXT> $ r1 = r5 ct tc <NEXT> $ z0 = $ r1 be set tc pr <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache poi xwpf usermodel x w p f table cell r0 <NEXT> $ r3 = r6 ct tc <NEXT> $ r4 = $ r3 get tc pr <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache poi xwpf usermodel x w p f table cell r0 <NEXT> $ r2 = r7 ct tc <NEXT> $ r4 = $ r2 add new tc pr <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi hdgf h d g f diagram r0 <NEXT> $ r1 = r3 trailer <NEXT> $ r2 = $ r1 get point to stream <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return 18 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hmef attachment r0 <NEXT> $ r1 = r2 attribute <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hsmf datatypes m a p i property attach_extension <NEXT> r3 = org apache poi hmef attachment r0 <NEXT> $ r2 = specialinvoke r3 get string $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hmef attribute m a p i rtf attribute r0 <NEXT> $ r1 = r2 decompress <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi sl usermodel placeholder slide_number <NEXT> r2 = org apache poi hslf model header footer r0 <NEXT> $ z0 = specialinvoke r2 be visible 8 $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r4 = org apache poi hslf model textproperties bite mask text prop r0 <NEXT> $ r1 = r4 sub prop match <NEXT> $ r1 [ i0 ] = 1 <NEXT> i4 = specialinvoke r0 get value <NEXT> if z0 == 0 goto label1 <NEXT> r5 = org apache poi hslf model textproperties bite mask text prop r0 <NEXT> $ r3 = r5 sub prop mask <NEXT> $ i3 = $ r3 [ i0 ] <NEXT> i5 = i4 | $ i3 <NEXT> goto label2 <NEXT> label specialinvoke r0 set value i5 <NEXT> return <NEXT> if z0 == 0 goto label1 <NEXT> label r6 = org apache poi hslf model textproperties bite mask text prop r0 <NEXT> $ r2 = r6 sub prop mask <NEXT> $ i1 = $ r2 [ i0 ] <NEXT> $ i2 = $ i1 ^ -1 <NEXT> i5 = i4 & $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hslf record binary tag data blob r0 <NEXT> $ l0 = r1 _type <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hslf record color scheme atom r0 <NEXT> r1 accent and hyperlink colour r g b = i0 <NEXT> return <END>
<BEG> b0 = @ parameter0 <NEXT> b1 = @ parameter1 <NEXT> b2 = @ parameter2 <NEXT> $ r0 = newarray byte [ 3 ] <NEXT> $ r0 [ 0 ] = b0 <NEXT> $ r0 [ 1 ] = b1 <NEXT> $ r0 [ 2 ] = b2 <NEXT> $ i3 = org apache poi hslf record color scheme atom join r g b $ r0 <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hslf record comment2000 r0 <NEXT> $ r1 = r2 comment atom <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache poi hslf record comment2000 r0 <NEXT> $ r2 = r3 comment record <NEXT> $ r2 set text r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache poi hslf record comment2000 atom r0 <NEXT> $ r2 = r3 _data <NEXT> org apache poi hslf util system time utils store date r1 $ r2 4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hslf record document atom r0 <NEXT> $ b0 = r1 omit title place <NEXT> if $ b0 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b0 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hslf record document atom r0 <NEXT> $ b0 = r1 show comment <NEXT> if $ b0 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b0 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hslf record record type ex avi movie <NEXT> $ s0 = $ r1 type i d <NEXT> $ l1 = long $ s0 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hslf record ex embed atom r0 <NEXT> $ r1 = r2 _data <NEXT> $ b0 = $ r1 [ 5 ] <NEXT> if $ b0 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b0 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache poi hslf record ex hyperlink r0 <NEXT> $ r1 = r4 link detail a <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = null <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r5 = org apache poi hslf record ex hyperlink r0 <NEXT> $ r2 = r5 link detail a <NEXT> $ r3 = $ r2 get text <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hslf record ex medium atom r0 <NEXT> $ r1 = r2 _recdata <NEXT> $ i0 = org apache poi util little endian get int $ r1 0 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hslf record ex obj list r0 <NEXT> $ r1 = r2 ex obj list atom <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache poi hslf record ex ole obj atom r0 <NEXT> $ r1 = r2 _data <NEXT> org apache poi util little endian put int $ r1 4 i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache poi hslf record font entity atom r0 <NEXT> $ r1 = r2 _recdata <NEXT> $ b1 = byte i0 <NEXT> $ r1 [ 66 ] = $ b1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ l0 = org apache poi hslf record note atom _type <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> r1 = org apache poi hslf record o e placeholder atom r0 <NEXT> r1 placeholder id = b0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hslf record outline text ref atom r0 <NEXT> $ i0 = r1 _index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hslf record persist ptr holder r0 <NEXT> $ l0 = r1 _type <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hslf record p p draw r0 <NEXT> $ r1 = r2 child record <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = null <NEXT> r10 = new java util array list <NEXT> specialinvoke r10 < init > <NEXT> r11 = org apache poi hslf record record container r0 <NEXT> r3 = r11 _children <NEXT> i0 = lengthof r3 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label4 <NEXT> r4 = r3 [ i2 ] <NEXT> if r4 == r1 goto label2 <NEXT> r10 add r4 <NEXT> goto label3 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> if r4 == r1 goto label2 <NEXT> label r9 = r4 <NEXT> label if i2 > = i0 goto label4 <NEXT> label $ i1 = r10 size <NEXT> $ r6 = newarray org apache poi hslf record record [ $ i1 ] <NEXT> $ r7 = r10 to array $ r6 <NEXT> $ r8 = org apache poi hslf record record [ ] $ r7 <NEXT> r12 = org apache poi hslf record record container r0 <NEXT> r12 _children = $ r8 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hslf record slide list with text r0 <NEXT> $ r1 = r2 slide atom set <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hslf record style text prop atom r0 <NEXT> $ r1 = r2 char style <NEXT> r3 = org apache poi hslf record style text prop atom r0 <NEXT> $ i0 = specialinvoke r3 get character cover $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache poi hslf usermodel h s l f fill r0 <NEXT> $ r4 = r8 shape <NEXT> r2 = $ r4 get escher opt record <NEXT> if r1 ! = null goto label1 <NEXT> $ i4 = 0 <NEXT> goto label2 <NEXT> label org apache poi hslf usermodel h s l f shape set escher property r2 16774 $ i4 <NEXT> if r1 == null goto label3 <NEXT> r9 = org apache poi hslf usermodel h s l f fill r0 <NEXT> $ r5 = r9 shape <NEXT> $ r6 = $ r5 get sheet <NEXT> if $ r6 == null goto label3 <NEXT> $ i1 = r1 get index <NEXT> r10 = org apache poi hslf usermodel h s l f fill r0 <NEXT> r3 = r10 get escher b s e record $ i1 <NEXT> if r3 == null goto label3 <NEXT> $ i2 = r3 get ref <NEXT> $ i3 = $ i2 + 1 <NEXT> r3 set ref $ i3 <NEXT> label return <NEXT> if r1 ! = null goto label1 <NEXT> label $ i4 = r1 get index <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache poi hslf usermodel h s l f group shape r0 <NEXT> $ r3 = r5 get sp container <NEXT> $ r4 = r1 get sp container <NEXT> r6 = org apache poi ddf escher record $ r4 <NEXT> $ r3 add child record r6 <NEXT> r7 = org apache poi hslf usermodel h s l f group shape r0 <NEXT> r2 = r7 get sheet <NEXT> r1 set sheet r2 <NEXT> $ i0 = r2 allocate shape id <NEXT> r1 set shape id $ i0 <NEXT> r1 after insert r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache poi hslf usermodel h s l f group shape r0 <NEXT> r2 = r10 get anchor <NEXT> $ d6 = r2 get width <NEXT> $ b0 = $ d6 cmpl 0 0 <NEXT> if $ b0 ! = 0 goto label1 <NEXT> $ d24 = 0 0 <NEXT> goto label2 <NEXT> label d0 = $ d24 <NEXT> $ d9 = r2 get height <NEXT> $ b1 = $ d9 cmpl 0 0 <NEXT> if $ b1 ! = 0 goto label3 <NEXT> $ d25 = 0 0 <NEXT> goto label4 <NEXT> label d1 = $ d25 <NEXT> r11 = org apache poi hslf usermodel h s l f group shape r0 <NEXT> r11 set exterior anchor r1 <NEXT> r12 = org apache poi hslf usermodel h s l f group shape r0 <NEXT> $ r6 = r12 get shape <NEXT> r3 = $ r6 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r7 = r3 next <NEXT> r4 = org apache poi hslf usermodel h s l f shape $ r7 <NEXT> r5 = r4 get anchor <NEXT> $ d12 = r1 get x <NEXT> $ d13 = r5 get x <NEXT> $ d14 = r2 get x <NEXT> $ d15 = $ d13 - $ d14 <NEXT> $ d16 = $ d15 * d0 <NEXT> d2 = $ d12 + $ d16 <NEXT> $ d17 = r1 get y <NEXT> $ d18 = r5 get y <NEXT> $ d19 = r2 get y <NEXT> $ d20 = $ d18 - $ d19 <NEXT> $ d21 = $ d20 * d1 <NEXT> d3 = $ d17 + $ d21 <NEXT> $ d22 = r5 get width <NEXT> d4 = $ d22 * d0 <NEXT> $ d23 = r5 get height <NEXT> d5 = $ d23 * d1 <NEXT> r9 = new java awt geom rectangle2 d $ double <NEXT> specialinvoke r9 < init > d2 d3 d4 d5 <NEXT> r4 set anchor r9 <NEXT> goto label5 <NEXT> if $ z0 == 0 goto label6 <NEXT> label return <NEXT> if $ b1 ! = 0 goto label3 <NEXT> label $ d10 = r1 get height <NEXT> $ d11 = r2 get height <NEXT> $ d25 = $ d10 $ d11 <NEXT> if $ b0 ! = 0 goto label1 <NEXT> label $ d7 = r1 get width <NEXT> $ d8 = r2 get width <NEXT> $ d24 = $ d7 $ d8 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi hslf usermodel h s l f object shape r0 <NEXT> r1 = r3 get ex embed <NEXT> if r1 ! = null goto label1 <NEXT> $ r2 = null <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = r1 get menu name <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r6 = org apache poi hslf usermodel h s l f shape r0 <NEXT> $ r1 = r6 _escher container <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = new org apache poi ddf escher container record <NEXT> specialinvoke r5 < init > <NEXT> r7 = org apache poi hslf usermodel h s l f shape r0 <NEXT> r7 _escher container = r5 <NEXT> r8 = org apache poi hslf usermodel h s l f shape r0 <NEXT> $ r4 = r8 _escher container <NEXT> $ r4 set option 15 <NEXT> label r9 = org apache poi hslf usermodel h s l f shape r0 <NEXT> $ r2 = r9 _escher container <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi hslf usermodel h s l f shape r0 <NEXT> r2 _sheet = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r6 = org apache poi hslf usermodel h s l f shape r0 <NEXT> $ r1 = r6 get escher child -4079 <NEXT> r4 = org apache poi hslf record h s l f escher client data record $ r1 <NEXT> if r4 ! = null goto label1 <NEXT> if z0 == 0 goto label1 <NEXT> r5 = new org apache poi hslf record h s l f escher client data record <NEXT> specialinvoke r5 < init > <NEXT> r4 = r5 <NEXT> r5 set option 15 <NEXT> r5 set record id -4079 <NEXT> r7 = org apache poi hslf usermodel h s l f shape r0 <NEXT> $ r3 = r7 get sp container <NEXT> r8 = org apache poi ddf escher record r5 <NEXT> $ r3 add child before r8 -4083 <NEXT> label return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi hslf usermodel h s l f sheet r0 <NEXT> $ r1 = r3 _container <NEXT> $ r2 = $ r1 get p p draw <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache poi hslf usermodel h s l f sheet r0 <NEXT> $ r5 = r9 _slide show <NEXT> if $ r5 == null goto label1 <NEXT> r8 = new org apache poi hslf exception h s l f exception <NEXT> specialinvoke r8 < init > \ `` can\'t change exist slideshow reference\ `` <NEXT> r10 = java lang throwable r8 <NEXT> throw r10 <NEXT> if $ r5 == null goto label1 <NEXT> label r11 = org apache poi hslf usermodel h s l f sheet r0 <NEXT> r11 _slide show = r1 <NEXT> r12 = org apache poi hslf usermodel h s l f sheet r0 <NEXT> r2 = r12 get text paragraph <NEXT> if r2 ! = null goto label2 <NEXT> return <NEXT> if r2 ! = null goto label2 <NEXT> label r3 = r2 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r6 = r3 next <NEXT> r4 = java util list $ r6 <NEXT> r13 = org apache poi hslf usermodel h s l f sheet r0 <NEXT> org apache poi hslf usermodel h s l f text paragraph supply sheet r4 r13 <NEXT> org apache poi hslf usermodel h s l f text paragraph apply hyperlink r4 <NEXT> goto label3 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hslf usermodel h s l f slide show impl r0 <NEXT> $ r1 = r2 _docstream <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org apache poi hslf util system time utils store date r0 r1 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache poi hsmf m a p i message r0 <NEXT> $ r2 = r5 main chunk <NEXT> $ r3 = $ r2 get message header <NEXT> r6 = org apache poi hsmf m a p i message r0 <NEXT> r1 = r6 get string from chunk $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label $ r4 = r1 split \ `` \\r ? \\n\ `` <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache poi hsmf m a p i message r0 <NEXT> $ r1 = r4 main chunk <NEXT> $ r2 = $ r1 get conversation topic <NEXT> r5 = org apache poi hsmf m a p i message r0 <NEXT> $ r3 = r5 get string from chunk $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r21 = org apache poi hsmf m a p i message r0 <NEXT> $ r2 = r21 main chunk <NEXT> $ r3 = $ r2 get message class <NEXT> r22 = org apache poi hsmf m a p i message r0 <NEXT> r1 = r22 get string from chunk $ r3 <NEXT> if r1 == null goto label1 <NEXT> $ r5 = r1 trim <NEXT> $ i0 = $ r5 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r4 = org apache poi hsmf m a p i message $ message_class unspecified <NEXT> return $ r4 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = r1 equal ignore case \ `` ipm note\ `` <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r19 = org apache poi hsmf m a p i message $ message_class note <NEXT> return $ r19 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ z1 = r1 equal ignore case \ `` ipm contact\ `` <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r18 = org apache poi hsmf m a p i message $ message_class contact <NEXT> return $ r18 <NEXT> if $ z1 == 0 goto label4 <NEXT> label $ z2 = r1 equal ignore case \ `` ipm appointment\ `` <NEXT> if $ z2 == 0 goto label5 <NEXT> $ r17 = org apache poi hsmf m a p i message $ message_class appointment <NEXT> return $ r17 <NEXT> if $ z2 == 0 goto label5 <NEXT> label $ z3 = r1 equal ignore case \ `` ipm sticky note\ `` <NEXT> if $ z3 == 0 goto label6 <NEXT> $ r16 = org apache poi hsmf m a p i message $ message_class sticky_note <NEXT> return $ r16 <NEXT> if $ z3 == 0 goto label6 <NEXT> label $ z4 = r1 equal ignore case \ `` ipm task\ `` <NEXT> if $ z4 == 0 goto label7 <NEXT> $ r15 = org apache poi hsmf m a p i message $ message_class task <NEXT> return $ r15 <NEXT> if $ z4 == 0 goto label7 <NEXT> label $ z5 = r1 equal ignore case \ `` ipm post\ `` <NEXT> if $ z5 == 0 goto label8 <NEXT> $ r14 = org apache poi hsmf m a p i message $ message_class post <NEXT> return $ r14 <NEXT> if $ z5 == 0 goto label8 <NEXT> label r23 = org apache poi hsmf m a p i message r0 <NEXT> $ r8 = r23 logger <NEXT> $ r6 = newarray java lang object [ 1 ] <NEXT> r20 = new java lang string builder <NEXT> specialinvoke r20 < init > <NEXT> $ r9 = r20 append \ `` i don\'t recognize message class \'\ `` <NEXT> $ r10 = $ r9 append r1 <NEXT> $ r11 = $ r10 append \ `` \ ' please open an issue on poi\ 's bugzilla\ `` <NEXT> $ r12 = $ r11 to string <NEXT> $ r6 [ 0 ] = $ r12 <NEXT> $ r8 log 5 $ r6 <NEXT> $ r13 = org apache poi hsmf m a p i message $ message_class unknown <NEXT> return $ r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache poi hwmf draw hwmf draw property r0 <NEXT> r2 palette = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r5 = org apache poi hwpf model picture table r0 <NEXT> $ z1 = r5 have picture r1 <NEXT> if $ z1 == 0 goto label1 <NEXT> r4 = new org apache poi hwpf usermodel picture <NEXT> $ i0 = r1 get pic offset <NEXT> r6 = org apache poi hwpf model picture table r0 <NEXT> $ r3 = r6 _data stream <NEXT> specialinvoke r4 < init > $ i0 $ r3 z0 <NEXT> return r4 <NEXT> if $ z1 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = null <NEXT> if i0 < 0 goto label1 <NEXT> r4 = org apache poi hwpf model revision mark author table r0 <NEXT> $ r1 = r4 entry <NEXT> $ i1 = lengthof $ r1 <NEXT> if i0 > = $ i1 goto label1 <NEXT> r5 = org apache poi hwpf model revision mark author table r0 <NEXT> $ r2 = r5 entry <NEXT> r3 = $ r2 [ i0 ] <NEXT> label return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache poi hwpf model style sheet r0 <NEXT> $ r1 = r3 _style description <NEXT> $ r2 = $ r1 [ i0 ] <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hwpf model text piece r0 <NEXT> $ i0 = r1 get end <NEXT> r2 = org apache poi hwpf model text piece r0 <NEXT> $ i1 = r2 get start <NEXT> $ i2 = $ i0 - $ i1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hwpf model type b k f abstract type r0 <NEXT> $ s0 = r1 field_2_bkf_flags <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = org apache poi hwpf model type f l d abstract type f result dirty <NEXT> r2 = org apache poi hwpf model type f l d abstract type r0 <NEXT> $ b0 = r2 field_2_flt <NEXT> $ i1 = $ r1 set boolean $ b0 z0 <NEXT> $ b2 = byte $ i1 <NEXT> r3 = org apache poi hwpf model type f l d abstract type r0 <NEXT> r3 field_2_flt = $ b2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hwpf model type s e p abstract type r0 <NEXT> $ b0 = r1 field_9_lnc <NEXT> return $ b0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hwpf model type s e p abstract type r0 <NEXT> r1 field_12_dxa lnn = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hwpf model type s e p abstract type r0 <NEXT> $ i0 = r1 field_18_dm bin other <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hwpf model type s e p abstract type r0 <NEXT> r1 field_27_dxt char space = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hwpf model type s e p abstract type r0 <NEXT> $ s0 = r1 field_36_unused3 <NEXT> return $ s0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hwpf model type s e p abstract type r0 <NEXT> $ i0 = r1 field_42_ya page n up <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache poi hwpf model type s e p abstract type r0 <NEXT> r1 field_42_ya page n up = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache poi hwpf model type s e p abstract type r0 <NEXT> $ b0 = r1 field_52_unused5 <NEXT> return $ b0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache poi hwpf model type s e p abstract type r0 <NEXT> $ r1 = r2 field_59_olst anm <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = org apache poi hwpf model type t l p abstract type f last row <NEXT> r2 = org apache poi hwpf model type t l p abstract type r0 <NEXT> $ b0 = r2 field_2_tlp_flags <NEXT> $ i1 = $ r1 set boolean $ b0 z0 <NEXT> $ b2 = byte $ i1 <NEXT> r3 = org apache poi hwpf model type t l p abstract type r0 <NEXT> r3 field_2_tlp_flags = $ b2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hwpf usermodel border code _f shadow <NEXT> r2 = org apache poi hwpf usermodel border code r0 <NEXT> $ s0 = r2 _info2 <NEXT> $ i1 = $ r1 get value $ s0 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache poi hwpf usermodel border code _f frame <NEXT> r2 = org apache poi hwpf usermodel border code r0 <NEXT> $ s0 = r2 _info2 <NEXT> $ i1 = $ r1 get value $ s0 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache poi hwpf usermodel range r0 <NEXT> $ r1 = r3 _text <NEXT> r4 = org apache poi hwpf usermodel range r0 <NEXT> $ i1 = r4 _start <NEXT> r5 = org apache poi hwpf usermodel range r0 <NEXT> $ i0 = r5 _end <NEXT> $ r2 = $ r1 substring $ i1 $ i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r16 = org apache poi hwpf usermodel range r0 <NEXT> r16 init all <NEXT> r17 = org apache poi hwpf usermodel range r0 <NEXT> $ r2 = r17 _text <NEXT> r18 = org apache poi hwpf usermodel range r0 <NEXT> $ i0 = r18 _end <NEXT> $ r2 insert $ i0 r1 <NEXT> r19 = org apache poi hwpf usermodel range r0 <NEXT> $ r4 = r19 _doc <NEXT> $ r5 = $ r4 get character table <NEXT> r20 = org apache poi hwpf usermodel range r0 <NEXT> $ i1 = r20 _char end <NEXT> $ i2 = $ i1 - 1 <NEXT> $ i3 = r1 length <NEXT> $ r5 adjust for insert $ i2 $ i3 <NEXT> r21 = org apache poi hwpf usermodel range r0 <NEXT> $ r6 = r21 _doc <NEXT> $ r7 = $ r6 get paragraph table <NEXT> r22 = org apache poi hwpf usermodel range r0 <NEXT> $ i4 = r22 _par end <NEXT> $ i5 = $ i4 - 1 <NEXT> $ i6 = r1 length <NEXT> $ r7 adjust for insert $ i5 $ i6 <NEXT> r23 = org apache poi hwpf usermodel range r0 <NEXT> $ r8 = r23 _doc <NEXT> $ r9 = $ r8 get section table <NEXT> r24 = org apache poi hwpf usermodel range r0 <NEXT> $ i7 = r24 _section end <NEXT> $ i8 = $ i7 - 1 <NEXT> $ i9 = r1 length <NEXT> $ r9 adjust for insert $ i8 $ i9 <NEXT> r25 = org apache poi hwpf usermodel range r0 <NEXT> $ r10 = r25 _doc <NEXT> $ z0 = $ r10 instanceof org apache poi hwpf h w p f document <NEXT> if $ z0 == 0 goto label1 <NEXT> r26 = org apache poi hwpf usermodel range r0 <NEXT> $ r12 = r26 _doc <NEXT> $ r13 = org apache poi hwpf h w p f document $ r12 <NEXT> $ r14 = $ r13 get bookmark <NEXT> $ r15 = org apache poi hwpf usermodel bookmarks impl $ r14 <NEXT> r27 = org apache poi hwpf usermodel range r0 <NEXT> $ i13 = r27 _end <NEXT> $ i14 = r1 length <NEXT> $ r15 after insert $ i13 $ i14 <NEXT> label $ i10 = r1 length <NEXT> r28 = org apache poi hwpf usermodel range r0 <NEXT> specialinvoke r28 adjust for insert $ i10 <NEXT> r29 = org apache poi hwpf usermodel range r0 <NEXT> r29 sanity check <NEXT> r30 = org apache poi hwpf usermodel range r0 <NEXT> $ i11 = r30 num character run <NEXT> $ i12 = $ i11 - 1 <NEXT> r31 = org apache poi hwpf usermodel range r0 <NEXT> $ r11 = r31 get character run $ i12 <NEXT> return $ r11 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r19 = org apache poi hwpf usermodel range r0 <NEXT> specialinvoke r19 init paragraph <NEXT> r20 = org apache poi hwpf usermodel range r0 <NEXT> $ i1 = r20 _par start <NEXT> $ i3 = i0 + $ i1 <NEXT> r21 = org apache poi hwpf usermodel range r0 <NEXT> $ i2 = r21 _par end <NEXT> if $ i3 < $ i2 goto label1 <NEXT> r18 = new java lang index out of bound exception <NEXT> r17 = new java lang string builder <NEXT> specialinvoke r17 < init > <NEXT> $ r7 = r17 append \ `` paragraph #\ `` <NEXT> $ r8 = $ r7 append i0 <NEXT> $ r9 = $ r8 append \ `` \ `` <NEXT> r22 = org apache poi hwpf usermodel range r0 <NEXT> $ i6 = r22 _par start <NEXT> $ i7 = i0 + $ i6 <NEXT> $ r10 = $ r9 append $ i7 <NEXT> $ r11 = $ r10 append \ `` not in range [ \ `` <NEXT> r23 = org apache poi hwpf usermodel range r0 <NEXT> $ i8 = r23 _par start <NEXT> $ r12 = $ r11 append $ i8 <NEXT> $ r13 = $ r12 append \ `` \ `` <NEXT> r24 = org apache poi hwpf usermodel range r0 <NEXT> $ i9 = r24 _par end <NEXT> $ r14 = $ r13 append $ i9 <NEXT> $ r15 = $ r14 append \ `` \ `` <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke r18 < init > $ r16 <NEXT> throw r18 <NEXT> if $ i3 < $ i2 goto label1 <NEXT> label r25 = org apache poi hwpf usermodel range r0 <NEXT> $ r2 = r25 _paragraphs <NEXT> r26 = org apache poi hwpf usermodel range r0 <NEXT> $ i4 = r26 _par start <NEXT> $ i5 = i0 + $ i4 <NEXT> $ r3 = $ r2 get $ i5 <NEXT> r1 = org apache poi hwpf model papx $ r3 <NEXT> r27 = org apache poi hwpf usermodel range r0 <NEXT> $ r4 = org apache poi hwpf usermodel paragraph new paragraph r27 r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ i2 = i0 + i1 <NEXT> r2 = com google protobuf byte string r0 <NEXT> $ i3 = r2 size <NEXT> com google protobuf byte string check range i0 $ i2 $ i3 <NEXT> if i1 < = 0 goto label1 <NEXT> r3 = com google protobuf byte string r0 <NEXT> r3 write to internal r1 i0 i1 <NEXT> label return <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ i2 = com google protobuf cod output stream compute tag size i0 <NEXT> $ i3 = com google protobuf cod output stream compute int32 size no tag i1 <NEXT> $ i4 = $ i2 + $ i3 <NEXT> return $ i4 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ i2 = com google protobuf cod output stream compute tag size i0 <NEXT> $ i3 = com google protobuf cod output stream compute enum size no tag i1 <NEXT> $ i4 = $ i2 + $ i3 <NEXT> return $ i4 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = com google protobuf cod output stream compute u int32 size no tag i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com google protobuf extension $ message type proto2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = com google protobuf field r0 <NEXT> r1 = r5 json name_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google protobuf field r0 <NEXT> r6 json name_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string <NEXT> $ r2 = com google protobuf internal utf_8 <NEXT> specialinvoke $ r1 < init > r0 $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com google protobuf method r0 <NEXT> $ z0 = r1 request streaming_ <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google protobuf method r0 <NEXT> $ r1 = r2 options_ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com google protobuf method r0 <NEXT> $ i0 = r1 syntax_ <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = com google protobuf repeat field builder r0 <NEXT> $ r1 = specialinvoke r2 get message i0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r5 = com google protobuf text format parse info tree r0 <NEXT> $ r2 = r5 get location r1 <NEXT> $ r3 = com google protobuf text format parse info tree get from list $ r2 i0 r1 <NEXT> $ r4 = com google protobuf text format parse location $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r6 = com google protobuf unknown field set r0 <NEXT> $ r2 = r6 field <NEXT> $ r3 = java lang integer value of i0 <NEXT> $ r4 = $ r2 get $ r3 <NEXT> r1 = com google protobuf unknown field set $ field $ r4 <NEXT> if r1 ! = null goto label1 <NEXT> $ r5 = com google protobuf unknown field set $ field get default instance <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r5 = r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io quarkus bootstrap model app artifact r0 <NEXT> r2 path = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = io quarkus bootstrap model app artifact r0 <NEXT> $ r1 = r3 path <NEXT> if $ r1 == null goto label1 <NEXT> r4 = io quarkus bootstrap model app artifact r0 <NEXT> $ r2 = r4 path <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = io quarkus bootstrap model app model r0 <NEXT> $ r1 = r2 deployment deps <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io quarkus bootstrap resolver maven bootstrap maven context config r0 <NEXT> r2 remote repos = r1 <NEXT> r3 = io quarkus bootstrap resolver maven bootstrap maven context config r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = new io quarkus builder item id <NEXT> specialinvoke r9 < init > r1 <NEXT> r11 = io quarkus builder build result r0 <NEXT> $ r5 = r11 multi item <NEXT> $ r6 = $ r5 get r9 <NEXT> r3 = java util list $ r6 <NEXT> if r3 ! = null goto label1 <NEXT> $ r8 = java util collection empty list <NEXT> return $ r8 <NEXT> if r3 ! = null goto label1 <NEXT> label r10 = new java util array list <NEXT> specialinvoke r10 < init > r3 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r2 = io quarkus deployment builditem run time configuration default build item r0 <NEXT> $ r1 = r2 key <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 replace 92 47 <NEXT> r2 = java util regex pattern compile \ `` ^ \\w ? $ | ? * \ `` <NEXT> r3 = r2 matcher r1 <NEXT> $ z0 = r3 match <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = r3 group 2 <NEXT> $ r7 = java util optional of nullable $ r6 <NEXT> $ r8 = $ r7 or else \ `` \ `` <NEXT> r4 = java lang string $ r8 <NEXT> $ r9 = r3 group 3 <NEXT> $ r10 = java util optional of nullable $ r9 <NEXT> $ r11 = $ r10 or else \ `` \ `` <NEXT> r5 = java lang string $ r11 <NEXT> $ r12 = new java lang string builder <NEXT> specialinvoke $ r12 < init > <NEXT> $ r13 = $ r12 append \ `` \ `` <NEXT> $ r14 = r3 group 1 <NEXT> $ r15 = $ r14 to lower case <NEXT> $ r16 = $ r13 append $ r15 <NEXT> $ r17 = $ r16 append r4 <NEXT> $ r18 = $ r17 append r5 <NEXT> $ r19 = $ r18 to string <NEXT> return $ r19 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = io quarkus hibernate orm panache runtime jpa operation implementation injection miss <NEXT> throw $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = io quarkus hibernate orm panache runtime jpa operation implementation injection miss <NEXT> throw $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = io quarkus hibernate orm panache runtime jpa operation implementation injection miss <NEXT> throw $ r2 <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = new io quarkus panache common page <NEXT> specialinvoke $ r0 < init > i0 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = io quarkus panache common sort $ direction descend <NEXT> r3 = io quarkus panache common sort r0 <NEXT> $ r2 = r3 direction $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = io quarkus panache common sort r0 <NEXT> $ r4 = r7 column <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = io quarkus panache common sort $ column $ r5 <NEXT> io quarkus panache common sort $ column access $ 002 r3 r1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r8 = io quarkus panache common sort r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = io quarkus panache common sort r0 <NEXT> $ r4 = r6 column <NEXT> r5 = new io quarkus panache common sort $ column <NEXT> r7 = io quarkus panache common sort r0 <NEXT> specialinvoke r5 < init > r7 r1 r2 <NEXT> $ r4 add r5 <NEXT> r8 = io quarkus panache common sort r0 <NEXT> return r8 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = r0 user <NEXT> r2 = io quarkus vertx http runtime security quarkus http user $ r4 <NEXT> if r2 == null goto label1 <NEXT> $ r14 = r2 get security identity <NEXT> return $ r14 <NEXT> if r2 == null goto label1 <NEXT> label $ r5 = r0 get \ `` io quarkus vertx http deferred-identity\ `` <NEXT> r3 = io smallrye mutiny uni $ r5 <NEXT> if r3 == null goto label2 <NEXT> $ r11 = r3 await <NEXT> $ r12 = $ r11 indefinitely <NEXT> $ r13 = io quarkus security identity security identity $ r12 <NEXT> return $ r13 <NEXT> if r3 == null goto label2 <NEXT> label if r1 == null goto label3 <NEXT> $ r6 = io quarkus security identity request anonymous authentication request instance <NEXT> r15 = io quarkus security identity request authentication request $ r6 <NEXT> $ r7 = r1 authenticate r15 <NEXT> $ r8 = $ r7 await <NEXT> $ r9 = $ r8 indefinitely <NEXT> $ r10 = io quarkus security identity security identity $ r9 <NEXT> return $ r10 <NEXT> label if r1 == null goto label3 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` reactive stream subscriber\ `` <NEXT> $ z0 = r0 instanceof org reactivestreams flow adapter $ reactive to flow subscriber <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org reactivestreams flow adapter $ reactive to flow subscriber r0 <NEXT> r4 = $ r3 flow <NEXT> goto label3 <NEXT> label r6 = java util concurrent flow $ subscriber r4 <NEXT> return r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof java util concurrent flow $ subscriber <NEXT> if $ z1 == 0 goto label2 <NEXT> r4 = java util concurrent flow $ subscriber r0 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r5 = new org reactivestreams flow adapter $ flow to reactive subscriber <NEXT> specialinvoke r5 < init > r0 <NEXT> r4 = r5 <END>
<BEG> r0 = @ this <NEXT> r3 = new reactor core publisher mono ignore element <NEXT> r4 = reactor core publisher mono r0 <NEXT> specialinvoke r3 < init > r4 <NEXT> r5 = reactor core publisher mono r3 <NEXT> $ r2 = reactor core publisher mono on assembly r5 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r1 get class <NEXT> $ r4 = mono $ be instance__32 bootstrap $ r1 <NEXT> r6 = reactor core publisher mono r0 <NEXT> $ r5 = r6 on error continue $ r4 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = reactor core scheduler scheduler parallel <NEXT> r4 = reactor core publisher mono r0 <NEXT> $ r3 = r4 take r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new reactor core publisher operator $ scalar subscription <NEXT> specialinvoke r3 < init > r0 r1 <NEXT> r4 = org reactivestreams subscription r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> java util object require non null r1 \ `` on next\ `` <NEXT> r4 = reactor core publisher parallel flux r0 <NEXT> $ r3 = reactor core publisher parallel flux do on signal r4 r1 null null null null null null null <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ i0 = reactor util concurrent queue small_buffer_size <NEXT> r2 = reactor core publisher parallel flux r0 <NEXT> $ r1 = r2 sequential $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = reactor core publisher queue drain subscriber r0 <NEXT> $ r1 = r2 wip <NEXT> $ i1 = $ r1 add and get i0 <NEXT> return $ i1 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 - 1 <NEXT> $ i2 = java lang integer number of lead zeros $ i1 <NEXT> $ i3 = 32 - $ i2 <NEXT> $ i4 = 1 < < $ i3 <NEXT> return $ i4 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > \ `` not yet implemented\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = byte buf mono $ retain__1 bootstrap $ <NEXT> r4 = reactor netty byte buf mono r0 <NEXT> $ r2 = r4 do on next $ r1 <NEXT> $ r3 = reactor netty byte buf mono maybe fuse $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = reactor netty channel channel operation outbound_close <NEXT> $ r2 = $ r1 get r0 <NEXT> $ r3 = reactor core publisher operator cancel subscription <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r6 = reactor netty tcp tcp client r0 <NEXT> $ r2 = r6 duplicate <NEXT> r1 = reactor netty tcp tcp client $ r2 <NEXT> $ r3 = r1 configuration <NEXT> $ r4 = reactor netty tcp tcp client config $ r3 <NEXT> $ r5 = reactor netty tcp ssl provider default client provider <NEXT> $ r4 ssl provider = $ r5 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` inet socket address\ `` <NEXT> $ z0 = r0 be unresolved <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r3 = r0 get host string <NEXT> $ i0 = r0 get port <NEXT> r1 = reactor netty transport address utils create for ip string $ r3 $ i0 <NEXT> if r1 == null goto label2 <NEXT> return r1 <NEXT> if r1 == null goto label2 <NEXT> label return r0 <END>
<BEG> r0 = @ this <NEXT> r9 = reactor netty transport log reactor netty log handler r0 <NEXT> $ r2 = r9 byte buf format <NEXT> $ r1 = reactor netty transport log advanced byte buf format simple <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> $ r7 = io netty handler log byte buf format simple <NEXT> return $ r7 <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> label r10 = reactor netty transport log reactor netty log handler r0 <NEXT> $ r4 = r10 byte buf format <NEXT> $ r3 = reactor netty transport log advanced byte buf format hex_dump <NEXT> if $ r4 ! = $ r3 goto label2 <NEXT> $ r6 = io netty handler log byte buf format hex_dump <NEXT> return $ r6 <NEXT> if $ r4 ! = $ r3 goto label2 <NEXT> label r8 = new java lang unsupported operation exception <NEXT> specialinvoke r8 < init > \ `` reactor netty log handler isn\'t use the classic byte buf format \ `` <NEXT> throw r8 <END>
<BEG> r0 = @ this <NEXT> r2 = reactor netty transport name resolver provider r0 <NEXT> $ r1 = r2 query timeout <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = reactor netty http client http client config r0 <NEXT> $ z0 = r1 accept gzip <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = reactor netty http client http client config r0 <NEXT> $ r1 = r2 redirect request consumer <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = new reactor netty http cooky <NEXT> $ r3 = io netty handler codec http http header name set_cookie <NEXT> r5 = java lang char sequence $ r3 <NEXT> r6 = io netty handler codec http cookie cookie decoder r1 <NEXT> specialinvoke r4 < init > r0 r5 1 r6 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = reactor netty http http decoder spec r0 <NEXT> $ i0 = r1 max chunk size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = reactor netty http http operation http_state <NEXT> $ z0 = $ r1 compare and set r0 1 2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = reactor netty http server http server config r0 <NEXT> $ r1 = r2 idle timeout <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> io restassured internal common assertion assert parameter not null r1 \ `` first additional field name\ `` <NEXT> io restassured internal common assertion assert parameter not null r2 \ `` second additional field name\ `` <NEXT> r17 = new java util array list <NEXT> r19 = io restassured authentication form auth config r0 <NEXT> $ r8 = r19 additional input field names <NEXT> specialinvoke r17 < init > $ r8 <NEXT> r17 add r1 <NEXT> r17 add r2 <NEXT> if r3 == null goto label1 <NEXT> $ i0 = lengthof r3 <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ r9 = java util array a list r3 <NEXT> r17 add all $ r9 <NEXT> label r18 = new io restassured authentication form auth config <NEXT> r20 = io restassured authentication form auth config r0 <NEXT> $ r11 = r20 form action <NEXT> r21 = io restassured authentication form auth config r0 <NEXT> $ r12 = r21 user input tag name <NEXT> r22 = io restassured authentication form auth config r0 <NEXT> $ r13 = r22 password input tag name <NEXT> r23 = io restassured authentication form auth config r0 <NEXT> $ r14 = r23 log detail <NEXT> r24 = io restassured authentication form auth config r0 <NEXT> $ r15 = r24 log config <NEXT> r25 = io restassured authentication form auth config r0 <NEXT> $ r16 = r25 csrf field name <NEXT> r26 = io restassured authentication form auth config r0 <NEXT> $ z3 = r26 auto detect csrf field name <NEXT> r27 = io restassured authentication form auth config r0 <NEXT> $ z4 = r27 send csrf token a form param <NEXT> specialinvoke r18 < init > $ r11 $ r12 $ r13 $ r14 $ r15 $ r16 $ z3 $ z4 r17 <NEXT> return r18 <END>
<BEG> r0 = @ this <NEXT> r2 = io restassured builder multi part spec builder r0 <NEXT> $ r1 = r2 file name null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io restassured builder request spec builder r0 <NEXT> $ r2 = r4 spec <NEXT> $ r2 cookie r1 <NEXT> r5 = io restassured builder request spec builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = io restassured builder request spec builder r0 <NEXT> $ r4 = r6 spec <NEXT> $ r4 multi part r1 r2 r3 <NEXT> r7 = io restassured builder request spec builder r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io restassured builder request spec builder r0 <NEXT> $ r2 = r3 spec <NEXT> $ r2 set authentication scheme r1 <NEXT> r4 = io restassured builder request spec builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = io restassured builder request spec builder r0 <NEXT> $ r1 = r3 spec <NEXT> $ r1 port i0 <NEXT> r4 = io restassured builder request spec builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r34 = io restassured builder response builder r0 <NEXT> $ z0 = specialinvoke r34 be rest assure response r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r35 = io restassured builder response builder r0 <NEXT> r2 = specialinvoke r35 ra response r1 <NEXT> r36 = io restassured builder response builder r0 <NEXT> $ r15 = r36 rest assure response <NEXT> $ r16 = r2 get content <NEXT> $ r15 set content $ r16 <NEXT> r37 = io restassured builder response builder r0 <NEXT> $ r17 = r37 rest assure response <NEXT> $ z1 = r2 get have expectation <NEXT> $ r17 set have expectation $ z1 <NEXT> r38 = io restassured builder response builder r0 <NEXT> $ r18 = r38 rest assure response <NEXT> $ r19 = r2 get default content type <NEXT> $ r18 set default content type $ r19 <NEXT> r39 = io restassured builder response builder r0 <NEXT> $ r20 = r39 rest assure response <NEXT> $ r21 = r2 get decoder config <NEXT> $ r20 set decoder config $ r21 <NEXT> r40 = io restassured builder response builder r0 <NEXT> $ r22 = r40 rest assure response <NEXT> $ r23 = r2 get session id name <NEXT> $ r22 set session id name $ r23 <NEXT> r41 = io restassured builder response builder r0 <NEXT> $ r24 = r41 rest assure response <NEXT> $ r25 = r2 get connection manager <NEXT> $ r24 set connection manager $ r25 <NEXT> r42 = io restassured builder response builder r0 <NEXT> $ r26 = r42 rest assure response <NEXT> $ r27 = r2 get config <NEXT> $ r26 set config $ r27 <NEXT> r43 = io restassured builder response builder r0 <NEXT> $ r28 = r43 rest assure response <NEXT> $ r29 = r2 get rpr <NEXT> $ r28 set rpr $ r29 <NEXT> r44 = io restassured builder response builder r0 <NEXT> $ r30 = r44 rest assure response <NEXT> $ r31 = r2 get log repository <NEXT> $ r30 set log repository $ r31 <NEXT> r45 = io restassured builder response builder r0 <NEXT> $ r32 = r45 rest assure response <NEXT> $ r33 = r2 get filter context property <NEXT> $ r32 set filter context property $ r33 <NEXT> goto label2 <NEXT> label r47 = io restassured builder response builder r0 <NEXT> $ r5 = r47 rest assure response <NEXT> $ r6 = r1 get content type <NEXT> $ r5 set content type $ r6 <NEXT> r48 = io restassured builder response builder r0 <NEXT> $ r7 = r48 rest assure response <NEXT> $ r8 = r1 get detailed cooky <NEXT> $ r7 set cooky $ r8 <NEXT> r49 = io restassured builder response builder r0 <NEXT> $ r9 = r49 rest assure response <NEXT> $ r10 = r1 get header <NEXT> $ r9 set response header $ r10 <NEXT> r50 = io restassured builder response builder r0 <NEXT> $ r11 = r50 rest assure response <NEXT> $ i0 = r1 get status code <NEXT> $ r12 = java lang integer value of $ i0 <NEXT> $ r11 set status code $ r12 <NEXT> r51 = io restassured builder response builder r0 <NEXT> $ r13 = r51 rest assure response <NEXT> $ r14 = r1 get status line <NEXT> $ r13 set status line $ r14 <NEXT> r52 = io restassured builder response builder r0 <NEXT> return r52 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r46 = io restassured builder response builder r0 <NEXT> $ r3 = r46 rest assure response <NEXT> $ r4 = r1 a input stream <NEXT> $ r3 set content $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> io restassured internal common assertion assert parameter not null r1 \ `` status line\ `` <NEXT> r4 = io restassured builder response builder r0 <NEXT> $ r3 = r4 rest assure response <NEXT> $ r3 set status line r1 <NEXT> r5 = io restassured builder response builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = io restassured builder response builder r0 <NEXT> $ r1 = r3 rest assure response <NEXT> $ r2 = java lang integer value of i0 <NEXT> $ r1 set status code $ r2 <NEXT> r4 = io restassured builder response builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = io restassured builder response spec builder r0 <NEXT> $ r1 = r3 spec <NEXT> $ r1 status code i0 <NEXT> r4 = io restassured builder response spec builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io restassured builder response spec builder r0 <NEXT> $ r3 = r5 spec <NEXT> $ r3 header r1 r2 <NEXT> r6 = io restassured builder response spec builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new io restassured config encoder config <NEXT> r7 = io restassured config encoder config r0 <NEXT> $ r5 = r7 default query parameter charset <NEXT> r8 = io restassured config encoder config r0 <NEXT> $ z0 = r8 should append default content charset to content type if undefined <NEXT> r9 = io restassured config encoder config r0 <NEXT> $ r4 = r9 content encoders <NEXT> r10 = io restassured config encoder config r0 <NEXT> $ r3 = r10 content type to default charset <NEXT> specialinvoke r6 < init > r1 $ r5 $ z0 $ r4 $ r3 1 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new io restassured config encoder config <NEXT> r7 = io restassured config encoder config r0 <NEXT> $ r5 = r7 default content charset <NEXT> r8 = io restassured config encoder config r0 <NEXT> $ z0 = r8 should append default content charset to content type if undefined <NEXT> r9 = io restassured config encoder config r0 <NEXT> $ r4 = r9 content encoders <NEXT> r10 = io restassured config encoder config r0 <NEXT> $ r3 = r10 content type to default charset <NEXT> specialinvoke r6 < init > $ r5 r1 $ z0 $ r4 $ r3 1 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> io restassured internal common assertion assert parameter not null r1 \ `` content- type to encode\ `` <NEXT> io restassured internal common assertion assert parameter not null r2 class \ `` lio restassured http content type \ `` <NEXT> r13 = new java util hash map <NEXT> r15 = io restassured config encoder config r0 <NEXT> $ r7 = r15 content encoders <NEXT> specialinvoke r13 < init > $ r7 <NEXT> r13 put r1 r2 <NEXT> r14 = new io restassured config encoder config <NEXT> r16 = io restassured config encoder config r0 <NEXT> $ r12 = r16 default content charset <NEXT> r17 = io restassured config encoder config r0 <NEXT> $ r11 = r17 default query parameter charset <NEXT> r18 = io restassured config encoder config r0 <NEXT> $ z0 = r18 should append default content charset to content type if undefined <NEXT> r19 = io restassured config encoder config r0 <NEXT> $ r10 = r19 content type to default charset <NEXT> specialinvoke r14 < init > $ r12 $ r11 $ z0 r13 $ r10 1 <NEXT> return r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new io restassured config json config <NEXT> specialinvoke $ r2 < init > r1 1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new io restassured config multi part config <NEXT> r8 = io restassured config multi part config r0 <NEXT> $ r6 = r8 default control name <NEXT> r9 = io restassured config multi part config r0 <NEXT> $ r5 = r9 default file name <NEXT> r10 = io restassured config multi part config r0 <NEXT> $ r4 = r10 default boundary <NEXT> r11 = io restassured config multi part config r0 <NEXT> $ r3 = r11 default charset <NEXT> specialinvoke r7 < init > $ r6 $ r5 r1 $ r4 $ r3 1 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> io restassured internal common assertion assert parameter not null r1 \ `` log config\ `` <NEXT> r36 = new io restassured config rest assure config <NEXT> r37 = io restassured config rest assure config r0 <NEXT> $ r4 = specialinvoke r37 conf class \ `` lio restassured config redirect config \ `` <NEXT> $ r5 = io restassured config redirect config $ r4 <NEXT> r38 = io restassured config rest assure config r0 <NEXT> $ r6 = specialinvoke r38 conf class \ `` lio restassured config http client config \ `` <NEXT> $ r7 = io restassured config http client config $ r6 <NEXT> r39 = io restassured config rest assure config r0 <NEXT> $ r8 = specialinvoke r39 conf class \ `` lio restassured config encoder config \ `` <NEXT> $ r9 = io restassured config encoder config $ r8 <NEXT> r40 = io restassured config rest assure config r0 <NEXT> $ r10 = specialinvoke r40 conf class \ `` lio restassured config decoder config \ `` <NEXT> $ r11 = io restassured config decoder config $ r10 <NEXT> r41 = io restassured config rest assure config r0 <NEXT> $ r12 = specialinvoke r41 conf class \ `` lio restassured config session config \ `` <NEXT> $ r13 = io restassured config session config $ r12 <NEXT> r42 = io restassured config rest assure config r0 <NEXT> $ r14 = specialinvoke r42 conf class \ `` lio restassured config object mapper config \ `` <NEXT> $ r15 = io restassured config object mapper config $ r14 <NEXT> r43 = io restassured config rest assure config r0 <NEXT> $ r16 = specialinvoke r43 conf class \ `` lio restassured config connection config \ `` <NEXT> $ r17 = io restassured config connection config $ r16 <NEXT> r44 = io restassured config rest assure config r0 <NEXT> $ r18 = specialinvoke r44 conf class \ `` lio restassured config json config \ `` <NEXT> $ r19 = io restassured config json config $ r18 <NEXT> r45 = io restassured config rest assure config r0 <NEXT> $ r20 = specialinvoke r45 conf class \ `` lio restassured config xml config \ `` <NEXT> $ r21 = io restassured config xml config $ r20 <NEXT> r46 = io restassured config rest assure config r0 <NEXT> $ r22 = specialinvoke r46 conf class \ `` lio restassured config s s l config \ `` <NEXT> $ r23 = io restassured config s s l config $ r22 <NEXT> r47 = io restassured config rest assure config r0 <NEXT> $ r24 = specialinvoke r47 conf class \ `` lio restassured config matcher config \ `` <NEXT> $ r25 = io restassured config matcher config $ r24 <NEXT> r48 = io restassured config rest assure config r0 <NEXT> $ r26 = specialinvoke r48 conf class \ `` lio restassured config header config \ `` <NEXT> $ r27 = io restassured config header config $ r26 <NEXT> r49 = io restassured config rest assure config r0 <NEXT> $ r28 = specialinvoke r49 conf class \ `` lio restassured config multi part config \ `` <NEXT> $ r29 = io restassured config multi part config $ r28 <NEXT> r50 = io restassured config rest assure config r0 <NEXT> $ r30 = specialinvoke r50 conf class \ `` lio restassured config param config \ `` <NEXT> $ r31 = io restassured config param config $ r30 <NEXT> r51 = io restassured config rest assure config r0 <NEXT> $ r32 = specialinvoke r51 conf class \ `` lio restassured config o auth config \ `` <NEXT> $ r33 = io restassured config o auth config $ r32 <NEXT> r52 = io restassured config rest assure config r0 <NEXT> $ r34 = specialinvoke r52 conf class \ `` lio restassured config failure config \ `` <NEXT> $ r35 = io restassured config failure config $ r34 <NEXT> specialinvoke r36 < init > $ r5 $ r7 r1 $ r9 $ r11 $ r13 $ r15 $ r17 $ r19 $ r21 $ r23 $ r25 $ r27 $ r29 $ r31 $ r33 $ r35 <NEXT> return r36 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = newarray java lang object [ 0 ] <NEXT> org apache common lang3 validate not empty r1 \ `` password can not be empty\ <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r5 = java lang system get property \ `` user home\ `` <NEXT> $ r6 = r11 append $ r5 <NEXT> $ c0 = java io file separator char <NEXT> $ r7 = $ r6 append $ c0 <NEXT> $ r8 = $ r7 append \ `` keystore\ `` <NEXT> $ r9 = $ r8 to string <NEXT> r12 = io restassured config s s l config r0 <NEXT> $ r10 = r12 key store $ r9 r1 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r5 = io restassured internal http u r i builder convert to u r i r1 <NEXT> r7 = io restassured internal http h t t p builder r0 <NEXT> $ r6 = r7 do request $ r5 r2 r3 z0 r4 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r3 = io restassured internal http h t t p builder r0 <NEXT> $ r1 = r3 client <NEXT> $ r2 = $ r1 get connection manager <NEXT> $ r2 shutdown <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = io restassured internal http u r i builder r0 <NEXT> $ r1 = r3 base <NEXT> $ r2 = $ r1 to u r l <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = class \ `` ljava net uri \ `` goto label1 <NEXT> r12 = io restassured internal http u r i builder r0 <NEXT> $ r9 = r12 to u r i <NEXT> return $ r9 <NEXT> if r1 ! = class \ `` ljava net uri \ `` goto label1 <NEXT> label if r1 ! = class \ `` ljava net url \ `` goto label2 <NEXT> r13 = io restassured internal http u r i builder r0 <NEXT> $ r8 = r13 to u r l <NEXT> return $ r8 <NEXT> label if r1 ! = class \ `` ljava net url \ `` goto label2 <NEXT> label if r1 ! = class \ `` ljava lang string \ `` goto label3 <NEXT> r14 = io restassured internal http u r i builder r0 <NEXT> $ r7 = r14 to string <NEXT> return $ r7 <NEXT> label if r1 ! = class \ `` ljava lang string \ `` goto label3 <NEXT> label r11 = new java lang class cast exception <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r4 = r10 append \ `` can not cast instance of u r i builder to class \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke r11 < init > $ r6 <NEXT> throw r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> io restassured internal common assertion assert parameter not null r1 \ `` entity name\ `` <NEXT> r11 = new java util array list <NEXT> specialinvoke r11 < init > <NEXT> r12 = io restassured internal multi value entity r0 <NEXT> $ r7 = r12 entity <NEXT> r3 = $ r7 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r9 = r3 next <NEXT> r4 = io restassured internal name and value $ r9 <NEXT> $ r10 = r4 get name <NEXT> $ z1 = $ r10 equal ignore case r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> r11 add r4 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r8 = java util collection unmodifiable list r11 <NEXT> return $ r8 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org apache common lang3 string utils be blank r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = new java net uri <NEXT> specialinvoke $ r1 < init > r0 <NEXT> $ r2 = $ r1 get scheme <NEXT> if $ r2 == null goto label2 <NEXT> $ r3 = $ r1 get host <NEXT> if $ r3 == null goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ r3 == null goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org hamcrest matcher equal to r1 <NEXT> r4 = io restassured matcher detailed cookie matcher r0 <NEXT> $ r3 = r4 same site $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = io restassured internal matcher xml xml dtd matcher match dtd r0 <NEXT> return $ r1 <END>
<BEG> $ r0 = io restassured rest assure create test specification <NEXT> $ r1 = $ r0 get request specification <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r9 = r1 get header <NEXT> r3 = $ r9 a map <NEXT> $ r10 = r3 entry set <NEXT> r4 = $ r10 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r11 = r4 next <NEXT> r5 = java util map $ entry $ r11 <NEXT> $ r12 = r5 get value <NEXT> r6 = java util list $ r12 <NEXT> r7 = r6 iterator <NEXT> label $ z1 = r7 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r13 = r7 next <NEXT> r8 = java lang string $ r13 <NEXT> $ r14 = r5 get key <NEXT> $ r15 = java lang string $ r14 <NEXT> r2 add request property $ r15 r8 <NEXT> goto label2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return <END>
<BEG> $ i0 = org jboss resteasy util port provider get port <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org jboss resteasy core providerfactory resteasy provider factory impl r0 <NEXT> $ r1 = r3 provider instance <NEXT> r4 = java util set $ r1 <NEXT> $ r2 = java util collection unmodifiable set r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org jboss resteasy mock mock http request r0 <NEXT> $ r3 = r8 decode form parameter <NEXT> if $ r3 ! = null goto label1 <NEXT> r7 = new org jboss resteasy specimpl multivalued map impl <NEXT> specialinvoke r7 < init > <NEXT> r9 = org jboss resteasy mock mock http request r0 <NEXT> r10 = javax w r core multivalued map r7 <NEXT> r9 decode form parameter = r10 <NEXT> r11 = org jboss resteasy mock mock http request r0 <NEXT> r11 content type \ `` application x-www-form-urlencoded\ `` <NEXT> label r12 = org jboss resteasy mock mock http request r0 <NEXT> $ r4 = r12 decode form parameter <NEXT> $ r4 add r1 r2 <NEXT> r13 = org jboss resteasy mock mock http request r0 <NEXT> return r13 <END>
<BEG> $ r0 = org jboss resteasy spi resteasy provider factory instance <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new java util hash map <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = r0 get declare class <NEXT> r12 = $ r3 get annotation <NEXT> i1 = lengthof r12 <NEXT> i2 = 0 <NEXT> label if i2 > = i1 goto label2 <NEXT> r13 = r12 [ i2 ] <NEXT> $ r10 = r13 get class <NEXT> $ r2 put $ r10 r13 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i1 goto label2 <NEXT> label r14 = r0 get annotation <NEXT> i3 = lengthof r14 <NEXT> i4 = 0 <NEXT> label if i4 > = i3 goto label4 <NEXT> r15 = r14 [ i4 ] <NEXT> $ r8 = r15 get class <NEXT> $ r2 put $ r8 r15 <NEXT> i4 = i4 + 1 <NEXT> goto label3 <NEXT> label if i4 > = i3 goto label4 <NEXT> label $ r4 = $ r2 value <NEXT> $ i0 = $ r2 size <NEXT> $ r5 = newarray java lang annotation annotation [ $ i0 ] <NEXT> $ r6 = $ r4 to array $ r5 <NEXT> $ r7 = java lang annotation annotation [ ] $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r3 = org mozilla javascript ast array literal r0 <NEXT> $ r1 = r3 element <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org mozilla javascript ast array literal r0 <NEXT> $ r2 = r4 element <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r2 = org mozilla javascript ast array literal no_elems <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org mozilla javascript ast array literal r0 <NEXT> r1 destructuring length = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org mozilla javascript ast array literal r0 <NEXT> $ i0 = r1 skip count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast comment r0 <NEXT> r2 comment type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org mozilla javascript ast comment r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org mozilla javascript ast continue statement r0 <NEXT> $ r1 = r2 target <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast element get r0 <NEXT> r2 assert not null r1 <NEXT> r3 = org mozilla javascript ast element get r0 <NEXT> r3 target = r1 <NEXT> r1 set parent r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org mozilla javascript ast expression statement r0 <NEXT> r1 type = 134 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org mozilla javascript ast for in loop r0 <NEXT> $ r1 = r2 iterate object <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org mozilla javascript ast for in loop r0 <NEXT> r1 be for each = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org mozilla javascript ast for in loop r0 <NEXT> $ i0 = r1 in position <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org mozilla javascript ast function node r0 <NEXT> $ r1 = r2 function name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast function node r0 <NEXT> r2 function name = r1 <NEXT> if r1 == null goto label1 <NEXT> r3 = org mozilla javascript ast ast node r0 <NEXT> r1 set parent r3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org mozilla javascript ast function node r0 <NEXT> r1 be expression closure = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast if statement r0 <NEXT> r2 assert not null r1 <NEXT> r3 = org mozilla javascript ast if statement r0 <NEXT> r3 condition = r1 <NEXT> r1 set parent r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org mozilla javascript ast if statement r0 <NEXT> $ i0 = r1 lp <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast new expression r0 <NEXT> r2 initializer = r1 <NEXT> if r1 == null goto label1 <NEXT> r3 = org mozilla javascript ast ast node r0 <NEXT> r1 set parent r3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org mozilla javascript ast object property r0 <NEXT> r1 type = 152 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast script node r0 <NEXT> r2 source name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org mozilla javascript ast script node r0 <NEXT> $ i0 = r1 encode source end <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast let node r0 <NEXT> r2 assert not null r1 <NEXT> r3 = org mozilla javascript ast let node r0 <NEXT> r3 variable = r1 <NEXT> r4 = org mozilla javascript ast ast node r0 <NEXT> r1 set parent r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 == 122 goto label1 <NEXT> if i0 == 154 goto label1 <NEXT> if i0 == 153 goto label1 <NEXT> $ r1 = new java lang illegal argument exception <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` invalid decl type \ `` <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke $ r1 < init > $ r5 <NEXT> throw $ r1 <NEXT> if i0 == 153 goto label1 <NEXT> label $ r6 = specialinvoke r0 set type i0 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast with statement r0 <NEXT> r2 assert not null r1 <NEXT> r3 = org mozilla javascript ast with statement r0 <NEXT> r3 expression = r1 <NEXT> r1 set parent r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript ast with statement r0 <NEXT> r2 assert not null r1 <NEXT> r3 = org mozilla javascript ast with statement r0 <NEXT> r3 statement = r1 <NEXT> r1 set parent r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org mozilla javascript ast xml literal r0 <NEXT> r6 assert not null r1 <NEXT> r7 = org mozilla javascript ast xml literal r0 <NEXT> $ r4 = r7 fragment <NEXT> $ r4 clear <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = org mozilla javascript ast xml fragment $ r5 <NEXT> r8 = org mozilla javascript ast xml literal r0 <NEXT> r8 add fragment r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org mozilla javascript ast xml string r0 <NEXT> $ r1 = r2 xml <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = new org mozilla javascript commonjs module require <NEXT> r8 = org mozilla javascript commonjs module require builder r0 <NEXT> $ r6 = r8 module script provider <NEXT> r9 = org mozilla javascript commonjs module require builder r0 <NEXT> $ r5 = r9 pre exec <NEXT> r10 = org mozilla javascript commonjs module require builder r0 <NEXT> $ r4 = r10 post exec <NEXT> r11 = org mozilla javascript commonjs module require builder r0 <NEXT> $ z0 = r11 sandboxed <NEXT> specialinvoke r7 < init > r1 r2 $ r6 $ r5 $ r4 $ z0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org mozilla javascript compiler environs r0 <NEXT> r1 allow sharp comment = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org mozilla javascript rhino security manager r0 <NEXT> r1 = r6 get class context <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label5 <NEXT> r3 = r1 [ i1 ] <NEXT> if r3 == class \ `` lorg mozilla javascript interpret function \ `` goto label2 <NEXT> $ r5 = class \ `` lorg mozilla javascript native function \ `` <NEXT> $ z1 = $ r5 be assignable from r3 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label $ r4 = class \ `` lorg mozilla javascript policy security controller $ secure caller \ `` <NEXT> $ z0 = $ r4 be assignable from r3 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return r3 <NEXT> if $ z0 == 0 goto label4 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label5 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r8 = org mozilla javascript scriptable object r0 <NEXT> $ r3 = specialinvoke r8 get slot r1 i0 1 <NEXT> r2 = org mozilla javascript scriptable object unwrap slot $ r3 <NEXT> $ z1 = r2 instanceof org mozilla javascript scriptable object $ getter slot <NEXT> if $ z1 == 0 goto label2 <NEXT> if z0 == 0 goto label1 <NEXT> $ r6 = org mozilla javascript scriptable object $ getter slot r2 <NEXT> $ r7 = $ r6 setter <NEXT> if $ r7 == null goto label1 <NEXT> return 1 <NEXT> if $ r7 == null goto label1 <NEXT> label if z0 ! = 0 goto label2 <NEXT> $ r4 = org mozilla javascript scriptable object $ getter slot r2 <NEXT> $ r5 = $ r4 getter <NEXT> if $ r5 == null goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript scriptable object r0 <NEXT> r2 parent scope object = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r5 = org mozilla javascript scriptable object get property r0 i0 <NEXT> $ r2 = org mozilla javascript scriptable not_found <NEXT> if r5 ! = $ r2 goto label1 <NEXT> r5 = null <NEXT> label $ r3 = org mozilla javascript context j to java r5 r1 <NEXT> $ r4 = r1 cast $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mozilla javascript tool debugger dim r0 <NEXT> r2 scope provider = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org mozilla javascript tool debugger dim r0 <NEXT> $ r2 = r5 url to source info <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org mozilla javascript tool debugger dim $ source info $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r12 = new org mozilla javascript tool debugger main <NEXT> specialinvoke r12 < init > \ `` rhino java script debugger\ `` <NEXT> r12 do break <NEXT> r13 = new org mozilla javascript tool debugger main $ i proxy <NEXT> specialinvoke r13 < init > 1 <NEXT> r14 = java lang runnable r13 <NEXT> r12 set exit action r14 <NEXT> $ r5 = r12 get in <NEXT> java lang system set in $ r5 <NEXT> $ r6 = r12 get out <NEXT> java lang system set out $ r6 <NEXT> $ r7 = r12 get err <NEXT> java lang system set err $ r7 <NEXT> r2 = org mozilla javascript tool shell main get global <NEXT> $ r8 = r12 get in <NEXT> r2 set in $ r8 <NEXT> $ r9 = r12 get out <NEXT> r2 set out $ r9 <NEXT> $ r10 = r12 get err <NEXT> r2 set err $ r10 <NEXT> $ r11 = org mozilla javascript tool shell main shell context factory <NEXT> r15 = org mozilla javascript context factory $ r11 <NEXT> r12 attach to r15 <NEXT> r16 = org mozilla javascript scriptable r2 <NEXT> r12 set scope r16 <NEXT> r12 pack <NEXT> r12 set size 600 460 <NEXT> r12 set visible 1 <NEXT> org mozilla javascript tool shell main exec r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org mozilla javascript tool debugger swing gui r0 <NEXT> r7 = r8 awt event queue <NEXT> if r7 ! = null goto label1 <NEXT> $ r6 = java awt toolkit get default toolkit <NEXT> r7 = $ r6 get system event queue <NEXT> r9 = org mozilla javascript tool debugger swing gui r0 <NEXT> r9 awt event queue = r7 <NEXT> label r1 = r7 get next event <NEXT> $ z0 = r1 instanceof java awt active event <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = java awt active event r1 <NEXT> $ r5 dispatch <NEXT> goto label4 <NEXT> label return <NEXT> if $ z0 == 0 goto label2 <NEXT> label r2 = r1 get source <NEXT> $ z1 = r2 instanceof java awt component <NEXT> if $ z1 == 0 goto label3 <NEXT> r3 = java awt component r2 <NEXT> r3 dispatch event r1 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z2 = r2 instanceof java awt menu component <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r4 = java awt menu component r2 <NEXT> $ r4 dispatch event r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get action command <NEXT> b6 = -1 <NEXT> $ z0 = r2 equal \ `` cut\ `` <NEXT> if $ z0 ! = 0 goto label01 <NEXT> $ z2 = r2 equal \ `` copy\ `` <NEXT> if $ z2 ! = 0 goto label01 <NEXT> $ z3 = r2 equal \ `` paste\ `` <NEXT> if $ z3 == 0 goto label03 <NEXT> label r62 = org mozilla javascript tool debugger swing gui r0 <NEXT> r37 = specialinvoke r62 get select frame <NEXT> if r37 == null goto label02 <NEXT> $ z1 = r37 instanceof java awt event action listener <NEXT> if $ z1 == 0 goto label02 <NEXT> $ r6 = java awt event action listener r37 <NEXT> $ r6 action perform r1 <NEXT> label goto label44 <NEXT> label if b6 == -1 goto label45 <NEXT> r92 = org mozilla javascript tool debugger swing gui r0 <NEXT> specialinvoke r92 update enable 0 <NEXT> r93 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r5 = r93 dim <NEXT> $ r5 set return value b6 <NEXT> label return <NEXT> if $ z3 == 0 goto label03 <NEXT> label $ z4 = r2 equal \ `` step over\ `` <NEXT> if $ z4 == 0 goto label04 <NEXT> b6 = 0 <NEXT> goto label44 <NEXT> if $ z4 == 0 goto label04 <NEXT> label $ z5 = r2 equal \ `` step into\ `` <NEXT> if $ z5 == 0 goto label05 <NEXT> b6 = 1 <NEXT> if $ z5 == 0 goto label05 <NEXT> label $ z6 = r2 equal \ `` step out\ `` <NEXT> if $ z6 == 0 goto label06 <NEXT> b6 = 2 <NEXT> if $ z6 == 0 goto label06 <NEXT> label $ z7 = r2 equal \ `` go\ `` <NEXT> if $ z7 == 0 goto label07 <NEXT> b6 = 3 <NEXT> if $ z7 == 0 goto label07 <NEXT> label $ z8 = r2 equal \ `` break\ `` <NEXT> if $ z8 == 0 goto label08 <NEXT> r63 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r33 = r63 dim <NEXT> $ r33 set break <NEXT> if $ z8 == 0 goto label08 <NEXT> label $ z9 = r2 equal \ `` exit\ `` <NEXT> if $ z9 == 0 goto label09 <NEXT> r64 = org mozilla javascript tool debugger swing gui r0 <NEXT> specialinvoke r64 exit <NEXT> if $ z9 == 0 goto label09 <NEXT> label $ z10 = r2 equal \ `` open\ `` <NEXT> if $ z10 == 0 goto label11 <NEXT> r65 = org mozilla javascript tool debugger swing gui r0 <NEXT> r38 = specialinvoke r65 choose file \ `` select a file to compile\ `` <NEXT> if r38 == null goto label10 <NEXT> r66 = org mozilla javascript tool debugger swing gui r0 <NEXT> r39 = specialinvoke r66 read file r38 <NEXT> if r39 == null goto label10 <NEXT> r56 = new org mozilla javascript tool debugger run proxy <NEXT> r67 = org mozilla javascript tool debugger swing gui r0 <NEXT> specialinvoke r56 < init > r67 1 <NEXT> r56 file name = r38 <NEXT> r56 text = r39 <NEXT> r57 = new java lang thread <NEXT> r68 = java lang runnable r56 <NEXT> specialinvoke r57 < init > r68 <NEXT> r57 start <NEXT> label goto label44 <NEXT> if $ z10 == 0 goto label11 <NEXT> label $ z11 = r2 equal \ `` load\ `` <NEXT> if $ z11 == 0 goto label13 <NEXT> r69 = org mozilla javascript tool debugger swing gui r0 <NEXT> r41 = specialinvoke r69 choose file \ `` select a file to execute\ `` <NEXT> if r41 == null goto label12 <NEXT> r70 = org mozilla javascript tool debugger swing gui r0 <NEXT> r42 = specialinvoke r70 read file r41 <NEXT> if r42 == null goto label12 <NEXT> r58 = new org mozilla javascript tool debugger run proxy <NEXT> r71 = org mozilla javascript tool debugger swing gui r0 <NEXT> specialinvoke r58 < init > r71 2 <NEXT> r58 file name = r41 <NEXT> r58 text = r42 <NEXT> r59 = new java lang thread <NEXT> r72 = java lang runnable r58 <NEXT> specialinvoke r59 < init > r72 <NEXT> r59 start <NEXT> label goto label44 <NEXT> if $ z11 == 0 goto label13 <NEXT> label $ z12 = r2 equal \ `` more window \ `` <NEXT> if $ z12 == 0 goto label14 <NEXT> r60 = new org mozilla javascript tool debugger more window <NEXT> r73 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r27 = r73 file windows <NEXT> r74 = org mozilla javascript tool debugger swing gui r0 <NEXT> specialinvoke r60 < init > r74 $ r27 \ `` window\ <NEXT> r60 show dialog r0 <NEXT> if $ z12 == 0 goto label14 <NEXT> label $ z13 = r2 equal \ `` console\ `` <NEXT> if $ z13 == 0 goto label16 <NEXT> r75 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r16 = r75 console <NEXT> $ z21 = $ r16 be icon <NEXT> if $ z21 == 0 goto label15 <NEXT> r76 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r23 = r76 desk <NEXT> $ r24 = $ r23 get desktop manager <NEXT> r77 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r25 = r77 console <NEXT> r78 = javax swing j internal frame $ r25 <NEXT> $ r24 deiconify frame r78 <NEXT> label r79 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r17 = r79 console <NEXT> $ r17 show <NEXT> r80 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r18 = r80 desk <NEXT> $ r19 = $ r18 get desktop manager <NEXT> r81 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r20 = r81 console <NEXT> r82 = javax swing j internal frame $ r20 <NEXT> $ r19 activate frame r82 <NEXT> r83 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r21 = r83 console <NEXT> $ r22 = $ r21 console text area <NEXT> $ r22 request focus <NEXT> if $ z13 == 0 goto label16 <NEXT> label $ z14 = r2 equal \ `` cut\ `` <NEXT> if $ z14 == 0 goto label17 <NEXT> label $ z15 = r2 equal \ `` copy\ `` <NEXT> if $ z15 == 0 goto label18 <NEXT> label $ z16 = r2 equal \ `` paste\ `` <NEXT> if $ z16 == 0 goto label19 <NEXT> label $ z17 = r2 equal \ `` go to function \ `` <NEXT> if $ z17 == 0 goto label20 <NEXT> r61 = new org mozilla javascript tool debugger find function <NEXT> r84 = org mozilla javascript tool debugger swing gui r0 <NEXT> specialinvoke r61 < init > r84 \ `` go to function\ <NEXT> r61 show dialog r0 <NEXT> if $ z17 == 0 goto label20 <NEXT> label $ z18 = r2 equal \ `` tile\ `` <NEXT> if $ z18 == 0 goto label31 <NEXT> r85 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r11 = r85 desk <NEXT> r46 = $ r11 get all frame <NEXT> i7 = lengthof r46 <NEXT> $ d0 = double i7 <NEXT> $ d1 = java lang math sqrt $ d0 <NEXT> $ i1 = int $ d1 <NEXT> i8 = $ i1 <NEXT> i9 = $ i1 <NEXT> $ i2 = $ i1 * $ i1 <NEXT> if $ i2 > = i7 goto label21 <NEXT> i8 = $ i1 + 1 <NEXT> $ i5 = $ i1 * i8 <NEXT> if $ i5 > = i7 goto label21 <NEXT> i9 = $ i1 + 1 <NEXT> label r86 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r47 = r86 desk <NEXT> r48 = $ r47 get size <NEXT> $ i10 = r48 width <NEXT> i11 = $ i10 i8 <NEXT> $ i12 = r48 height <NEXT> i13 = $ i12 i9 <NEXT> i14 = 0 <NEXT> i15 = 0 <NEXT> i16 = 0 <NEXT> label if i16 > = i9 goto label30 <NEXT> i17 = 0 <NEXT> label if i17 > = i8 goto label29 <NEXT> $ i3 = i16 * i8 <NEXT> i0 = $ i3 + i17 <NEXT> $ i4 = lengthof r46 <NEXT> if i0 < $ i4 goto label24 <NEXT> goto label29 <NEXT> label i15 = i15 + i13 <NEXT> if i0 < $ i4 goto label24 <NEXT> label r3 = r46 [ i0 ] <NEXT> label r3 set icon 0 <NEXT> r3 set maximum 0 <NEXT> label goto label28 <NEXT> label r87 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r12 = r87 desk <NEXT> $ r13 = $ r12 get desktop manager <NEXT> $ r13 set bound for frame r3 i14 i15 i11 i13 <NEXT> i14 = i14 + i11 <NEXT> i17 = i17 + 1 <NEXT> goto label23 <NEXT> label if i16 > = i9 goto label30 <NEXT> label goto label44 <NEXT> if $ z18 == 0 goto label31 <NEXT> label $ z19 = r2 equal \ `` cascade\ `` <NEXT> if $ z19 == 0 goto label39 <NEXT> r88 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r7 = r88 desk <NEXT> r49 = $ r7 get all frame <NEXT> i18 = lengthof r49 <NEXT> i19 = 0 <NEXT> i20 = 0 <NEXT> r89 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r8 = r89 desk <NEXT> i21 = $ r8 get height <NEXT> i22 = i21 i18 <NEXT> if i22 < = 30 goto label32 <NEXT> i22 = 30 <NEXT> label i23 = i18 - 1 <NEXT> label if i23 < 0 goto label38 <NEXT> r50 = r49 [ i23 ] <NEXT> label r50 set icon 0 <NEXT> r50 set maximum 0 <NEXT> label goto label37 <NEXT> label r52 = r50 get preferred size <NEXT> i24 = r52 width <NEXT> i25 = r52 height <NEXT> r90 = org mozilla javascript tool debugger swing gui r0 <NEXT> $ r9 = r90 desk <NEXT> $ r10 = $ r9 get desktop manager <NEXT> $ r10 set bound for frame r50 i20 i19 i24 i25 <NEXT> i23 = i23 + -1 <NEXT> i20 = i20 + i22 <NEXT> i19 = i19 + i22 <NEXT> goto label33 <NEXT> label if i23 < 0 goto label38 <NEXT> label goto label44 <NEXT> if $ z19 == 0 goto label39 <NEXT> label r91 = org mozilla javascript tool debugger swing gui r0 <NEXT> r53 = r91 get file window r2 <NEXT> if r53 == null goto label44 <NEXT> r54 = org mozilla javascript tool debugger file window r53 <NEXT> label $ z20 = r54 be icon <NEXT> if $ z20 == 0 goto label41 <NEXT> r54 set icon 0 <NEXT> label r54 set visible 1 <NEXT> r54 move to front <NEXT> r54 set select 1 <NEXT> label goto label44 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org mozilla javascript top level r0 <NEXT> r2 = r6 get builtin ctor r1 <NEXT> if r2 == null goto label1 <NEXT> $ r4 = r2 get prototype property <NEXT> goto label2 <NEXT> label $ z0 = $ r4 instanceof org mozilla javascript scriptable <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = org mozilla javascript scriptable $ r4 <NEXT> goto label4 <NEXT> label return $ r5 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r5 = null <NEXT> if r2 == null goto label1 <NEXT> label $ r4 = null <END>
<BEG> r0 = @ this <NEXT> r2 = new org fife ui rsyntaxtextarea abstract j flex c token maker $ c style insert break action <NEXT> r3 = org fife ui rsyntaxtextarea abstract j flex c token maker r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = javax swing action r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r1 = org fife ui rsyntaxtextarea abstract j flex token maker r0 <NEXT> r1 yybegin i0 <NEXT> r2 = org fife ui rsyntaxtextarea abstract j flex token maker r0 <NEXT> r2 set language index i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org fife ui rsyntaxtextarea abstract token maker r0 <NEXT> $ r1 = r4 previous token <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = org fife ui rsyntaxtextarea abstract token maker r0 <NEXT> r5 current token = null <NEXT> r6 = org fife ui rsyntaxtextarea abstract token maker r0 <NEXT> r6 first token = null <NEXT> goto label2 <NEXT> label return <NEXT> if $ r1 ! = null goto label1 <NEXT> label r7 = org fife ui rsyntaxtextarea abstract token maker r0 <NEXT> $ r2 = r7 previous token <NEXT> r8 = org fife ui rsyntaxtextarea abstract token maker r0 <NEXT> r8 current token = $ r2 <NEXT> r9 = org fife ui rsyntaxtextarea abstract token maker r0 <NEXT> $ r3 = r9 current token <NEXT> $ r3 set next token null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = r0 goto label1 <NEXT> return 1 <NEXT> if r1 ! = r0 goto label1 <NEXT> label $ z0 = r1 instanceof org fife ui rsyntaxtextarea document range <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r2 = org fife ui rsyntaxtextarea document range r1 <NEXT> r3 = org fife ui rsyntaxtextarea document range r0 <NEXT> $ i0 = r3 compare to $ r2 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z1 = 0 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org fife ui rsyntaxtextarea document range r0 <NEXT> $ i1 = r1 start offs <NEXT> $ i2 = $ i1 + i0 <NEXT> r2 = org fife ui rsyntaxtextarea document range r0 <NEXT> r2 start offs = $ i2 <NEXT> r3 = org fife ui rsyntaxtextarea document range r0 <NEXT> $ i3 = r3 end offs <NEXT> $ i4 = $ i3 + i0 <NEXT> r4 = org fife ui rsyntaxtextarea document range r0 <NEXT> r4 end offs = $ i4 <NEXT> r5 = org fife ui rsyntaxtextarea document range r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rsyntaxtextarea error strip r0 <NEXT> $ r1 = r2 level threshold <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org fife ui rsyntaxtextarea file location r0 <NEXT> $ z0 = r1 be local <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 be right curly <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org fife ui rsyntaxtextarea fold fold parser manager r0 <NEXT> $ r3 = r5 fold parser map <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org fife ui rsyntaxtextarea mark occurrences support r0 <NEXT> $ r1 = r4 p <NEXT> $ r2 = $ r1 get paint <NEXT> $ r3 = java awt color $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rsyntaxtextarea mark occurrences support r0 <NEXT> $ r1 = r2 p <NEXT> $ z0 = $ r1 get paint border <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org fife ui rsyntaxtextarea parser default parse result r0 <NEXT> r1 parse time = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org fife ui rsyntaxtextarea parser task tag parser r0 <NEXT> $ r1 = r4 task pattern <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = null <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r5 = org fife ui rsyntaxtextarea parser task tag parser r0 <NEXT> $ r2 = r5 task pattern <NEXT> $ r3 = $ r2 pattern <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org fife ui rsyntaxtextarea parser xml parser r0 <NEXT> $ r1 = r2 spf <NEXT> $ r1 set validate z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r3 = r1 <NEXT> goto label2 <NEXT> label r4 = org fife ui rsyntaxtextarea r syntax document r0 <NEXT> r4 token maker factory = $ r3 <NEXT> return <NEXT> if r1 == null goto label1 <NEXT> label $ r3 = org fife ui rsyntaxtextarea token maker factory get default instance <END>
<BEG> r0 = @ this <NEXT> r1 = specialinvoke r0 create popup menu <NEXT> r2 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> r2 append fold menu r1 <NEXT> return r1 <END>
<BEG> $ r0 = org fife ui rsyntaxtextarea r syntax text area default_bracket_match_bg_color <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ z0 = r1 eol marker visible <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ r1 = r2 fold manager <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ z0 = r1 paint tab line <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ r1 = r3 parser manager <NEXT> if $ r1 ! = null goto label1 <NEXT> $ i0 = 0 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ r2 = r4 parser manager <NEXT> $ i0 = $ r2 get parser count <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ z0 = r6 get hyperlink enable <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = r1 be hyperlink <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r7 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ r2 = r7 link generator result <NEXT> if $ r2 == null goto label1 <NEXT> r8 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ r3 = r8 link generator result <NEXT> $ i0 = $ r3 get source offset <NEXT> $ i1 = r1 get offset <NEXT> if $ i0 == $ i1 goto label2 <NEXT> label r9 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ r4 = r9 syntax scheme <NEXT> $ i2 = r1 get type <NEXT> $ r5 = $ r4 get style $ i2 <NEXT> $ z2 = $ r5 underline <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = 1 <NEXT> goto label4 <NEXT> label return $ z3 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = i0 & 960 <NEXT> if i1 ! = 0 goto label1 <NEXT> r2 = new java lang illegal argument exception <NEXT> specialinvoke r2 < init > \ `` mask argument should be some combination of input event * _down_mask fields\ `` <NEXT> throw r2 <NEXT> if i1 ! = 0 goto label1 <NEXT> label r3 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> r3 link scan mask = i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> r3 paint mark occurrence border = z0 <NEXT> r4 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ r1 = r4 mark occurrences support <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ r2 = r5 mark occurrences support <NEXT> $ r2 set paint border z0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r7 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> $ z1 = r7 whitespace visible <NEXT> if $ z1 == z0 goto label5 <NEXT> r8 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> r8 whitespace visible = z0 <NEXT> if z0 == 0 goto label1 <NEXT> r5 = new org fife ui rsyntaxtextarea visible whitespace token painter <NEXT> $ r4 = r5 <NEXT> specialinvoke r5 < init > <NEXT> goto label2 <NEXT> label r9 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> r10 = org fife ui rsyntaxtextarea token painter $ r4 <NEXT> r9 token painter = r10 <NEXT> r11 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> r11 repaint <NEXT> if z0 ! = 0 goto label3 <NEXT> $ z2 = 1 <NEXT> goto label4 <NEXT> label r12 = org fife ui rsyntaxtextarea r syntax text area r0 <NEXT> r12 fire property change \ `` rsta visible whitespace\ <NEXT> label return <NEXT> if z0 ! = 0 goto label3 <NEXT> label $ z2 = 0 <NEXT> if z0 == 0 goto label1 <NEXT> label r6 = new org fife ui rsyntaxtextarea default token painter <NEXT> $ r4 = r6 <NEXT> specialinvoke r6 < init > <END>
<BEG> r0 = @ this <NEXT> return \ `` r syntax text area u i action map\ `` <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r6 = org fife ui rsyntaxtextarea r syntax text area u i r0 <NEXT> r1 = r6 get visible editor rect <NEXT> if r1 == null goto label1 <NEXT> r7 = org fife ui rsyntaxtextarea r syntax text area u i r0 <NEXT> $ r3 = r7 text area <NEXT> r8 = org fife ui rsyntaxtextarea r syntax text area u i r0 <NEXT> r9 = javax swing text j text component $ r3 <NEXT> $ r4 = r8 get root view r9 <NEXT> $ r5 = $ r4 get view 0 <NEXT> r2 = org fife ui rsyntaxtextarea r s t a view $ r5 <NEXT> $ i1 = r2 y for line r1 i0 <NEXT> return $ i1 <NEXT> if r1 == null goto label1 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rsyntaxtextarea template abstract code template r0 <NEXT> $ r1 = r2 id <NEXT> $ i0 = $ r1 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` id can not be null\ `` <NEXT> throw r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org fife ui rsyntaxtextarea template abstract code template r0 <NEXT> r4 id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rsyntaxtextarea templates static code template r0 <NEXT> $ r1 = r2 after caret <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rsyntaxtextarea text editor pane r0 <NEXT> $ r1 = r2 loc <NEXT> $ z0 = $ r1 be local and exist <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org fife ui rsyntaxtextarea text editor pane r0 <NEXT> $ z1 = r3 read only <NEXT> if $ z1 == z0 goto label3 <NEXT> r4 = org fife ui rsyntaxtextarea text editor pane r0 <NEXT> r4 read only = z0 <NEXT> if z0 ! = 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label r5 = org fife ui rsyntaxtextarea text editor pane r0 <NEXT> r5 fire property change \ `` text editor pane read only\ <NEXT> label return <NEXT> if z0 ! = 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = org fife ui rsyntaxtextarea wrap syntax view r0 <NEXT> $ i2 = r1 tab size <NEXT> if $ i2 ! = 0 goto label1 <NEXT> return f0 <NEXT> if $ i2 ! = 0 goto label1 <NEXT> label $ i4 = int f0 <NEXT> r2 = org fife ui rsyntaxtextarea wrap syntax view r0 <NEXT> $ i3 = r2 tab base <NEXT> $ i6 = $ i4 - $ i3 <NEXT> r3 = org fife ui rsyntaxtextarea wrap syntax view r0 <NEXT> $ i5 = r3 tab size <NEXT> i1 = $ i6 $ i5 <NEXT> r4 = org fife ui rsyntaxtextarea wrap syntax view r0 <NEXT> $ i7 = r4 tab base <NEXT> $ f5 = float $ i7 <NEXT> $ f1 = float i1 <NEXT> $ f3 = $ f1 + 1 0f <NEXT> r5 = org fife ui rsyntaxtextarea wrap syntax view r0 <NEXT> $ i8 = r5 tab size <NEXT> $ f2 = float $ i8 <NEXT> $ f4 = $ f3 * $ f2 <NEXT> $ f6 = $ f5 + $ f4 <NEXT> return $ f6 <END>
<BEG> $ r0 = org fife ui rtextarea clipboard history instance <NEXT> if $ r0 ! = null goto label1 <NEXT> $ r2 = new org fife ui rtextarea clipboard history <NEXT> specialinvoke $ r2 < init > <NEXT> org fife ui rtextarea clipboard history instance = $ r2 <NEXT> label $ r1 = org fife ui rtextarea clipboard history instance <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = new java util array list <NEXT> r5 = org fife ui rtextarea clipboard history r0 <NEXT> $ r3 = r5 history <NEXT> specialinvoke r4 < init > $ r3 <NEXT> java util collection reverse r4 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rtextarea gutter r0 <NEXT> $ r1 = r2 line number font <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org fife ui rtextarea gutter r0 <NEXT> $ z1 = r3 icon row header inherits gutter background <NEXT> if z0 == $ z1 goto label1 <NEXT> r4 = org fife ui rtextarea gutter r0 <NEXT> r4 icon row header inherits gutter background = z0 <NEXT> r5 = org fife ui rtextarea gutter r0 <NEXT> $ r1 = r5 icon area <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org fife ui rtextarea gutter r0 <NEXT> $ r2 = r6 icon area <NEXT> $ r2 set inherits gutter background z0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rtextarea image background painter strategy r0 <NEXT> $ r1 = r2 text area <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org fife ui rtextarea r document r0 <NEXT> $ r1 = r3 get content <NEXT> $ r2 = org fife ui rtextarea r document $ r gap content $ r1 <NEXT> $ c1 = $ r2 char at i0 <NEXT> return $ c1 <END>
<BEG> r0 = @ this <NEXT> r3 = org fife ui rtextarea recordable text action r0 <NEXT> $ r1 = r3 get value \ `` name\ `` <NEXT> $ r2 = java lang string $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org fife ui rtextarea recordable text action r0 <NEXT> r2 put value \ `` accelerator key\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org fife ui rtextarea recordable text action r0 <NEXT> r1 be recordable = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org fife ui rtextarea r text area base r0 <NEXT> $ i0 = r1 margin size in char <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org fife ui rtextarea r text area base r0 <NEXT> r3 margin line color = r1 <NEXT> r4 = org fife ui rtextarea r text area base r0 <NEXT> $ z0 = r4 margin line enable <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org fife ui rtextarea r text area base r0 <NEXT> r2 = r5 get visible rect <NEXT> r6 = org fife ui rtextarea r text area base r0 <NEXT> $ i2 = r6 margin line x <NEXT> $ i1 = r2 y <NEXT> $ i0 = r2 height <NEXT> r7 = org fife ui rtextarea r text area base r0 <NEXT> r7 repaint $ i2 $ i1 1 $ i0 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org fife ui rtextarea r text area u i <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = javax swing plaf component u i r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org fife ui rtextarea r text area u i r0 <NEXT> $ r1 = r2 text area <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org fife ui rtextarea search context r0 <NEXT> $ z0 = r1 match case <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org fife ui rtextarea search context r0 <NEXT> $ z0 = r1 selection only <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r5 = org fife ui rtextarea search context r0 <NEXT> $ z1 = r5 selection only <NEXT> if z0 == $ z1 goto label3 <NEXT> r6 = org fife ui rtextarea search context r0 <NEXT> r6 selection only = z0 <NEXT> if z0 ! = 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label r7 = org fife ui rtextarea search context r0 <NEXT> r7 fire property change \ `` search selection only\ <NEXT> if z0 == 0 goto label3 <NEXT> r4 = new java lang unsupported operation exception <NEXT> specialinvoke r4 < init > \ `` search in selection be not currently supported\ `` <NEXT> throw r4 <NEXT> if z0 == 0 goto label3 <NEXT> label return <NEXT> if z0 ! = 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i3 = 0 <NEXT> label r2 = org fife util dynamic int array r0 <NEXT> $ i1 = r2 size <NEXT> if i3 > = $ i1 goto label3 <NEXT> r3 = org fife util dynamic int array r0 <NEXT> $ r1 = r3 data <NEXT> $ i2 = $ r1 [ i3 ] <NEXT> if $ i2 ! = i0 goto label2 <NEXT> return 1 <NEXT> if $ i2 ! = i0 goto label2 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i1 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org fife util dynamic int array r0 <NEXT> $ i2 = r4 size <NEXT> if i0 < $ i2 goto label1 <NEXT> r5 = org fife util dynamic int array r0 <NEXT> specialinvoke r5 throw exception i0 <NEXT> label r6 = org fife util dynamic int array r0 <NEXT> $ i3 = r6 size <NEXT> $ i4 = $ i3 - i0 <NEXT> i1 = $ i4 - 1 <NEXT> if i1 < = 0 goto label2 <NEXT> r7 = org fife util dynamic int array r0 <NEXT> $ r2 = r7 data <NEXT> $ i7 = i0 + 1 <NEXT> r8 = org fife util dynamic int array r0 <NEXT> $ r1 = r8 data <NEXT> java lang system arraycopy $ r2 $ i7 $ r1 i0 i1 <NEXT> label r9 = org fife util dynamic int array r0 <NEXT> $ i5 = r9 size <NEXT> $ i6 = $ i5 - 1 <NEXT> r10 = org fife util dynamic int array r0 <NEXT> r10 size = $ i6 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> io reactivex internal function object helper require non null r0 \ `` run be null\ `` <NEXT> r3 = new io reactivex disposables runnable disposable <NEXT> specialinvoke r3 < init > r0 <NEXT> r4 = io reactivex disposables disposable r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = io reactivex flowables connectable flowable r0 <NEXT> $ r1 = r2 auto connect 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> label r5 = io reactivex internal disposable array composite disposable r0 <NEXT> $ r3 = r5 get i0 <NEXT> r2 = io reactivex disposables disposable $ r3 <NEXT> $ r4 = io reactivex internal disposable disposable helper dispose <NEXT> if r2 ! = $ r4 goto label2 <NEXT> r1 dispose <NEXT> return 0 <NEXT> if r2 ! = $ r4 goto label2 <NEXT> label r6 = io reactivex internal disposable array composite disposable r0 <NEXT> $ z0 = r6 compare and set i0 r2 r1 <NEXT> if $ z0 == 0 goto label4 <NEXT> if r2 == null goto label3 <NEXT> r2 dispose <NEXT> label return 1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label goto label1 <END>
<BEG> r0 = @ this <NEXT> r7 = io reactivex internal observer block multi observer r0 <NEXT> $ l0 = r7 get count <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 == 0 goto label4 <NEXT> label io reactivex internal util block helper verify non block <NEXT> r8 = io reactivex internal observer block multi observer r0 <NEXT> r8 await <NEXT> label goto label4 <NEXT> label r10 = io reactivex internal observer block multi observer r0 <NEXT> r6 = r10 error <NEXT> if r6 == null goto label5 <NEXT> $ r2 = io reactivex internal util exception helper wrap or throw r6 <NEXT> throw $ r2 <NEXT> if r6 == null goto label5 <NEXT> label r11 = io reactivex internal observer block multi observer r0 <NEXT> $ r1 = r11 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> l0 = r4 produce <NEXT> $ b2 = l0 cmp 0l <NEXT> if $ b2 == 0 goto label1 <NEXT> io reactivex internal util backpressure helper produce r0 l0 <NEXT> label r5 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> l1 = r5 get <NEXT> $ l6 = l1 & -9223372036854775808l <NEXT> $ b7 = $ l6 cmp 0l <NEXT> if $ b7 == 0 goto label2 <NEXT> r6 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> r6 on drop r1 <NEXT> return <NEXT> if $ b7 == 0 goto label2 <NEXT> label $ l3 = l1 & 9223372036854775807l <NEXT> $ b4 = $ l3 cmp 0l <NEXT> if $ b4 == 0 goto label3 <NEXT> r7 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> r7 lazy set -9223372036854775807l <NEXT> r8 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> $ r2 = r8 actual <NEXT> $ r2 on next r1 <NEXT> r9 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> $ r3 = r9 actual <NEXT> $ r3 on complete <NEXT> if $ b4 == 0 goto label3 <NEXT> label r10 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> r10 value = r1 <NEXT> r11 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> $ z0 = r11 compare and set 0l -9223372036854775808l <NEXT> if $ z0 == 0 goto label4 <NEXT> label r12 = io reactivex internal subscriber single post complete subscriber r0 <NEXT> r12 value = null <NEXT> goto label1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = io reactivex internal subscription empty subscription instance <NEXT> r3 = org reactivestreams subscription $ r2 <NEXT> r1 on subscribe r3 <NEXT> r1 on error r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io reactivex internal util append only link array list r0 <NEXT> i0 = r5 capacity <NEXT> r6 = io reactivex internal util append only link array list r0 <NEXT> i3 = r6 offset <NEXT> if i3 ! = i0 goto label1 <NEXT> $ i2 = i0 + 1 <NEXT> r2 = newarray java lang object [ $ i2 ] <NEXT> r7 = io reactivex internal util append only link array list r0 <NEXT> $ r4 = r7 tail <NEXT> $ r4 [ i0 ] = r2 <NEXT> r8 = io reactivex internal util append only link array list r0 <NEXT> r8 tail = r2 <NEXT> i3 = 0 <NEXT> label r9 = io reactivex internal util append only link array list r0 <NEXT> $ r3 = r9 tail <NEXT> $ r3 [ i3 ] = r1 <NEXT> $ i1 = i3 + 1 <NEXT> r10 = io reactivex internal util append only link array list r0 <NEXT> r10 offset = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io reactivex internal util append only link array list r0 <NEXT> r5 = r6 head <NEXT> r7 = io reactivex internal util append only link array list r0 <NEXT> i0 = r7 capacity <NEXT> label if r5 == null goto label6 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label5 <NEXT> r2 = r5 [ i1 ] <NEXT> if r2 ! = null goto label3 <NEXT> goto label5 <NEXT> label $ r3 = r5 [ i0 ] <NEXT> $ r4 = java lang object [ ] $ r3 <NEXT> r5 = java lang object [ ] $ r4 <NEXT> goto label1 <NEXT> if r2 ! = null goto label3 <NEXT> label $ z0 = io reactivex internal util notification lite accept full r2 r1 <NEXT> if $ z0 == 0 goto label4 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if r5 == null goto label6 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> label l1 = r0 get <NEXT> $ b3 = l1 cmp -9223372036854775808l <NEXT> if $ b3 ! = 0 goto label2 <NEXT> return -9223372036854775808l <NEXT> if $ b3 ! = 0 goto label2 <NEXT> label $ b4 = l1 cmp 9223372036854775807l <NEXT> if $ b4 ! = 0 goto label3 <NEXT> return 9223372036854775807l <NEXT> if $ b4 ! = 0 goto label3 <NEXT> label l2 = io reactivex internal util backpressure helper add cap l1 l0 <NEXT> $ z0 = r0 compare and set l1 l2 <NEXT> if $ z0 == 0 goto label4 <NEXT> return l1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label goto label1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> io reactivex internal function object helper require non null r1 \ `` next be null\ `` <NEXT> $ z0 = r0 compare and set null r1 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r1 dispose <NEXT> $ r4 = r0 get <NEXT> $ r5 = io reactivex internal disposable disposable helper dispose <NEXT> if $ r4 == $ r5 goto label1 <NEXT> io reactivex internal util end consumer helper report double subscription r2 <NEXT> label return 0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new io reactivex internal util notification lite $ error notification <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io reactivex observer base test consumer r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = io reactivex observer base test consumer r0 <NEXT> $ r5 = r13 error <NEXT> i0 = $ r5 size <NEXT> if i0 ! = 0 goto label01 <NEXT> r14 = io reactivex observer base test consumer r0 <NEXT> $ r10 = r14 fail \ `` no errors\ `` <NEXT> throw $ r10 <NEXT> if i0 ! = 0 goto label01 <NEXT> label z2 = 0 <NEXT> r15 = io reactivex observer base test consumer r0 <NEXT> $ r6 = r15 error <NEXT> r2 = $ r6 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label08 <NEXT> $ r9 = r2 next <NEXT> r3 = java lang throwable $ r9 <NEXT> label $ z1 = r1 test r3 <NEXT> if $ z1 == 0 goto label05 <NEXT> z2 = 1 <NEXT> label goto label08 <NEXT> label if z2 == 0 goto label09 <NEXT> if i0 == 1 goto label10 <NEXT> r16 = io reactivex observer base test consumer r0 <NEXT> $ r8 = r16 fail \ `` error present but other error a well\ `` <NEXT> throw $ r8 <NEXT> if i0 == 1 goto label10 <NEXT> label r18 = io reactivex observer base test consumer r0 <NEXT> return r18 <NEXT> label if z2 == 0 goto label09 <NEXT> label r17 = io reactivex observer base test consumer r0 <NEXT> $ r7 = r17 fail \ `` error not present\ `` <NEXT> throw $ r7 <NEXT> if $ z1 == 0 goto label05 <NEXT> label goto label07 <NEXT> label goto label02 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = io reactivex observer base test consumer r0 <NEXT> $ r4 = r18 value <NEXT> i0 = $ r4 size <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label6 <NEXT> r19 = io reactivex observer base test consumer r0 <NEXT> $ r5 = r19 value <NEXT> r2 = $ r5 get i1 <NEXT> label $ z0 = r1 test r2 <NEXT> if $ z0 == 0 goto label3 <NEXT> r17 = new java lang string builder <NEXT> specialinvoke r17 < init > <NEXT> $ r7 = r17 append \ `` value at position \ `` <NEXT> $ r8 = $ r7 append i1 <NEXT> $ r9 = $ r8 append \ `` match predicate \ `` <NEXT> $ r10 = r1 to string <NEXT> $ r11 = $ r9 append $ r10 <NEXT> $ r12 = $ r11 append \ <NEXT> $ r13 = $ r12 to string <NEXT> r20 = io reactivex observer base test consumer r0 <NEXT> $ r14 = r20 fail $ r13 <NEXT> throw $ r14 <NEXT> if $ z0 == 0 goto label3 <NEXT> label goto label5 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label6 <NEXT> label r21 = io reactivex observer base test consumer r0 <NEXT> return r21 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io reactivex observer base test consumer r0 <NEXT> r5 assert value at 0 r1 <NEXT> r6 = io reactivex observer base test consumer r0 <NEXT> $ r3 = r6 value <NEXT> $ i0 = $ r3 size <NEXT> if $ i0 < = 1 goto label1 <NEXT> r7 = io reactivex observer base test consumer r0 <NEXT> $ r4 = r7 fail \ `` value present but other value a well\ `` <NEXT> throw $ r4 <NEXT> if $ i0 < = 1 goto label1 <NEXT> label r8 = io reactivex observer base test consumer r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r10 = io reactivex observer base test consumer r0 <NEXT> $ r1 = r10 value <NEXT> i1 = $ r1 size <NEXT> if i1 == i0 goto label1 <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r3 = r9 append \ `` value count differ expect \ `` <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 append \ <NEXT> $ r6 = $ r5 append i1 <NEXT> $ r7 = $ r6 to string <NEXT> r11 = io reactivex observer base test consumer r0 <NEXT> $ r8 = r11 fail $ r7 <NEXT> throw $ r8 <NEXT> if i1 == i0 goto label1 <NEXT> label r12 = io reactivex observer base test consumer r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r3 = io reactivex observer base test consumer r0 <NEXT> $ r1 = r3 do <NEXT> $ l0 = $ r1 get count <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 ! = 0 goto label1 <NEXT> r4 = io reactivex observer base test consumer r0 <NEXT> $ r2 = r4 fail \ `` subscriber terminate ! \ `` <NEXT> throw $ r2 <NEXT> if $ b1 ! = 0 goto label1 <NEXT> label r5 = io reactivex observer base test consumer r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r17 = io reactivex observer base test consumer r0 <NEXT> $ r4 = r17 error <NEXT> i0 = $ r4 size <NEXT> if i0 ! = 0 goto label1 <NEXT> r18 = io reactivex observer base test consumer r0 <NEXT> $ r15 = r18 fail \ `` no errors\ `` <NEXT> throw $ r15 <NEXT> if i0 ! = 0 goto label1 <NEXT> label if i0 ! = 1 goto label3 <NEXT> r19 = io reactivex observer base test consumer r0 <NEXT> $ r6 = r19 error <NEXT> $ r7 = $ r6 get 0 <NEXT> r2 = java lang throwable $ r7 <NEXT> r3 = r2 get message <NEXT> $ z0 = io reactivex internal function object helper equal r1 r3 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r9 = r16 append \ `` error message differs expect \ `` <NEXT> $ r10 = $ r9 append r1 <NEXT> $ r11 = $ r10 append \ <NEXT> $ r12 = $ r11 append r3 <NEXT> $ r13 = $ r12 to string <NEXT> r20 = io reactivex observer base test consumer r0 <NEXT> $ r14 = r20 fail $ r13 <NEXT> throw $ r14 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label goto label4 <NEXT> label r22 = io reactivex observer base test consumer r0 <NEXT> return r22 <NEXT> label if i0 ! = 1 goto label3 <NEXT> label r21 = io reactivex observer base test consumer r0 <NEXT> $ r5 = r21 fail \ `` multiple errors\ `` <NEXT> throw $ r5 <END>
<BEG> r0 = @ this <NEXT> r8 = new java util array list <NEXT> specialinvoke r8 < init > <NEXT> r10 = io reactivex observer base test consumer r0 <NEXT> $ r4 = r10 value <NEXT> r8 add $ r4 <NEXT> r11 = io reactivex observer base test consumer r0 <NEXT> $ r5 = r11 error <NEXT> r8 add $ r5 <NEXT> r9 = new java util array list <NEXT> specialinvoke r9 < init > <NEXT> l2 = 0l <NEXT> label r12 = io reactivex observer base test consumer r0 <NEXT> $ l0 = r12 completion <NEXT> $ b1 = l2 cmp $ l0 <NEXT> if $ b1 > = 0 goto label2 <NEXT> $ r7 = io reactivex notification create on complete <NEXT> r9 add $ r7 <NEXT> l2 = l2 + 1l <NEXT> goto label1 <NEXT> if $ b1 > = 0 goto label2 <NEXT> label r8 add r9 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io reactivex observer base test consumer r0 <NEXT> $ r2 = r6 assert subscribe <NEXT> $ r3 = $ r2 assert value r1 <NEXT> $ r4 = $ r3 assert no error <NEXT> $ r5 = $ r4 assert complete <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io reactivex observer base test consumer r0 <NEXT> r2 tag = r1 <NEXT> r3 = io reactivex observer base test consumer r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> l1 = @ parameter2 <NEXT> l2 = java lang system current time millis <NEXT> label $ b3 = l1 cmp 0l <NEXT> if $ b3 < = 0 goto label2 <NEXT> $ l7 = java lang system current time millis <NEXT> $ l8 = $ l7 - l2 <NEXT> $ b9 = $ l8 cmp l1 <NEXT> if $ b9 < 0 goto label2 <NEXT> r4 = io reactivex observer base test consumer r0 <NEXT> r4 timeout = 1 <NEXT> goto label5 <NEXT> label r7 = io reactivex observer base test consumer r0 <NEXT> return r7 <NEXT> if $ b9 < 0 goto label2 <NEXT> label r5 = io reactivex observer base test consumer r0 <NEXT> $ r2 = r5 do <NEXT> $ l4 = $ r2 get count <NEXT> $ b5 = $ l4 cmp 0l <NEXT> if $ b5 ! = 0 goto label3 <NEXT> label r6 = io reactivex observer base test consumer r0 <NEXT> $ r3 = r6 value <NEXT> $ i6 = $ r3 size <NEXT> if $ i6 < i0 goto label4 <NEXT> label r1 run <NEXT> goto label1 <END>
<BEG> z0 = @ parameter0 <NEXT> $ z1 = io reactivex plugins rx java plugins lockdown <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r0 = new java lang illegal state exception <NEXT> specialinvoke $ r0 < init > \ `` plugins can\'t be change anymore\ `` <NEXT> throw $ r0 <NEXT> if $ z1 == 0 goto label1 <NEXT> label io reactivex plugins rx java plugins fail non block scheduler = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = io reactivex scheduler time r0 <NEXT> $ l0 = r1 time <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = io reactivex scheduler time r0 <NEXT> $ l0 = r1 time <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = io reactivex internal function function empty consumer <NEXT> $ r2 = io reactivex internal function function on_error_missing <NEXT> r4 = io reactivex single r0 <NEXT> $ r3 = r4 subscribe $ r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r5 = io reactivex subject completable subject r0 <NEXT> $ r1 = r5 observer <NEXT> $ r2 = $ r1 get <NEXT> $ r3 = io reactivex subject completable subject terminate <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> r6 = io reactivex subject completable subject r0 <NEXT> $ r4 = r6 error <NEXT> return $ r4 <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r5 = io reactivex subject maybe subject r0 <NEXT> $ r1 = r5 observer <NEXT> $ r2 = $ r1 get <NEXT> $ r3 = io reactivex subject maybe subject terminate <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> r6 = io reactivex subject maybe subject r0 <NEXT> $ r4 = r6 value <NEXT> return $ r4 <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r2 = io reactivex subscriber default subscriber r0 <NEXT> r1 = r2 s <NEXT> if r1 == null goto label1 <NEXT> r1 request l0 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> $ r2 = new java lang null pointer exception <NEXT> specialinvoke $ r2 < init > r1 <NEXT> throw $ r2 <NEXT> if r0 ! = null goto label1 <NEXT> label return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = io reactivex observer base test consumer r0 <NEXT> r13 assert no value <NEXT> r14 = io reactivex observer base test consumer r0 <NEXT> return r14 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r15 = io reactivex observer base test consumer r0 <NEXT> $ r4 = r15 value <NEXT> r2 = $ r4 iterator <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> r3 = r2 next <NEXT> $ z2 = r1 contain r3 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r6 = r12 append \ `` value not in the expected collection \ `` <NEXT> $ r7 = io reactivex observer base test consumer value and class r3 <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> r16 = io reactivex observer base test consumer r0 <NEXT> $ r10 = r16 fail $ r9 <NEXT> throw $ r10 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> label goto label2 <NEXT> if $ z1 == 0 goto label4 <NEXT> label r17 = io reactivex observer base test consumer r0 <NEXT> return r17 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> io reactivex internal function object helper require non null r1 \ `` predicate\ `` <NEXT> io reactivex internal function object helper require non null r2 \ `` error handler be null\ `` <NEXT> r7 = new io reactivex internal operator parallel parallel filter try <NEXT> r8 = io reactivex parallel parallel flowable r0 <NEXT> specialinvoke r7 < init > r8 r1 r2 <NEXT> r9 = io reactivex parallel parallel flowable r7 <NEXT> $ r6 = io reactivex plugins rx java plugins on assembly r9 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r5 = io reactivex processor multicast processor r0 <NEXT> $ r2 = r5 upstream <NEXT> $ r1 = io reactivex internal subscription empty subscription instance <NEXT> r6 = org reactivestreams subscription $ r1 <NEXT> $ z0 = io reactivex internal subscription subscription helper set once $ r2 r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = new io reactivex internal queue spsc array queue <NEXT> r7 = io reactivex processor multicast processor r0 <NEXT> $ i0 = r7 buffer size <NEXT> specialinvoke r4 < init > $ i0 <NEXT> r8 = io reactivex processor multicast processor r0 <NEXT> r9 = io reactivex internal fuseable simple queue r4 <NEXT> r8 queue = r9 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = io reactivex processor replay processor r0 <NEXT> $ r1 = r2 buffer <NEXT> $ r1 trim head <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = scala jdk javaapi stream converter a java seq double stream r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new io sentry breadcrumb <NEXT> specialinvoke $ r3 < init > <NEXT> $ r3 set type \ `` http\ `` <NEXT> $ r3 set category \ `` http\ `` <NEXT> $ r3 set data \ `` url\ <NEXT> $ r4 = java util locale root <NEXT> $ r5 = r1 to upper case $ r4 <NEXT> $ r3 set data \ `` method\ <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r4 = io sentry breadcrumb r0 <NEXT> $ r1 = r4 timestamp <NEXT> $ r2 = $ r1 clone <NEXT> $ r3 = java util date $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = io sentry breadcrumb r0 <NEXT> $ r1 = r2 level <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io sentry dsn r0 <NEXT> $ r1 = r2 path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = io sentry exception exception mechanism exception r0 <NEXT> $ z0 = r1 snapshot <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io sentry protocol sentry exception r0 <NEXT> r2 thread id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = new java util hash map <NEXT> specialinvoke r6 < init > <NEXT> r6 put \ `` value\ <NEXT> r7 = io sentry scope r0 <NEXT> r7 set context r1 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io sentry diagnostic logger r0 <NEXT> $ r3 = r5 option <NEXT> r2 = $ r3 get diagnostic level <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label r6 = io sentry diagnostic logger r0 <NEXT> $ r4 = r6 option <NEXT> $ z0 = $ r4 be debug <NEXT> if $ z0 == 0 goto label2 <NEXT> $ i0 = r1 ordinal <NEXT> $ i1 = r2 ordinal <NEXT> if $ i0 < $ i1 goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ i0 < $ i1 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = io sentry sentry get current hub <NEXT> $ r2 add breadcrumb r0 r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r1 = io sentry sentry get current hub <NEXT> $ r2 = $ r1 start transaction r0 z0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = io sentry sentry option r0 <NEXT> $ r1 = r2 environment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io sentry sentry option r0 <NEXT> $ r2 = r3 in app include <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = io sentry sentry option r0 <NEXT> $ r1 = r2 envelope disk cache <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io sentry sentry option r0 <NEXT> $ r1 = r2 proguard uuid <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = io sentry date utils get current date time <NEXT> r2 = io sentry session r0 <NEXT> r2 end $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = io sentry user feedback r0 <NEXT> $ r1 = r2 event id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io sentry user feedback r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io sentry user feedback r0 <NEXT> r2 email = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = io sentry user feedback r0 <NEXT> $ r1 = r2 comment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org ehcache sizeof impl jvm information r0 <NEXT> $ r1 = r2 parent <NEXT> $ i0 = $ r1 get object alignment <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> r10 = new java lang illegal argument exception <NEXT> specialinvoke r10 < init > \ `` key can not be null\ `` <NEXT> throw r10 <NEXT> if r1 ! = null goto label1 <NEXT> label r12 = org slf4j helper basic m d c adapter r0 <NEXT> $ r3 = r12 inheritable thread local <NEXT> $ r4 = $ r3 get <NEXT> r9 = java util hash map $ r4 <NEXT> if r9 ! = null goto label2 <NEXT> r11 = new java util hash map <NEXT> specialinvoke r11 < init > <NEXT> r9 = r11 <NEXT> r13 = org slf4j helper basic m d c adapter r0 <NEXT> $ r7 = r13 inheritable thread local <NEXT> $ r7 set r11 <NEXT> label r9 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org slf4j marker factory marker factory <NEXT> $ r2 = $ r1 get detach marker r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> $ r5 = new java lang illegal argument exception <NEXT> specialinvoke $ r5 < init > \ `` key parameter can not be null\ `` <NEXT> throw $ r5 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r2 = org slf4j mdc mdc adapter <NEXT> if $ r2 ! = null goto label2 <NEXT> $ r4 = new java lang illegal state exception <NEXT> specialinvoke $ r4 < init > \ `` m d c adapter can not be null see also http www slf4j org code html #null_ m d c a\ `` <NEXT> throw $ r4 <NEXT> if $ r2 ! = null goto label2 <NEXT> label $ r3 = org slf4j mdc mdc adapter <NEXT> $ r3 put r0 r1 <NEXT> return <END>
<BEG> $ r0 = org slf4j mdc mdc adapter <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org slf4j impl simple logger r0 <NEXT> specialinvoke r3 format and log 20 r1 r2 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org slf4j impl simple logger r0 <NEXT> specialinvoke r3 format and log 30 r1 r2 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = org slf4j impl simple logger r0 <NEXT> specialinvoke r4 format and log 40 r1 r2 r3 <NEXT> return <END>
<BEG> $ r1 = io vertx core buffer buffer buffer <NEXT> r0 = io vertx axle core buffer buffer new instance $ r1 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core buffer buffer r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 to string <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = io vertx axle core buffer buffer r0 <NEXT> $ r1 = r2 delegate <NEXT> b1 = $ r1 get byte i0 <NEXT> return b1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = io vertx axle core buffer buffer r0 <NEXT> $ r1 = r2 delegate <NEXT> l1 = $ r1 get unsigned int i0 <NEXT> return l1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> r3 = io vertx axle core buffer buffer r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set long l e i0 l1 <NEXT> r4 = io vertx axle core buffer buffer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> r3 = io vertx axle core buffer buffer r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set float i0 f0 <NEXT> r4 = io vertx axle core buffer buffer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core buffer buffer r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 get byte buf <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = io vertx axle core cli cli r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set priority i0 <NEXT> r4 = io vertx axle core cli cli r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx axle core cli command line r0 <NEXT> $ r3 = r4 delegate <NEXT> r2 = $ r3 get raw value for argument r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io vertx axle core cli command line r0 <NEXT> $ r2 = r3 delegate <NEXT> z0 = $ r2 accept more value r1 <NEXT> return z0 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core context r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 config <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx axle core context r0 <NEXT> $ r1 = r2 delegate <NEXT> z0 = $ r1 be worker context <NEXT> return z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx axle core context r0 <NEXT> $ r3 = r4 delegate <NEXT> r2 = $ r3 get r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r6 = io vertx axle core datagram datagram socket r0 <NEXT> $ r3 = r6 delegate <NEXT> $ r4 = $ r3 sender i0 r1 <NEXT> $ r5 = io vertx axle core datagram datagram socket type_arg_1 <NEXT> r2 = io vertx axle core stream write stream new instance $ r4 $ r5 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core dns srv record r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 protocol <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core dns srv record r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 service <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx axle core eventbus event bus r0 <NEXT> $ r3 = r6 delegate <NEXT> $ r4 = $ r3 sender r1 <NEXT> $ r5 = io vertx lang axle type arg unknown <NEXT> r2 = io vertx axle core eventbus message producer new instance $ r4 $ r5 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core eventbus message producer r0 <NEXT> $ r1 = message producer $ lambda_end_4__6 bootstrap $ r3 <NEXT> $ r2 = io vertx axle async result completion stage to completion stage $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx axle core file file prop r0 <NEXT> $ r1 = r2 delegate <NEXT> l0 = $ r1 last access time <NEXT> return l0 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx axle core file file prop r0 <NEXT> $ r1 = r2 delegate <NEXT> z0 = $ r1 be other <NEXT> return z0 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx axle core file file prop r0 <NEXT> $ r1 = r2 delegate <NEXT> l0 = $ r1 size <NEXT> return l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = io vertx axle core file file system r0 <NEXT> $ r4 = file system $ lambda_chmod recursive_8__8 bootstrap $ r6 r1 r2 r3 <NEXT> $ r5 = io vertx axle async result completion stage to completion stage $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx axle core file file system r0 <NEXT> $ r3 = file system $ lambda_link_12__12 bootstrap $ r5 r1 r2 <NEXT> $ r4 = io vertx axle async result completion stage to completion stage $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx axle core file file system r0 <NEXT> $ r2 = file system $ lambda_unlink_14__14 bootstrap $ r4 r1 <NEXT> $ r3 = io vertx axle async result completion stage to completion stage $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx axle core file file system r0 <NEXT> $ r2 = file system $ lambda_read symlink_15__15 bootstrap $ r4 r1 <NEXT> $ r3 = io vertx axle async result completion stage to completion stage $ r2 <NEXT> return $ r3 <END>
<BEG> $ r1 = io vertx core future succeed future <NEXT> $ r2 = io vertx lang axle type arg unknown <NEXT> r0 = io vertx axle core future new instance $ r1 $ r2 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = io vertx axle core composite future r0 <NEXT> $ r4 = r8 delegate <NEXT> r7 = new io vertx axle core composite future $ 5 <NEXT> r9 = io vertx axle core composite future r0 <NEXT> specialinvoke r7 < init > r9 r1 <NEXT> r10 = java util function function r7 <NEXT> $ r5 = $ r4 map r10 <NEXT> $ r6 = io vertx lang axle type arg unknown <NEXT> r2 = io vertx axle core future new instance $ r5 $ r6 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx axle core http cookie r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 set path r1 <NEXT> r5 = io vertx axle core http cookie r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = io vertx axle core http cookie r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set secure z0 <NEXT> r4 = io vertx axle core http cookie r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = io vertx axle core http http client r0 <NEXT> $ r4 = r6 delegate <NEXT> $ r5 = $ r4 request r1 r2 <NEXT> r3 = io vertx axle core http http client request new instance $ r5 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx axle core http http client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = io vertx axle core http http client request new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx axle core http http client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 get abs r1 <NEXT> r2 = io vertx axle core http http client request new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx axle core http http client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 post ab r1 <NEXT> r2 = io vertx axle core http http client request new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx axle core http http client r0 <NEXT> $ r2 = http client $ lambda_web socket_4__87 bootstrap $ r4 r1 <NEXT> $ r3 = io vertx axle async result completion stage to completion stage $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r10 = io vertx axle core http http client r0 <NEXT> $ r6 = r10 delegate <NEXT> $ r7 = r3 get delegate <NEXT> $ r8 = $ r6 websocket stream i0 r1 r2 $ r7 r4 <NEXT> $ r9 = io vertx axle core http http client type_arg_7 <NEXT> r5 = io vertx axle core stream read stream new instance $ r8 $ r9 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r7 = io vertx axle core http http client r0 <NEXT> $ r4 = r7 delegate <NEXT> $ r5 = $ r4 websocket stream i0 r1 r2 <NEXT> $ r6 = io vertx axle core http http client type_arg_1 <NEXT> r3 = io vertx axle core stream read stream new instance $ r5 $ r6 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r5 = io vertx axle core http http connection r0 <NEXT> $ r2 = r5 delegate <NEXT> $ r3 = r1 get delegate <NEXT> $ r2 go away l0 i1 $ r3 <NEXT> r6 = io vertx axle core http http connection r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = io vertx axle core http http server request r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set expect multipart z0 <NEXT> r4 = io vertx axle core http http server request r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core http server web socket r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 binary handler i d <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx axle core json pointer json pointer r0 <NEXT> $ r1 = r2 delegate <NEXT> z0 = $ r1 be local pointer <NEXT> return z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = io vertx axle core json pointer json pointer r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 append i0 <NEXT> r4 = io vertx axle core json pointer json pointer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r4 = io vertx axle core json pointer json pointer r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 copy <NEXT> r1 = io vertx axle core json pointer json pointer new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io vertx axle core multi map r0 <NEXT> $ r2 = r3 delegate <NEXT> z0 = $ r2 contain r1 <NEXT> return z0 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core net net socket r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 write handler i d <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx axle core net self sign certificate r0 <NEXT> $ r1 = r2 delegate <NEXT> $ r1 delete <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core parsetools json parser r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 object event mode <NEXT> r4 = io vertx axle core parsetools json parser r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core shareddata async map r0 <NEXT> $ r1 = async map $ lambda_clear_10__11 bootstrap $ r3 <NEXT> $ r2 = io vertx axle async result completion stage to completion stage $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core shareddata async map r0 <NEXT> $ r1 = async map $ lambda_size_11__11 bootstrap $ r3 <NEXT> $ r2 = io vertx axle async result completion stage to completion stage $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core shareddata counter r0 <NEXT> $ r1 = counter $ lambda_increment and get_2__5 bootstrap $ r3 <NEXT> $ r2 = io vertx axle async result completion stage to completion stage $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r3 = io vertx axle core shareddata counter r0 <NEXT> $ r1 = counter $ lambda_add and get_5__2 bootstrap $ r3 l0 <NEXT> $ r2 = io vertx axle async result completion stage to completion stage $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> r3 = io vertx axle core shareddata counter r0 <NEXT> $ r1 = counter $ lambda_compare and set_7__6 bootstrap $ r3 l0 l1 <NEXT> $ r2 = io vertx axle async result completion stage to completion stage $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core stream pump r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 start <NEXT> r4 = io vertx axle core stream pump r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core stream pump r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 stop <NEXT> r4 = io vertx axle core stream pump r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r4 = io vertx axle core vertx r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 get or create context <NEXT> r1 = io vertx axle core context new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r4 = io vertx axle core vertx r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 create http client <NEXT> r1 = io vertx axle core http http client new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r6 = io vertx axle core vertx r0 <NEXT> $ r2 = r6 cached_0 <NEXT> if $ r2 == null goto label1 <NEXT> r7 = io vertx axle core vertx r0 <NEXT> $ r5 = r7 cached_0 <NEXT> return $ r5 <NEXT> if $ r2 == null goto label1 <NEXT> label r8 = io vertx axle core vertx r0 <NEXT> $ r3 = r8 delegate <NEXT> $ r4 = $ r3 file system <NEXT> r1 = io vertx axle core file file system new instance $ r4 <NEXT> r9 = io vertx axle core vertx r0 <NEXT> r9 cached_0 = r1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r4 = io vertx axle core vertx r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 timer stream l0 <NEXT> r1 = io vertx axle core timeout stream new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx axle core vertx r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 verticle factory <NEXT> return r1 <END>
<BEG> c0 = @ parameter0 <NEXT> $ r0 = io smallrye common constraint message log <NEXT> $ r1 = java lang character value of c0 <NEXT> $ r2 = $ r0 impossible switch case $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io smallrye config small rye config r0 <NEXT> r2 = r5 get config value r1 <NEXT> if r2 == null goto label1 <NEXT> $ r3 = r2 get value <NEXT> if $ r3 == null goto label1 <NEXT> $ r4 = r2 get value <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ r3 == null goto label1 <NEXT> label $ r4 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx mutiny core http http client r0 <NEXT> $ r2 = http client $ lambda_web socket_38__87 bootstrap $ r4 r1 <NEXT> $ r3 = io smallrye mutiny vertx async result uni to uni $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < = 1024 goto label1 <NEXT> r2 = new org yaml snakeyaml error y a m l exception <NEXT> specialinvoke r2 < init > \ `` the simple key must not span more than 1024 stream character see https yaml org spec 1 1 #id934537\ `` <NEXT> r3 = java lang throwable r2 <NEXT> throw r3 <NEXT> if i0 < = 1024 goto label1 <NEXT> label r4 = org yaml snakeyaml dumper option r0 <NEXT> r4 max simple key length = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org yaml snakeyaml dumper option r0 <NEXT> r2 non printable style = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org yaml snakeyaml event document start event r0 <NEXT> $ r1 = r2 version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org yaml snakeyaml loader option r0 <NEXT> r1 allow duplicate key = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org yaml snakeyaml node node r0 <NEXT> $ r1 = r2 tag <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org yaml snakeyaml node node r0 <NEXT> $ z0 = r1 resolve <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org yaml snakeyaml parser parser impl r0 <NEXT> r3 peek event <NEXT> r4 = org yaml snakeyaml parser parser impl r0 <NEXT> r1 = r4 current event <NEXT> r5 = org yaml snakeyaml parser parser impl r0 <NEXT> r5 current event = null <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org yaml snakeyaml reader stream reader r0 <NEXT> $ z0 = specialinvoke r2 ensure enough data <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org yaml snakeyaml reader stream reader r0 <NEXT> $ r1 = r3 data window <NEXT> r4 = org yaml snakeyaml reader stream reader r0 <NEXT> $ i0 = r4 pointer <NEXT> $ i1 = $ r1 [ $ i0 ] <NEXT> goto label2 <NEXT> label return $ i1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ i1 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = 0 goto label1 <NEXT> return \ `` \ `` <NEXT> if i0 ! = 0 goto label1 <NEXT> label r7 = org yaml snakeyaml reader stream reader r0 <NEXT> $ z0 = specialinvoke r7 ensure enough data i0 <NEXT> if $ z0 == 0 goto label2 <NEXT> r5 = new java lang string <NEXT> r8 = org yaml snakeyaml reader stream reader r0 <NEXT> $ r4 = r8 data window <NEXT> r9 = org yaml snakeyaml reader stream reader r0 <NEXT> $ i6 = r9 pointer <NEXT> specialinvoke r5 < init > $ r4 $ i6 i0 <NEXT> return r5 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r6 = new java lang string <NEXT> r10 = org yaml snakeyaml reader stream reader r0 <NEXT> $ r2 = r10 data window <NEXT> r11 = org yaml snakeyaml reader stream reader r0 <NEXT> $ i4 = r11 pointer <NEXT> r12 = org yaml snakeyaml reader stream reader r0 <NEXT> $ i2 = r12 data length <NEXT> r13 = org yaml snakeyaml reader stream reader r0 <NEXT> $ i1 = r13 pointer <NEXT> $ i3 = $ i2 - $ i1 <NEXT> $ i5 = java lang math min i0 $ i3 <NEXT> specialinvoke r6 < init > $ r2 $ i4 $ i5 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> label r4 = org yaml snakeyaml scanner scanner impl r0 <NEXT> $ z0 = specialinvoke r4 need more token <NEXT> if $ z0 == 0 goto label2 <NEXT> r5 = org yaml snakeyaml scanner scanner impl r0 <NEXT> specialinvoke r5 fetch more token <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r6 = org yaml snakeyaml scanner scanner impl r0 <NEXT> $ r1 = r6 token <NEXT> $ r2 = $ r1 get 0 <NEXT> $ r3 = org yaml snakeyaml tokens token $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org yaml snakeyaml type description r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org yaml snakeyaml type description r0 <NEXT> $ r4 = r7 property <NEXT> $ z0 = $ r4 contain key r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r8 = org yaml snakeyaml type description r0 <NEXT> r8 substitute property r1 null null null r2 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r9 = org yaml snakeyaml type description r0 <NEXT> $ r5 = r9 property <NEXT> $ r6 = $ r5 get r1 <NEXT> r3 = org yaml snakeyaml introspector property substitute $ r6 <NEXT> r3 set actual type argument r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new java io string writer <NEXT> specialinvoke r5 < init > <NEXT> r6 = org yaml snakeyaml yaml r0 <NEXT> specialinvoke r6 dump all r1 r5 null <NEXT> $ r4 = r5 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org yaml snakeyaml reader unicode reader <NEXT> specialinvoke r4 < init > r1 <NEXT> r5 = org yaml snakeyaml yaml r0 <NEXT> r6 = java io reader r4 <NEXT> $ r3 = r5 load all r6 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org yaml snakeyaml loader option r0 <NEXT> r1 max alias for collection = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r13 = new org yaml snakeyaml serializer serializer <NEXT> r12 = new org yaml snakeyaml emitter emitter <NEXT> r15 = org yaml snakeyaml yaml r0 <NEXT> $ r7 = r15 dumper option <NEXT> specialinvoke r12 < init > r2 $ r7 <NEXT> r16 = org yaml snakeyaml yaml r0 <NEXT> $ r9 = r16 resolver <NEXT> r17 = org yaml snakeyaml yaml r0 <NEXT> $ r8 = r17 dumper option <NEXT> r18 = org yaml snakeyaml emitter emitable r12 <NEXT> specialinvoke r13 < init > r18 $ r9 $ r8 null <NEXT> label r13 open <NEXT> r13 serialize r1 <NEXT> r13 close <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i1 = lengthof r0 <NEXT> $ i2 = $ i1 4 <NEXT> r1 = newarray int [ $ i2 ] <NEXT> $ r2 = org xerial snappy bit shuffle impl <NEXT> $ i3 = lengthof r0 <NEXT> i0 = $ r2 unshuffle r0 0 4 $ i3 r1 0 <NEXT> $ z0 = org xerial snappy bit shuffle $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ i4 = lengthof r0 <NEXT> if i0 == $ i4 goto label1 <NEXT> $ r3 = new java lang assertion error <NEXT> specialinvoke $ r3 < init > <NEXT> throw $ r3 <NEXT> if i0 == $ i4 goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i1 = lengthof r0 <NEXT> $ i2 = $ i1 4 <NEXT> r1 = newarray float [ $ i2 ] <NEXT> $ r2 = org xerial snappy bit shuffle impl <NEXT> $ i3 = lengthof r0 <NEXT> i0 = $ r2 unshuffle r0 0 4 $ i3 r1 0 <NEXT> $ z0 = org xerial snappy bit shuffle $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ i4 = lengthof r0 <NEXT> if i0 == $ i4 goto label1 <NEXT> $ r3 = new java lang assertion error <NEXT> specialinvoke $ r3 < init > <NEXT> throw $ r3 <NEXT> if i0 == $ i4 goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r1 = new java lang illegal argument exception <NEXT> specialinvoke $ r1 < init > \ `` pool be null\ `` <NEXT> throw $ r1 <NEXT> if r0 ! = null goto label1 <NEXT> label org xerial snappy pool default pool factory default pool = r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com sonar orchestrator build build r0 <NEXT> r2 additional argument = r1 <NEXT> r3 = com sonar orchestrator build build r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r25 = com sonar orchestrator orchestrator r0 <NEXT> $ r4 = r25 start <NEXT> $ z0 = $ r4 get and set 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r21 = new java lang illegal state exception <NEXT> specialinvoke r21 < init > \ `` orchestrator be already started\ `` <NEXT> throw r21 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r26 = com sonar orchestrator orchestrator r0 <NEXT> r26 install <NEXT> r27 = com sonar orchestrator orchestrator r0 <NEXT> $ r6 = r27 config <NEXT> r1 = $ r6 file system <NEXT> r23 = new com sonar orchestrator server server process impl <NEXT> r22 = new com sonar orchestrator server server command line factory <NEXT> specialinvoke r22 < init > r1 <NEXT> r28 = com sonar orchestrator orchestrator r0 <NEXT> $ r10 = r28 server <NEXT> r29 = com sonar orchestrator orchestrator r0 <NEXT> $ r9 = r29 startup log watcher <NEXT> specialinvoke r23 < init > r22 $ r10 $ r9 <NEXT> r30 = com sonar orchestrator orchestrator r0 <NEXT> r31 = com sonar orchestrator server server process r23 <NEXT> r30 process = r31 <NEXT> r32 = com sonar orchestrator orchestrator r0 <NEXT> $ r11 = r32 process <NEXT> $ r11 start <NEXT> r33 = com sonar orchestrator orchestrator r0 <NEXT> $ r12 = r33 distribution <NEXT> $ r13 = $ r12 get profile backup <NEXT> r2 = $ r13 iterator <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r17 = r2 next <NEXT> r3 = com sonar orchestrator locator location $ r17 <NEXT> r34 = com sonar orchestrator orchestrator r0 <NEXT> $ r18 = r34 server <NEXT> $ r18 restore profile r3 <NEXT> goto label2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r35 = com sonar orchestrator orchestrator r0 <NEXT> $ r14 = r35 distribution <NEXT> $ z2 = $ r14 be activate license <NEXT> if $ z2 == 0 goto label4 <NEXT> r36 = com sonar orchestrator orchestrator r0 <NEXT> r36 activate license <NEXT> label r24 = new com sonar orchestrator build build runner <NEXT> r37 = com sonar orchestrator orchestrator r0 <NEXT> $ r16 = r37 config <NEXT> specialinvoke r24 < init > $ r16 <NEXT> r38 = com sonar orchestrator orchestrator r0 <NEXT> r38 build runner = r24 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com sonar orchestrator orchestrator r0 <NEXT> specialinvoke r1 configure license null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com sonar orchestrator orchestrator builder r0 <NEXT> $ r2 = r6 distribution <NEXT> $ r3 = java util object require non null r1 <NEXT> $ r4 = com sonar orchestrator locator location $ r3 <NEXT> $ r2 add plugin location $ r4 <NEXT> r7 = com sonar orchestrator orchestrator builder r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label r7 = spoon compiler builder source option r0 <NEXT> $ r2 = r7 myself <NEXT> $ r3 = spoon compiler builder source option $ r2 <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r4 = java io file path separator <NEXT> $ r5 = r1 split $ r4 <NEXT> r8 = spoon compiler builder source option r0 <NEXT> $ r6 = r8 source $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r15 = spoon contract verifier r0 <NEXT> $ r5 = r15 _root package <NEXT> r13 = new spoon reflect visitor filter type filter <NEXT> specialinvoke r13 < init > class \ `` lspoon reflect code ct assignment \ `` <NEXT> r16 = spoon reflect visitor filter r13 <NEXT> $ r6 = $ r5 get element r16 <NEXT> r1 = $ r6 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r1 next <NEXT> r2 = spoon reflect code ct assignment $ r7 <NEXT> r3 = r2 get assign <NEXT> $ z1 = r3 instanceof spoon reflect code ct field write <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ z2 = r3 instanceof spoon reflect code ct variable write <NEXT> if $ z2 ! = 0 goto label2 <NEXT> $ z3 = r3 instanceof spoon reflect code ct array write <NEXT> if $ z3 ! = 0 goto label2 <NEXT> r14 = new java lang assertion error <NEXT> $ r9 = r2 get position <NEXT> $ r10 = r2 to string <NEXT> $ r11 = r3 get class <NEXT> $ r12 = dynamicinvoke \ `` make concat with constants\ `` < java lang string spoon reflect cu source position java lang string java lang class > $ r9 $ r10 $ r11 java lang invoke string concat factory make concat with constant \ `` assignment contract error\u0001\n\u0001\n assign be \u0001\ `` <NEXT> specialinvoke r14 < init > $ r12 <NEXT> throw r14 <NEXT> if $ z3 ! = 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = spoon contract verifier r0 <NEXT> $ r1 = r2 _root package <NEXT> r3 = spoon contract verifier r0 <NEXT> r4 = spoon reflect declaration ct element $ r1 <NEXT> r3 check parent consistency r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = spoon metamodel metamodel property r0 <NEXT> $ r1 = r4 item value type <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = spoon metamodel metamodel property r0 <NEXT> r5 get type of field <NEXT> label r6 = spoon metamodel metamodel property r0 <NEXT> $ r2 = r6 item value type <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = spoon pattern internal default generator r0 <NEXT> $ r4 = r5 factory <NEXT> r1 get value a $ r4 r2 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r10 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r10 ! = null goto label1 <NEXT> return <NEXT> if r10 ! = null goto label1 <NEXT> label $ r3 = r10 get class <NEXT> $ z0 = $ r3 be array <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r9 = java lang object [ ] r10 <NEXT> r10 = java util array a list $ r9 <NEXT> label r11 = new spoon pattern internal matcher match scanner <NEXT> r12 = spoon pattern pattern r0 <NEXT> $ r5 = r12 model value resolver <NEXT> specialinvoke r11 < init > $ r5 r1 <NEXT> $ z1 = r10 instanceof java util collection <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r8 = java util collection r10 <NEXT> r11 scan null $ r8 <NEXT> goto label5 <NEXT> label return <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z2 = r10 instanceof java util map <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r7 = java util map r10 <NEXT> r11 scan null $ r7 <NEXT> if $ z2 == 0 goto label4 <NEXT> label $ r6 = spoon reflect declaration ct element r10 <NEXT> r11 scan null $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new spoon pattern inlined statement configurator <NEXT> r5 = spoon pattern pattern builder r0 <NEXT> specialinvoke r4 < init > r5 <NEXT> r1 accept r4 <NEXT> r6 = spoon pattern pattern builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = spoon pattern pattern parameter configurator r0 <NEXT> r2 = r7 get current parameter <NEXT> r8 = spoon pattern pattern parameter configurator r0 <NEXT> $ r3 = r8 query model <NEXT> $ r4 = pattern parameter configurator $ lambda_by name element_18__17 bootstrap $ r1 <NEXT> $ r5 = $ r3 filter child $ r4 <NEXT> r9 = spoon pattern pattern parameter configurator r0 <NEXT> $ r6 = pattern parameter configurator $ lambda_by name element_19__22 bootstrap $ r9 r2 <NEXT> $ r5 for each $ r6 <NEXT> r10 = spoon pattern pattern parameter configurator r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = spoon processing abstract annotation processor r0 <NEXT> $ r2 = r5 process annotation type <NEXT> $ r3 = r1 get name <NEXT> $ r2 remove $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = new spoon refactoring refactoring exception <NEXT> $ r4 = r1 get simple name <NEXT> $ r5 = r2 get position <NEXT> $ r6 = dynamicinvoke \ `` make concat with constants\ `` < java lang string java lang string spoon reflect cu source position > $ r4 $ r5 java lang invoke string concat factory make concat with constant \ `` the parameter \u0001 can not be remove because it be use \u0001 \ `` <NEXT> specialinvoke r7 < init > $ r6 <NEXT> r8 = java lang throwable r7 <NEXT> throw r8 <END>
<BEG> r0 = @ this <NEXT> r2 = spoon refactoring method call state r0 <NEXT> $ r1 = r2 method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = spoon reflect factory class factory r0 <NEXT> $ i0 = r12 have inner type r1 <NEXT> if $ i0 < = 0 goto label1 <NEXT> r13 = spoon reflect factory class factory r0 <NEXT> $ r9 = r13 get declare type name r1 <NEXT> r14 = spoon reflect factory class factory r0 <NEXT> r2 = r14 create $ r9 <NEXT> r15 = spoon reflect factory class factory r0 <NEXT> $ r10 = r15 get simple name r1 <NEXT> r16 = spoon reflect factory class factory r0 <NEXT> $ r11 = r16 create r2 $ r10 <NEXT> return $ r11 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label r17 = spoon reflect factory class factory r0 <NEXT> $ r3 = r17 factory <NEXT> $ r4 = $ r3 package <NEXT> r18 = spoon reflect factory class factory r0 <NEXT> $ r5 = r18 get package name r1 <NEXT> $ r6 = $ r4 get or create $ r5 <NEXT> r19 = spoon reflect factory class factory r0 <NEXT> $ r7 = r19 get simple name r1 <NEXT> r20 = spoon reflect factory class factory r0 <NEXT> $ r8 = r20 create $ r6 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = spoon reflect factory code factory r0 <NEXT> $ r3 = r13 factory <NEXT> $ r4 = $ r3 core <NEXT> r2 = $ r4 create local variable reference <NEXT> $ r5 = r1 get type <NEXT> if $ r5 ! = null goto label1 <NEXT> $ r12 = null <NEXT> goto label2 <NEXT> label r2 set type $ r12 <NEXT> $ r8 = r1 get simple name <NEXT> r2 set simple name $ r8 <NEXT> r14 = spoon reflect declaration ct element r1 <NEXT> r2 set parent r14 <NEXT> return r2 <NEXT> if $ r5 ! = null goto label1 <NEXT> label $ r6 = r1 get type <NEXT> $ r12 = $ r6 clone <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = spoon reflect factory compilation unit factory r0 <NEXT> $ r2 = r8 cache compilation unit <NEXT> $ r3 = r1 get position <NEXT> $ r4 = $ r3 get compilation unit <NEXT> $ r5 = $ r4 get file <NEXT> $ r6 = $ r5 get absolute path <NEXT> $ r2 remove $ r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = spoon reflect factory compilation unit factory r0 <NEXT> $ r2 = r5 cache compilation unit <NEXT> $ r3 = $ r2 remove r1 <NEXT> $ r4 = spoon reflect cu compilation unit $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r12 = spoon reflect factory constructor factory r0 <NEXT> $ r6 = r12 factory <NEXT> $ r7 = $ r6 core <NEXT> r5 = $ r7 create constructor <NEXT> r5 set modifier r2 <NEXT> r5 set parameter r3 <NEXT> r5 set thrown type r4 <NEXT> r1 add constructor r5 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r5 = @ parameter4 <NEXT> r8 = spoon reflect factory constructor factory r0 <NEXT> r6 = r8 create r1 r2 r3 r4 <NEXT> r9 = spoon reflect code ct statement r5 <NEXT> r6 set body r9 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = spoon reflect factory enum factory r0 <NEXT> $ r2 = r8 factory <NEXT> $ r3 = $ r2 package <NEXT> r9 = spoon reflect factory enum factory r0 <NEXT> $ r4 = r9 get package name r1 <NEXT> $ r5 = $ r3 get or create $ r4 <NEXT> r10 = spoon reflect factory enum factory r0 <NEXT> $ r6 = r10 get simple name r1 <NEXT> r11 = spoon reflect factory enum factory r0 <NEXT> $ r7 = r11 create $ r5 $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> r4 = spoon reflect factory package factory r0 <NEXT> $ r3 = r4 create reference $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r3 = spoon reflect factory type factory r0 <NEXT> $ r1 = r3 boolean_primitive <NEXT> $ r2 = $ r1 clone <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = spoon reflect factory type factory r0 <NEXT> $ r1 = r3 long <NEXT> $ r2 = $ r1 clone <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = spoon reflect factory type factory r0 <NEXT> $ r1 = r3 long_primitive <NEXT> $ r2 = $ r1 clone <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = spoon reflect factory type factory r0 <NEXT> r2 = r5 create reference r1 <NEXT> $ r3 = r2 get package <NEXT> $ r3 set implicit 1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = spoon reflect visitor chain ct query impl r0 <NEXT> r1 log = z0 <NEXT> r2 = spoon reflect visitor chain ct query impl r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = spoon reflect visitor chain ct query impl r0 <NEXT> r1 terminate = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = spoon reflect visitor ct deque scanner r0 <NEXT> $ r3 = r7 element deque <NEXT> $ r4 = $ r3 pop <NEXT> r2 = spoon reflect declaration ct element $ r4 <NEXT> if r2 == r1 goto label1 <NEXT> r6 = new java lang runtime exception <NEXT> specialinvoke r6 < init > \ `` inconsistent stack\ `` <NEXT> throw r6 <NEXT> if r2 == r1 goto label1 <NEXT> label specialinvoke r0 exit r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = spoon reflect visitor filter super inheritance hierarchy function r0 <NEXT> $ r2 = r5 listener <NEXT> if $ r2 == null goto label1 <NEXT> r4 = new spoon spoon exception <NEXT> specialinvoke r4 < init > \ `` can not register listener on instance create with constructor which accept the set < string > use the no parameter constructor if listener have to be registered\ `` <NEXT> r6 = java lang throwable r4 <NEXT> throw r6 <NEXT> if $ r2 == null goto label1 <NEXT> label r7 = spoon reflect visitor filter super inheritance hierarchy function r0 <NEXT> r7 listener = r1 <NEXT> r8 = spoon reflect visitor filter super inheritance hierarchy function r0 <NEXT> return r8 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 filter child r1 <NEXT> $ r3 = $ r2 list <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r6 = new spoon reflect visitor filter type filter <NEXT> specialinvoke r6 < init > class \ `` lspoon reflect reference ct reference \ `` <NEXT> r7 = spoon reflect visitor filter r6 <NEXT> $ r3 = r0 filter child r7 <NEXT> $ r4 = $ r3 filter child r1 <NEXT> $ r5 = $ r4 list <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = spoon support compiler spoon pom r0 <NEXT> $ r1 = r2 parent <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = spoon support modelobs action delete action r0 <NEXT> $ r1 = r2 old value <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 get factory <NEXT> $ r4 = $ r3 core <NEXT> r2 = $ r4 create statement list <NEXT> r2 add statement r1 <NEXT> spoon support reflect code ct statement impl insert before r0 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r8 = spoon support reflect cu position source position impl r0 <NEXT> r1 = r8 get line separator position <NEXT> if r1 ! = null goto label1 <NEXT> return -1 <NEXT> if r1 ! = null goto label1 <NEXT> label i1 = lengthof r1 <NEXT> if i1 ! = 0 goto label2 <NEXT> return i0 <NEXT> if i1 ! = 0 goto label2 <NEXT> label $ i2 = r1 [ 0 ] <NEXT> if $ i2 < = i0 goto label3 <NEXT> label i16 = 0 <NEXT> label $ i3 = lengthof r1 <NEXT> $ i4 = $ i3 - 1 <NEXT> if i16 > = $ i4 goto label6 <NEXT> $ i11 = r1 [ i16 ] <NEXT> if $ i11 > = i0 goto label5 <NEXT> $ i12 = i16 + 1 <NEXT> $ i13 = r1 [ $ i12 ] <NEXT> if $ i13 < = i0 goto label5 <NEXT> $ i14 = r1 [ i16 ] <NEXT> $ i15 = i0 - $ i14 <NEXT> return $ i15 <NEXT> if $ i13 < = i0 goto label5 <NEXT> label i16 = i16 + 1 <NEXT> goto label4 <NEXT> if i16 > = $ i4 goto label6 <NEXT> label i17 = 0 <NEXT> i18 = 0 <NEXT> r9 = spoon support reflect cu position source position impl r0 <NEXT> $ r3 = r9 get compilation unit <NEXT> if $ r3 == null goto label9 <NEXT> r10 = spoon support reflect cu position source position impl r0 <NEXT> $ r4 = r10 get compilation unit <NEXT> $ r5 = $ r4 get factory <NEXT> $ r6 = $ r5 get environment <NEXT> i18 = $ r6 get tabulation size <NEXT> r11 = spoon support reflect cu position source position impl r0 <NEXT> $ r7 = r11 get compilation unit <NEXT> r2 = $ r7 get original source code <NEXT> i19 = r1 [ i16 ] <NEXT> label if i19 > = i0 goto label9 <NEXT> $ c10 = r2 char at i19 <NEXT> if $ c10 ! = 9 goto label8 <NEXT> i17 = i17 + 1 <NEXT> label i19 = i19 + 1 <NEXT> goto label7 <NEXT> label if i19 > = i0 goto label9 <NEXT> label $ i5 = r1 [ i16 ] <NEXT> $ i6 = i0 - $ i5 <NEXT> $ i8 = $ i6 - i17 <NEXT> $ i7 = i17 * i18 <NEXT> $ i9 = $ i8 + $ i7 <NEXT> return $ i9 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof spoon reflect code ct expression <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = spoon reflect code ct expression r0 <NEXT> $ r5 = $ r4 partially evaluate <NEXT> r1 = spoon reflect code ct expression $ r5 <NEXT> $ r6 = spoon support reflect eval eval helper get correspond runtime object r1 <NEXT> return $ r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = new spoon spoon exception <NEXT> $ r3 = dynamicinvoke \ `` make concat with constants\ `` < java lang string spoon reflect declaration ct element > r0 java lang invoke string concat factory make concat with constant \ `` not possible to convert to runtime object \u0001\ `` <NEXT> specialinvoke r7 < init > $ r3 <NEXT> r8 = java lang throwable r7 <NEXT> throw r8 <END>
<BEG> r0 = @ this <NEXT> r1 = spoon support reflect reference ct field reference impl r0 <NEXT> $ z0 = r1 stat <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new java util array list <NEXT> specialinvoke $ r3 < init > <NEXT> r8 = r0 get declare method <NEXT> i0 = lengthof r8 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r9 = r8 [ i1 ] <NEXT> $ r6 = r1 method <NEXT> $ r7 = $ r6 create reference r9 <NEXT> $ r3 add $ r7 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label r10 = r0 get declare constructor <NEXT> i2 = lengthof r10 <NEXT> i3 = 0 <NEXT> label if i3 > = i2 goto label4 <NEXT> r11 = r10 [ i3 ] <NEXT> $ r4 = r1 constructor <NEXT> $ r5 = $ r4 create reference r11 <NEXT> $ r3 add $ r5 <NEXT> i3 = i3 + 1 <NEXT> goto label3 <NEXT> label if i3 > = i2 goto label4 <NEXT> label return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get generic parameter type <NEXT> i0 = lengthof $ r1 <NEXT> $ r2 = r0 get parameter type <NEXT> i1 = lengthof $ r2 <NEXT> if i0 ! = i1 goto label1 <NEXT> r11 = newarray spoon support visitor java reflect rt parameter [ i1 ] <NEXT> b5 = 0 <NEXT> goto label4 <NEXT> label i6 = 0 <NEXT> label $ r12 = r0 get generic parameter type <NEXT> $ i7 = lengthof $ r12 <NEXT> if i6 > = $ i7 goto label6 <NEXT> r14 = new spoon support visitor java reflect rt parameter <NEXT> $ r7 = r0 get parameter type <NEXT> $ i4 = i6 + b5 <NEXT> $ r8 = $ r7 [ $ i4 ] <NEXT> $ r9 = r0 get generic parameter type <NEXT> $ r10 = $ r9 [ i6 ] <NEXT> specialinvoke r14 < init > null $ r8 $ r10 null r0 i6 <NEXT> r11 [ i6 ] = r14 <NEXT> i6 = i6 + 1 <NEXT> goto label5 <NEXT> if i6 > = $ i7 goto label6 <NEXT> label return r11 <NEXT> if i0 ! = i1 goto label1 <NEXT> label $ i2 = i1 - 1 <NEXT> if i0 ! = $ i2 goto label2 <NEXT> r11 = newarray spoon support visitor java reflect rt parameter [ i0 ] <NEXT> b5 = 1 <NEXT> if i0 ! = $ i2 goto label2 <NEXT> label $ r3 = r0 get declare class <NEXT> $ z0 = $ r3 be enum <NEXT> if $ z0 == 0 goto label3 <NEXT> $ i3 = i1 - 2 <NEXT> if i0 ! = $ i3 goto label3 <NEXT> label r13 = new spoon spoon exception <NEXT> $ r5 = dynamicinvoke \ `` make concat with constants\ `` < java lang string java lang reflect constructor int int > r0 i1 i0 java lang invoke string concat factory make concat with constant \ `` error while analyze parameter of constructor \u0001 #of parameter \u0001 - #of generic parameter type \u0001\ `` <NEXT> specialinvoke r13 < init > $ r5 <NEXT> r15 = java lang throwable r13 <NEXT> throw r15 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = spoon support visitor sub inheritance hierarchy resolver r0 <NEXT> $ r2 = r4 target super type <NEXT> $ r3 = r1 get qualify name <NEXT> $ r2 add $ r3 <NEXT> r5 = spoon support visitor sub inheritance hierarchy resolver r0 <NEXT> $ z1 = r5 have super interface <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z2 = r1 be interface <NEXT> r6 = spoon support visitor sub inheritance hierarchy resolver r0 <NEXT> r6 have super interface = $ z2 <NEXT> label r7 = spoon support visitor sub inheritance hierarchy resolver r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = org springframework aop aspectj abstract aspect j advice r0 <NEXT> $ r4 = r7 get join point <NEXT> r8 = org springframework aop aspectj abstract aspect j advice r0 <NEXT> $ r5 = r8 arg bind $ r4 r1 r2 r3 <NEXT> r9 = org springframework aop aspectj abstract aspect j advice r0 <NEXT> $ r6 = r9 invoke advice method with give args $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework aop aspectj annotation instantiation model aware pointcut advisor impl r0 <NEXT> $ r1 = r2 pointcut <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework aop config simple bean factory aware aspect instance factory r0 <NEXT> r2 aspect bean name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org springframework aop target singleton target source <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org springframework aop framework advise support r0 <NEXT> r5 = org springframework aop target source r3 <NEXT> r4 set target source r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` interface must not be null\ `` <NEXT> r5 = org springframework aop framework advise support r0 <NEXT> $ r4 = r5 interface <NEXT> $ r4 clear <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r1 [ i1 ] <NEXT> r6 = org springframework aop framework advise support r0 <NEXT> r6 add interface r3 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == r1 goto label1 <NEXT> $ z0 = org springframework aop framework aop proxy utils equal proxied interface r0 r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = org springframework aop framework aop proxy utils equal advisor r0 r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r2 = r0 get target source <NEXT> $ r3 = r1 get target source <NEXT> $ z2 = $ r2 equal $ r3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 get proxied interface <NEXT> $ r3 = r1 get proxied interface <NEXT> $ z0 = java util array equal $ r2 $ r3 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework aop framework autoproxy default advisor auto proxy creator r0 <NEXT> $ r1 = r2 advisor bean name prefix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = class \ `` lorg springframework aop framework jdk dynamic aop proxy \ `` <NEXT> $ i0 = $ r1 hash code <NEXT> $ i1 = $ i0 * 13 <NEXT> r4 = org springframework aop framework jdk dynamic aop proxy r0 <NEXT> $ r2 = r4 advise <NEXT> $ r3 = $ r2 get target source <NEXT> $ i2 = $ r3 hash code <NEXT> $ i3 = $ i1 + $ i2 <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework aop framework proxy config r0 <NEXT> $ z0 = r1 expose proxy <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework aop framework proxy config r0 <NEXT> $ z0 = r1 frozen <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` aop proxy factory must not be null\ `` <NEXT> r2 = org springframework aop framework proxy creator support r0 <NEXT> r2 aop proxy factory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org springframework aop framework abstract singleton proxy factory bean r0 <NEXT> $ r1 = r5 proxy <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new org springframework bean factory factory bean not initialize exception <NEXT> specialinvoke r4 < init > <NEXT> r6 = java lang throwable r4 <NEXT> throw r6 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r7 = org springframework aop framework abstract singleton proxy factory bean r0 <NEXT> $ r2 = r7 proxy <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert have text r1 \ `` \'exit message\ ' must not be empty\ `` <NEXT> r2 = org springframework aop interceptor customizable trace interceptor r0 <NEXT> specialinvoke r2 check for invalid placeholder r1 <NEXT> org springframework util assert do not contain r1 \ `` $ [ exception ] \ <NEXT> r3 = org springframework aop interceptor customizable trace interceptor r0 <NEXT> r3 exit message = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert have text r1 \ `` \'exception message\ ' must not be empty\ `` <NEXT> r2 = org springframework aop interceptor customizable trace interceptor r0 <NEXT> specialinvoke r2 check for invalid placeholder r1 <NEXT> org springframework util assert do not contain r1 \ `` $ [ return value ] \ <NEXT> org springframework util assert do not contain r1 \ `` $ [ invocation time ] \ <NEXT> r3 = org springframework aop interceptor customizable trace interceptor r0 <NEXT> r3 exception message = r1 <NEXT> return <END>
<BEG> $ r0 = org springframework aop interceptor expose invocation interceptor current invocation <NEXT> $ r1 = org springframework aop interceptor expose bean name advisor get bean name $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not empty r1 \ `` \'excluded patterns\ ' must not be empty\ `` <NEXT> $ i0 = lengthof r1 <NEXT> $ r2 = newarray java lang string [ $ i0 ] <NEXT> r7 = org springframework aop support abstract regexp method pointcut r0 <NEXT> r7 exclude pattern = $ r2 <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r8 = org springframework aop support abstract regexp method pointcut r0 <NEXT> $ r5 = r8 exclude pattern <NEXT> $ r4 = r1 [ i2 ] <NEXT> $ r6 = org springframework util string utils trim whitespace $ r4 <NEXT> $ r5 [ i2 ] = $ r6 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label r9 = org springframework aop support abstract regexp method pointcut r0 <NEXT> $ r3 = r9 exclude pattern <NEXT> r10 = org springframework aop support abstract regexp method pointcut r0 <NEXT> r10 init exclude pattern representation $ r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org springframework util reflection utils be hash code method r0 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = org springframework aop support aop utils can apply r0 r1 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> org springframework util assert not empty r0 \ `` class filter array must not be empty\ `` <NEXT> r2 = new org springframework aop support class filter $ union class filter <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org springframework aop class filter r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework aop support composable pointcut r0 <NEXT> $ r2 = r4 class filter <NEXT> $ r3 = org springframework aop support class filter intersection $ r2 r1 <NEXT> r5 = org springframework aop support composable pointcut r0 <NEXT> r5 class filter = $ r3 <NEXT> r6 = org springframework aop support composable pointcut r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new java util link list <NEXT> specialinvoke r5 < init > <NEXT> r6 = org springframework aop support name match method pointcut r0 <NEXT> r6 map name = r5 <NEXT> if r1 == null goto label1 <NEXT> r7 = org springframework aop support name match method pointcut r0 <NEXT> $ r3 = r7 map names <NEXT> $ r4 = java util array a list r1 <NEXT> $ r3 add all $ r4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework aop support name match method pointcut r0 <NEXT> $ r2 = r3 map names <NEXT> $ r2 add r1 <NEXT> r4 = org springframework aop support name match method pointcut r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 target bean name <NEXT> r5 = org springframework aop target abstract bean factory base target source r0 <NEXT> r5 target bean name = $ r2 <NEXT> $ r3 = r1 target class <NEXT> r6 = org springframework aop target abstract bean factory base target source r0 <NEXT> r6 target class = $ r3 <NEXT> $ r4 = r1 bean factory <NEXT> r7 = org springframework aop target abstract bean factory base target source r0 <NEXT> r7 bean factory = $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework aop target common pool2 target source r0 <NEXT> r1 max idle = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework aop target common pool2 target source r0 <NEXT> $ l0 = r1 max wait <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework aop target common pool2 target source r0 <NEXT> r1 block when exhaust = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework aop aspectj aspect j pointcut advisor r0 <NEXT> $ r1 = r3 advice <NEXT> $ r2 = $ r1 get aspect name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = r0 goto label1 <NEXT> return r2 <NEXT> if r1 ! = r0 goto label1 <NEXT> label $ i0 = org springframework bean property accessor utils get last nested property separator index r2 <NEXT> $ i1 = $ i0 + 1 <NEXT> $ r3 = r2 substring $ i1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> specialinvoke r0 set attribute $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org springframework util assert be assignable r1 r0 <NEXT> $ r2 = org springframework bean bean utils instantiate class r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org springframework bean factory annotation autowire by_name <NEXT> if r0 == $ r1 goto label1 <NEXT> $ r2 = org springframework bean factory annotation autowire by_type <NEXT> if r0 ! = $ r2 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if r0 ! = $ r2 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework bean factory annotation autowired annotation bean post processor r0 <NEXT> r1 require parameter value = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework bean factory annotation custom autowire configurer r0 <NEXT> r2 custom qualifier type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org springframework bean factory annotation qualifier annotation autowire candidate resolver r0 <NEXT> $ r4 = r6 qualifier type <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r5 = r2 next <NEXT> r3 = java lang class $ r5 <NEXT> $ z1 = r1 equal r3 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ z2 = r1 be annotation present r3 <NEXT> if $ z2 == 0 goto label3 <NEXT> label return 1 <NEXT> if $ z2 == 0 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r7 = org springframework bean factory bean creation exception r0 <NEXT> $ r1 = r7 related cause <NEXT> if $ r1 ! = null goto label1 <NEXT> return null <NEXT> if $ r1 ! = null goto label1 <NEXT> label r8 = org springframework bean factory bean creation exception r0 <NEXT> $ r3 = r8 related cause <NEXT> r9 = org springframework bean factory bean creation exception r0 <NEXT> $ r2 = r9 related cause <NEXT> $ i0 = $ r2 size <NEXT> $ r4 = newarray java lang throwable [ $ i0 ] <NEXT> $ r5 = $ r3 to array $ r4 <NEXT> $ r6 = java lang throwable [ ] $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory can not load bean class exception r0 <NEXT> $ r1 = r2 resource description <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = org springframework bean factory config abstract factory bean r0 <NEXT> r1 = r6 get bean factory <NEXT> $ z0 = r1 instanceof org springframework bean factory config configurable bean factory <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org springframework bean factory config configurable bean factory r1 <NEXT> $ r4 = $ r3 get type converter <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r5 = new org springframework bean simple type converter <NEXT> specialinvoke r5 < init > <NEXT> r7 = org springframework bean type converter r5 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory config abstract factory bean r0 <NEXT> $ z0 = r2 be singleton <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org springframework bean factory config abstract factory bean r0 <NEXT> $ r1 = r3 singleton instance <NEXT> r4 = org springframework bean factory config abstract factory bean r0 <NEXT> r4 destroy instance $ r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org springframework bean factory config constructor argument value $ value holder <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org springframework bean factory config constructor argument value r0 <NEXT> r4 add indexed argument value i0 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org springframework bean factory config constructor argument value r0 <NEXT> $ r1 = r3 indexed argument value <NEXT> $ r2 = java lang integer value of i0 <NEXT> $ z0 = $ r1 contain key $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory config dependency descriptor r0 <NEXT> $ r1 = r2 field <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework bean factory config dependency descriptor r0 <NEXT> $ i0 = r3 nest level <NEXT> $ i1 = $ i0 + 1 <NEXT> r4 = org springframework bean factory config dependency descriptor r0 <NEXT> r4 nest level = $ i1 <NEXT> r5 = org springframework bean factory config dependency descriptor r0 <NEXT> $ r1 = r5 method parameter <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org springframework bean factory config dependency descriptor r0 <NEXT> $ r2 = r6 method parameter <NEXT> $ r2 increase nest level <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = new org springframework bean factory config dependency descriptor $ 1 <NEXT> r3 = org springframework bean factory config dependency descriptor r0 <NEXT> r4 = org springframework bean factory config dependency descriptor r0 <NEXT> specialinvoke r2 < init > r3 r4 <NEXT> r5 = org springframework bean factory config dependency descriptor r2 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework bean factory config deprecate bean warner r0 <NEXT> $ r2 = r3 logger <NEXT> $ r2 warn r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework util string utils trim all whitespace r1 <NEXT> r3 = org springframework bean factory config field retrieve factory bean r0 <NEXT> r3 target field = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework bean factory config placeholder configurer support r0 <NEXT> r2 bean name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = null <NEXT> r6 = r1 <NEXT> i0 = r1 last index of 47 <NEXT> if i0 == -1 goto label1 <NEXT> r5 = r1 substring 0 i0 <NEXT> $ i1 = i0 + 1 <NEXT> r6 = r1 substring $ i1 <NEXT> label r8 = org springframework bean factory config preference placeholder configurer r0 <NEXT> $ r3 = r8 user prefs <NEXT> r9 = org springframework bean factory config preference placeholder configurer r0 <NEXT> r7 = r9 resolve placeholder r5 r6 $ r3 <NEXT> if r7 ! = null goto label2 <NEXT> r10 = org springframework bean factory config preference placeholder configurer r0 <NEXT> $ r4 = r10 system prefs <NEXT> r11 = org springframework bean factory config preference placeholder configurer r0 <NEXT> r7 = r11 resolve placeholder r5 r6 $ r4 <NEXT> if r7 ! = null goto label2 <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework util string utils trim all whitespace r1 <NEXT> r3 = org springframework bean factory config property path factory bean r0 <NEXT> r3 target bean name = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework bean factory config property resource configurer r0 <NEXT> r1 order = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework bean factory config service locator factory bean r0 <NEXT> r2 service locator interface = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r3 = class \ `` ljava lang exception \ `` <NEXT> $ z0 = $ r3 be assignable from r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r12 = new java lang illegal argument exception <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r6 = r11 append \ `` service locator exception [ \ `` <NEXT> $ r7 = r1 get name <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 append \ `` ] be not a subclass of exception\ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r12 < init > $ r10 <NEXT> throw r12 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r13 = org springframework bean factory config service locator factory bean r0 <NEXT> $ r2 = r13 determine service locator exception constructor r1 <NEXT> r14 = org springframework bean factory config service locator factory bean r0 <NEXT> r14 service locator exception constructor = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory config type string value r0 <NEXT> $ r1 = r2 target type <NEXT> $ z0 = $ r1 instanceof java lang class <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework bean factory config yaml processor r0 <NEXT> r1 match default = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework bean factory groovy groovy bean definition reader r0 <NEXT> r2 bind = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r1 set delegate r0 <NEXT> r1 call <NEXT> r3 = org springframework bean factory groovy groovy bean definition reader r0 <NEXT> specialinvoke r3 finalize deferred property <NEXT> r4 = org springframework bean factory groovy groovy bean definition reader r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r6 = org springframework bean factory parse composite component definition r0 <NEXT> $ r2 = r6 nest component <NEXT> r7 = org springframework bean factory parse composite component definition r0 <NEXT> $ r1 = r7 nest component <NEXT> $ i0 = $ r1 size <NEXT> $ r3 = newarray org springframework bean factory parse component definition [ $ i0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = org springframework bean factory parse component definition [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework bean factory support abstract bean definition r0 <NEXT> $ i0 = r1 dependency check <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework bean factory support abstract bean definition r0 <NEXT> r1 primary = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework bean factory support abstract bean definition r0 <NEXT> $ z0 = r1 primary <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r4 = new java util link hash set <NEXT> r5 = org springframework bean factory support abstract bean definition r0 <NEXT> $ r2 = r5 qualifier <NEXT> $ r3 = $ r2 value <NEXT> specialinvoke r4 < init > $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory support abstract bean factory r0 <NEXT> $ r1 = r2 bean post processor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org springframework bean factory support abstract bean factory r0 <NEXT> $ r3 = r5 prototype currently in creation <NEXT> r2 = $ r3 get <NEXT> if r2 == null goto label2 <NEXT> $ z0 = r2 equal r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = r2 instanceof java util set <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r4 = java util set r2 <NEXT> $ z2 = $ r4 contain r1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org springframework bean property editor registry support <NEXT> if $ z0 == 0 goto label01 <NEXT> $ r31 = org springframework bean property editor registry support r1 <NEXT> goto label02 <NEXT> label if $ r31 == null goto label03 <NEXT> $ r31 use config value editor <NEXT> label r41 = org springframework bean factory support abstract bean factory r0 <NEXT> $ r4 = r41 property editor registrars <NEXT> $ z1 = $ r4 be empty <NEXT> if $ z1 ! = 0 goto label11 <NEXT> r42 = org springframework bean factory support abstract bean factory r0 <NEXT> $ r13 = r42 property editor registrars <NEXT> r32 = $ r13 iterator <NEXT> label $ z7 = r32 have next <NEXT> if $ z7 == 0 goto label11 <NEXT> $ r14 = r32 next <NEXT> r33 = org springframework bean property editor registrar $ r14 <NEXT> label r33 register custom editor r1 <NEXT> label goto label10 <NEXT> label goto label04 <NEXT> if $ z7 == 0 goto label11 <NEXT> label r51 = org springframework bean factory support abstract bean factory r0 <NEXT> $ r5 = r51 custom editor <NEXT> $ z2 = $ r5 be empty <NEXT> if $ z2 ! = 0 goto label13 <NEXT> r52 = org springframework bean factory support abstract bean factory r0 <NEXT> $ r6 = r52 custom editor <NEXT> $ r7 = $ r6 entry set <NEXT> r36 = $ r7 iterator <NEXT> label $ z3 = r36 have next <NEXT> if $ z3 == 0 goto label13 <NEXT> $ r8 = r36 next <NEXT> r37 = java util map $ entry $ r8 <NEXT> $ r9 = r37 get key <NEXT> r38 = java lang class $ r9 <NEXT> $ r10 = r37 get value <NEXT> r39 = java lang class $ r10 <NEXT> $ r11 = org springframework bean bean utils instantiate class r39 <NEXT> $ r12 = java bean property editor $ r11 <NEXT> r1 register custom editor r38 $ r12 <NEXT> goto label12 <NEXT> if $ z3 == 0 goto label13 <NEXT> label return <NEXT> if $ z0 == 0 goto label01 <NEXT> label $ r31 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework bean factory support abstract bean factory r0 <NEXT> $ r2 = r4 merge bean definition <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework bean factory support bean definition builder r0 <NEXT> $ r2 = r3 bean definition <NEXT> $ r2 set scope r1 <NEXT> r4 = org springframework bean factory support bean definition builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == r0 goto label1 <NEXT> $ z0 = r1 instanceof org springframework bean factory support bean definition resource <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r2 = org springframework bean factory support bean definition resource r1 <NEXT> $ r4 = $ r2 bean definition <NEXT> r5 = org springframework bean factory support bean definition resource r0 <NEXT> $ r3 = r5 bean definition <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 have target type <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = r1 get target type <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org springframework bean factory support bean definition value resolver r0 <NEXT> $ r2 = r6 bean factory <NEXT> $ r3 = $ r2 get bean class loader <NEXT> $ r4 = r1 resolve target type $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r7 = org springframework bean factory support default listable bean factory serializable factory <NEXT> r9 = new java lang ref weak reference <NEXT> specialinvoke r9 < init > r0 <NEXT> $ r7 put r1 r9 <NEXT> goto label2 <NEXT> label r12 = org springframework bean factory support default listable bean factory r0 <NEXT> r12 serialization id = r1 <NEXT> return <NEXT> if r1 == null goto label1 <NEXT> label r10 = org springframework bean factory support default listable bean factory r0 <NEXT> $ r2 = r10 serialization id <NEXT> if $ r2 == null goto label2 <NEXT> $ r4 = org springframework bean factory support default listable bean factory serializable factory <NEXT> r11 = org springframework bean factory support default listable bean factory r0 <NEXT> $ r3 = r11 serialization id <NEXT> $ r4 remove $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org springframework bean factory support default listable bean factory r0 <NEXT> r2 = r5 get dependency comparator <NEXT> $ z0 = r2 instanceof org springframework core order comparator <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org springframework core order comparator r2 <NEXT> $ r4 = $ r3 get priority r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = org springframework bean factory support default singleton bean registry r0 <NEXT> $ r4 = r13 singleton object <NEXT> entermonitor $ r4 <NEXT> label r14 = org springframework bean factory support default singleton bean registry r0 <NEXT> $ r5 = r14 singleton object <NEXT> $ r5 remove r1 <NEXT> r15 = org springframework bean factory support default singleton bean registry r0 <NEXT> $ r7 = r15 singleton factory <NEXT> $ r7 remove r1 <NEXT> r16 = org springframework bean factory support default singleton bean registry r0 <NEXT> $ r9 = r16 early singleton object <NEXT> $ r9 remove r1 <NEXT> r17 = org springframework bean factory support default singleton bean registry r0 <NEXT> $ r11 = r17 register singleton <NEXT> $ r11 remove r1 <NEXT> exitmonitor $ r4 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework bean factory support default singleton bean registry r0 <NEXT> $ r2 = r3 dependent bean map <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org springframework bean factory support default singleton bean registry r0 <NEXT> $ r3 = r7 dependent bean map <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = java util set $ r4 <NEXT> if r2 ! = null goto label1 <NEXT> $ r6 = newarray java lang string [ 0 ] <NEXT> return $ r6 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r5 = org springframework util string utils to string array r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org springframework bean factory support factory bean registry support r0 <NEXT> $ r3 = r6 factory bean object cache <NEXT> r2 = $ r3 get r1 <NEXT> $ r4 = org springframework bean factory support factory bean registry support null_object <NEXT> if r2 == $ r4 goto label1 <NEXT> $ r5 = r2 <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if r2 == $ r4 goto label1 <NEXT> label $ r5 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r2 instanceof org springframework bean factory factory bean <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r12 = new org springframework bean factory bean creation exception <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r6 = r11 append \ `` bean instance of type [ \ `` <NEXT> $ r7 = r2 get class <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 append \ `` ] be not a factory bean\ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r12 < init > r1 $ r10 <NEXT> r13 = java lang throwable r12 <NEXT> throw r13 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r3 = org springframework bean factory factory bean r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = java security access controller get context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework bean factory support manage list r0 <NEXT> r2 element type name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework bean factory support method override r0 <NEXT> $ z0 = r1 overload <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory support method override r0 <NEXT> $ r1 = r2 override <NEXT> $ z0 = $ r1 be empty <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r34 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if r34 ! = null goto label01 <NEXT> r34 = \ `` \ `` <NEXT> label i2 = 0 <NEXT> $ r8 = r1 key set <NEXT> r3 = $ r8 iterator <NEXT> label $ z5 = r3 have next <NEXT> if $ z5 == 0 goto label10 <NEXT> r4 = r3 next <NEXT> $ z0 = r4 instanceof java lang string <NEXT> if $ z0 ! = 0 goto label03 <NEXT> r36 = new java lang illegal argument exception <NEXT> r35 = new java lang string builder <NEXT> specialinvoke r35 < init > <NEXT> $ r30 = r35 append \ `` illegal key [ \ `` <NEXT> $ r31 = $ r30 append r4 <NEXT> $ r32 = $ r31 append \ `` ] only string allowed\ `` <NEXT> $ r33 = $ r32 to string <NEXT> specialinvoke r36 < init > $ r33 <NEXT> throw r36 <NEXT> if $ z0 ! = 0 goto label03 <NEXT> label r5 = java lang string r4 <NEXT> $ z1 = r5 start with r34 <NEXT> if $ z1 == 0 goto label09 <NEXT> $ i1 = r34 length <NEXT> r6 = r5 substring $ i1 <NEXT> i0 = r6 index of \ `` [ \ `` <NEXT> if i0 == -1 goto label04 <NEXT> i4 = r6 last index of \ `` \ <NEXT> goto label05 <NEXT> label if i4 == -1 goto label08 <NEXT> r7 = r6 substring 0 i4 <NEXT> r40 = org springframework bean factory support property bean definition reader r0 <NEXT> $ r16 = r40 logger <NEXT> $ z3 = $ r16 be debug enabled <NEXT> if $ z3 == 0 goto label06 <NEXT> r41 = org springframework bean factory support property bean definition reader r0 <NEXT> $ r23 = r41 logger <NEXT> r37 = new java lang string builder <NEXT> specialinvoke r37 < init > <NEXT> $ r24 = r37 append \ `` found bean name \'\ `` <NEXT> $ r25 = $ r24 append r7 <NEXT> $ r26 = $ r25 append \ `` \'\ `` <NEXT> $ r27 = $ r26 to string <NEXT> $ r23 debug $ r27 <NEXT> label r42 = org springframework bean factory support property bean definition reader r0 <NEXT> $ r17 = r42 get registry <NEXT> $ z4 = $ r17 contain bean definition r7 <NEXT> if $ z4 ! = 0 goto label07 <NEXT> r38 = new java lang string builder <NEXT> specialinvoke r38 < init > <NEXT> $ r19 = r38 append r34 <NEXT> $ r20 = $ r19 append r7 <NEXT> $ r21 = $ r20 to string <NEXT> r43 = org springframework bean factory support property bean definition reader r0 <NEXT> r43 register bean definition r7 r1 $ r21 r2 <NEXT> i2 = i2 + 1 <NEXT> label goto label09 <NEXT> label goto label02 <NEXT> label if i4 == -1 goto label08 <NEXT> label r44 = org springframework bean factory support property bean definition reader r0 <NEXT> $ r9 = r44 logger <NEXT> $ z2 = $ r9 be debug enabled <NEXT> if $ z2 == 0 goto label09 <NEXT> r45 = org springframework bean factory support property bean definition reader r0 <NEXT> $ r11 = r45 logger <NEXT> r39 = new java lang string builder <NEXT> specialinvoke r39 < init > <NEXT> $ r12 = r39 append \ `` invalid bean name and property [ \ `` <NEXT> $ r13 = $ r12 append r6 <NEXT> $ r14 = $ r13 append \ `` ] \ `` <NEXT> $ r15 = $ r14 to string <NEXT> $ r11 debug $ r15 <NEXT> if i0 == -1 goto label04 <NEXT> label i4 = r6 last index of \ `` \ `` <NEXT> if $ z5 == 0 goto label10 <NEXT> label return i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org springframework bean factory support static listable bean factory r0 <NEXT> $ r3 = r5 bean <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework core convention attribute name to property name r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r1 get child node <NEXT> i1 = 0 <NEXT> label $ i0 = r3 get length <NEXT> if i1 > = $ i0 goto label3 <NEXT> r4 = r3 item i1 <NEXT> r6 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ z0 = specialinvoke r6 be candidate element r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> r7 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ z1 = r7 node name equal r4 \ `` constructor-arg\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 = org w3c dom element r4 <NEXT> r8 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> r8 parse constructor arg element $ r5 r2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r1 get child node <NEXT> i1 = 0 <NEXT> label $ i0 = r3 get length <NEXT> if i1 > = $ i0 goto label3 <NEXT> r4 = r3 item i1 <NEXT> r6 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ z0 = specialinvoke r6 be candidate element r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> r7 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ z1 = r7 node name equal r4 \ `` property\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 = org w3c dom element r4 <NEXT> r8 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> r8 parse property element $ r5 r2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r1 get child node <NEXT> i1 = 0 <NEXT> label $ i0 = r3 get length <NEXT> if i1 > = $ i0 goto label3 <NEXT> r4 = r3 item i1 <NEXT> r6 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ z0 = specialinvoke r6 be candidate element r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> r7 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ z1 = r7 node name equal r4 \ `` qualifier\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 = org w3c dom element r4 <NEXT> r8 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> r8 parse qualifier element $ r5 r2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r1 get child node <NEXT> i1 = 0 <NEXT> label $ i0 = r3 get length <NEXT> if i1 > = $ i0 goto label3 <NEXT> r4 = r3 item i1 <NEXT> r12 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ z0 = specialinvoke r12 be candidate element r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> r13 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ z1 = r13 node name equal r4 \ `` lookup-method\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> r5 = org w3c dom element r4 <NEXT> r6 = r5 get attribute \ `` name\ `` <NEXT> r7 = r5 get attribute \ `` bean\ `` <NEXT> r11 = new org springframework bean factory support lookup override <NEXT> specialinvoke r11 < init > r6 r7 <NEXT> r14 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ r10 = r14 extract source r5 <NEXT> r11 set source $ r10 <NEXT> r15 = org springframework bean factory support method override r11 <NEXT> r2 add override r15 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework bean factory xml document default definition r0 <NEXT> r2 merge = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory xml document default definition r0 <NEXT> $ r1 = r2 dependency check <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory xml document default definition r0 <NEXT> $ r1 = r2 init method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory xml document default definition r0 <NEXT> $ r1 = r2 destroy method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org springframework core io support encode resource <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ i0 = r4 load bean definition r3 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ r3 = r7 document loader <NEXT> r8 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ r4 = r8 get entity resolver <NEXT> r9 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ r5 = r9 error handler <NEXT> r10 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ i0 = r10 get validation mode for resource r2 <NEXT> r11 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ z0 = r11 be namespace aware <NEXT> $ r6 = $ r3 load document r1 $ r4 $ r5 $ i0 $ z0 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r4 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ r1 = r4 namespace handler resolver <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ r3 = r5 create default namespace handler resolver <NEXT> r6 = org springframework bean factory xml xml bean definition reader r0 <NEXT> r6 namespace handler resolver = $ r3 <NEXT> label r7 = org springframework bean factory xml xml bean definition reader r0 <NEXT> $ r2 = r7 namespace handler resolver <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean invalid property exception r0 <NEXT> $ r1 = r2 property name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label2 <NEXT> $ r4 = r1 entry set <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = java util map $ entry $ r5 <NEXT> r11 = new org springframework bean property value <NEXT> $ r7 = r3 get key <NEXT> $ r8 = $ r7 to string <NEXT> $ r9 = r3 get value <NEXT> specialinvoke r11 < init > $ r8 $ r9 <NEXT> r12 = org springframework bean mutable property value r0 <NEXT> r12 add property value r11 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r13 = org springframework bean mutable property value r0 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework bean mutable property value r0 <NEXT> r1 convert = 1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> r1 = newarray java lang string [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r0 <NEXT> if i2 > = $ i1 goto label3 <NEXT> $ r2 = r0 [ i2 ] <NEXT> $ r3 = org springframework bean property accessor utils canonical property name $ r2 <NEXT> r1 [ i2 ] = $ r3 <NEXT> i2 = i2 + 1 <NEXT> goto label2 <NEXT> if i2 > = $ i1 goto label3 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r2 == null goto label01 <NEXT> $ r26 = org springframework bean property accessor utils get property name r2 <NEXT> goto label02 <NEXT> label r3 = $ r26 <NEXT> r31 = org springframework bean property editor registry support r0 <NEXT> $ r8 = r31 custom editor <NEXT> if $ r8 == null goto label04 <NEXT> r32 = org springframework bean property editor registry support r0 <NEXT> $ r19 = r32 custom editor <NEXT> $ r20 = $ r19 entry set <NEXT> r27 = $ r20 iterator <NEXT> label $ z3 = r27 have next <NEXT> if $ z3 == 0 goto label04 <NEXT> $ r21 = r27 next <NEXT> r28 = java util map $ entry $ r21 <NEXT> $ r22 = r28 get key <NEXT> $ r23 = java lang class $ r22 <NEXT> $ r24 = r28 get value <NEXT> $ r25 = java bean property editor $ r24 <NEXT> r1 register custom editor $ r23 $ r25 <NEXT> goto label03 <NEXT> if $ z3 == 0 goto label04 <NEXT> label r33 = org springframework bean property editor registry support r0 <NEXT> $ r9 = r33 custom editor for path <NEXT> if $ r9 == null goto label10 <NEXT> r34 = org springframework bean property editor registry support r0 <NEXT> $ r10 = r34 custom editor for path <NEXT> $ r11 = $ r10 entry set <NEXT> r29 = $ r11 iterator <NEXT> label $ z0 = r29 have next <NEXT> if $ z0 == 0 goto label10 <NEXT> $ r12 = r29 next <NEXT> r30 = java util map $ entry $ r12 <NEXT> $ r13 = r30 get key <NEXT> r4 = java lang string $ r13 <NEXT> $ r14 = r30 get value <NEXT> r5 = org springframework bean property editor registry support $ custom editor holder $ r14 <NEXT> if r2 == null goto label08 <NEXT> i0 = org springframework bean property accessor utils get first nest property separator index r4 <NEXT> if i0 == -1 goto label07 <NEXT> r6 = r4 substring 0 i0 <NEXT> $ i1 = i0 + 1 <NEXT> r7 = r4 substring $ i1 <NEXT> $ z1 = r6 equal r2 <NEXT> if $ z1 ! = 0 goto label06 <NEXT> $ z2 = r6 equal r3 <NEXT> if $ z2 == 0 goto label07 <NEXT> label $ r17 = org springframework bean property editor registry support $ custom editor holder access $ 200 r5 <NEXT> $ r18 = org springframework bean property editor registry support $ custom editor holder access $ 300 r5 <NEXT> r1 register custom editor $ r17 r7 $ r18 <NEXT> label goto label09 <NEXT> label goto label05 <NEXT> if r2 == null goto label08 <NEXT> label $ r15 = org springframework bean property editor registry support $ custom editor holder access $ 200 r5 <NEXT> $ r16 = org springframework bean property editor registry support $ custom editor holder access $ 300 r5 <NEXT> r1 register custom editor $ r15 r4 $ r16 <NEXT> if $ z0 == 0 goto label10 <NEXT> label return <NEXT> if r2 == null goto label01 <NEXT> label $ r26 = null <END>
<BEG> r0 = @ this <NEXT> r5 = org springframework bean propertyeditors custom date editor r0 <NEXT> $ r2 = r5 get value <NEXT> r1 = java util date $ r2 <NEXT> if r1 == null goto label1 <NEXT> r6 = org springframework bean propertyeditors custom date editor r0 <NEXT> $ r3 = r6 date format <NEXT> $ r4 = $ r3 format r1 <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if r1 == null goto label1 <NEXT> label $ r4 = \ `` \ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework bean propertyeditors custom map editor r0 <NEXT> r2 set value r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof java lang number <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = java lang number r1 <NEXT> r5 = org springframework bean propertyeditors custom number editor r0 <NEXT> $ r2 = r5 number class <NEXT> $ r4 = org springframework util number utils convert number to target class $ r3 $ r2 <NEXT> specialinvoke r0 set value $ r4 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label specialinvoke r0 set value r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org springframework bean property match for field r0 r1 2 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean support paged list holder r0 <NEXT> $ r1 = r2 sort <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework bean support paged list holder r0 <NEXT> $ i1 = r1 page size <NEXT> if i0 == $ i1 goto label1 <NEXT> r2 = org springframework bean support paged list holder r0 <NEXT> r2 page size = i0 <NEXT> r3 = org springframework bean support paged list holder r0 <NEXT> $ z0 = r3 new page set <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = org springframework bean support paged list holder r0 <NEXT> r4 page = 0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework bean support paged list holder r0 <NEXT> $ i0 = r1 max link page <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework bean support paged list holder r0 <NEXT> $ i0 = r1 get page <NEXT> r2 = org springframework bean support paged list holder r0 <NEXT> $ i1 = r2 get page count <NEXT> $ i2 = $ i1 - 1 <NEXT> if $ i0 ! = $ i2 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 ! = $ i2 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> if class \ `` ljava lang void \ `` == r0 goto label2 <NEXT> $ r1 = java lang void type <NEXT> if $ r1 == r0 goto label2 <NEXT> $ z0 = org springframework util class utils be primitive or wrapper r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r2 = class \ `` ljava lang enum \ `` <NEXT> $ z1 = $ r2 be assignable from r0 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ r3 = class \ `` ljava lang char sequence \ `` <NEXT> $ z2 = $ r3 be assignable from r0 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> $ r4 = class \ `` ljava lang number \ `` <NEXT> $ z3 = $ r4 be assignable from r0 <NEXT> if $ z3 ! = 0 goto label1 <NEXT> $ r5 = class \ `` ljava util date \ `` <NEXT> $ z4 = $ r5 be assignable from r0 <NEXT> if $ z4 ! = 0 goto label1 <NEXT> $ r6 = class \ `` ljava time temporal temporal \ `` <NEXT> $ z5 = $ r6 be assignable from r0 <NEXT> if $ z5 ! = 0 goto label1 <NEXT> if class \ `` ljava net uri \ `` == r0 goto label1 <NEXT> if class \ `` ljava net url \ `` == r0 goto label1 <NEXT> if class \ `` ljava util locale \ `` == r0 goto label1 <NEXT> if class \ `` ljava lang class \ `` ! = r0 goto label2 <NEXT> label $ z6 = 1 <NEXT> goto label3 <NEXT> label return $ z6 <NEXT> if class \ `` ljava lang class \ `` ! = r0 goto label2 <NEXT> label $ z6 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory config name bean holder r0 <NEXT> $ r1 = r2 bean instance <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org springframework bean factory injection point r0 <NEXT> $ r1 = r5 field <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org springframework bean factory injection point r0 <NEXT> $ r3 = r6 field <NEXT> $ r4 = $ r3 get type <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ r1 == null goto label1 <NEXT> label r7 = org springframework bean factory injection point r0 <NEXT> $ r2 = r7 obtain method parameter <NEXT> $ r4 = $ r2 get parameter type <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework bean factory parse reader context r0 <NEXT> $ r2 = r3 event listener <NEXT> $ r2 component register r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org springframework bean factory support abstract autowire capable bean factory r0 <NEXT> $ r7 = r9 get bean post processor <NEXT> r3 = $ r7 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r8 = r3 next <NEXT> r4 = org springframework bean factory config bean post processor $ r8 <NEXT> $ z1 = r4 instanceof org springframework bean factory config instantiation aware bean post processor <NEXT> if $ z1 == 0 goto label2 <NEXT> r5 = org springframework bean factory config instantiation aware bean post processor r4 <NEXT> r6 = r5 post process before instantiation r1 r2 <NEXT> if r6 == null goto label2 <NEXT> return r6 <NEXT> if r6 == null goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory support bean definition default r0 <NEXT> $ r1 = r2 init method name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org springframework util string utils have text r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = r1 <NEXT> goto label2 <NEXT> label r4 = org springframework bean factory support bean definition default r0 <NEXT> r4 destroy method name = $ r3 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r3 = null <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory support bean definition default r0 <NEXT> $ r1 = r2 destroy method name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory support bean definition override exception r0 <NEXT> $ r1 = r2 bean definition <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework bean factory xml bean definition parser delegate r0 <NEXT> $ r1 = r2 default <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework bean property value r0 <NEXT> $ z0 = r1 optional <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> org springframework util assert not null r0 \ `` class must not be null\ `` <NEXT> $ z0 = org springframework core kotlin detector be kotlin reflect present <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = org springframework core kotlin detector be kotlin type r0 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r1 = org springframework bean bean utils $ kotlin delegate find primary constructor r0 <NEXT> return $ r1 <NEXT> if $ z1 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org springframework bean factory support root bean definition r0 <NEXT> $ r4 = r8 post processing lock <NEXT> entermonitor $ r4 <NEXT> label r9 = org springframework bean factory support root bean definition r0 <NEXT> $ r5 = r9 externally manage config member <NEXT> if $ r5 == null goto label2 <NEXT> r10 = org springframework bean factory support root bean definition r0 <NEXT> $ r6 = r10 externally manage config member <NEXT> $ z0 = $ r6 contain r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label exitmonitor $ r4 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org springframework bean factory support root bean definition r0 <NEXT> $ r4 = r8 post processing lock <NEXT> entermonitor $ r4 <NEXT> label r9 = org springframework bean factory support root bean definition r0 <NEXT> $ r5 = r9 externally manage init method <NEXT> if $ r5 == null goto label2 <NEXT> r10 = org springframework bean factory support root bean definition r0 <NEXT> $ r6 = r10 externally manage init method <NEXT> $ z0 = $ r6 contain r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label exitmonitor $ r4 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework boot builder spring application builder r0 <NEXT> $ r2 = r3 application <NEXT> $ r2 set application context class r1 <NEXT> r4 = org springframework boot builder spring application builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org springframework boot builder spring application builder r0 <NEXT> $ r1 = r2 application <NEXT> $ r1 set log startup info z0 <NEXT> r3 = org springframework boot builder spring application builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org springframework boot builder spring application builder r0 <NEXT> $ r1 = r2 application <NEXT> $ r1 set headless z0 <NEXT> r3 = org springframework boot builder spring application builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework boot builder spring application builder r0 <NEXT> $ r2 = r3 application <NEXT> $ r2 set main application class r1 <NEXT> r4 = org springframework boot builder spring application builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework boot builder spring application builder r0 <NEXT> $ r2 = r3 application <NEXT> $ r2 set bean name generator r1 <NEXT> r4 = org springframework boot builder spring application builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot context property bind bind exception r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot context property source invalid configuration property value exception r0 <NEXT> $ r1 = r2 reason <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> org springframework boot convert application conversion service add delimit string converter r0 <NEXT> r14 = new org springframework boot convert string to duration converter <NEXT> specialinvoke r14 < init > <NEXT> r27 = org springframework core convert converter generic converter r14 <NEXT> r0 add converter r27 <NEXT> r15 = new org springframework boot convert duration to string converter <NEXT> specialinvoke r15 < init > <NEXT> r28 = org springframework core convert converter generic converter r15 <NEXT> r0 add converter r28 <NEXT> r16 = new org springframework boot convert number to duration converter <NEXT> specialinvoke r16 < init > <NEXT> r29 = org springframework core convert converter generic converter r16 <NEXT> r0 add converter r29 <NEXT> r17 = new org springframework boot convert duration to number converter <NEXT> specialinvoke r17 < init > <NEXT> r30 = org springframework core convert converter generic converter r17 <NEXT> r0 add converter r30 <NEXT> r18 = new org springframework boot convert string to period converter <NEXT> specialinvoke r18 < init > <NEXT> r31 = org springframework core convert converter generic converter r18 <NEXT> r0 add converter r31 <NEXT> r19 = new org springframework boot convert period to string converter <NEXT> specialinvoke r19 < init > <NEXT> r32 = org springframework core convert converter generic converter r19 <NEXT> r0 add converter r32 <NEXT> r20 = new org springframework boot convert number to period converter <NEXT> specialinvoke r20 < init > <NEXT> r33 = org springframework core convert converter generic converter r20 <NEXT> r0 add converter r33 <NEXT> r21 = new org springframework boot convert string to data size converter <NEXT> specialinvoke r21 < init > <NEXT> r34 = org springframework core convert converter generic converter r21 <NEXT> r0 add converter r34 <NEXT> r22 = new org springframework boot convert number to data size converter <NEXT> specialinvoke r22 < init > <NEXT> r35 = org springframework core convert converter generic converter r22 <NEXT> r0 add converter r35 <NEXT> r23 = new org springframework boot convert string to file converter <NEXT> specialinvoke r23 < init > <NEXT> r36 = org springframework core convert converter converter r23 <NEXT> r0 add converter r36 <NEXT> r24 = new org springframework boot convert input stream source to byte array converter <NEXT> specialinvoke r24 < init > <NEXT> r37 = org springframework core convert converter converter r24 <NEXT> r0 add converter r37 <NEXT> r25 = new org springframework boot convert lenient string to enum converter factory <NEXT> specialinvoke r25 < init > <NEXT> r38 = org springframework core convert converter converter factory r25 <NEXT> r0 add converter factory r38 <NEXT> r26 = new org springframework boot convert lenient boolean to enum converter factory <NEXT> specialinvoke r26 < init > <NEXT> r39 = org springframework core convert converter converter factory r26 <NEXT> r0 add converter factory r39 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = r0 get class <NEXT> $ r2 = org springframework core resolvable type for class class \ `` lorg springframework boot diagnostics abstract failure analyzer \ <NEXT> $ r3 = newarray int [ 0 ] <NEXT> $ r4 = $ r2 resolve generic $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot diagnostics failure analysis r0 <NEXT> $ r1 = r2 description <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org springframework boot jta atomikos atomikos property r0 <NEXT> r1 default max wait time on shutdown = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework boot log abstract log system r0 <NEXT> $ r1 = r3 get spring config location <NEXT> r4 = org springframework boot log abstract log system r0 <NEXT> $ r2 = specialinvoke r4 find config $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 > = 1 goto label1 <NEXT> $ r12 = org springframework boot log log4j2 color converter logger <NEXT> $ i2 = lengthof r1 <NEXT> $ r13 = java lang integer value of $ i2 <NEXT> $ r12 error \ `` incorrect number of option on style expect at least 1 receive { } \ <NEXT> return null <NEXT> if $ i0 > = 1 goto label1 <NEXT> label $ r5 = r1 [ 0 ] <NEXT> if $ r5 ! = null goto label2 <NEXT> $ r11 = org springframework boot log log4j2 color converter logger <NEXT> $ r11 error \ `` no pattern supply on style\ `` <NEXT> if $ r5 ! = null goto label2 <NEXT> label r2 = org apache log log4j core layout pattern layout create pattern parser r0 <NEXT> $ r6 = r1 [ 0 ] <NEXT> r3 = r2 parse $ r6 <NEXT> $ i1 = lengthof r1 <NEXT> if $ i1 == 1 goto label3 <NEXT> $ r9 = org springframework boot log log4j2 color converter element <NEXT> $ r8 = r1 [ 1 ] <NEXT> $ r10 = $ r9 get $ r8 <NEXT> $ r14 = org springframework boot ansi ansi element $ r10 <NEXT> goto label4 <NEXT> label $ r7 = new org springframework boot log log4j2 color converter <NEXT> specialinvoke $ r7 < init > r3 $ r14 <NEXT> return $ r7 <NEXT> if $ i1 == 1 goto label3 <NEXT> label $ r14 = null <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot system application home r0 <NEXT> $ r1 = r2 source <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> org springframework util assert not null r1 \ `` name must not be null\ `` <NEXT> org springframework util assert not null r2 \ `` value must not be null\ `` <NEXT> r16 = new org springframework boot web client rest template builder <NEXT> r17 = org springframework boot web client rest template builder r0 <NEXT> $ r5 = r17 request factory customizer <NEXT> r18 = org springframework boot web client rest template builder r0 <NEXT> $ z0 = r18 detect request factory <NEXT> r19 = org springframework boot web client rest template builder r0 <NEXT> $ r6 = r19 root uri <NEXT> r20 = org springframework boot web client rest template builder r0 <NEXT> $ r7 = r20 message converter <NEXT> r21 = org springframework boot web client rest template builder r0 <NEXT> $ r8 = r21 interceptor <NEXT> r22 = org springframework boot web client rest template builder r0 <NEXT> $ r9 = r22 request factory <NEXT> r23 = org springframework boot web client rest template builder r0 <NEXT> $ r10 = r23 uri template handler <NEXT> r24 = org springframework boot web client rest template builder r0 <NEXT> $ r11 = r24 error handler <NEXT> r25 = org springframework boot web client rest template builder r0 <NEXT> $ r12 = r25 basic authentication <NEXT> r26 = org springframework boot web client rest template builder r0 <NEXT> $ r4 = r26 default header <NEXT> $ r13 = org springframework boot web client rest template builder append $ r4 r1 r2 <NEXT> r27 = org springframework boot web client rest template builder r0 <NEXT> $ r15 = r27 customizers <NEXT> r28 = org springframework boot web client rest template builder r0 <NEXT> $ r14 = r28 request customizers <NEXT> specialinvoke r16 < init > $ r5 $ z0 $ r6 $ r7 $ r8 $ r9 $ r10 $ r11 $ r12 $ r13 $ r15 $ r14 <NEXT> return r16 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot web embed tomcat tomcat servlet web server factory r0 <NEXT> $ r1 = r2 tld skip pattern <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` pattern must not be null\ `` <NEXT> r3 = new java util link hash set <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org springframework boot web embed tomcat tomcat servlet web server factory r0 <NEXT> r4 tld skip pattern = r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot web embed tomcat tomcat web server r0 <NEXT> $ r1 = r2 tomcat <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework boot web embed undertow undertow servlet web server factory r0 <NEXT> r1 eager init filter = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework boot web reactive result view mustache view r0 <NEXT> r2 charset = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework boot web server compression r0 <NEXT> $ z0 = r1 enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org springframework boot web server mime mapping r0 <NEXT> $ r3 = r6 map <NEXT> $ r4 = $ r3 remove r1 <NEXT> r2 = org springframework boot web server mime mapping $ map $ r4 <NEXT> if r2 == null goto label1 <NEXT> $ r5 = r2 get mime type <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if r2 == null goto label1 <NEXT> label $ r5 = null <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework boot web server port in use exception r0 <NEXT> $ i0 = r1 port <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r4 = r0 <NEXT> label if r4 == null goto label3 <NEXT> $ z0 = r1 be instance r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r3 = java lang exception r4 <NEXT> r2 accept $ r3 <NEXT> return <NEXT> if $ z0 == 0 goto label2 <NEXT> label r4 = r4 get cause <NEXT> goto label1 <NEXT> label if r4 == null goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot web server ssl r0 <NEXT> $ r1 = r2 key store password <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` servlet name must not be null\ `` <NEXT> r4 = org springframework boot web servlet abstract filter registration bean r0 <NEXT> $ r2 = r4 servlet name <NEXT> $ r3 = java util array a list r1 <NEXT> $ r2 add all $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework boot web servlet abstract filter registration bean r0 <NEXT> $ z0 = r1 match after <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework boot web servlet dynamic registration bean r0 <NEXT> $ r2 = r4 name <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org springframework boot web servlet dynamic registration bean r0 <NEXT> $ r3 = r5 name <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r2 == null goto label1 <NEXT> label $ r3 = org springframework core convention get variable name r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework boot web servlet multipart config factory r0 <NEXT> r2 location = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot web servlet server session r0 <NEXT> $ r1 = r2 store dir <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework boot context config profile r0 <NEXT> $ r1 = r3 active profile <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = org springframework boot context config profile r0 <NEXT> $ r2 = r4 active profile <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r5 = org springframework boot context config profile r0 <NEXT> $ r2 = r5 default profile <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework boot spring application r0 <NEXT> r2 = r3 get spring boot exception handler <NEXT> if r2 == null goto label1 <NEXT> r2 register log exception r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot spring application r0 <NEXT> $ r1 = r2 main application class <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework boot spring application r0 <NEXT> r2 main application class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot spring application r0 <NEXT> $ r1 = r2 source <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework boot builder spring application builder r0 <NEXT> $ r2 = r3 application <NEXT> $ r2 set environment prefix r1 <NEXT> r4 = org springframework boot builder spring application builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework boot spring application r0 <NEXT> r2 environment prefix = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = new org springframework boot sql init abstract script database initializer $ script location resolver <NEXT> r5 = org springframework boot sql init abstract script database initializer r0 <NEXT> $ r3 = r5 resource loader <NEXT> specialinvoke r4 < init > $ r3 <NEXT> r6 = org springframework boot sql init abstract script database initializer r0 <NEXT> z0 = specialinvoke r6 apply schema script r4 <NEXT> r7 = org springframework boot sql init abstract script database initializer r0 <NEXT> $ z1 = specialinvoke r7 apply data script r4 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> if z0 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if z0 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework boot sql init database initialization setting r0 <NEXT> r2 schema location = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework boot sql init database initialization setting r0 <NEXT> r2 data location = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> r3 = r1 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r9 = r3 next <NEXT> r4 = java lang string $ r9 <NEXT> $ r10 = $ r5 append \ `` \t- \ `` <NEXT> $ r11 = $ r10 append r4 <NEXT> $ r12 = newarray java lang object [ 0 ] <NEXT> $ r13 = java lang string format \ `` % n\ <NEXT> $ r11 append $ r13 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r6 = new java lang illegal state exception <NEXT> $ r7 = newarray java lang object [ 1 ] <NEXT> $ r7 [ 0 ] = $ r5 <NEXT> $ r8 = java lang string format \ `` the following class could not be exclude because they be not auto-configuration class % n % s\ <NEXT> specialinvoke $ r6 < init > $ r8 <NEXT> throw $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org springframework boot autoconfigure condition condition outcome <NEXT> $ z0 = r0 be match <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label $ r2 = r0 get condition message <NEXT> specialinvoke $ r1 < init > $ z1 $ r2 <NEXT> return $ r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework boot autoconfigure mustache mustache resource template loader r0 <NEXT> r2 resource loader = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org springframework boot autoconfigure r2dbc r2dbc property r0 <NEXT> $ r1 = r5 unique name <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = java util uuid random u u i d <NEXT> $ r4 = $ r3 to string <NEXT> r6 = org springframework boot autoconfigure r2dbc r2dbc property r0 <NEXT> r6 unique name = $ r4 <NEXT> label r7 = org springframework boot autoconfigure r2dbc r2dbc property r0 <NEXT> $ r2 = r7 unique name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` resolver must not be null\ `` <NEXT> r6 = org springframework boot autoconfigure template template location r0 <NEXT> $ r3 = r6 path <NEXT> $ r4 = r1 get resource $ r3 <NEXT> $ z0 = $ r4 exist <NEXT> if $ z0 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org springframework boot autoconfigure template template location r0 <NEXT> $ z1 = specialinvoke r7 any exists r1 <NEXT> label return $ z1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework boot configurationprocessor metadata configuration metadata r0 <NEXT> $ r2 = r4 hint <NEXT> $ r3 = r1 get name <NEXT> r5 = org springframework boot configurationprocessor metadata configuration metadata r0 <NEXT> specialinvoke r5 add $ r2 $ r3 r1 <NEXT> return <END>
<BEG> $ z0 = org springframework boot devtools restart agent reloader be active null <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r0 = class \ `` lorg springframework boot devtools restart agent reloader \ `` <NEXT> $ r1 = $ r0 get class loader <NEXT> $ z1 = org springframework boot devtools restart agent reloader be active $ r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ r2 = java lang class loader get system class loader <NEXT> $ z2 = org springframework boot devtools restart agent reloader be active $ r2 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> i1 = 0 <NEXT> r7 = org springframework boot devtools restart classloader class loader file r0 <NEXT> $ r3 = r7 source directory <NEXT> $ r4 = $ r3 value <NEXT> r1 = $ r4 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r1 next <NEXT> r2 = org springframework boot devtools restart classloader class loader file $ source directory $ r5 <NEXT> $ r6 = r2 get file <NEXT> $ i0 = $ r6 size <NEXT> i1 = i1 + $ i0 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return i1 <END>
<BEG> r0 = @ this <NEXT> r11 = org springframework boot devtools tunnel payload http tunnel payload r0 <NEXT> $ r3 = r11 data <NEXT> r1 = $ r3 array <NEXT> r12 = org springframework boot devtools tunnel payload http tunnel payload r0 <NEXT> $ r4 = r12 data <NEXT> $ i1 = $ r4 remain <NEXT> $ i2 = $ i1 * 2 <NEXT> r2 = newarray char [ $ i2 ] <NEXT> r13 = org springframework boot devtools tunnel payload http tunnel payload r0 <NEXT> $ r5 = r13 data <NEXT> i12 = $ r5 position <NEXT> label r14 = org springframework boot devtools tunnel payload http tunnel payload r0 <NEXT> $ r6 = r14 data <NEXT> $ i3 = $ r6 remain <NEXT> if i12 > = $ i3 goto label2 <NEXT> $ b4 = r1 [ i12 ] <NEXT> s0 = $ b4 & 255 <NEXT> $ i7 = i12 * 2 <NEXT> $ r8 = org springframework boot devtools tunnel payload http tunnel payload hex_chars <NEXT> $ s5 = s0 > > > 4 <NEXT> $ c6 = $ r8 [ $ s5 ] <NEXT> r2 [ $ i7 ] = $ c6 <NEXT> $ i8 = i12 * 2 <NEXT> $ i11 = $ i8 + 1 <NEXT> $ r9 = org springframework boot devtools tunnel payload http tunnel payload hex_chars <NEXT> $ s9 = s0 & 15 <NEXT> $ c10 = $ r9 [ $ s9 ] <NEXT> r2 [ $ i11 ] = $ c10 <NEXT> i12 = i12 + 1 <NEXT> goto label1 <NEXT> if i12 > = $ i3 goto label2 <NEXT> label r10 = new java lang string <NEXT> specialinvoke r10 < init > r2 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> r6 = new org apache common compress archivers jar jar archive entry <NEXT> specialinvoke r6 < init > r1 <NEXT> $ r5 = abstract jar writer $ lambda_write index file_1__3 bootstrap $ r2 <NEXT> r7 = org springframework boot loader tool abstract jar writer r0 <NEXT> specialinvoke r7 write entry r6 $ r5 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = main class finder $ get name__2 bootstrap $ <NEXT> $ r2 = org springframework boot loader tool main class finder do with main class r0 $ r1 <NEXT> $ r3 = java lang string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r7 = new org springframework boot loader tool main class finder $ single main class callback <NEXT> specialinvoke r7 < init > r2 null <NEXT> r8 = org springframework boot loader tool main class finder $ main class callback r7 <NEXT> org springframework boot loader tool main class finder do with main class r0 r1 r8 <NEXT> $ r6 = org springframework boot loader tool main class finder $ single main class callback access $ 100 r7 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org springframework boot loader tool repackager r0 <NEXT> r3 repackage r1 r2 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework boot test context assertj application context assert $ scope include_ancestors <NEXT> r4 = org springframework boot test context assertj application context assert r0 <NEXT> $ r3 = r4 do not have bean r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> org springframework util assert not null r2 \ `` scope must not be null\ `` <NEXT> r13 = org springframework boot test context assertj application context assert r0 <NEXT> $ r3 = r13 startup failure <NEXT> if $ r3 == null goto label1 <NEXT> $ r11 = newarray java lang object [ 1 ] <NEXT> $ r11 [ 0 ] = r1 <NEXT> r14 = org springframework boot test context assertj application context assert r0 <NEXT> $ r12 = specialinvoke r14 context fail to start when expect \ `` to get bean of type % n < % s > \ <NEXT> r15 = org springframework boot test context assertj application context assert r0 <NEXT> r16 = org assertj core error error message factory $ r12 <NEXT> r15 throw assertion error r16 <NEXT> label r17 = org springframework boot test context assertj application context assert r0 <NEXT> $ r4 = r17 get application context <NEXT> $ r5 = r2 get bean of type $ r4 r1 <NEXT> $ r6 = org assertj core api assertion assert that $ r5 <NEXT> $ r7 = newarray java lang object [ 2 ] <NEXT> $ r7 [ 0 ] = r1 <NEXT> r18 = org springframework boot test context assertj application context assert r0 <NEXT> $ r8 = r18 get application context <NEXT> $ r7 [ 1 ] = $ r8 <NEXT> $ r9 = $ r6 a \ `` bean of type < % s > from < % s > \ <NEXT> $ r10 = org assertj core api map assert $ r9 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org springframework boot test json abstract json marshal tester r0 <NEXT> $ r3 = r5 resource load class <NEXT> if $ r3 ! = null goto label1 <NEXT> r6 = org springframework boot test json abstract json marshal tester r0 <NEXT> $ r4 = r6 type <NEXT> if $ r4 ! = null goto label1 <NEXT> r7 = org springframework boot test json abstract json marshal tester r0 <NEXT> r7 resource load class = r1 <NEXT> r8 = org springframework boot test json abstract json marshal tester r0 <NEXT> r8 type = r2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot test json abstract json marshal tester r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new org springframework boot test json json content assert $ json path value <NEXT> r5 = org springframework boot test json json content assert r0 <NEXT> specialinvoke r4 < init > r5 r1 r2 <NEXT> r4 assert have value class \ `` ljava util list \ <NEXT> r6 = org springframework boot test json json content assert r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework boot test json object content r0 <NEXT> $ r1 = r2 object <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util array stream r1 <NEXT> $ r3 = test property value $ parse__1 bootstrap $ <NEXT> $ r4 = $ r2 map $ r3 <NEXT> r6 = org springframework boot test util test property value r0 <NEXT> $ r5 = specialinvoke r6 and $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get environment <NEXT> r3 = org springframework boot test util test property value r0 <NEXT> r3 apply to $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org springframework boot test web client test rest template r0 <NEXT> $ r3 = r6 rest template <NEXT> r7 = org springframework boot test web client test rest template r0 <NEXT> $ r4 = specialinvoke r7 apply root uri if necessary r1 <NEXT> $ r5 = $ r3 get for object $ r4 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org springframework boot test web client test rest template r0 <NEXT> $ r3 = r6 rest template <NEXT> r7 = org springframework boot test web client test rest template r0 <NEXT> $ r4 = specialinvoke r7 apply root uri if necessary r1 <NEXT> $ r5 = $ r3 get for entity $ r4 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org springframework boot test autoconfigure orm jpa test entity manager r0 <NEXT> $ r2 = r5 entity manager factory <NEXT> $ r3 = $ r2 get persistence unit util <NEXT> $ r4 = $ r3 get identifier r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org springframework cache concurrent concurrent map cache <NEXT> r4 = org springframework cache concurrent concurrent map cache manager r0 <NEXT> $ z0 = r4 be allow null value <NEXT> specialinvoke r3 < init > r1 $ z0 <NEXT> r5 = org springframework cache cache r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r25 = org springframework cache interceptor abstract fallback cache operation source r0 <NEXT> r3 = r25 get cache key r1 r2 <NEXT> r26 = org springframework cache interceptor abstract fallback cache operation source r0 <NEXT> $ r6 = r26 attribute cache <NEXT> $ r7 = $ r6 get r3 <NEXT> r4 = java util collection $ r7 <NEXT> if r4 == null goto label3 <NEXT> $ r22 = org springframework cache interceptor abstract fallback cache operation source null_caching_attribute <NEXT> if r4 == $ r22 goto label1 <NEXT> $ r23 = r4 <NEXT> goto label2 <NEXT> label return $ r23 <NEXT> if r4 == $ r22 goto label1 <NEXT> label $ r23 = null <NEXT> if r4 == null goto label3 <NEXT> label r27 = org springframework cache interceptor abstract fallback cache operation source r0 <NEXT> r5 = specialinvoke r27 compute cache operation r1 r2 <NEXT> if r5 == null goto label5 <NEXT> r28 = org springframework cache interceptor abstract fallback cache operation source r0 <NEXT> $ r11 = r28 logger <NEXT> $ z0 = $ r11 be debug enabled <NEXT> if $ z0 == 0 goto label4 <NEXT> r29 = org springframework cache interceptor abstract fallback cache operation source r0 <NEXT> $ r15 = r29 logger <NEXT> r24 = new java lang string builder <NEXT> specialinvoke r24 < init > <NEXT> $ r16 = r24 append \ `` add cacheable method \'\ `` <NEXT> $ r17 = r1 get name <NEXT> $ r18 = $ r16 append $ r17 <NEXT> $ r19 = $ r18 append \ `` \ ' with attribute \ `` <NEXT> $ r20 = $ r19 append r5 <NEXT> $ r21 = $ r20 to string <NEXT> $ r15 debug $ r21 <NEXT> label r30 = org springframework cache interceptor abstract fallback cache operation source r0 <NEXT> $ r12 = r30 attribute cache <NEXT> $ r12 put r3 r5 <NEXT> goto label6 <NEXT> label return r5 <NEXT> if r5 == null goto label5 <NEXT> label r31 = org springframework cache interceptor abstract fallback cache operation source r0 <NEXT> $ r9 = r31 attribute cache <NEXT> $ r8 = org springframework cache interceptor abstract fallback cache operation source null_caching_attribute <NEXT> $ r9 put r3 $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework cache interceptor bean factory cache operation source advisor r0 <NEXT> r2 cache operation source = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework cache support composite cache manager r0 <NEXT> $ r2 = r3 cache manager <NEXT> $ r2 add all r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r6 = r0 get class <NEXT> r2 = org springframework core generic type resolver resolve type argument $ r6 class \ `` lorg springframework context annotation advice mode import selector \ `` <NEXT> r19 = org springframework core type annotate type metadata r1 <NEXT> r3 = org springframework context annotation annotation config utils attribute for r19 r2 <NEXT> if r3 ! = null goto label1 <NEXT> r17 = new java lang illegal argument exception <NEXT> $ r13 = newarray java lang object [ 2 ] <NEXT> $ r14 = r2 get simple name <NEXT> $ r13 [ 0 ] = $ r14 <NEXT> $ r15 = r1 get class name <NEXT> $ r13 [ 1 ] = $ r15 <NEXT> $ r16 = java lang string format \ `` @ % s be not present on import class \ ' % s\ ' a expected\ <NEXT> specialinvoke r17 < init > $ r16 <NEXT> throw r17 <NEXT> if r3 ! = null goto label1 <NEXT> label r20 = org springframework context annotation advice mode import selector r0 <NEXT> $ r7 = r20 get advice mode attribute name <NEXT> $ r8 = r3 get enum $ r7 <NEXT> r4 = org springframework context annotation advice mode $ r8 <NEXT> r21 = org springframework context annotation advice mode import selector r0 <NEXT> r5 = r21 select import r4 <NEXT> if r5 ! = null goto label2 <NEXT> r18 = new java lang illegal argument exception <NEXT> $ r10 = newarray java lang object [ 1 ] <NEXT> $ r10 [ 0 ] = r4 <NEXT> $ r11 = java lang string format \ `` unknown advice mode \ ' % s\'\ <NEXT> specialinvoke r18 < init > $ r11 <NEXT> throw r18 <NEXT> if r5 ! = null goto label2 <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework context annotation configuration class r0 <NEXT> $ r1 = r2 import by <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = class \ `` lorg springframework context annotation configuration class enhancer $ enhanced configuration \ `` <NEXT> $ z0 = $ r4 be assignable from r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r12 = org springframework context annotation configuration class enhancer logger <NEXT> $ z2 = $ r12 be debug enabled <NEXT> if $ z2 == 0 goto label1 <NEXT> $ r14 = org springframework context annotation configuration class enhancer logger <NEXT> $ r13 = newarray java lang object [ 1 ] <NEXT> $ r15 = r1 get name <NEXT> $ r13 [ 0 ] = $ r15 <NEXT> $ r16 = java lang string format \ `` ignore request to enhance % s a it have already be enhance this usually indicate that more than one configuration class post processor have be register e g via < contextannotation-config > this be harmless but you may want check your configuration and remove one ccpp if possible\ <NEXT> $ r14 debug $ r16 <NEXT> label return r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r17 = org springframework context annotation configuration class enhancer r0 <NEXT> $ r5 = specialinvoke r17 new enhancer r1 r2 <NEXT> r18 = org springframework context annotation configuration class enhancer r0 <NEXT> r3 = specialinvoke r18 create class $ r5 <NEXT> $ r6 = org springframework context annotation configuration class enhancer logger <NEXT> $ z1 = $ r6 be debug enabled <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r8 = org springframework context annotation configuration class enhancer logger <NEXT> $ r7 = newarray java lang object [ 2 ] <NEXT> $ r9 = r1 get name <NEXT> $ r7 [ 0 ] = $ r9 <NEXT> $ r10 = r3 get name <NEXT> $ r7 [ 1 ] = $ r10 <NEXT> $ r11 = java lang string format \ `` successfully enhance % s enhance class name be % s\ <NEXT> $ r8 debug $ r11 <NEXT> label return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert have length r1 \ `` display name must not be empty\ `` <NEXT> r2 = org springframework context support abstract application context r0 <NEXT> r2 display name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework context support abstract application context r0 <NEXT> $ r1 = r2 get bean factory <NEXT> r3 = org springframework bean factory config autowire capable bean factory $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework context support abstract application context r0 <NEXT> $ l0 = r1 startup date <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework context support abstract application context r0 <NEXT> $ r1 = r2 bean factory post processor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework context support abstract message source r0 <NEXT> $ z0 = r1 use code a default message <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r11 = org springframework context support application object support r0 <NEXT> $ r1 = r11 message source accessor <NEXT> if $ r1 ! = null goto label1 <NEXT> r12 = org springframework context support application object support r0 <NEXT> $ z0 = r12 be context require <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = new java lang illegal state exception <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r5 = r9 append \ `` application object support instance [ \ `` <NEXT> $ r6 = $ r5 append r0 <NEXT> $ r7 = $ r6 append \ `` ] do not run in an application context\ `` <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke r10 < init > $ r8 <NEXT> throw r10 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r13 = org springframework context support application object support r0 <NEXT> $ r2 = r13 message source accessor <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework context support generic application context r0 <NEXT> r2 resource loader = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework context support property source placeholder configurer r0 <NEXT> $ r1 = r3 apply property source <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label org springframework util assert state $ z0 \ `` property source have not get be applied\ `` <NEXT> r4 = org springframework context support property source placeholder configurer r0 <NEXT> $ r2 = r4 apply property source <NEXT> return $ r2 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ i1 = i0 * 1000 <NEXT> $ l2 = long $ i1 <NEXT> r1 = org springframework context support reloadable resource bundle message source r0 <NEXT> r1 cache millis = $ l2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r1 get input stream <NEXT> r46 = org springframework context support reloadable resource bundle message source r0 <NEXT> r4 = r46 new property <NEXT> label $ r6 = r1 get filename <NEXT> $ z0 = $ r6 end with \ `` xml\ `` <NEXT> if $ z0 == 0 goto label03 <NEXT> r47 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r30 = r47 logger <NEXT> $ z3 = $ r30 be debug enabled <NEXT> if $ z3 == 0 goto label02 <NEXT> r48 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r33 = r48 logger <NEXT> r42 = new java lang string builder <NEXT> specialinvoke r42 < init > <NEXT> $ r34 = r42 append \ `` load property [ \ `` <NEXT> $ r35 = r1 get filename <NEXT> $ r36 = $ r34 append $ r35 <NEXT> $ r37 = $ r36 append \ `` ] \ `` <NEXT> $ r38 = $ r37 to string <NEXT> $ r33 debug $ r38 <NEXT> label r49 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r31 = r49 property persister <NEXT> $ r31 load from xml r4 r3 <NEXT> goto label09 <NEXT> label r3 close <NEXT> return r4 <NEXT> if $ z0 == 0 goto label03 <NEXT> label r40 = null <NEXT> r50 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r7 = r50 file encoding <NEXT> if $ r7 == null goto label04 <NEXT> r51 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r29 = r51 file encoding <NEXT> r40 = $ r29 get property r2 <NEXT> label if r40 ! = null goto label05 <NEXT> r52 = org springframework context support reloadable resource bundle message source r0 <NEXT> r40 = r52 default encode <NEXT> label if r40 == null goto label07 <NEXT> r53 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r17 = r53 logger <NEXT> $ z2 = $ r17 be debug enabled <NEXT> if $ z2 == 0 goto label06 <NEXT> r54 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r21 = r54 logger <NEXT> r43 = new java lang string builder <NEXT> specialinvoke r43 < init > <NEXT> $ r22 = r43 append \ `` load property [ \ `` <NEXT> $ r23 = r1 get filename <NEXT> $ r24 = $ r22 append $ r23 <NEXT> $ r25 = $ r24 append \ `` ] with encode \'\ `` <NEXT> $ r26 = $ r25 append r40 <NEXT> $ r27 = $ r26 append \ `` \'\ `` <NEXT> $ r28 = $ r27 to string <NEXT> $ r21 debug $ r28 <NEXT> label r55 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r19 = r55 property persister <NEXT> r44 = new java io input stream reader <NEXT> specialinvoke r44 < init > r3 r40 <NEXT> $ r19 load r4 r44 <NEXT> label if r40 == null goto label07 <NEXT> label r56 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r8 = r56 logger <NEXT> $ z1 = $ r8 be debug enabled <NEXT> if $ z1 == 0 goto label08 <NEXT> r57 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r11 = r57 logger <NEXT> r45 = new java lang string builder <NEXT> specialinvoke r45 < init > <NEXT> $ r12 = r45 append \ `` load property [ \ `` <NEXT> $ r13 = r1 get filename <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 append \ `` ] \ `` <NEXT> $ r16 = $ r15 to string <NEXT> $ r11 debug $ r16 <NEXT> label r58 = org springframework context support reloadable resource bundle message source r0 <NEXT> $ r9 = r58 property persister <NEXT> $ r9 load r4 r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r14 = org springframework ejb access abstract remote slsb invoker interceptor r0 <NEXT> r14 refresh home <NEXT> label goto label4 <NEXT> label r17 = org springframework ejb access abstract remote slsb invoker interceptor r0 <NEXT> $ r3 = r17 do invoke r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new org springframework bean factory annotation autowired annotation bean post processor <NEXT> specialinvoke r5 < init > <NEXT> r6 = org springframework ejb interceptor spring bean autowiring interceptor r0 <NEXT> r6 configure bean post processor r5 r1 <NEXT> r7 = org springframework ejb interceptor spring bean autowiring interceptor r0 <NEXT> $ r4 = r7 get bean factory r1 <NEXT> r5 set bean factory $ r4 <NEXT> r5 process injection r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org springframework ejb interceptor spring bean autowiring interceptor r0 <NEXT> r2 = r7 get bean factory locator key r1 <NEXT> r8 = org springframework ejb interceptor spring bean autowiring interceptor r0 <NEXT> $ r4 = r8 get bean factory locator r1 <NEXT> r3 = $ r4 use bean factory r2 <NEXT> r9 = org springframework ejb interceptor spring bean autowiring interceptor r0 <NEXT> $ r5 = r9 bean factory reference <NEXT> $ r5 put r1 r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework format datetime date formatter r0 <NEXT> r2 time zone = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework format datetime date formatter r0 <NEXT> r1 lenient = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` date formatter must not be null\ `` <NEXT> r2 = org springframework format datetime date formatter registrar r0 <NEXT> r2 date formatter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org springframework format datetime joda joda time formatter registrar r0 <NEXT> $ r3 = r5 formatters <NEXT> $ r2 = org springframework format datetime joda joda time formatter registrar $ type date <NEXT> $ r3 put $ r2 r1 <NEXT> return <END>
<BEG> $ r0 = org springframework format datetime standard date time context holder date time context holder <NEXT> $ r1 = $ r0 get <NEXT> $ r2 = org springframework format datetime standard date time context $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework format support format conversion service factory bean r0 <NEXT> r1 register default formatters = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework instrument classloading shadow class loader r0 <NEXT> $ z0 = r2 be exclude r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r4 = new java lang illegal argument exception <NEXT> specialinvoke r4 < init > \ `` transformer must not be null\ `` <NEXT> throw r4 <NEXT> if r1 ! = null goto label1 <NEXT> label r5 = org springframework instrument classloading weave transformer r0 <NEXT> $ r2 = r5 transformer <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework jmx export annotation annotation m bean exporter r0 <NEXT> $ r2 = r3 metadata name strategy <NEXT> $ r2 set default domain r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new java util hash set <NEXT> $ r3 = java util array a list r1 <NEXT> specialinvoke r4 < init > $ r3 <NEXT> r5 = org springframework jmx export assembler method name base m bean info assembler r0 <NEXT> r5 manage method = r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> $ b0 = 3 <NEXT> goto label2 <NEXT> label $ r1 = java lang integer value of $ b0 <NEXT> r3 = org springframework jmx export m bean exporter r0 <NEXT> r3 autodetect mode = $ r1 <NEXT> return <NEXT> if z0 == 0 goto label1 <NEXT> label $ b0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jmx export m bean exporter r0 <NEXT> r1 allow eager init = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org springframework jmx export m bean exporter r0 <NEXT> $ r2 = r5 exclude bean <NEXT> $ r2 clear <NEXT> if r1 == null goto label1 <NEXT> r6 = org springframework jmx export m bean exporter r0 <NEXT> $ r3 = r6 exclude bean <NEXT> $ r4 = java util array a list r1 <NEXT> $ r3 add all $ r4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jmx export metadata abstract jmx attribute r0 <NEXT> $ r1 = r2 description <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jmx export metadata abstract jmx attribute r0 <NEXT> $ i0 = r1 currency time limit <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework jmx export metadata manage attribute r0 <NEXT> r2 default value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework jmx export metadata manage metric r0 <NEXT> r2 category = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework jmx export metadata manage notification r0 <NEXT> r2 notification type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jmx export metadata manage notification r0 <NEXT> $ r1 = r2 description <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jndi jndi locator support r0 <NEXT> $ z0 = r1 resource ref <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org springframework jndi jndi template r0 <NEXT> r2 = r6 get context <NEXT> label r3 = r1 do in context r2 <NEXT> label r7 = org springframework jndi jndi template r0 <NEXT> r7 release context r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = org springframework jndi jndi template r0 <NEXT> $ r2 = r13 logger <NEXT> $ z0 = $ r2 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r14 = org springframework jndi jndi template r0 <NEXT> $ r6 = r14 logger <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r7 = r11 append \ `` look up jndi object with name [ \ `` <NEXT> $ r8 = $ r7 append r1 <NEXT> $ r9 = $ r8 append \ `` ] \ `` <NEXT> $ r10 = $ r9 to string <NEXT> $ r6 debug $ r10 <NEXT> label r12 = new org springframework jndi jndi template $ 1 <NEXT> r15 = org springframework jndi jndi template r0 <NEXT> specialinvoke r12 < init > r15 r1 <NEXT> r16 = org springframework jndi jndi template r0 <NEXT> r17 = org springframework jndi jndi callback r12 <NEXT> $ r4 = r16 execute r17 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jndi type mismatch name exception r0 <NEXT> $ r1 = r2 actual type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework remoting rmi jndi rmi client interceptor r0 <NEXT> r1 cache stub = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework remoting rmi rmi registry factory bean r0 <NEXT> r1 always create = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = r0 get class <NEXT> $ r2 = org springframework util class utils get short name $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework remoting support remote invocation base exporter r0 <NEXT> r2 remote invocation executor = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r2 = java lang thread current thread <NEXT> $ r2 set context class loader r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` \'async annotation type\ ' must not be null\ `` <NEXT> r5 = new java util hash set <NEXT> specialinvoke r5 < init > <NEXT> r5 add r1 <NEXT> r6 = org springframework schedule annotation async annotation advisor r0 <NEXT> $ r4 = r6 build pointcut r5 <NEXT> r7 = org springframework schedule annotation async annotation advisor r0 <NEXT> r7 pointcut = $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` \'async annotation type\ ' must not be null\ `` <NEXT> r2 = org springframework schedule annotation async annotation bean post processor r0 <NEXT> r2 async annotation type = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r4 = new org springframework schedule annotation async result <NEXT> $ z0 = r0 instanceof java util concurrent execution exception <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = java util concurrent execution exception r0 <NEXT> goto label2 <NEXT> label specialinvoke r4 < init > null $ r2 <NEXT> r5 = org springframework util concurrent listenable future r4 <NEXT> return r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r3 = new java util concurrent execution exception <NEXT> $ r2 = r3 <NEXT> specialinvoke r3 < init > r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework schedule concurrent schedule executor task r0 <NEXT> $ r1 = r2 time unit <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework schedule concurrent schedule executor task r0 <NEXT> $ z0 = r1 fix rate <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> r3 = new org springframework schedule config interval task <NEXT> specialinvoke r3 < init > r1 l0 0l <NEXT> r4 = org springframework schedule config schedule task registrar r0 <NEXT> r4 add fix delay task r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r2 = r10 append \ `` invocation of method \'\ `` <NEXT> r11 = org springframework schedule support method invoke runnable r0 <NEXT> $ r3 = r11 get target method <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \ ' on target class [ \ `` <NEXT> r12 = org springframework schedule support method invoke runnable r0 <NEXT> $ r6 = r12 get target class <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` ] failed\ `` <NEXT> $ r9 = $ r8 to string <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework validation data binder r0 <NEXT> $ r1 = r2 object name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org springframework bean mutable property value <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org springframework bean mutable property value r1 <NEXT> goto label2 <NEXT> label r5 = org springframework validation data binder r0 <NEXT> r5 do bind $ r3 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = new org springframework bean mutable property value <NEXT> $ r3 = r4 <NEXT> specialinvoke r4 < init > r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 invoke <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> org springframework context i18n locale context holder default time zone = r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework context support property source placeholder configurer r0 <NEXT> $ r1 = r3 apply property source <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label org springframework util assert state $ z0 \ `` property source have not yet be applied\ `` <NEXT> r4 = org springframework context support property source placeholder configurer r0 <NEXT> $ r2 = r4 apply property source <NEXT> return $ r2 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jndi jndi locator support r0 <NEXT> r1 resource ref = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 < = 1 goto label1 <NEXT> $ r1 = org springframework core annotation annotation aware order comparator instance <NEXT> r2 = java util comparator $ r1 <NEXT> java util array sort r0 r2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = org springframework core collection factory create collection r0 null i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org springframework core constant r0 <NEXT> r2 = r7 a object r1 <NEXT> $ z0 = r2 instanceof java lang number <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = new org springframework core constant exception <NEXT> r8 = org springframework core constant r0 <NEXT> $ r5 = r8 class name <NEXT> specialinvoke r6 < init > $ r5 r1 \ `` not a number\ `` <NEXT> r9 = java lang throwable r6 <NEXT> throw r9 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r3 = java lang number r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core convert converter not find exception r0 <NEXT> $ r1 = r2 target type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get object type <NEXT> r12 = org springframework core convert type descriptor r0 <NEXT> $ r3 = r12 get object type <NEXT> z0 = $ r2 be assignable from $ r3 <NEXT> if z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if z0 ! = 0 goto label1 <NEXT> label r13 = org springframework core convert type descriptor r0 <NEXT> $ z1 = r13 be array <NEXT> if $ z1 == 0 goto label2 <NEXT> $ z9 = r1 be array <NEXT> if $ z9 == 0 goto label2 <NEXT> r14 = org springframework core convert type descriptor r0 <NEXT> $ r10 = r14 get element type descriptor <NEXT> $ r11 = r1 get element type descriptor <NEXT> $ z10 = $ r10 be assignable to $ r11 <NEXT> return $ z10 <NEXT> if $ z9 == 0 goto label2 <NEXT> label r15 = org springframework core convert type descriptor r0 <NEXT> $ z2 = r15 be collection <NEXT> if $ z2 == 0 goto label3 <NEXT> $ z7 = r1 be collection <NEXT> if $ z7 == 0 goto label3 <NEXT> r16 = org springframework core convert type descriptor r0 <NEXT> $ r8 = r16 get element type descriptor <NEXT> $ r9 = r1 get element type descriptor <NEXT> r17 = org springframework core convert type descriptor r0 <NEXT> $ z8 = specialinvoke r17 be nest assignable $ r8 $ r9 <NEXT> return $ z8 <NEXT> if $ z7 == 0 goto label3 <NEXT> label r18 = org springframework core convert type descriptor r0 <NEXT> $ z3 = r18 be map <NEXT> if $ z3 == 0 goto label6 <NEXT> $ z4 = r1 be map <NEXT> if $ z4 == 0 goto label6 <NEXT> r19 = org springframework core convert type descriptor r0 <NEXT> $ r4 = r19 get map key type descriptor <NEXT> $ r5 = r1 get map key type descriptor <NEXT> r20 = org springframework core convert type descriptor r0 <NEXT> $ z5 = specialinvoke r20 be nest assignable $ r4 $ r5 <NEXT> if $ z5 == 0 goto label4 <NEXT> r21 = org springframework core convert type descriptor r0 <NEXT> $ r6 = r21 get map value type descriptor <NEXT> $ r7 = r1 get map value type descriptor <NEXT> r22 = org springframework core convert type descriptor r0 <NEXT> $ z6 = specialinvoke r22 be nest assignable $ r6 $ r7 <NEXT> if $ z6 == 0 goto label4 <NEXT> $ z11 = 1 <NEXT> goto label5 <NEXT> label return $ z11 <NEXT> if $ z6 == 0 goto label4 <NEXT> label $ z11 = 0 <NEXT> if $ z4 == 0 goto label6 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` package name must not be null\ `` <NEXT> r7 = org springframework core decorate class loader r0 <NEXT> $ r4 = r7 exclusion monitor <NEXT> entermonitor $ r4 <NEXT> label r8 = org springframework core decorate class loader r0 <NEXT> $ r5 = r8 exclude package <NEXT> $ r5 add r1 <NEXT> exitmonitor $ r4 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r11 = org springframework core env abstract environment r0 <NEXT> $ r4 = r11 default profile <NEXT> entermonitor $ r4 <NEXT> label r12 = org springframework core env abstract environment r0 <NEXT> $ r5 = r12 default profile <NEXT> r13 = org springframework core env abstract environment r0 <NEXT> $ r6 = r13 get reserve default profile <NEXT> $ z0 = $ r5 equal $ r6 <NEXT> if $ z0 == 0 goto label2 <NEXT> r14 = org springframework core env abstract environment r0 <NEXT> r2 = r14 get property \ `` spring profile default\ `` <NEXT> $ z1 = org springframework util string utils have text r2 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r7 = org springframework util string utils trim all whitespace r2 <NEXT> $ r8 = org springframework util string utils comma delimited list to string array $ r7 <NEXT> r15 = org springframework core env abstract environment r0 <NEXT> r15 set default profile $ r8 <NEXT> label r16 = org springframework core env abstract environment r0 <NEXT> $ r10 = r16 default profile <NEXT> exitmonitor $ r4 <NEXT> label return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework core env abstract property resolver r0 <NEXT> r2 value separator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = org springframework core env mutable property source r0 <NEXT> $ r3 = r10 logger <NEXT> $ z0 = $ r3 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r11 = org springframework core env mutable property source r0 <NEXT> $ r7 = r11 logger <NEXT> $ r6 = newarray java lang object [ 2 ] <NEXT> $ r6 [ 0 ] = r1 <NEXT> $ r8 = r2 get name <NEXT> $ r6 [ 1 ] = $ r8 <NEXT> $ r9 = java lang string format \ `` replace [ % s ] property source with [ % s ] \ <NEXT> $ r7 debug $ r9 <NEXT> label r12 = org springframework core env mutable property source r0 <NEXT> i0 = specialinvoke r12 assert present and get index r1 <NEXT> r13 = org springframework core env mutable property source r0 <NEXT> $ r4 = r13 property source list <NEXT> $ r4 set i0 r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org springframework core resolvable type for class r0 <NEXT> $ r2 = $ r1 a collection <NEXT> $ r3 = newarray int [ 0 ] <NEXT> $ r4 = $ r2 resolve generic $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r10 = org springframework core io abstract resource r0 <NEXT> $ r1 = r10 get file for last modified check <NEXT> l0 = $ r1 last modified <NEXT> $ b1 = l0 cmp 0l <NEXT> if $ b1 ! = 0 goto label1 <NEXT> r9 = new java io file not find exception <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> r11 = org springframework core io abstract resource r0 <NEXT> $ r4 = r11 get description <NEXT> $ r5 = r8 append $ r4 <NEXT> $ r6 = $ r5 append \ `` can not be resolve in the file system for resolve it last-modified timestamp\ `` <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke r9 < init > $ r7 <NEXT> throw r9 <NEXT> if $ b1 ! = 0 goto label1 <NEXT> label return l0 <END>
<BEG> r0 = @ this <NEXT> r10 = org springframework core io class path resource r0 <NEXT> r1 = r10 resolve u r l <NEXT> if r1 ! = null goto label1 <NEXT> r9 = new java io file not find exception <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> r11 = org springframework core io class path resource r0 <NEXT> $ r4 = r11 get description <NEXT> $ r5 = r8 append $ r4 <NEXT> $ r6 = $ r5 append \ `` can not be resolve to url because it do not exist\ `` <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke r9 < init > $ r7 <NEXT> throw r9 <NEXT> if r1 ! = null goto label1 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core io file system resource r0 <NEXT> $ r1 = r2 file <NEXT> $ z0 = $ r1 exist <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core io file system resource r0 <NEXT> $ r1 = r2 file <NEXT> $ l0 = $ r1 length <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework core io file system resource r0 <NEXT> $ r1 = r3 file <NEXT> $ r2 = $ r1 get name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> $ r2 = r8 append \ `` file [ \ `` <NEXT> r9 = org springframework core io file system resource r0 <NEXT> $ r3 = r9 file <NEXT> $ r4 = $ r3 get absolute path <NEXT> $ r5 = $ r2 append $ r4 <NEXT> $ r6 = $ r5 append \ `` ] \ `` <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == r0 goto label1 <NEXT> $ z0 = r1 instanceof org springframework core io file system resource <NEXT> if $ z0 == 0 goto label2 <NEXT> r5 = org springframework core io file system resource r0 <NEXT> $ r4 = r5 path <NEXT> $ r2 = org springframework core io file system resource r1 <NEXT> $ r3 = $ r2 path <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core io file system resource r0 <NEXT> $ r1 = r2 path <NEXT> $ i0 = $ r1 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r17 = org springframework core io class path resource r0 <NEXT> $ r1 = r17 clazz <NEXT> if $ r1 == null goto label1 <NEXT> r18 = org springframework core io class path resource r0 <NEXT> $ r13 = r18 clazz <NEXT> r19 = org springframework core io class path resource r0 <NEXT> $ r12 = r19 path <NEXT> r14 = $ r13 get resource a stream $ r12 <NEXT> goto label3 <NEXT> label if r14 ! = null goto label4 <NEXT> r16 = new java io file not find exception <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> r24 = org springframework core io class path resource r0 <NEXT> $ r6 = r24 get description <NEXT> $ r7 = r15 append $ r6 <NEXT> $ r8 = $ r7 append \ `` can not be open because it do not exist\ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r16 < init > $ r9 <NEXT> throw r16 <NEXT> label if r14 ! = null goto label4 <NEXT> label return r14 <NEXT> if $ r1 == null goto label1 <NEXT> label r20 = org springframework core io class path resource r0 <NEXT> $ r2 = r20 class loader <NEXT> if $ r2 == null goto label2 <NEXT> r21 = org springframework core io class path resource r0 <NEXT> $ r11 = r21 class loader <NEXT> r22 = org springframework core io class path resource r0 <NEXT> $ r10 = r22 path <NEXT> r14 = $ r11 get resource a stream $ r10 <NEXT> if $ r2 == null goto label2 <NEXT> label r23 = org springframework core io class path resource r0 <NEXT> $ r3 = r23 path <NEXT> r14 = java lang class loader get system resource a stream $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = r0 goto label1 <NEXT> return 1 <NEXT> if r1 ! = r0 goto label1 <NEXT> label $ z0 = r1 instanceof org springframework core io class path resource <NEXT> if $ z0 == 0 goto label4 <NEXT> r2 = org springframework core io class path resource r1 <NEXT> r9 = org springframework core io class path resource r0 <NEXT> $ r4 = r9 path <NEXT> $ r3 = r2 path <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> r10 = org springframework core io class path resource r0 <NEXT> $ r6 = r10 class loader <NEXT> $ r5 = r2 class loader <NEXT> $ z2 = org springframework util object utils null safe equal $ r6 $ r5 <NEXT> if $ z2 == 0 goto label2 <NEXT> r11 = org springframework core io class path resource r0 <NEXT> $ r8 = r11 clazz <NEXT> $ r7 = r2 clazz <NEXT> $ z3 = org springframework util object utils null safe equal $ r8 $ r7 <NEXT> if $ z3 == 0 goto label2 <NEXT> $ z4 = 1 <NEXT> goto label3 <NEXT> label return $ z4 <NEXT> if $ z3 == 0 goto label2 <NEXT> label $ z4 = 0 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org springframework core io resource editor r0 <NEXT> $ r2 = r8 property resolver <NEXT> if $ r2 ! = null goto label1 <NEXT> r7 = new org springframework core env standard environment <NEXT> specialinvoke r7 < init > <NEXT> r9 = org springframework core io resource editor r0 <NEXT> r10 = org springframework core env property resolver r7 <NEXT> r9 property resolver = r10 <NEXT> label r11 = org springframework core io resource editor r0 <NEXT> $ z0 = r11 ignore unresolvable placeholder <NEXT> if $ z0 == 0 goto label2 <NEXT> r12 = org springframework core io resource editor r0 <NEXT> $ r4 = r12 property resolver <NEXT> $ r6 = $ r4 resolve placeholder r1 <NEXT> goto label3 <NEXT> label return $ r6 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r13 = org springframework core io resource editor r0 <NEXT> $ r3 = r13 property resolver <NEXT> $ r6 = $ r3 resolve require placeholder r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get u r l <NEXT> $ z0 = org springframework util resource utils be jar u r l $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework core io support property loader support r0 <NEXT> r1 local override = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org springframework util assert not null r0 \ `` resource name must not be null\ `` <NEXT> r11 = r1 <NEXT> if r1 ! = null goto label01 <NEXT> r11 = org springframework util class utils get default class loader <NEXT> label if r11 == null goto label02 <NEXT> $ r12 = r11 get resource r0 <NEXT> goto label03 <NEXT> label r2 = $ r12 <NEXT> $ r8 = new java util property <NEXT> specialinvoke $ r8 < init > <NEXT> label $ z1 = r2 have more element <NEXT> if $ z1 == 0 goto label11 <NEXT> $ r9 = r2 next element <NEXT> r4 = java net url $ r9 <NEXT> r5 = r4 open connection <NEXT> org springframework util resource utils use cache if necessary r5 <NEXT> r6 = r5 get input stream <NEXT> label $ z0 = r0 end with \ `` xml\ `` <NEXT> if $ z0 == 0 goto label06 <NEXT> $ r8 load from x m l r6 <NEXT> goto label07 <NEXT> label r6 close <NEXT> goto label10 <NEXT> label goto label04 <NEXT> if $ z0 == 0 goto label06 <NEXT> label $ r8 load r6 <NEXT> if $ z1 == 0 goto label11 <NEXT> label return $ r8 <NEXT> label if r11 == null goto label02 <NEXT> label $ r12 = java lang class loader get system resource r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 get name <NEXT> label if r1 == null goto label2 <NEXT> $ r22 = r1 get resource \ `` meta-inf spring factories\ `` <NEXT> goto label3 <NEXT> label r23 = $ r22 <NEXT> r25 = new java util array list <NEXT> specialinvoke r25 < init > <NEXT> label $ z1 = r23 have more element <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r8 = r23 next element <NEXT> r4 = java net url $ r8 <NEXT> r26 = new org springframework core io url resource <NEXT> specialinvoke r26 < init > r4 <NEXT> r29 = org springframework core io resource r26 <NEXT> r5 = org springframework core io support property loader utils load property r29 <NEXT> r6 = r5 get property r2 <NEXT> $ r10 = org springframework util string utils comma delimited list to string array r6 <NEXT> $ r11 = java util array a list $ r10 <NEXT> r25 add all $ r11 <NEXT> goto label4 <NEXT> if $ z1 == 0 goto label5 <NEXT> label return r25 <NEXT> label if r1 == null goto label2 <NEXT> label $ r22 = java lang class loader get system resource \ `` meta-inf spring factories\ `` <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core io url resource r0 <NEXT> $ r1 = r2 clean url <NEXT> $ i0 = $ r1 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core method parameter r0 <NEXT> $ r1 = r2 constructor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework core method parameter r0 <NEXT> $ i0 = r1 nest level <NEXT> $ i1 = $ i0 + 1 <NEXT> r2 = org springframework core method parameter r0 <NEXT> r2 nest level = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework core order comparator r0 <NEXT> r2 = r3 find order r1 <NEXT> if r2 == null goto label1 <NEXT> $ i0 = r2 int value <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if r2 == null goto label1 <NEXT> label $ i0 = 2147483647 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org springframework core order <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = org springframework core order r1 <NEXT> $ i0 = $ r2 get order <NEXT> $ r3 = java lang integer value of $ i0 <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r3 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework core override class loader r0 <NEXT> $ z0 = r2 be exclude r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework core prioritize parameter name discoverer r0 <NEXT> $ r2 = r3 parameter name discoverer <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org springframework core spring property get property r0 <NEXT> $ z0 = java lang boolean parse boolean $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core style default to string styler r0 <NEXT> $ r1 = r2 value styler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r2 = java lang boolean value of z0 <NEXT> r4 = org springframework core style to string creator r0 <NEXT> $ r3 = r4 append r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework core task simple async task executor r0 <NEXT> r2 execute r1 9223372036854775807l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core type standard method metadata r0 <NEXT> $ r1 = r2 introspect method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework util ant path matcher r0 <NEXT> r1 trim tokens = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r17 = org springframework util ant path matcher r0 <NEXT> $ r7 = r17 path separator <NEXT> r18 = org springframework util ant path matcher r0 <NEXT> $ z0 = r18 trim tokens <NEXT> r3 = org springframework util string utils tokenize to string array r1 $ r7 $ z0 1 <NEXT> r19 = org springframework util ant path matcher r0 <NEXT> $ r8 = r19 path separator <NEXT> r20 = org springframework util ant path matcher r0 <NEXT> $ z1 = r20 trim tokens <NEXT> r4 = org springframework util string utils tokenize to string array r2 $ r8 $ z1 1 <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> z3 = 0 <NEXT> i3 = 0 <NEXT> label $ i0 = lengthof r3 <NEXT> if i3 > = $ i0 goto label6 <NEXT> r6 = r3 [ i3 ] <NEXT> $ i1 = r6 index of 42 <NEXT> if $ i1 > -1 goto label2 <NEXT> $ i2 = r6 index of 63 <NEXT> if $ i2 < = -1 goto label5 <NEXT> label $ i4 = lengthof r4 <NEXT> if i3 > = $ i4 goto label5 <NEXT> if z3 ! = 0 goto label3 <NEXT> if i3 ! = 0 goto label4 <NEXT> r21 = org springframework util ant path matcher r0 <NEXT> $ r14 = r21 path separator <NEXT> $ z2 = r1 start with $ r14 <NEXT> if $ z2 ! = 0 goto label4 <NEXT> label r22 = org springframework util ant path matcher r0 <NEXT> $ r11 = r22 path separator <NEXT> r16 append $ r11 <NEXT> label $ r15 = r4 [ i3 ] <NEXT> r16 append $ r15 <NEXT> z3 = 1 <NEXT> i3 = i3 + 1 <NEXT> goto label2 <NEXT> if i3 > = $ i4 goto label5 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label6 <NEXT> label $ r10 = r16 to string <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org springframework util backoff exponential back off r0 <NEXT> r1 initial interval = l0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> org springframework util base64 utils assert delegate available <NEXT> $ r2 = org springframework util base64 utils delegate <NEXT> $ r1 = org springframework util base64 utils default_charset <NEXT> $ r3 = r0 get bytes $ r1 <NEXT> $ r4 = $ r2 decode url safe $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> org springframework util assert not null r0 \ `` class must not be null\ `` <NEXT> r1 = r0 get name <NEXT> i0 = r1 last index of 46 <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ i1 = i0 + 1 <NEXT> $ r3 = r1 substring $ i1 <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` class\ `` <NEXT> $ r6 = $ r5 to string <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org springframework util assert not null r0 \ `` type must not be null\ `` <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 get class <NEXT> $ z1 = org springframework util class utils be assignable r0 $ r2 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if r1 == null goto label1 <NEXT> label $ z0 = r0 be primitive <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ z1 = 1 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> org springframework util assert not null r0 \ `` resource path must not be null\ `` <NEXT> $ r1 = r0 replace 47 46 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework util comparator invertible comparator r0 <NEXT> $ z0 = r2 ascend <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label r3 = org springframework util comparator invertible comparator r0 <NEXT> r3 ascend = $ z1 <NEXT> return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework util customizable thread creator r0 <NEXT> r1 thread priority = i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org springframework util digest utils digest \ `` md5\ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org springframework util fast byte array output stream r0 <NEXT> $ r4 = r6 buffer <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r5 = r2 next <NEXT> r3 = byte [ ] $ r5 <NEXT> $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label2 <NEXT> $ i1 = lengthof r3 <NEXT> r1 write r3 0 $ i1 <NEXT> goto label3 <NEXT> label goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r7 = org springframework util fast byte array output stream r0 <NEXT> $ i0 = r7 index <NEXT> r1 write r3 0 $ i0 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org springframework util system property utils resolve placeholder r0 <NEXT> r2 = org springframework util resource utils get u r l r1 <NEXT> $ r3 = \ `` file\ `` <NEXT> $ r4 = r2 get protocol <NEXT> $ z0 = $ r3 equal $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = org springframework util resource utils get file r2 <NEXT> $ z2 = $ r6 exist <NEXT> if $ z2 ! = 0 goto label1 <NEXT> $ r7 = new java io file not find exception <NEXT> $ r8 = new java lang string builder <NEXT> specialinvoke $ r8 < init > <NEXT> $ r9 = $ r8 append \ `` log4j config file [ \ `` <NEXT> $ r10 = $ r9 append r1 <NEXT> $ r11 = $ r10 append \ `` ] not found\ `` <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke $ r7 < init > $ r12 <NEXT> throw $ r7 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label $ r5 = r1 to lower case <NEXT> $ z1 = $ r5 end with \ `` xml\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> org apache log4j xml d o m configurator configure r2 <NEXT> goto label3 <NEXT> label return <NEXT> if $ z1 == 0 goto label2 <NEXT> label org apache log4j property configurator configure r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework util method invoker r0 <NEXT> $ r1 = r2 target object <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return 1 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = r0 get class <NEXT> $ z0 = $ r1 be array <NEXT> if $ z0 == 0 goto label4 <NEXT> $ i1 = java lang reflect array get length r0 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> $ z6 = 1 <NEXT> goto label3 <NEXT> label return $ z6 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> label $ z6 = 0 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ z1 = r0 instanceof java lang char sequence <NEXT> if $ z1 == 0 goto label7 <NEXT> $ r4 = java lang char sequence r0 <NEXT> $ i0 = $ r4 length <NEXT> if $ i0 ! = 0 goto label5 <NEXT> $ z7 = 1 <NEXT> goto label6 <NEXT> label return $ z7 <NEXT> if $ i0 ! = 0 goto label5 <NEXT> label $ z7 = 0 <NEXT> if $ z1 == 0 goto label7 <NEXT> label $ z2 = r0 instanceof java util collection <NEXT> if $ z2 == 0 goto label8 <NEXT> $ r3 = java util collection r0 <NEXT> $ z5 = $ r3 be empty <NEXT> return $ z5 <NEXT> if $ z2 == 0 goto label8 <NEXT> label $ z3 = r0 instanceof java util map <NEXT> if $ z3 == 0 goto label9 <NEXT> $ r2 = java util map r0 <NEXT> $ z4 = $ r2 be empty <NEXT> return $ z4 <NEXT> if $ z3 == 0 goto label9 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 get modifier <NEXT> $ z0 = java lang reflect modifier be public $ i0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = r0 get declare class <NEXT> $ i1 = $ r1 get modifier <NEXT> $ z2 = java lang reflect modifier be public $ i1 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label $ z1 = r0 be accessible <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r0 set accessible 1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r7 = new java util array list <NEXT> specialinvoke r7 < init > 32 <NEXT> r8 = new org springframework util reflection utils $ 1 <NEXT> specialinvoke r8 < init > r7 <NEXT> r9 = org springframework util reflection utils $ method callback r8 <NEXT> org springframework util reflection utils do with method r0 r9 <NEXT> $ i0 = r7 size <NEXT> $ r4 = newarray java lang reflect method [ $ i0 ] <NEXT> $ r5 = r7 to array $ r4 <NEXT> $ r6 = java lang reflect method [ ] $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get protocol <NEXT> $ r2 = \ `` file\ `` <NEXT> $ z0 = $ r2 equal r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r3 = \ `` vfsfile\ `` <NEXT> $ z1 = $ r3 equal r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ r4 = \ `` vfs\ `` <NEXT> $ z2 = $ r4 equal r1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r2 = org springframework util update message digest input stream r0 <NEXT> $ i1 = r2 read <NEXT> if $ i1 == -1 goto label2 <NEXT> $ b2 = byte $ i1 <NEXT> r1 update $ b2 <NEXT> goto label1 <NEXT> if $ i1 == -1 goto label2 <NEXT> label return <END>
<BEG> $ r0 = org springframework core annotation merge annotation selector first_directly_declared <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ z0 = r0 instanceof java lang reflect method <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r8 = new org springframework core annotation synthesize method parameter <NEXT> $ r9 = java lang reflect method r0 <NEXT> specialinvoke $ r8 < init > $ r9 i0 <NEXT> return $ r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof java lang reflect constructor <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r6 = new org springframework core annotation synthesize method parameter <NEXT> $ r7 = java lang reflect constructor r0 <NEXT> specialinvoke $ r6 < init > $ r7 i0 <NEXT> return $ r6 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r1 = new java lang illegal argument exception <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` not a method constructor \ `` <NEXT> $ r4 = $ r3 append r0 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke $ r1 < init > $ r5 <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework core codec abstract data buffer decoder r0 <NEXT> r1 max in memory size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework core codec abstract decoder r0 <NEXT> r2 logger = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework core codec abstract decoder r0 <NEXT> $ r1 = r2 logger <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org springframework core convert conversion service r0 <NEXT> r16 = new org springframework core convert support array to collection converter <NEXT> specialinvoke r16 < init > r1 <NEXT> r30 = org springframework core convert converter generic converter r16 <NEXT> r0 add converter r30 <NEXT> r17 = new org springframework core convert support collection to array converter <NEXT> specialinvoke r17 < init > r1 <NEXT> r31 = org springframework core convert converter generic converter r17 <NEXT> r0 add converter r31 <NEXT> r18 = new org springframework core convert support array to array converter <NEXT> specialinvoke r18 < init > r1 <NEXT> r32 = org springframework core convert converter generic converter r18 <NEXT> r0 add converter r32 <NEXT> r19 = new org springframework core convert support collection to collection converter <NEXT> specialinvoke r19 < init > r1 <NEXT> r33 = org springframework core convert converter generic converter r19 <NEXT> r0 add converter r33 <NEXT> r20 = new org springframework core convert support map to map converter <NEXT> specialinvoke r20 < init > r1 <NEXT> r34 = org springframework core convert converter generic converter r20 <NEXT> r0 add converter r34 <NEXT> r21 = new org springframework core convert support array to string converter <NEXT> specialinvoke r21 < init > r1 <NEXT> r35 = org springframework core convert converter generic converter r21 <NEXT> r0 add converter r35 <NEXT> r22 = new org springframework core convert support string to array converter <NEXT> specialinvoke r22 < init > r1 <NEXT> r36 = org springframework core convert converter generic converter r22 <NEXT> r0 add converter r36 <NEXT> r23 = new org springframework core convert support array to object converter <NEXT> specialinvoke r23 < init > r1 <NEXT> r37 = org springframework core convert converter generic converter r23 <NEXT> r0 add converter r37 <NEXT> r24 = new org springframework core convert support object to array converter <NEXT> specialinvoke r24 < init > r1 <NEXT> r38 = org springframework core convert converter generic converter r24 <NEXT> r0 add converter r38 <NEXT> r25 = new org springframework core convert support collection to string converter <NEXT> specialinvoke r25 < init > r1 <NEXT> r39 = org springframework core convert converter generic converter r25 <NEXT> r0 add converter r39 <NEXT> r26 = new org springframework core convert support string to collection converter <NEXT> specialinvoke r26 < init > r1 <NEXT> r40 = org springframework core convert converter generic converter r26 <NEXT> r0 add converter r40 <NEXT> r27 = new org springframework core convert support collection to object converter <NEXT> specialinvoke r27 < init > r1 <NEXT> r41 = org springframework core convert converter generic converter r27 <NEXT> r0 add converter r41 <NEXT> r28 = new org springframework core convert support object to collection converter <NEXT> specialinvoke r28 < init > r1 <NEXT> r42 = org springframework core convert converter generic converter r28 <NEXT> r0 add converter r42 <NEXT> r29 = new org springframework core convert support stream converter <NEXT> specialinvoke r29 < init > r1 <NEXT> r43 = org springframework core convert converter generic converter r29 <NEXT> r0 add converter r43 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org springframework core io class path resource r0 <NEXT> $ r3 = r10 path <NEXT> r2 = org springframework util string utils apply relative path $ r3 r1 <NEXT> r11 = org springframework core io class path resource r0 <NEXT> $ r4 = r11 clazz <NEXT> if $ r4 == null goto label1 <NEXT> r8 = new org springframework core io class path resource <NEXT> $ r7 = r8 <NEXT> r12 = org springframework core io class path resource r0 <NEXT> $ r6 = r12 clazz <NEXT> specialinvoke r8 < init > r2 $ r6 <NEXT> goto label2 <NEXT> label r14 = org springframework core io resource $ r7 <NEXT> return r14 <NEXT> if $ r4 == null goto label1 <NEXT> label r9 = new org springframework core io class path resource <NEXT> $ r7 = r9 <NEXT> r13 = org springframework core io class path resource r0 <NEXT> $ r5 = r13 class loader <NEXT> specialinvoke r9 < init > r2 $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework core log log accessor r0 <NEXT> $ r2 = r3 log <NEXT> $ r2 trace r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org springframework core log log accessor r0 <NEXT> $ r3 = r4 log <NEXT> $ r3 trace r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org springframework core log log message r0 <NEXT> $ r1 = r4 result <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = org springframework core log log message r0 <NEXT> $ r3 = r5 build string <NEXT> r6 = org springframework core log log message r0 <NEXT> r6 result = $ r3 <NEXT> label r7 = org springframework core log log message r0 <NEXT> $ r2 = r7 result <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework core reactive adapter r0 <NEXT> $ r2 = r4 from publisher function <NEXT> $ r3 = $ r2 apply r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org springframework core reactive type descriptor <NEXT> specialinvoke $ r2 < init > r0 0 0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = org springframework util string utils have text r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> specialinvoke $ r2 < init > r1 <NEXT> throw $ r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label return <END>
<BEG> $ r0 = org springframework util comparator null safe comparator nulls_high <NEXT> r1 = java util comparator $ r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label r6 = org springframework util mime type r0 <NEXT> $ r3 = r6 type <NEXT> $ r2 = r1 type <NEXT> $ z0 = $ r3 equal ignore case $ r2 <NEXT> if $ z0 == 0 goto label2 <NEXT> r7 = org springframework util mime type r0 <NEXT> $ r5 = r7 subtype <NEXT> $ r4 = r1 subtype <NEXT> $ z1 = $ r5 equal ignore case $ r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org springframework util reflection utils get declare field r0 <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label6 <NEXT> r3 = r2 [ i1 ] <NEXT> label r1 do with r3 <NEXT> label goto label5 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework util stop watch r0 <NEXT> r1 start \ `` \ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org springframework util stop watch r0 <NEXT> $ r1 = r5 last task info <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java lang illegal state exception <NEXT> specialinvoke r4 < init > \ `` no task run can\'t get last task interval\ `` <NEXT> throw r4 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = org springframework util stop watch r0 <NEXT> $ r2 = r6 last task info <NEXT> $ l0 = $ r2 get time millis <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r23 = new java lang string builder <NEXT> r24 = org springframework util stop watch r0 <NEXT> $ r7 = r24 short summary <NEXT> specialinvoke r23 < init > $ r7 <NEXT> r23 append 10 <NEXT> r25 = org springframework util stop watch r0 <NEXT> $ z0 = r25 keep task list <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r23 append \ `` no task info kept\ `` <NEXT> goto label3 <NEXT> label $ r12 = r23 to string <NEXT> return $ r12 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r23 append \ `` -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -\n\ `` <NEXT> r23 append \ `` ns % task name\n\ `` <NEXT> r23 append \ `` -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -\n\ `` <NEXT> r2 = java text number format get number instance <NEXT> r2 set minimum integer digits 9 <NEXT> r2 set grouping use 0 <NEXT> r3 = java text number format get percent instance <NEXT> r3 set minimum integer digits 3 <NEXT> r3 set grouping use 0 <NEXT> r26 = org springframework util stop watch r0 <NEXT> r4 = r26 get task info <NEXT> i0 = lengthof r4 <NEXT> i4 = 0 <NEXT> label if i4 > = i0 goto label3 <NEXT> r5 = r4 [ i4 ] <NEXT> $ l1 = r5 get time nanos <NEXT> $ r13 = r2 format $ l1 <NEXT> $ r14 = r23 append $ r13 <NEXT> $ r14 append \ `` \ `` <NEXT> $ l2 = r5 get time nanos <NEXT> $ d0 = double $ l2 <NEXT> r27 = org springframework util stop watch r0 <NEXT> $ l3 = r27 get total time nanos <NEXT> $ d1 = double $ l3 <NEXT> $ d2 = $ d0 $ d1 <NEXT> $ r16 = r3 format $ d2 <NEXT> $ r17 = r23 append $ r16 <NEXT> $ r17 append \ `` \ `` <NEXT> $ r19 = r5 get task name <NEXT> $ r20 = r23 append $ r19 <NEXT> $ r20 append \ `` \n\ `` <NEXT> i4 = i4 + 1 <NEXT> goto label2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> l0 = @ parameter2 <NEXT> l1 = @ parameter3 <NEXT> org springframework util assert not null r0 \ `` no input stream specified\ `` <NEXT> org springframework util assert not null r1 \ `` no output stream specified\ `` <NEXT> l2 = r0 skip l0 <NEXT> $ b4 = l2 cmp l0 <NEXT> if $ b4 > = 0 goto label1 <NEXT> $ r3 = new java io i o exception <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append \ `` skip only \ `` <NEXT> $ r6 = $ r5 append l2 <NEXT> $ r7 = $ r6 append \ `` bytes out of \ `` <NEXT> $ r8 = $ r7 append l0 <NEXT> $ r9 = $ r8 append \ `` required\ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke $ r3 < init > $ r10 <NEXT> throw $ r3 <NEXT> if $ b4 > = 0 goto label1 <NEXT> label $ l5 = l1 - l0 <NEXT> l16 = $ l5 + 1l <NEXT> $ l6 = java lang math min 4096l l16 <NEXT> $ i7 = int $ l6 <NEXT> r2 = newarray byte [ $ i7 ] <NEXT> label $ b8 = l16 cmp 0l <NEXT> if $ b8 < = 0 goto label6 <NEXT> i3 = r0 read r2 <NEXT> if i3 ! = -1 goto label3 <NEXT> goto label6 <NEXT> label $ l9 = l1 - l0 <NEXT> $ l10 = $ l9 + 1l <NEXT> $ l11 = $ l10 - l16 <NEXT> return $ l11 <NEXT> if i3 ! = -1 goto label3 <NEXT> label $ l12 = long i3 <NEXT> $ b13 = $ l12 cmp l16 <NEXT> if $ b13 > 0 goto label4 <NEXT> r1 write r2 0 i3 <NEXT> $ l15 = long i3 <NEXT> l16 = l16 - $ l15 <NEXT> goto label5 <NEXT> label goto label2 <NEXT> if $ b13 > 0 goto label4 <NEXT> label $ i14 = int l16 <NEXT> r1 write r2 0 $ i14 <NEXT> l16 = 0l <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework util unit data size r0 <NEXT> $ l0 = r1 bytes <NEXT> $ l1 = $ l0 1048576l <NEXT> return $ l1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r1 get value <NEXT> $ r3 = r1 get type descriptor <NEXT> $ r4 = org springframework core convert type descriptor value of class \ `` ljava lang byte \ `` <NEXT> $ r5 = r0 convert value $ r2 $ r3 $ r4 <NEXT> $ r6 = java lang byte $ r5 <NEXT> $ b0 = $ r6 byte value <NEXT> return $ b0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` null\ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ z0 = r0 be array <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> i0 = 1 <NEXT> r8 = r0 get component type <NEXT> label $ z1 = r8 be array <NEXT> if $ z1 == 0 goto label3 <NEXT> r8 = r8 get component type <NEXT> i0 = i0 + 1 <NEXT> goto label2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ r4 = r8 get name <NEXT> $ r3 append $ r4 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label5 <NEXT> $ r3 append \ `` [ ] \ `` <NEXT> i1 = i1 + 1 <NEXT> goto label4 <NEXT> label if i1 > = i0 goto label5 <NEXT> label $ r6 = $ r3 to string <NEXT> return $ r6 <NEXT> if $ z0 == 0 goto label6 <NEXT> label $ r2 = r0 get name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r21 = org springframework expression spel ast operator between r0 <NEXT> $ r9 = r21 get leave operand <NEXT> $ r10 = $ r9 get value internal r1 <NEXT> r2 = $ r10 get value <NEXT> r22 = org springframework expression spel ast operator between r0 <NEXT> $ r11 = r22 get right operand <NEXT> $ r12 = $ r11 get value internal r1 <NEXT> r3 = $ r12 get value <NEXT> $ z0 = r3 instanceof java util list <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r17 = java util list r3 <NEXT> $ i1 = $ r17 size <NEXT> if $ i1 == 2 goto label2 <NEXT> label r20 = new org springframework expression spel spel evaluation exception <NEXT> r23 = org springframework expression spel ast operator between r0 <NEXT> $ r14 = r23 get right operand <NEXT> $ i0 = $ r14 get start position <NEXT> $ r16 = org springframework expression spel spel message between_right_operand_must_be_two_element_list <NEXT> $ r15 = newarray java lang object [ 0 ] <NEXT> specialinvoke r20 < init > $ i0 $ r16 $ r15 <NEXT> r24 = java lang throwable r20 <NEXT> throw r24 <NEXT> if $ i1 == 2 goto label2 <NEXT> label r4 = java util list r3 <NEXT> r5 = r4 get 0 <NEXT> r6 = r4 get 1 <NEXT> r7 = r1 get type comparator <NEXT> label $ i2 = r7 compare r2 r5 <NEXT> if $ i2 < 0 goto label4 <NEXT> $ i3 = r7 compare r2 r6 <NEXT> if $ i3 > 0 goto label4 <NEXT> $ z1 = 1 <NEXT> goto label5 <NEXT> label $ r19 = org springframework expression spel support boolean type value for value $ z1 <NEXT> label return $ r19 <NEXT> if $ i3 > 0 goto label4 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get method <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r6 = org springframework expression spel support reflective property accessor r0 <NEXT> $ r3 = r6 get property method suffix r1 <NEXT> $ r4 = org springframework expression spel support reflective property accessor any_types <NEXT> r7 = org springframework expression spel support reflective property accessor r0 <NEXT> $ r5 = specialinvoke r7 find method for property $ r3 \ `` set\ <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org springframework expression spel support reflective property accessor r0 <NEXT> r2 = r6 get property method suffix r1 <NEXT> $ i0 = r2 length <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ c1 = r2 char at 0 <NEXT> $ z0 = java lang character be upper case $ c1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = newarray java lang string [ 1 ] <NEXT> $ r5 [ 0 ] = r2 <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r3 = newarray java lang string [ 2 ] <NEXT> $ r3 [ 0 ] = r2 <NEXT> $ r4 = org springframework util string utils capitalize r2 <NEXT> $ r3 [ 1 ] = $ r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework expression spel spel evaluation exception r0 <NEXT> $ r1 = r2 insert <NEXT> return $ r1 <END>
<BEG> $ r0 = new org springframework expression spel support data bind property accessor <NEXT> specialinvoke $ r0 < init > 0 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org springframework expression spel standard spel expression <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org springframework expression spel standard spel expression r0 <NEXT> $ z1 = $ r1 compile expression <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = io spring javaformat eclipse jdt core dom instanceof expression r0 <NEXT> r7 support only in15 <NEXT> r8 = io spring javaformat eclipse jdt core dom instanceof expression r0 <NEXT> r8 unsupported without preview error <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r9 = io spring javaformat eclipse jdt core dom instanceof expression r0 <NEXT> r2 = r9 pattern variable <NEXT> $ r3 = io spring javaformat eclipse jdt core dom instanceof expression pattern_variable_property <NEXT> r10 = io spring javaformat eclipse jdt core dom instanceof expression r0 <NEXT> r11 = io spring javaformat eclipse jdt core dom a s t node r2 <NEXT> r12 = io spring javaformat eclipse jdt core dom a s t node r1 <NEXT> r10 pre replace child r11 r12 $ r3 <NEXT> r13 = io spring javaformat eclipse jdt core dom instanceof expression r0 <NEXT> r13 pattern variable = r1 <NEXT> $ r4 = io spring javaformat eclipse jdt core dom instanceof expression pattern_variable_property <NEXT> r14 = io spring javaformat eclipse jdt core dom instanceof expression r0 <NEXT> r15 = io spring javaformat eclipse jdt core dom a s t node r2 <NEXT> r16 = io spring javaformat eclipse jdt core dom a s t node r1 <NEXT> r14 post replace child r15 r16 $ r4 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = io spring javaformat eclipse jdt internal core default work copy owner primary <NEXT> r3 = io spring javaformat eclipse jdt core work copy owner $ r1 <NEXT> $ r2 = io spring javaformat eclipse jdt core java core create r0 r3 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = io spring javaformat eclipse jdt internal core java model manager get java model manager <NEXT> $ r2 = $ r1 resolve variable entry r0 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = io spring javaformat eclipse jdt internal core java model manager get java model manager <NEXT> $ r2 = $ r1 get resolve variable path r0 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io spring javaformat eclipse jdt internal core nd db chunk r0 <NEXT> $ r2 = r3 f database <NEXT> r4 = io spring javaformat eclipse jdt internal core nd db chunk r0 <NEXT> $ i0 = r4 f sequence number <NEXT> $ l1 = long $ i0 <NEXT> $ l2 = $ l1 * 4096l <NEXT> r1 = $ r2 get chunk $ l2 <NEXT> r1 make dirty <NEXT> return r1 <END>
<BEG> i0 = @ parameter0 <NEXT> $ l1 = long i0 <NEXT> $ l4 = 4096l * $ l1 <NEXT> $ i2 = io spring javaformat eclipse jdt internal core nd db large block header_size <NEXT> $ l3 = long $ i2 <NEXT> $ l7 = $ l4 - $ l3 <NEXT> $ i5 = io spring javaformat eclipse jdt internal core nd db large block footer_size <NEXT> $ l6 = long $ i5 <NEXT> $ l8 = $ l7 - $ l6 <NEXT> $ l9 = $ l8 - 2l <NEXT> return $ l9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io spring javaformat eclipse jdt internal core nd index exception builder r0 <NEXT> $ r4 = r6 related address <NEXT> r3 = $ r4 iterator <NEXT> goto label2 <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r5 = r3 next <NEXT> r2 = io spring javaformat eclipse jdt internal core nd db related address $ r5 <NEXT> r1 add related address r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = io spring javaformat eclipse jdt internal core nd java nd complex type signature declaring_type <NEXT> r5 = io spring javaformat eclipse jdt internal core nd java nd complex type signature r0 <NEXT> $ r2 = r5 get nd <NEXT> r6 = io spring javaformat eclipse jdt internal core nd java nd complex type signature r0 <NEXT> $ l0 = r6 address <NEXT> $ r3 = $ r1 get $ r2 $ l0 <NEXT> $ r4 = io spring javaformat eclipse jdt internal core nd java nd complex type signature $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> $ i2 = io spring javaformat eclipse jdt internal core nd raw growable array array_header_bytes <NEXT> r1 = io spring javaformat eclipse jdt internal core nd raw growable array r0 <NEXT> $ i0 = r1 inline size <NEXT> $ i1 = 4 * $ i0 <NEXT> $ i3 = $ i2 + $ i1 <NEXT> return $ i3 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ i2 = i0 + i1 <NEXT> $ i3 = $ i2 - 1 <NEXT> $ i4 = $ i3 i1 <NEXT> $ i5 = $ i4 * i1 <NEXT> return $ i5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io spring javaformat eclipse jdt internal eval evaluation context r0 <NEXT> r2 line separator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework security config annotation authentication configurers provision jdbc user detail manager configurer r0 <NEXT> $ r2 = r3 get user detail service <NEXT> $ r2 set authority by username query r1 <NEXT> r4 = org springframework security config annotation authentication configurers provision jdbc user detail manager configurer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework security config annotation authentication configurers provision jdbc user detail manager configurer r0 <NEXT> $ r1 = r3 init script <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = org springframework security config annotation authentication configurers provision jdbc user detail manager configurer r0 <NEXT> $ r2 = specialinvoke r4 get data source init <NEXT> $ r2 after property set <NEXT> label specialinvoke r0 init user detail service <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org springframework security config annotation web configurers exception handle configurer <NEXT> specialinvoke r4 < init > <NEXT> r5 = org springframework security config annotation web builder http security r0 <NEXT> r6 = org springframework security config annotation security configurer adapter r4 <NEXT> $ r3 = specialinvoke r5 get or apply r6 <NEXT> r1 customize $ r3 <NEXT> r7 = org springframework security config annotation web builder http security r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org springframework security config annotation web configurers saml2 saml2 login configurer <NEXT> specialinvoke r4 < init > <NEXT> r5 = org springframework security config annotation web builder http security r0 <NEXT> r6 = org springframework security config annotation security configurer adapter r4 <NEXT> $ r3 = specialinvoke r5 get or apply r6 <NEXT> r1 customize $ r3 <NEXT> r7 = org springframework security config annotation web builder http security r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework security config annotation web builder web security r0 <NEXT> r1 debug enable = z0 <NEXT> r2 = org springframework security config annotation web builder web security r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r33 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r3 = r33 web security configurers <NEXT> if $ r3 == null goto label01 <NEXT> r34 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r24 = r34 web security configurers <NEXT> $ z5 = $ r24 be empty <NEXT> if $ z5 ! = 0 goto label01 <NEXT> $ z6 = 1 <NEXT> goto label02 <NEXT> label z0 = $ z6 <NEXT> r35 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r25 = r35 security filter chain <NEXT> $ z7 = $ r25 be empty <NEXT> if $ z7 ! = 0 goto label03 <NEXT> $ z8 = 1 <NEXT> goto label04 <NEXT> label z1 = $ z8 <NEXT> if z0 == 0 goto label05 <NEXT> if $ z8 ! = 0 goto label06 <NEXT> label $ z9 = 1 <NEXT> goto label07 <NEXT> label org springframework util assert state $ z9 \ `` found web security configurer adapter as well a security filter chain please select just one \ `` <NEXT> if z0 ! = 0 goto label08 <NEXT> if z1 ! = 0 goto label08 <NEXT> r36 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r20 = r36 object object post processor <NEXT> r32 = new org springframework security config annotation web configuration web security configuration $ 1 <NEXT> r37 = org springframework security config annotation web configuration web security configuration r0 <NEXT> specialinvoke r32 < init > r37 <NEXT> $ r21 = $ r20 post process r32 <NEXT> r26 = org springframework security config annotation web configuration web security configurer adapter $ r21 <NEXT> r38 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r22 = r38 web security <NEXT> r39 = org springframework security config annotation security configurer r26 <NEXT> $ r22 apply r39 <NEXT> label r40 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r27 = r40 security filter chain <NEXT> r28 = $ r27 iterator <NEXT> label $ z10 = r28 have next <NEXT> if $ z10 == 0 goto label13 <NEXT> $ r10 = r28 next <NEXT> r29 = org springframework security web security filter chain $ r10 <NEXT> r41 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r11 = r41 web security <NEXT> $ r12 = web security configuration $ lambda_spring security filter chain_0__1 bootstrap $ r29 <NEXT> $ r11 add security filter chain builder $ r12 <NEXT> $ r14 = r29 get filter <NEXT> r1 = $ r14 iterator <NEXT> label $ z3 = r1 have next <NEXT> if $ z3 == 0 goto label12 <NEXT> $ r15 = r1 next <NEXT> r2 = javax servlet filter $ r15 <NEXT> $ z4 = r2 instanceof org springframework security web access intercept filter security interceptor <NEXT> if $ z4 == 0 goto label11 <NEXT> r42 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r17 = r42 web security <NEXT> $ r16 = org springframework security web access intercept filter security interceptor r2 <NEXT> $ r17 security interceptor $ r16 <NEXT> goto label12 <NEXT> label goto label09 <NEXT> if $ z4 == 0 goto label11 <NEXT> label goto label10 <NEXT> if $ z10 == 0 goto label13 <NEXT> label r43 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r4 = r43 web security customizers <NEXT> r30 = $ r4 iterator <NEXT> label $ z2 = r30 have next <NEXT> if $ z2 == 0 goto label15 <NEXT> $ r8 = r30 next <NEXT> r31 = org springframework security config annotation web configuration web security customizer $ r8 <NEXT> r44 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r9 = r44 web security <NEXT> r31 customize $ r9 <NEXT> goto label14 <NEXT> if $ z2 == 0 goto label15 <NEXT> label r45 = org springframework security config annotation web configuration web security configuration r0 <NEXT> $ r5 = r45 web security <NEXT> $ r6 = $ r5 build <NEXT> $ r7 = javax servlet filter $ r6 <NEXT> return $ r7 <NEXT> if $ z8 ! = 0 goto label06 <NEXT> label $ z9 = 0 <NEXT> if $ z7 ! = 0 goto label03 <NEXT> label $ z8 = 0 <NEXT> if $ z5 ! = 0 goto label01 <NEXT> label $ z6 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> specialinvoke r3 set login page r1 <NEXT> r4 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> r4 update authentication default <NEXT> r5 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> r5 custom login page = 1 <NEXT> r6 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> $ r2 = specialinvoke r6 get self <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> r2 auth filter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> $ r1 = r2 login process url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r23 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> $ r2 = r23 login process url <NEXT> if $ r2 ! = null goto label1 <NEXT> r24 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> $ r19 = r24 login page <NEXT> r25 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> r25 login process url $ r19 <NEXT> label r26 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> $ r3 = r26 failure handler <NEXT> if $ r3 ! = null goto label2 <NEXT> r21 = new java lang string builder <NEXT> specialinvoke r21 < init > <NEXT> r27 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> $ r14 = r27 login page <NEXT> $ r15 = r21 append $ r14 <NEXT> $ r16 = $ r15 append \ `` ? error\ `` <NEXT> $ r17 = $ r16 to string <NEXT> r28 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> r28 failure url $ r17 <NEXT> label r29 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> $ r4 = r29 get builder <NEXT> $ r5 = org springframework security config annotation web http security builder $ r4 <NEXT> $ r6 = $ r5 get configurer class \ `` lorg springframework security config annotation web configurers logout configurer \ `` <NEXT> r1 = org springframework security config annotation web configurers logout configurer $ r6 <NEXT> if r1 == null goto label3 <NEXT> $ z0 = r1 be custom logout success <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r22 = new java lang string builder <NEXT> specialinvoke r22 < init > <NEXT> r30 = org springframework security config annotation web configurers abstract authentication filter configurer r0 <NEXT> $ r8 = r30 login page <NEXT> $ r9 = r22 append $ r8 <NEXT> $ r10 = $ r9 append \ `` ? logout\ `` <NEXT> $ r11 = $ r10 to string <NEXT> r1 logout success url $ r11 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework security config annotation web configurers header configurer r0 <NEXT> $ r2 = r4 x protection <NEXT> $ r3 = org springframework security config annotation web configurers header configurer $ x x config access $ 1000 $ r2 <NEXT> r1 customize $ r3 <NEXT> r5 = org springframework security config annotation web configurers header configurer r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework security config annotation web configurers logout configurer r0 <NEXT> r2 custom logout success = 1 <NEXT> r3 = org springframework security config annotation web configurers logout configurer r0 <NEXT> r3 logout success url = r1 <NEXT> r4 = org springframework security config annotation web configurers logout configurer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework security config annotation web configurers oauth2 client o auth2 client configurer r0 <NEXT> $ r2 = r3 authorization code grant configurer <NEXT> r1 customize $ r2 <NEXT> r4 = org springframework security config annotation web configurers oauth2 client o auth2 client configurer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r6 = new org springframework security access intercept aspectj method invocation adapter <NEXT> specialinvoke $ r6 < init > r1 <NEXT> r3 = specialinvoke r0 before invocation $ r6 <NEXT> label r4 = r2 proceed with object <NEXT> label specialinvoke r0 finally invocation r3 <NEXT> goto label5 <NEXT> label $ r7 = specialinvoke r0 after invocation r3 r4 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r1 instanceof javax security auth callback password callback <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = javax security auth callback password callback r1 <NEXT> $ r4 = r2 get credential <NEXT> $ r5 = $ r4 to string <NEXT> $ r6 = $ r5 to char array <NEXT> $ r3 set password $ r6 <NEXT> label return <END>
<BEG> $ r0 = org springframework security core context security context holder strategy <NEXT> $ r0 clear context <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org springframework security core userdetails jdbc jdbc dao impl r0 <NEXT> $ r2 = r7 get jdbc template <NEXT> r8 = org springframework security core userdetails jdbc jdbc dao impl r0 <NEXT> $ r4 = r8 group authority by username query <NEXT> $ r3 = newarray java lang string [ 1 ] <NEXT> $ r3 [ 0 ] = r1 <NEXT> r9 = org springframework security core userdetails jdbc jdbc dao impl r0 <NEXT> $ r5 = jdbc dao impl $ lambda_load group authorities_2__3 bootstrap $ r9 <NEXT> $ r6 = $ r2 query $ r4 $ r3 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r2 = org springframework security crypto codec utf8 charset <NEXT> $ r3 = $ r2 new encoder <NEXT> $ r4 = java nio char buffer wrap r0 <NEXT> r8 = $ r3 encode $ r4 <NEXT> $ i0 = r8 limit <NEXT> r1 = newarray byte [ $ i0 ] <NEXT> $ r5 = r8 array <NEXT> $ i1 = r8 limit <NEXT> java lang system arraycopy $ r5 0 r1 0 $ i1 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework security oauth2 client registration client registration r0 <NEXT> $ r1 = r2 client secret <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` request cache can not be null\ `` <NEXT> r2 = org springframework security oauth2 client web server o auth2 authorization request redirect web filter r0 <NEXT> r2 request cache = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework security oauth2 core abstract o auth2 token r0 <NEXT> $ r1 = r2 issue at <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> org springframework util assert have text r1 \ `` target url parameter can not be empty\ `` <NEXT> label r2 = org springframework security web authentication abstract authentication target url request handler r0 <NEXT> r2 target url parameter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework security web authentication abstract authentication target url request handler r0 <NEXT> r2 redirect strategy = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> org springframework util assert not null r1 \ `` http servlet request required\ `` <NEXT> r10 = org springframework security web authentication logout security context logout handler r0 <NEXT> $ z0 = r10 invalidate http session <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = r1 get session 0 <NEXT> if r8 == null goto label1 <NEXT> r8 invalidate <NEXT> r11 = org springframework security web authentication logout security context logout handler r0 <NEXT> $ r4 = r11 logger <NEXT> $ z1 = $ r4 be debug enabled <NEXT> if $ z1 == 0 goto label1 <NEXT> r12 = org springframework security web authentication logout security context logout handler r0 <NEXT> $ r5 = r12 logger <NEXT> $ r6 = r8 get id <NEXT> $ r7 = org springframework core log log message format \ `` invalidated session % s\ <NEXT> $ r5 debug $ r7 <NEXT> label r13 = org springframework security web authentication logout security context logout handler r0 <NEXT> $ z2 = r13 clear authentication <NEXT> if $ z2 == 0 goto label2 <NEXT> r9 = org springframework security core context security context holder get context <NEXT> r9 set authentication null <NEXT> label org springframework security core context security context holder clear context <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework security web authentication preauth request header authentication filter r0 <NEXT> r1 exception if header miss = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r38 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> r3 = r38 extract remember me cookie r1 <NEXT> if r3 ! = null goto label1 <NEXT> return null <NEXT> if r3 ! = null goto label1 <NEXT> label r39 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> $ r5 = r39 logger <NEXT> $ r5 debug \ `` remember-me cookie detected\ `` <NEXT> $ i0 = r3 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> r40 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> $ r9 = r40 logger <NEXT> $ r9 debug \ `` cookie be empty\ `` <NEXT> r41 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> r41 cancel cookie r1 r2 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label r42 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> r30 = r42 decode cookie r3 <NEXT> r43 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> r4 = r43 process auto login cookie r30 r1 r2 <NEXT> r44 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> $ r6 = r44 user detail checker <NEXT> $ r6 check r4 <NEXT> r45 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> $ r7 = r45 logger <NEXT> $ r7 debug \ `` remember-me cookie accepted\ `` <NEXT> r46 = org springframework security web authentication rememberme abstract remember me service r0 <NEXT> $ r8 = r46 create successful authentication r1 r4 <NEXT> label return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework security web authentication session session fixation protection event r0 <NEXT> $ r1 = r2 old session id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework security web authentication simple url authentication failure handler r0 <NEXT> r1 forward to destination = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` exit user matcher can not be null\ `` <NEXT> r2 = org springframework security web authentication switchuser switch user filter r0 <NEXT> r2 exit user matcher = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework security web authentication switchuser switch user grant authority r0 <NEXT> $ r1 = r2 source <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert have text r1 \ `` password parameter must not be empty or null\ `` <NEXT> r2 = org springframework security web authentication username password authentication filter r0 <NEXT> r2 password parameter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework security web filter invocation r0 <NEXT> $ r1 = r3 request <NEXT> $ r2 = org springframework security web util url utils build full request url $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> $ r2 = org springframework security web firewall strict http firewall forbidden_backslash <NEXT> r3 = org springframework security web firewall strict http firewall r0 <NEXT> specialinvoke r3 url blocklists remove all $ r2 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label $ r1 = org springframework security web firewall strict http firewall forbidden_backslash <NEXT> r4 = org springframework security web firewall strict http firewall r0 <NEXT> specialinvoke r4 url blocklists add all $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = specialinvoke r0 get parameter r1 <NEXT> if r2 == null goto label1 <NEXT> return r2 <NEXT> if r2 == null goto label1 <NEXT> label r6 = org springframework security web savedrequest save request aware wrapper r0 <NEXT> $ r4 = r6 save request <NEXT> r3 = $ r4 get parameter value r1 <NEXT> if r3 == null goto label2 <NEXT> $ i0 = lengthof r3 <NEXT> if $ i0 ! = 0 goto label3 <NEXT> label return null <NEXT> if $ i0 ! = 0 goto label3 <NEXT> label $ r5 = r3 [ 0 ] <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` authentication failure handler can not be null\ `` <NEXT> r2 = org springframework security web server authentication authentication web filter r0 <NEXT> r2 authentication failure handler = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert have length r1 \ `` parameter name can\'t be null\ `` <NEXT> r2 = org springframework security web server csrf cookie server csrf token repository r0 <NEXT> r2 parameter name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert have length r1 \ `` header name can\'t be null\ `` <NEXT> r2 = org springframework security web server csrf cookie server csrf token repository r0 <NEXT> r2 header name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework security web server csrf cookie server csrf token repository r0 <NEXT> r2 cookie domain = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new org springframework expression spel support standard evaluation context <NEXT> r4 = new org springframework security web util matcher e l request matcher context <NEXT> specialinvoke r4 < init > r1 <NEXT> specialinvoke r5 < init > r4 <NEXT> r6 = org springframework expression evaluation context r5 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework mock http mock http output message r0 <NEXT> $ r1 = r2 header <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework mock web mock http servlet request r0 <NEXT> $ z0 = r1 active <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework mock web mock http servlet request r0 <NEXT> r1 close <NEXT> r2 = org springframework mock web mock http servlet request r0 <NEXT> r2 clear attribute <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org springframework mock web mock http servlet request r0 <NEXT> $ r1 = r8 session <NEXT> if $ r1 == null goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label org springframework util assert be true $ z1 \ `` the request do not have a session\ `` <NEXT> r9 = org springframework mock web mock http servlet request r0 <NEXT> $ r2 = r9 session <NEXT> $ z0 = $ r2 instanceof org springframework mock web mock http session <NEXT> if $ z0 == 0 goto label3 <NEXT> r10 = org springframework mock web mock http servlet request r0 <NEXT> $ r5 = r10 session <NEXT> $ r6 = org springframework mock web mock http session $ r5 <NEXT> $ r7 = $ r6 change session id <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r11 = org springframework mock web mock http servlet request r0 <NEXT> $ r3 = r11 session <NEXT> $ r4 = $ r3 get id <NEXT> return $ r4 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org springframework mock web mock jsp writer r0 <NEXT> $ r1 = r5 target writer <NEXT> if $ r1 ! = null goto label1 <NEXT> r6 = org springframework mock web mock jsp writer r0 <NEXT> $ r3 = r6 response <NEXT> $ r4 = $ r3 get writer <NEXT> r7 = org springframework mock web mock jsp writer r0 <NEXT> r7 target writer = $ r4 <NEXT> label r8 = org springframework mock web mock jsp writer r0 <NEXT> $ r2 = r8 target writer <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework test context context configuration attribute r0 <NEXT> $ r1 = r2 location <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org springframework test context junit4 abstract transactional j unit4 spring context test r0 <NEXT> $ r3 = r4 jdbc template <NEXT> $ i0 = org springframework test jdbc jdbc test utils count row in table where $ r3 r1 r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework test context junit4 abstract transactional j unit4 spring context test r0 <NEXT> $ r2 = r3 jdbc template <NEXT> $ i0 = org springframework test jdbc jdbc test utils delete from table $ r2 r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = org springframework test context junit4 abstract transactional j unit4 spring context test r0 <NEXT> $ r4 = r5 jdbc template <NEXT> $ i0 = org springframework test jdbc jdbc test utils delete from table where $ r4 r1 r2 r3 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org springframework test context junit4 spring j unit4 class runner r0 <NEXT> $ r2 = r5 get test class <NEXT> $ r3 = $ r2 get java class <NEXT> $ z0 = org springframework test annotation profile value utils be test enable in this environment $ r3 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = org springframework test context junit4 spring j unit4 class runner r0 <NEXT> $ r4 = r6 get description <NEXT> r1 fire test ignore $ r4 <NEXT> return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label specialinvoke r0 run r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` class must not be null\ `` <NEXT> r38 = org springframework test context support abstract context loader r0 <NEXT> r2 = r38 get resource suffix <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label5 <NEXT> r4 = r2 [ i1 ] <NEXT> org springframework util assert have text r4 \ `` resource suffix must not be empty\ `` <NEXT> r35 = new java lang string builder <NEXT> specialinvoke r35 < init > <NEXT> $ r16 = r1 get name <NEXT> $ r17 = org springframework util class utils convert class name to resource path $ r16 <NEXT> $ r18 = r35 append $ r17 <NEXT> $ r19 = $ r18 append r4 <NEXT> r5 = $ r19 to string <NEXT> r36 = new org springframework core io class path resource <NEXT> specialinvoke r36 < init > r5 <NEXT> $ z1 = r36 exist <NEXT> if $ z1 == 0 goto label3 <NEXT> r37 = new java lang string builder <NEXT> specialinvoke r37 < init > <NEXT> $ r27 = r37 append \ `` classpath\ `` <NEXT> $ r28 = $ r27 append r5 <NEXT> r7 = $ r28 to string <NEXT> $ r29 = org springframework test context support abstract context loader logger <NEXT> $ z3 = $ r29 be info enabled <NEXT> if $ z3 == 0 goto label2 <NEXT> $ r32 = org springframework test context support abstract context loader logger <NEXT> $ r31 = newarray java lang object [ 2 ] <NEXT> $ r31 [ 0 ] = r7 <NEXT> $ r33 = r1 get name <NEXT> $ r31 [ 1 ] = $ r33 <NEXT> $ r34 = java lang string format \ `` detect default resource location \\\ `` % s\\\ `` for test class [ % s ] \ <NEXT> $ r32 info $ r34 <NEXT> label $ r30 = newarray java lang string [ 1 ] <NEXT> $ r30 [ 0 ] = r7 <NEXT> return $ r30 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ r21 = org springframework test context support abstract context loader logger <NEXT> $ z2 = $ r21 be debug enabled <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r23 = org springframework test context support abstract context loader logger <NEXT> $ r22 = newarray java lang object [ 2 ] <NEXT> $ r24 = r1 get name <NEXT> $ r22 [ 0 ] = $ r24 <NEXT> $ r22 [ 1 ] = r36 <NEXT> $ r25 = java lang string format \ `` do not detect default resource location for test class [ % s ] % s do not exist\ <NEXT> $ r23 debug $ r25 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label5 <NEXT> label $ r8 = org springframework test context support abstract context loader logger <NEXT> $ z0 = $ r8 be info enabled <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r11 = org springframework test context support abstract context loader logger <NEXT> $ r10 = newarray java lang object [ 2 ] <NEXT> $ r12 = r1 get name <NEXT> $ r10 [ 0 ] = $ r12 <NEXT> $ r13 = org springframework util object utils null safe to string r2 <NEXT> $ r10 [ 1 ] = $ r13 <NEXT> $ r14 = java lang string format \ `` could not detect default resource location for test class [ % s ] no resource find for suffix % s \ <NEXT> $ r11 info $ r14 <NEXT> label $ r9 = org springframework test context support abstract context loader empty_string_array <NEXT> return $ r9 <END>
<BEG> $ r0 = org springframework test context transaction test transaction require current transaction context <NEXT> $ z0 = $ r0 be flag for rollback <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r16 = org springframework test context transaction transactional test execution listener r0 <NEXT> z3 = r16 be default rollback r1 <NEXT> $ r3 = r1 get test method <NEXT> $ r4 = org springframework core annotation annotate element utils find merge annotation $ r3 class \ `` lorg springframework test annotation rollback \ `` <NEXT> r2 = org springframework test annotation rollback $ r4 <NEXT> if r2 == null goto label2 <NEXT> z0 = r2 value <NEXT> $ r10 = org springframework test context transaction transactional test execution listener logger <NEXT> $ z2 = $ r10 be debug enabled <NEXT> if $ z2 == 0 goto label1 <NEXT> $ r12 = org springframework test context transaction transactional test execution listener logger <NEXT> $ r11 = newarray java lang object [ 3 ] <NEXT> $ r13 = java lang boolean value of z0 <NEXT> $ r11 [ 0 ] = $ r13 <NEXT> $ r14 = java lang boolean value of z3 <NEXT> $ r11 [ 1 ] = $ r14 <NEXT> $ r11 [ 2 ] = r1 <NEXT> $ r15 = java lang string format \ `` method-level @ rollback % s override default rollback [ % s ] for test context % s \ <NEXT> $ r12 debug $ r15 <NEXT> label z3 = z0 <NEXT> goto label3 <NEXT> label return z3 <NEXT> if r2 == null goto label2 <NEXT> label $ r5 = org springframework test context transaction transactional test execution listener logger <NEXT> $ z1 = $ r5 be debug enabled <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r7 = org springframework test context transaction transactional test execution listener logger <NEXT> $ r6 = newarray java lang object [ 2 ] <NEXT> $ r8 = java lang boolean value of z3 <NEXT> $ r6 [ 0 ] = $ r8 <NEXT> $ r6 [ 1 ] = r1 <NEXT> $ r9 = java lang string format \ `` no method-level @ rollback override use default rollback [ % s ] for test context % s \ <NEXT> $ r7 debug $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org springframework test web client match content request matcher $ 2 <NEXT> r4 = org springframework test web client match content request matcher r0 <NEXT> specialinvoke r3 < init > r4 r1 <NEXT> r5 = org springframework test web client request matcher r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = new org springframework test web client match json path request matcher $ 5 <NEXT> r3 = org springframework test web client match json path request matcher r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = org springframework test web client request matcher r2 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = mock rest request matcher $ lambda_query param_6__9 bootstrap $ r0 r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = new org springframework test web client match content request matcher <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org springframework test web client match xpath request matcher r0 <NEXT> $ r1 = xpath request matcher $ lambda_node count_4__5 bootstrap $ r2 i0 <NEXT> r3 = org springframework test web client request matcher $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework test web client match xpath request matcher r0 <NEXT> $ r2 = xpath request matcher $ lambda_number_8__5 bootstrap $ r3 r1 <NEXT> r4 = org springframework test web client request matcher $ r2 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = org springframework test web model and view assert assert and return model attribute of type r0 r1 class \ `` ljava util list \ `` <NEXT> r3 = java util list $ r4 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append \ `` size of model list be \'\ `` <NEXT> $ i0 = r3 size <NEXT> $ r7 = $ r6 append $ i0 <NEXT> $ r8 = $ r7 append \ `` \ ' while size of expect list be \'\ `` <NEXT> $ i1 = r2 size <NEXT> $ r9 = $ r8 append $ i1 <NEXT> $ r10 = $ r9 append \ `` \'\ `` <NEXT> $ r11 = $ r10 to string <NEXT> $ i2 = r2 size <NEXT> $ i3 = r3 size <NEXT> if $ i2 ! = $ i3 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label org springframework test util assertion error assert true $ r11 $ z1 <NEXT> $ r12 = new java lang string builder <NEXT> specialinvoke $ r12 < init > <NEXT> $ r13 = $ r12 append \ `` list in model under name \'\ `` <NEXT> $ r14 = $ r13 append r1 <NEXT> $ r15 = $ r14 append \ `` \ ' be not equal to the expected list \ `` <NEXT> $ r16 = $ r15 to string <NEXT> $ z0 = r2 equal r3 <NEXT> org springframework test util assertion error assert true $ r16 $ z0 <NEXT> return <NEXT> if $ i2 ! = $ i3 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ r1 = java lang long value of l0 <NEXT> r5 = org springframework test web reactive server header assertion r0 <NEXT> $ r2 = specialinvoke r5 get header <NEXT> $ l1 = $ r2 get last modified <NEXT> $ r3 = java lang long value of $ l1 <NEXT> r6 = org springframework test web reactive server header assertion r0 <NEXT> $ r4 = specialinvoke r6 assert header \ `` last- modified\ <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org springframework test web reactive server json path assertion r0 <NEXT> $ r5 = r7 path helper <NEXT> r8 = org springframework test web reactive server json path assertion r0 <NEXT> $ r4 = r8 content <NEXT> r3 = $ r5 evaluate json path $ r4 r2 <NEXT> r1 accept r3 <NEXT> r9 = org springframework test web reactive server json path assertion r0 <NEXT> $ r6 = r9 body spec <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework http http status $ series server_error <NEXT> r3 = org springframework test web reactive server status assertion r0 <NEXT> $ r2 = specialinvoke r3 assert series and return r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org springframework test web reactive server status assertion r0 <NEXT> $ r2 = r7 exchange result <NEXT> $ r3 = $ r2 get status <NEXT> i0 = $ r3 value <NEXT> r8 = org springframework test web reactive server status assertion r0 <NEXT> $ r4 = r8 exchange result <NEXT> $ r5 = status assertion $ lambda_value_3__5 bootstrap $ r1 i0 <NEXT> $ r4 assert with diagnostics $ r5 <NEXT> r9 = org springframework test web reactive server status assertion r0 <NEXT> $ r6 = r9 response spec <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org springframework util string utils have text r1 <NEXT> if $ z0 == 0 goto label3 <NEXT> $ z1 = r1 start with \ `` \ `` <NEXT> org springframework util assert be true $ z1 \ `` servlet path must start with a \ ' \'\ `` <NEXT> $ z2 = r1 end with \ `` \ `` <NEXT> if $ z2 ! = 0 goto label1 <NEXT> $ z3 = 1 <NEXT> goto label2 <NEXT> label org springframework util assert be true $ z3 \ `` servlet path must not end with a \ ' \'\ `` <NEXT> label r2 = org springframework test web servlet request mock http servlet request builder r0 <NEXT> r2 servlet path = r1 <NEXT> r3 = org springframework test web servlet request mock http servlet request builder r0 <NEXT> return r3 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org springframework test web servlet request mock http servlet request builder r0 <NEXT> $ r3 = r4 session attribute <NEXT> org springframework test web servlet request mock http servlet request builder add to map $ r3 r1 r2 <NEXT> r5 = org springframework test web servlet request mock http servlet request builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework http medium type parse medium type r1 <NEXT> r4 = org springframework test web servlet result content result matcher r0 <NEXT> $ r3 = r4 content type $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework http medium type parse medium type r1 <NEXT> r4 = org springframework test web servlet result content result matcher r0 <NEXT> $ r3 = r4 content type compatible with $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = cookie result matcher $ lambda_exists_2__4 bootstrap $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r2 = cookie result matcher $ lambda_max age_5__14 bootstrap $ r1 i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = header result matcher $ lambda_does not exist_5__5 bootstrap $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ r2 = header result matcher $ lambda_date value_7__4 bootstrap $ r1 l0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework test web servlet result json path result matcher r0 <NEXT> $ r2 = json path result matcher $ lambda_value_2__8 bootstrap $ r3 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework test web servlet result json path result matcher r0 <NEXT> $ r2 = json path result matcher $ lambda_value_2__7 bootstrap $ r3 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = mock mvc result matcher $ lambda_forwarded url_0__3 bootstrap $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = org springframework web util uri component builder from uri string r0 <NEXT> $ r4 = $ r3 build and expand r1 <NEXT> $ r5 = $ r4 encode <NEXT> r2 = $ r5 to uri string <NEXT> $ r6 = org springframework test web servlet result mock mvc result matcher forward url r2 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = org springframework web util uri component builder from uri string r0 <NEXT> $ r4 = $ r3 build and expand r1 <NEXT> $ r5 = $ r4 encode <NEXT> r2 = $ r5 to uri string <NEXT> $ r6 = org springframework test web servlet result mock mvc result matcher redirect url r2 <NEXT> return $ r6 <END>
<BEG> $ r0 = new org springframework test web servlet result content result matcher <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework test web servlet result model result matcher r0 <NEXT> $ r1 = model result matcher $ lambda_has no errors_12__6 bootstrap $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util array a list r1 <NEXT> r3 = org springframework test web servlet setup standalone mock mvc builder r0 <NEXT> r3 message converter = $ r2 <NEXT> r4 = org springframework test web servlet setup standalone mock mvc builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework test web servlet setup standalone mock mvc builder r0 <NEXT> r2 conversion service = r1 <NEXT> r3 = org springframework test web servlet setup standalone mock mvc builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework test web servlet setup standalone mock mvc builder r0 <NEXT> r1 use suffix pattern match = z0 <NEXT> r2 = org springframework test web servlet setup standalone mock mvc builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r5 = org springframework test context test context manager logger <NEXT> $ z0 = $ r5 be trace enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r11 = org springframework test context test context manager logger <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r12 = r26 append \ `` prepare test instance instance [ \ `` <NEXT> $ r13 = $ r12 append r1 <NEXT> $ r14 = $ r13 append \ `` ] \ `` <NEXT> $ r15 = $ r14 to string <NEXT> $ r11 trace $ r15 <NEXT> label r28 = org springframework test context test context manager r0 <NEXT> $ r6 = r28 get test context <NEXT> $ r6 update state r1 null null <NEXT> r29 = org springframework test context test context manager r0 <NEXT> $ r7 = r29 get test execution listener <NEXT> r2 = $ r7 iterator <NEXT> label $ z2 = r2 have next <NEXT> if $ z2 == 0 goto label8 <NEXT> $ r8 = r2 next <NEXT> r3 = org springframework test context test execution listener $ r8 <NEXT> label r30 = org springframework test context test context manager r0 <NEXT> $ r9 = r30 get test context <NEXT> r3 prepare test instance $ r9 <NEXT> label goto label7 <NEXT> label goto label2 <NEXT> if $ z2 == 0 goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework test web reactive server cookie assertion r0 <NEXT> specialinvoke r4 get cookie r1 <NEXT> r5 = org springframework test web reactive server cookie assertion r0 <NEXT> $ r3 = r5 response spec <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java util array a list r2 <NEXT> r7 = org springframework test web reactive server header assertion r0 <NEXT> $ r4 = specialinvoke r7 get header <NEXT> $ r5 = $ r4 get or empty r1 <NEXT> r8 = org springframework test web reactive server header assertion r0 <NEXT> $ r6 = specialinvoke r8 assert header r1 $ r3 $ r5 <NEXT> return $ r6 <END>
<BEG> $ r1 = new org springframework http cache control <NEXT> specialinvoke $ r1 < init > <NEXT> $ r1 no cache = 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org springframework http client multipart body builder r0 <NEXT> $ r3 = r4 part r1 r2 null <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework http client support http accessor r0 <NEXT> $ r1 = r2 request factory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework http client support http accessor r0 <NEXT> $ r1 = r2 client http request initializers <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework http client support intercept http accessor r0 <NEXT> $ r1 = r2 interceptor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework http codec form http message reader r0 <NEXT> r1 max in memory size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org springframework http codec support base default codecs r0 <NEXT> specialinvoke r3 init codec r2 <NEXT> r1 add r2 <NEXT> return <END>
<BEG> $ r0 = new org springframework http content disposition <NEXT> specialinvoke $ r0 < init > \ `` \ <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` \'part converter\ ' must not be null\ `` <NEXT> r3 = org springframework http converter form http message converter r0 <NEXT> $ r2 = r3 part converter <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = java lang boolean value of z0 <NEXT> r2 = org springframework http converter json jackson2 object mapper builder r0 <NEXT> r2 default use wrapper = $ r1 <NEXT> r3 = org springframework http converter json jackson2 object mapper builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r1 [ i1 ] <NEXT> r7 = org springframework http converter json jackson2 object mapper builder r0 <NEXT> $ r5 = r7 feature <NEXT> $ r4 = java lang boolean true <NEXT> $ r5 put r3 $ r4 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label r8 = org springframework http converter json jackson2 object mapper builder r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ r1 = java lang long to string l0 <NEXT> r2 = org springframework http http header r0 <NEXT> r2 set \ `` content- length\ <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org springframework util string utils have length r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r8 = java util collection empty list <NEXT> return $ r8 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r1 = org springframework util mime type utils tokenize r0 <NEXT> $ r5 = new java util array list <NEXT> $ i0 = r1 size <NEXT> specialinvoke $ r5 < init > $ i0 <NEXT> r3 = r1 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r6 = r3 next <NEXT> r4 = java lang string $ r6 <NEXT> $ z2 = org springframework util string utils have text r4 <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r7 = org springframework http medium type parse medium type r4 <NEXT> $ r5 add $ r7 <NEXT> label goto label2 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org springframework http http method put <NEXT> $ r2 = org springframework http request entity method $ r1 r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r2 = org springframework remoting caucho hessian client interceptor r0 <NEXT> $ r1 = r2 proxy factory <NEXT> $ r1 set read timeout l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new org springframework remoting rmi codebase aware object input stream <NEXT> r6 = org springframework remoting httpinvoker abstract http invoker request executor r0 <NEXT> $ r4 = r6 get bean class loader <NEXT> specialinvoke r5 < init > r1 $ r4 r2 <NEXT> r7 = java io object input stream r5 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework remoting httpinvoker http invoker client interceptor r0 <NEXT> r2 codebase url = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework remoting jaxws abstract jax w service exporter r0 <NEXT> r2 bind type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org springframework remoting jaxws abstract jax w service exporter r0 <NEXT> $ r3 = r5 publish endpoint <NEXT> r1 = $ r3 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = r1 next <NEXT> r2 = javax xml ws endpoint $ r4 <NEXT> r2 stop <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> $ r1 = r2 soap action uri <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> $ r1 = r2 service interface <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> $ r1 = r2 bean class loader <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r15 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> r1 = r15 get service interface <NEXT> org springframework util assert not null r1 \ `` property \'service interface\ ' be required\ `` <NEXT> $ r4 = r1 get annotation class \ `` ljavax jws web service \ `` <NEXT> r2 = javax jws web service $ r4 <NEXT> if r2 == null goto label1 <NEXT> r16 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> r16 apply default from annotation r2 <NEXT> label r17 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> r12 = r17 get jax w service <NEXT> if r12 ! = null goto label2 <NEXT> r18 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> r12 = r18 create jax ws service <NEXT> label r19 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> $ r5 = r19 get port name <NEXT> if $ r5 == null goto label3 <NEXT> r20 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> $ r13 = r20 get port name <NEXT> goto label4 <NEXT> label r21 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> $ r6 = r21 get q name $ r13 <NEXT> r22 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> r22 port q name = $ r6 <NEXT> $ r8 = r12 <NEXT> r23 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> $ r7 = r23 get port name <NEXT> if $ r7 == null goto label5 <NEXT> r24 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> $ r14 = r24 port q name <NEXT> goto label6 <NEXT> label r25 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> r3 = r25 get port stub $ r8 $ r14 <NEXT> r26 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> r26 prepare port stub r3 <NEXT> r27 = org springframework remoting jaxws jax w port client interceptor r0 <NEXT> r27 port stub = r3 <NEXT> return <NEXT> if $ r7 == null goto label5 <NEXT> label $ r14 = null <NEXT> if $ r5 == null goto label3 <NEXT> label $ r13 = r1 get name <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework remoting jaxws local jax w service factory r0 <NEXT> $ r1 = r2 wsdl document url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web accept content negotiation manager factory bean r0 <NEXT> r2 servlet context = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web bind miss matrix variable exception r0 <NEXT> $ r1 = r2 parameter <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> d0 = @ parameter2 <NEXT> $ r3 = r0 get parameter r1 <NEXT> if $ r3 ! = null goto label1 <NEXT> return d0 <NEXT> if $ r3 ! = null goto label1 <NEXT> label $ d1 = org springframework web bind servlet request utils get require double parameter r0 r1 <NEXT> label return $ d1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> r9 = org springframework web bind support default session attribute store r0 <NEXT> $ r4 = r9 attribute name prefix <NEXT> $ r5 = r8 append $ r4 <NEXT> $ r6 = $ r5 append r2 <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web bind web data binder r0 <NEXT> r2 field marker prefix = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web bind web data binder r0 <NEXT> r1 bind empty multipart file = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r9 = org springframework web context request async web async task r0 <NEXT> $ r1 = r9 executor <NEXT> if $ r1 == null goto label1 <NEXT> r10 = org springframework web context request async web async task r0 <NEXT> $ r8 = r10 executor <NEXT> return $ r8 <NEXT> if $ r1 == null goto label1 <NEXT> label r11 = org springframework web context request async web async task r0 <NEXT> $ r2 = r11 executor name <NEXT> if $ r2 == null goto label4 <NEXT> r12 = org springframework web context request async web async task r0 <NEXT> $ r3 = r12 bean factory <NEXT> if $ r3 == null goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label org springframework util assert state $ z0 \ `` bean factory be require to look up an executor bean by name\ `` <NEXT> r13 = org springframework web context request async web async task r0 <NEXT> $ r5 = r13 bean factory <NEXT> r14 = org springframework web context request async web async task r0 <NEXT> $ r4 = r14 executor name <NEXT> $ r6 = $ r5 get bean $ r4 class \ `` lorg springframework core task async task executor \ `` <NEXT> $ r7 = org springframework core task async task executor $ r6 <NEXT> return $ r7 <NEXT> if $ r3 == null goto label2 <NEXT> label $ z0 = 0 <NEXT> if $ r2 == null goto label4 <NEXT> label return null <END>
<BEG> $ r0 = org springframework web context request request context holder request attribute holder <NEXT> $ r1 = $ r0 get <NEXT> r4 = org springframework web context request request attribute $ r1 <NEXT> if r4 ! = null goto label1 <NEXT> $ r2 = org springframework web context request request context holder inheritable request attribute holder <NEXT> $ r3 = $ r2 get <NEXT> r4 = org springframework web context request request attribute $ r3 <NEXT> label return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web context support generic web application context r0 <NEXT> r2 servlet context = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org springframework web context support groovy web application context r0 <NEXT> r2 = r5 get config location <NEXT> if r2 == null goto label2 <NEXT> i0 = lengthof r2 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label2 <NEXT> r4 = r2 [ i2 ] <NEXT> r1 load bean definition r4 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web context support servlet context resource r0 <NEXT> $ r1 = r2 servlet context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org springframework web context support servlet context resource <NEXT> r5 = org springframework web context support servlet context resource loader r0 <NEXT> $ r3 = r5 servlet context <NEXT> specialinvoke r4 < init > $ r3 r1 <NEXT> r6 = org springframework core io resource r4 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web filter abstract request log filter r0 <NEXT> r1 include payload = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web filter abstract request log filter r0 <NEXT> r2 after message prefix = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r39 = new java lang string builder <NEXT> specialinvoke r39 < init > <NEXT> r39 append r2 <NEXT> $ r7 = r1 get method <NEXT> $ r8 = r39 append $ r7 <NEXT> $ r8 append \ `` \ `` <NEXT> $ r10 = r1 get request u r i <NEXT> r39 append $ r10 <NEXT> r41 = org springframework web filter abstract request log filter r0 <NEXT> $ z0 = r41 be include query string <NEXT> if $ z0 == 0 goto label1 <NEXT> r30 = r1 get query string <NEXT> if r30 == null goto label1 <NEXT> $ r28 = r39 append 63 <NEXT> $ r28 append r30 <NEXT> label r42 = org springframework web filter abstract request log filter r0 <NEXT> $ z4 = r42 be include client info <NEXT> if $ z4 == 0 goto label4 <NEXT> r31 = r1 get remote addr <NEXT> $ z3 = org springframework util string utils have length r31 <NEXT> if $ z3 == 0 goto label2 <NEXT> $ r26 = r39 append \ <NEXT> $ r26 append r31 <NEXT> label r32 = r1 get session 0 <NEXT> if r32 == null goto label3 <NEXT> $ r23 = r39 append \ <NEXT> $ r24 = r32 get id <NEXT> $ r23 append $ r24 <NEXT> label r33 = r1 get remote user <NEXT> if r33 == null goto label4 <NEXT> $ r21 = r39 append \ <NEXT> $ r21 append r33 <NEXT> label r43 = org springframework web filter abstract request log filter r0 <NEXT> $ z5 = r43 be include header <NEXT> if $ z5 == 0 goto label8 <NEXT> r40 = new org springframework http server servlet server http request <NEXT> specialinvoke r40 < init > r1 <NEXT> r34 = r40 get header <NEXT> r44 = org springframework web filter abstract request log filter r0 <NEXT> $ r16 = r44 get header predicate <NEXT> if $ r16 == null goto label7 <NEXT> r35 = r1 get header name <NEXT> label $ z1 = r35 have more element <NEXT> if $ z1 == 0 goto label7 <NEXT> $ r19 = r35 next element <NEXT> r36 = java lang string $ r19 <NEXT> r45 = org springframework web filter abstract request log filter r0 <NEXT> $ r20 = r45 get header predicate <NEXT> $ z2 = $ r20 test r36 <NEXT> if $ z2 ! = 0 goto label6 <NEXT> r34 set r36 \ `` masked\ `` <NEXT> label goto label5 <NEXT> if $ z1 == 0 goto label7 <NEXT> label $ r17 = r39 append \ <NEXT> $ r17 append r34 <NEXT> label r46 = org springframework web filter abstract request log filter r0 <NEXT> $ z6 = r46 be include payload <NEXT> if $ z6 == 0 goto label9 <NEXT> r47 = org springframework web filter abstract request log filter r0 <NEXT> r37 = r47 get message payload r1 <NEXT> if r37 == null goto label9 <NEXT> $ r13 = r39 append \ <NEXT> $ r13 append r37 <NEXT> label r39 append r3 <NEXT> $ r38 = r39 to string <NEXT> return $ r38 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web filter generic filter bean r0 <NEXT> r2 servlet context = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web http medium type exception r0 <NEXT> $ r1 = r2 support medium type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework web jsf delegate navigation handler proxy r0 <NEXT> $ r2 = r3 get web application context r1 <NEXT> r4 = org springframework bean factory bean factory $ r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework web jsf face context utils get require web application context r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web method handler method r0 <NEXT> $ r1 = r2 bean type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web method handler method r0 <NEXT> $ r1 = r2 resolve from handler method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web method support model and view container r0 <NEXT> r1 ignore default model on redirect = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web method support model and view container r0 <NEXT> r2 view = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org springframework web method support model and view container r0 <NEXT> $ z0 = specialinvoke r6 use default model <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = org springframework web method support model and view container r0 <NEXT> $ r4 = r7 default model <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org springframework web method support model and view container r0 <NEXT> $ r1 = r8 redirect model <NEXT> if $ r1 ! = null goto label2 <NEXT> r5 = new org springframework ui model map <NEXT> specialinvoke r5 < init > <NEXT> r9 = org springframework web method support model and view container r0 <NEXT> r9 redirect model = r5 <NEXT> label r10 = org springframework web method support model and view container r0 <NEXT> $ r2 = r10 redirect model <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web method support model and view container r0 <NEXT> $ r1 = r2 status <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework web method support model and view container r0 <NEXT> $ r2 = r3 bind disabled <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework web method support model and view container r0 <NEXT> $ z0 = r1 request handle <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework web multipart common common file upload support r0 <NEXT> $ r2 = r3 file upload <NEXT> $ r2 set header encode r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang illegal state exception <NEXT> specialinvoke $ r1 < init > \ `` multipart request not initialized\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web multipart support multipart filter r0 <NEXT> r2 multipart resolver bean name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org springframework context configurable application context <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org springframework context configurable application context r1 <NEXT> $ z1 = r2 be active <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r2 refresh <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get header <NEXT> $ r5 = org springframework web server adapter forward header transformer forwarded_header_names <NEXT> r3 = $ r5 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r6 = r3 next <NEXT> r4 = java lang string $ r6 <NEXT> $ z1 = r2 contain key r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org springframework web server response status exception <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = org springframework web server response status exception r1 <NEXT> $ r3 = $ r2 get status <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework web server i18n accept header locale context resolver r0 <NEXT> $ r2 = r4 support locale <NEXT> $ r2 clear <NEXT> r5 = org springframework web server i18n accept header locale context resolver r0 <NEXT> $ r3 = r5 support locale <NEXT> $ r3 add all r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework web server session in memory web session store r0 <NEXT> $ i0 = r1 max session <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` http servlet response must not be null\ `` <NEXT> r12 = org springframework web util cookie generator r0 <NEXT> r2 = r12 create cookie \ `` \ `` <NEXT> r2 set max age 0 <NEXT> r13 = org springframework web util cookie generator r0 <NEXT> $ z0 = r13 be cookie secure <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 set secure 1 <NEXT> label r14 = org springframework web util cookie generator r0 <NEXT> $ z1 = r14 be cookie http only <NEXT> if $ z1 == 0 goto label2 <NEXT> r2 set http only 1 <NEXT> label r1 add cookie r2 <NEXT> r15 = org springframework web util cookie generator r0 <NEXT> $ r3 = r15 logger <NEXT> $ z2 = $ r3 be trace enabled <NEXT> if $ z2 == 0 goto label3 <NEXT> r16 = org springframework web util cookie generator r0 <NEXT> $ r5 = r16 logger <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r6 = r11 append \ `` remove cookie \'\ `` <NEXT> r17 = org springframework web util cookie generator r0 <NEXT> $ r7 = r17 get cookie name <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 append \ `` \'\ `` <NEXT> $ r10 = $ r9 to string <NEXT> $ r5 trace $ r10 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web util pattern path pattern parser r0 <NEXT> r1 case sensitive = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> org springframework util assert not null r0 \ `` http url must not be null\ `` <NEXT> $ r7 = org springframework web util uri component builder http_url_pattern <NEXT> r1 = $ r7 matcher r0 <NEXT> $ z0 = r1 match <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r14 = new org springframework web util uri component builder <NEXT> specialinvoke $ r14 < init > <NEXT> r3 = r1 group 1 <NEXT> if r3 == null goto label1 <NEXT> $ r32 = r3 to lower case <NEXT> goto label2 <NEXT> label $ r14 scheme $ r32 <NEXT> $ r16 = r1 group 4 <NEXT> $ r14 user info $ r16 <NEXT> r4 = r1 group 5 <NEXT> $ z1 = org springframework util string utils have length r3 <NEXT> if $ z1 == 0 goto label3 <NEXT> $ z4 = org springframework util string utils have length r4 <NEXT> if $ z4 ! = 0 goto label3 <NEXT> $ r25 = new java lang illegal argument exception <NEXT> $ r26 = new java lang string builder <NEXT> specialinvoke $ r26 < init > <NEXT> $ r27 = $ r26 append \ `` [ \ `` <NEXT> $ r28 = $ r27 append r0 <NEXT> $ r29 = $ r28 append \ `` ] be not a valid http url\ `` <NEXT> $ r30 = $ r29 to string <NEXT> specialinvoke $ r25 < init > $ r30 <NEXT> throw $ r25 <NEXT> if $ z4 ! = 0 goto label3 <NEXT> label $ r14 host r4 <NEXT> r5 = r1 group 7 <NEXT> $ z2 = org springframework util string utils have length r5 <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r14 port r5 <NEXT> label $ r19 = r1 group 8 <NEXT> $ r14 path $ r19 <NEXT> $ r21 = r1 group 10 <NEXT> $ r14 query $ r21 <NEXT> r6 = r1 group 12 <NEXT> $ z3 = org springframework util string utils have text r6 <NEXT> if $ z3 == 0 goto label5 <NEXT> $ r14 fragment r6 <NEXT> label return $ r14 <NEXT> if r3 == null goto label1 <NEXT> label $ r32 = null <NEXT> if $ z0 == 0 goto label6 <NEXT> label $ r8 = new java lang illegal argument exception <NEXT> $ r9 = new java lang string builder <NEXT> specialinvoke $ r9 < init > <NEXT> $ r10 = $ r9 append \ `` [ \ `` <NEXT> $ r11 = $ r10 append r0 <NEXT> $ r12 = $ r11 append \ `` ] be not a valid http url\ `` <NEXT> $ r13 = $ r12 to string <NEXT> specialinvoke $ r8 < init > $ r13 <NEXT> throw $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` uri component must not be null\ `` <NEXT> r2 = org springframework web util uri component builder r0 <NEXT> r1 copy to uri component builder r2 <NEXT> r3 = org springframework web util uri component builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web util uri template r0 <NEXT> $ r1 = r2 variable name <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org springframework util assert not null r0 \ `` request must not be null\ `` <NEXT> $ r4 = r0 get parameter r1 <NEXT> if $ r4 == null goto label1 <NEXT> return 1 <NEXT> if $ r4 == null goto label1 <NEXT> label r2 = org springframework web util web utils submit_image_suffixes <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r3 = r2 [ i1 ] <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 append r3 <NEXT> $ r8 = $ r7 to string <NEXT> $ r9 = r0 get parameter $ r8 <NEXT> if $ r9 == null goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = r0 read position <NEXT> $ i3 = i0 - i1 <NEXT> i2 = $ i3 + 1 <NEXT> $ r1 = r0 retain slice i1 i2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i2 = r0 write position <NEXT> $ i3 = $ i2 - i0 <NEXT> i1 = $ i3 - 1 <NEXT> $ i4 = i0 + 1 <NEXT> $ r1 = r0 retain slice $ i4 i1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework http codec support base default codecs r0 <NEXT> r1 init type writer <NEXT> r2 = org springframework http codec support base default codecs r0 <NEXT> r2 init object writer <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r6 = null <NEXT> r1 = org springframework util string utils get filename extension r0 <NEXT> if r1 == null goto label1 <NEXT> $ r3 = org springframework http medium type factory file extension to medium type <NEXT> $ r2 = java util locale english <NEXT> $ r4 = r1 to low case $ r2 <NEXT> $ r5 = $ r3 get $ r4 <NEXT> r6 = java util list $ r5 <NEXT> label if r6 == null goto label2 <NEXT> $ r7 = r6 <NEXT> goto label3 <NEXT> label return $ r7 <NEXT> label if r6 == null goto label2 <NEXT> label $ r7 = java util collection empty list <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org springframework http http method get <NEXT> $ r3 = org springframework http request entity method $ r2 r0 r1 <NEXT> r4 = org springframework http request entity $ header builder $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org springframework http http method delete <NEXT> $ r3 = org springframework http request entity method $ r2 r0 r1 <NEXT> r4 = org springframework http request entity $ header builder $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` the provided resource resolver should not be null\ `` <NEXT> r3 = org springframework web reactive config resource chain registration r0 <NEXT> $ r2 = r3 resolvers <NEXT> $ r2 add r1 <NEXT> $ z1 = r1 instanceof org springframework web reactive resource version resource resolver <NEXT> if $ z1 == 0 goto label1 <NEXT> r4 = org springframework web reactive config resource chain registration r0 <NEXT> r4 have version resolver = 1 <NEXT> goto label3 <NEXT> label r7 = org springframework web reactive config resource chain registration r0 <NEXT> return r7 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = r1 instanceof org springframework web reactive resource path resource resolver <NEXT> if $ z2 == 0 goto label2 <NEXT> r5 = org springframework web reactive config resource chain registration r0 <NEXT> r5 have path resolver = 1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = r1 instanceof org springframework web reactive resource web jar resource resolver <NEXT> if $ z3 == 0 goto label3 <NEXT> r6 = org springframework web reactive config resource chain registration r0 <NEXT> r6 have webjars resolver = 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework web reactive config view resolver registry r0 <NEXT> $ r2 = r4 default view <NEXT> $ r3 = java util array a list r1 <NEXT> $ r2 add all $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework web reactive function server support server response result handler r0 <NEXT> r1 order = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web reactive handler abstract url handler mapping r0 <NEXT> r1 lazy init handler = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = new java util link hash set <NEXT> r4 = org springframework web reactive result condition produce request condition r0 <NEXT> $ r2 = r4 expression <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r8 = new java util link hash set <NEXT> specialinvoke r8 < init > <NEXT> r9 = org springframework web reactive result condition produce request condition r0 <NEXT> $ r5 = r9 expression <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r6 = r2 next <NEXT> r3 = org springframework web reactive result condition produce request condition $ produce medium type expression $ r6 <NEXT> $ z1 = r3 be negate <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ r7 = r3 get medium type <NEXT> r8 add $ r7 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r53 = new java util array list <NEXT> specialinvoke r53 < init > <NEXT> r58 = org springframework web reactive result method abstract handler method map r0 <NEXT> $ r9 = r58 map registry <NEXT> r3 = $ r9 get mapping by direct path r1 <NEXT> if r3 == null goto label1 <NEXT> r59 = org springframework web reactive result method abstract handler method map r0 <NEXT> specialinvoke r59 add matching mapping r3 r53 r1 <NEXT> label $ z0 = r53 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> r60 = org springframework web reactive result method abstract handler method map r0 <NEXT> $ r43 = r60 map registry <NEXT> $ r44 = $ r43 get registration <NEXT> $ r45 = $ r44 key set <NEXT> r61 = org springframework web reactive result method abstract handler method map r0 <NEXT> specialinvoke r61 add match mapping $ r45 r53 r1 <NEXT> label $ z1 = r53 be empty <NEXT> if $ z1 ! = 0 goto label9 <NEXT> r54 = new org springframework web reactive result method abstract handler method map $ match comparator <NEXT> r62 = org springframework web reactive result method abstract handler method map r0 <NEXT> $ r15 = r62 get map comparator r1 <NEXT> r63 = org springframework web reactive result method abstract handler method map r0 <NEXT> specialinvoke r54 < init > r63 $ r15 <NEXT> r64 = java util comparator r54 <NEXT> r53 sort r64 <NEXT> $ r16 = r53 get 0 <NEXT> r5 = org springframework web reactive result method abstract handler method map $ match $ r16 <NEXT> $ i0 = r53 size <NEXT> if $ i0 < = 1 goto label8 <NEXT> r65 = org springframework web reactive result method abstract handler method map r0 <NEXT> $ r17 = r65 logger <NEXT> $ z2 = $ r17 be trace enabled <NEXT> if $ z2 == 0 goto label3 <NEXT> r66 = org springframework web reactive result method abstract handler method map r0 <NEXT> $ r36 = r66 logger <NEXT> r55 = new java lang string builder <NEXT> specialinvoke r55 < init > <NEXT> $ r37 = r1 get log prefix <NEXT> $ r38 = r55 append $ r37 <NEXT> $ i2 = r53 size <NEXT> $ r39 = $ r38 append $ i2 <NEXT> $ r40 = $ r39 append \ `` matching mapping \ `` <NEXT> $ r41 = $ r40 append r53 <NEXT> $ r42 = $ r41 to string <NEXT> $ r36 trace $ r42 <NEXT> label $ r18 = r1 get request <NEXT> $ z3 = org springframework web cors reactive cors utils be pre flight request $ r18 <NEXT> if $ z3 == 0 goto label7 <NEXT> r46 = r53 iterator <NEXT> label $ z4 = r46 have next <NEXT> if $ z4 == 0 goto label6 <NEXT> $ r33 = r46 next <NEXT> r47 = org springframework web reactive result method abstract handler method map $ match $ r33 <NEXT> $ z5 = r47 have cors config <NEXT> if $ z5 == 0 goto label5 <NEXT> $ r34 = org springframework web reactive result method abstract handler method map preflight_ambiguous_match <NEXT> return $ r34 <NEXT> if $ z5 == 0 goto label5 <NEXT> label goto label4 <NEXT> if $ z4 == 0 goto label6 <NEXT> label goto label8 <NEXT> label $ r50 = org springframework web reactive result method abstract handler method map $ match access $ 100 r5 <NEXT> $ r51 = r5 get handler method <NEXT> r68 = org springframework web reactive result method abstract handler method map r0 <NEXT> r68 handle match $ r50 $ r51 r1 <NEXT> $ r52 = r5 get handler method <NEXT> return $ r52 <NEXT> if $ z3 == 0 goto label7 <NEXT> label $ r19 = r53 get 1 <NEXT> r48 = org springframework web reactive result method abstract handler method map $ match $ r19 <NEXT> r67 = java util comparator r54 <NEXT> $ i1 = r67 compare r5 r48 <NEXT> if $ i1 ! = 0 goto label8 <NEXT> $ r20 = r5 get handler method <NEXT> r49 = $ r20 get method <NEXT> $ r21 = r48 get handler method <NEXT> r6 = $ r21 get method <NEXT> $ r22 = r1 get request <NEXT> r7 = $ r22 get path <NEXT> r57 = new java lang illegal state exception <NEXT> r56 = new java lang string builder <NEXT> specialinvoke r56 < init > <NEXT> $ r25 = r56 append \ `` ambiguous handler method map for \'\ `` <NEXT> $ r26 = $ r25 append r7 <NEXT> $ r27 = $ r26 append \ `` \ ' { \ `` <NEXT> $ r28 = $ r27 append r49 <NEXT> $ r29 = $ r28 append \ <NEXT> $ r30 = $ r29 append r6 <NEXT> $ r31 = $ r30 append \ `` } \ `` <NEXT> $ r32 = $ r31 to string <NEXT> specialinvoke r57 < init > $ r32 <NEXT> throw r57 <NEXT> if $ z1 ! = 0 goto label9 <NEXT> label r69 = org springframework web reactive result method abstract handler method map r0 <NEXT> $ r10 = r69 map registry <NEXT> $ r11 = $ r10 get registration <NEXT> $ r12 = $ r11 key set <NEXT> r70 = org springframework web reactive result method abstract handler method map r0 <NEXT> $ r13 = r70 handle no match $ r12 r1 <NEXT> return $ r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web reactive result method annotation request map handler adapter r0 <NEXT> r2 reactive adapter registry = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web reactive result view bind status r0 <NEXT> $ r1 = specialinvoke r2 init error message <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework web reactive result view bind status r0 <NEXT> $ r2 = specialinvoke r4 init error message <NEXT> $ r3 = org springframework util string utils array to delimit string $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web reactive result view bind status r0 <NEXT> $ r1 = r2 error <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web reactive result view freemarker free marker configurer r0 <NEXT> r2 configuration = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new freemarker cache class template loader <NEXT> specialinvoke $ r2 < init > class \ `` lorg springframework web reactive result view freemarker free marker configurer \ <NEXT> r1 add $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework web reactive result view redirect view r0 <NEXT> $ z0 = r1 propagate query <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> r11 = org springframework web reactive result view request context r0 <NEXT> $ r4 = r11 get context path <NEXT> $ r5 = r10 append $ r4 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r7 = $ r6 to string <NEXT> r2 = org springframework util string utils apply relative path $ r7 r1 <NEXT> r12 = org springframework web reactive result view request context r0 <NEXT> $ r8 = r12 get exchange <NEXT> $ r9 = $ r8 transform url r2 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework web reactive result view request context r0 <NEXT> $ z0 = r3 be default html escape <NEXT> r4 = org springframework web reactive result view request context r0 <NEXT> $ r2 = r4 get error r1 $ z0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r3 = new org springframework web reactive result view bind status <NEXT> r4 = org springframework web reactive result view request context r0 <NEXT> specialinvoke r3 < init > r4 r1 z0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework web reactive result view view resolver support r0 <NEXT> r1 order = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web reactive socket adapter reactor netty web socket session r0 <NEXT> $ r1 = r2 channel id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework web servlet config annotation cors registration r0 <NEXT> $ r2 = r4 config <NEXT> $ r3 = java util array a list r1 <NEXT> $ r2 set allow origin $ r3 <NEXT> r5 = org springframework web servlet config annotation cors registration r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework web servlet config annotation default servlet handler configurer r0 <NEXT> r1 enable null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet config annotation interceptor registration r0 <NEXT> r2 path matcher = r1 <NEXT> r3 = org springframework web servlet config annotation interceptor registration r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework web servlet config annotation interceptor registration r0 <NEXT> r1 order = i0 <NEXT> r2 = org springframework web servlet config annotation interceptor registration r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet config annotation resource handler registration r0 <NEXT> r2 cache period = r1 <NEXT> r3 = org springframework web servlet config annotation resource handler registration r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = new org springframework web servlet config annotation redirect view controller registration <NEXT> specialinvoke r7 < init > r1 r2 <NEXT> r8 = org springframework web servlet config annotation view controller registry r0 <NEXT> $ r5 = r8 application context <NEXT> r7 set application context $ r5 <NEXT> r9 = org springframework web servlet config annotation view controller registry r0 <NEXT> $ r6 = r9 redirect registration <NEXT> $ r6 add r7 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new org springframework web servlet mvc method annotation request map handler mapping <NEXT> specialinvoke $ r1 < init > <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r2 init multipart resolver r1 <NEXT> r3 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r3 init locale resolver r1 <NEXT> r4 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r4 init theme resolver r1 <NEXT> r5 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r5 init handler mapping r1 <NEXT> r6 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r6 init handler adapter r1 <NEXT> r7 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r7 init handler exception resolvers r1 <NEXT> r8 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r8 init request to view name translator r1 <NEXT> r9 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r9 init view resolvers r1 <NEXT> r10 = org springframework web servlet dispatcher servlet r0 <NEXT> specialinvoke r10 init flash map manager r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r14 = org springframework web servlet dispatcher servlet r0 <NEXT> r3 = r14 get default strategy r1 r2 <NEXT> $ i0 = r3 size <NEXT> if $ i0 == 1 goto label1 <NEXT> r13 = new org springframework bean factory bean initialization exception <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r7 = r12 append \ `` dispatcher servlet need exactly 1 strategy for interface [ \ `` <NEXT> $ r8 = r2 get name <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ `` ] \ `` <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r13 < init > $ r11 <NEXT> r15 = java lang throwable r13 <NEXT> throw r15 <NEXT> if $ i0 == 1 goto label1 <NEXT> label $ r4 = r3 get 0 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org springframework web servlet dispatcher servlet page not find logger <NEXT> $ z0 = $ r3 be warn enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = org springframework web servlet dispatcher servlet page not find logger <NEXT> r18 = new java lang string builder <NEXT> specialinvoke r18 < init > <NEXT> $ r11 = r18 append \ `` no mapping for \ `` <NEXT> $ r12 = r1 get method <NEXT> $ r13 = $ r11 append $ r12 <NEXT> $ r14 = $ r13 append \ `` \ `` <NEXT> $ r15 = org springframework web servlet dispatcher servlet get request uri r1 <NEXT> $ r16 = $ r14 append $ r15 <NEXT> $ r17 = $ r16 to string <NEXT> $ r10 warn $ r17 <NEXT> label r21 = org springframework web servlet dispatcher servlet r0 <NEXT> $ z1 = r21 throw exception if no handler find <NEXT> if $ z1 == 0 goto label2 <NEXT> r20 = new org springframework web servlet no handler find exception <NEXT> $ r5 = r1 get method <NEXT> $ r6 = org springframework web servlet dispatcher servlet get request uri r1 <NEXT> r19 = new org springframework http server servlet server http request <NEXT> specialinvoke r19 < init > r1 <NEXT> $ r8 = r19 get header <NEXT> specialinvoke r20 < init > $ r5 $ r6 $ r8 <NEXT> r22 = java lang throwable r20 <NEXT> throw r22 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r2 send error 404 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = org springframework util string utils have text r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = org springframework util string utils have text r2 <NEXT> if $ z1 == 0 goto label1 <NEXT> r4 = org springframework web servlet flash map r0 <NEXT> $ r3 = r4 target request params <NEXT> $ r3 add r1 r2 <NEXT> label r5 = org springframework web servlet flash map r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet framework servlet r0 <NEXT> r2 context config location = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web servlet framework servlet r0 <NEXT> r1 publish event = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r20 = org springframework web servlet framework servlet r0 <NEXT> r2 = r20 get context class <NEXT> $ r5 = class \ `` lorg springframework web context configurable web application context \ `` <NEXT> $ z0 = $ r5 be assignable from r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r19 = new org springframework context application context exception <NEXT> r18 = new java lang string builder <NEXT> specialinvoke r18 < init > <NEXT> $ r10 = r18 append \ `` fatal initialization error in servlet with name \'\ `` <NEXT> r21 = org springframework web servlet framework servlet r0 <NEXT> $ r11 = r21 get servlet name <NEXT> $ r12 = $ r10 append $ r11 <NEXT> $ r13 = $ r12 append \ `` \ ' custom web application context class [ \ `` <NEXT> $ r14 = r2 get name <NEXT> $ r15 = $ r13 append $ r14 <NEXT> $ r16 = $ r15 append \ `` ] be not of type configurable web application context\ `` <NEXT> $ r17 = $ r16 to string <NEXT> specialinvoke r19 < init > $ r17 <NEXT> r22 = java lang throwable r19 <NEXT> throw r22 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r6 = org springframework bean bean utils instantiate class r2 <NEXT> r3 = org springframework web context configurable web application context $ r6 <NEXT> r23 = org springframework web servlet framework servlet r0 <NEXT> $ r7 = r23 get environment <NEXT> r3 set environment $ r7 <NEXT> r3 set parent r1 <NEXT> r24 = org springframework web servlet framework servlet r0 <NEXT> r4 = r24 get context config location <NEXT> if r4 == null goto label2 <NEXT> r3 set config location r4 <NEXT> label r25 = org springframework web servlet framework servlet r0 <NEXT> r25 configure and refresh web application context r3 <NEXT> r26 = org springframework web context web application context r3 <NEXT> return r26 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` resolve [ \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 append \ `` ] \ `` <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r1 add header \ `` cache- control\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web servlet handler abstract handler mapping r0 <NEXT> $ r1 = r2 default handler <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework web servlet handler abstract handler method map r0 <NEXT> $ r2 = r4 map registry <NEXT> $ r3 = $ r2 get handler method by map name r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet handler simple mapping exception resolver r0 <NEXT> r2 exception attribute = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = r2 get class <NEXT> r4 = org springframework web servlet handler simple mapping exception resolver r0 <NEXT> $ i0 = specialinvoke r4 get depth r1 $ r3 0 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org springframework web servlet handler simple mapping exception resolver r0 <NEXT> $ r3 = r8 status code <NEXT> $ z0 = $ r3 contain key r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = org springframework web servlet handler simple mapping exception resolver r0 <NEXT> $ r5 = r9 status code <NEXT> $ r6 = $ r5 get r2 <NEXT> $ r7 = java lang integer $ r6 <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r10 = org springframework web servlet handler simple mapping exception resolver r0 <NEXT> $ r4 = r10 default status code <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = org springframework web servlet handler simple mapping exception resolver r0 <NEXT> $ r4 = r5 get model and view r1 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework web servlet i18n cookie locale resolver r0 <NEXT> $ z0 = r1 reject invalid cooky <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework web servlet i18n session locale resolver r0 <NEXT> r2 = r3 get default locale <NEXT> if r2 ! = null goto label1 <NEXT> r2 = r1 get locale <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework web servlet i18n session locale resolver r0 <NEXT> $ r2 = r3 get default time zone <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet model and view r0 <NEXT> r2 status = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework web servlet model and view r0 <NEXT> $ r1 = r3 view <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = org springframework web servlet model and view r0 <NEXT> $ r2 = r4 model <NEXT> r5 = java util map $ r2 <NEXT> $ z0 = org springframework util collection utils be empty r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org springframework web servlet mvc method annotation servlet model attribute method processor r0 <NEXT> r3 = r7 get uri template variable r2 <NEXT> $ r6 = r3 get r1 <NEXT> r4 = java lang string $ r6 <NEXT> $ z0 = org springframework util string utils have text r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> return r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r5 = r2 get parameter r1 <NEXT> $ z1 = org springframework util string utils have text r5 <NEXT> if $ z1 == 0 goto label2 <NEXT> return r5 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet mvc parameterizable view controller r0 <NEXT> r2 view = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet mvc parameterizable view controller r0 <NEXT> r2 view = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework web servlet mvc servlet wrap controller r0 <NEXT> $ r1 = r3 servlet instance <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org springframework web servlet mvc servlet wrap controller r0 <NEXT> $ r2 = r4 servlet instance <NEXT> $ r2 destroy <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web servlet support request context r0 <NEXT> $ r1 = r2 request <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ z0 = org springframework web servlet support jsp aware request context jstl present <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org springframework web servlet support jsp aware request context r0 <NEXT> $ r4 = r5 get page context <NEXT> r1 = org springframework web servlet support jsp aware request context $ jstl page locale resolver get jstl locale $ r4 <NEXT> if r1 == null goto label1 <NEXT> return r1 <NEXT> if r1 == null goto label1 <NEXT> label r6 = org springframework web servlet support jsp aware request context r0 <NEXT> $ r2 = r6 get request <NEXT> $ r3 = $ r2 get locale <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org springframework web servlet dispatcher servlet theme_source_attribute <NEXT> $ r2 = r0 get attribute $ r1 <NEXT> $ r3 = org springframework ui context theme source $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org springframework web servlet support request context utils get theme resolver r0 <NEXT> r2 = org springframework web servlet support request context utils get theme source r0 <NEXT> if r1 == null goto label1 <NEXT> if r2 == null goto label1 <NEXT> r3 = r1 resolve theme name r0 <NEXT> $ r4 = r2 get theme r3 <NEXT> return $ r4 <NEXT> if r2 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org springframework web servlet support servlet uri component builder init from request r0 <NEXT> $ r2 = r0 get context path <NEXT> r1 replace path $ r2 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org springframework web servlet support web content generator r0 <NEXT> r1 cache second = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet tag bind error tag r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web servlet tag bind tag r0 <NEXT> r1 ignore nested path = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org springframework web servlet tag escape body tag r0 <NEXT> $ r1 = r4 body content <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label org springframework util assert state $ z0 \ `` no body content set\ `` <NEXT> r5 = org springframework web servlet tag escape body tag r0 <NEXT> $ r2 = r5 body content <NEXT> $ r3 = $ r2 get string <NEXT> return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label $ r3 = r1 get enclose writer <NEXT> r7 = java io writer $ r3 <NEXT> r1 write out r7 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert have text r1 \ `` \'element\ ' can not be null or blank\ `` <NEXT> r2 = org springframework web servlet tag form abstract multi check element tag r0 <NEXT> r2 element = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web servlet tag form error tag r0 <NEXT> $ r1 = r2 delimiter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org springframework web servlet tag form form tag r0 <NEXT> $ r1 = r4 get css class <NEXT> r5 = org springframework web servlet tag form form tag r0 <NEXT> $ r2 = r5 evaluate \ `` css class\ <NEXT> $ r3 = org springframework util object utils get display string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet tags message tag r0 <NEXT> r2 argument separator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = @ parameter0 <NEXT> if r4 ! = null goto label1 <NEXT> r4 = \ `` \ `` <NEXT> label $ i0 = r4 length <NEXT> if $ i0 < = 0 goto label2 <NEXT> $ z0 = r4 end with \ `` \ `` <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r5 = new java lang string builder <NEXT> specialinvoke r5 < init > <NEXT> $ r2 = r5 append r4 <NEXT> $ r3 = $ r2 append \ `` \ `` <NEXT> r4 = $ r3 to string <NEXT> label r6 = org springframework web servlet tag nest path tag r0 <NEXT> r6 path = r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet tag param r0 <NEXT> r2 value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` cache filter must not be null\ `` <NEXT> r2 = org springframework web servlet view abstract cache view resolver r0 <NEXT> r2 cache filter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append r1 <NEXT> $ r5 = $ r4 append 95 <NEXT> $ r6 = $ r5 append r2 <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web servlet view abstract template view r0 <NEXT> r1 expose spring macro helper = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet view abstract view r0 <NEXT> r2 request context attribute = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework web servlet view abstract view r0 <NEXT> $ r2 = r3 static attribute <NEXT> org springframework util collection utils merge property into map r1 $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web servlet view default request to view name translator r0 <NEXT> r1 strip trail slash = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework web servlet view freemarker free marker view r0 <NEXT> $ r1 = r2 encode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org springframework web servlet view freemarker free marker view r0 <NEXT> $ r3 = r8 get encode <NEXT> if $ r3 == null goto label1 <NEXT> r9 = org springframework web servlet view freemarker free marker view r0 <NEXT> $ r5 = r9 obtain configuration <NEXT> r10 = org springframework web servlet view freemarker free marker view r0 <NEXT> $ r6 = r10 get encode <NEXT> $ r7 = $ r5 get template r1 r2 $ r6 <NEXT> goto label2 <NEXT> label return $ r7 <NEXT> if $ r3 == null goto label1 <NEXT> label r11 = org springframework web servlet view freemarker free marker view r0 <NEXT> $ r4 = r11 obtain configuration <NEXT> $ r7 = $ r4 get template r1 r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set locale r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web servlet view internal resource view r0 <NEXT> r1 always include = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework web servlet view internal resource view r0 <NEXT> r1 prevent dispatch loop = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org springframework web servlet view jstl view r0 <NEXT> $ r2 = r7 message source <NEXT> if $ r2 == null goto label1 <NEXT> r8 = org springframework web servlet view jstl view r0 <NEXT> $ r5 = r8 message source <NEXT> org springframework web servlet support jstl utils expose localization context r1 $ r5 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r2 == null goto label1 <NEXT> label r6 = new org springframework web servlet support request context <NEXT> r9 = org springframework web servlet view jstl view r0 <NEXT> $ r4 = r9 get servlet context <NEXT> specialinvoke r6 < init > r1 $ r4 <NEXT> org springframework web servlet support jstl utils expose localization context r6 <END>
<BEG> r0 = @ this <NEXT> r8 = org springframework web servlet view resource bundle view resolver r0 <NEXT> $ r3 = r8 bundle cache <NEXT> $ r4 = $ r3 value <NEXT> r1 = $ r4 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r1 next <NEXT> r2 = org springframework context configurable application context $ r7 <NEXT> r2 close <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r9 = org springframework web servlet view resource bundle view resolver r0 <NEXT> $ r5 = r9 locale cache <NEXT> $ r5 clear <NEXT> r10 = org springframework web servlet view resource bundle view resolver r0 <NEXT> $ r6 = r10 bundle cache <NEXT> $ r6 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet view url base view resolver r0 <NEXT> r2 expose path variable = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org springframework web servlet view view resolver composite r0 <NEXT> $ r2 = r4 view resolvers <NEXT> $ r2 clear <NEXT> $ z0 = org springframework util collection utils be empty r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = org springframework web servlet view view resolver composite r0 <NEXT> $ r3 = r5 view resolvers <NEXT> $ r3 add all r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework web servlet view view resolver composite r0 <NEXT> $ r1 = r3 view resolvers <NEXT> $ r2 = java util collection unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework web servlet view xml view resolver r0 <NEXT> r2 location = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework web servlet view xml view resolver r0 <NEXT> $ r1 = r3 cache factory <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org springframework web servlet view xml view resolver r0 <NEXT> $ r2 = r4 cache factory <NEXT> $ r2 close <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org sqlite function r0 <NEXT> specialinvoke r2 check context <NEXT> r3 = org sqlite function r0 <NEXT> $ r1 = r3 db <NEXT> r4 = org sqlite function r0 <NEXT> $ l0 = r4 context <NEXT> $ r1 result_null $ l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org sqlite function r0 <NEXT> specialinvoke r3 check context <NEXT> r4 = org sqlite function r0 <NEXT> $ r2 = r4 db <NEXT> r5 = org sqlite function r0 <NEXT> $ l0 = r5 context <NEXT> $ r2 result_error $ l0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org sqlite s q lite config r0 <NEXT> $ r4 = r6 pragma table <NEXT> $ r3 = r1 pragma name <NEXT> $ r4 put $ r3 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = javax xml stream event character r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus stax2 ri evt stax2 event reader adapter r0 <NEXT> $ r1 = r2 m reader <NEXT> $ r1 remove <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r4 = new org codehaus stax2 ri type value decoder factory $ int array decoder <NEXT> r5 = org codehaus stax2 ri type value decoder factory r0 <NEXT> $ r3 = r5 get int decoder <NEXT> specialinvoke r4 < init > r1 i0 i1 $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus stax2 type typed x m l stream exception r0 <NEXT> $ r1 = r2 m lexical <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org ccil cowan tagsoup element r0 <NEXT> $ r1 = r2 the next <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org ccil cowan tagsoup element r0 <NEXT> $ r1 = r3 the type <NEXT> $ r2 = $ r1 namespace <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org ccil cowan tagsoup element r0 <NEXT> $ r1 = r2 the type <NEXT> $ i0 = $ r1 member of <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org ccil cowan tagsoup element type r0 <NEXT> $ r1 = r2 the namespace <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org ccil cowan tagsoup element type r0 <NEXT> r1 the member of = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org ccil cowan tagsoup element type r0 <NEXT> r2 the parent = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r6 = org ccil cowan tagsoup schema r0 <NEXT> $ r3 = r6 the entity <NEXT> r5 = new java lang integer <NEXT> specialinvoke r5 < init > i0 <NEXT> $ r3 put r1 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org objectweb fractal task deployment lib abstract binding setter task r0 <NEXT> $ r2 = r6 bind provider task <NEXT> if $ r2 == null goto label1 <NEXT> r7 = org objectweb fractal task deployment lib abstract binding setter task r0 <NEXT> $ r5 = r7 bind provider task <NEXT> r8 = org objectweb fractal task deployment lib abstract binding setter task r0 <NEXT> r8 remove previous task $ r5 <NEXT> label r9 = org objectweb fractal task deployment lib abstract binding setter task r0 <NEXT> r9 bind provider task = r1 <NEXT> r10 = org objectweb fractal task deployment lib abstract binding setter task r0 <NEXT> $ r3 = r10 bind provider task <NEXT> if $ r3 == null goto label2 <NEXT> r11 = org objectweb fractal task deployment lib abstract binding setter task r0 <NEXT> $ r4 = r11 bind provider task <NEXT> r12 = org objectweb fractal task deployment lib abstract binding setter task r0 <NEXT> r12 add previous task $ r4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org testcontainers container docker compose container r0 <NEXT> r2 build = z0 <NEXT> r3 = org testcontainers container docker compose container r0 <NEXT> $ r1 = specialinvoke r3 self <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org testcontainers container wait http wait strategy r0 <NEXT> $ r2 = r4 delegate strategy <NEXT> $ r2 for response predicate r1 <NEXT> r5 = org testcontainers container wait http wait strategy r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org testcontainers container wait strategy abstract wait strategy r0 <NEXT> r2 rate limiter = r1 <NEXT> return r0 <END>
<BEG> $ r0 = org testcontainers container wait strategy wait for listen port <NEXT> r1 = org testcontainers container wait strategy wait strategy $ r0 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org testcontainers container wait strategy wait for http r0 <NEXT> $ r2 = $ r1 use tls <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r39 = org testcontainers utility docker image name r0 <NEXT> $ r1 = r39 registry <NEXT> org testcontainers shade com google common net host and port from string $ r1 <NEXT> $ r4 = org testcontainers utility docker image name repo_name <NEXT> r40 = org testcontainers utility docker image name r0 <NEXT> $ r3 = r40 repo <NEXT> $ r5 = $ r4 matcher $ r3 <NEXT> $ z0 = $ r5 match <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r34 = new java lang illegal argument exception <NEXT> r33 = new java lang string builder <NEXT> specialinvoke r33 < init > <NEXT> r41 = org testcontainers utility docker image name r0 <NEXT> $ r26 = r41 repo <NEXT> $ r27 = r33 append $ r26 <NEXT> $ r28 = $ r27 append \ `` be not a valid docker image name in \ `` <NEXT> r42 = org testcontainers utility docker image name r0 <NEXT> $ r29 = r42 raw name <NEXT> $ r30 = $ r28 append $ r29 <NEXT> $ r31 = $ r30 append \ `` \ `` <NEXT> $ r32 = $ r31 to string <NEXT> specialinvoke r34 < init > $ r32 <NEXT> throw r34 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r43 = org testcontainers utility docker image name r0 <NEXT> $ r6 = r43 versioning <NEXT> if $ r6 ! = null goto label2 <NEXT> r36 = new java lang illegal argument exception <NEXT> r35 = new java lang string builder <NEXT> specialinvoke r35 < init > <NEXT> $ r19 = r35 append \ `` no image tag be specify in docker image name \ `` <NEXT> r44 = org testcontainers utility docker image name r0 <NEXT> $ r20 = r44 raw name <NEXT> $ r21 = $ r19 append $ r20 <NEXT> $ r22 = $ r21 append \ `` please provide a tag this may be \'latest\ ' or a specific version\ `` <NEXT> $ r23 = $ r22 to string <NEXT> specialinvoke r36 < init > $ r23 <NEXT> throw r36 <NEXT> if $ r6 ! = null goto label2 <NEXT> label r45 = org testcontainers utility docker image name r0 <NEXT> $ r7 = r45 versioning <NEXT> $ z1 = $ r7 be valid <NEXT> if $ z1 ! = 0 goto label3 <NEXT> r38 = new java lang illegal argument exception <NEXT> r37 = new java lang string builder <NEXT> specialinvoke r37 < init > <NEXT> r46 = org testcontainers utility docker image name r0 <NEXT> $ r10 = r46 versioning <NEXT> $ r11 = r37 append $ r10 <NEXT> $ r12 = $ r11 append \ `` be not a valid image versioning identifier in \ `` <NEXT> r47 = org testcontainers utility docker image name r0 <NEXT> $ r13 = r47 raw name <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 append \ `` \ `` <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke r38 < init > $ r16 <NEXT> throw r38 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label return <END>
<BEG> $ r0 = org testcontainers utility docker machine client instance <NEXT> if $ r0 ! = null goto label1 <NEXT> $ r2 = new org testcontainers utility docker machine client <NEXT> specialinvoke $ r2 < init > <NEXT> org testcontainers utility docker machine client instance = $ r2 <NEXT> label $ r1 = org testcontainers utility docker machine client instance <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tika config tika config r0 <NEXT> $ r1 = r2 encode detector <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tika fork fork parser r0 <NEXT> r1 max file process per client = i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ l0 = org apache tika io endian utils get u int l e r0 0 <NEXT> return $ l0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = lengthof r0 <NEXT> $ r2 = java lang integer to string $ i0 <NEXT> r1 set \ `` content- length\ <NEXT> $ r3 = new org apache tika io tika input stream <NEXT> $ r4 = new java io byte array input stream <NEXT> specialinvoke $ r4 < init > r0 <NEXT> $ r5 = new org apache tika io temporary resource <NEXT> specialinvoke $ r5 < init > <NEXT> $ i1 = lengthof r0 <NEXT> $ l2 = long $ i1 <NEXT> specialinvoke $ r3 < init > $ r4 $ r5 $ l2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org apache tika metadata metadata <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = org apache tika io tika input stream get r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika io tika input stream r0 <NEXT> $ l0 = r1 position <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tika language detect language handler r0 <NEXT> $ r1 = r3 writer <NEXT> $ r2 = $ r1 get language <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 split \ `` \\-\ `` <NEXT> r7 = org apache tika language detect language result r0 <NEXT> $ r4 = r7 language <NEXT> r3 = $ r4 split \ `` \\-\ `` <NEXT> $ i2 = lengthof r2 <NEXT> $ i1 = lengthof r3 <NEXT> i0 = java lang math min $ i2 $ i1 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label3 <NEXT> $ r6 = r2 [ i3 ] <NEXT> $ r5 = r3 [ i3 ] <NEXT> $ z0 = $ r6 equal ignore case $ r5 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label3 <NEXT> label return 1 <END>
<BEG> org apache tika language language identifier clear profile <NEXT> org apache tika language language identifier error = \ `` \ `` <NEXT> $ r3 = class \ `` lorg apache tika language language identifier \ `` <NEXT> r34 = $ r3 get resource a stream \ `` tika language override properties\ `` <NEXT> if r34 ! = null goto label01 <NEXT> $ r11 = class \ `` lorg apache tika language language identifier \ `` <NEXT> r34 = $ r11 get resource a stream \ `` tika language properties\ `` <NEXT> label if r34 == null goto label05 <NEXT> label $ r9 = new java util property <NEXT> specialinvoke $ r9 < init > <NEXT> org apache tika language language identifier prop = $ r9 <NEXT> $ r10 = org apache tika language language identifier prop <NEXT> $ r10 load r34 <NEXT> label goto label05 <NEXT> label $ r36 = org apache tika language language identifier prop <NEXT> $ r37 = $ r36 get property \ `` languages\ `` <NEXT> r38 = $ r37 split \ <NEXT> i0 = lengthof r38 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label11 <NEXT> r39 = r38 [ i1 ] <NEXT> r40 = r39 trim <NEXT> $ r5 = org apache tika language language identifier prop <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r6 = $ r4 append \ `` name \ `` <NEXT> $ r7 = $ r6 append r40 <NEXT> $ r8 = $ r7 to string <NEXT> r1 = $ r5 get property $ r8 \ `` unknown\ `` <NEXT> label org apache tika language language identifier add profile r40 <NEXT> label goto label10 <NEXT> label i1 = i1 + 1 <NEXT> goto label06 <NEXT> label if i1 > = i0 goto label11 <NEXT> label return <END>
<BEG> $ r0 = org apache tika language language identifier profile <NEXT> $ r0 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = r1 get primary property <NEXT> $ r4 = $ r3 get property type <NEXT> $ r5 = org apache tika metadata property $ property type simple <NEXT> if $ r4 == $ r5 goto label1 <NEXT> return null <NEXT> if $ r4 == $ r5 goto label1 <NEXT> label $ r6 = r1 get primary property <NEXT> $ r7 = $ r6 get value type <NEXT> $ r8 = org apache tika metadata property $ value type date <NEXT> if $ r7 == $ r8 goto label2 <NEXT> label r10 = org apache tika metadata metadata r0 <NEXT> r2 = r10 get r1 <NEXT> if r2 == null goto label3 <NEXT> $ r9 = org apache tika metadata metadata parse date r2 <NEXT> return $ r9 <NEXT> if r2 == null goto label3 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> $ r1 = org apache tika mime hex co dec decode r0 0 $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tika mime medium type r0 <NEXT> $ r1 = r2 parameter <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r4 = new java util tree set <NEXT> r5 = org apache tika mime medium type registry r0 <NEXT> $ r2 = r5 registry <NEXT> $ r3 = $ r2 value <NEXT> specialinvoke r4 < init > $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = new java util tree set <NEXT> specialinvoke r14 < init > <NEXT> r15 = org apache tika mime medium type registry r0 <NEXT> $ r6 = r15 registry <NEXT> $ r7 = $ r6 entry set <NEXT> r3 = $ r7 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r8 = r3 next <NEXT> r4 = java util map $ entry $ r8 <NEXT> $ r9 = r4 get value <NEXT> $ r10 = org apache tika mime medium type $ r9 <NEXT> $ z1 = $ r10 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r11 = r4 get key <NEXT> $ r12 = org apache tika mime medium type $ r11 <NEXT> $ z2 = $ r12 equal r1 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> $ r13 = r4 get key <NEXT> r14 add $ r13 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org apache tika mime mime type r0 <NEXT> r3 add pattern r1 r2 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tika parser external external parser r0 <NEXT> $ r1 = r2 ignore line consumer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tika parser external external parser r0 <NEXT> r2 ignore line consumer = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache tika parser parse context r0 <NEXT> $ r2 = r4 get class \ `` ljavax xml stream x m l input factory \ `` <NEXT> r1 = javax xml stream x m l input factory $ r2 <NEXT> if r1 == null goto label1 <NEXT> return r1 <NEXT> if r1 == null goto label1 <NEXT> label $ r3 = org apache tika utils x m l reader utils get x m l input factory <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache tika parser recursive parser wrapper r0 <NEXT> $ r1 = r9 last parse state <NEXT> if $ r1 == null goto label1 <NEXT> r7 = new org apache tika parser recursive parser wrapper $ parser state <NEXT> r6 = new org apache tika sax recursive parser wrapper handler <NEXT> r10 = org apache tika parser recursive parser wrapper r0 <NEXT> $ r5 = r10 content handler factory <NEXT> r11 = org apache tika parser recursive parser wrapper r0 <NEXT> $ i0 = r11 max embed resource <NEXT> specialinvoke r6 < init > $ r5 $ i0 <NEXT> r12 = org apache tika parser recursive parser wrapper r0 <NEXT> r13 = org apache tika sax abstract recursive parser wrapper handler r6 <NEXT> specialinvoke r7 < init > r12 r13 null <NEXT> r14 = org apache tika parser recursive parser wrapper r0 <NEXT> r14 last parse state = r7 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r1 == null goto label1 <NEXT> label r8 = new java lang illegal state exception <NEXT> specialinvoke r8 < init > \ `` this be deprecated please use a recursive parser wrapper handler instead\ `` <NEXT> throw r8 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache tika sax secure content handler r0 <NEXT> r1 threshold = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika sax secure content handler r0 <NEXT> $ i0 = r1 max package entry depth <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika sax standard extract content handler r0 <NEXT> $ d0 = r1 threshold <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> $ r1 = newarray char [ 1 ] <NEXT> $ r1 [ 0 ] = c0 <NEXT> specialinvoke r0 character $ r1 0 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika sax x m p content handler r0 <NEXT> r1 end element \ `` http www w3 org 1999 02 22-rdf-syntax-ns #\ <NEXT> r2 = org apache tika sax x m p content handler r0 <NEXT> r2 end prefix mapping \ `` xmp\ `` <NEXT> r3 = org apache tika sax x m p content handler r0 <NEXT> r3 end prefix mapping \ `` rdf\ `` <NEXT> specialinvoke r0 end document <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r11 = org apache tika io tika input stream get r1 <NEXT> r12 = null <NEXT> label r17 = org apache tika tika r0 <NEXT> r18 = java io input stream r11 <NEXT> r13 = r17 detect r18 <NEXT> label if r11 == null goto label05 <NEXT> goto label04 <NEXT> label r20 = java io input stream r11 <NEXT> r20 close <NEXT> label return r13 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tika tika r0 <NEXT> $ r1 = r2 detector <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika parser chm accessor chm itsf header r0 <NEXT> $ i0 = r1 unknown_000c <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache tika parser chm accessor chm itsf header r0 <NEXT> r1 unknown_len = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika parser chm accessor chm itsf header r0 <NEXT> $ l0 = r1 dir_len <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache tika parser chm accessor chm itsf header r0 <NEXT> r1 data_offset = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika parser chm accessor chm itsp header r0 <NEXT> $ l0 = r1 lang_id <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika parser chm accessor chm lzxc control data r0 <NEXT> $ l0 = r1 window size <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika parser chm accessor chm lzxc control data r0 <NEXT> $ l0 = r1 unknown_18 <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tika parser chm accessor chm pmgi header r0 <NEXT> r2 signature = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache tika parser chm accessor chm pmgi header r0 <NEXT> r1 free_space = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tika parser ctakes c t a k e s config r0 <NEXT> $ r1 = r2 ae descriptor path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tika parser ctakes c t a k e s config r0 <NEXT> r2 u m l s pas = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tika parser ctakes c t a k e s config r0 <NEXT> r1 text = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache tika parser html default html mapper instance <NEXT> $ r3 = $ r2 map safe element r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = null <NEXT> label r3 = org apache tika parser mp3 mpeg stream r0 <NEXT> $ z2 = r3 end of stream <NEXT> if $ z2 ! = 0 goto label3 <NEXT> if r2 ! = null goto label3 <NEXT> r4 = org apache tika parser mp3 mpeg stream r0 <NEXT> specialinvoke r4 find frame sync byte <NEXT> r5 = org apache tika parser mp3 mpeg stream r0 <NEXT> $ z0 = r5 end of stream <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = org apache tika parser mp3 mpeg stream r0 <NEXT> r1 = specialinvoke r6 create header field <NEXT> r7 = org apache tika parser mp3 mpeg stream r0 <NEXT> $ z1 = r7 end of stream <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r8 = org apache tika parser mp3 mpeg stream r0 <NEXT> r2 = specialinvoke r8 create header r1 <NEXT> if r2 ! = null goto label2 <NEXT> r9 = org apache tika parser mp3 mpeg stream r0 <NEXT> specialinvoke r9 push back r1 <NEXT> label goto label1 <NEXT> if r2 ! = null goto label3 <NEXT> label r10 = org apache tika parser mp3 mpeg stream r0 <NEXT> r10 current header = r2 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache tika parser ner corenlp core n l p n e recogniser entity_types <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 match \ `` [ a-z a- z ] { 3 } _ [ a-z a- z ] { 3,4 } ? \\+ ? +\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = r1 end with \ `` +\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> label r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` invalid language code\ `` <NEXT> throw r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r4 = org apache tika parser ocr tesseract o c r config r0 <NEXT> r4 language = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = org apache tika parser ocr tesseract o c r config allowable_page_separators_pattern <NEXT> r2 = $ r3 matcher r1 <NEXT> $ z0 = r2 find <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r10 = new java lang illegal argument exception <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r6 = r9 append r1 <NEXT> $ r7 = $ r6 append \ `` contains illegal character \n if you trust this value set it with set trusted page separator\ `` <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke r10 < init > $ r8 <NEXT> throw r10 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r11 = org apache tika parser ocr tesseract o c r config r0 <NEXT> r11 set trust page separator r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = org apache tika parser pdf access checker r0 <NEXT> $ z0 = r12 need to check <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r3 = \ `` false\ `` <NEXT> $ r2 = org apache tika metadata access permission extract_content <NEXT> $ r4 = r1 get $ r2 <NEXT> $ z1 = $ r3 equal $ r4 <NEXT> if $ z1 == 0 goto label4 <NEXT> r13 = org apache tika parser pdf access checker r0 <NEXT> $ z2 = r13 allow accessibility <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r7 = \ `` true\ `` <NEXT> $ r6 = org apache tika metadata access permission extract_for_accessibility <NEXT> $ r8 = r1 get $ r6 <NEXT> $ z3 = $ r7 equal $ r8 <NEXT> if $ z3 == 0 goto label2 <NEXT> label r10 = new org apache tika exception access permission exception <NEXT> specialinvoke r10 < init > \ `` content extraction for accessibility be not allow \ `` <NEXT> r14 = java lang throwable r10 <NEXT> throw r14 <NEXT> if $ z2 == 0 goto label3 <NEXT> label r11 = new org apache tika exception access permission exception <NEXT> specialinvoke r11 < init > \ `` content extraction be not allow \ `` <NEXT> r15 = java lang throwable r11 <NEXT> throw r15 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tika parser pdf p d f parser config r0 <NEXT> r1 if x f a extract only x f a = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika parser pdf p d f parser config r0 <NEXT> $ l0 = r1 max main memory byte <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache tika parser pot pool time series parser supported_types <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r15 = new java util array list <NEXT> $ r4 = org apache tika parser txt charset detector all_cs_recognizers <NEXT> $ i0 = $ r4 size <NEXT> specialinvoke r15 < init > $ i0 <NEXT> i3 = 0 <NEXT> label $ r5 = org apache tika parser txt charset detector all_cs_recognizers <NEXT> $ i1 = $ r5 size <NEXT> if i3 > = $ i1 goto label5 <NEXT> $ r9 = org apache tika parser txt charset detector all_cs_recognizers <NEXT> $ r10 = $ r9 get i3 <NEXT> r2 = org apache tika parser txt charset detector $ c s recognizer info $ r10 <NEXT> r16 = org apache tika parser txt charset detector r0 <NEXT> $ r11 = r16 f enable recognizers <NEXT> if $ r11 ! = null goto label2 <NEXT> $ z2 = r2 be default enabled <NEXT> goto label3 <NEXT> label if $ z2 == 0 goto label4 <NEXT> $ r13 = r2 recognizer <NEXT> $ r14 = $ r13 get name <NEXT> r15 add $ r14 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if $ r11 ! = null goto label2 <NEXT> label r17 = org apache tika parser txt charset detector r0 <NEXT> $ r12 = r17 f enable recognizers <NEXT> $ z2 = $ r12 [ i3 ] <NEXT> if i3 > = $ i1 goto label5 <NEXT> label $ i2 = r15 size <NEXT> $ r6 = newarray java lang string [ $ i2 ] <NEXT> $ r7 = r15 to array $ r6 <NEXT> $ r8 = java lang string [ ] $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tika parser txt charset match r0 <NEXT> $ i0 = r1 f confidence <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tika parser txt icu4j encode detector r0 <NEXT> r1 strip markup = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = javax servlet generic servlet r0 <NEXT> $ r1 = r3 config <NEXT> $ r2 = $ r1 get servlet name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina authenticator authenticator base r0 <NEXT> r2 secure random algorithm = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache catalina authenticator single sign on entry r0 <NEXT> $ r1 = r3 session key <NEXT> $ r2 = $ r1 key set <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache catalina connector connector r0 <NEXT> r2 max save post size = i0 <NEXT> $ r1 = java lang string value of i0 <NEXT> r3 = org apache catalina connector connector r0 <NEXT> r3 set property \ `` max save post size\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache catalina connector connector r0 <NEXT> r2 redirect port = i0 <NEXT> $ r1 = java lang string value of i0 <NEXT> r3 = org apache catalina connector connector r0 <NEXT> r3 set property \ `` redirect port\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina connector connector r0 <NEXT> $ z0 = r1 xpowered by <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org apache catalina connector connector r0 <NEXT> r2 use i p v host = z0 <NEXT> $ r1 = java lang string value of z0 <NEXT> r3 = org apache catalina connector connector r0 <NEXT> r3 set property \ `` use i p v hosts\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = r1 get request session id <NEXT> if $ r3 ! = null goto label1 <NEXT> $ r4 = org apache catalina connector coyote adapter ssl_only <NEXT> $ r5 = r1 get servlet context <NEXT> $ r6 = $ r5 get effective session track mode <NEXT> $ z0 = $ r4 equal $ r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r7 = r1 connector <NEXT> $ z1 = $ r7 secure <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r8 = r1 get attribute \ `` javax servlet request ssl_session_id\ `` <NEXT> r2 = java lang string $ r8 <NEXT> if r2 == null goto label1 <NEXT> r1 set request session id r2 <NEXT> r1 set request session s s l 1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina connector input buffer r0 <NEXT> r2 coyote request = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina connector request r0 <NEXT> r2 response = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache catalina connector request r0 <NEXT> $ r2 = r3 locales <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org apache catalina connector request r0 <NEXT> r1 = r4 get context <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 get swallow abort uploads <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = org apache catalina connector request r0 <NEXT> $ r3 = r5 coyote request <NEXT> $ r2 = org apache coyote action code disable_swallow_input <NEXT> $ r3 action $ r2 null <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache catalina connector response r0 <NEXT> $ r1 = r2 output buffer <NEXT> $ r1 flush <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r2 = r13 append \ `` container event [ \'\ `` <NEXT> r14 = org apache catalina container event r0 <NEXT> $ r3 = r14 get container <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \ ' \'\ `` <NEXT> r15 = org apache catalina container event r0 <NEXT> $ r6 = r15 get type <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` \ ' \'\ `` <NEXT> r16 = org apache catalina container event r0 <NEXT> $ r9 = r16 get data <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 append \ `` \ ' ] \ `` <NEXT> $ r12 = $ r11 to string <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i1 = 0 <NEXT> label r8 = org apache catalina core application filter chain r0 <NEXT> $ i0 = r8 n <NEXT> if i1 > = $ i0 goto label3 <NEXT> r9 = org apache catalina core application filter chain r0 <NEXT> $ r3 = r9 filter <NEXT> r2 = $ r3 [ i1 ] <NEXT> $ r4 = \ `` false\ `` <NEXT> $ r5 = r2 get filter def <NEXT> $ r6 = $ r5 get async support <NEXT> $ z0 = $ r4 equal ignore case $ r6 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r2 get filter class <NEXT> r1 add $ r7 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache catalina core application http request r0 <NEXT> $ r1 = r2 request u r i <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina core container base r0 <NEXT> $ i0 = r1 background processor delay <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org apache catalina core container base r0 <NEXT> z1 = r2 start child <NEXT> r3 = org apache catalina core container base r0 <NEXT> r3 start child = z0 <NEXT> r4 = org apache catalina core container base r0 <NEXT> $ r1 = r4 support <NEXT> r5 = org apache catalina core container base r0 <NEXT> $ z2 = r5 start child <NEXT> $ r1 fire property change \ `` start children\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = org apache catalina core container base r0 <NEXT> $ r1 = r7 parent class loader <NEXT> if $ r1 == null goto label1 <NEXT> r8 = org apache catalina core container base r0 <NEXT> $ r6 = r8 parent class loader <NEXT> return $ r6 <NEXT> if $ r1 == null goto label1 <NEXT> label r9 = org apache catalina core container base r0 <NEXT> $ r2 = r9 parent <NEXT> if $ r2 == null goto label2 <NEXT> r10 = org apache catalina core container base r0 <NEXT> $ r4 = r10 parent <NEXT> $ r5 = $ r4 get parent class loader <NEXT> return $ r5 <NEXT> if $ r2 == null goto label2 <NEXT> label $ r3 = java lang class loader get system class loader <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org apache catalina globals is_security_enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = new org apache catalina core container base $ privilege add child <NEXT> r6 = org apache catalina core container base r0 <NEXT> specialinvoke r5 < init > r6 r1 <NEXT> r7 = java security privilege action r5 <NEXT> java security access controller do privilege r7 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org apache catalina core container base r0 <NEXT> specialinvoke r8 add child internal r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache catalina core container base r0 <NEXT> $ r2 = r3 pipeline <NEXT> $ r2 add valve r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache catalina core default instance manager r0 <NEXT> $ r1 = r2 annotation cache <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina core jre memory leak prevention listener r0 <NEXT> $ z0 = r1 xml parsing protection <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina core standard context r0 <NEXT> $ z0 = r1 delegate <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache catalina core standard context r0 <NEXT> $ r1 = r2 session cookie path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache catalina core standard context r0 <NEXT> r1 clear reference http client keep alive thread = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache catalina core standard context r0 <NEXT> $ r4 = r9 filter defs <NEXT> entermonitor $ r4 <NEXT> label r10 = org apache catalina core standard context r0 <NEXT> $ r5 = r10 filter defs <NEXT> $ r6 = $ r5 get r1 <NEXT> $ r7 = org apache tomcat util descriptor web filter def $ r6 <NEXT> exitmonitor $ r4 <NEXT> label return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache catalina core standard context r0 <NEXT> $ r2 = r4 parameter <NEXT> $ r2 remove r1 <NEXT> r5 = org apache catalina core standard context r0 <NEXT> r5 fire container event \ `` remove parameter\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l2 = 0l <NEXT> r5 = org apache catalina core standard context r0 <NEXT> r1 = r5 find child <NEXT> if r1 == null goto label2 <NEXT> i0 = lengthof r1 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label2 <NEXT> r3 = r1 [ i3 ] <NEXT> $ r4 = org apache catalina core standard wrapper r3 <NEXT> $ l1 = $ r4 get processing time <NEXT> l2 = l2 + $ l1 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label2 <NEXT> label return l2 <END>
<BEG> r0 = @ this <NEXT> l4 = -1l <NEXT> r5 = org apache catalina core standard context r0 <NEXT> r1 = r5 find child <NEXT> if r1 == null goto label4 <NEXT> i1 = lengthof r1 <NEXT> i5 = 0 <NEXT> label if i5 > = i1 goto label4 <NEXT> r3 = r1 [ i5 ] <NEXT> $ r4 = org apache catalina core standard wrapper r3 <NEXT> l0 = $ r4 get min time <NEXT> $ b2 = l4 cmp 0l <NEXT> if $ b2 < 0 goto label2 <NEXT> $ b3 = l0 cmp l4 <NEXT> if $ b3 > = 0 goto label3 <NEXT> label l4 = l0 <NEXT> label i5 = i5 + 1 <NEXT> goto label1 <NEXT> label if i5 > = i1 goto label4 <NEXT> label return l4 <END>
<BEG> r0 = @ this <NEXT> $ r2 = \ `` - sun microsystems inc dtd web application 2 2 en\ `` <NEXT> r3 = org apache catalina core standard context r0 <NEXT> $ r1 = r3 public id <NEXT> $ z0 = $ r2 equal $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina core standard engine r0 <NEXT> r2 jvm route id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache catalina core standard host r0 <NEXT> r1 deploy x m l = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina core standard wrapper r0 <NEXT> $ l0 = r1 available <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina filter remote ip filter r0 <NEXT> r2 host header = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache catalina filter remote ip filter r0 <NEXT> r1 request attribute enable = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina filter set character encode filter r0 <NEXT> r2 encode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache catalina loader webapp class loader base r0 <NEXT> r1 clear reference stop timer thread = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina loader webapp loader r0 <NEXT> $ z0 = r1 reloadable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache catalina loader webapp loader r0 <NEXT> $ r1 = r2 classpath <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = newarray java lang string [ 1 ] <NEXT> $ r4 [ 0 ] = r1 <NEXT> $ r5 = newarray java lang string [ 1 ] <NEXT> $ r5 [ 0 ] = \ `` java lang string\ `` <NEXT> r9 = org apache catalina manager manager servlet r0 <NEXT> $ r7 = r9 m bean server <NEXT> r10 = org apache catalina manager manager servlet r0 <NEXT> $ r6 = r10 oname <NEXT> $ r7 invoke $ r6 \ `` check\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r7 = org apache catalina mbeans container m bean new instance r1 <NEXT> r3 = org apache catalina container $ r7 <NEXT> r3 set name r2 <NEXT> $ z0 = r3 instanceof org apache catalina core standard host <NEXT> if $ z0 == 0 goto label1 <NEXT> r16 = new org apache catalina startup host config <NEXT> specialinvoke r16 < init > <NEXT> r19 = org apache catalina lifecycle listener r16 <NEXT> r3 add lifecycle listener r19 <NEXT> goto label2 <NEXT> label z2 = 1 <NEXT> r21 = org apache catalina mbeans container m bean r0 <NEXT> $ r15 = r21 do get manage resource <NEXT> r4 = org apache catalina core container base $ r15 <NEXT> label z2 = r4 get start child <NEXT> r4 set start child 0 <NEXT> r4 add child r3 <NEXT> r3 init <NEXT> label if r4 == null goto label9 <NEXT> r4 set start child z2 <NEXT> goto label9 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r3 instanceof org apache catalina core standard context <NEXT> if $ z1 == 0 goto label2 <NEXT> r17 = new org apache catalina startup context config <NEXT> specialinvoke r17 < init > <NEXT> r20 = org apache catalina lifecycle listener r17 <NEXT> r3 add lifecycle listener r20 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = org apache catalina mbeans container m bean new instance r1 <NEXT> r2 = org apache catalina lifecycle listener $ r4 <NEXT> r6 = org apache catalina mbeans container m bean r0 <NEXT> $ r5 = r6 do get manage resource <NEXT> r3 = org apache catalina container $ r5 <NEXT> r3 add lifecycle listener r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache catalina mbeans container m bean r0 <NEXT> $ r6 = r9 do get manage resource <NEXT> r2 = org apache catalina container $ r6 <NEXT> r3 = r2 find lifecycle listener <NEXT> i0 = lengthof r3 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r5 = r3 [ i1 ] <NEXT> $ r7 = r5 get class <NEXT> $ r8 = $ r7 get name <NEXT> $ z0 = $ r8 equal r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> r2 remove lifecycle listener r5 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache catalina mbeans jmx remote lifecycle listener r0 <NEXT> $ r1 = r2 rmi bind address <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina mbeans jmx remote lifecycle listener r0 <NEXT> $ z0 = r1 use local port <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r4 = org apache catalina mbeans m bean factory r0 <NEXT> $ r3 = specialinvoke r4 create connector r1 r2 i0 0 0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r17 = org apache catalina mbeans memory user database m bean r0 <NEXT> $ r7 = r17 resource <NEXT> r3 = org apache catalina user database $ r7 <NEXT> r4 = r3 create role r1 r2 <NEXT> label org apache catalina mbeans m bean utils create m bean r4 <NEXT> label goto label4 <NEXT> label r18 = org apache catalina mbeans memory user database m bean r0 <NEXT> $ r9 = r18 find role r1 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = org apache catalina mbeans memory user database m bean r0 <NEXT> $ r6 = r14 resource <NEXT> r2 = org apache catalina user database $ r6 <NEXT> r3 = r2 find role r1 <NEXT> if r3 ! = null goto label1 <NEXT> return <NEXT> if r3 ! = null goto label1 <NEXT> label org apache catalina mbeans m bean utils destroy m bean r3 <NEXT> r2 remove role r3 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r27 = null <NEXT> r28 = org apache catalina realm combine realm r0 <NEXT> $ r4 = r28 realm <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r5 = r2 next <NEXT> r3 = org apache catalina realm $ r5 <NEXT> $ r6 = org apache catalina realm combine realm log <NEXT> $ z1 = $ r6 be debug enabled <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r22 = org apache catalina realm combine realm log <NEXT> $ r23 = org apache catalina realm combine realm sm <NEXT> $ r21 = newarray java lang object [ 2 ] <NEXT> $ r21 [ 0 ] = r1 <NEXT> $ r24 = r3 get class <NEXT> $ r25 = $ r24 get name <NEXT> $ r21 [ 1 ] = $ r25 <NEXT> $ r26 = $ r23 get string \ `` combine realm auth start\ <NEXT> $ r22 debug $ r26 <NEXT> label r27 = r3 authenticate r1 <NEXT> if r27 ! = null goto label3 <NEXT> $ r14 = org apache catalina realm combine realm log <NEXT> $ z3 = $ r14 be debug enabled <NEXT> if $ z3 == 0 goto label4 <NEXT> $ r16 = org apache catalina realm combine realm log <NEXT> $ r17 = org apache catalina realm combine realm sm <NEXT> $ r15 = newarray java lang object [ 2 ] <NEXT> $ r15 [ 0 ] = r1 <NEXT> $ r18 = r3 get class <NEXT> $ r19 = $ r18 get name <NEXT> $ r15 [ 1 ] = $ r19 <NEXT> $ r20 = $ r17 get string \ `` combine realm auth fail\ <NEXT> $ r16 debug $ r20 <NEXT> goto label4 <NEXT> label goto label1 <NEXT> if r27 ! = null goto label3 <NEXT> label $ r7 = org apache catalina realm combine realm log <NEXT> $ z2 = $ r7 be debug enabled <NEXT> if $ z2 == 0 goto label5 <NEXT> $ r9 = org apache catalina realm combine realm log <NEXT> $ r10 = org apache catalina realm combine realm sm <NEXT> $ r8 = newarray java lang object [ 2 ] <NEXT> $ r8 [ 0 ] = r1 <NEXT> $ r11 = r3 get class <NEXT> $ r12 = $ r11 get name <NEXT> $ r8 [ 1 ] = $ r12 <NEXT> $ r13 = $ r10 get string \ `` combine realm auth success\ <NEXT> $ r9 debug $ r13 <NEXT> goto label5 <NEXT> label return r27 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache catalina realm data source realm r0 <NEXT> r1 local data source = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r21 = null <NEXT> label r33 = org apache catalina realm data source realm r0 <NEXT> $ r7 = r33 prepare credential <NEXT> r22 = r1 prepare statement $ r7 <NEXT> r23 = null <NEXT> label r22 set string 1 r2 <NEXT> r24 = r22 execute query <NEXT> r25 = null <NEXT> label $ z0 = r24 next <NEXT> if $ z0 == 0 goto label04 <NEXT> r21 = r24 get string 1 <NEXT> label if r21 == null goto label05 <NEXT> $ r26 = r21 trim <NEXT> goto label06 <NEXT> label r27 = $ r26 <NEXT> label if r24 == null goto label09 <NEXT> goto label08 <NEXT> label r24 close <NEXT> label if r22 == null goto label11 <NEXT> goto label10 <NEXT> label r22 close <NEXT> label return r27 <NEXT> label if r21 == null goto label05 <NEXT> label $ r26 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina realm j d b c realm r0 <NEXT> r2 connection u r l = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache catalina realm lock out realm r0 <NEXT> r1 cache size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache catalina session file store r0 <NEXT> r2 = r5 directory <NEXT> r6 = org apache catalina session file store r0 <NEXT> r6 directory = r1 <NEXT> r7 = org apache catalina session file store r0 <NEXT> r7 directory file = null <NEXT> r8 = org apache catalina session file store r0 <NEXT> $ r4 = r8 support <NEXT> r9 = org apache catalina session file store r0 <NEXT> $ r3 = r9 directory <NEXT> $ r4 fire property change \ `` directory\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return \ `` file store\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache catalina session j d b c store r0 <NEXT> $ r2 = r3 data source <NEXT> if $ r2 == null goto label1 <NEXT> r4 = org apache catalina session j d b c store r0 <NEXT> r4 close r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label r3 = org apache catalina session manager base r0 <NEXT> r3 session attribute name pattern = null <NEXT> goto label3 <NEXT> label return <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r2 = java util regex pattern compile r1 <NEXT> r4 = org apache catalina session manager base r0 <NEXT> r4 session attribute name pattern = $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina session manager base r0 <NEXT> $ z0 = r1 warn on session attribute filter failure <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org apache catalina session manager base r0 <NEXT> i1 = r4 max active session <NEXT> r5 = org apache catalina session manager base r0 <NEXT> r5 max active session = i0 <NEXT> r6 = org apache catalina session manager base r0 <NEXT> $ r1 = r6 support <NEXT> $ r2 = java lang integer value of i1 <NEXT> r7 = org apache catalina session manager base r0 <NEXT> $ i2 = r7 max active session <NEXT> $ r3 = java lang integer value of $ i2 <NEXT> $ r1 fire property change \ `` max active sessions\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache catalina session persistent manager base r0 <NEXT> $ r2 = r4 store <NEXT> if $ r2 == null goto label1 <NEXT> $ z0 = r1 be valid <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label return <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r3 = org apache catalina session standard session r1 <NEXT> $ r3 passivate <NEXT> r5 = org apache catalina session persistent manager base r0 <NEXT> r5 write session r1 <NEXT> specialinvoke r0 remove r1 1 <NEXT> r1 recycle <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r14 = org apache catalina session standard manager r0 <NEXT> $ r4 = r14 pathname <NEXT> if $ r4 == null goto label1 <NEXT> r15 = org apache catalina session standard manager r0 <NEXT> $ r5 = r15 pathname <NEXT> $ i0 = $ r5 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return null <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label r12 = new java io file <NEXT> r16 = org apache catalina session standard manager r0 <NEXT> $ r7 = r16 pathname <NEXT> specialinvoke r12 < init > $ r7 <NEXT> r11 = r12 <NEXT> $ z0 = r12 be absolute <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r17 = org apache catalina session standard manager r0 <NEXT> r1 = r17 get context <NEXT> r2 = r1 get servlet context <NEXT> $ r8 = r2 get attribute \ `` javax servlet context tempdir\ `` <NEXT> r3 = java io file $ r8 <NEXT> if r3 == null goto label3 <NEXT> r13 = new java io file <NEXT> r18 = org apache catalina session standard manager r0 <NEXT> $ r10 = r18 pathname <NEXT> specialinvoke r13 < init > r3 $ r10 <NEXT> r11 = r13 <NEXT> label return r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina session standard session r0 <NEXT> r2 manager = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina session too many active session exception r0 <NEXT> $ i0 = r1 max active session <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r2 = java lang system out <NEXT> $ r1 = org apache catalina startup catalina sm <NEXT> $ r3 = $ r1 get string \ `` catalina usage\ `` <NEXT> $ r2 println $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina startup tomcat r0 <NEXT> r2 basedir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = org apache catalina startup tomcat r0 <NEXT> $ r3 = r10 user role <NEXT> $ r4 = $ r3 get r1 <NEXT> r8 = java util list $ r4 <NEXT> if r8 ! = null goto label1 <NEXT> r9 = new java util array list <NEXT> specialinvoke r9 < init > <NEXT> r8 = r9 <NEXT> r11 = org apache catalina startup tomcat r0 <NEXT> $ r6 = r11 user role <NEXT> $ r6 put r1 r9 <NEXT> label r8 add r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache catalina startup tomcat r0 <NEXT> $ r3 = r5 get host <NEXT> r2 = $ r3 find child r1 <NEXT> $ r4 = org apache catalina context r2 <NEXT> org apache catalina startup tomcat init webapp default $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache catalina user abstract group r0 <NEXT> $ r1 = r2 get groupname <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get parameter type <NEXT> $ i0 = lengthof $ r1 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ i1 = r0 get modifier <NEXT> $ z0 = java lang reflect modifier be static $ i1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r2 = r0 get exception type <NEXT> $ i2 = lengthof $ r2 <NEXT> if $ i2 > 0 goto label1 <NEXT> $ r3 = r0 get return type <NEXT> $ r4 = $ r3 get name <NEXT> $ z1 = $ r4 equal \ `` void\ `` <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label return 0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache catalina util lifecycle m bean base r0 <NEXT> $ r1 = r2 oname <NEXT> r3 = org apache catalina util lifecycle m bean base r0 <NEXT> r3 unregister $ r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org apache catalina util session config get configure session cookie name r0 <NEXT> if r1 ! = null goto label1 <NEXT> r1 = \ `` jsessionid\ `` <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina util session id generator base r0 <NEXT> $ i0 = r1 session id length <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina valve access log valve r0 <NEXT> $ z0 = r1 rotatable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache catalina valve access log valve r0 <NEXT> $ z0 = r1 rename on rotate <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 open <NEXT> r17 = org apache catalina valve extend access log valve r0 <NEXT> $ r1 = r17 current log file <NEXT> $ l0 = $ r1 length <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 ! = 0 goto label1 <NEXT> r18 = org apache catalina valve extend access log valve r0 <NEXT> $ r3 = r18 writer <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r4 = r15 append \ `` #field \ `` <NEXT> r19 = org apache catalina valve extend access log valve r0 <NEXT> $ r5 = r19 pattern <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> $ r3 println $ r7 <NEXT> r20 = org apache catalina valve extend access log valve r0 <NEXT> $ r8 = r20 writer <NEXT> $ r8 println \ `` #version 2 0\ `` <NEXT> r21 = org apache catalina valve extend access log valve r0 <NEXT> $ r10 = r21 writer <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r11 = r16 append \ `` #software \ `` <NEXT> $ r12 = org apache catalina util server info get server info <NEXT> $ r13 = $ r11 append $ r12 <NEXT> $ r14 = $ r13 to string <NEXT> $ r10 println $ r14 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina valve j d b c access log valve r0 <NEXT> r2 remote host field = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina valve j d b c access log valve r0 <NEXT> r2 virtual host field = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = java lang boolean parse boolean r1 <NEXT> r2 = org apache catalina valve j d b c access log valve r0 <NEXT> r2 resolve host = $ z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina valve load balancer drain valve r0 <NEXT> r2 _ignore cookie value = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` \ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> r3 = r2 next <NEXT> if r3 == null goto label3 <NEXT> $ r4 append r3 <NEXT> $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r4 append \ <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ r5 = $ r4 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina valve remote ip valve r0 <NEXT> r2 host header = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache catalina valve remote ip valve r0 <NEXT> r2 protocol header http value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache coyote abstract protocol r0 <NEXT> $ r2 = r4 endpoint <NEXT> $ r3 = $ r2 get property r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache coyote ajp ajp message r0 <NEXT> $ r1 = r2 buf <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache coyote ajp ajp message r0 <NEXT> $ r1 = r2 buf <NEXT> r3 = org apache coyote ajp ajp message r0 <NEXT> $ i1 = r3 po <NEXT> $ i2 = $ i1 + 1 <NEXT> r4 = org apache coyote ajp ajp message r0 <NEXT> r4 po = $ i2 <NEXT> $ b3 = byte i0 <NEXT> $ r1 [ $ i1 ] = $ b3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache coyote ajp ajp message r0 <NEXT> $ r1 = r3 buf <NEXT> r4 = org apache coyote ajp ajp message r0 <NEXT> $ i2 = r4 po <NEXT> $ i3 = $ i2 + 1 <NEXT> r5 = org apache coyote ajp ajp message r0 <NEXT> r5 po = $ i3 <NEXT> $ b4 = $ r1 [ $ i2 ] <NEXT> s0 = $ b4 & 255 <NEXT> r6 = org apache coyote ajp ajp message r0 <NEXT> $ r2 = r6 buf <NEXT> r7 = org apache coyote ajp ajp message r0 <NEXT> $ i5 = r7 po <NEXT> $ i6 = $ i5 + 1 <NEXT> r8 = org apache coyote ajp ajp message r0 <NEXT> r8 po = $ i6 <NEXT> $ b7 = $ r2 [ $ i5 ] <NEXT> s1 = $ b7 & 255 <NEXT> r9 = org apache coyote ajp ajp message r0 <NEXT> $ i8 = r9 po <NEXT> r10 = org apache coyote ajp ajp message r0 <NEXT> specialinvoke r10 validate pos $ i8 <NEXT> $ i9 = s0 < < 8 <NEXT> $ i10 = $ i9 + s1 <NEXT> return $ i10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i1 = r1 severity <NEXT> r2 = org apache coyote error state r0 <NEXT> $ i0 = r2 severity <NEXT> if $ i1 < = $ i0 goto label1 <NEXT> return r1 <NEXT> if $ i1 < = $ i0 goto label1 <NEXT> label r3 = org apache coyote error state r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache coyote http11 abstract http11 protocol r0 <NEXT> r1 max save post size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache coyote http11 abstract http11 protocol r0 <NEXT> $ z0 = r1 disable upload timeout <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache coyote http11 filter save request input filter r0 <NEXT> $ r2 = r3 input <NEXT> $ i0 = $ r2 get length <NEXT> $ l1 = long $ i0 <NEXT> r1 set content length $ l1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0l <END>
<BEG> r0 = @ this <NEXT> r2 = org apache coyote request r0 <NEXT> $ r1 = r2 server name m b <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache juli file handler r0 <NEXT> r1 open writer <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append r2 <NEXT> $ r5 = $ r4 append \ `` \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tomcat jni error r0 <NEXT> $ i0 = r1 error <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> b1 = @ parameter1 <NEXT> r22 = org apache tomcat util bcel classfile constant pool r0 <NEXT> r1 = r22 get constant i0 <NEXT> if r1 ! = null goto label1 <NEXT> r19 = new org apache tomcat util bcel classfile class format exception <NEXT> r18 = new java lang string builder <NEXT> specialinvoke r18 < init > <NEXT> $ r14 = r18 append \ `` constant pool at index \ `` <NEXT> $ r15 = $ r14 append i0 <NEXT> $ r16 = $ r15 append \ `` be null \ `` <NEXT> $ r17 = $ r16 to string <NEXT> specialinvoke r19 < init > $ r17 <NEXT> r23 = java lang throwable r19 <NEXT> throw r23 <NEXT> if r1 ! = null goto label1 <NEXT> label $ b2 = r1 get tag <NEXT> if $ b2 == b1 goto label2 <NEXT> r21 = new org apache tomcat util bcel classfile class format exception <NEXT> r20 = new java lang string builder <NEXT> specialinvoke r20 < init > <NEXT> $ r4 = r20 append \ `` expected class ` \ `` <NEXT> $ r5 = org apache tomcat util bcel const get constant name b1 <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 append \ `` \ ' at index \ `` <NEXT> $ r8 = $ r7 append i0 <NEXT> $ r9 = $ r8 append \ `` and get \ `` <NEXT> $ r10 = $ r9 append r1 <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r21 < init > $ r11 <NEXT> r24 = java lang throwable r21 <NEXT> throw r24 <NEXT> if $ b2 == b1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache tomcat util buf abstract chunk r0 <NEXT> r1 limit = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tomcat util buf byte chunk r0 <NEXT> r2 in = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r2 = org apache tomcat util buf char chunk r0 <NEXT> r2 buff = r1 <NEXT> r3 = org apache tomcat util buf char chunk r0 <NEXT> r3 start = i0 <NEXT> r4 = org apache tomcat util buf char chunk r0 <NEXT> $ i2 = r4 start <NEXT> $ i3 = $ i2 + i1 <NEXT> r5 = org apache tomcat util buf char chunk r0 <NEXT> r5 end = $ i3 <NEXT> r6 = org apache tomcat util buf char chunk r0 <NEXT> r6 be set = 1 <NEXT> r7 = org apache tomcat util buf char chunk r0 <NEXT> r7 have hash code = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get char <NEXT> $ i0 = r1 get start <NEXT> $ i1 = r1 get length <NEXT> r3 = org apache tomcat util buf byte chunk r0 <NEXT> $ z0 = r3 equal $ r2 $ i0 $ i1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> b13 = 0 <NEXT> r2 = r0 get buffer <NEXT> i0 = r0 get start <NEXT> i1 = r0 get end <NEXT> i14 = lengthof r1 <NEXT> $ i2 = i1 - i0 <NEXT> if $ i2 > = i14 goto label1 <NEXT> i14 = i1 - i0 <NEXT> label i15 = 0 <NEXT> label if i15 > = i14 goto label5 <NEXT> if b13 ! = 0 goto label5 <NEXT> $ i7 = i15 + i0 <NEXT> $ b9 = r2 [ $ i7 ] <NEXT> $ b8 = r1 [ i15 ] <NEXT> if $ b9 < = $ b8 goto label3 <NEXT> b13 = 1 <NEXT> goto label4 <NEXT> label i15 = i15 + 1 <NEXT> goto label2 <NEXT> if $ b9 < = $ b8 goto label3 <NEXT> label $ i10 = i15 + i0 <NEXT> $ b12 = r2 [ $ i10 ] <NEXT> $ b11 = r1 [ i15 ] <NEXT> if $ b12 > = $ b11 goto label4 <NEXT> b13 = -1 <NEXT> if b13 ! = 0 goto label5 <NEXT> label if b13 ! = 0 goto label7 <NEXT> $ i4 = lengthof r1 <NEXT> $ i3 = i1 - i0 <NEXT> if $ i4 < = $ i3 goto label6 <NEXT> label $ i6 = lengthof r1 <NEXT> $ i5 = i1 - i0 <NEXT> if $ i6 > = $ i5 goto label7 <NEXT> label return b13 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org apache tomcat util buf string cache bc cache <NEXT> $ r1 = org apache tomcat util buf string cache bc cache <NEXT> $ i1 = lengthof $ r1 <NEXT> i0 = org apache tomcat util buf string cache find close r0 $ r2 $ i1 <NEXT> if i0 < 0 goto label1 <NEXT> $ r3 = org apache tomcat util buf string cache bc cache <NEXT> $ r4 = $ r3 [ i0 ] <NEXT> $ r5 = org apache tomcat util buf string cache $ byte entry access $ 000 $ r4 <NEXT> $ i2 = org apache tomcat util buf string cache compare r0 $ r5 <NEXT> if $ i2 ! = 0 goto label1 <NEXT> $ r6 = r0 get charset <NEXT> $ r7 = org apache tomcat util buf string cache bc cache <NEXT> $ r8 = $ r7 [ i0 ] <NEXT> $ r9 = org apache tomcat util buf string cache $ byte entry access $ 300 $ r8 <NEXT> $ z0 = $ r6 equal $ r9 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label return null <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r10 = org apache tomcat util buf string cache bc cache <NEXT> $ r11 = $ r10 [ i0 ] <NEXT> $ r12 = org apache tomcat util buf string cache $ byte entry access $ 200 $ r11 <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 length <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label6 <NEXT> c1 = r0 char at i2 <NEXT> if c1 ! = 58 goto label4 <NEXT> if i2 < = 0 goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if i2 < = 0 goto label2 <NEXT> label $ z1 = 0 <NEXT> if c1 ! = 58 goto label4 <NEXT> label $ z0 = org apache tomcat util buf uri util be scheme char c1 <NEXT> if $ z0 ! = 0 goto label5 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label5 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label6 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label i5 = -1 <NEXT> i6 = 0 <NEXT> label r10 = org apache tomcat util descriptor web security collection r0 <NEXT> $ r3 = r10 pattern <NEXT> $ i0 = lengthof $ r3 <NEXT> if i6 > = $ i0 goto label4 <NEXT> r11 = org apache tomcat util descriptor web security collection r0 <NEXT> $ r8 = r11 pattern <NEXT> $ r9 = $ r8 [ i6 ] <NEXT> $ z0 = $ r9 equal r1 <NEXT> if $ z0 == 0 goto label3 <NEXT> i5 = i6 <NEXT> goto label4 <NEXT> label if i5 < 0 goto label8 <NEXT> i7 = 0 <NEXT> r12 = org apache tomcat util descriptor web security collection r0 <NEXT> $ r4 = r12 pattern <NEXT> $ i1 = lengthof $ r4 <NEXT> $ i2 = $ i1 - 1 <NEXT> r2 = newarray java lang string [ $ i2 ] <NEXT> i8 = 0 <NEXT> label r13 = org apache tomcat util descriptor web security collection r0 <NEXT> $ r5 = r13 pattern <NEXT> $ i3 = lengthof $ r5 <NEXT> if i8 > = $ i3 goto label7 <NEXT> if i8 == i5 goto label6 <NEXT> $ i4 = i7 <NEXT> i7 = i7 + 1 <NEXT> r14 = org apache tomcat util descriptor web security collection r0 <NEXT> $ r6 = r14 pattern <NEXT> $ r7 = $ r6 [ i8 ] <NEXT> r2 [ $ i4 ] = $ r7 <NEXT> label i8 = i8 + 1 <NEXT> goto label5 <NEXT> if i8 > = $ i3 goto label7 <NEXT> label r15 = org apache tomcat util descriptor web security collection r0 <NEXT> r15 pattern = r2 <NEXT> label return <NEXT> if $ z0 == 0 goto label3 <NEXT> label i6 = i6 + 1 <NEXT> goto label2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tomcat util descriptor web security constraint r0 <NEXT> $ z0 = r1 authenticate user <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tomcat util descriptor web security constraint r0 <NEXT> $ r1 = r2 auth role <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label i5 = -1 <NEXT> i6 = 0 <NEXT> label r10 = org apache tomcat util descriptor web security constraint r0 <NEXT> $ r3 = r10 collection <NEXT> $ i0 = lengthof $ r3 <NEXT> if i6 > = $ i0 goto label4 <NEXT> r11 = org apache tomcat util descriptor web security constraint r0 <NEXT> $ r8 = r11 collection <NEXT> $ r9 = $ r8 [ i6 ] <NEXT> $ z0 = $ r9 equal r1 <NEXT> if $ z0 == 0 goto label3 <NEXT> i5 = i6 <NEXT> goto label4 <NEXT> label if i5 < 0 goto label8 <NEXT> i7 = 0 <NEXT> r12 = org apache tomcat util descriptor web security constraint r0 <NEXT> $ r4 = r12 collection <NEXT> $ i1 = lengthof $ r4 <NEXT> $ i2 = $ i1 - 1 <NEXT> r2 = newarray org apache tomcat util descriptor web security collection [ $ i2 ] <NEXT> i8 = 0 <NEXT> label r13 = org apache tomcat util descriptor web security constraint r0 <NEXT> $ r5 = r13 collection <NEXT> $ i3 = lengthof $ r5 <NEXT> if i8 > = $ i3 goto label7 <NEXT> if i8 == i5 goto label6 <NEXT> $ i4 = i7 <NEXT> i7 = i7 + 1 <NEXT> r14 = org apache tomcat util descriptor web security constraint r0 <NEXT> $ r6 = r14 collection <NEXT> $ r7 = $ r6 [ i8 ] <NEXT> r2 [ $ i4 ] = $ r7 <NEXT> label i8 = i8 + 1 <NEXT> goto label5 <NEXT> if i8 > = $ i3 goto label7 <NEXT> label r15 = org apache tomcat util descriptor web security constraint r0 <NEXT> r15 collection = r2 <NEXT> label return <NEXT> if $ z0 == 0 goto label3 <NEXT> label i6 = i6 + 1 <NEXT> goto label2 <END>
<BEG> z0 = @ parameter0 <NEXT> $ r0 = org apache tomcat util diagnostics class load m x bean <NEXT> $ r0 set verbose z0 <NEXT> $ r1 = org apache tomcat util diagnostics class load m x bean <NEXT> z1 = $ r1 be verbose <NEXT> if z0 == z1 goto label1 <NEXT> $ r3 = org apache tomcat util diagnostics log <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r4 = $ r2 append \ `` could not set verbose class load to \ `` <NEXT> $ r5 = $ r4 append z0 <NEXT> $ r6 = $ r5 append \ <NEXT> $ r7 = $ r6 append z1 <NEXT> $ r8 = $ r7 append \ `` instead\ `` <NEXT> $ r9 = $ r8 to string <NEXT> $ r3 error $ r9 <NEXT> label return <END>
<BEG> $ r0 = org apache tomcat util diagnostics sm <NEXT> $ r1 = org apache tomcat util diagnostics get thread dump $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tomcat util digester digester r0 <NEXT> $ r1 = r2 root <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> label r8 = org apache tomcat util digester digester r0 <NEXT> $ r2 = r8 params <NEXT> $ r3 = $ r2 peek <NEXT> label return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache tomcat util file config file loader get source <NEXT> $ r2 = $ r1 get resource r0 <NEXT> $ r3 = $ r2 get input stream <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> $ r4 = r7 append \ `` conf \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> r2 = $ r5 to string <NEXT> r8 = org apache tomcat util file configuration source r0 <NEXT> $ r6 = r8 get resource r2 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tomcat util http fileupload disk disk file item r0 <NEXT> $ r1 = r2 content type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache tomcat util http fileupload disk disk file item r0 <NEXT> r1 = r9 get <NEXT> r10 = org apache tomcat util http fileupload disk disk file item r0 <NEXT> r6 = r10 get char set <NEXT> if r6 ! = null goto label1 <NEXT> r11 = org apache tomcat util http fileupload disk disk file item r0 <NEXT> r6 = r11 default charset <NEXT> label r7 = new java lang string <NEXT> specialinvoke r7 < init > r1 r6 <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tomcat util http fileupload impl file item stream impl r0 <NEXT> $ r1 = r3 name <NEXT> $ r2 = org apache tomcat util http fileupload util stream check file name $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tomcat util http fileupload impl file item stream impl r0 <NEXT> $ r1 = r2 stream <NEXT> $ r1 close <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tomcat util http fileupload invalid file name exception r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache tomcat util http fileupload multipart stream r0 <NEXT> r2 header encode = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z2 = 0 <NEXT> z3 = 0 <NEXT> label r2 = org apache tomcat util http parser http parser read token r0 <NEXT> if r2 ! = null goto label2 <NEXT> z2 = 1 <NEXT> org apache tomcat util http parser http parser skip until r0 0 44 <NEXT> goto label1 <NEXT> if r2 ! = null goto label2 <NEXT> label $ i0 = r2 length <NEXT> if $ i0 ! = 0 goto label3 <NEXT> goto label6 <NEXT> label if z3 == 0 goto label7 <NEXT> if z2 ! = 0 goto label7 <NEXT> $ z4 = 1 <NEXT> goto label8 <NEXT> label return $ z4 <NEXT> if z2 ! = 0 goto label7 <NEXT> label $ z4 = 0 <NEXT> if $ i0 ! = 0 goto label3 <NEXT> label r3 = org apache tomcat util http parser http parser skip constant r0 \ <NEXT> $ r4 = org apache tomcat util http parser skip result eof <NEXT> if r3 ! = $ r4 goto label4 <NEXT> z3 = 1 <NEXT> $ r9 = java util locale english <NEXT> $ r10 = r2 to low case $ r9 <NEXT> r1 add $ r10 <NEXT> if r3 ! = $ r4 goto label4 <NEXT> label $ r5 = org apache tomcat util http parser skip result find <NEXT> if r3 ! = $ r5 goto label5 <NEXT> label z2 = 1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache tomcat util http request util normalize r0 1 <NEXT> return $ r1 <END>
<BEG> $ r0 = org apache tomcat util log system log handler reuse <NEXT> $ z0 = $ r0 be empty <NEXT> if $ z0 ! = 0 goto label4 <NEXT> label $ r4 = org apache tomcat util log system log handler reuse <NEXT> $ r5 = $ r4 pop <NEXT> r8 = org apache tomcat util log capture log $ r5 <NEXT> label goto label5 <NEXT> label $ r9 = org apache tomcat util log system log handler logs <NEXT> $ r10 = $ r9 get <NEXT> r11 = java util stack $ r10 <NEXT> if r11 ! = null goto label6 <NEXT> $ r2 = new java util stack <NEXT> specialinvoke $ r2 < init > <NEXT> r11 = $ r2 <NEXT> $ r3 = org apache tomcat util log system log handler logs <NEXT> $ r3 set $ r2 <NEXT> label r11 push r8 <NEXT> return <NEXT> if $ z0 ! = 0 goto label4 <NEXT> label $ r1 = new org apache tomcat util log capture log <NEXT> specialinvoke $ r1 < init > <NEXT> r8 = $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache tomcat util modeler base attribute filter r0 <NEXT> $ r4 = r7 name <NEXT> entermonitor $ r4 <NEXT> label r8 = org apache tomcat util modeler base attribute filter r0 <NEXT> $ r5 = r8 name <NEXT> $ r5 add r1 <NEXT> exitmonitor $ r4 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r9 = org apache tomcat util modeler base attribute filter r0 <NEXT> $ r3 = r9 name <NEXT> entermonitor $ r3 <NEXT> label r10 = org apache tomcat util modeler base attribute filter r0 <NEXT> $ r5 = r10 name <NEXT> $ r4 = newarray java lang string [ 0 ] <NEXT> $ r6 = $ r5 to array $ r4 <NEXT> $ r7 = java lang string [ ] $ r6 <NEXT> exitmonitor $ r3 <NEXT> label return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = org apache tomcat util modeler manage bean r0 <NEXT> $ r4 = r15 m bean info lock <NEXT> $ r5 = $ r4 write lock <NEXT> $ r5 lock <NEXT> label r16 = org apache tomcat util modeler manage bean r0 <NEXT> $ r6 = r16 notification <NEXT> $ i0 = lengthof $ r6 <NEXT> $ i1 = $ i0 + 1 <NEXT> r2 = newarray org apache tomcat util modeler notification info [ $ i1 ] <NEXT> r17 = org apache tomcat util modeler manage bean r0 <NEXT> $ r8 = r17 notification <NEXT> r18 = org apache tomcat util modeler manage bean r0 <NEXT> $ r7 = r18 notification <NEXT> $ i2 = lengthof $ r7 <NEXT> java lang system arraycopy $ r8 0 r2 0 $ i2 <NEXT> r19 = org apache tomcat util modeler manage bean r0 <NEXT> $ r9 = r19 notification <NEXT> $ i3 = lengthof $ r9 <NEXT> r2 [ $ i3 ] = r1 <NEXT> r20 = org apache tomcat util modeler manage bean r0 <NEXT> r20 notification = r2 <NEXT> r21 = org apache tomcat util modeler manage bean r0 <NEXT> r21 info = null <NEXT> label r22 = org apache tomcat util modeler manage bean r0 <NEXT> $ r10 = r22 m bean info lock <NEXT> $ r11 = $ r10 write lock <NEXT> $ r11 unlock <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = org apache tomcat util modeler notification info r0 <NEXT> $ r5 = r11 notif type lock <NEXT> r2 = $ r5 write lock <NEXT> r2 lock <NEXT> label r12 = org apache tomcat util modeler notification info r0 <NEXT> $ r6 = r12 notif type <NEXT> $ i0 = lengthof $ r6 <NEXT> $ i1 = $ i0 + 1 <NEXT> r3 = newarray java lang string [ $ i1 ] <NEXT> r13 = org apache tomcat util modeler notification info r0 <NEXT> $ r8 = r13 notif type <NEXT> r14 = org apache tomcat util modeler notification info r0 <NEXT> $ r7 = r14 notif type <NEXT> $ i2 = lengthof $ r7 <NEXT> java lang system arraycopy $ r8 0 r3 0 $ i2 <NEXT> r15 = org apache tomcat util modeler notification info r0 <NEXT> $ r9 = r15 notif type <NEXT> $ i3 = lengthof $ r9 <NEXT> r3 [ $ i3 ] = r1 <NEXT> r16 = org apache tomcat util modeler notification info r0 <NEXT> r16 notif type = r3 <NEXT> r17 = org apache tomcat util modeler notification info r0 <NEXT> r17 info = null <NEXT> label r2 unlock <NEXT> goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r27 = org apache tomcat util modeler registry r0 <NEXT> $ r3 = r27 server <NEXT> if $ r3 ! = null goto label7 <NEXT> r28 = org apache tomcat util modeler registry r0 <NEXT> $ r5 = r28 server lock <NEXT> entermonitor $ r5 <NEXT> label r29 = org apache tomcat util modeler registry r0 <NEXT> $ r6 = r29 server <NEXT> if $ r6 ! = null goto label3 <NEXT> l0 = java lang system current time millis <NEXT> $ r7 = javax management m bean server factory find m bean server null <NEXT> $ i1 = $ r7 size <NEXT> if $ i1 < = 0 goto label2 <NEXT> $ r15 = javax management m bean server factory find m bean server null <NEXT> $ r16 = $ r15 get 0 <NEXT> $ r17 = javax management m bean server $ r16 <NEXT> r30 = org apache tomcat util modeler registry r0 <NEXT> r30 server = $ r17 <NEXT> $ r18 = org apache tomcat util modeler registry log <NEXT> $ z1 = $ r18 be debug enabled <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r20 = org apache tomcat util modeler registry log <NEXT> r25 = new java lang string builder <NEXT> specialinvoke r25 < init > <NEXT> $ r21 = r25 append \ `` use exist m bean server \ `` <NEXT> $ l4 = java lang system current time millis <NEXT> $ l5 = $ l4 - l0 <NEXT> $ r22 = $ r21 append $ l5 <NEXT> $ r23 = $ r22 to string <NEXT> $ r20 debug $ r23 <NEXT> goto label3 <NEXT> label exitmonitor $ r5 <NEXT> label goto label7 <NEXT> label r32 = org apache tomcat util modeler registry r0 <NEXT> $ r4 = r32 server <NEXT> return $ r4 <NEXT> if $ i1 < = 0 goto label2 <NEXT> label $ r8 = java lang management management factory get platform m bean server <NEXT> r31 = org apache tomcat util modeler registry r0 <NEXT> r31 server = $ r8 <NEXT> $ r9 = org apache tomcat util modeler registry log <NEXT> $ z0 = $ r9 be debug enabled <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r11 = org apache tomcat util modeler registry log <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r12 = r26 append \ `` create m bean server\ `` <NEXT> $ l2 = java lang system current time millis <NEXT> $ l3 = $ l2 - l0 <NEXT> $ r13 = $ r12 append $ l3 <NEXT> $ r14 = $ r13 to string <NEXT> $ r11 debug $ r14 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache tomcat util net abstract endpoint r0 <NEXT> $ z0 = r1 bind on init <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 ! = -1 goto label1 <NEXT> $ r7 = org apache tomcat util net apr endpoint log <NEXT> $ r8 = org apache tomcat util net apr endpoint sm <NEXT> $ r6 = newarray java lang object [ 1 ] <NEXT> r11 = org apache tomcat util net apr endpoint r0 <NEXT> $ i2 = r11 get max connection <NEXT> $ r9 = java lang integer value of $ i2 <NEXT> $ r6 [ 0 ] = $ r9 <NEXT> $ r10 = $ r8 get string \ `` endpoint apr max connection unlimited\ <NEXT> $ r7 warn $ r10 <NEXT> return <NEXT> if i0 ! = -1 goto label1 <NEXT> label r12 = org apache tomcat util net apr endpoint r0 <NEXT> $ z0 = r12 run <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r2 = org apache tomcat util net apr endpoint log <NEXT> $ r3 = org apache tomcat util net apr endpoint sm <NEXT> $ r1 = newarray java lang object [ 1 ] <NEXT> r13 = org apache tomcat util net apr endpoint r0 <NEXT> $ i1 = r13 get max connection <NEXT> $ r4 = java lang integer value of $ i1 <NEXT> $ r1 [ 0 ] = $ r4 <NEXT> $ r5 = $ r3 get string \ `` endpoint apr max connection running\ <NEXT> $ r2 warn $ r5 <NEXT> if $ z0 == 0 goto label2 <NEXT> label specialinvoke r0 set max connection i0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r12 = org apache tomcat util net apr endpoint r0 <NEXT> $ r3 = r12 connection <NEXT> $ r4 = java lang long value of l0 <NEXT> $ r5 = $ r3 get $ r4 <NEXT> r2 = org apache tomcat util net socket wrapper base $ r5 <NEXT> $ r6 = org apache tomcat util net socket event open_read <NEXT> if r1 ! = $ r6 goto label1 <NEXT> $ r10 = r2 read operation <NEXT> if $ r10 == null goto label1 <NEXT> $ r11 = r2 read operation <NEXT> $ z2 = $ r11 process <NEXT> return $ z2 <NEXT> if $ r10 == null goto label1 <NEXT> label $ r7 = org apache tomcat util net socket event open_write <NEXT> if r1 ! = $ r7 goto label2 <NEXT> $ r8 = r2 write operation <NEXT> if $ r8 == null goto label2 <NEXT> $ r9 = r2 write operation <NEXT> $ z1 = $ r9 process <NEXT> return $ z1 <NEXT> if $ r8 == null goto label2 <NEXT> label r13 = org apache tomcat util net apr endpoint r0 <NEXT> $ z0 = r13 process socket r2 r1 1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = org apache tomcat util net jsse j s s e key manager r0 <NEXT> $ r4 = r8 server key alias <NEXT> if $ r4 == null goto label1 <NEXT> r9 = org apache tomcat util net jsse j s s e key manager r0 <NEXT> $ r7 = r9 server key alias <NEXT> return $ r7 <NEXT> if $ r4 == null goto label1 <NEXT> label r10 = org apache tomcat util net jsse j s s e key manager r0 <NEXT> $ r5 = r10 delegate <NEXT> $ r6 = $ r5 choose server alias r1 r2 r3 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tomcat util net nio2 channel r0 <NEXT> $ r1 = r2 sc <NEXT> $ r1 close <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache tomcat util net nio endpoint r0 <NEXT> r1 use inherited channel = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache tomcat util net openssl cipher open s s l cipher configuration parser parse r0 <NEXT> $ r2 = org apache tomcat util net openssl cipher open s s l cipher configuration parser convert for j s s e $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new com github fge uritemplate var value list value $ builder <NEXT> specialinvoke $ r1 < init > null <NEXT> $ r2 = $ r1 add all r0 <NEXT> $ r3 = $ r2 build <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com github fge uritemplate var variable map r0 <NEXT> $ r2 = r5 var <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = com github fge uritemplate var value variable value $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util array a list r1 <NEXT> r4 = org codehaus httpcache4j uri u r i builder r0 <NEXT> $ r3 = r4 with path $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r5 = @ parameter4 <NEXT> r9 = org apache velocity app event event cartridge r0 <NEXT> $ r6 = r9 method exception handler <NEXT> if $ r6 == null goto label1 <NEXT> r10 = org apache velocity app event event cartridge r0 <NEXT> $ r7 = r10 method exception handler <NEXT> $ r8 = $ r7 method exception r1 r2 r3 r4 r5 <NEXT> return $ r8 <NEXT> if $ r6 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r5 = @ parameter4 <NEXT> r10 = null <NEXT> r11 = org apache velocity app event event cartridge r0 <NEXT> $ r8 = r11 invalid reference handler <NEXT> r6 = $ r8 iterator <NEXT> label $ z0 = r6 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r9 = r6 next <NEXT> r7 = org apache velocity app event invalid reference event handler $ r9 <NEXT> r10 = r7 invalid get method r1 r2 r3 r4 r5 <NEXT> if r10 == null goto label2 <NEXT> goto label3 <NEXT> label return r10 <NEXT> if r10 == null goto label2 <NEXT> label goto label1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache velocity app event implement invalid reference info r0 <NEXT> $ r1 = r2 invalid reference <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache velocity app event implement report invalid reference r0 <NEXT> $ r1 = r2 invalid reference <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> org apache velocity runtime runtime singleton set property r0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org apache velocity runtime runtime singleton load directive r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label r3 = org apache velocity context abstract context r0 <NEXT> $ r2 = r3 internal remove r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache velocity exception template init exception r0 <NEXT> $ r1 = r2 template name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache velocity runtime directive block macro r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = org apache velocity runtime directive define r0 <NEXT> $ r5 = r8 key <NEXT> r7 = new org apache velocity runtime directive block $ reference <NEXT> specialinvoke r7 < init > r1 r0 <NEXT> r1 put $ r5 r7 <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = org apache velocity runtime directive block macro r0 <NEXT> $ r5 = r7 macro <NEXT> r6 = new org apache velocity runtime directive block $ reference <NEXT> specialinvoke r6 < init > r1 r0 <NEXT> r8 = org apache velocity runtime renderable r6 <NEXT> $ z0 = $ r5 render r1 r2 r3 r8 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache velocity runtime directive scope r0 <NEXT> $ r1 = r3 parent <NEXT> if $ r1 ! = null goto label1 <NEXT> return 1 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache velocity runtime directive scope r0 <NEXT> $ r2 = r4 parent <NEXT> $ i0 = $ r2 get depth <NEXT> $ i1 = $ i0 + 1 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache velocity runtime directive velocimacro proxy r0 <NEXT> r2 macro name = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> r7 = r0 special token <NEXT> label $ r4 = r7 special token <NEXT> if $ r4 == null goto label02 <NEXT> r7 = r7 special token <NEXT> goto label01 <NEXT> if $ r4 == null goto label02 <NEXT> label if r7 == null goto label13 <NEXT> r2 = r7 image <NEXT> i2 = 0 <NEXT> i0 = r2 length <NEXT> label if i2 > = i0 goto label12 <NEXT> c1 = r2 char at i2 <NEXT> if c1 == 35 goto label04 <NEXT> if c1 ! = 36 goto label05 <NEXT> label $ r3 append c1 <NEXT> label if c1 ! = 92 goto label11 <NEXT> z1 = 0 <NEXT> i3 = i2 <NEXT> z2 = 1 <NEXT> label if z2 == 0 goto label10 <NEXT> if i3 > = i0 goto label10 <NEXT> c4 = r2 char at i3 <NEXT> if c4 ! = 92 goto label07 <NEXT> goto label09 <NEXT> label i3 = i3 + 1 <NEXT> goto label06 <NEXT> if c4 ! = 92 goto label07 <NEXT> label if c4 ! = 36 goto label08 <NEXT> z1 = 1 <NEXT> z2 = 0 <NEXT> label if c4 ! = 36 goto label08 <NEXT> label z2 = 0 <NEXT> if i3 > = i0 goto label10 <NEXT> label if z1 == 0 goto label11 <NEXT> r8 = r2 substring i2 i3 <NEXT> $ r3 append r8 <NEXT> i2 = i3 <NEXT> label i2 = i2 + 1 <NEXT> goto label03 <NEXT> label if i2 > = i0 goto label12 <NEXT> label r7 = r7 next <NEXT> goto label02 <NEXT> label if r7 == null goto label13 <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> i35 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r15 = org apache velocity runtime parser velocity char stream r0 <NEXT> i36 = r15 token begin <NEXT> r16 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i2 = r16 bufpos <NEXT> r17 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i1 = r17 token begin <NEXT> if $ i2 < $ i1 goto label1 <NEXT> r18 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i31 = r18 bufpos <NEXT> r19 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i30 = r19 token begin <NEXT> $ i33 = $ i31 - $ i30 <NEXT> r20 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i32 = r20 in buf <NEXT> $ i34 = $ i33 + $ i32 <NEXT> i37 = $ i34 + 1 <NEXT> goto label2 <NEXT> label i38 = 0 <NEXT> i39 = 0 <NEXT> i40 = 0 <NEXT> label if i38 > = i37 goto label4 <NEXT> r25 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r9 = r25 bufline <NEXT> r26 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i20 = r26 bufsize <NEXT> $ i21 = i36 % $ i20 <NEXT> i39 = $ i21 <NEXT> $ i25 = $ r9 [ $ i21 ] <NEXT> r27 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r10 = r27 bufline <NEXT> i36 = i36 + 1 <NEXT> r28 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i22 = r28 bufsize <NEXT> $ i23 = i36 % $ i22 <NEXT> $ i24 = $ r10 [ $ i23 ] <NEXT> if $ i25 ! = $ i24 goto label4 <NEXT> r29 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r11 = r29 bufline <NEXT> $ r11 [ $ i21 ] = i35 <NEXT> r30 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r12 = r30 bufcolumn <NEXT> $ i26 = $ r12 [ $ i23 ] <NEXT> $ i28 = i40 + $ i26 <NEXT> r31 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r13 = r31 bufcolumn <NEXT> $ i27 = $ r13 [ $ i21 ] <NEXT> i42 = $ i28 - $ i27 <NEXT> r32 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r14 = r32 bufcolumn <NEXT> $ i29 = i0 + i40 <NEXT> $ r14 [ $ i21 ] = $ i29 <NEXT> i40 = i42 <NEXT> i38 = i38 + 1 <NEXT> goto label3 <NEXT> if $ i25 ! = $ i24 goto label4 <NEXT> label if i38 > = i37 goto label7 <NEXT> r33 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r3 = r33 bufline <NEXT> i43 = i35 + 1 <NEXT> $ r3 [ i39 ] = i35 <NEXT> r34 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r4 = r34 bufcolumn <NEXT> $ i12 = i0 + i40 <NEXT> $ r4 [ i39 ] = $ i12 <NEXT> label $ i44 = i38 <NEXT> label if i38 > = i37 goto label7 <NEXT> label r41 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r1 = r41 bufline <NEXT> $ i10 = $ r1 [ i39 ] <NEXT> r42 = org apache velocity runtime parser velocity char stream r0 <NEXT> r42 line = $ i10 <NEXT> r43 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ r2 = r43 bufcolumn <NEXT> $ i11 = $ r2 [ i39 ] <NEXT> r44 = org apache velocity runtime parser velocity char stream r0 <NEXT> r44 column = $ i11 <NEXT> return <NEXT> if $ i2 < $ i1 goto label1 <NEXT> label r21 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i4 = r21 bufsize <NEXT> r22 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i3 = r22 token begin <NEXT> $ i6 = $ i4 - $ i3 <NEXT> r23 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i5 = r23 bufpos <NEXT> $ i7 = $ i6 + $ i5 <NEXT> $ i9 = $ i7 + 1 <NEXT> r24 = org apache velocity runtime parser velocity char stream r0 <NEXT> $ i8 = r24 in buf <NEXT> i37 = $ i9 + $ i8 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache velocity runtime parser pool impl r0 <NEXT> $ r1 = r4 pool <NEXT> $ r2 = $ r1 get <NEXT> $ r3 = org apache velocity runtime parser parser $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache velocity runtime resource loader data source resource loader r0 <NEXT> r2 data source = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache velocity runtime resource loader resource loader r0 <NEXT> $ r1 = r2 class name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache velocity runtime resource loader u r l resource loader r0 <NEXT> $ i0 = r1 timeout <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ l0 = java lang system current time millis <NEXT> r1 = org apache velocity runtime resource resource r0 <NEXT> $ l1 = r1 modification check interval <NEXT> $ l2 = 1000l * $ l1 <NEXT> $ l3 = $ l0 + $ l2 <NEXT> r2 = org apache velocity runtime resource resource r0 <NEXT> r2 next check = $ l3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache velocity runtime resource resource manager impl r0 <NEXT> r2 = specialinvoke r5 get loader for resource r1 <NEXT> if r2 ! = null goto label1 <NEXT> return null <NEXT> if r2 ! = null goto label1 <NEXT> label $ r3 = r2 get class <NEXT> $ r4 = $ r3 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache velocity runtime runtime instance r0 <NEXT> $ r2 = r5 configuration <NEXT> $ r3 = $ r2 get string r1 <NEXT> $ r4 = org apache common lang3 string utils trim $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r17 = org apache velocity runtime velocimacro manager r0 <NEXT> $ z0 = r17 inline replaces global <NEXT> if $ z0 == 0 goto label1 <NEXT> if r2 == null goto label1 <NEXT> $ r9 = r2 get macros <NEXT> $ r10 = $ r9 get r1 <NEXT> r12 = org apache velocity runtime velocimacro manager $ macro entry $ r10 <NEXT> if r12 == null goto label1 <NEXT> $ r11 = r12 get proxy <NEXT> return $ r11 <NEXT> if r12 == null goto label1 <NEXT> label r18 = org apache velocity runtime velocimacro manager r0 <NEXT> $ z1 = specialinvoke r18 use namespaces <NEXT> if $ z1 == 0 goto label2 <NEXT> if r3 == null goto label2 <NEXT> $ r5 = r3 get macros <NEXT> $ r6 = $ r5 get r1 <NEXT> r13 = org apache velocity runtime velocimacro manager $ macro entry $ r6 <NEXT> $ r7 = r3 get macros <NEXT> $ i0 = $ r7 size <NEXT> if $ i0 < = 0 goto label2 <NEXT> if r13 == null goto label2 <NEXT> $ r8 = r13 get proxy <NEXT> return $ r8 <NEXT> if r13 == null goto label2 <NEXT> label r19 = org apache velocity runtime velocimacro manager r0 <NEXT> $ r14 = r19 global namespace <NEXT> $ r15 = $ r14 get r1 <NEXT> r16 = org apache velocity runtime velocimacro manager $ macro entry $ r15 <NEXT> if r16 == null goto label3 <NEXT> $ r4 = r16 get proxy <NEXT> return $ r4 <NEXT> if r16 == null goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r3 = org apache velocity util introspection info r0 <NEXT> $ r1 = r3 get template name <NEXT> r4 = org apache velocity util introspection info r0 <NEXT> $ i0 = r4 get line <NEXT> r5 = org apache velocity util introspection info r0 <NEXT> $ i1 = r5 get column <NEXT> $ r2 = org apache velocity util string utils format file string $ r1 $ i0 $ i1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r19 = new org apache velocity util introspection class map <NEXT> r21 = org apache velocity util introspection introspector cache r0 <NEXT> $ r8 = r21 log <NEXT> r22 = org apache velocity util introspection introspector cache r0 <NEXT> $ r7 = r22 conversion handler <NEXT> specialinvoke r19 < init > r1 $ r8 $ r7 <NEXT> r20 = new org apache velocity util introspection class field map <NEXT> r23 = org apache velocity util introspection introspector cache r0 <NEXT> $ r10 = r23 log <NEXT> specialinvoke r20 < init > r1 $ r10 <NEXT> r24 = org apache velocity util introspection introspector cache r0 <NEXT> $ r11 = r24 class map cache <NEXT> entermonitor $ r11 <NEXT> label r25 = org apache velocity util introspection introspector cache r0 <NEXT> $ r12 = r25 class map cache <NEXT> $ r12 put r1 r19 <NEXT> r26 = org apache velocity util introspection introspector cache r0 <NEXT> $ r14 = r26 class field map cache <NEXT> $ r14 put r1 r20 <NEXT> r27 = org apache velocity util introspection introspector cache r0 <NEXT> $ r16 = r27 class name cache <NEXT> $ r17 = r1 get name <NEXT> $ r16 add $ r17 <NEXT> exitmonitor $ r11 <NEXT> label goto label5 <NEXT> label return r19 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get template name <NEXT> $ i0 = r0 get line <NEXT> $ i1 = r0 get column <NEXT> $ r2 = org apache velocity util string utils format file string $ r1 $ i0 $ i1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return \ `` 2 0\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r5 append \ `` $ { \ `` <NEXT> $ r5 append r1 <NEXT> $ r5 append \ `` \ `` <NEXT> $ r5 append r2 <NEXT> $ r5 append \ `` \ `` <NEXT> $ i0 = lengthof r3 <NEXT> if $ i0 == 0 goto label3 <NEXT> i3 = 0 <NEXT> label $ i1 = lengthof r3 <NEXT> $ i2 = $ i1 - 1 <NEXT> if i3 > = $ i2 goto label2 <NEXT> $ r16 = $ r5 append \ `` $ \ `` <NEXT> $ r17 = r3 [ i3 ] <NEXT> $ r16 append $ r17 <NEXT> $ r5 append \ <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i2 goto label2 <NEXT> label $ r13 = $ r5 append \ `` $ \ `` <NEXT> $ r14 = r3 [ i3 ] <NEXT> $ r13 append $ r14 <NEXT> label $ r5 append \ `` } \ `` <NEXT> $ r12 = $ r5 to string <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache velocity script velocity script engine <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = javax script script engine r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io vertx ext bridge bridge option r0 <NEXT> r2 outbound permit = r1 <NEXT> r3 = io vertx ext bridge bridge option r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx core abstract verticle r0 <NEXT> $ r1 = r3 context <NEXT> $ r2 = $ r1 deployment i d <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io vertx core cli argument r0 <NEXT> r1 multi value = z0 <NEXT> r2 = io vertx core cli argument r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io vertx core cli option r0 <NEXT> r2 short name = r1 <NEXT> r3 = io vertx core cli option r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io vertx core cli option r0 <NEXT> $ r2 = r3 choice <NEXT> $ r2 add r1 <NEXT> r4 = io vertx core cli option r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io vertx core cli type argument r0 <NEXT> r2 converter = r1 <NEXT> r3 = io vertx core cli type argument r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = io vertx core cli usage message formatter r0 <NEXT> r3 build wrap r1 0 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx core deployment option r0 <NEXT> $ r1 = r2 config <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core dns impl decoder start of authority record r0 <NEXT> $ i0 = r1 refresh time <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io vertx core eventbus event bus option r0 <NEXT> r1 cluster = z0 <NEXT> r2 = io vertx core eventbus event bus option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core eventbus event bus option r0 <NEXT> $ i0 = r1 cluster public port <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core eventbus reply exception r0 <NEXT> $ i0 = r1 failure code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core file open option r0 <NEXT> $ z0 = r1 sync <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core file open option r0 <NEXT> $ z0 = r1 dsync <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io vertx core http http client option r0 <NEXT> r1 keep alive = z0 <NEXT> r2 = io vertx core http http client option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core http http client option r0 <NEXT> $ i0 = r1 max wait queue size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = io vertx core http http client option r0 <NEXT> r1 pool clean period = i0 <NEXT> r2 = io vertx core http http client option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io vertx core http http server option r0 <NEXT> r2 initial setting = r1 <NEXT> r3 = io vertx core http http server option r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io vertx core http http server option r0 <NEXT> r1 per frame web socket compression support = z0 <NEXT> r2 = io vertx core http http server option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io vertx core http impl vertx http2 connection handler r0 <NEXT> r2 remove handler = r1 <NEXT> r3 = io vertx core http impl vertx http2 connection handler r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx core http request option r0 <NEXT> $ r1 = r2 host <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = io vertx core http stream priority r0 <NEXT> r1 dependency = i0 <NEXT> r2 = io vertx core http stream priority r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx core http web socket connect option r0 <NEXT> $ r2 = r6 sub protocols <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r7 = io vertx core http web socket connect option r0 <NEXT> r7 sub protocol = r5 <NEXT> label r8 = io vertx core http web socket connect option r0 <NEXT> $ r3 = r8 sub protocols <NEXT> $ r3 add r1 <NEXT> r9 = io vertx core http web socket connect option r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx core impl future impl r0 <NEXT> $ r1 = r2 throwable <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core impl launcher command bare command r0 <NEXT> r1 run null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r8 = io vertx core impl launcher command vertx isolated deployer r0 <NEXT> r8 vertx = r2 <NEXT> $ z0 = r3 be worker <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r7 = \ `` deploy worker verticle\ `` <NEXT> goto label2 <NEXT> label r9 = io vertx core impl launcher command vertx isolated deployer r0 <NEXT> $ r6 = specialinvoke r9 create handler $ r7 r4 <NEXT> r2 deploy verticle r1 r3 $ r6 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r7 = \ `` deploy verticle\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r12 = io vertx core impl task queue r0 <NEXT> $ r5 = r12 task <NEXT> entermonitor $ r5 <NEXT> label r13 = io vertx core impl task queue r0 <NEXT> $ r7 = r13 task <NEXT> r11 = new io vertx core impl task queue $ task <NEXT> specialinvoke r11 < init > r1 r2 <NEXT> $ r7 add r11 <NEXT> r14 = io vertx core impl task queue r0 <NEXT> $ r8 = r14 current <NEXT> if $ r8 ! = null goto label2 <NEXT> r15 = io vertx core impl task queue r0 <NEXT> r15 current = r2 <NEXT> r16 = io vertx core impl task queue r0 <NEXT> $ r9 = r16 runner <NEXT> r2 execute $ r9 <NEXT> label exitmonitor $ r5 <NEXT> label goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx core json json array r0 <NEXT> $ r2 = r5 list <NEXT> if r1 == null goto label1 <NEXT> $ r3 = java util base64 get encoder <NEXT> $ r4 = $ r3 encode to string r1 <NEXT> goto label2 <NEXT> label $ r2 add $ r4 <NEXT> r6 = io vertx core json json array r0 <NEXT> return r6 <NEXT> if r1 == null goto label1 <NEXT> label $ r4 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> java util object require non null r1 <NEXT> r9 = io vertx core json json object r0 <NEXT> $ r4 = r9 map <NEXT> if r2 ! = null goto label1 <NEXT> $ r8 = null <NEXT> goto label2 <NEXT> label $ r4 put r1 $ r8 <NEXT> r10 = io vertx core json json object r0 <NEXT> return r10 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r5 = java util base64 get encoder <NEXT> $ r8 = $ r5 encode to string r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> java util object require non null r1 <NEXT> r9 = io vertx core json json object r0 <NEXT> $ r4 = r9 map <NEXT> if r2 ! = null goto label1 <NEXT> $ r8 = null <NEXT> goto label2 <NEXT> label $ r4 put r1 $ r8 <NEXT> r10 = io vertx core json json object r0 <NEXT> return r10 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r5 = java util base64 get encoder <NEXT> $ r8 = $ r5 encode to string r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx core json json object r0 <NEXT> $ r2 = r4 map <NEXT> $ r3 = $ r2 remove r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new io vertx core launcher <NEXT> specialinvoke $ r2 < init > <NEXT> $ r2 execute r0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io vertx core metric metric option r0 <NEXT> r1 enable = z0 <NEXT> r2 = io vertx core metric metric option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io vertx core net client option base r0 <NEXT> r2 proxy option = r1 <NEXT> r3 = io vertx core net client option base r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io vertx core net net server option r0 <NEXT> r1 sni = z0 <NEXT> r2 = io vertx core net net server option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core net network option r0 <NEXT> $ i0 = r1 send buffer size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = io vertx core net open s s l engine option r0 <NEXT> $ z0 = r1 session cache enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io vertx core net pfx option r0 <NEXT> r2 path = r1 <NEXT> r3 = io vertx core net pfx option r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> java util object require non null r1 \ `` proxy host may not be null\ `` <NEXT> r3 = io vertx core net proxy option r0 <NEXT> r3 host = r1 <NEXT> r4 = io vertx core net proxy option r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io vertx core net proxy option r0 <NEXT> r2 password = r1 <NEXT> r3 = io vertx core net proxy option r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx core net t c p s s l option r0 <NEXT> $ r1 = r2 crl value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = io vertx core vertx option r0 <NEXT> $ r1 = r3 event bus option <NEXT> $ r1 set cluster z0 <NEXT> r4 = io vertx core vertx option r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io vertx core vertx option r0 <NEXT> r1 ha enable = z0 <NEXT> r2 = io vertx core vertx option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex amqp amqp connection r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 exception handler r1 <NEXT> r5 = io vertx reactivex amqp amqp connection r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io vertx reactivex amqp amqp sender r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 close r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 get delegate <NEXT> $ r4 = io vertx amqpbridge amqp bridge create $ r3 r1 <NEXT> r2 = io vertx reactivex amqpbridge amqp bridge new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = io vertx reactivex cassandra mapper r0 <NEXT> $ r3 = r4 delegate <NEXT> $ r3 delete r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = io vertx reactivex cassandra mapper r0 <NEXT> $ r4 = r6 delegate <NEXT> r5 = new io vertx reactivex cassandra mapper $ 1 <NEXT> r7 = io vertx reactivex cassandra mapper r0 <NEXT> specialinvoke r5 < init > r7 r2 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r4 get r1 r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex circuitbreaker circuit breaker r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 open handler r1 <NEXT> r5 = io vertx reactivex circuitbreaker circuit breaker r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex core eventbus event bus r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex core eventbus event bus $ 9 <NEXT> r7 = io vertx reactivex core eventbus event bus r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 add inbound interceptor r8 <NEXT> r9 = io vertx reactivex core eventbus event bus r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = io vertx reactivex core http http client r0 <NEXT> $ r6 = r9 delegate <NEXT> r8 = new io vertx reactivex core http http client $ 1 <NEXT> r10 = io vertx reactivex core http http client r0 <NEXT> specialinvoke r8 < init > r10 r3 <NEXT> r11 = io vertx core handler r8 <NEXT> $ r7 = $ r6 request r1 r2 r11 <NEXT> r4 = io vertx reactivex core http http client request new instance $ r7 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = io vertx reactivex core http http client r0 <NEXT> $ r5 = r8 delegate <NEXT> r7 = new io vertx reactivex core http http client $ 13 <NEXT> r9 = io vertx reactivex core http http client r0 <NEXT> specialinvoke r7 < init > r9 r2 <NEXT> r10 = io vertx core handler r7 <NEXT> $ r6 = $ r5 get abs r1 r10 <NEXT> r3 = io vertx reactivex core http http client request new instance $ r6 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = io vertx reactivex core http http client r0 <NEXT> $ r5 = r8 delegate <NEXT> r7 = new io vertx reactivex core http http client $ 22 <NEXT> r9 = io vertx reactivex core http http client r0 <NEXT> specialinvoke r7 < init > r9 r2 <NEXT> r10 = io vertx core handler r7 <NEXT> $ r6 = $ r5 post ab r1 r10 <NEXT> r3 = io vertx reactivex core http http client request new instance $ r6 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r6 = io vertx reactivex core http http client r0 <NEXT> $ r4 = r6 delegate <NEXT> $ r5 = $ r4 head i0 r1 r2 <NEXT> r3 = io vertx reactivex core http http client request new instance $ r5 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = io vertx reactivex core http http client r0 <NEXT> $ r5 = r8 delegate <NEXT> r7 = new io vertx reactivex core http http client $ 39 <NEXT> r9 = io vertx reactivex core http http client r0 <NEXT> specialinvoke r7 < init > r9 r3 <NEXT> r10 = io vertx core handler r7 <NEXT> $ r5 option now r1 r2 r10 <NEXT> r11 = io vertx reactivex core http http client r0 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = io vertx reactivex core http http client r0 <NEXT> $ r5 = r8 delegate <NEXT> r7 = new io vertx reactivex core http http client $ 41 <NEXT> r9 = io vertx reactivex core http http client r0 <NEXT> specialinvoke r7 < init > r9 r2 <NEXT> r10 = io vertx core handler r7 <NEXT> $ r6 = $ r5 put r1 r10 <NEXT> r3 = io vertx reactivex core http http client request new instance $ r6 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = io vertx reactivex core http http client r0 <NEXT> $ r5 = r8 delegate <NEXT> r7 = new io vertx reactivex core http http client $ 50 <NEXT> r9 = io vertx reactivex core http http client r0 <NEXT> specialinvoke r7 < init > r9 r2 <NEXT> r10 = io vertx core handler r7 <NEXT> $ r6 = $ r5 delete ab r1 r10 <NEXT> r3 = io vertx reactivex core http http client request new instance $ r6 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = io vertx reactivex core http http client r0 <NEXT> $ r5 = r8 delegate <NEXT> r7 = new io vertx reactivex core http http client $ 53 <NEXT> r9 = io vertx reactivex core http http client r0 <NEXT> specialinvoke r7 < init > r9 r2 <NEXT> r10 = io vertx core handler r7 <NEXT> $ r5 websocket r1 r10 r3 <NEXT> r11 = io vertx reactivex core http http client r0 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r11 = io vertx reactivex core http http client r0 <NEXT> $ r6 = r11 delegate <NEXT> $ r7 = r3 get delegate <NEXT> r10 = new io vertx reactivex core http http client $ 60 <NEXT> r12 = io vertx reactivex core http http client r0 <NEXT> specialinvoke r10 < init > r12 r4 <NEXT> r13 = io vertx core handler r10 <NEXT> $ r6 websocket i0 r1 r2 $ r7 r13 r5 <NEXT> r14 = io vertx reactivex core http http client r0 <NEXT> return r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex core http http server request r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex core http http server request $ 4 <NEXT> r7 = io vertx reactivex core http http server request r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 custom frame handler r8 <NEXT> r9 = io vertx reactivex core http http server request r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex core http http server request r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 stream priority handler r1 <NEXT> r5 = io vertx reactivex core http http server request r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex core http http server response r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 close handler r1 <NEXT> r5 = io vertx reactivex core http http server response r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex core stream pipe r0 <NEXT> $ r2 = pipe $ lambda_rx to_1__1 bootstrap $ r4 r1 <NEXT> $ r3 = io vertx reactivex impl async result completable to completable $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext auth chain auth r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = r1 get delegate <NEXT> z0 = $ r2 remove $ r3 <NEXT> return z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext auth mongo hash strategy r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = r1 get delegate <NEXT> r2 = $ r3 get store pwd $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext auth mongo mongo auth r0 <NEXT> $ r2 = r5 delegate <NEXT> $ r3 = r1 get delegate <NEXT> $ r2 set hash strategy $ r3 <NEXT> r6 = io vertx reactivex ext auth mongo mongo auth r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r5 = io vertx reactivex ext auth oauth2 access token r0 <NEXT> $ r2 = r5 cached_1 <NEXT> if $ r2 == null goto label1 <NEXT> r6 = io vertx reactivex ext auth oauth2 access token r0 <NEXT> $ r4 = r6 cached_1 <NEXT> return $ r4 <NEXT> if $ r2 == null goto label1 <NEXT> label r7 = io vertx reactivex ext auth oauth2 access token r0 <NEXT> $ r3 = r7 delegate <NEXT> r1 = $ r3 refresh token <NEXT> r8 = io vertx reactivex ext auth oauth2 access token r0 <NEXT> r8 cached_1 = r1 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = io vertx ext auth oauth2 keycloak helper raw id token r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = io vertx reactivex ext auth oauth2 o auth2 auth r0 <NEXT> $ r4 = r6 delegate <NEXT> r5 = new io vertx reactivex ext auth oauth2 o auth2 auth $ 1 <NEXT> r7 = io vertx reactivex ext auth oauth2 o auth2 auth r0 <NEXT> specialinvoke r5 < init > r7 r2 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r4 get token r1 r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex ext auth oauth2 o auth2 auth r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex ext auth oauth2 o auth2 auth $ 3 <NEXT> r8 = io vertx reactivex ext auth oauth2 o auth2 auth r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 introspect token r1 r9 <NEXT> r10 = io vertx reactivex ext auth oauth2 o auth2 auth r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r4 = io vertx reactivex ext auth oauth2 o auth2 response r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 body <NEXT> r1 = io vertx reactivex core buffer buffer new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 get delegate <NEXT> $ r5 = io vertx ext auth oauth2 provider box auth create $ r4 r1 r2 <NEXT> r3 = io vertx reactivex ext auth oauth2 o auth2 auth new instance $ r5 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r5 = r0 get delegate <NEXT> $ r6 = io vertx ext auth oauth2 provider shopify auth create $ r5 r1 r2 r3 <NEXT> r4 = io vertx reactivex ext auth oauth2 o auth2 auth new instance $ r6 <NEXT> return r4 <END>
<BEG> $ r1 = io vertx ext auth vertx context p r n g current <NEXT> r0 = io vertx reactivex ext auth vertx context p r n g new instance $ r1 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get delegate <NEXT> $ r3 = io vertx ext consul consul client create $ r2 <NEXT> r1 = io vertx reactivex ext consul consul client new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext consul consul client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 create acl token r1 r2 <NEXT> r6 = io vertx reactivex ext consul consul client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext consul consul client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 register service r1 r2 <NEXT> r6 = io vertx reactivex ext consul consul client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext consul consul client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 maintenance service r1 r2 <NEXT> r6 = io vertx reactivex ext consul consul client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext consul consul client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 fail check r1 r2 <NEXT> r6 = io vertx reactivex ext consul consul client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext consul consul client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 list session r1 <NEXT> r5 = io vertx reactivex ext consul consul client r0 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 get delegate <NEXT> $ r5 = io vertx ext mongo mongo client create share $ r4 r1 r2 <NEXT> r3 = io vertx reactivex ext mongo mongo client new instance $ r5 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r5 = @ parameter4 <NEXT> r8 = io vertx reactivex ext mongo mongo client r0 <NEXT> $ r6 = r8 delegate <NEXT> $ r6 replace with option r1 r2 r3 r4 r5 <NEXT> r9 = io vertx reactivex ext mongo mongo client r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = io vertx reactivex ext mongo mongo client r0 <NEXT> $ r4 = r6 delegate <NEXT> $ r4 bulk write r1 r2 r3 <NEXT> r7 = io vertx reactivex ext mongo mongo client r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r7 = io vertx reactivex ext mongo mongo client r0 <NEXT> $ r5 = r7 delegate <NEXT> $ r5 find one r1 r2 r3 r4 <NEXT> r8 = io vertx reactivex ext mongo mongo client r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext mongo mongo client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 create collection r1 r2 <NEXT> r6 = io vertx reactivex ext mongo mongo client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io vertx reactivex ext shell cli completion r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 complete r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get delegate <NEXT> $ r3 = io vertx ext shell command command builder command $ r2 <NEXT> r1 = io vertx reactivex ext shell command command builder new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex ext shell command command builder r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex ext shell command command builder $ 2 <NEXT> r7 = io vertx reactivex ext shell command command builder r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 completion handler r8 <NEXT> r9 = io vertx reactivex ext shell command command builder r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext shell command command process r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 write r1 <NEXT> r5 = io vertx reactivex ext shell command command process r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext shell session session r0 <NEXT> $ r3 = r4 delegate <NEXT> r2 = $ r3 get r1 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get delegate <NEXT> $ r3 = io vertx ext shell shell server create $ r2 <NEXT> r1 = io vertx reactivex ext shell shell server new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext shell system job r0 <NEXT> $ r2 = r5 delegate <NEXT> $ r3 = r1 get delegate <NEXT> $ r2 set session $ r3 <NEXT> r6 = io vertx reactivex ext shell system job r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext shell term term r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 echo r1 <NEXT> r5 = io vertx reactivex ext shell term term r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext shell term term r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 close handler r1 <NEXT> r5 = io vertx reactivex ext shell term term r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext sql s q l connection r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 query r1 r2 <NEXT> r6 = io vertx reactivex ext sql s q l connection r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext stomp stomp client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 write frame handler r1 <NEXT> r5 = io vertx reactivex ext stomp stomp client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext stomp stomp client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 exception handler r1 <NEXT> r5 = io vertx reactivex ext stomp stomp client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext stomp stomp client connection r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 send r1 <NEXT> r5 = io vertx reactivex ext stomp stomp client connection r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext stomp stomp client connection r0 <NEXT> $ r4 = r5 delegate <NEXT> r3 = $ r4 subscribe r1 r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex ext stomp stomp server handler $ 5 <NEXT> r7 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 unsubscribe handler r8 <NEXT> r9 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = r1 get delegate <NEXT> $ r2 on close $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex ext stomp stomp server handler $ 9 <NEXT> r7 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 abort handler r8 <NEXT> r9 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex ext stomp stomp server handler $ 10 <NEXT> r7 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 begin handler r8 <NEXT> r9 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 bridge r1 <NEXT> r5 = io vertx reactivex ext stomp stomp server handler r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext unit collect event bus collector r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 register r1 <NEXT> r2 = io vertx reactivex core eventbus message consumer new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx reactivex ext unit completion r0 <NEXT> $ r1 = r2 delegate <NEXT> $ r1 await <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex ext unit report test case report r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex ext unit report test case report $ 1 <NEXT> r7 = io vertx reactivex ext unit report test case report r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 end handler r8 <NEXT> r9 = io vertx reactivex ext unit report test case report r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex ext unit test context r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 async assert success <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex ext unit test suite r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex ext unit test suite $ 4 <NEXT> r7 = io vertx reactivex ext unit test suite r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 after each r8 <NEXT> r9 = io vertx reactivex ext unit test suite r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext web api contract openapi3 open a p i3 router factory r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 mount service from tag r1 r2 <NEXT> r6 = io vertx reactivex ext web api contract openapi3 open a p i3 router factory r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io vertx reactivex ext web api request parameter r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 set name r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex ext web api request parameter r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 get long <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx reactivex ext web api request parameter r0 <NEXT> $ r1 = r2 delegate <NEXT> z0 = $ r1 be double <NEXT> return z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext web api request parameter r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 path parameter r1 <NEXT> r2 = io vertx reactivex ext web api request parameter new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext web api request parameter r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 header parameter r1 <NEXT> r2 = io vertx reactivex ext web api request parameter new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r5 = io vertx reactivex ext web api validation h t t p request validation handler r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 add query param r1 r2 z0 <NEXT> r6 = io vertx reactivex ext web api validation h t t p request validation handler r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r5 = io vertx reactivex ext web api validation h t t p request validation handler r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 add header param r1 r2 z0 <NEXT> r6 = io vertx reactivex ext web api validation h t t p request validation handler r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext web api validation h t t p request validation handler r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 add x m l body schema r1 <NEXT> r5 = io vertx reactivex ext web api validation h t t p request validation handler r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext web api validation h t t p request validation handler r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 add multipart require file r1 r2 <NEXT> r6 = io vertx reactivex ext web api validation h t t p request validation handler r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext web api validation parameter type validator r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 be valid collection r1 <NEXT> r2 = io vertx reactivex ext web api request parameter new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx reactivex ext web api validation parameter type validator r0 <NEXT> $ r1 = r2 delegate <NEXT> z0 = $ r1 have default <NEXT> return z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get delegate <NEXT> $ r3 = io vertx ext web api validation parameter type validator create array type validator $ r2 <NEXT> r1 = io vertx reactivex ext web api validation parameter type validator new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext web client http request r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 method r1 <NEXT> r5 = io vertx reactivex ext web client http request r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r4 = io vertx reactivex ext web client http request r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 query params <NEXT> r1 = io vertx reactivex core multi map new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ r1 = new io vertx reactivex ext web client predicate response predicate <NEXT> specialinvoke $ r1 < init > r0 <NEXT> goto label2 <NEXT> label return $ r1 <NEXT> if r0 == null goto label1 <NEXT> label $ r1 = null <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx reactivex ext web client predicate response predicate result r0 <NEXT> $ r1 = r2 delegate <NEXT> z0 = $ r1 succeed <NEXT> return z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get delegate <NEXT> $ r3 = io vertx ext web client web client create $ r2 <NEXT> r1 = io vertx reactivex ext web client web client new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex ext web client web client r0 <NEXT> $ r3 = r6 delegate <NEXT> $ r4 = $ r3 patch ab r1 <NEXT> $ r5 = io vertx reactivex ext web client web client type_arg_29 <NEXT> r2 = io vertx reactivex ext web client http request new instance $ r4 $ r5 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex ext web handler basic auth handler r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = r1 get delegate <NEXT> $ r3 authorize $ r4 r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ r1 = new io vertx reactivex ext web handler basic auth handler <NEXT> specialinvoke $ r1 < init > r0 <NEXT> goto label2 <NEXT> label return $ r1 <NEXT> if r0 == null goto label1 <NEXT> label $ r1 = null <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = io vertx reactivex ext web handler body handler r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set merge form attribute z0 <NEXT> r4 = io vertx reactivex ext web handler body handler r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext web handler cors handler r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 allow method r1 <NEXT> r5 = io vertx reactivex ext web handler cors handler r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext web handler cors handler r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 expose header r1 <NEXT> r5 = io vertx reactivex ext web handler cors handler r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = io vertx reactivex ext web handler c s r f handler r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set nag http z0 <NEXT> r4 = io vertx reactivex ext web handler c s r f handler r0 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ r2 = r0 get delegate <NEXT> $ r3 = io vertx ext web handler digest auth handler create $ r2 l0 <NEXT> r1 = io vertx reactivex ext web handler digest auth handler new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ r1 = new io vertx reactivex ext web handler form login handler <NEXT> specialinvoke $ r1 < init > r0 <NEXT> goto label2 <NEXT> label return $ r1 <NEXT> if r0 == null goto label1 <NEXT> label $ r1 = null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = new io vertx reactivex ext web handler multi tenant handler $ 2 <NEXT> specialinvoke r5 < init > r0 <NEXT> r6 = java util function function r5 <NEXT> $ r4 = io vertx ext web handler multi tenant handler create r6 r1 <NEXT> r2 = io vertx reactivex ext web handler multi tenant handler new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 get delegate <NEXT> $ r4 = io vertx ext web handler o auth2 auth handler create $ r3 r1 <NEXT> r2 = io vertx reactivex ext web handler o auth2 auth handler new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r3 = io vertx reactivex ext web handler session handler r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set session timeout l0 <NEXT> r4 = io vertx reactivex ext web handler session handler r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = io vertx reactivex ext web handler sockjs sock j s handler r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex ext web handler sockjs sock j s handler $ 1 <NEXT> r8 = io vertx reactivex ext web handler sockjs sock j s handler r0 <NEXT> specialinvoke r6 < init > r8 r1 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r5 = $ r4 socket handler r9 <NEXT> r2 = io vertx reactivex ext web router new instance $ r5 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex ext web handler sockjs sock j s socket r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 uri <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext web handler static handler r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 set directory template r1 <NEXT> r5 = io vertx reactivex ext web handler static handler r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx reactivex ext web language header r0 <NEXT> $ r1 = r2 delegate <NEXT> i0 = $ r1 weight order <NEXT> return i0 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex ext web m i m e header r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 component <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex ext web route r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 produce r1 <NEXT> r5 = io vertx reactivex ext web route r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext web router r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 option with regex r1 <NEXT> r2 = io vertx reactivex ext web route new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex ext web router r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 put with regex r1 <NEXT> r2 = io vertx reactivex ext web route new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r4 = io vertx reactivex ext web router r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 delete <NEXT> r1 = io vertx reactivex ext web route new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = io vertx reactivex ext web router r0 <NEXT> $ r3 = r6 delegate <NEXT> $ r4 = r2 get delegate <NEXT> $ r3 mount sub router r1 $ r4 <NEXT> r7 = io vertx reactivex ext web router r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r6 = io vertx reactivex ext web router r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex ext web router $ 1 <NEXT> r7 = io vertx reactivex ext web router r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 error handler i0 r8 <NEXT> r9 = io vertx reactivex ext web router r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = io vertx reactivex ext web rout context r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 fail i0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx reactivex ext web rout context r0 <NEXT> $ r1 = r2 delegate <NEXT> $ r1 clear user <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = io vertx reactivex ext web sstore session store r0 <NEXT> $ r3 = r6 delegate <NEXT> $ r4 = r1 get delegate <NEXT> $ r3 init $ r4 r2 <NEXT> r7 = io vertx reactivex ext web sstore session store r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r4 = io vertx reactivex ext web sstore session store r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r3 = $ r2 create session l0 <NEXT> r1 = io vertx reactivex ext web session new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = io vertx reactivex ext web templ freemarker free marker template engine r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 set max cache size i0 <NEXT> r4 = io vertx reactivex ext web templ freemarker free marker template engine r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex kafka client consumer kafka consumer r0 <NEXT> $ r1 = kafka consumer $ lambda_rx assignment_8__10 bootstrap $ r3 <NEXT> $ r2 = io vertx reactivex impl async result single to single $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io vertx reactivex kafka client consumer kafka consumer r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 pause r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex kafka client consumer kafka consumer r0 <NEXT> $ r2 = kafka consumer $ lambda_rx partition for_23__25 bootstrap $ r4 r1 <NEXT> $ r3 = io vertx reactivex impl async result single to single $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get delegate <NEXT> $ r3 = io vertx mqtt mqtt client create $ r2 <NEXT> r1 = io vertx reactivex mqtt mqtt client new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> z1 = @ parameter4 <NEXT> r7 = io vertx reactivex mqtt mqtt client r0 <NEXT> $ r4 = r7 delegate <NEXT> $ r5 = r2 get delegate <NEXT> $ r4 publish r1 $ r5 r3 z0 z1 <NEXT> r8 = io vertx reactivex mqtt mqtt client r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r4 = io vertx reactivex mqtt mqtt client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 subscribe r1 i0 <NEXT> r5 = io vertx reactivex mqtt mqtt client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex mqtt mqtt endpoint r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 publish acknowledge handler r1 <NEXT> r5 = io vertx reactivex mqtt mqtt endpoint r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = io vertx reactivex mqtt mqtt endpoint r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 publish acknowledge i0 <NEXT> r4 = io vertx reactivex mqtt mqtt endpoint r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex mqtt mqtt server r0 <NEXT> $ r1 = r3 delegate <NEXT> $ r1 listen <NEXT> r4 = io vertx reactivex mqtt mqtt server r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex mysqlclient my s q l connection r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 reset connection r1 <NEXT> r5 = io vertx reactivex mysqlclient my s q l connection r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r6 = io vertx reactivex rabbitmq rabbit m q client r0 <NEXT> $ r5 = r6 delegate <NEXT> $ r5 basic publish r1 r2 r3 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = io vertx reactivex rabbitmq rabbit m q client r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 wait for confirms l0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = io vertx reactivex rabbitmq rabbit m q client r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 basic qos i0 r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get delegate <NEXT> $ r3 = io vertx redis client redis create client $ r2 <NEXT> r1 = io vertx reactivex redis client redis new instance $ r3 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 18 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 config r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 33 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 flushall r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 39 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 georadius r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 40 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 georadius ro r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r5 = r8 delegate <NEXT> r7 = new io vertx reactivex redis client redis a p i $ 48 <NEXT> r9 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r7 < init > r9 r3 <NEXT> r10 = io vertx core handler r7 <NEXT> $ r5 hexists r1 r2 r10 <NEXT> r11 = io vertx reactivex redis client redis a p i r0 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 74 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 lpop r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 76 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 lpushx r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r9 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r6 = r9 delegate <NEXT> r8 = new io vertx reactivex redis client redis a p i $ 77 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r8 < init > r10 r4 <NEXT> r11 = io vertx core handler r8 <NEXT> $ r6 lrange r1 r2 r3 r11 <NEXT> r12 = io vertx reactivex redis client redis a p i r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r9 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r6 = r9 delegate <NEXT> r8 = new io vertx reactivex redis client redis a p i $ 78 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r8 < init > r10 r4 <NEXT> r11 = io vertx core handler r8 <NEXT> $ r6 lrem r1 r2 r3 r11 <NEXT> r12 = io vertx reactivex redis client redis a p i r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 96 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 pfdebug r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r3 = r6 delegate <NEXT> r5 = new io vertx reactivex redis client redis a p i $ 98 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r5 < init > r7 r1 <NEXT> r8 = io vertx core handler r5 <NEXT> $ r3 pfselftest r8 <NEXT> r9 = io vertx reactivex redis client redis a p i r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 106 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 pubsub r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r9 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r6 = r9 delegate <NEXT> r8 = new io vertx reactivex redis client redis a p i $ 134 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r8 < init > r10 r4 <NEXT> r11 = io vertx core handler r8 <NEXT> $ r6 setrange r1 r2 r3 r11 <NEXT> r12 = io vertx reactivex redis client redis a p i r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 145 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 srandmember r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 163 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 watch r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r9 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r6 = r9 delegate <NEXT> r8 = new io vertx reactivex redis client redis a p i $ 180 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r8 < init > r10 r4 <NEXT> r11 = io vertx core handler r8 <NEXT> $ r6 zcount r1 r2 r3 r11 <NEXT> r12 = io vertx reactivex redis client redis a p i r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = io vertx reactivex redis client redis a p i r0 <NEXT> $ r4 = r7 delegate <NEXT> r6 = new io vertx reactivex redis client redis a p i $ 195 <NEXT> r8 = io vertx reactivex redis client redis a p i r0 <NEXT> specialinvoke r6 < init > r8 r2 <NEXT> r9 = io vertx core handler r6 <NEXT> $ r4 zrevrangebylex r1 r9 <NEXT> r10 = io vertx reactivex redis client redis a p i r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex redis client response r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 to long <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io vertx reactivex redis client response r0 <NEXT> $ r1 = r2 delegate <NEXT> i0 = $ r1 size <NEXT> return i0 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex redis client response r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 to string <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 blpop many r1 i0 r2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex redis redis client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 client list r1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex redis redis client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 command getkeys r1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 del r1 r2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> $ r4 = r6 delegate <NEXT> $ r4 hget r1 r2 r3 <NEXT> r7 = io vertx reactivex redis redis client r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> $ r4 = r6 delegate <NEXT> $ r4 hmget r1 r2 r3 <NEXT> r7 = io vertx reactivex redis redis client r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 incr r1 r2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex redis redis client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 lastsave r1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 llen r1 r2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 psubscribe r1 r2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex redis redis client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 pubsub numpat r1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> $ r4 = r6 delegate <NEXT> $ r4 sdiff r1 r2 r3 <NEXT> r7 = io vertx reactivex redis redis client r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex redis redis client r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 time r1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r5 = @ parameter4 <NEXT> r8 = io vertx reactivex redis redis client r0 <NEXT> $ r6 = r8 delegate <NEXT> $ r6 zrangebyscore r1 r2 r3 r4 r5 <NEXT> r9 = io vertx reactivex redis redis client r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> $ r4 = r6 delegate <NEXT> $ r4 zrem many r1 r2 r3 <NEXT> r7 = io vertx reactivex redis redis client r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> l1 = @ parameter2 <NEXT> r2 = @ parameter3 <NEXT> r3 = @ parameter4 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> $ r4 = r6 delegate <NEXT> $ r4 zrevrange r1 l0 l1 r2 r3 <NEXT> r7 = io vertx reactivex redis redis client r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r5 = @ parameter4 <NEXT> r8 = io vertx reactivex redis redis client r0 <NEXT> $ r6 = r8 delegate <NEXT> $ r6 zrevrangebyscore r1 r2 r3 r4 r5 <NEXT> r9 = io vertx reactivex redis redis client r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r7 = io vertx reactivex redis redis client r0 <NEXT> $ r5 = r7 delegate <NEXT> $ r5 hscan r1 r2 r3 r4 <NEXT> r8 = io vertx reactivex redis redis client r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = io vertx reactivex redis redis client r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r3 touch r1 r2 <NEXT> r6 = io vertx reactivex redis redis client r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex redis sentinel redis sentinel r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 flush config r1 <NEXT> r5 = io vertx reactivex redis sentinel redis sentinel r0 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = io vertx servicediscovery type mongo data source create record r0 r1 r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = io vertx servicediscovery type redis data source create record r0 r1 r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = io vertx reactivex sqlclient row r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 get column name i0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex sqlclient row r0 <NEXT> $ r3 = r4 delegate <NEXT> r2 = $ r3 get long r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex sqlclient row r0 <NEXT> $ r3 = r4 delegate <NEXT> r2 = $ r3 get double r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex sqlclient row r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 get buffer r1 <NEXT> r2 = io vertx reactivex core buffer buffer new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r3 = io vertx reactivex sqlclient sql result r0 <NEXT> $ r2 = r3 delegate <NEXT> r1 = $ r2 column name <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io vertx reactivex sqlclient tuple r0 <NEXT> $ r2 = r4 delegate <NEXT> $ r2 add float r1 <NEXT> r5 = io vertx reactivex sqlclient tuple r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io vertx reactivex sqlclient tuple r0 <NEXT> $ r3 = r5 delegate <NEXT> $ r4 = $ r3 add integer array r1 <NEXT> r2 = io vertx reactivex sqlclient tuple new instance $ r4 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = org rnorth visibleassertions visible assertion in quote if not null r1 <NEXT> r5 = org rnorth visibleassertions visible assertion in quote if not null r2 <NEXT> $ z0 = org rnorth visibleassertions visible assertion be both null r1 r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> org rnorth visibleassertions visible assertion pass r0 <NEXT> goto label3 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ d0 = r2 double value <NEXT> $ d1 = r1 double value <NEXT> $ d2 = $ d0 - $ d1 <NEXT> $ d3 = java lang math ab $ d2 <NEXT> $ d4 = r3 double value <NEXT> $ b0 = $ d3 cmpg $ d4 <NEXT> if $ b0 > = 0 goto label2 <NEXT> label $ r6 = new java lang string builder <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = $ r6 append r5 <NEXT> $ r8 = $ r7 append \ `` differs from expect \ `` <NEXT> $ r9 = $ r8 append r4 <NEXT> $ r10 = $ r9 append \ `` by more than allow amount \ `` <NEXT> $ r11 = $ r10 append r3 <NEXT> $ r12 = $ r11 append \ `` \ `` <NEXT> $ r13 = $ r12 to string <NEXT> org rnorth visibleassertions visible assertion fail r0 $ r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache maven wagon event transfer event support r0 <NEXT> $ r2 = r3 listener <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache maven wagon event wagon event r0 <NEXT> r1 timestamp = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven wagon repository repository permission r0 <NEXT> $ r1 = r2 file mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ b3 = l0 cmp 0l <NEXT> if $ b3 > 0 goto label1 <NEXT> return 4096 <NEXT> if $ b3 > 0 goto label1 <NEXT> label l1 = l0 409600l <NEXT> l2 = l1 * 4096l <NEXT> $ b4 = l2 cmp 2147483647l <NEXT> if $ b4 < = 0 goto label2 <NEXT> return 524288 <NEXT> if $ b4 < = 0 goto label2 <NEXT> label $ i5 = int l2 <NEXT> $ i6 = java lang math max 4096 $ i5 <NEXT> $ i7 = java lang math min 524288 $ i6 <NEXT> return $ i7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org eclipse jetty util string util truncate r0 123 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r1 [ i1 ] <NEXT> r6 = org eclipse jetty websocket client client upgrade request r0 <NEXT> $ r4 = r6 extension <NEXT> $ r5 = org eclipse jetty websocket api extension config parse r3 <NEXT> $ r4 add $ r5 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r5 add r2 <NEXT> r6 = org eclipse jetty websocket client client upgrade request r0 <NEXT> r6 set header r1 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jetty websocket servlet servlet upgrade request r0 <NEXT> $ r1 = r2 request <NEXT> r3 = javax servlet http http servlet request $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> i1 = @ parameter3 <NEXT> i2 = @ parameter4 <NEXT> if i0 < 0 goto label1 <NEXT> $ i4 = i0 + i2 <NEXT> $ i3 = lengthof r0 <NEXT> if $ i4 < = $ i3 goto label2 <NEXT> label return 0 <NEXT> if $ i4 < = $ i3 goto label2 <NEXT> label if i1 < 0 goto label3 <NEXT> $ i6 = i1 + i2 <NEXT> $ i5 = lengthof r1 <NEXT> if $ i6 < = $ i5 goto label4 <NEXT> label return 0 <NEXT> if $ i6 < = $ i5 goto label4 <NEXT> label i11 = 0 <NEXT> label if i11 > = i2 goto label7 <NEXT> $ i7 = i11 + i0 <NEXT> $ b10 = r0 [ $ i7 ] <NEXT> $ i8 = i11 + i1 <NEXT> $ b9 = r1 [ $ i8 ] <NEXT> if $ b10 == $ b9 goto label6 <NEXT> return 0 <NEXT> if $ b10 == $ b9 goto label6 <NEXT> label i11 = i11 + 1 <NEXT> goto label5 <NEXT> label if i11 > = i2 goto label7 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i2 = @ parameter3 <NEXT> i7 = 0 <NEXT> label if i7 > = i2 goto label3 <NEXT> $ i3 = i1 + i7 <NEXT> $ b5 = r0 [ $ i3 ] <NEXT> $ b4 = byte i0 <NEXT> if $ b5 ! = $ b4 goto label2 <NEXT> $ i6 = i1 + i7 <NEXT> return $ i6 <NEXT> if $ b5 ! = $ b4 goto label2 <NEXT> label i7 = i7 + 1 <NEXT> goto label1 <NEXT> label if i7 > = i2 goto label3 <NEXT> label return -1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return \ `` null\ `` <NEXT> if r0 ! = null goto label1 <NEXT> label $ z0 = r0 instanceof java lang object [ ] <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r12 = java lang object [ ] r0 <NEXT> $ r13 = java util array deep to string $ r12 <NEXT> return $ r13 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r2 = r0 get class <NEXT> $ z1 = $ r2 be array <NEXT> if $ z1 == 0 goto label6 <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r4 append 91 <NEXT> i1 = 0 <NEXT> label $ i0 = java lang reflect array get length r0 <NEXT> if i1 > = $ i0 goto label5 <NEXT> if i1 == 0 goto label4 <NEXT> $ r4 append \ <NEXT> label $ r8 = java lang reflect array get r0 i1 <NEXT> $ r9 = java lang string value of $ r8 <NEXT> $ r4 append $ r9 <NEXT> i1 = i1 + 1 <NEXT> goto label3 <NEXT> if i1 > = $ i0 goto label5 <NEXT> label $ r4 append 93 <NEXT> $ r7 = $ r4 to string <NEXT> return $ r7 <NEXT> if $ z1 == 0 goto label6 <NEXT> label $ r3 = r0 to string <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = org wildfly common context context permission parse action r1 <NEXT> r3 = org wildfly common context context permission r0 <NEXT> $ r2 = r3 with action bit $ i0 <NEXT> return $ r2 <END>
<BEG> i2 = 2147483647 <NEXT> r0 = org wildfly common cpu cache info cache level <NEXT> i0 = lengthof r0 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label3 <NEXT> r1 = r0 [ i3 ] <NEXT> $ r2 = r1 get cache type <NEXT> $ z0 = $ r2 be data <NEXT> if $ z0 == 0 goto label2 <NEXT> i1 = r1 get cache line size <NEXT> if i1 == 0 goto label2 <NEXT> if i1 > = i2 goto label2 <NEXT> i2 = i1 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label3 <NEXT> label if i2 ! = 2147483647 goto label4 <NEXT> $ i4 = 0 <NEXT> goto label5 <NEXT> label return $ i4 <NEXT> label if i2 ! = 2147483647 goto label4 <NEXT> label $ i4 = i2 <END>
<BEG> r0 = @ this <NEXT> r1 = org wildfly common cpu cache level info r0 <NEXT> $ i0 = r1 cache line size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org wildfly common expression expression r0 <NEXT> $ r1 = r2 reference string <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org wildfly common flag flag r0 <NEXT> $ z0 = r3 contain r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = org wildfly common flag flag r0 <NEXT> $ z1 = r4 contain r2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r4 = new java io byte array output stream <NEXT> specialinvoke r4 < init > <NEXT> r5 = org wildfly common iteration byte iterator r0 <NEXT> $ r2 = r5 drain to r4 <NEXT> $ r3 = $ r2 to byte array <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 == 0 goto label1 <NEXT> r5 = org wildfly common iteration code point iterator r0 <NEXT> $ z0 = r5 have next <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r3 = org wildfly common iteration code point iterator empty <NEXT> return $ r3 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r4 = new org wildfly common iteration delimit code point iterator <NEXT> r6 = org wildfly common iteration code point iterator r0 <NEXT> specialinvoke r4 < init > r6 r1 <NEXT> r7 = org wildfly common iteration code point iterator r4 <NEXT> return r7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> $ r1 = org wildfly common iteration code point iterator of utf8 byte r0 0 $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = code point iterator $ lambda_skip cr lf_0__1 bootstrap $ <NEXT> r3 = org wildfly common iteration code point iterator r0 <NEXT> $ r2 = r3 skip $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = org wildfly common lock spin lock r0 <NEXT> r1 = r5 owner <NEXT> $ r2 = java lang thread current thread <NEXT> if r1 ! = $ r2 goto label1 <NEXT> r6 = org wildfly common lock spin lock r0 <NEXT> $ i1 = r6 level <NEXT> $ i2 = $ i1 + 1 <NEXT> r7 = org wildfly common lock spin lock r0 <NEXT> r7 level = $ i2 <NEXT> return 1 <NEXT> if r1 ! = $ r2 goto label1 <NEXT> label if r1 ! = null goto label2 <NEXT> $ r3 = org wildfly common lock j d k specific unsafe <NEXT> $ l0 = org wildfly common lock spin lock owner offset <NEXT> $ r4 = java lang thread current thread <NEXT> $ z0 = $ r3 compare and swap object r0 $ l0 null $ r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> r8 = org wildfly common lock spin lock r0 <NEXT> r8 level = 1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 0 <END>
<BEG> i0 = @ parameter0 <NEXT> org wildfly common assert check minimum parameter \ `` value\ <NEXT> org wildfly common assert check maximum parameter \ `` value\ <NEXT> if i0 > 1 goto label1 <NEXT> $ i3 = i0 <NEXT> goto label2 <NEXT> label return $ i3 <NEXT> if i0 > 1 goto label1 <NEXT> label $ i1 = i0 - 1 <NEXT> $ i2 = java lang integer high one bit $ i1 <NEXT> $ i3 = $ i2 < < 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org wildfly common net cidr address r0 <NEXT> $ i0 = r1 netmask bit <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org wildfly common net inet parse inet6 address to byte r0 <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = r0 get user info <NEXT> if r3 ! = null goto label2 <NEXT> $ r1 = \ `` domain\ `` <NEXT> $ r2 = r0 get scheme <NEXT> $ z0 = $ r1 equal $ r2 <NEXT> if $ z0 == 0 goto label2 <NEXT> r4 = r0 get scheme specific part <NEXT> i0 = r4 last index of 64 <NEXT> if i0 ! = -1 goto label1 <NEXT> return null <NEXT> if i0 ! = -1 goto label1 <NEXT> label r3 = r4 substring 0 i0 <NEXT> label if r3 == null goto label3 <NEXT> i1 = r3 index of 58 <NEXT> if i1 == -1 goto label3 <NEXT> r3 = r3 substring 0 i1 <NEXT> label return r3 <END>
<BEG> r0 = @ this <NEXT> r35 = new java lang string builder <NEXT> specialinvoke r35 < init > <NEXT> $ r3 = r35 append \ `` map length = \ `` <NEXT> r36 = org wildfly common rpc identity int map r0 <NEXT> $ r4 = r36 key <NEXT> $ i1 = lengthof $ r4 <NEXT> $ r5 = $ r3 append $ i1 <NEXT> $ r6 = $ r5 append \ <NEXT> r37 = org wildfly common rpc identity int map r0 <NEXT> $ i2 = r37 count <NEXT> $ r7 = $ r6 append $ i2 <NEXT> $ r8 = $ r7 append \ <NEXT> r38 = org wildfly common rpc identity int map r0 <NEXT> $ i3 = r38 resize count <NEXT> $ r9 = $ r8 append $ i3 <NEXT> $ r9 append 10 <NEXT> i8 = 0 <NEXT> label r39 = org wildfly common rpc identity int map r0 <NEXT> $ r11 = r39 key <NEXT> $ i4 = lengthof $ r11 <NEXT> if i8 > = $ i4 goto label4 <NEXT> $ r13 = r35 append 91 <NEXT> $ r14 = $ r13 append i8 <NEXT> $ r14 append \ `` ] = \ `` <NEXT> r40 = org wildfly common rpc identity int map r0 <NEXT> $ r16 = r40 key <NEXT> $ r17 = $ r16 [ i8 ] <NEXT> if $ r17 == null goto label2 <NEXT> r41 = org wildfly common rpc identity int map r0 <NEXT> $ r20 = r41 key <NEXT> $ r21 = $ r20 [ i8 ] <NEXT> i0 = java lang system identity hash code $ r21 <NEXT> $ r22 = r35 append \ `` { \ `` <NEXT> r42 = org wildfly common rpc identity int map r0 <NEXT> $ r23 = r42 key <NEXT> $ r24 = $ r23 [ i8 ] <NEXT> $ r25 = $ r22 append $ r24 <NEXT> $ r26 = $ r25 append \ `` hash \ `` <NEXT> $ r27 = $ r26 append i0 <NEXT> $ r28 = $ r27 append \ <NEXT> r43 = org wildfly common rpc identity int map r0 <NEXT> $ r29 = r43 key <NEXT> $ i5 = lengthof $ r29 <NEXT> $ i6 = i0 % $ i5 <NEXT> $ r30 = $ r28 append $ i6 <NEXT> $ r31 = $ r30 append \ `` = > \ `` <NEXT> r44 = org wildfly common rpc identity int map r0 <NEXT> $ r32 = r44 value <NEXT> $ i7 = $ r32 [ i8 ] <NEXT> $ r33 = $ r31 append $ i7 <NEXT> $ r33 append \ `` } \ `` <NEXT> goto label3 <NEXT> label r35 append 10 <NEXT> i8 = i8 + 1 <NEXT> goto label1 <NEXT> if $ r17 == null goto label2 <NEXT> label r35 append \ `` blank \ `` <NEXT> if i8 > = $ i4 goto label4 <NEXT> label $ r12 = r35 to string <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org wildfly common assert check not null param \ `` output\ <NEXT> r5 = new org wildfly common rpc identity int map <NEXT> specialinvoke r5 < init > <NEXT> r6 = new java util hash map <NEXT> specialinvoke r6 < init > <NEXT> r7 = org wildfly common rpc remote exception cause r0 <NEXT> specialinvoke r7 write to stream r1 r5 r6 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com ctc wstx dtd d t d validator base r0 <NEXT> r1 m norm attrs = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i1 = 0 <NEXT> r3 = com ctc wstx dtd d t d validator base r0 <NEXT> i0 = r3 m attr count <NEXT> label if i1 > = i0 goto label3 <NEXT> r4 = com ctc wstx dtd d t d validator base r0 <NEXT> $ r1 = r4 m attr spec <NEXT> $ r2 = $ r1 [ i1 ] <NEXT> $ z0 = $ r2 type be notation <NEXT> if $ z0 == 0 goto label2 <NEXT> return i1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com ctc wstx dtd token model null_token <NEXT> if r0 == $ r2 goto label1 <NEXT> i0 = r1 size <NEXT> r3 = com ctc wstx dtd token model r0 <NEXT> r3 m token index = i0 <NEXT> r1 add r0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = com ctc wstx io wstx input source r0 <NEXT> r2 m scope id = i0 <NEXT> r3 = com ctc wstx io wstx input source r0 <NEXT> r3 do init input location r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = com ctc wstx sr attribute collector r0 <NEXT> $ i0 = r3 m n count <NEXT> if $ i0 < = 0 goto label1 <NEXT> r4 = com ctc wstx sr attribute collector r0 <NEXT> $ r2 = r4 m namespace builder <NEXT> $ r2 reset <NEXT> r5 = com ctc wstx sr attribute collector r0 <NEXT> r5 m default ns declare = 0 <NEXT> r6 = com ctc wstx sr attribute collector r0 <NEXT> r6 m n count = 0 <NEXT> label r7 = com ctc wstx sr attribute collector r0 <NEXT> $ i1 = r7 m attr count <NEXT> if $ i1 < = 0 goto label2 <NEXT> r8 = com ctc wstx sr attribute collector r0 <NEXT> $ r1 = r8 m value builder <NEXT> $ r1 reset <NEXT> r9 = com ctc wstx sr attribute collector r0 <NEXT> r9 m attr count = 0 <NEXT> r10 = com ctc wstx sr attribute collector r0 <NEXT> $ i2 = r10 m xml id attr index <NEXT> if $ i2 < 0 goto label2 <NEXT> r11 = com ctc wstx sr attribute collector r0 <NEXT> r11 m xml id attr index = -1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 create validator r0 <NEXT> r4 = com ctc wstx sr input element stack r0 <NEXT> $ r3 = r4 add validator $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com ctc wstx util element id map r0 <NEXT> $ r1 = r2 m head <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io restassured path xml xml path r0 <NEXT> r2 = r5 get r1 <NEXT> r6 = io restassured path xml xml path r0 <NEXT> $ r3 = specialinvoke r6 convert object to r2 class \ `` ljava lang float \ `` <NEXT> $ r4 = java lang float $ r3 <NEXT> $ f0 = $ r4 float value <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io restassured path xml xml path r0 <NEXT> r2 = r5 get r1 <NEXT> r6 = io restassured path xml xml path r0 <NEXT> $ r3 = specialinvoke r6 convert object to r2 class \ `` ljava lang long \ `` <NEXT> $ r4 = java lang long $ r3 <NEXT> $ l0 = $ r4 long value <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache xmlbeans g duration builder r0 <NEXT> r1 _d = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache xmlbeans g duration builder r0 <NEXT> $ i0 = r1 _cy <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org apache xmlbeans impl common name util be java common class name r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` x\ `` <NEXT> $ r3 = $ r2 append r0 <NEXT> $ r4 = $ r3 to string <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return r0 <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 > = 65536 goto label1 <NEXT> $ r0 = org apache xmlbeans impl common x m l char char <NEXT> $ b1 = $ r0 [ i0 ] <NEXT> $ b2 = $ b1 & 8 <NEXT> if $ b2 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b2 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r24 = org apache xmlbeans impl config name set r0 <NEXT> $ z0 = r24 _is finite <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z4 = r1 _is finite <NEXT> if $ z4 == 0 goto label1 <NEXT> r21 = new java util hash set <NEXT> specialinvoke r21 < init > <NEXT> r25 = org apache xmlbeans impl config name set r0 <NEXT> $ r15 = r25 _finite set <NEXT> r21 add all $ r15 <NEXT> $ r16 = r1 _finite set <NEXT> r21 add all $ r16 <NEXT> $ r17 = org apache xmlbeans impl config name set new instance 1 r21 <NEXT> return $ r17 <NEXT> if $ z4 == 0 goto label1 <NEXT> label r22 = new java util hash set <NEXT> specialinvoke r22 < init > <NEXT> $ r11 = r1 _finite set <NEXT> r22 add all $ r11 <NEXT> r26 = org apache xmlbeans impl config name set r0 <NEXT> $ r12 = r26 _finite set <NEXT> r22 remove all $ r12 <NEXT> $ r13 = org apache xmlbeans impl config name set new instance 0 r22 <NEXT> return $ r13 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = r1 _is finite <NEXT> if $ z1 == 0 goto label3 <NEXT> r23 = new java util hash set <NEXT> specialinvoke r23 < init > <NEXT> r27 = org apache xmlbeans impl config name set r0 <NEXT> $ r7 = r27 _finite set <NEXT> r23 add all $ r7 <NEXT> $ r8 = r1 _finite set <NEXT> r23 remove all $ r8 <NEXT> $ r9 = org apache xmlbeans impl config name set new instance 0 r23 <NEXT> return $ r9 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r28 = org apache xmlbeans impl config name set r0 <NEXT> $ r3 = r28 _finite set <NEXT> $ r2 = r1 _finite set <NEXT> $ r4 = org apache xmlbeans impl config name set intersect finite set $ r3 $ r2 <NEXT> $ r5 = org apache xmlbeans impl config name set new instance 0 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache xmlbeans impl soap mime header r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = new java util vector <NEXT> specialinvoke r12 < init > <NEXT> i3 = 0 <NEXT> label r13 = org apache xmlbeans impl soap mime header r0 <NEXT> $ r5 = r13 header <NEXT> $ i0 = $ r5 size <NEXT> if i3 > = $ i0 goto label3 <NEXT> r14 = org apache xmlbeans impl soap mime header r0 <NEXT> $ r6 = r14 header <NEXT> $ r7 = $ r6 element at i3 <NEXT> r3 = org apache xmlbeans impl soap mime header $ r7 <NEXT> $ r8 = r3 get name <NEXT> $ z0 = $ r8 equal ignore case r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r9 = r3 get value <NEXT> if $ r9 == null goto label2 <NEXT> $ r10 = r3 get value <NEXT> r12 add element $ r10 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label3 <NEXT> label $ i1 = r12 size <NEXT> if $ i1 ! = 0 goto label4 <NEXT> return null <NEXT> if $ i1 ! = 0 goto label4 <NEXT> label $ i2 = r12 size <NEXT> r11 = newarray java lang string [ $ i2 ] <NEXT> r12 copy into r11 <NEXT> return r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache xmlbeans impl soap s o a p part r0 <NEXT> r2 set mime header \ `` content- location\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r11 = org apache xmlbeans impl store xobj r0 <NEXT> $ r1 = r11 _first child <NEXT> if $ r1 ! = null goto label1 <NEXT> r12 = org apache xmlbeans impl store xobj r0 <NEXT> $ r7 = r12 _src value <NEXT> if $ r7 ! = null goto label1 <NEXT> r13 = org apache xmlbeans impl store xobj r0 <NEXT> $ r8 = r13 _char nod value <NEXT> if $ r8 ! = null goto label1 <NEXT> return 1 <NEXT> if $ r8 ! = null goto label1 <NEXT> label r14 = org apache xmlbeans impl store xobj r0 <NEXT> $ r9 = r14 _first child <NEXT> if $ r9 == null goto label3 <NEXT> r15 = org apache xmlbeans impl store xobj r0 <NEXT> $ r2 = r15 _first child <NEXT> $ z0 = $ r2 be attr <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r16 = org apache xmlbeans impl store xobj r0 <NEXT> $ r3 = r16 _src value <NEXT> if $ r3 ! = null goto label3 <NEXT> r17 = org apache xmlbeans impl store xobj r0 <NEXT> $ r4 = r17 _char nod value <NEXT> if $ r4 ! = null goto label3 <NEXT> $ z1 = org apache xmlbeans impl store xobj $ assertion disable <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r18 = org apache xmlbeans impl store xobj r0 <NEXT> $ r5 = r18 _first child <NEXT> $ z2 = $ r5 instanceof org apache xmlbeans impl store xobj $ node xobj <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r10 = new java lang assertion error <NEXT> specialinvoke r10 < init > \ `` wrong node type\ `` <NEXT> throw r10 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label return 1 <NEXT> if $ r4 ! = null goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org apache xmlbeans impl tool base schema resource manager $ schema resource r1 <NEXT> r4 = r3 get namespace <NEXT> if r4 == null goto label1 <NEXT> r12 = org apache xmlbeans impl tool base schema resource manager r0 <NEXT> $ r7 = r12 _resource for namespace <NEXT> $ r8 = $ r7 get r4 <NEXT> if $ r8 ! = r3 goto label1 <NEXT> r13 = org apache xmlbeans impl tool base schema resource manager r0 <NEXT> $ r9 = r13 _resource for namespace <NEXT> $ r9 remove r4 <NEXT> label r14 = org apache xmlbeans impl tool base schema resource manager r0 <NEXT> $ r11 = r14 _resource for namespace <NEXT> $ z0 = $ r11 contain key r2 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r15 = org apache xmlbeans impl tool base schema resource manager r0 <NEXT> $ r5 = r15 _resource for namespace <NEXT> $ r5 put r2 r3 <NEXT> label r3 set namespace r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = new java io file <NEXT> r11 = org apache xmlbeans impl tool schema resource manager r0 <NEXT> $ r7 = r11 _directory <NEXT> specialinvoke r9 < init > $ r7 r2 <NEXT> r4 = r9 get parent file <NEXT> $ z0 = r4 exist <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 mkdirs <NEXT> label r10 = new java io file output stream <NEXT> specialinvoke r10 < init > r9 <NEXT> org apache xmlbeans impl common i o util copy completely r1 r10 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache xmlbeans impl tool x m l bean r0 <NEXT> r1 verbose = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache xmlbeans impl tool x m l bean r0 <NEXT> r2 fork executable = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = new org apache xmlbeans impl tool extension <NEXT> specialinvoke r4 < init > <NEXT> r5 = org apache xmlbeans impl tool x m l bean r0 <NEXT> $ r3 = r5 extension <NEXT> $ r3 add r4 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = new java lang string <NEXT> $ r2 = org apache xmlbeans impl util hex bin encode r0 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get bytes <NEXT> $ r2 = org apache xmlbeans impl util hex bin decode $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache xmlbeans q name set builder r0 <NEXT> $ z0 = r2 _inverted <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org apache xmlbeans q name set builder r0 <NEXT> specialinvoke r3 add namespace impl r1 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = org apache xmlbeans q name set builder r0 <NEXT> specialinvoke r4 remove namespace impl r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache xmlbeans q name set builder r0 <NEXT> $ z0 = r10 _inverted <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = r1 include u r be <NEXT> $ r7 = r1 exclude u r be <NEXT> $ r8 = r1 include q name in excluded u r be <NEXT> $ r9 = r1 exclude q name in included u r be <NEXT> r11 = org apache xmlbeans q name set builder r0 <NEXT> specialinvoke r11 add all impl $ r6 $ r7 $ r8 $ r9 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = r1 include u r be <NEXT> $ r3 = r1 exclude u r be <NEXT> $ r4 = r1 include q name in excluded u r be <NEXT> $ r5 = r1 exclude q name in included u r be <NEXT> r12 = org apache xmlbeans q name set builder r0 <NEXT> specialinvoke r12 remove all impl $ r2 $ r3 $ r4 $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache xmlbeans schema type loader exception r0 <NEXT> $ i0 = r1 _code <NEXT> return $ i0 <END>
<BEG> r3 = @ parameter0 <NEXT> r4 = org apache xmlbeans impl common xml whitespace collapse r3 3 <NEXT> $ z0 = r4 start with \ `` [ \ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = r4 end with \ `` ] \ `` <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label $ r0 = new java lang illegal argument exception <NEXT> specialinvoke $ r0 < init > \ `` misformed soap 1 1 index must be contain in brace [ ] \ `` <NEXT> throw $ r0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label $ i0 = r4 length <NEXT> $ i1 = $ i0 - 1 <NEXT> $ r1 = r4 substring 1 $ i1 <NEXT> $ r2 = org apache xmlbeans soap s o a p array type internal parse comma int string $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache xmlbeans soap s o a p array type r0 <NEXT> $ r2 = r4 _ranks <NEXT> $ i0 = lengthof $ r2 <NEXT> r1 = newarray int [ $ i0 ] <NEXT> r5 = org apache xmlbeans soap s o a p array type r0 <NEXT> $ r3 = r5 _ranks <NEXT> $ i1 = lengthof r1 <NEXT> java lang system arraycopy $ r3 0 r1 0 $ i1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache xmlbeans soap s o a p array type r0 <NEXT> $ r1 = r3 _dimensions <NEXT> r4 = org apache xmlbeans soap s o a p array type r0 <NEXT> $ r2 = r4 soap11 dimension string $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache xmlbeans string enum abstract base r0 <NEXT> $ i0 = r1 _int <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache xmlbeans xml document property message_digest <NEXT> r4 = org apache xmlbeans xml document property r0 <NEXT> r4 put $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache xmlbeans xml option r0 <NEXT> $ r1 = specialinvoke r2 set \ `` save_pretty_print_offset\ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache xmlbeans xml option r0 <NEXT> $ r1 = specialinvoke r2 set \ `` save_aggressive_namespaces\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache xmlbeans xml option r0 <NEXT> $ r2 = r4 _map <NEXT> $ r3 = $ r2 get r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r11 = \ `` \ `` <NEXT> r14 = org xmlresolver catalog r0 <NEXT> $ r3 = r14 catalog list <NEXT> r1 = $ r3 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r4 = r1 next <NEXT> r2 = org xmlresolver catalog source $ r4 <NEXT> $ i0 = r11 length <NEXT> if $ i0 < = 0 goto label2 <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r9 = r12 append r11 <NEXT> $ r10 = $ r9 append \ `` \ `` <NEXT> r11 = $ r10 to string <NEXT> label r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r6 = r13 append r11 <NEXT> $ r7 = $ r6 append r2 <NEXT> r11 = $ r7 to string <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r11 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org xmlresolver catalog logger <NEXT> $ r1 trace \ `` lookup document \ `` <NEXT> r4 = new org xmlresolver catalog $ 5 <NEXT> r5 = org xmlresolver catalog r0 <NEXT> specialinvoke r4 < init > r5 <NEXT> r6 = org xmlresolver catalog r0 <NEXT> r7 = org xmlresolver catalog $ lookup function r4 <NEXT> $ r3 = specialinvoke r6 lookup in doc only r7 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org xmlresolver catalog result r0 <NEXT> $ r1 = r2 uri <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org xmlresolver resource r0 <NEXT> $ r1 = r2 stream <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org xmlresolver resource r0 <NEXT> $ r1 = r2 content type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = org xmlresolver tool resolve x m l filter r0 <NEXT> r4 process x m l catalog p i = 0 <NEXT> specialinvoke r0 notation decl r1 r2 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org xmlunit builder diff builder r0 <NEXT> r1 ignore whitespace = 1 <NEXT> r2 = org xmlunit builder diff builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org xmlunit builder diff builder check_for_identical <NEXT> r2 = org xmlunit builder diff builder r0 <NEXT> r2 comparison result to check = $ r1 <NEXT> r3 = org xmlunit builder diff builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r6 = r1 get control detail <NEXT> r2 = $ r6 get value <NEXT> $ r7 = r1 get test detail <NEXT> r3 = $ r7 get value <NEXT> if r2 ! = null goto label2 <NEXT> if r3 ! = null goto label1 <NEXT> $ z2 = 1 <NEXT> goto label3 <NEXT> label if $ z2 == 0 goto label4 <NEXT> $ r14 = org xmlunit diff comparison result equal <NEXT> goto label5 <NEXT> label r19 = org xmlunit diff abstract difference engine r0 <NEXT> $ r8 = r19 get difference evaluator <NEXT> r5 = $ r8 evaluate r1 $ r14 <NEXT> r20 = org xmlunit diff abstract difference engine r0 <NEXT> $ r9 = r20 listener <NEXT> $ r9 fire comparison perform r1 r5 <NEXT> $ r10 = org xmlunit diff comparison result equal <NEXT> if r5 == $ r10 goto label6 <NEXT> r21 = org xmlunit diff abstract difference engine r0 <NEXT> $ r11 = r21 get comparison controller <NEXT> r16 = new org xmlunit diff difference <NEXT> specialinvoke r16 < init > r1 r5 <NEXT> $ z1 = $ r11 stop diffing r16 <NEXT> if $ z1 == 0 goto label6 <NEXT> r17 = new org xmlunit diff abstract difference engine $ finish comparison state <NEXT> $ r15 = r17 <NEXT> r22 = org xmlunit diff abstract difference engine r0 <NEXT> specialinvoke r17 < init > r22 r5 <NEXT> goto label7 <NEXT> label r24 = org xmlunit diff abstract difference engine $ comparison state $ r15 <NEXT> return r24 <NEXT> if $ z1 == 0 goto label6 <NEXT> label r18 = new org xmlunit diff abstract difference engine $ ongoing comparison state <NEXT> $ r15 = r18 <NEXT> r23 = org xmlunit diff abstract difference engine r0 <NEXT> specialinvoke r18 < init > r23 r5 <NEXT> label if $ z2 == 0 goto label4 <NEXT> label $ r14 = org xmlunit diff comparison result different <NEXT> if r3 ! = null goto label1 <NEXT> label $ z2 = 0 <NEXT> if r2 ! = null goto label2 <NEXT> label $ z2 = r2 equal r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org xmlunit diff comparison listener support r0 <NEXT> $ r3 = r7 comp listener <NEXT> org xmlunit diff comparison listener support fire r1 r2 $ r3 <NEXT> $ r4 = org xmlunit diff comparison result equal <NEXT> if r2 ! = $ r4 goto label1 <NEXT> r8 = org xmlunit diff comparison listener support r0 <NEXT> $ r6 = r8 match listener <NEXT> org xmlunit diff comparison listener support fire r1 r2 $ r6 <NEXT> goto label2 <NEXT> label return <NEXT> if r2 ! = $ r4 goto label1 <NEXT> label r9 = org xmlunit diff comparison listener support r0 <NEXT> $ r5 = r9 diff listener <NEXT> org xmlunit diff comparison listener support fire r1 r2 $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` selector must not be null\ `` <NEXT> throw r6 <NEXT> if r0 ! = null goto label1 <NEXT> label r1 = java util array a list r0 <NEXT> r7 = new org xmlunit util be null predicate <NEXT> specialinvoke r7 < init > <NEXT> r10 = org xmlunit util predicate r7 <NEXT> $ z0 = org xmlunit util linqy any r1 r10 <NEXT> if $ z0 == 0 goto label2 <NEXT> r8 = new java lang illegal argument exception <NEXT> specialinvoke r8 < init > \ `` selector must not contain null values\ `` <NEXT> throw r8 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r9 = new org xmlunit diff element selector $ 9 <NEXT> specialinvoke r9 < init > r1 <NEXT> r11 = org xmlunit diff element selector r9 <NEXT> return r11 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org xmlunit util convert try extract node from d o m source r0 <NEXT> if r1 == null goto label1 <NEXT> $ r5 = r1 <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = org xmlunit util document builder factory configurer default <NEXT> $ r3 = javax xml parser document builder factory new instance <NEXT> $ r4 = $ r2 configure $ r3 <NEXT> $ r5 = org xmlunit util convert to document r0 $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org xmlunit validation j a x p validator r0 <NEXT> r2 schema = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org xmlunit validation parse validator r0 <NEXT> r2 schema u r i = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org xmlunit validation validation problem r0 <NEXT> $ r1 = r2 message <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get constructor <NEXT> i3 = 0 <NEXT> label $ i0 = lengthof r2 <NEXT> if i3 > = $ i0 goto label3 <NEXT> r3 = r2 [ i3 ] <NEXT> $ r4 = r3 get parameter type <NEXT> $ i1 = lengthof $ r4 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> $ i2 = r3 get modifier <NEXT> $ z0 = java lang reflect modifier be public $ i2 <NEXT> if $ z0 == 0 goto label2 <NEXT> return r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label3 <NEXT> label return null <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 > = 1 goto label1 <NEXT> $ r0 = new java lang illegal argument exception <NEXT> specialinvoke $ r0 < init > \ `` java version range start with at least 1 \ `` <NEXT> throw $ r0 <NEXT> if i0 > = 1 goto label1 <NEXT> label $ f1 = com thoughtworks xstream core jvm major java version <NEXT> $ b1 = $ f1 cmpg 9 0f <NEXT> if $ b1 > = 0 goto label2 <NEXT> $ f3 = float i0 <NEXT> $ f4 = $ f3 * 0 1f <NEXT> $ f5 = 1 0f + $ f4 <NEXT> goto label3 <NEXT> label $ f2 = com thoughtworks xstream core jvm major java version <NEXT> $ b2 = $ f2 cmpl $ f5 <NEXT> if $ b2 < 0 goto label4 <NEXT> $ z0 = 1 <NEXT> goto label5 <NEXT> label return $ z0 <NEXT> if $ b2 < 0 goto label4 <NEXT> label $ z0 = 0 <NEXT> if $ b1 > = 0 goto label2 <NEXT> label $ f5 = float i0 <END>
<BEG> $ z0 = com thoughtworks xstream core jvm be s q l available <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = com thoughtworks xstream core util primitive representing_char <NEXT> $ r3 = $ r2 get r0 <NEXT> r1 = java lang character $ r3 <NEXT> if r1 ! = null goto label1 <NEXT> $ c0 = 0 <NEXT> goto label2 <NEXT> label return $ c0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ c0 = r1 char value <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r7 = new java io output stream writer <NEXT> specialinvoke r7 < init > r1 \ `` utf-8\ `` <NEXT> r9 = com thoughtworks xstream io json json hierarchical stream driver r0 <NEXT> $ r4 = r9 create writer r7 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r2 = new org jdom2 input s a x builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r2 set feature \ `` http apache org xml feature disallow-doctype-decl\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com thoughtworks xstream mapper attribute mapper r0 <NEXT> $ r2 = r3 type set <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r11 = new java io string writer <NEXT> specialinvoke r11 < init > <NEXT> label r13 = com thoughtworks xstream x streamer r0 <NEXT> r13 to x m l r1 r2 r11 <NEXT> label goto label5 <NEXT> label $ r5 = r11 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal jsonb config property r0 <NEXT> $ r1 = r2 property order <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse yasson internal jsonb config property r0 <NEXT> $ z0 = r1 zero time default <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal jsonb context r0 <NEXT> $ r1 = r2 component matcher <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model customization class customization builder r0 <NEXT> $ r1 = r2 date formatter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model customization customization builder r0 <NEXT> $ r1 = r2 property order <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model customization property customization builder r0 <NEXT> $ r1 = r2 deserialize number formatter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model customization property customization builder r0 <NEXT> $ r1 = r2 serialize date formatter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model customization property customization builder r0 <NEXT> $ r1 = r2 deserialize date formatter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse yasson internal model jsonb property info r0 <NEXT> r2 runtime type = r1 <NEXT> r3 = org eclipse yasson internal model jsonb property info r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model property r0 <NEXT> $ r1 = r2 declare class element <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model property r0 <NEXT> $ r1 = r2 setter element <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model property model r0 <NEXT> $ r1 = r2 read name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal model property value propagation r0 <NEXT> $ r1 = r2 field <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof java lang reflect parameterized type <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r3 = java lang reflect parameterized type r0 <NEXT> r1 = $ r3 get actual type argument <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r2 = r1 [ i1 ] <NEXT> $ z2 = org eclipse yasson internal reflection utils be resolve type r2 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return 1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ z1 = r0 instanceof java lang class <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal serializer abstract serializer builder r0 <NEXT> $ r1 = r2 class model <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse yasson internal serializer abstract value type deserializer r0 <NEXT> $ r1 = r2 customization <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = java lang boolean value of z0 <NEXT> r3 = org eclipse yasson yasson config r0 <NEXT> r3 set property \ `` jsonb fail-on-unknown-properties\ <NEXT> r4 = org eclipse yasson yasson config r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org elasticsearch search aggregation matrix stats matrix stats result r0 <NEXT> $ r2 = r8 result <NEXT> $ r3 = $ r2 count <NEXT> $ z0 = $ r3 contain key r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0l <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r9 = org elasticsearch search aggregation matrix stats matrix stats result r0 <NEXT> $ r4 = r9 result <NEXT> $ r5 = $ r4 count <NEXT> $ r6 = $ r5 get r1 <NEXT> $ r7 = java lang long $ r6 <NEXT> $ l0 = $ r7 long value <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> r8 = io airlift command command group usage r0 <NEXT> r8 usage r1 r2 r7 <NEXT> $ r5 = java lang system out <NEXT> $ r6 = r7 to string <NEXT> $ r5 println $ r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r8 = r3 append \ `` name\ `` <NEXT> $ r8 newline <NEXT> $ r10 = r3 new indented printer 8 <NEXT> $ r11 = r1 get name <NEXT> $ r12 = $ r10 append $ r11 <NEXT> $ r13 = r2 get name <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 append \ `` -\ `` <NEXT> $ r16 = r2 get description <NEXT> $ r17 = $ r15 append $ r16 <NEXT> $ r18 = $ r17 newline <NEXT> $ r18 newline <NEXT> $ r20 = r3 append \ `` synopsis\ `` <NEXT> $ r20 newline <NEXT> $ r22 = r3 new indented printer 8 <NEXT> r4 = $ r22 new printer with hang indent 8 <NEXT> $ r23 = r2 get command <NEXT> r5 = com google common collect list new array list $ r23 <NEXT> r114 = io airlift command command group usage r0 <NEXT> $ r24 = r114 command comparator <NEXT> java util collection sort r5 $ r24 <NEXT> $ r25 = r2 get default command <NEXT> if $ r25 == null goto label02 <NEXT> r89 = r2 get default command <NEXT> if r1 == null goto label01 <NEXT> $ r84 = r1 get name <NEXT> r4 append $ r84 <NEXT> r115 = io airlift command command group usage r0 <NEXT> $ z6 = r115 hide global option <NEXT> if $ z6 ! = 0 goto label01 <NEXT> $ r86 = r89 get global option <NEXT> $ r87 = io airlift command usage helper to synopsis usage $ r86 <NEXT> r4 append word $ r87 <NEXT> label $ r90 = r2 get name <NEXT> $ r91 = r4 append $ r90 <NEXT> $ r92 = r89 get group option <NEXT> $ r93 = io airlift command usage helper to synopsis usage $ r92 <NEXT> $ r91 append word $ r93 <NEXT> r4 newline <NEXT> label r94 = r5 iterator <NEXT> label $ z7 = r94 have next <NEXT> if $ z7 == 0 goto label05 <NEXT> $ r73 = r94 next <NEXT> r95 = io airlift command model command metadata $ r73 <NEXT> if r1 == null goto label04 <NEXT> $ r77 = r1 get name <NEXT> r4 append $ r77 <NEXT> r116 = io airlift command command group usage r0 <NEXT> $ z5 = r116 hide global option <NEXT> if $ z5 ! = 0 goto label04 <NEXT> $ r79 = r95 get global option <NEXT> $ r80 = io airlift command usage helper to synopsis usage $ r79 <NEXT> r4 append word $ r80 <NEXT> label $ r96 = r2 get name <NEXT> $ r97 = r4 append $ r96 <NEXT> $ r98 = r95 get group option <NEXT> $ r99 = io airlift command usage helper to synopsis usage $ r98 <NEXT> $ r97 append word $ r99 <NEXT> $ r100 = r95 get name <NEXT> $ r101 = r4 append $ r100 <NEXT> $ r102 = r95 get command option <NEXT> $ r103 = io airlift command usage helper to synopsis usage $ r102 <NEXT> $ r101 append word $ r103 <NEXT> if $ z7 == 0 goto label05 <NEXT> label r4 newline <NEXT> r104 = com google common collect list new array list <NEXT> $ r27 = r2 get option <NEXT> r104 add all $ r27 <NEXT> if r1 == null goto label06 <NEXT> r117 = io airlift command command group usage r0 <NEXT> $ z3 = r117 hide global option <NEXT> if $ z3 ! = 0 goto label06 <NEXT> $ r72 = r1 get option <NEXT> r104 add all $ r72 <NEXT> label $ i1 = r104 size <NEXT> if $ i1 < = 0 goto label09 <NEXT> r118 = io airlift command command group usage r0 <NEXT> $ r60 = r118 option comparator <NEXT> if $ r60 == null goto label07 <NEXT> r119 = io airlift command command group usage r0 <NEXT> $ r71 = r119 option comparator <NEXT> java util collection sort r104 $ r71 <NEXT> label $ r61 = r3 append \ `` options\ `` <NEXT> $ r61 newline <NEXT> r105 = r104 iterator <NEXT> label $ z8 = r105 have next <NEXT> if $ z8 == 0 goto label09 <NEXT> $ r63 = r105 next <NEXT> r106 = io airlift command model option metadata $ r63 <NEXT> r107 = r3 new indented printer 8 <NEXT> $ r64 = io airlift command usage helper to description r106 <NEXT> $ r65 = r107 append $ r64 <NEXT> $ r65 newline <NEXT> r108 = r107 new indented printer 4 <NEXT> $ r67 = r106 get description <NEXT> $ r68 = r108 append $ r67 <NEXT> $ r68 newline <NEXT> r108 newline <NEXT> goto label08 <NEXT> if $ z8 == 0 goto label09 <NEXT> label $ i0 = r5 size <NEXT> if $ i0 > 0 goto label10 <NEXT> $ r59 = r2 get default command <NEXT> if $ r59 == null goto label16 <NEXT> label $ r28 = r3 append \ `` commands\ `` <NEXT> $ r28 newline <NEXT> r109 = r3 new indented printer 8 <NEXT> $ r30 = r2 get default command <NEXT> if $ r30 == null goto label11 <NEXT> $ r51 = r2 get default command <NEXT> $ r52 = $ r51 get description <NEXT> if $ r52 == null goto label11 <NEXT> $ r53 = r109 append \ `` with no argument \ `` <NEXT> $ r54 = r2 get default command <NEXT> $ r55 = $ r54 get description <NEXT> $ r56 = $ r53 append $ r55 <NEXT> $ r57 = $ r56 newline <NEXT> $ r57 newline <NEXT> label $ r110 = r2 get command <NEXT> r111 = $ r110 iterator <NEXT> label $ z9 = r111 have next <NEXT> if $ z9 == 0 goto label16 <NEXT> $ r31 = r111 next <NEXT> r112 = io airlift command model command metadata $ r31 <NEXT> $ r32 = r112 get name <NEXT> $ r33 = r109 append $ r32 <NEXT> $ r33 newline <NEXT> r113 = r109 new indented printer 4 <NEXT> $ r35 = r112 get description <NEXT> $ r36 = r113 append $ r35 <NEXT> $ r37 = $ r36 newline <NEXT> $ r37 newline <NEXT> $ r39 = r112 get command option <NEXT> r6 = $ r39 iterator <NEXT> label $ z1 = r6 have next <NEXT> if $ z1 == 0 goto label15 <NEXT> $ r40 = r6 next <NEXT> r7 = io airlift command model option metadata $ r40 <NEXT> $ z2 = r7 be hidden <NEXT> if $ z2 ! = 0 goto label14 <NEXT> $ r41 = r7 get description <NEXT> if $ r41 == null goto label14 <NEXT> $ r42 = r113 append \ `` with\ `` <NEXT> $ r43 = r7 get option <NEXT> $ r44 = io airlift command command group usage long $ r43 <NEXT> $ r45 = $ r42 append $ r44 <NEXT> $ r46 = $ r45 append \ `` option \ `` <NEXT> $ r47 = r7 get description <NEXT> $ r48 = $ r46 append $ r47 <NEXT> $ r49 = $ r48 newline <NEXT> $ r49 newline <NEXT> label goto label13 <NEXT> if $ z1 == 0 goto label15 <NEXT> label goto label12 <NEXT> if $ z9 == 0 goto label16 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org antlr analysis dfa r0 <NEXT> $ r1 = r2 state <NEXT> $ i0 = $ r1 size <NEXT> $ i1 = $ i0 - 1 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r2 = org antlr analysis dfa r0 <NEXT> $ r1 = r2 unreachable alt <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = org antlr analysis d f a state r0 <NEXT> $ r4 = r7 transition <NEXT> r6 = new org antlr analysis transition <NEXT> r8 = org antlr analysis state r1 <NEXT> specialinvoke r6 < init > r2 r8 <NEXT> $ r4 add r6 <NEXT> r9 = org antlr analysis d f a state r0 <NEXT> $ r5 = r9 transition <NEXT> $ i0 = $ r5 size <NEXT> $ i1 = $ i0 - 1 <NEXT> return $ i1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> $ r3 = r0 nfa configuration <NEXT> i1 = $ r3 size <NEXT> i4 = 0 <NEXT> label if i4 > = i1 goto label4 <NEXT> $ r4 = r0 nfa configuration <NEXT> $ r5 = $ r4 get i4 <NEXT> r2 = org antlr analysis n f a configuration $ r5 <NEXT> $ i2 = r2 alt <NEXT> if $ i2 == i0 goto label3 <NEXT> if r1 == null goto label2 <NEXT> $ i3 = r2 alt <NEXT> $ r6 = org antlr misc utils integer $ i3 <NEXT> $ z0 = r1 contain $ r6 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r2 resolve = 1 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> label if i4 > = i1 goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r5 = org antlr misc interval set r0 <NEXT> $ z0 = r5 be nil <NEXT> if $ z0 == 0 goto label1 <NEXT> return -7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org antlr misc interval set r0 <NEXT> $ r2 = r6 interval <NEXT> i0 = $ r2 size <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label6 <NEXT> r7 = org antlr misc interval set r0 <NEXT> $ r3 = r7 interval <NEXT> $ r4 = $ r3 get i3 <NEXT> r1 = org antlr misc interval $ r4 <NEXT> i1 = r1 a <NEXT> i2 = r1 b <NEXT> i4 = i1 <NEXT> label if i4 > i2 goto label5 <NEXT> if i4 < 0 goto label4 <NEXT> return i4 <NEXT> if i4 < 0 goto label4 <NEXT> label i4 = i4 + 1 <NEXT> goto label3 <NEXT> label if i4 > i2 goto label5 <NEXT> label i3 = i3 + 1 <NEXT> goto label2 <NEXT> label if i3 > = i0 goto label6 <NEXT> label return -7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org antlr misc multi map r0 <NEXT> $ r3 = r8 get r1 <NEXT> r6 = java util list $ r3 <NEXT> if r6 ! = null goto label1 <NEXT> r7 = new java util array list <NEXT> specialinvoke r7 < init > <NEXT> r6 = r7 <NEXT> specialinvoke r0 put r1 r7 <NEXT> label r6 add r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org antlr misc order hash set r0 <NEXT> $ r1 = r2 element <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org antlr tool error manager thread to listener map <NEXT> $ r2 = java lang thread current thread <NEXT> $ r1 put $ r2 r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> label r8 = org antlr tool grammar serializer foo r0 <NEXT> $ r4 = r8 out <NEXT> r9 = org antlr tool grammar serializer foo r0 <NEXT> $ r3 = r9 g <NEXT> $ r5 = $ r3 get rule <NEXT> $ i1 = $ r5 size <NEXT> $ r4 write short $ i1 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r6 = org antlr tool n f a factory r0 <NEXT> r1 = r6 new state <NEXT> r7 = org antlr tool n f a factory r0 <NEXT> r2 = r7 new state <NEXT> r8 = org antlr tool n f a factory r0 <NEXT> specialinvoke r8 transition between state r1 r2 -5 <NEXT> r5 = new org antlr analysis state cluster <NEXT> specialinvoke r5 < init > r1 r2 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org antlr tool r0 <NEXT> r1 force relative output = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org antlr tool r0 <NEXT> $ z0 = r1 depend <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ i0 = org antlr tool error manager get num error <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org antlr tool r0 <NEXT> r1 generate_ d f a_dot = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org antlr tool r0 <NEXT> r1 depend = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org antlr runtime base recognizer r0 <NEXT> $ r1 = r2 state <NEXT> $ z0 = $ r1 fail <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r14 = org antlr runtime base recognizer r0 <NEXT> $ r2 = r14 state <NEXT> $ r3 = $ r2 rule memo <NEXT> $ r4 = $ r3 [ i0 ] <NEXT> if $ r4 ! = null goto label1 <NEXT> r15 = org antlr runtime base recognizer r0 <NEXT> $ r10 = r15 state <NEXT> $ r12 = $ r10 rule memo <NEXT> r13 = new java util hash map <NEXT> specialinvoke r13 < init > <NEXT> $ r12 [ i0 ] = r13 <NEXT> label r16 = org antlr runtime base recognizer r0 <NEXT> $ r5 = r16 state <NEXT> $ r6 = $ r5 rule memo <NEXT> $ r7 = $ r6 [ i0 ] <NEXT> $ r8 = java lang integer value of i1 <NEXT> $ r9 = $ r7 get $ r8 <NEXT> r1 = java lang integer $ r9 <NEXT> if r1 ! = null goto label2 <NEXT> return -1 <NEXT> if r1 ! = null goto label2 <NEXT> label $ i2 = r1 int value <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = org antlr runtime misc int array r0 <NEXT> $ i0 = r1 p <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r8 = org antlr runtime recognition exception r0 <NEXT> $ r3 = r8 input <NEXT> $ z0 = $ r3 instanceof org antlr runtime token stream <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = org antlr runtime recognition exception r0 <NEXT> $ r7 = r9 token <NEXT> $ i2 = $ r7 get type <NEXT> return $ i2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r10 = org antlr runtime recognition exception r0 <NEXT> $ r4 = r10 input <NEXT> $ z1 = $ r4 instanceof org antlr runtime tree tree node stream <NEXT> if $ z1 == 0 goto label2 <NEXT> r11 = org antlr runtime recognition exception r0 <NEXT> $ r5 = r11 input <NEXT> r1 = org antlr runtime tree tree node stream $ r5 <NEXT> r2 = r1 get tree adaptor <NEXT> r12 = org antlr runtime recognition exception r0 <NEXT> $ r6 = r12 node <NEXT> $ i1 = r2 get type $ r6 <NEXT> return $ i1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r13 = org antlr runtime recognition exception r0 <NEXT> $ i0 = r13 c <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> i1 = @ parameter3 <NEXT> r3 = @ parameter4 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label r8 = org antlr runtime tree tree wizard r0 <NEXT> $ r5 = r8 adaptor <NEXT> $ i3 = $ r5 get type r1 <NEXT> if $ i3 ! = i1 goto label2 <NEXT> r3 visit r1 r2 i0 null <NEXT> label r9 = org antlr runtime tree tree wizard r0 <NEXT> $ r6 = r9 adaptor <NEXT> i2 = $ r6 get child count r1 <NEXT> i4 = 0 <NEXT> label if i4 > = i2 goto label4 <NEXT> r10 = org antlr runtime tree tree wizard r0 <NEXT> $ r7 = r10 adaptor <NEXT> r4 = $ r7 get child r1 i4 <NEXT> r11 = org antlr runtime tree tree wizard r0 <NEXT> r11 _visit r4 r1 i4 i1 r3 <NEXT> i4 = i4 + 1 <NEXT> goto label3 <NEXT> label if i4 > = i2 goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = java nio byte buffer wrap r0 <NEXT> $ r2 = org apache directory server kerberos share keytab keytab read keytab r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache directory server kerberos share store principal store entry r0 <NEXT> $ r1 = r2 valid start <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache directory server kerberos share store principal store entry modifier r0 <NEXT> r2 expiration = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org apache directory share kerberos codec ad and or ad and or state enum last_ad_and_or_state <NEXT> $ i1 = $ r1 ordinal <NEXT> if i0 ! = $ i1 goto label1 <NEXT> $ r2 = \ `` ad_and_or_end_state\ `` <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if i0 ! = $ i1 goto label1 <NEXT> label r3 = org apache directory share kerberos codec ad and or ad and or state enum r0 <NEXT> $ r2 = r3 name <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache directory share kerberos codec ap rep ap rep container r0 <NEXT> r2 ap rep = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache directory share kerberos codec krb priv krb priv container r0 <NEXT> r2 krb priv = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache directory share kerberos codec method data method data container r0 <NEXT> r2 method data = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 0 goto label1 <NEXT> r1 = org apache directory share kerberos codec option option r0 <NEXT> $ i1 = r1 size <NEXT> if i0 < $ i1 goto label2 <NEXT> label return <NEXT> if i0 < $ i1 goto label2 <NEXT> label r2 = org apache directory share kerberos codec option option r0 <NEXT> r2 clear bit i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache directory share kerberos codec pa enc t enc pa enc t enc container r0 <NEXT> r2 pa enc t enc = r1 <NEXT> return <END>
<BEG> $ r0 = org apache directory share kerberos codec type encryption type encryption type by name <NEXT> $ r1 = $ r0 value <NEXT> return $ r1 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = org apache directory share kerberos codec type last req type value <NEXT> i1 = lengthof r0 <NEXT> i3 = 0 <NEXT> label if i3 > = i1 goto label3 <NEXT> r1 = r0 [ i3 ] <NEXT> $ i2 = r1 get value <NEXT> if i0 ! = $ i2 goto label2 <NEXT> return r1 <NEXT> if i0 ! = $ i2 goto label2 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i1 goto label3 <NEXT> label $ r2 = org apache directory share kerberos codec type last req type none <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache directory share kerberos component authorization data r0 <NEXT> $ r2 = r3 current a d <NEXT> $ r2 set ad data r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org apache directory share kerberos codec type host addr type get type by ordinal i0 <NEXT> r2 = org apache directory share kerberos component host address r0 <NEXT> r2 addr type = $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache directory share kerberos exception kerberos exception r0 <NEXT> $ i0 = r1 error code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = 31 - i0 <NEXT> r1 = org apache directory share kerberos flag abstract kerberos flag r0 <NEXT> r1 set bit i0 <NEXT> r2 = org apache directory share kerberos flag abstract kerberos flag r0 <NEXT> $ i3 = r2 value <NEXT> $ i2 = 1 < < i1 <NEXT> $ i4 = $ i3 | $ i2 <NEXT> r3 = org apache directory share kerberos flag abstract kerberos flag r0 <NEXT> r3 value = $ i4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache directory share kerberos flag ticket flag ok_as_delegate <NEXT> r2 = org apache directory share kerberos flag ticket flag r0 <NEXT> r3 = org apache directory share kerberos flag kerberos flag $ r1 <NEXT> $ z0 = r2 be flag set r3 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` null ticket can not be added\ `` <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r8 = org apache directory share kerberos message krb cred r0 <NEXT> $ r2 = r8 ticket <NEXT> if $ r2 ! = null goto label2 <NEXT> r7 = new java util array list <NEXT> specialinvoke r7 < init > <NEXT> r9 = org apache directory share kerberos message krb cred r0 <NEXT> r9 ticket = r7 <NEXT> label r10 = org apache directory share kerberos message krb cred r0 <NEXT> $ r3 = r10 ticket <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache directory share kerberos message tgs req r0 <NEXT> r1 kdc req length = 0 <NEXT> r2 = org apache directory share kerberos message tgs req r0 <NEXT> r2 tgs req length = 0 <NEXT> $ i0 = specialinvoke r0 compute length <NEXT> r3 = org apache directory share kerberos message tgs req r0 <NEXT> r3 kdc req length = $ i0 <NEXT> r4 = org apache directory share kerberos message tgs req r0 <NEXT> $ i1 = r4 kdc req length <NEXT> $ i2 = org apache directory api asn1 ber tlv tlv get nb byte $ i1 <NEXT> $ i4 = 1 + $ i2 <NEXT> r5 = org apache directory share kerberos message tgs req r0 <NEXT> $ i3 = r5 kdc req length <NEXT> $ i5 = $ i4 + $ i3 <NEXT> r6 = org apache directory share kerberos message tgs req r0 <NEXT> r6 tgs req length = $ i5 <NEXT> r7 = org apache directory share kerberos message tgs req r0 <NEXT> $ i6 = r7 tgs req length <NEXT> return $ i6 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> r4 = org apache directory api util byte buffer r0 <NEXT> $ i2 = r4 po <NEXT> r5 = org apache directory api util byte buffer r0 <NEXT> $ r1 = r5 buf <NEXT> $ i1 = lengthof $ r1 <NEXT> if $ i2 < $ i1 goto label1 <NEXT> r6 = org apache directory api util byte buffer r0 <NEXT> specialinvoke r6 grow buffer <NEXT> label r7 = org apache directory api util byte buffer r0 <NEXT> $ r2 = r7 buf <NEXT> r8 = org apache directory api util byte buffer r0 <NEXT> $ i3 = r8 po <NEXT> $ r2 [ $ i3 ] = b0 <NEXT> r9 = org apache directory api util byte buffer r0 <NEXT> $ i4 = r9 po <NEXT> $ i5 = $ i4 + 1 <NEXT> r10 = org apache directory api util byte buffer r0 <NEXT> r10 po = $ i5 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return 0 <NEXT> if r0 ! = null goto label1 <NEXT> label i1 = r0 length <NEXT> if i1 == 0 goto label2 <NEXT> if i0 < 0 goto label2 <NEXT> if i0 < i1 goto label3 <NEXT> label return 0 <NEXT> if i0 < i1 goto label3 <NEXT> label c2 = r0 char at i0 <NEXT> if c2 == 48 goto label4 <NEXT> if c2 ! = 49 goto label5 <NEXT> label $ z0 = 1 <NEXT> goto label6 <NEXT> label return $ z0 <NEXT> if c2 ! = 49 goto label5 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache directory api util exception runtime multi exception r0 <NEXT> $ r1 = r2 nest exception <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache directory api util synchronize l r u map r0 <NEXT> $ z0 = r4 contain key r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r5 = org apache directory api util synchronize l r u map r0 <NEXT> r2 = r5 remove r1 <NEXT> specialinvoke r0 put r1 r2 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> label r13 = r1 poll 1 null <NEXT> $ r3 = r13 get check point <NEXT> r19 = com netflix config abstract poll scheduler r0 <NEXT> r19 check point = $ r3 <NEXT> $ r4 = com netflix config poll listener $ event type poll_success <NEXT> r20 = com netflix config abstract poll scheduler r0 <NEXT> specialinvoke r20 fire event $ r4 r13 null <NEXT> label goto label4 <NEXT> label r21 = com netflix config abstract poll scheduler r0 <NEXT> r21 populate property r13 r2 <NEXT> label goto label7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = com netflix config configuration base deployment context r0 <NEXT> r1 = specialinvoke r3 get value from config \ `` archaius deployment stack\ `` <NEXT> if r1 == null goto label1 <NEXT> return r1 <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = specialinvoke r0 get deployment stack <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r35 = new java lang string builder <NEXT> specialinvoke r35 < init > <NEXT> $ r8 = r35 append r0 <NEXT> $ r9 = $ r8 append \ `` properties\ `` <NEXT> r1 = $ r9 to string <NEXT> $ r10 = com netflix config configuration manager instance <NEXT> if $ r10 ! = null goto label1 <NEXT> $ r29 = com netflix config configuration manager get config instance <NEXT> com netflix config configuration manager instance = $ r29 <NEXT> label $ r11 = java lang thread current thread <NEXT> r2 = $ r11 get context class loader <NEXT> r30 = r2 get resource r1 <NEXT> if r30 ! = null goto label2 <NEXT> r37 = new java io i o exception <NEXT> r36 = new java lang string builder <NEXT> specialinvoke r36 < init > <NEXT> $ r25 = r36 append \ `` can not locate \ `` <NEXT> $ r26 = $ r25 append r1 <NEXT> $ r27 = $ r26 append \ `` a a classpath resource \ `` <NEXT> $ r28 = $ r27 to string <NEXT> specialinvoke r37 < init > $ r28 <NEXT> throw r37 <NEXT> if r30 ! = null goto label2 <NEXT> label r38 = new java util property <NEXT> specialinvoke r38 < init > <NEXT> r4 = r30 open stream <NEXT> r38 load r4 <NEXT> r4 close <NEXT> $ r13 = com netflix config configuration manager get deployment context <NEXT> r5 = $ r13 get deployment environment <NEXT> if r5 == null goto label3 <NEXT> $ i0 = r5 length <NEXT> if $ i0 < = 0 goto label3 <NEXT> r39 = new java lang string builder <NEXT> specialinvoke r39 < init > <NEXT> $ r19 = r39 append r0 <NEXT> $ r20 = $ r19 append \ `` -\ `` <NEXT> $ r21 = $ r20 append r5 <NEXT> $ r22 = $ r21 append \ `` properties\ `` <NEXT> r31 = $ r22 to string <NEXT> r32 = r2 get resource r31 <NEXT> if r32 == null goto label3 <NEXT> r6 = r32 open stream <NEXT> r38 load r6 <NEXT> r6 close <NEXT> label $ r33 = com netflix config configuration manager instance <NEXT> $ z0 = $ r33 instanceof com netflix config aggregate configuration <NEXT> if $ z0 == 0 goto label4 <NEXT> r40 = new com netflix config concurrent map configuration <NEXT> specialinvoke r40 < init > <NEXT> r40 load property r38 <NEXT> $ r16 = com netflix config configuration manager instance <NEXT> $ r17 = com netflix config aggregate configuration $ r16 <NEXT> r41 = org apache common configuration abstract configuration r40 <NEXT> $ r17 add configuration r41 r0 <NEXT> goto label5 <NEXT> label return <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ r14 = com netflix config configuration manager instance <NEXT> r42 = org apache common configuration configuration $ r14 <NEXT> com netflix config util configuration utils load property r38 r42 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = com netflix config dynamic list property r0 <NEXT> $ r2 = r3 delegate <NEXT> $ r2 add callback r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> com netflix config dynamic property factory check and warn r1 <NEXT> r5 = new com netflix config dynamic boolean property <NEXT> specialinvoke r5 < init > r1 z0 <NEXT> r6 = com netflix config property wrapper r5 <NEXT> com netflix config dynamic property factory add callback r2 r6 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r3 = com netflix config dynamic property factory r0 <NEXT> $ r2 = r3 get double property r1 d0 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = com netflix config jmx base config m bean r0 <NEXT> $ r3 = r7 config <NEXT> $ z0 = $ r3 instanceof com netflix config concurrent composite configuration <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = com netflix config jmx base config m bean r0 <NEXT> $ r5 = r8 config <NEXT> $ r6 = com netflix config concurrent composite configuration $ r5 <NEXT> $ r6 set override property r1 r2 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r9 = com netflix config jmx base config m bean r0 <NEXT> $ r4 = r9 config <NEXT> $ r4 add property r1 r2 <END>
<BEG> r0 = @ this <NEXT> r8 = com netflix config poll result r0 <NEXT> $ z0 = r8 incremental <NEXT> if $ z0 == 0 goto label6 <NEXT> r9 = com netflix config poll result r0 <NEXT> $ r2 = r9 add <NEXT> if $ r2 == null goto label1 <NEXT> r10 = com netflix config poll result r0 <NEXT> $ r7 = r10 add <NEXT> $ i2 = $ r7 size <NEXT> if $ i2 > 0 goto label3 <NEXT> label r11 = com netflix config poll result r0 <NEXT> $ r3 = r11 change <NEXT> if $ r3 == null goto label2 <NEXT> r12 = com netflix config poll result r0 <NEXT> $ r6 = r12 change <NEXT> $ i1 = $ r6 size <NEXT> if $ i1 > 0 goto label3 <NEXT> label r13 = com netflix config poll result r0 <NEXT> $ r4 = r13 delete <NEXT> if $ r4 == null goto label4 <NEXT> r14 = com netflix config poll result r0 <NEXT> $ r5 = r14 delete <NEXT> $ i0 = $ r5 size <NEXT> if $ i0 < = 0 goto label4 <NEXT> label $ z1 = 1 <NEXT> goto label5 <NEXT> label return $ z1 <NEXT> if $ i0 < = 0 goto label4 <NEXT> label $ z1 = 0 <NEXT> if $ z0 == 0 goto label6 <NEXT> label r15 = com netflix config poll result r0 <NEXT> $ r1 = r15 complete <NEXT> if $ r1 == null goto label7 <NEXT> $ z2 = 1 <NEXT> goto label8 <NEXT> label return $ z2 <NEXT> if $ r1 == null goto label7 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> com netflix config web application property app conf folder = r0 <NEXT> com netflix config web application property base config file name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven archetype catalog archetype r0 <NEXT> $ r1 = r2 description <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven archetype catalog archetype r0 <NEXT> $ r1 = r2 version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = org apache maven archetype common util list scanner r0 <NEXT> r3 exclude = null <NEXT> goto label2 <NEXT> label return <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = org codehaus plexus util string utils split r1 \ <NEXT> r4 = org apache maven archetype common util list scanner r0 <NEXT> specialinvoke r4 set exclude $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven archetype model archetype model r0 <NEXT> r2 test source = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven archetype model resource r0 <NEXT> r2 encode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven archetype model source r0 <NEXT> $ r1 = r2 file <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache maven archetype metadata archetype descriptor r0 <NEXT> r1 partial = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache maven archetype metadata file set r0 <NEXT> r1 package = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven archetype metadata module descriptor r0 <NEXT> $ r1 = r2 id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven archetype metadata require property r0 <NEXT> r2 default value = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> z4 = 1 <NEXT> if r0 == null goto label6 <NEXT> $ r3 = r0 get description <NEXT> $ z0 = $ r3 testable <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z5 = 0 <NEXT> goto label2 <NEXT> label $ z1 = r0 be deploy <NEXT> if $ z1 == 0 goto label3 <NEXT> $ z7 = $ z5 <NEXT> goto label4 <NEXT> label z4 = $ z7 <NEXT> $ z2 = r2 be annotation present class \ `` lorg jboss arquillian container test api run a client \ `` <NEXT> if $ z2 == 0 goto label5 <NEXT> label $ z3 = r1 be annotation present class \ `` lorg jboss arquillian container test api run a client \ `` <NEXT> if $ z3 == 0 goto label6 <NEXT> label return z4 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z7 = 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z5 = 1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ r1 = r0 get deployable container <NEXT> if $ r1 == null goto label1 <NEXT> $ r2 = r0 get deployable container <NEXT> $ r3 = $ r2 get default protocol <NEXT> if $ r3 ! = null goto label2 <NEXT> label return 0 <NEXT> if $ r3 ! = null goto label2 <NEXT> label $ r4 = \ `` local\ `` <NEXT> $ r5 = r0 get deployable container <NEXT> $ r6 = $ r5 get default protocol <NEXT> $ r7 = $ r6 get name <NEXT> $ z0 = $ r4 equal $ r7 <NEXT> if $ z0 == 0 goto label3 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r3 = ru yandex qatools ashot comparison image diff r0 <NEXT> $ r1 = r3 diff markup policy <NEXT> $ r2 = $ r1 get mark image <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = ru yandex qatools ashot comparison image diff r0 <NEXT> $ r1 = r2 diff markup policy <NEXT> $ z0 = $ r1 have diff <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj lang reflect no such pointcut exception r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r5 = org aspectj ajdt internal compiler lookup eclipse factory r0 <NEXT> $ r4 = r5 internal make method bind r1 r2 r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj ajdt internal core builder aj build config r0 <NEXT> $ r1 = r2 file <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj ajdt internal core builder aj build config r0 <NEXT> $ r1 = r2 classpath <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org aspectj ajdt internal core builder aj build config r0 <NEXT> $ z0 = r1 should proceed <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org aspectj ajdt internal core builder aj build config r0 <NEXT> $ i0 = r1 change <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> if null == r0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label org aspectj ajdt internal core builder aj build manager do_runtime_version_check = $ z0 <NEXT> return <NEXT> if null == r0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org aspectj ajdt internal core builder aj state r0 <NEXT> $ r2 = r3 aspect class file <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj apache bcel classfile annotation runtime param annos r0 <NEXT> $ z0 = r2 inflate <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r3 = org aspectj apache bcel classfile annotation runtime param annos r0 <NEXT> specialinvoke r3 inflate <NEXT> label r4 = org aspectj apache bcel classfile annotation runtime param annos r0 <NEXT> $ r1 = r4 parameter annotation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org aspectj apache bcel classfile field r0 <NEXT> $ r1 = r5 field type <NEXT> if $ r1 ! = null goto label1 <NEXT> r6 = org aspectj apache bcel classfile field r0 <NEXT> $ r3 = r6 get signature <NEXT> $ r4 = org aspectj apache bcel generic type get return type $ r3 <NEXT> r7 = org aspectj apache bcel classfile field r0 <NEXT> r7 field type = $ r4 <NEXT> label r8 = org aspectj apache bcel classfile field r0 <NEXT> $ r2 = r8 field type <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r1 write int -889275714 <NEXT> r15 = org aspectj apache bcel classfile java class r0 <NEXT> $ i0 = r15 minor <NEXT> r1 write short $ i0 <NEXT> r16 = org aspectj apache bcel classfile java class r0 <NEXT> $ i1 = r16 major <NEXT> r1 write short $ i1 <NEXT> r17 = org aspectj apache bcel classfile java class r0 <NEXT> $ r2 = r17 cpool <NEXT> $ r2 dump r1 <NEXT> r18 = org aspectj apache bcel classfile java class r0 <NEXT> $ i2 = r18 modifier <NEXT> r1 write short $ i2 <NEXT> r19 = org aspectj apache bcel classfile java class r0 <NEXT> $ i3 = r19 classname idx <NEXT> r1 write short $ i3 <NEXT> r20 = org aspectj apache bcel classfile java class r0 <NEXT> $ i4 = r20 superclassname idx <NEXT> r1 write short $ i4 <NEXT> r21 = org aspectj apache bcel classfile java class r0 <NEXT> $ r3 = r21 interface <NEXT> $ i5 = lengthof $ r3 <NEXT> r1 write short $ i5 <NEXT> i12 = 0 <NEXT> goto label2 <NEXT> label r23 = org aspectj apache bcel classfile java class r0 <NEXT> $ r4 = r23 interface <NEXT> $ i6 = lengthof $ r4 <NEXT> if i12 < $ i6 goto label1 <NEXT> label r22 = org aspectj apache bcel classfile java class r0 <NEXT> $ r5 = r22 interface <NEXT> $ i7 = $ r5 [ i12 ] <NEXT> r1 write short $ i7 <NEXT> i12 = i12 + 1 <NEXT> if i12 < $ i6 goto label1 <NEXT> r24 = org aspectj apache bcel classfile java class r0 <NEXT> $ r6 = r24 field <NEXT> $ i8 = lengthof $ r6 <NEXT> r1 write short $ i8 <NEXT> i13 = 0 <NEXT> goto label4 <NEXT> label r26 = org aspectj apache bcel classfile java class r0 <NEXT> $ r7 = r26 field <NEXT> $ i9 = lengthof $ r7 <NEXT> if i13 < $ i9 goto label3 <NEXT> label r25 = org aspectj apache bcel classfile java class r0 <NEXT> $ r8 = r25 field <NEXT> $ r9 = $ r8 [ i13 ] <NEXT> $ r9 dump r1 <NEXT> i13 = i13 + 1 <NEXT> if i13 < $ i9 goto label3 <NEXT> r27 = org aspectj apache bcel classfile java class r0 <NEXT> $ r10 = r27 method <NEXT> $ i10 = lengthof $ r10 <NEXT> r1 write short $ i10 <NEXT> i14 = 0 <NEXT> goto label6 <NEXT> label r29 = org aspectj apache bcel classfile java class r0 <NEXT> $ r11 = r29 method <NEXT> $ i11 = lengthof $ r11 <NEXT> if i14 < $ i11 goto label5 <NEXT> label r28 = org aspectj apache bcel classfile java class r0 <NEXT> $ r12 = r28 method <NEXT> $ r13 = $ r12 [ i14 ] <NEXT> $ r13 dump r1 <NEXT> i14 = i14 + 1 <NEXT> if i14 < $ i11 goto label5 <NEXT> r30 = org aspectj apache bcel classfile java class r0 <NEXT> $ r14 = r30 attribute <NEXT> org aspectj apache bcel classfile attribute utils write attribute $ r14 r1 <NEXT> r1 close <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org aspectj apache bcel classfile method r0 <NEXT> r1 = r3 get code <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 get local variable table <NEXT> return $ r2 <NEXT> if r1 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r3 = org aspectj apache bcel generic branch handle r0 <NEXT> $ r1 = r3 bi <NEXT> i2 = $ r1 update position i0 i1 <NEXT> r4 = org aspectj apache bcel generic branch handle r0 <NEXT> $ r2 = r4 bi <NEXT> $ i3 = $ r2 position of this instruction <NEXT> r5 = org aspectj apache bcel generic branch handle r0 <NEXT> r5 po = $ i3 <NEXT> return i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org aspectj apache bcel generic code exception gen r0 <NEXT> $ r2 = r3 start_pc <NEXT> org aspectj apache bcel generic instruction branch notify target $ r2 r1 r0 <NEXT> r4 = org aspectj apache bcel generic code exception gen r0 <NEXT> r4 start_pc = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org aspectj apache bcel generic method gen r0 <NEXT> r1 set max local 0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r1 = org aspectj apache bcel repository get repository <NEXT> r5 = $ r1 find class r0 <NEXT> if r5 == null goto label3 <NEXT> label return r5 <NEXT> if r5 == null goto label3 <NEXT> label $ r2 = org aspectj apache bcel repository get repository <NEXT> $ r3 = $ r2 load class r0 <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org aspectj apache bcel util class loader repository use share cache <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = org aspectj apache bcel util class loader repository share cache <NEXT> $ r7 = r1 get class name <NEXT> r10 = org aspectj apache bcel util class loader repository r0 <NEXT> $ r8 = specialinvoke r10 to u r l $ r7 <NEXT> $ r6 remove $ r8 <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org aspectj apache bcel util class loader repository r0 <NEXT> $ r2 = r11 local cache <NEXT> $ r3 = r1 get class name <NEXT> r12 = org aspectj apache bcel util class loader repository r0 <NEXT> $ r4 = specialinvoke r12 to u r l $ r3 <NEXT> $ r2 remove $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r8 = org aspectj asm internal aspect j element hierarchy r0 <NEXT> $ r3 = r8 asm <NEXT> $ r4 = r1 get source file <NEXT> $ r5 = $ r3 get canonical file path $ r4 <NEXT> $ i0 = r1 get line <NEXT> r9 = org aspectj asm internal aspect j element hierarchy r0 <NEXT> $ r6 = r9 find element for source line $ r5 $ i0 <NEXT> label return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> z1 = @ parameter3 <NEXT> $ z2 = org aspectj util lang util be empty r0 <NEXT> if $ z2 == 0 goto label1 <NEXT> $ r10 = org aspectj bridge i message r a_ i message <NEXT> return $ r10 <NEXT> if $ z2 == 0 goto label1 <NEXT> label org aspectj util lang util throw iax if null r1 \ `` visitor\ `` <NEXT> if z0 == 0 goto label2 <NEXT> $ r11 = new java util array list <NEXT> specialinvoke $ r11 < init > <NEXT> goto label3 <NEXT> label r2 = $ r11 <NEXT> r3 = r0 iterator <NEXT> label $ z5 = r3 have next <NEXT> if $ z5 == 0 goto label7 <NEXT> $ r9 = r3 next <NEXT> r4 = org aspectj bridge i message $ r9 <NEXT> $ z3 = r1 handle message r4 <NEXT> if $ z3 == 0 goto label5 <NEXT> if z0 == 0 goto label6 <NEXT> r2 add r4 <NEXT> goto label6 <NEXT> label goto label4 <NEXT> if $ z3 == 0 goto label5 <NEXT> label if z1 == 0 goto label6 <NEXT> goto label7 <NEXT> label if z0 == 0 goto label8 <NEXT> $ i0 = r2 size <NEXT> if 0 ! = $ i0 goto label9 <NEXT> label $ r5 = org aspectj bridge i message r a_ i message <NEXT> return $ r5 <NEXT> if 0 ! = $ i0 goto label9 <NEXT> label $ r6 = org aspectj bridge i message r a_ i message <NEXT> $ r7 = r2 to array $ r6 <NEXT> $ r8 = org aspectj bridge i message [ ] $ r7 <NEXT> return $ r8 <NEXT> if z0 == 0 goto label2 <NEXT> label $ r11 = null <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if null ! = r0 goto label1 <NEXT> return \ `` i message null \ `` <NEXT> if null ! = r0 goto label1 <NEXT> label r1 = r0 get source location <NEXT> if null ! = r1 goto label2 <NEXT> $ r26 = \ `` \ `` <NEXT> goto label3 <NEXT> label $ r7 = new java lang string builder <NEXT> specialinvoke $ r7 < init > <NEXT> $ r8 = r0 get kind <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append $ r26 <NEXT> $ r11 = $ r10 append \ `` \ `` <NEXT> $ r12 = r0 get message <NEXT> $ r13 = $ r11 append $ r12 <NEXT> r27 = $ r13 to string <NEXT> r3 = r0 get throw <NEXT> if r3 == null goto label4 <NEXT> $ r16 = new java lang string builder <NEXT> specialinvoke $ r16 < init > <NEXT> $ r17 = $ r16 append r27 <NEXT> $ r18 = $ r17 append \ `` -- \ `` <NEXT> $ r19 = org aspectj util lang util render exception short r3 <NEXT> $ r20 = $ r18 append $ r19 <NEXT> r28 = $ r20 to string <NEXT> $ r21 = new java lang string builder <NEXT> specialinvoke $ r21 < init > <NEXT> $ r22 = $ r21 append r28 <NEXT> $ r23 = $ r22 append \ `` \n\ `` <NEXT> $ r24 = org aspectj util lang util render exception r3 z0 <NEXT> $ r25 = $ r23 append $ r24 <NEXT> r27 = $ r25 to string <NEXT> label $ r14 = r0 get extra source location <NEXT> $ z1 = $ r14 be empty <NEXT> if $ z1 == 0 goto label5 <NEXT> return r27 <NEXT> if $ z1 == 0 goto label5 <NEXT> label $ r15 = org aspectj bridge message util add extra source location r0 r27 <NEXT> return $ r15 <NEXT> if null ! = r1 goto label2 <NEXT> label $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append \ `` at \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r26 = $ r6 to string <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> org aspectj util lang util throw iax if null r0 \ `` handler\ `` <NEXT> org aspectj util lang util throw iax if null r1 \ `` kind\ `` <NEXT> r5 = new org aspectj bridge message util $ 1 handler print stream <NEXT> specialinvoke r5 < init > r2 r3 r1 r0 <NEXT> r6 = java io print stream r5 <NEXT> return r6 <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 == 2 goto label1 <NEXT> if i0 == 3 goto label1 <NEXT> $ r1 = new java lang illegal argument exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <NEXT> if i0 == 3 goto label1 <NEXT> label $ r0 = new org aspectj org eclipse jdt core dom aj a s t <NEXT> specialinvoke $ r0 < init > i0 <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> $ r2 = new org aspectj org eclipse jdt core dom after throw advice declaration <NEXT> specialinvoke $ r2 < init > r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r2 = new org aspectj org eclipse jdt core dom cflow pointcut <NEXT> specialinvoke $ r2 < init > r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r2 = new org aspectj org eclipse jdt core dom default type pattern <NEXT> specialinvoke $ r2 < init > r0 \ `` \ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = org aspectj org eclipse jdt core dom aspect declaration privileged_property <NEXT> r3 = org aspectj org eclipse jdt core dom aspect declaration r0 <NEXT> r3 pre value change $ r1 <NEXT> r4 = org aspectj org eclipse jdt core dom aspect declaration r0 <NEXT> r4 be privilege = z0 <NEXT> $ r2 = org aspectj org eclipse jdt core dom aspect declaration privileged_property <NEXT> r5 = org aspectj org eclipse jdt core dom aspect declaration r0 <NEXT> r5 post value change $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj org eclipse jdt core dom compilation unit r0 <NEXT> $ r1 = r2 type root <NEXT> r3 = org aspectj org eclipse jdt core i java element $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org aspectj org eclipse jdt internal compiler apt util many to many r0 <NEXT> r1 _dirty = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org aspectj org eclipse jdt internal compiler apt util many to many r0 <NEXT> $ z0 = r1 _dirty <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj org eclipse jdt internal core nd db d b property r0 <NEXT> r2 clear <NEXT> r3 = org aspectj org eclipse jdt internal core nd db d b property r0 <NEXT> $ r1 = r3 db <NEXT> r4 = org aspectj org eclipse jdt internal core nd db d b property r0 <NEXT> $ l0 = r4 record <NEXT> $ r1 free $ l0 2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj org eclipse jdt internal core nd nd link list r0 <NEXT> $ r1 = r2 raw list <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i3 = 0 <NEXT> r2 = org aspectj org eclipse jdt internal core nd nd raw link list r0 <NEXT> r1 = specialinvoke r2 get d b <NEXT> r3 = org aspectj org eclipse jdt internal core nd nd raw link list r0 <NEXT> i4 = r3 first block record count <NEXT> r4 = org aspectj org eclipse jdt internal core nd nd raw link list r0 <NEXT> l5 = r4 address <NEXT> label $ l1 = l5 + 0l <NEXT> l0 = r1 get rec ptr $ l1 <NEXT> r5 = org aspectj org eclipse jdt internal core nd nd raw link list r0 <NEXT> $ i2 = specialinvoke r5 get element in block l5 l0 i4 <NEXT> i3 = i3 + $ i2 <NEXT> r6 = org aspectj org eclipse jdt internal core nd nd raw link list r0 <NEXT> $ z0 = specialinvoke r6 be last block l5 l0 <NEXT> if $ z0 == 0 goto label2 <NEXT> goto label3 <NEXT> label return i3 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r7 = org aspectj org eclipse jdt internal core nd nd raw link list r0 <NEXT> i4 = r7 record count <NEXT> l5 = l0 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> org aspectj org eclipse jdt internal core nd util char array map check boundary r1 i0 i1 <NEXT> r5 = org aspectj org eclipse jdt internal core nd util char array map r0 <NEXT> $ r3 = r5 map <NEXT> r4 = new org aspectj org eclipse jdt internal core nd util char array map $ key <NEXT> specialinvoke r4 < init > r1 i0 i1 <NEXT> $ z0 = $ r3 contain key r4 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org aspectj org eclipse jdt internal core nd util path map r0 <NEXT> $ r3 = r5 root <NEXT> r2 = $ r3 get most specific node r1 <NEXT> $ z0 = r2 exist <NEXT> if $ z0 == 0 goto label1 <NEXT> $ i0 = r2 depth <NEXT> $ i1 = r1 segment count <NEXT> if $ i0 > = $ i1 goto label2 <NEXT> label return null <NEXT> if $ i0 > = $ i1 goto label2 <NEXT> label $ r4 = r2 value <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r2 = @ parameter3 <NEXT> r3 = @ parameter4 <NEXT> r4 = @ parameter5 <NEXT> r20 = new org aspectj tool ajc main <NEXT> specialinvoke r20 < init > <NEXT> r21 = new org aspectj bridge message handler <NEXT> specialinvoke r21 < init > <NEXT> r22 = org aspectj bridge i message holder r21 <NEXT> r20 set holder r22 <NEXT> label r20 run main r0 z0 <NEXT> label $ r10 = org aspectj bridge i message fail <NEXT> r23 = org aspectj bridge i message holder r21 <NEXT> org aspectj tool ajc main read message r23 $ r10 1 r1 <NEXT> $ r11 = org aspectj bridge i message error <NEXT> r24 = org aspectj bridge i message holder r21 <NEXT> org aspectj tool ajc main read message r24 $ r11 0 r2 <NEXT> $ r12 = org aspectj bridge i message warn <NEXT> r25 = org aspectj bridge i message holder r21 <NEXT> org aspectj tool ajc main read message r25 $ r12 0 r3 <NEXT> $ r13 = org aspectj bridge i message info <NEXT> r26 = org aspectj bridge i message holder r21 <NEXT> org aspectj tool ajc main read message r26 $ r13 0 r4 <NEXT> goto label5 <NEXT> label $ r14 = org aspectj bridge i message error <NEXT> $ i0 = r21 num message $ r14 1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org aspectj tool ajc main r0 <NEXT> r2 client holder = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r5 = new org aspectj bridge message <NEXT> $ r4 = org aspectj bridge i message fail <NEXT> specialinvoke r5 < init > r1 $ r4 r2 null <NEXT> r6 = org aspectj bridge i message r5 <NEXT> r0 handle message r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org aspectj tool ant taskdefs ajc2 r0 <NEXT> $ z0 = r1 nocomments <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org aspectj tool ant taskdefs ajc2 r0 <NEXT> r2 workingdir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new java util string tokenizer <NEXT> specialinvoke r8 < init > r1 \ <NEXT> label $ z0 = r8 have more token <NEXT> if $ z0 == 0 goto label3 <NEXT> r9 = org aspectj tool ant taskdefs ajc2 r0 <NEXT> $ r5 = r9 project <NEXT> $ r6 = r8 next token <NEXT> r3 = $ r5 resolve file $ r6 <NEXT> if r3 == null goto label2 <NEXT> $ z1 = r3 exist <NEXT> if $ z1 == 0 goto label2 <NEXT> $ z2 = r3 be directory <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r10 = org aspectj tool ant taskdefs ajc2 r0 <NEXT> $ r7 = r10 create argfile <NEXT> $ r7 set file r3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj tool ant taskdefs ajc2 r0 <NEXT> r2 have exclude = 1 <NEXT> $ r1 = specialinvoke r0 create exclude <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org aspectj tool ant taskdefs ajc task r0 <NEXT> $ r2 = r4 cmd <NEXT> $ r3 = r1 get absolute path <NEXT> $ r2 add flag \ `` - xlintfile\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org aspectj tool ant taskdefs ajc task r0 <NEXT> $ r4 = r5 cmd <NEXT> $ r3 = org aspectj tool ant taskdefs ajc task source_inputs <NEXT> r2 = $ r4 add option \ `` -source\ <NEXT> if null == r2 goto label1 <NEXT> r6 = org aspectj tool ant taskdefs ajc task r0 <NEXT> r6 ignore r2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj tool ant taskdefs ajc task r0 <NEXT> $ z0 = r2 execute in other v m <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r3 = org aspectj tool ant taskdefs ajc task r0 <NEXT> r1 = r3 main <NEXT> if null == r1 goto label2 <NEXT> r1 quit <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r7 = org aspectj tool ant taskdefs ajc task r0 <NEXT> $ z0 = r7 execute <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = new java lang illegal state exception <NEXT> specialinvoke r6 < init > \ `` should be executing\ `` <NEXT> throw r6 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r8 = org aspectj tool ant taskdefs ajc task r0 <NEXT> $ r1 = r8 outjar <NEXT> if null == $ r1 goto label2 <NEXT> r9 = org aspectj tool ant taskdefs ajc task r0 <NEXT> specialinvoke r9 complete outjar <NEXT> goto label3 <NEXT> label r11 = org aspectj tool ant taskdefs ajc task r0 <NEXT> $ r2 = r11 xdone signal <NEXT> if null == $ r2 goto label4 <NEXT> r12 = org aspectj tool ant taskdefs ajc task r0 <NEXT> $ r4 = r12 message holder <NEXT> r13 = org aspectj tool ant taskdefs ajc task r0 <NEXT> $ r3 = r13 xdone signal <NEXT> r14 = org aspectj bridge i message handler $ r4 <NEXT> org aspectj bridge message util info r14 $ r3 <NEXT> label return <NEXT> if null == $ r1 goto label2 <NEXT> label r10 = org aspectj tool ant taskdefs ajc task r0 <NEXT> specialinvoke r10 complete destdir <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> if null ! = r0 goto label01 <NEXT> $ r7 = new java lang illegal argument exception <NEXT> specialinvoke $ r7 < init > \ `` null dir\ `` <NEXT> throw $ r7 <NEXT> if null ! = r0 goto label01 <NEXT> label $ z1 = r0 exist <NEXT> if $ z1 == 0 goto label02 <NEXT> $ z2 = r0 can write <NEXT> if $ z2 ! = 0 goto label03 <NEXT> label return 0 <NEXT> if $ z2 ! = 0 goto label03 <NEXT> label $ z3 = r0 be directory <NEXT> if $ z3 ! = 0 goto label04 <NEXT> r0 delete <NEXT> return 1 <NEXT> if $ z3 ! = 0 goto label04 <NEXT> label r2 = r0 list <NEXT> if r2 ! = null goto label05 <NEXT> return 0 <NEXT> if r2 ! = null goto label05 <NEXT> label i3 = 0 <NEXT> i4 = 0 <NEXT> label $ i0 = lengthof r2 <NEXT> if i4 > = $ i0 goto label11 <NEXT> r3 = r2 [ i4 ] <NEXT> $ r6 = new java io file <NEXT> specialinvoke $ r6 < init > r0 r3 <NEXT> if null == r1 goto label07 <NEXT> $ z7 = r1 accept $ r6 <NEXT> if $ z7 == 0 goto label10 <NEXT> label $ z4 = $ r6 be directory <NEXT> if $ z4 == 0 goto label09 <NEXT> $ i1 = org aspectj util file util delete content $ r6 r1 z0 <NEXT> i3 = i3 + $ i1 <NEXT> r5 = $ r6 list <NEXT> if z0 == 0 goto label08 <NEXT> if r5 == null goto label08 <NEXT> $ i2 = lengthof r5 <NEXT> if 0 ! = $ i2 goto label08 <NEXT> $ r6 delete <NEXT> label goto label10 <NEXT> label i4 = i4 + 1 <NEXT> goto label06 <NEXT> if $ z4 == 0 goto label09 <NEXT> label $ r6 delete <NEXT> i3 = i3 + 1 <NEXT> if i4 > = $ i0 goto label11 <NEXT> label return i3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new java util array list <NEXT> specialinvoke $ r2 < init > <NEXT> if null == r0 goto label1 <NEXT> $ z0 = r0 can read <NEXT> if $ z0 == 0 goto label1 <NEXT> org aspectj util file util list file r0 null $ r2 <NEXT> label $ r3 = newarray java lang string [ 0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = java lang string [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = new java io file input stream <NEXT> specialinvoke $ r3 < init > r0 <NEXT> r2 = org aspectj util file util read a byte array $ r3 <NEXT> $ r3 close <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org aspectj util lang util any split r0 \ <NEXT> return $ r1 <END>
<BEG> l0 = @ parameter0 <NEXT> i4 = @ parameter1 <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` \ `` <NEXT> $ r3 = $ r2 append l0 <NEXT> r10 = $ r3 to string <NEXT> i1 = r10 length <NEXT> if i4 < = i1 goto label2 <NEXT> $ r4 = \ `` \ `` <NEXT> i2 = $ r4 length <NEXT> if i4 < = i2 goto label1 <NEXT> i4 = i2 <NEXT> label i3 = i4 - i1 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = \ `` \ `` <NEXT> $ r7 = $ r6 substring 0 i3 <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 append r10 <NEXT> r10 = $ r9 to string <NEXT> label return r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r2 = r1 get declare type <NEXT> if z0 == 0 goto label3 <NEXT> $ i1 = r1 get modifier <NEXT> $ z2 = java lang reflect modifier be static $ i1 <NEXT> if $ z2 == 0 goto label1 <NEXT> $ r28 = newarray org aspectj weaver unresolved type [ 1 ] <NEXT> $ r29 = r1 get type <NEXT> $ r28 [ 0 ] = $ r29 <NEXT> r30 = $ r28 <NEXT> goto label2 <NEXT> label r34 = new java lang string buffer <NEXT> specialinvoke r34 < init > \ `` ajc $ set $ \ `` <NEXT> $ r23 = r1 get name <NEXT> r34 append $ r23 <NEXT> r35 = new org aspectj weaver resolve member impl <NEXT> $ r25 = org aspectj weaver member method <NEXT> $ r26 = org aspectj weaver unresolved type void <NEXT> $ r27 = r34 to string <NEXT> specialinvoke r35 < init > $ r25 r2 9 $ r26 $ r27 r30 <NEXT> r39 = org aspectj weaver resolve member r35 <NEXT> return r39 <NEXT> if $ z2 == 0 goto label1 <NEXT> label $ r20 = newarray org aspectj weaver unresolved type [ 2 ] <NEXT> $ r20 [ 0 ] = r2 <NEXT> $ r21 = r1 get type <NEXT> $ r20 [ 1 ] = $ r21 <NEXT> r30 = $ r20 <NEXT> if z0 == 0 goto label3 <NEXT> label $ r3 = r1 get name <NEXT> r32 = org aspectj weaver name mangler privilege access method for field set $ r3 r2 r0 <NEXT> $ i0 = r1 get modifier <NEXT> $ z1 = java lang reflect modifier be static $ i0 <NEXT> if $ z1 == 0 goto label4 <NEXT> r36 = new java lang string builder <NEXT> specialinvoke r36 < init > <NEXT> $ r15 = r36 append \ `` \ `` <NEXT> $ r16 = r1 get return type <NEXT> $ r17 = $ r16 get signature <NEXT> $ r18 = $ r15 append $ r17 <NEXT> $ r19 = $ r18 append \ `` v\ `` <NEXT> r33 = $ r19 to string <NEXT> goto label5 <NEXT> label r38 = new org aspectj weaver resolve member impl <NEXT> $ r13 = org aspectj weaver member method <NEXT> specialinvoke r38 < init > $ r13 r2 9 r32 r33 <NEXT> r40 = org aspectj weaver resolve member r38 <NEXT> return r40 <NEXT> if $ z1 == 0 goto label4 <NEXT> label r37 = new java lang string builder <NEXT> specialinvoke r37 < init > <NEXT> $ r5 = r37 append \ `` \ `` <NEXT> $ r6 = r2 get signature <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = r1 get return type <NEXT> $ r9 = $ r8 get signature <NEXT> $ r10 = $ r7 append $ r9 <NEXT> $ r11 = $ r10 append \ `` v\ `` <NEXT> r33 = $ r11 to string <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r15 = new org aspectj weaver resolve member impl <NEXT> $ r4 = org aspectj weaver member method <NEXT> $ r5 = org aspectj weaver unresolved type void <NEXT> $ r6 = r0 get declare type <NEXT> $ r7 = r0 get name <NEXT> $ r8 = org aspectj weaver name mangler inter field set dispatcher r1 $ r6 $ r7 <NEXT> $ i1 = r0 get modifier <NEXT> $ z0 = java lang reflect modifier be static $ i1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r14 = newarray org aspectj weaver unresolved type [ 1 ] <NEXT> $ r12 = r0 get return type <NEXT> $ r14 [ 0 ] = $ r12 <NEXT> goto label2 <NEXT> label specialinvoke r15 < init > $ r4 r1 9 $ r5 $ r8 $ r14 <NEXT> $ r11 = r0 get type variable <NEXT> r16 = org aspectj weaver resolve member r15 <NEXT> r16 set type variable $ r11 <NEXT> r17 = org aspectj weaver resolve member r15 <NEXT> return r17 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r14 = newarray org aspectj weaver unresolved type [ 2 ] <NEXT> $ r9 = r0 get declare type <NEXT> $ r14 [ 0 ] = $ r9 <NEXT> $ r10 = r0 get return type <NEXT> $ r14 [ 1 ] = $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new org aspectj weaver bcel annotation access field var <NEXT> r5 = org aspectj weaver bcel annotation access var r0 <NEXT> specialinvoke r4 < init > r5 r1 r2 <NEXT> r6 = org aspectj weaver ast var r4 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> b1 = 0 <NEXT> i2 = 0 <NEXT> label $ i0 = lengthof r0 <NEXT> if i2 > = $ i0 goto label6 <NEXT> $ r1 = org aspectj weaver ajc member maker typex_joinpoint <NEXT> $ r2 = $ r1 get signature <NEXT> $ r3 = r0 [ i2 ] <NEXT> $ z0 = $ r2 equal $ r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> b1 = b1 | 2 <NEXT> goto label5 <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r4 = org aspectj weaver ajc member maker typex_proceedingjoinpoint <NEXT> $ r5 = $ r4 get signature <NEXT> $ r6 = r0 [ i2 ] <NEXT> $ z1 = $ r5 equal $ r6 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ r7 = org aspectj weaver ajc member maker typex_staticjoinpoint <NEXT> $ r8 = $ r7 get signature <NEXT> $ r9 = r0 [ i2 ] <NEXT> $ z2 = $ r8 equal $ r9 <NEXT> if $ z2 == 0 goto label4 <NEXT> b1 = b1 | 4 <NEXT> if $ z2 == 0 goto label4 <NEXT> label $ r10 = org aspectj weaver ajc member maker typex_enclosingstaticjoinpoint <NEXT> $ r11 = $ r10 get signature <NEXT> $ r12 = r0 [ i2 ] <NEXT> $ z3 = $ r11 equal $ r12 <NEXT> if $ z3 == 0 goto label5 <NEXT> b1 = b1 | 8 <NEXT> if i2 > = $ i0 goto label6 <NEXT> label return b1 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org aspectj weaver iterators $ 8 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = java util iterator r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = r0 get name a identifier <NEXT> $ r4 = r1 get name a identifier <NEXT> $ r5 = org aspectj weaver name mangler make name \ `` inter field init\ <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org aspectj weaver pattern if pointcut r0 <NEXT> $ i0 = r1 extra parameter flag <NEXT> $ i1 = $ i0 | 16 <NEXT> r2 = org aspectj weaver pattern if pointcut r0 <NEXT> r2 extra parameter flag = $ i1 <NEXT> if z0 == 0 goto label1 <NEXT> r3 = org aspectj weaver pattern if pointcut r0 <NEXT> $ i2 = r3 extra parameter flag <NEXT> $ i3 = $ i2 | 32 <NEXT> r4 = org aspectj weaver pattern if pointcut r0 <NEXT> r4 extra parameter flag = $ i3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org aspectj weaver pattern pattern parser r0 <NEXT> r3 pointcut designator handler = r1 <NEXT> r4 = org aspectj weaver pattern pattern parser r0 <NEXT> r4 world = r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org aspectj util fuzzy boolean no <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org aspectj weaver pattern wild type pattern r0 <NEXT> $ i0 = r1 dim <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r0 instanceof java lang reflect method <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = java lang reflect method r0 <NEXT> $ r7 = org aspectj weaver reflect reflection base reference type delegate factory create resolve method $ r6 r1 <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof java lang reflect constructor <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r4 = java lang reflect constructor r0 <NEXT> $ r5 = org aspectj weaver reflect reflection base reference type delegate factory create resolve constructor $ r4 r1 <NEXT> return $ r5 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r2 = java lang reflect field r0 <NEXT> $ r3 = org aspectj weaver reflect reflection base reference type delegate factory create resolve field $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> z2 = @ parameter2 <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r6 = new java util hash set <NEXT> specialinvoke r6 < init > <NEXT> r7 = org aspectj weaver resolve type r0 <NEXT> r8 = org aspectj weaver resolve type r0 <NEXT> specialinvoke r7 recurse hierarchy r6 r5 r8 z0 z1 z2 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org aspectj weaver shadow r0 <NEXT> $ r1 = r2 kind <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org aspectj weaver tool cache weaved class cache r0 <NEXT> $ r2 = r3 back <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org aspectj weaver tool pointcut parser r0 <NEXT> $ r5 = r9 class loader reference <NEXT> $ r6 = $ r5 get class loader <NEXT> r2 = $ r6 get resource r1 <NEXT> r3 = r2 open stream <NEXT> r8 = new java util property <NEXT> specialinvoke r8 < init > <NEXT> r8 load r3 <NEXT> r10 = org aspectj weaver tool pointcut parser r0 <NEXT> r10 set lint property r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r15 = new org aspectj weaver pattern pattern parser <NEXT> specialinvoke r15 < init > r1 <NEXT> r12 = r15 parse type pattern <NEXT> r19 = org aspectj weaver tool pointcut parser r0 <NEXT> $ r3 = r19 world <NEXT> r20 = org aspectj weaver world $ r3 <NEXT> r12 resolve r20 <NEXT> r16 = new org aspectj weaver internal tool type pattern matcher impl <NEXT> r21 = org aspectj weaver tool pointcut parser r0 <NEXT> $ r5 = r21 world <NEXT> r22 = org aspectj weaver world $ r5 <NEXT> specialinvoke r16 < init > r12 r22 <NEXT> label r23 = org aspectj weaver tool type pattern matcher r16 <NEXT> return r23 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org aspectj weaver world r0 <NEXT> $ r3 = r4 precedence calculator <NEXT> $ i0 = $ r3 compare by precedence r1 r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> if r3 == null goto label1 <NEXT> r14 = org aspectj weaver world r0 <NEXT> $ r8 = r14 message handler <NEXT> r11 = new org aspectj bridge message <NEXT> specialinvoke r11 < init > r2 r1 null r3 <NEXT> r15 = org aspectj bridge i message r11 <NEXT> $ r8 handle message r15 <NEXT> if r4 == null goto label2 <NEXT> r16 = org aspectj weaver world r0 <NEXT> $ r10 = r16 message handler <NEXT> r12 = new org aspectj bridge message <NEXT> specialinvoke r12 < init > r2 r1 null r4 <NEXT> r17 = org aspectj bridge i message r12 <NEXT> $ r10 handle message r17 <NEXT> goto label2 <NEXT> label return <NEXT> if r3 == null goto label1 <NEXT> label r18 = org aspectj weaver world r0 <NEXT> $ r6 = r18 message handler <NEXT> r13 = new org aspectj bridge message <NEXT> specialinvoke r13 < init > r2 r1 null r4 <NEXT> r19 = org aspectj bridge i message r13 <NEXT> $ r6 handle message r19 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = r2 get name a identifier <NEXT> $ r4 = r1 get name a identifier <NEXT> $ r5 = org aspectj weaver name mangler make name \ `` priv field set\ <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = com netflix astyanax map map util r0 <NEXT> $ r2 = r8 cache <NEXT> if $ r2 == null goto label1 <NEXT> r9 = com netflix astyanax map map util r0 <NEXT> $ r5 = r9 cache <NEXT> r10 = com netflix astyanax map map util r0 <NEXT> $ r4 = r10 annotation set <NEXT> $ r6 = $ r5 get mapping r1 $ r4 <NEXT> goto label2 <NEXT> label return $ r6 <NEXT> if $ r2 == null goto label1 <NEXT> label r7 = new com netflix astyanax map map <NEXT> $ r6 = r7 <NEXT> r11 = com netflix astyanax map map util r0 <NEXT> $ r3 = r11 annotation set <NEXT> specialinvoke r7 < init > r1 $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = java nio byte buffer $ r5 <NEXT> $ i0 = r3 limit <NEXT> r3 position $ i0 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r7 = com netflix astyanax serializers byte buffer output stream r0 <NEXT> $ r4 = r7 buffer <NEXT> $ r4 add all 0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com netflix astyanax util write ahead mutation batch executor r0 <NEXT> $ r3 = r5 wal <NEXT> r2 = $ r3 create entry <NEXT> r2 write mutation r1 <NEXT> r6 = com netflix astyanax util write ahead mutation batch executor r0 <NEXT> $ r4 = specialinvoke r6 execute wal entry r2 r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = com netflix astyanax recipes lock column prefix distribute row lock r0 <NEXT> r2 timeout = l0 <NEXT> r3 = com netflix astyanax recipes lock column prefix distribute row lock r0 <NEXT> r3 timeout unit = r1 <NEXT> r4 = com netflix astyanax recipes lock column prefix distribute row lock r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com netflix astyanax recipes lock column prefix distribute row lock r0 <NEXT> r2 release with mutation r1 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache avro data record builder base r0 <NEXT> $ r2 = r7 data <NEXT> $ r3 = r1 schema <NEXT> r8 = org apache avro data record builder base r0 <NEXT> $ r4 = r8 data <NEXT> $ r5 = $ r4 get default value r1 <NEXT> $ r6 = $ r2 deep copy $ r3 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache avro file codec factory register <NEXT> $ r3 = $ r2 put r0 r1 <NEXT> $ r4 = org apache avro file codec factory $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache avro file data file reader12 r0 <NEXT> $ r2 = r5 meta <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = byte [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache avro file data file reader12 r0 <NEXT> $ r1 = r2 schema <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache avro file data file writer r0 <NEXT> r1 flush on every block = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = org apache avro generic generic record builder r0 <NEXT> $ r2 = r5 field <NEXT> $ r3 = $ r2 [ i0 ] <NEXT> r6 = org apache avro generic generic record builder r0 <NEXT> $ r4 = specialinvoke r6 set $ r3 i0 r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > = 32 goto label1 <NEXT> i0 = 32 <NEXT> label if i0 < = 16777216 goto label2 <NEXT> i0 = 16777216 <NEXT> label r1 = org apache avro io encoder factory r0 <NEXT> r1 binary buffer size = i0 <NEXT> r2 = org apache avro io encoder factory r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache avro io encoder factory r0 <NEXT> $ i0 = r1 binary buffer size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if null ! = r1 goto label1 <NEXT> r8 = new java lang null pointer exception <NEXT> specialinvoke r8 < init > \ `` input stream to read from can not be null ! \ `` <NEXT> throw r8 <NEXT> if null ! = r1 goto label1 <NEXT> label r9 = org apache avro io json decoder r0 <NEXT> $ r2 = r9 parser <NEXT> $ r2 reset <NEXT> $ r3 = org apache avro io json decoder json factory <NEXT> $ r4 = $ r3 create json parser r1 <NEXT> r10 = org apache avro io json decoder r0 <NEXT> r10 in = $ r4 <NEXT> r11 = org apache avro io json decoder r0 <NEXT> $ r5 = r11 in <NEXT> $ r5 next token <NEXT> r12 = org apache avro io json decoder r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 production <NEXT> label r5 = org apache avro io parse parser r0 <NEXT> $ i1 = r5 po <NEXT> $ i0 = lengthof r2 <NEXT> $ i3 = $ i1 + $ i0 <NEXT> r6 = org apache avro io parse parser r0 <NEXT> $ r3 = r6 stack <NEXT> $ i2 = lengthof $ r3 <NEXT> if $ i3 < = $ i2 goto label2 <NEXT> r7 = org apache avro io parse parser r0 <NEXT> specialinvoke r7 expand stack <NEXT> goto label1 <NEXT> if $ i3 < = $ i2 goto label2 <NEXT> label r8 = org apache avro io parse parser r0 <NEXT> $ r4 = r8 stack <NEXT> r9 = org apache avro io parse parser r0 <NEXT> $ i5 = r9 po <NEXT> $ i4 = lengthof r2 <NEXT> java lang system arraycopy r2 0 $ r4 $ i5 $ i4 <NEXT> r10 = org apache avro io parse parser r0 <NEXT> $ i7 = r10 po <NEXT> $ i6 = lengthof r2 <NEXT> $ i8 = $ i7 + $ i6 <NEXT> r11 = org apache avro io parse parser r0 <NEXT> r11 po = $ i8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache avro io parse parser r0 <NEXT> $ i1 = r5 po <NEXT> r6 = org apache avro io parse parser r0 <NEXT> $ r2 = r6 stack <NEXT> $ i0 = lengthof $ r2 <NEXT> if $ i1 ! = $ i0 goto label1 <NEXT> r7 = org apache avro io parse parser r0 <NEXT> specialinvoke r7 expand stack <NEXT> label r8 = org apache avro io parse parser r0 <NEXT> $ r3 = r8 stack <NEXT> r9 = org apache avro io parse parser r0 <NEXT> $ i2 = r9 po <NEXT> $ i3 = $ i2 + 1 <NEXT> r10 = org apache avro io parse parser r0 <NEXT> r10 po = $ i3 <NEXT> $ r3 [ $ i2 ] = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache avro io parse skip parser r0 <NEXT> i0 = r2 po <NEXT> r3 = org apache avro io parse skip parser r0 <NEXT> r3 push symbol r1 <NEXT> r4 = org apache avro io parse skip parser r0 <NEXT> r4 skip to i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache avro io resolve decoder r0 <NEXT> $ r1 = r2 parser <NEXT> $ r1 process implicit action <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > r0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r4 = r1 [ i1 ] <NEXT> $ r5 append r4 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label $ r6 = $ r5 to string <NEXT> $ r7 = org apache avro protocol parse $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache avro validate can be read <NEXT> specialinvoke r2 < init > <NEXT> r3 = org apache avro schema validator builder r0 <NEXT> r4 = org apache avro schema validation strategy r2 <NEXT> r3 strategy = r4 <NEXT> r5 = org apache avro schema validator builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache avro ipc call future r0 <NEXT> $ r1 = r2 error <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache avro ipc responder r0 <NEXT> $ r2 = r3 rpc meta plugins <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache avro ipc r p c context r0 <NEXT> $ r1 = r2 handshake request <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache avro ipc r p c context r0 <NEXT> $ r1 = r2 response <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r5 = r1 span <NEXT> $ r6 = $ r5 event <NEXT> r3 = $ r6 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r3 next <NEXT> r4 = org apache avro ipc trace timestamped event $ r7 <NEXT> $ r8 = r4 event <NEXT> $ z1 = $ r8 instanceof org apache avro ipc trace span event <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r9 = r4 event <NEXT> $ r10 = org apache avro ipc trace span event $ r9 <NEXT> if $ r10 ! = r2 goto label2 <NEXT> $ l0 = r4 time stamp <NEXT> return $ l0 <NEXT> if $ r10 ! = r2 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return -1l <END>
<BEG> r0 = @ this <NEXT> r10 = org apache avro ipc netty transceiver r0 <NEXT> $ r2 = r10 state lock <NEXT> $ r3 = $ r2 read lock <NEXT> $ r3 lock <NEXT> label r11 = org apache avro ipc netty transceiver r0 <NEXT> $ r4 = r11 remote <NEXT> if $ r4 == null goto label2 <NEXT> $ z1 = 1 <NEXT> goto label3 <NEXT> label r12 = org apache avro ipc netty transceiver r0 <NEXT> $ r5 = r12 state lock <NEXT> $ r6 = $ r5 read lock <NEXT> $ r6 unlock <NEXT> return $ z1 <NEXT> if $ r4 == null goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r7 = new org awaitility duration $ plus <NEXT> specialinvoke r7 < init > null <NEXT> r9 = org awaitility duration r0 <NEXT> $ r2 = r9 unit <NEXT> if $ r2 ! = null goto label1 <NEXT> $ r6 = org awaitility duration forever <NEXT> goto label2 <NEXT> label r11 = org awaitility duration r0 <NEXT> $ r4 = r7 apply r11 $ r6 <NEXT> return $ r4 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r8 = new org awaitility duration <NEXT> $ r6 = r8 <NEXT> r10 = org awaitility duration r0 <NEXT> $ r3 = r10 unit <NEXT> specialinvoke r8 < init > l0 $ r3 <END>
<BEG> r0 = @ this <NEXT> r5 = com amazonaws amazon service exception r0 <NEXT> $ r1 = r5 raw response <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r4 = null <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = com amazonaws amazon service exception r0 <NEXT> $ r2 = r6 raw response <NEXT> $ r3 = $ r2 clone <NEXT> $ r4 = byte [ ] $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws amazon web service request r0 <NEXT> $ r1 = r2 credential provider <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = java lang integer value of i0 <NEXT> r2 = com amazonaws amazon web service request r0 <NEXT> r2 sdk client execution timeout = $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = com amazonaws auth a w s4 signer r0 <NEXT> $ r1 = r5 overridden date <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = null <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = new java util date <NEXT> $ r3 = r4 <NEXT> r6 = com amazonaws auth a w s4 signer r0 <NEXT> $ r2 = r6 overridden date <NEXT> $ l0 = $ r2 get time <NEXT> specialinvoke r4 < init > $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r23 = com amazonaws auth policy internal json policy writer r0 <NEXT> $ z0 = specialinvoke r23 be not null r1 <NEXT> if $ z0 ! = 0 goto label01 <NEXT> r20 = new java lang illegal argument exception <NEXT> specialinvoke r20 < init > \ `` policy can not be null\ `` <NEXT> throw r20 <NEXT> if $ z0 ! = 0 goto label01 <NEXT> label r24 = com amazonaws auth policy internal json policy writer r0 <NEXT> r16 = specialinvoke r24 json string of r1 <NEXT> label r25 = com amazonaws auth policy internal json policy writer r0 <NEXT> $ r4 = r25 writer <NEXT> $ r4 close <NEXT> label goto label05 <NEXT> label return r16 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util array a list r1 <NEXT> r3 = com amazonaws auth policy policy r0 <NEXT> r3 set statement $ r2 <NEXT> r4 = com amazonaws auth policy policy r0 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new com amazonaws auth policy internal json policy reader <NEXT> specialinvoke $ r2 < init > r1 <NEXT> $ r3 = $ r2 create policy from json string r0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws auth policy principal r0 <NEXT> $ r1 = r2 provider <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws auth policy statement r0 <NEXT> $ r1 = r2 principal <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws auth process credential provider r0 <NEXT> $ r1 = r2 credential expiration time <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws auth profile internal securitytoken role info r0 <NEXT> r2 role arn = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = com amazonaws auth profile profile credential provider r0 <NEXT> r1 refresh force interval nanos = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = com amazonaws auth profile profile config file r0 <NEXT> $ r1 = r6 profile file <NEXT> $ l0 = $ r1 last modified <NEXT> r7 = com amazonaws auth profile profile config file r0 <NEXT> $ l1 = r7 profile file last modified <NEXT> $ b2 = $ l0 cmp $ l1 <NEXT> if $ b2 < = 0 goto label1 <NEXT> r8 = com amazonaws auth profile profile config file r0 <NEXT> $ r3 = r8 profile file <NEXT> $ l3 = $ r3 last modified <NEXT> r9 = com amazonaws auth profile profile config file r0 <NEXT> r9 profile file last modify = $ l3 <NEXT> r10 = com amazonaws auth profile profile config file r0 <NEXT> $ r4 = r10 profile file <NEXT> $ r5 = com amazonaws auth profile profile config file load profile $ r4 <NEXT> r11 = com amazonaws auth profile profile config file r0 <NEXT> r11 all profile = $ r5 <NEXT> label r12 = com amazonaws auth profile profile config file r0 <NEXT> $ r2 = r12 credential provider cache <NEXT> $ r2 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws client builder aws async client builder r0 <NEXT> r2 executor factory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws client builder aws client builder r0 <NEXT> r2 metric collector = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws client builder aws client builder r0 <NEXT> $ r1 = r2 endpoint configuration <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws client configuration r0 <NEXT> r2 set protocol r1 <NEXT> r3 = com amazonaws client configuration r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws client configuration r0 <NEXT> r2 user agent suffix = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws client configuration r0 <NEXT> $ r1 = r2 local address <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws client configuration r0 <NEXT> r2 proxy password = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws client configuration r0 <NEXT> $ r1 = r2 proxy domain <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com amazonaws client configuration r0 <NEXT> r1 set connection timeout i0 <NEXT> r2 = com amazonaws client configuration r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws client configuration r0 <NEXT> r2 signer override = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com amazonaws client configuration r0 <NEXT> $ z0 = r1 preemptive basic proxy auth <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = com amazonaws client configuration r0 <NEXT> r1 connection t t l = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = com amazonaws client configuration r0 <NEXT> r1 connection max idle millis = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com amazonaws client configuration r0 <NEXT> r1 validate after inactivity millis = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com amazonaws event request progress support r0 <NEXT> $ l0 = r1 response content length <NEXT> return $ l0 <END>
<BEG> $ r0 = com amazonaws event s d k progress publisher $ lazy holder access $ 000 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get status line <NEXT> i0 = $ r1 get status code <NEXT> $ i1 = i0 100 <NEXT> if $ i1 ! = 2 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 ! = 2 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws http http response r0 <NEXT> $ r1 = r2 http request <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = com amazonaws http http response r0 <NEXT> $ r3 = r5 header <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com amazonaws internal config internal config r0 <NEXT> $ r2 = r3 get signer config r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r11 = com amazonaws internal e c2 metadata client r0 <NEXT> r8 = r11 read resource \ `` late meta-data iam security-credentials \ `` <NEXT> r9 = r8 trim <NEXT> r1 = r9 split \ `` \n\ `` <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r2 = r1 [ 0 ] <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r4 = r10 append \ `` late meta-data iam security-credentials \ `` <NEXT> $ r5 = $ r4 append r2 <NEXT> $ r6 = $ r5 to string <NEXT> r12 = com amazonaws internal e c2 metadata client r0 <NEXT> $ r7 = r12 read resource $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = com amazonaws internal f i f o cache r0 <NEXT> $ r4 = r9 rlock <NEXT> $ r4 lock <NEXT> label r10 = com amazonaws internal f i f o cache r0 <NEXT> $ r5 = r10 map <NEXT> r2 = $ r5 get r1 <NEXT> label r11 = com amazonaws internal f i f o cache r0 <NEXT> $ r6 = r11 rlock <NEXT> $ r6 unlock <NEXT> return r2 <END>
<BEG> $ z0 = com amazonaws metric aws sdk metric per host metric include <NEXT> return $ z0 <END>
<BEG> $ r0 = com amazonaws metric aws sdk metric registry <NEXT> $ r1 = $ r0 predefined metric <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 to string <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws partition model endpoint r0 <NEXT> $ r1 = r2 credential scope <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws partition model endpoint r0 <NEXT> $ r1 = r2 ssl common name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws partition model partition r0 <NEXT> $ r1 = r2 dns suffix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws partition model partition r0 <NEXT> r2 region regex = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com amazonaws partition model partition r0 <NEXT> $ r2 = r3 region <NEXT> $ z0 = $ r2 contain key r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = com amazonaws partition model partition r0 <NEXT> $ z1 = specialinvoke r4 match region regex r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r5 = com amazonaws partition model partition r0 <NEXT> $ z2 = specialinvoke r5 have service endpoint r1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com amazonaws partition partition region impl r0 <NEXT> $ z0 = r3 be service support r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r4 = com amazonaws partition partition region impl r0 <NEXT> $ r2 = specialinvoke r4 get endpoint r1 <NEXT> $ z1 = $ r2 have http support <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = com amazonaws protocol json internal marshaller registry r0 <NEXT> return r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r2 = com amazonaws protocol json internal marshaller registry builder <NEXT> r7 = com amazonaws protocol json internal marshaller registry r0 <NEXT> $ r3 = r7 marshallers <NEXT> com amazonaws protocol json internal marshaller registry $ builder access $ 200 r2 $ r3 <NEXT> $ r4 = com amazonaws protocol json internal marshaller registry $ builder access $ 000 r1 <NEXT> com amazonaws protocol json internal marshaller registry $ builder access $ 200 r2 $ r4 <NEXT> $ r5 = r2 build <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws region region r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> $ r0 = com amazonaws region region metadata factory create <NEXT> com amazonaws region region utils region metadata = $ r0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = com amazonaws sdk base exception r0 <NEXT> $ z0 = com amazonaws retry retry utils be request entity too large exception r1 <NEXT> return $ z0 <END>
<BEG> i0 = @ parameter0 <NEXT> com amazonaws s d k global time global time offset = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 name <NEXT> r3 = com amazonaws util a w s request metric full support r0 <NEXT> r3 increment counter $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = r1 name <NEXT> r4 = com amazonaws util a w s request metric full support r0 <NEXT> r4 add property $ r3 r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r2 = r0 <NEXT> goto label3 <NEXT> label return $ r2 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r1 = com amazonaws util base16 codec <NEXT> $ r2 = $ r1 encode r0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ r3 = \ `` \ `` <NEXT> goto label3 <NEXT> label return $ r3 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r1 = com amazonaws util base32 codec <NEXT> $ r2 = $ r1 encode r0 <NEXT> $ r3 = com amazonaws util codec utils to string direct $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r2 = r0 <NEXT> goto label3 <NEXT> label return $ r2 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r1 = com amazonaws util base32 codec <NEXT> $ i1 = lengthof r0 <NEXT> $ r2 = $ r1 decode r0 $ i1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r2 = r0 <NEXT> goto label3 <NEXT> label return $ r2 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r1 = com amazonaws util base64 codec <NEXT> $ i1 = lengthof r0 <NEXT> $ r2 = $ r1 decode r0 $ i1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ z0 = r0 have array <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = r0 array <NEXT> $ i1 = r0 array offset <NEXT> $ i2 = r0 position <NEXT> $ i3 = $ i1 + $ i2 <NEXT> $ i4 = r0 array offset <NEXT> $ i5 = r0 limit <NEXT> $ i6 = $ i4 + $ i5 <NEXT> $ r5 = java util array copy of range $ r4 $ i3 $ i6 <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i0 = r0 remain <NEXT> r1 = newarray byte [ $ i0 ] <NEXT> $ r2 = r0 a read only buffer <NEXT> $ r2 get r1 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = com amazonaws util class loader helper get resource a stream r0 0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label r12 = new java math big decimal <NEXT> specialinvoke r12 < init > r0 <NEXT> r13 = new java util date <NEXT> $ r3 = r12 scale by power of ten 3 <NEXT> $ l0 = $ r3 long value <NEXT> specialinvoke r13 < init > $ l0 <NEXT> label return r13 <END>
<BEG> l0 = @ parameter0 <NEXT> $ r0 = java util concurrent time unit milliseconds <NEXT> $ l1 = $ r0 to day l0 <NEXT> return $ l1 <END>
<BEG> $ r0 = com amazonaws util e c2 metadata utils fetch data \ `` late meta-data local-ipv4\ `` <NEXT> return $ r0 <END>
<BEG> $ r0 = com amazonaws util e c2 metadata utils fetch data \ `` late meta-data public-keys 0 openssh-key\ `` <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = @ parameter6 <NEXT> r7 = @ parameter7 <NEXT> r8 = @ parameter8 <NEXT> r9 = @ parameter9 <NEXT> $ r11 = new java util hash map <NEXT> specialinvoke $ r11 < init > <NEXT> com amazonaws util immutable map parameter put and warn duplicate key $ r11 r0 r1 <NEXT> com amazonaws util immutable map parameter put and warn duplicate key $ r11 r2 r3 <NEXT> com amazonaws util immutable map parameter put and warn duplicate key $ r11 r4 r5 <NEXT> com amazonaws util immutable map parameter put and warn duplicate key $ r11 r6 r7 <NEXT> com amazonaws util immutable map parameter put and warn duplicate key $ r11 r8 r9 <NEXT> $ r12 = new com amazonaws util immutable map parameter <NEXT> specialinvoke $ r12 < init > $ r11 <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws util string input stream r0 <NEXT> $ r1 = r2 string <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = r0 trim <NEXT> return $ r1 <END>
<BEG> r2 = new com amazonaws util timing info full support <NEXT> $ l0 = java lang system current time millis <NEXT> $ r1 = java lang long value of $ l0 <NEXT> $ l1 = java lang system nano time <NEXT> specialinvoke r2 < init > $ r1 $ l1 null <NEXT> r3 = com amazonaws util time info r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r10 = com amazonaws util x m l writer r0 <NEXT> $ r2 = r10 element stack <NEXT> $ r3 = $ r2 pop <NEXT> r1 = java lang string $ r3 <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r5 = r9 append \ `` < \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 append \ `` > \ `` <NEXT> $ r8 = $ r7 to string <NEXT> r11 = com amazonaws util x m l writer r0 <NEXT> specialinvoke r11 append $ r8 <NEXT> r12 = com amazonaws util x m l writer r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 to string <NEXT> r4 = com amazonaws util x m l writer r0 <NEXT> $ r3 = specialinvoke r4 escape x m l entity $ r2 <NEXT> r5 = com amazonaws util x m l writer r0 <NEXT> specialinvoke r5 append $ r3 <NEXT> r6 = com amazonaws util x m l writer r0 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = com amazonaws util xpath utils xpath <NEXT> $ r3 = com amazonaws util xpath utils a float r0 r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ i0 = 0 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = r0 get length <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r1 be null <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 be array <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ r5 = new java lang runtime exception <NEXT> specialinvoke $ r5 < init > \ `` expect an array\ `` <NEXT> throw $ r5 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r2 = r1 iterator <NEXT> label $ z2 = r2 have next <NEXT> if $ z2 == 0 goto label5 <NEXT> $ r4 = r2 next <NEXT> r3 = com fasterxml jackson databind json node $ r4 <NEXT> $ z3 = r3 equal r0 <NEXT> if $ z3 == 0 goto label4 <NEXT> return 1 <NEXT> if $ z3 == 0 goto label4 <NEXT> label goto label3 <NEXT> if $ z2 == 0 goto label5 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com amazonaws service sqs amazon s q s async client r0 <NEXT> $ r1 = r2 executor service <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = @ parameter0 <NEXT> r5 = com amazonaws service sqs amazon s q s client r0 <NEXT> r6 = com amazonaws amazon web service request r3 <NEXT> $ r1 = r5 before client execution r6 <NEXT> r4 = com amazonaws service sqs model delete message request $ r1 <NEXT> r7 = com amazonaws service sqs amazon s q s client r0 <NEXT> $ r2 = r7 execute delete message r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = @ parameter0 <NEXT> r5 = com amazonaws service sqs amazon s q s client r0 <NEXT> r6 = com amazonaws amazon web service request r3 <NEXT> $ r1 = r5 before client execution r6 <NEXT> r4 = com amazonaws service sqs model delete message batch request $ r1 <NEXT> r7 = com amazonaws service sqs amazon s q s client r0 <NEXT> $ r2 = r7 execute delete message batch r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = @ parameter0 <NEXT> r5 = com amazonaws service sqs amazon s q s client r0 <NEXT> r6 = com amazonaws amazon web service request r3 <NEXT> $ r1 = r5 before client execution r6 <NEXT> r4 = com amazonaws service sqs model list dead letter source queue request $ r1 <NEXT> r7 = com amazonaws service sqs amazon s q s client r0 <NEXT> $ r2 = r7 execute list dead letter source queue r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = @ parameter0 <NEXT> r5 = com amazonaws service sqs amazon s q s client r0 <NEXT> r6 = com amazonaws amazon web service request r3 <NEXT> $ r1 = r5 before client execution r6 <NEXT> r4 = com amazonaws service sqs model send message batch request $ r1 <NEXT> r7 = com amazonaws service sqs amazon s q s client r0 <NEXT> $ r2 = r7 execute send message batch r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com amazonaws service sqs buffer queue buffer r0 <NEXT> r2 = r5 send message r1 null <NEXT> r6 = com amazonaws service sqs buffer queue buffer r0 <NEXT> $ r3 = specialinvoke r6 wait for future r2 <NEXT> $ r4 = com amazonaws service sqs model send message result $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com amazonaws service sqs buffer queue buffer r0 <NEXT> r2 = r5 receive message r1 null <NEXT> r6 = com amazonaws service sqs buffer queue buffer r0 <NEXT> $ r3 = specialinvoke r6 wait for future r2 <NEXT> $ r4 = com amazonaws service sqs model receive message result $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws service sqs model add permission request r0 <NEXT> r2 label = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws service sqs model batch result error entry r0 <NEXT> r2 message = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws service sqs model change message visibility batch result entry r0 <NEXT> r2 id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws service sqs model change message visibility request r0 <NEXT> r2 visibility timeout = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws service sqs model create queue result r0 <NEXT> r2 queue url = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = com amazonaws service sqs model delete message batch result r0 <NEXT> $ r1 = r5 successful <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new com amazonaws internal sdk internal list <NEXT> specialinvoke r4 < init > <NEXT> r6 = com amazonaws service sqs model delete message batch result r0 <NEXT> r6 successful = r4 <NEXT> label r7 = com amazonaws service sqs model delete message batch result r0 <NEXT> $ r2 = r7 successful <NEXT> r8 = java util list $ r2 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws service sqs model send message batch request entry r0 <NEXT> r2 id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com amazonaws service sqs model send message request r0 <NEXT> r2 message body = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache axis attachment attachment part r0 <NEXT> $ r3 = r6 mime header <NEXT> $ r4 = r1 to lower case <NEXT> r2 = $ r3 get header $ r4 <NEXT> if r2 == null goto label1 <NEXT> $ i0 = lengthof r2 <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ r5 = r2 [ 0 ] <NEXT> return $ r5 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r19 = org apache axis attachment attachment impl r0 <NEXT> $ i1 = r19 sendtype <NEXT> if $ i1 ! = 1 goto label01 <NEXT> $ i3 = 2 <NEXT> goto label02 <NEXT> label r21 = org apache axis attachment attachment impl r0 <NEXT> specialinvoke r21 mergein attachment <NEXT> if $ i3 == 2 goto label03 <NEXT> if $ i3 ! = 4 goto label09 <NEXT> label r22 = org apache axis attachment attachment impl r0 <NEXT> $ r5 = r22 multipart <NEXT> if $ r5 == null goto label04 <NEXT> r23 = org apache axis attachment attachment impl r0 <NEXT> $ r16 = r23 multipart <NEXT> goto label05 <NEXT> label org apache axis attachment mime utils write to multi part stream r1 $ r16 <NEXT> r28 = org apache axis attachment attachment impl r0 <NEXT> $ r9 = r28 order attachment <NEXT> r17 = $ r9 iterator <NEXT> label $ z2 = r17 have next <NEXT> if $ z2 == 0 goto label08 <NEXT> $ r10 = r17 next <NEXT> r2 = org apache axis attachment attachment part $ r10 <NEXT> r29 = org apache axis part r2 <NEXT> r3 = org apache axis attachment attachment utils get activation data handler r29 <NEXT> r4 = r3 get data source <NEXT> if r4 == null goto label07 <NEXT> $ z0 = r4 instanceof org apache axis attachment manage memory data source <NEXT> if $ z0 == 0 goto label07 <NEXT> $ r11 = org apache axis attachment manage memory data source r4 <NEXT> $ r11 delete <NEXT> label goto label06 <NEXT> if $ z2 == 0 goto label08 <NEXT> label goto label10 <NEXT> label goto label12 <NEXT> label return <NEXT> if $ r5 == null goto label04 <NEXT> label r24 = org apache axis attachment attachment impl r0 <NEXT> $ r6 = r24 soap part <NEXT> $ r7 = $ r6 get a string <NEXT> r25 = org apache axis attachment attachment impl r0 <NEXT> $ r8 = r25 order attachment <NEXT> r26 = org apache axis attachment attachment impl r0 <NEXT> $ i2 = r26 get send type <NEXT> $ r16 = org apache axis attachment mime utils create m p $ r7 $ r8 $ i2 <NEXT> r27 = org apache axis attachment attachment impl r0 <NEXT> r27 multipart = $ r16 <NEXT> if $ i3 ! = 4 goto label09 <NEXT> label if $ i3 ! = 3 goto label10 <NEXT> r30 = org apache axis attachment attachment impl r0 <NEXT> $ r13 = r30 create dime message <NEXT> $ r13 write r1 <NEXT> if $ i1 ! = 1 goto label01 <NEXT> label r20 = org apache axis attachment attachment impl r0 <NEXT> $ i3 = r20 sendtype <END>
<BEG> r0 = @ this <NEXT> r11 = org apache axis attachment attachment impl r0 <NEXT> $ z0 = r11 _asked for stream <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = new java lang illegal state exception <NEXT> $ r6 = org apache axis utils message get message \ `` concurrent modification of stream\ `` <NEXT> specialinvoke r10 < init > $ r6 <NEXT> throw r10 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r12 = org apache axis attachment attachment impl r0 <NEXT> r12 multipart = null <NEXT> r13 = org apache axis attachment attachment impl r0 <NEXT> r13 dimemultipart = null <NEXT> r14 = org apache axis attachment attachment impl r0 <NEXT> specialinvoke r14 mergein attachment <NEXT> r15 = org apache axis attachment attachment impl r0 <NEXT> $ r2 = r15 attachment <NEXT> $ r2 clear <NEXT> r16 = org apache axis attachment attachment impl r0 <NEXT> $ r3 = r16 order attachment <NEXT> $ r3 clear <NEXT> r17 = org apache axis attachment attachment impl r0 <NEXT> $ r4 = r17 stack data handler <NEXT> $ r4 clear <NEXT> label goto label4 <NEXT> label return <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 ! = 4 goto label1 <NEXT> return \ `` mtom\ `` <NEXT> if i0 ! = 4 goto label1 <NEXT> label if i0 ! = 2 goto label2 <NEXT> return \ `` mime\ `` <NEXT> label if i0 ! = 2 goto label2 <NEXT> label if i0 ! = 3 goto label3 <NEXT> return \ `` dime\ `` <NEXT> label if i0 ! = 3 goto label3 <NEXT> label if i0 ! = 5 goto label4 <NEXT> return \ `` none\ `` <NEXT> label if i0 ! = 5 goto label4 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis attachment manage memory data source r0 <NEXT> $ r1 = r2 disk cache file <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache axis axis engine current message context <NEXT> $ r1 set r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis axis fault r0 <NEXT> r2 clear fault detail <NEXT> r3 = org apache axis axis fault r0 <NEXT> r3 add fault detail string r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis axis fault r0 <NEXT> $ r1 = r2 fault header <NEXT> return $ r1 <END>
<BEG> $ r0 = org apache common discovery tool manage property get property <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis axis service config impl r0 <NEXT> $ r1 = r2 method <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache axis client admin client default configuration <NEXT> $ r1 set r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r3 = org apache axis client admin client log <NEXT> $ r4 = org apache axis utils message get message \ `` do quit00\ `` <NEXT> $ r3 debug $ r4 <NEXT> r1 = \ `` < mquit xmlnsm=\\\ `` http xml apache org axis wsdd \\\ `` > \ `` <NEXT> r8 = new java io byte array input stream <NEXT> $ r6 = r1 get bytes <NEXT> specialinvoke r8 < init > $ r6 <NEXT> r9 = org apache axis client admin client r0 <NEXT> $ r7 = r9 process r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r7 = org apache axis client call r0 <NEXT> $ z0 = r7 be property support r1 <NEXT> if $ z0 ! = 0 goto label4 <NEXT> label r6 = new javax xml rpc j a x r p c exception <NEXT> if r1 ! = null goto label2 <NEXT> $ r5 = org apache axis utils message get message \ `` bad prop03\ `` <NEXT> goto label3 <NEXT> label specialinvoke r6 < init > $ r5 <NEXT> r8 = java lang throwable r6 <NEXT> throw r8 <NEXT> if r1 ! = null goto label2 <NEXT> label $ r5 = org apache axis utils message get message \ `` bad prop05\ <NEXT> if $ z0 ! = 0 goto label4 <NEXT> label r9 = org apache axis client call r0 <NEXT> $ r3 = r9 my property <NEXT> $ r3 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> r15 = org apache axis client call r0 <NEXT> $ z1 = r15 operation set manually <NEXT> if $ z1 == 0 goto label1 <NEXT> r12 = new java lang runtime exception <NEXT> $ r11 = org apache axis utils message get message \ `` operation already set\ `` <NEXT> specialinvoke r12 < init > $ r11 <NEXT> throw r12 <NEXT> if $ z1 == 0 goto label1 <NEXT> label r16 = org apache axis client call r0 <NEXT> $ r5 = r16 operation <NEXT> if $ r5 ! = null goto label2 <NEXT> r13 = new org apache axis description operation desc <NEXT> specialinvoke r13 < init > <NEXT> r17 = org apache axis client call r0 <NEXT> r17 operation = r13 <NEXT> label r14 = new org apache axis description fault desc <NEXT> specialinvoke r14 < init > <NEXT> r14 set q name r1 <NEXT> $ r7 = r2 get name <NEXT> r14 set class name $ r7 <NEXT> r14 set xml type r3 <NEXT> r14 set complex z0 <NEXT> r18 = org apache axis client call r0 <NEXT> $ r8 = r18 operation <NEXT> $ r8 add fault r14 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r35 = new javax xml rpc service exception <NEXT> $ r32 = org apache axis utils message get message \ `` bad port00\ `` <NEXT> specialinvoke r35 < init > $ r32 <NEXT> r40 = java lang throwable r35 <NEXT> throw r40 <NEXT> if r1 ! = null goto label1 <NEXT> label r41 = org apache axis client service r0 <NEXT> $ r9 = r41 wsdl service <NEXT> if $ r9 ! = null goto label2 <NEXT> r36 = new javax xml rpc service exception <NEXT> $ r30 = org apache axis utils message get message \ `` wsdl missing00\ `` <NEXT> specialinvoke r36 < init > $ r30 <NEXT> r42 = java lang throwable r36 <NEXT> throw r42 <NEXT> if $ r9 ! = null goto label2 <NEXT> label r43 = org apache axis client service r0 <NEXT> $ r10 = r43 wsdl service <NEXT> $ r11 = r1 get local part <NEXT> r2 = $ r10 get port $ r11 <NEXT> if r2 ! = null goto label3 <NEXT> r38 = new javax xml rpc service exception <NEXT> r37 = new java lang string buffer <NEXT> specialinvoke r37 < init > <NEXT> $ r25 = r37 append \ `` \ `` <NEXT> $ r26 = $ r25 append r1 <NEXT> $ r27 = $ r26 to string <NEXT> $ r28 = org apache axis utils message get message \ `` no port00\ <NEXT> specialinvoke r38 < init > $ r28 <NEXT> r44 = java lang throwable r38 <NEXT> throw r44 <NEXT> if r2 ! = null goto label3 <NEXT> label r3 = r2 get bind <NEXT> r45 = org apache axis client service r0 <NEXT> $ r12 = r45 wsdl parser <NEXT> r4 = $ r12 get symbol table <NEXT> $ r13 = r3 get q name <NEXT> r5 = r4 get bind entry $ r13 <NEXT> $ r14 = r5 get parameter <NEXT> $ r15 = $ r14 key set <NEXT> r6 = $ r15 iterator <NEXT> r39 = new java util vector <NEXT> specialinvoke r39 < init > <NEXT> label $ z0 = r6 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r18 = r6 next <NEXT> r33 = javax wsdl operation $ r18 <NEXT> $ r19 = r2 get name <NEXT> $ r20 = javax xml namespace q name value of $ r19 <NEXT> $ r21 = r33 get name <NEXT> $ r22 = javax xml namespace q name value of $ r21 <NEXT> r46 = org apache axis client service r0 <NEXT> r8 = r46 create call $ r20 $ r22 <NEXT> r39 add r8 <NEXT> goto label4 <NEXT> if $ z0 == 0 goto label5 <NEXT> label $ i0 = r39 size <NEXT> r34 = newarray javax xml rpc call [ $ i0 ] <NEXT> r39 to array r34 <NEXT> return r34 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis client service r0 <NEXT> r2 engine = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis client stub r0 <NEXT> z0 = r1 first call <NEXT> r2 = org apache axis client stub r0 <NEXT> r2 first call = 0 <NEXT> return z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 == null goto label01 <NEXT> if r2 ! = null goto label04 <NEXT> label r39 = new javax xml rpc j a x r p c exception <NEXT> if r1 ! = null goto label02 <NEXT> $ r38 = \ `` bad prop03\ `` <NEXT> goto label03 <NEXT> label $ r5 = org apache axis utils message get message $ r38 <NEXT> specialinvoke r39 < init > $ r5 <NEXT> r47 = java lang throwable r39 <NEXT> throw r47 <NEXT> if r1 ! = null goto label02 <NEXT> label $ r38 = \ `` bad prop04\ `` <NEXT> if r2 ! = null goto label04 <NEXT> label $ z0 = r1 equal \ `` javax xml rpc security auth username\ `` <NEXT> if $ z0 == 0 goto label06 <NEXT> $ z10 = r2 instanceof java lang string <NEXT> if $ z10 ! = 0 goto label05 <NEXT> r40 = new javax xml rpc j a x r p c exception <NEXT> $ r31 = newarray java lang string [ 3 ] <NEXT> $ r31 [ 0 ] = r1 <NEXT> $ r31 [ 1 ] = \ `` java lang string\ `` <NEXT> $ r32 = r2 get class <NEXT> $ r33 = $ r32 get name <NEXT> $ r31 [ 2 ] = $ r33 <NEXT> $ r34 = org apache axis utils message get message \ `` bad prop00\ <NEXT> specialinvoke r40 < init > $ r34 <NEXT> r48 = java lang throwable r40 <NEXT> throw r48 <NEXT> if $ z10 ! = 0 goto label05 <NEXT> label $ r29 = java lang string r2 <NEXT> r49 = org apache axis client stub r0 <NEXT> r49 cache username = $ r29 <NEXT> goto label17 <NEXT> label return <NEXT> if $ z0 == 0 goto label06 <NEXT> label $ z1 = r1 equal \ `` javax xml rpc security auth password\ `` <NEXT> if $ z1 == 0 goto label08 <NEXT> $ z9 = r2 instanceof java lang string <NEXT> if $ z9 ! = 0 goto label07 <NEXT> r41 = new javax xml rpc j a x r p c exception <NEXT> $ r25 = newarray java lang string [ 3 ] <NEXT> $ r25 [ 0 ] = r1 <NEXT> $ r25 [ 1 ] = \ `` java lang string\ `` <NEXT> $ r26 = r2 get class <NEXT> $ r27 = $ r26 get name <NEXT> $ r25 [ 2 ] = $ r27 <NEXT> $ r28 = org apache axis utils message get message \ `` bad prop00\ <NEXT> specialinvoke r41 < init > $ r28 <NEXT> r50 = java lang throwable r41 <NEXT> throw r50 <NEXT> if $ z9 ! = 0 goto label07 <NEXT> label $ r23 = java lang string r2 <NEXT> r51 = org apache axis client stub r0 <NEXT> r51 cache password = $ r23 <NEXT> if $ z1 == 0 goto label08 <NEXT> label $ z2 = r1 equal \ `` javax xml rpc service endpoint address\ `` <NEXT> if $ z2 == 0 goto label12 <NEXT> $ z8 = r2 instanceof java lang string <NEXT> if $ z8 ! = 0 goto label09 <NEXT> r42 = new javax xml rpc j a x r p c exception <NEXT> $ r19 = newarray java lang string [ 3 ] <NEXT> $ r19 [ 0 ] = r1 <NEXT> $ r19 [ 1 ] = \ `` java lang string\ `` <NEXT> $ r20 = r2 get class <NEXT> $ r21 = $ r20 get name <NEXT> $ r19 [ 2 ] = $ r21 <NEXT> $ r22 = org apache axis utils message get message \ `` bad prop00\ <NEXT> specialinvoke r42 < init > $ r22 <NEXT> r52 = java lang throwable r42 <NEXT> throw r52 <NEXT> if $ z8 ! = 0 goto label09 <NEXT> label r43 = new java net url <NEXT> $ r17 = java lang string r2 <NEXT> specialinvoke r43 < init > $ r17 <NEXT> r53 = org apache axis client stub r0 <NEXT> r53 cache endpoint = r43 <NEXT> label goto label17 <NEXT> if $ z2 == 0 goto label12 <NEXT> label $ z3 = r1 equal \ `` javax xml rpc session maintain\ `` <NEXT> if $ z3 == 0 goto label14 <NEXT> $ z6 = r2 instanceof java lang boolean <NEXT> if $ z6 ! = 0 goto label13 <NEXT> r45 = new javax xml rpc j a x r p c exception <NEXT> $ r12 = newarray java lang string [ 3 ] <NEXT> $ r12 [ 0 ] = r1 <NEXT> $ r12 [ 1 ] = \ `` java lang boolean\ `` <NEXT> $ r13 = r2 get class <NEXT> $ r14 = $ r13 get name <NEXT> $ r12 [ 2 ] = $ r14 <NEXT> $ r15 = org apache axis utils message get message \ `` bad prop00\ <NEXT> specialinvoke r45 < init > $ r15 <NEXT> r55 = java lang throwable r45 <NEXT> throw r55 <NEXT> if $ z6 ! = 0 goto label13 <NEXT> label r56 = org apache axis client stub r0 <NEXT> r56 maintain session set = 1 <NEXT> $ r10 = java lang boolean r2 <NEXT> $ z7 = $ r10 boolean value <NEXT> r57 = org apache axis client stub r0 <NEXT> r57 maintain session = $ z7 <NEXT> if $ z3 == 0 goto label14 <NEXT> label $ z4 = r1 start with \ `` java \ `` <NEXT> if $ z4 ! = 0 goto label15 <NEXT> $ z5 = r1 start with \ `` javax \ `` <NEXT> if $ z5 == 0 goto label16 <NEXT> label r46 = new javax xml rpc j a x r p c exception <NEXT> $ r7 = org apache axis utils message get message \ `` bad prop05\ <NEXT> specialinvoke r46 < init > $ r7 <NEXT> r58 = java lang throwable r46 <NEXT> throw r58 <NEXT> if $ z5 == 0 goto label16 <NEXT> label r59 = org apache axis client stub r0 <NEXT> $ r8 = r59 cache property <NEXT> $ r8 put r1 r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = org apache axis client stub r0 <NEXT> $ r5 = r7 header <NEXT> r6 = new org apache axis message s o a p header element <NEXT> specialinvoke r6 < init > r1 r2 r3 <NEXT> $ r5 add r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i1 = 0 <NEXT> label r9 = org apache axis client stub r0 <NEXT> $ r4 = r9 header <NEXT> $ i0 = $ r4 size <NEXT> if i1 > = $ i0 goto label3 <NEXT> r10 = org apache axis client stub r0 <NEXT> $ r5 = r10 header <NEXT> $ r6 = $ r5 get i1 <NEXT> r3 = org apache axis message s o a p header element $ r6 <NEXT> $ r7 = r3 get namespace u r i <NEXT> $ z0 = $ r7 equal r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r8 = r3 get name <NEXT> $ z1 = $ r8 equal r2 <NEXT> if $ z1 == 0 goto label2 <NEXT> return r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis component compiler abstract compiler r0 <NEXT> r2 classpath = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis component compiler abstract compiler r0 <NEXT> r2 encode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis component compiler compiler error r0 <NEXT> $ i0 = r1 endline <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis component compiler compiler error r0 <NEXT> $ r1 = r2 message <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = org apache axis component net socket factory factory factory <NEXT> $ r4 = $ r3 get r0 <NEXT> r14 = org apache axis component net socket factory $ r4 <NEXT> if r14 ! = null goto label7 <NEXT> $ r5 = newarray java lang object [ 1 ] <NEXT> $ r5 [ 0 ] = r1 <NEXT> $ z0 = r0 equal ignore case \ `` http\ `` <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r11 = org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ socket factory <NEXT> if $ r11 ! = null goto label1 <NEXT> $ r15 = org apache axis component net socket factory factory class $ \ `` org apache axis component net socket factory\ `` <NEXT> org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ socket factory = $ r15 <NEXT> goto label2 <NEXT> label $ r12 = org apache axis component net socket factory factory class <NEXT> $ r13 = org apache axis axis property new instance $ r15 $ r12 $ r5 <NEXT> r14 = org apache axis component net socket factory $ r13 <NEXT> goto label6 <NEXT> label if r14 == null goto label7 <NEXT> $ r6 = org apache axis component net socket factory factory factory <NEXT> $ r6 put r0 r14 <NEXT> label r17 = org apache axis component net socket factory r14 <NEXT> return r17 <NEXT> if $ r11 ! = null goto label1 <NEXT> label $ r15 = org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ socket factory <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ z1 = r0 equal ignore case \ `` https\ `` <NEXT> if $ z1 == 0 goto label6 <NEXT> $ r8 = org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ secure socket factory <NEXT> if $ r8 ! = null goto label4 <NEXT> $ r16 = org apache axis component net socket factory factory class $ \ `` org apache axis component net secure socket factory\ `` <NEXT> org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ secure socket factory = $ r16 <NEXT> goto label5 <NEXT> label $ r9 = org apache axis component net socket factory factory class <NEXT> $ r10 = org apache axis axis property new instance $ r16 $ r9 $ r5 <NEXT> r14 = org apache axis component net secure socket factory $ r10 <NEXT> if $ r8 ! = null goto label4 <NEXT> label $ r16 = org apache axis component net socket factory factory class $ org $ apache $ axis $ component $ net $ secure socket factory <END>
<BEG> $ r1 = org apache axis component script script factory class $ org $ apache $ axis $ component $ script $ script <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r10 = org apache axis component script script factory class $ \ `` org apache axis component script script\ `` <NEXT> org apache axis component script script factory class $ org $ apache $ axis $ component $ script $ script = $ r10 <NEXT> goto label2 <NEXT> label $ r2 = org apache axis axis property new instance $ r10 <NEXT> r0 = org apache axis component script script $ r2 <NEXT> $ r4 = org apache axis component script script factory log <NEXT> $ r3 = new java lang string buffer <NEXT> specialinvoke $ r3 < init > <NEXT> $ r5 = $ r3 append \ `` axis script \ `` <NEXT> $ r6 = r0 get class <NEXT> $ r7 = $ r6 get name <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> $ r4 debug $ r9 <NEXT> return r0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ r10 = org apache axis component script script factory class $ org $ apache $ axis $ component $ script $ script <END>
<BEG> r0 = @ this <NEXT> $ r3 = org apache axis component threadpool thread pool log <NEXT> $ z0 = $ r3 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r7 = org apache axis component threadpool thread pool log <NEXT> $ r7 debug \ `` enter thread poolshutdown\ `` <NEXT> label entermonitor r0 <NEXT> label r9 = org apache axis component threadpool thread pool r0 <NEXT> r9 _shutdown = 1 <NEXT> exitmonitor r0 <NEXT> label goto label6 <NEXT> label r10 = org apache axis component threadpool thread pool r0 <NEXT> r10 interrupt all <NEXT> $ r5 = org apache axis component threadpool thread pool log <NEXT> $ z1 = $ r5 be debug enabled <NEXT> if $ z1 == 0 goto label7 <NEXT> $ r6 = org apache axis component threadpool thread pool log <NEXT> $ r6 debug \ `` exit thread poolshutdown\ `` <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache axis configuration dir provider r0 <NEXT> $ r1 = r3 deployment <NEXT> $ r2 = $ r1 get global request <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache axis deployment wsdd w s d d deployment r0 <NEXT> $ r2 = r4 transport <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache axis deployment wsdd w s d d deployment r0 <NEXT> $ r3 = r5 namespace to service <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis deployment wsdd w s d d documentation r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis deployment wsdd w s d d global configuration r0 <NEXT> $ r1 = r2 response flow <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache axis description element desc r0 <NEXT> r1 nillable = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis description field desc r0 <NEXT> $ r1 = r2 field name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis description operation desc r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis description parameter desc r0 <NEXT> $ z0 = r1 nillable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis encode deserialization context r0 <NEXT> $ r1 = r2 recorder <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache axis constant qnames_nil <NEXT> $ r3 = org apache axis constant get value r1 $ r2 <NEXT> $ z0 = org apache axis utils java utils be true explicitly $ r3 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache axis encode deserializer impl r0 <NEXT> $ r2 = r6 target <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util vector <NEXT> specialinvoke r5 < init > <NEXT> r7 = org apache axis encode deserializer impl r0 <NEXT> r7 target = r5 <NEXT> label r8 = org apache axis encode deserializer impl r0 <NEXT> $ r3 = r8 target <NEXT> $ r3 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r20 = org apache axis encode ser base deserializer factory r0 <NEXT> $ r3 = r20 java type <NEXT> if $ r3 == null goto label6 <NEXT> r21 = org apache axis encode ser base deserializer factory r0 <NEXT> $ r4 = r21 xml type <NEXT> if $ r4 == null goto label6 <NEXT> r22 = org apache axis encode ser base deserializer factory r0 <NEXT> r2 = r22 get get deserializer <NEXT> if r2 == null goto label6 <NEXT> label $ r5 = newarray java lang object [ 3 ] <NEXT> $ r5 [ 0 ] = r1 <NEXT> r23 = org apache axis encode ser base deserializer factory r0 <NEXT> $ r6 = r23 java type <NEXT> $ r5 [ 1 ] = $ r6 <NEXT> r24 = org apache axis encode ser base deserializer factory r0 <NEXT> $ r7 = r24 xml type <NEXT> $ r5 [ 2 ] = $ r7 <NEXT> $ r8 = r2 invoke null $ r5 <NEXT> $ r9 = org apache axis encode deserializer $ r8 <NEXT> label return $ r9 <NEXT> if r2 == null goto label6 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r5 = org apache axis encode ser base deserializer factory r0 <NEXT> $ r1 = r5 deser class constructor <NEXT> if $ r1 ! = null goto label1 <NEXT> r6 = org apache axis encode ser base deserializer factory r0 <NEXT> $ r3 = r6 deser class <NEXT> r7 = org apache axis encode ser base deserializer factory r0 <NEXT> $ r4 = specialinvoke r7 get constructor $ r3 <NEXT> r8 = org apache axis encode ser base deserializer factory r0 <NEXT> r8 deser class constructor = $ r4 <NEXT> label r9 = org apache axis encode ser base deserializer factory r0 <NEXT> $ r2 = r9 deser class constructor <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis encode ser castor axis content handler r0 <NEXT> $ r1 = r2 context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache axis encode serialization context r0 <NEXT> $ z1 = r1 disable pretty x m l <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r2 = org apache axis encode serialization context r0 <NEXT> r2 pretty = z0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r6 = org apache axis encode type mapping impl r0 <NEXT> $ r2 = r6 namespaces <NEXT> $ i0 = $ r2 size <NEXT> r1 = newarray java lang string [ $ i0 ] <NEXT> r7 = org apache axis encode type mapping impl r0 <NEXT> $ r3 = r7 namespaces <NEXT> $ r4 = $ r3 to array r1 <NEXT> $ r5 = java lang string [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache axis handler soap s o a p service session <NEXT> r12 = org apache axis handler soap s o a p service r0 <NEXT> $ r3 = r12 get name <NEXT> $ r4 = $ r2 get $ r3 <NEXT> r10 = java util weak hash map $ r4 <NEXT> if r10 ! = null goto label1 <NEXT> r11 = new java util weak hash map <NEXT> specialinvoke r11 < init > <NEXT> r10 = r11 <NEXT> $ r7 = org apache axis handler soap s o a p service session <NEXT> r13 = org apache axis handler soap s o a p service r0 <NEXT> $ r8 = r13 get name <NEXT> $ r7 put $ r8 r11 <NEXT> label $ z0 = r10 contain key r1 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r10 put r1 null <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis handler soap s o a p service r0 <NEXT> r1 be run = 0 <NEXT> return <END>
<BEG> $ z0 = org apache axis internal exception should log <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis message message element r0 <NEXT> $ r1 = r2 context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis message message element r0 <NEXT> $ z0 = r1 _is root <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis message message element r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis message message element r0 <NEXT> r2 namespace u r i = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r22 = @ parameter0 <NEXT> if r22 ! = null goto label1 <NEXT> r22 = \ `` \ `` <NEXT> label r25 = org apache axis message message element r0 <NEXT> $ r2 = r25 href <NEXT> if $ r2 == null goto label2 <NEXT> r26 = org apache axis message message element r0 <NEXT> $ r19 = r26 get real element <NEXT> if $ r19 == null goto label2 <NEXT> r27 = org apache axis message message element r0 <NEXT> $ r20 = r27 get real element <NEXT> $ r21 = $ r20 get namespace u r i r22 <NEXT> return $ r21 <NEXT> if $ r19 == null goto label2 <NEXT> label i1 = 0 <NEXT> label r28 = org apache axis message message element r0 <NEXT> $ r23 = r28 namespaces <NEXT> if $ r23 == null goto label5 <NEXT> r29 = org apache axis message message element r0 <NEXT> $ r14 = r29 namespaces <NEXT> $ i0 = $ r14 size <NEXT> if i1 > = $ i0 goto label5 <NEXT> r30 = org apache axis message message element r0 <NEXT> $ r15 = r30 namespaces <NEXT> $ r16 = $ r15 get i1 <NEXT> r1 = org apache axis utils map $ r16 <NEXT> $ r17 = r1 get prefix <NEXT> $ z1 = $ r17 equal r22 <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r18 = r1 get namespace u r i <NEXT> return $ r18 <NEXT> if $ z1 == 0 goto label4 <NEXT> label i1 = i1 + 1 <NEXT> goto label3 <NEXT> if i1 > = $ i0 goto label5 <NEXT> label r31 = org apache axis message message element r0 <NEXT> $ r3 = r31 parent <NEXT> if $ r3 == null goto label6 <NEXT> r32 = org apache axis message message element r0 <NEXT> $ r11 = r32 parent <NEXT> $ r12 = org apache axis message message element $ r11 <NEXT> $ r13 = $ r12 get namespace u r i r22 <NEXT> return $ r13 <NEXT> if $ r3 == null goto label6 <NEXT> label $ r4 = org apache axis message message element log <NEXT> $ z0 = $ r4 be debug enabled <NEXT> if $ z0 == 0 goto label7 <NEXT> $ r6 = org apache axis message message element log <NEXT> r24 = new java lang string buffer <NEXT> specialinvoke r24 < init > <NEXT> $ r7 = r24 append \ `` \ `` <NEXT> $ r8 = $ r7 append r0 <NEXT> $ r9 = $ r8 to string <NEXT> $ r10 = org apache axis utils message get message \ `` no prefix00\ <NEXT> $ r6 debug $ r10 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r4 = null <NEXT> label r5 = org apache axis message message element r0 <NEXT> r4 = r5 get object value null <NEXT> label goto label4 <NEXT> label return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r1 set dirty <NEXT> r2 = org apache axis message message element r0 <NEXT> r2 message = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r8 ! = null goto label1 <NEXT> r8 = \ `` \ `` <NEXT> label i0 = 0 <NEXT> label r10 = org apache axis message message element r0 <NEXT> $ r9 = r10 attribute <NEXT> $ i1 = $ r9 get length <NEXT> if i0 > = $ i1 goto label4 <NEXT> r11 = org apache axis message message element r0 <NEXT> $ r2 = r11 attribute <NEXT> $ r3 = $ r2 get u r i i0 <NEXT> $ z0 = $ r3 equal r8 <NEXT> if $ z0 == 0 goto label3 <NEXT> r12 = org apache axis message message element r0 <NEXT> $ r4 = r12 attribute <NEXT> $ r5 = $ r4 get local name i0 <NEXT> $ z1 = $ r5 equal r1 <NEXT> if $ z1 == 0 goto label3 <NEXT> r13 = org apache axis message message element r0 <NEXT> $ r6 = r13 attribute <NEXT> $ r7 = $ r6 get value i0 <NEXT> return $ r7 <NEXT> if $ z1 == 0 goto label3 <NEXT> label i0 = i0 + 1 <NEXT> goto label2 <NEXT> if i0 > = $ i1 goto label4 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r6 = org apache axis message name node map impl r0 <NEXT> $ r1 = r6 node <NEXT> if $ r1 == null goto label1 <NEXT> r7 = org apache axis message name node map impl r0 <NEXT> $ r2 = r7 node <NEXT> $ i1 = $ r2 size <NEXT> if i0 > = $ i1 goto label1 <NEXT> r8 = org apache axis message name node map impl r0 <NEXT> $ r3 = r8 node <NEXT> $ r4 = $ r3 element at i0 <NEXT> $ r5 = org w3c dom node $ r4 <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if i0 > = $ i1 goto label1 <NEXT> label $ r5 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache axis message node impl r0 <NEXT> r5 initialize child <NEXT> r6 = org apache axis message node impl r0 <NEXT> $ r3 = r6 child <NEXT> i0 = $ r3 index of r2 <NEXT> if i0 > = 0 goto label1 <NEXT> i0 = 0 <NEXT> label r7 = org apache axis message node impl r0 <NEXT> $ r4 = r7 child <NEXT> $ r4 add i0 r1 <NEXT> r8 = org apache axis message node impl r0 <NEXT> r8 set dirty <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = org apache axis message node impl r0 <NEXT> $ r2 = r14 text rep <NEXT> if $ r2 ! = null goto label1 <NEXT> return <NEXT> if $ r2 ! = null goto label1 <NEXT> label z0 = r1 get pretty <NEXT> r1 set pretty 0 <NEXT> r15 = org apache axis message node impl r0 <NEXT> $ r3 = r15 text rep <NEXT> $ z1 = $ r3 instanceof org w3c dom c d a t a section <NEXT> if $ z1 == 0 goto label2 <NEXT> r1 write string \ `` < ! [ cdata [ \ `` <NEXT> r16 = org apache axis message node impl r0 <NEXT> $ r11 = r16 text rep <NEXT> $ r12 = org w3c dom text $ r11 <NEXT> $ r13 = $ r12 get data <NEXT> r1 write string $ r13 <NEXT> r1 write string \ `` ] ] > \ `` <NEXT> goto label4 <NEXT> label r1 set pretty z0 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r17 = org apache axis message node impl r0 <NEXT> $ r4 = r17 text rep <NEXT> $ z2 = $ r4 instanceof org w3c dom comment <NEXT> if $ z2 == 0 goto label3 <NEXT> r1 write string \ `` < ! -- \ `` <NEXT> r18 = org apache axis message node impl r0 <NEXT> $ r9 = r18 text rep <NEXT> $ r10 = $ r9 get data <NEXT> r1 write string $ r10 <NEXT> r1 write string \ `` -- > \ `` <NEXT> if $ z2 == 0 goto label3 <NEXT> label r19 = org apache axis message node impl r0 <NEXT> $ r5 = r19 text rep <NEXT> $ z3 = $ r5 instanceof org w3c dom text <NEXT> if $ z3 == 0 goto label4 <NEXT> r20 = org apache axis message node impl r0 <NEXT> $ r6 = r20 text rep <NEXT> $ r7 = org w3c dom text $ r6 <NEXT> $ r8 = $ r7 get data <NEXT> r1 write safe string $ r8 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache axis message s o a p envelope r0 <NEXT> $ r1 = r4 header <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org apache axis message s o a p envelope r0 <NEXT> $ r2 = r5 header <NEXT> r6 = org apache axis message s o a p envelope r0 <NEXT> r7 = org w3c dom node $ r2 <NEXT> r6 remove child r7 <NEXT> label r8 = org apache axis message s o a p envelope r0 <NEXT> r8 header = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis message s o a p envelope r0 <NEXT> r2 soap constant = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache axis message s o a p fault r0 <NEXT> $ r2 = r3 fault <NEXT> $ r2 set fault actor r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = org apache axis message s o a p header element r0 <NEXT> $ z0 = r18 already serialize <NEXT> if $ z0 ! = 0 goto label8 <NEXT> r19 = org apache axis message s o a p header element r0 <NEXT> r2 = specialinvoke r19 get s o a p constant <NEXT> r3 = r2 get role attribute q name <NEXT> r20 = org apache axis message s o a p header element r0 <NEXT> $ r4 = r20 actor <NEXT> if $ r4 == null goto label1 <NEXT> $ r10 = r3 get namespace u r i <NEXT> $ r11 = r3 get local part <NEXT> r21 = org apache axis message s o a p header element r0 <NEXT> $ r12 = r21 actor <NEXT> r22 = org apache axis message s o a p header element r0 <NEXT> r22 set attribute $ r10 $ r11 $ r12 <NEXT> label $ r5 = r1 get message context <NEXT> if $ r5 == null goto label4 <NEXT> $ r7 = r1 get message context <NEXT> $ r8 = $ r7 get s o a p constant <NEXT> $ r9 = org apache axis soap s o a p constants soap12_constants <NEXT> if $ r8 ! = $ r9 goto label4 <NEXT> r23 = org apache axis message s o a p header element r0 <NEXT> $ z3 = r23 must understand <NEXT> if $ z3 == 0 goto label2 <NEXT> $ r13 = \ `` true\ `` <NEXT> goto label3 <NEXT> label r14 = $ r13 <NEXT> goto label7 <NEXT> label $ r16 = r2 get envelope u r i <NEXT> r25 = org apache axis message s o a p header element r0 <NEXT> r25 set attribute $ r16 \ `` must understand\ <NEXT> $ r17 = org apache axis soap s o a p constants soap12_constants <NEXT> if r2 ! = $ r17 goto label8 <NEXT> r26 = org apache axis message s o a p header element r0 <NEXT> $ z2 = r26 relay <NEXT> if $ z2 == 0 goto label8 <NEXT> $ r6 = r2 get envelope u r i <NEXT> r27 = org apache axis message s o a p header element r0 <NEXT> r27 set attribute $ r6 \ `` relay\ <NEXT> label specialinvoke r0 output impl r1 <NEXT> return <NEXT> if $ z3 == 0 goto label2 <NEXT> label $ r13 = \ `` false\ `` <NEXT> if $ r8 ! = $ r9 goto label4 <NEXT> label r24 = org apache axis message s o a p header element r0 <NEXT> $ z1 = r24 must understand <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r15 = \ `` 1\ `` <NEXT> goto label6 <NEXT> label r14 = $ r15 <NEXT> if $ z1 == 0 goto label5 <NEXT> label $ r15 = \ `` 0\ `` <END>
<BEG> $ r0 = org apache axis message m attachment impl class name <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis message context r0 <NEXT> r2 map registry = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis message context r0 <NEXT> $ r1 = r2 soap constant <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis message context r0 <NEXT> $ r1 = r2 schema version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis message context r0 <NEXT> $ r1 = r2 response message <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis message context r0 <NEXT> $ r1 = r2 get current message <NEXT> r3 = javax xml soap s o a p message $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache axis message context r0 <NEXT> $ r2 = r3 bag <NEXT> $ r2 set parent r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache axis provider java java provider r0 <NEXT> $ r2 = r5 get service class name option name <NEXT> $ r3 = r1 get option $ r2 <NEXT> $ r4 = java lang string $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache axis session simple session r0 <NEXT> r1 timeout = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ l0 = java lang system current time millis <NEXT> r1 = org apache axis session simple session r0 <NEXT> r1 last touch = $ l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis session simple session r0 <NEXT> r1 rep = null <NEXT> $ l0 = java lang system current time millis <NEXT> r2 = org apache axis session simple session r0 <NEXT> r2 last touch = $ l0 <NEXT> r3 = org apache axis session simple session r0 <NEXT> r3 timeout = -1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache axis soap s o a p11 constant role q name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return \ `` http schemas xmlsoap org soap actor next\ `` <END>
<BEG> r0 = @ this <NEXT> return \ `` href\ `` <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache axis constant soap_array <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache axis soap s o a p connection impl <NEXT> specialinvoke r2 < init > <NEXT> r3 = javax xml soap s o a p connection r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r34 = org apache axis soap s o a p connection impl r0 <NEXT> $ z0 = r34 close <NEXT> if $ z0 == 0 goto label1 <NEXT> r30 = new javax xml soap s o a p exception <NEXT> $ r19 = org apache axis utils message get message \ `` connection closed00\ `` <NEXT> specialinvoke r30 < init > $ r19 <NEXT> r35 = java lang throwable r30 <NEXT> throw r35 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r31 = new org apache axis client call <NEXT> $ r6 = r2 to string <NEXT> specialinvoke r31 < init > $ r6 <NEXT> $ r7 = org apache axis message r1 <NEXT> $ r8 = r31 get message context <NEXT> $ r7 set message context $ r8 <NEXT> $ r9 = org apache axis message r1 <NEXT> r3 = $ r9 get attachment impl <NEXT> if r3 == null goto label3 <NEXT> $ r17 = r3 get attachment <NEXT> r25 = $ r17 iterator <NEXT> label $ z1 = r25 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> r4 = r25 next <NEXT> r31 add attachment part r4 <NEXT> goto label2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r36 = org apache axis soap s o a p connection impl r0 <NEXT> r26 = specialinvoke r36 check for s o a p action header r1 <NEXT> if r26 == null goto label4 <NEXT> r31 set s o a p action u r i r26 <NEXT> label r37 = org apache axis soap s o a p connection impl r0 <NEXT> $ r10 = r37 timeout <NEXT> r31 set timeout $ r10 <NEXT> $ r11 = org apache axis soap s o a p connection impl class $ javax $ xml $ soap $ s o a p message <NEXT> if $ r11 ! = null goto label5 <NEXT> $ r27 = org apache axis soap s o a p connection impl class $ \ `` javax xml soap s o a p message\ `` <NEXT> org apache axis soap s o a p connection impl class $ javax $ xml $ soap $ s o a p message = $ r27 <NEXT> goto label6 <NEXT> label r31 set return class $ r27 <NEXT> $ r12 = java lang boolean false <NEXT> r31 set property \ `` call check must understand\ <NEXT> $ r13 = org apache axis message r1 <NEXT> r31 invoke $ r13 <NEXT> $ r15 = r31 get response message <NEXT> label r38 = javax xml soap s o a p message $ r15 <NEXT> return r38 <NEXT> if $ r11 ! = null goto label5 <NEXT> label $ r27 = org apache axis soap s o a p connection impl class $ javax $ xml $ soap $ s o a p message <END>
<BEG> r0 = @ this <NEXT> r7 = org apache axis transport http auto register servlet r0 <NEXT> r1 = r7 get resource to register <NEXT> if r1 == null goto label1 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label4 <NEXT> r2 = r1 [ i2 ] <NEXT> r8 = org apache axis transport http auto register servlet r0 <NEXT> r8 register and log resource r2 <NEXT> i2 = i2 + 1 <NEXT> goto label3 <NEXT> if i2 > = $ i1 goto label4 <NEXT> label r9 = org apache axis transport http auto register servlet r0 <NEXT> r9 register anything else <NEXT> label r10 = org apache axis transport http auto register servlet r0 <NEXT> r10 apply and save setting <NEXT> label goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis transport http axis http session r0 <NEXT> r2 ensure session <NEXT> r3 = org apache axis transport http axis http session r0 <NEXT> $ r1 = r3 rep <NEXT> $ i0 = $ r1 get max inactive interval <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get session <NEXT> org apache axis transport http axis h t t p session listener destroy session r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis transport http simple axis server r0 <NEXT> $ i0 = r1 max session <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache axis transport http simple axis server my axis server <NEXT> if $ r1 ! = null goto label2 <NEXT> r18 = org apache axis transport http simple axis server r0 <NEXT> $ r2 = r18 my config <NEXT> if $ r2 ! = null goto label1 <NEXT> $ r13 = org apache axis configuration engine configuration factory finder new factory <NEXT> $ r14 = $ r13 get server engine config <NEXT> r19 = org apache axis transport http simple axis server r0 <NEXT> r19 my config = $ r14 <NEXT> label r16 = new org apache axis server axis server <NEXT> r20 = org apache axis transport http simple axis server r0 <NEXT> $ r4 = r20 my config <NEXT> specialinvoke r16 < init > $ r4 <NEXT> org apache axis transport http simple axis server my axis server = r16 <NEXT> $ r6 = org apache axis transport http simple axis server my axis server <NEXT> r17 = new java lang string buffer <NEXT> specialinvoke r17 < init > <NEXT> $ r7 = org apache axis utils network utils get local hostname <NEXT> $ r8 = r17 append $ r7 <NEXT> $ r9 = $ r8 append \ `` @ \ `` <NEXT> r21 = org apache axis transport http simple axis server r0 <NEXT> $ r10 = r21 server socket <NEXT> $ i0 = $ r10 get local port <NEXT> $ r11 = $ r9 append $ i0 <NEXT> $ r12 = $ r11 to string <NEXT> org apache axis management service admin set engine $ r6 $ r12 <NEXT> label $ r15 = org apache axis transport http simple axis server my axis server <NEXT> return $ r15 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache axis transport jms j m s endpoint r0 <NEXT> $ r2 = r4 m_connector <NEXT> $ r3 = $ r2 get send connection <NEXT> r5 = org apache axis transport jms j m s endpoint r0 <NEXT> $ r3 send r5 r1 null <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = r2 <NEXT> if r0 == null goto label1 <NEXT> $ z0 = r0 contain key r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = r0 remove r1 <NEXT> label return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache axis server axis server <NEXT> specialinvoke r2 < init > <NEXT> r3 = org apache axis transport local local sender r0 <NEXT> r3 server = r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i2 = 0 <NEXT> i3 = 0 <NEXT> label r4 = org apache axis type n m token r0 <NEXT> $ r1 = r4 token <NEXT> $ i0 = lengthof $ r1 <NEXT> if i3 > = $ i0 goto label2 <NEXT> r5 = org apache axis type n m token r0 <NEXT> $ r2 = r5 token <NEXT> $ r3 = $ r2 [ i3 ] <NEXT> $ i1 = $ r3 hash code <NEXT> i2 = i2 + $ i1 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label2 <NEXT> label return i2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache axis type time r0 <NEXT> $ r1 = r3 _value <NEXT> if $ r1 ! = null goto label1 <NEXT> $ i0 = 0 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache axis type time r0 <NEXT> $ r2 = r4 _value <NEXT> $ i0 = $ r2 hash code <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis type uri r0 <NEXT> $ r1 = r2 m_scheme <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis type uri r0 <NEXT> $ r1 = r2 m_fragment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 0 goto label1 <NEXT> if i0 > 65535 goto label1 <NEXT> r6 = org apache axis type uri r0 <NEXT> $ r2 = r6 m_host <NEXT> if $ r2 ! = null goto label2 <NEXT> r4 = new org apache axis type uri $ malformed u r i exception <NEXT> specialinvoke r4 < init > \ `` port can not be set when host be null ! \ `` <NEXT> r7 = java lang throwable r4 <NEXT> throw r7 <NEXT> if $ r2 ! = null goto label2 <NEXT> label r9 = org apache axis type uri r0 <NEXT> r9 m_port = i0 <NEXT> return <NEXT> if i0 > 65535 goto label1 <NEXT> label if i0 == -1 goto label2 <NEXT> r5 = new org apache axis type uri $ malformed u r i exception <NEXT> specialinvoke r5 < init > \ `` invalid port number ! \ `` <NEXT> r8 = java lang throwable r5 <NEXT> throw r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label01 <NEXT> $ r2 = r1 trim <NEXT> $ i0 = $ r2 length <NEXT> if $ i0 ! = 0 goto label02 <NEXT> label return <NEXT> if $ i0 ! = 0 goto label02 <NEXT> label $ z0 = org apache axis type uri be u r i string r1 <NEXT> if $ z0 ! = 0 goto label03 <NEXT> r25 = new org apache axis type uri $ malformed u r i exception <NEXT> specialinvoke r25 < init > \ `` path contains invalid character ! \ `` <NEXT> r28 = java lang throwable r25 <NEXT> throw r28 <NEXT> if $ z0 ! = 0 goto label03 <NEXT> label r29 = org apache axis type uri r0 <NEXT> $ r3 = r29 m_path <NEXT> if $ r3 == null goto label04 <NEXT> r30 = org apache axis type uri r0 <NEXT> $ r8 = r30 m_path <NEXT> $ r9 = $ r8 trim <NEXT> $ i1 = $ r9 length <NEXT> if $ i1 ! = 0 goto label06 <NEXT> label $ z1 = r1 start with \ `` \ `` <NEXT> if $ z1 == 0 goto label05 <NEXT> r31 = org apache axis type uri r0 <NEXT> r31 m_path = r1 <NEXT> goto label10 <NEXT> label return <NEXT> if $ z1 == 0 goto label05 <NEXT> label r26 = new java lang string buffer <NEXT> specialinvoke r26 < init > <NEXT> $ r5 = r26 append \ `` \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 to string <NEXT> r32 = org apache axis type uri r0 <NEXT> r32 m_path = $ r7 <NEXT> if $ i1 ! = 0 goto label06 <NEXT> label r33 = org apache axis type uri r0 <NEXT> $ r10 = r33 m_path <NEXT> $ z2 = $ r10 end with \ `` \ `` <NEXT> if $ z2 == 0 goto label08 <NEXT> $ z4 = r1 start with \ `` \ `` <NEXT> if $ z4 == 0 goto label07 <NEXT> r34 = org apache axis type uri r0 <NEXT> $ r21 = r34 m_path <NEXT> $ r22 = r1 substring 1 <NEXT> $ r23 = $ r21 concat $ r22 <NEXT> r35 = org apache axis type uri r0 <NEXT> r35 m_path = $ r23 <NEXT> if $ z4 == 0 goto label07 <NEXT> label r36 = org apache axis type uri r0 <NEXT> $ r19 = r36 m_path <NEXT> $ r20 = $ r19 concat r1 <NEXT> r37 = org apache axis type uri r0 <NEXT> r37 m_path = $ r20 <NEXT> if $ z2 == 0 goto label08 <NEXT> label $ z3 = r1 start with \ `` \ `` <NEXT> if $ z3 == 0 goto label09 <NEXT> r38 = org apache axis type uri r0 <NEXT> $ r17 = r38 m_path <NEXT> $ r18 = $ r17 concat r1 <NEXT> r39 = org apache axis type uri r0 <NEXT> r39 m_path = $ r18 <NEXT> if $ z3 == 0 goto label09 <NEXT> label r40 = org apache axis type uri r0 <NEXT> $ r12 = r40 m_path <NEXT> r27 = new java lang string buffer <NEXT> specialinvoke r27 < init > <NEXT> $ r13 = r27 append \ `` \ `` <NEXT> $ r14 = $ r13 append r1 <NEXT> $ r15 = $ r14 to string <NEXT> $ r16 = $ r12 concat $ r15 <NEXT> r41 = org apache axis type uri r0 <NEXT> r41 m_path = $ r16 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache axis utils bean property descriptor r0 <NEXT> $ r1 = r3 my p d <NEXT> $ r2 = $ r1 get read method <NEXT> if $ r2 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r2 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache axis utils bean property descriptor r0 <NEXT> $ r1 = r5 my p d <NEXT> $ r2 = $ r1 get property type <NEXT> if $ r2 == null goto label1 <NEXT> r6 = org apache axis utils bean property descriptor r0 <NEXT> $ r3 = r6 my p d <NEXT> $ r4 = $ r3 get property type <NEXT> $ z0 = $ r4 be array <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r11 = org apache axis utils bean property descriptor r0 <NEXT> $ z0 = r11 be indexed <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r12 = org apache axis utils bean property descriptor r0 <NEXT> $ r8 = r12 get r1 <NEXT> $ r9 = java lang reflect array get $ r8 i0 <NEXT> return $ r9 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r13 = org apache axis utils bean property descriptor r0 <NEXT> $ r3 = r13 my p d <NEXT> r2 = java bean indexed property descriptor $ r3 <NEXT> $ r4 = r2 get index read method <NEXT> $ r5 = newarray java lang object [ 1 ] <NEXT> r10 = new java lang integer <NEXT> specialinvoke r10 < init > i0 <NEXT> $ r5 [ 0 ] = r10 <NEXT> $ r7 = $ r4 invoke r1 $ r5 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = org apache axis utils class utils classloaders <NEXT> $ r2 = $ r1 get r0 <NEXT> $ r3 = java lang class loader $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = new org apache axis utils i d key <NEXT> specialinvoke $ r3 < init > r1 <NEXT> $ z0 = specialinvoke r0 contains key $ r3 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r4 = specialinvoke r0 put $ r3 r1 <NEXT> return $ r4 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 be primitive <NEXT> if $ z0 ! = 0 goto label69 <NEXT> $ r1 = org apache axis utils java utils class $ java $ lang $ string <NEXT> if $ r1 ! = null goto label01 <NEXT> $ r68 = org apache axis utils java utils class $ \ `` java lang string\ `` <NEXT> org apache axis utils java utils class $ java $ lang $ string = $ r68 <NEXT> goto label02 <NEXT> label if r0 == $ r68 goto label69 <NEXT> $ r2 = org apache axis utils java utils class $ java $ lang $ boolean <NEXT> if $ r2 ! = null goto label03 <NEXT> $ r69 = org apache axis utils java utils class $ \ `` java lang boolean\ `` <NEXT> org apache axis utils java utils class $ java $ lang $ boolean = $ r69 <NEXT> goto label04 <NEXT> label if r0 == $ r69 goto label69 <NEXT> $ r3 = org apache axis utils java utils class $ java $ lang $ float <NEXT> if $ r3 ! = null goto label05 <NEXT> $ r70 = org apache axis utils java utils class $ \ `` java lang float\ `` <NEXT> org apache axis utils java utils class $ java $ lang $ float = $ r70 <NEXT> goto label06 <NEXT> label if r0 == $ r70 goto label69 <NEXT> $ r4 = org apache axis utils java utils class $ java $ lang $ double <NEXT> if $ r4 ! = null goto label07 <NEXT> $ r71 = org apache axis utils java utils class $ \ `` java lang double\ `` <NEXT> org apache axis utils java utils class $ java $ lang $ double = $ r71 <NEXT> goto label08 <NEXT> label if r0 == $ r71 goto label69 <NEXT> $ r5 = org apache axis utils java utils class $ java $ lang $ number <NEXT> if $ r5 ! = null goto label09 <NEXT> $ r72 = org apache axis utils java utils class $ \ `` java lang number\ `` <NEXT> org apache axis utils java utils class $ java $ lang $ number = $ r72 <NEXT> goto label10 <NEXT> label $ z1 = $ r72 be assignable from r0 <NEXT> if $ z1 ! = 0 goto label69 <NEXT> $ r6 = org apache axis utils java utils class $ org $ apache $ axis $ type $ day <NEXT> if $ r6 ! = null goto label11 <NEXT> $ r73 = org apache axis utils java utils class $ \ `` org apache axis type day\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ day = $ r73 <NEXT> goto label12 <NEXT> label if r0 == $ r73 goto label69 <NEXT> $ r7 = org apache axis utils java utils class $ org $ apache $ axis $ type $ duration <NEXT> if $ r7 ! = null goto label13 <NEXT> $ r74 = org apache axis utils java utils class $ \ `` org apache axis type duration\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ duration = $ r74 <NEXT> goto label14 <NEXT> label if r0 == $ r74 goto label69 <NEXT> $ r8 = org apache axis utils java utils class $ org $ apache $ axis $ type $ entity <NEXT> if $ r8 ! = null goto label15 <NEXT> $ r75 = org apache axis utils java utils class $ \ `` org apache axis type entities\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ entity = $ r75 <NEXT> goto label16 <NEXT> label if r0 == $ r75 goto label69 <NEXT> $ r9 = org apache axis utils java utils class $ org $ apache $ axis $ type $ entity <NEXT> if $ r9 ! = null goto label17 <NEXT> $ r76 = org apache axis utils java utils class $ \ `` org apache axis type entity\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ entity = $ r76 <NEXT> goto label18 <NEXT> label if r0 == $ r76 goto label69 <NEXT> $ r10 = org apache axis utils java utils class $ org $ apache $ axis $ type $ hex binary <NEXT> if $ r10 ! = null goto label19 <NEXT> $ r77 = org apache axis utils java utils class $ \ `` org apache axis type hex binary\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ hex binary = $ r77 <NEXT> goto label20 <NEXT> label if r0 == $ r77 goto label69 <NEXT> $ r11 = org apache axis utils java utils class $ org $ apache $ axis $ type $ id <NEXT> if $ r11 ! = null goto label21 <NEXT> $ r78 = org apache axis utils java utils class $ \ `` org apache axis type id\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ id = $ r78 <NEXT> goto label22 <NEXT> label if r0 == $ r78 goto label69 <NEXT> $ r12 = org apache axis utils java utils class $ org $ apache $ axis $ type $ i d ref <NEXT> if $ r12 ! = null goto label23 <NEXT> $ r79 = org apache axis utils java utils class $ \ `` org apache axis type i d ref\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ i d ref = $ r79 <NEXT> goto label24 <NEXT> label if r0 == $ r79 goto label69 <NEXT> $ r13 = org apache axis utils java utils class $ org $ apache $ axis $ type $ i d refs <NEXT> if $ r13 ! = null goto label25 <NEXT> $ r80 = org apache axis utils java utils class $ \ `` org apache axis type i d refs\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ i d refs = $ r80 <NEXT> goto label26 <NEXT> label if r0 == $ r80 goto label69 <NEXT> $ r14 = org apache axis utils java utils class $ org $ apache $ axis $ type $ language <NEXT> if $ r14 ! = null goto label27 <NEXT> $ r81 = org apache axis utils java utils class $ \ `` org apache axis type language\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ language = $ r81 <NEXT> goto label28 <NEXT> label if r0 == $ r81 goto label69 <NEXT> $ r15 = org apache axis utils java utils class $ org $ apache $ axis $ type $ month <NEXT> if $ r15 ! = null goto label29 <NEXT> $ r82 = org apache axis utils java utils class $ \ `` org apache axis type month\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ month = $ r82 <NEXT> goto label30 <NEXT> label if r0 == $ r82 goto label69 <NEXT> $ r16 = org apache axis utils java utils class $ org $ apache $ axis $ type $ month day <NEXT> if $ r16 ! = null goto label31 <NEXT> $ r83 = org apache axis utils java utils class $ \ `` org apache axis type month day\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ month day = $ r83 <NEXT> goto label32 <NEXT> label if r0 == $ r83 goto label69 <NEXT> $ r17 = org apache axis utils java utils class $ org $ apache $ axis $ type $ name <NEXT> if $ r17 ! = null goto label33 <NEXT> $ r84 = org apache axis utils java utils class $ \ `` org apache axis type name\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ name = $ r84 <NEXT> goto label34 <NEXT> label if r0 == $ r84 goto label69 <NEXT> $ r18 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n c name <NEXT> if $ r18 ! = null goto label35 <NEXT> $ r85 = org apache axis utils java utils class $ \ `` org apache axis type n c name\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ n c name = $ r85 <NEXT> goto label36 <NEXT> label if r0 == $ r85 goto label69 <NEXT> $ r19 = org apache axis utils java utils class $ org $ apache $ axis $ type $ negative integer <NEXT> if $ r19 ! = null goto label37 <NEXT> $ r86 = org apache axis utils java utils class $ \ `` org apache axis type negative integer\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ negative integer = $ r86 <NEXT> goto label38 <NEXT> label if r0 == $ r86 goto label69 <NEXT> $ r20 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token <NEXT> if $ r20 ! = null goto label39 <NEXT> $ r87 = org apache axis utils java utils class $ \ `` org apache axis type n m token\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token = $ r87 <NEXT> goto label40 <NEXT> label if r0 == $ r87 goto label69 <NEXT> $ r21 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token <NEXT> if $ r21 ! = null goto label41 <NEXT> $ r88 = org apache axis utils java utils class $ \ `` org apache axis type n m tokens\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ n m tokens = $ r88 <NEXT> goto label42 <NEXT> label if r0 == $ r88 goto label69 <NEXT> $ r22 = org apache axis utils java utils class $ org $ apache $ axis $ type $ non negative integer <NEXT> if $ r22 ! = null goto label43 <NEXT> $ r89 = org apache axis utils java utils class $ \ `` org apache axis type non negative integer\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ non negative integer = $ r89 <NEXT> goto label44 <NEXT> label if r0 == $ r89 goto label69 <NEXT> $ r23 = org apache axis utils java utils class $ org $ apache $ axis $ type $ non positive integer <NEXT> if $ r23 ! = null goto label45 <NEXT> $ r90 = org apache axis utils java utils class $ \ `` org apache axis type non positive integer\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ non positive integer = $ r90 <NEXT> goto label46 <NEXT> label if r0 == $ r90 goto label69 <NEXT> $ r24 = org apache axis utils java utils class $ org $ apache $ axis $ type $ normalized string <NEXT> if $ r24 ! = null goto label47 <NEXT> $ r91 = org apache axis utils java utils class $ \ `` org apache axis type normalize string\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ normalized string = $ r91 <NEXT> goto label48 <NEXT> label if r0 == $ r91 goto label69 <NEXT> $ r25 = org apache axis utils java utils class $ org $ apache $ axis $ type $ positive integer <NEXT> if $ r25 ! = null goto label49 <NEXT> $ r92 = org apache axis utils java utils class $ \ `` org apache axis type positive integer\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ positive integer = $ r92 <NEXT> goto label50 <NEXT> label if r0 == $ r92 goto label69 <NEXT> $ r26 = org apache axis utils java utils class $ org $ apache $ axis $ type $ time <NEXT> if $ r26 ! = null goto label51 <NEXT> $ r93 = org apache axis utils java utils class $ \ `` org apache axis type time\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ time = $ r93 <NEXT> goto label52 <NEXT> label if r0 == $ r93 goto label69 <NEXT> $ r27 = org apache axis utils java utils class $ org $ apache $ axis $ type $ token <NEXT> if $ r27 ! = null goto label53 <NEXT> $ r94 = org apache axis utils java utils class $ \ `` org apache axis type token\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ token = $ r94 <NEXT> goto label54 <NEXT> label if r0 == $ r94 goto label69 <NEXT> $ r28 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned byte <NEXT> if $ r28 ! = null goto label55 <NEXT> $ r95 = org apache axis utils java utils class $ \ `` org apache axis type unsigned byte\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned byte = $ r95 <NEXT> goto label56 <NEXT> label if r0 == $ r95 goto label69 <NEXT> $ r29 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned int <NEXT> if $ r29 ! = null goto label57 <NEXT> $ r96 = org apache axis utils java utils class $ \ `` org apache axis type unsigned int\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned int = $ r96 <NEXT> goto label58 <NEXT> label if r0 == $ r96 goto label69 <NEXT> $ r30 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned long <NEXT> if $ r30 ! = null goto label59 <NEXT> $ r97 = org apache axis utils java utils class $ \ `` org apache axis type unsigned long\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned long = $ r97 <NEXT> goto label60 <NEXT> label if r0 == $ r97 goto label69 <NEXT> $ r31 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned short <NEXT> if $ r31 ! = null goto label61 <NEXT> $ r98 = org apache axis utils java utils class $ \ `` org apache axis type unsigned short\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned short = $ r98 <NEXT> goto label62 <NEXT> label if r0 == $ r98 goto label69 <NEXT> $ r32 = org apache axis utils java utils class $ org $ apache $ axis $ type $ uri <NEXT> if $ r32 ! = null goto label63 <NEXT> $ r99 = org apache axis utils java utils class $ \ `` org apache axis type uri\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ uri = $ r99 <NEXT> goto label64 <NEXT> label if r0 == $ r99 goto label69 <NEXT> $ r33 = org apache axis utils java utils class $ org $ apache $ axis $ type $ year <NEXT> if $ r33 ! = null goto label65 <NEXT> $ r100 = org apache axis utils java utils class $ \ `` org apache axis type year\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ year = $ r100 <NEXT> goto label66 <NEXT> label if r0 == $ r100 goto label69 <NEXT> $ r34 = org apache axis utils java utils class $ org $ apache $ axis $ type $ year month <NEXT> if $ r34 ! = null goto label67 <NEXT> $ r101 = org apache axis utils java utils class $ \ `` org apache axis type year month\ `` <NEXT> org apache axis utils java utils class $ org $ apache $ axis $ type $ year month = $ r101 <NEXT> goto label68 <NEXT> label if r0 ! = $ r101 goto label70 <NEXT> label $ z2 = 1 <NEXT> goto label71 <NEXT> label return $ z2 <NEXT> label if r0 ! = $ r101 goto label70 <NEXT> label $ z2 = 0 <NEXT> if $ r34 ! = null goto label67 <NEXT> label $ r101 = org apache axis utils java utils class $ org $ apache $ axis $ type $ year month <NEXT> if $ r33 ! = null goto label65 <NEXT> label $ r100 = org apache axis utils java utils class $ org $ apache $ axis $ type $ year <NEXT> if $ r32 ! = null goto label63 <NEXT> label $ r99 = org apache axis utils java utils class $ org $ apache $ axis $ type $ uri <NEXT> if $ r31 ! = null goto label61 <NEXT> label $ r98 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned short <NEXT> if $ r30 ! = null goto label59 <NEXT> label $ r97 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned long <NEXT> if $ r29 ! = null goto label57 <NEXT> label $ r96 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned int <NEXT> if $ r28 ! = null goto label55 <NEXT> label $ r95 = org apache axis utils java utils class $ org $ apache $ axis $ type $ unsigned byte <NEXT> if $ r27 ! = null goto label53 <NEXT> label $ r94 = org apache axis utils java utils class $ org $ apache $ axis $ type $ token <NEXT> if $ r26 ! = null goto label51 <NEXT> label $ r93 = org apache axis utils java utils class $ org $ apache $ axis $ type $ time <NEXT> if $ r25 ! = null goto label49 <NEXT> label $ r92 = org apache axis utils java utils class $ org $ apache $ axis $ type $ positive integer <NEXT> if $ r24 ! = null goto label47 <NEXT> label $ r91 = org apache axis utils java utils class $ org $ apache $ axis $ type $ normalized string <NEXT> if $ r23 ! = null goto label45 <NEXT> label $ r90 = org apache axis utils java utils class $ org $ apache $ axis $ type $ non positive integer <NEXT> if $ r22 ! = null goto label43 <NEXT> label $ r89 = org apache axis utils java utils class $ org $ apache $ axis $ type $ non negative integer <NEXT> if $ r21 ! = null goto label41 <NEXT> label $ r88 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token <NEXT> if $ r20 ! = null goto label39 <NEXT> label $ r87 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n m token <NEXT> if $ r19 ! = null goto label37 <NEXT> label $ r86 = org apache axis utils java utils class $ org $ apache $ axis $ type $ negative integer <NEXT> if $ r18 ! = null goto label35 <NEXT> label $ r85 = org apache axis utils java utils class $ org $ apache $ axis $ type $ n c name <NEXT> if $ r17 ! = null goto label33 <NEXT> label $ r84 = org apache axis utils java utils class $ org $ apache $ axis $ type $ name <NEXT> if $ r16 ! = null goto label31 <NEXT> label $ r83 = org apache axis utils java utils class $ org $ apache $ axis $ type $ month day <NEXT> if $ r15 ! = null goto label29 <NEXT> label $ r82 = org apache axis utils java utils class $ org $ apache $ axis $ type $ month <NEXT> if $ r14 ! = null goto label27 <NEXT> label $ r81 = org apache axis utils java utils class $ org $ apache $ axis $ type $ language <NEXT> if $ r13 ! = null goto label25 <NEXT> label $ r80 = org apache axis utils java utils class $ org $ apache $ axis $ type $ i d refs <NEXT> if $ r12 ! = null goto label23 <NEXT> label $ r79 = org apache axis utils java utils class $ org $ apache $ axis $ type $ i d ref <NEXT> if $ r11 ! = null goto label21 <NEXT> label $ r78 = org apache axis utils java utils class $ org $ apache $ axis $ type $ id <NEXT> if $ r10 ! = null goto label19 <NEXT> label $ r77 = org apache axis utils java utils class $ org $ apache $ axis $ type $ hex binary <NEXT> if $ r9 ! = null goto label17 <NEXT> label $ r76 = org apache axis utils java utils class $ org $ apache $ axis $ type $ entity <NEXT> if $ r8 ! = null goto label15 <NEXT> label $ r75 = org apache axis utils java utils class $ org $ apache $ axis $ type $ entity <NEXT> if $ r7 ! = null goto label13 <NEXT> label $ r74 = org apache axis utils java utils class $ org $ apache $ axis $ type $ duration <NEXT> if $ r6 ! = null goto label11 <NEXT> label $ r73 = org apache axis utils java utils class $ org $ apache $ axis $ type $ day <NEXT> if $ r5 ! = null goto label09 <NEXT> label $ r72 = org apache axis utils java utils class $ java $ lang $ number <NEXT> if $ r4 ! = null goto label07 <NEXT> label $ r71 = org apache axis utils java utils class $ java $ lang $ double <NEXT> if $ r3 ! = null goto label05 <NEXT> label $ r70 = org apache axis utils java utils class $ java $ lang $ float <NEXT> if $ r2 ! = null goto label03 <NEXT> label $ r69 = org apache axis utils java utils class $ java $ lang $ boolean <NEXT> if $ r1 ! = null goto label01 <NEXT> label $ r68 = org apache axis utils java utils class $ java $ lang $ string <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string buffer <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append 95 <NEXT> $ r3 = $ r2 append r0 <NEXT> $ r4 = $ r3 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return z0 <NEXT> if r0 ! = null goto label1 <NEXT> label $ z1 = r0 instanceof java lang boolean <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r3 = java lang boolean r0 <NEXT> $ z5 = $ r3 boolean value <NEXT> return $ z5 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r0 instanceof java lang integer <NEXT> if $ z2 == 0 goto label5 <NEXT> $ r2 = java lang integer r0 <NEXT> $ i0 = $ r2 int value <NEXT> if $ i0 == 0 goto label3 <NEXT> $ z6 = 1 <NEXT> goto label4 <NEXT> label return $ z6 <NEXT> if $ i0 == 0 goto label3 <NEXT> label $ z6 = 0 <NEXT> if $ z2 == 0 goto label5 <NEXT> label $ z3 = r0 instanceof java lang string <NEXT> if $ z3 == 0 goto label6 <NEXT> $ r1 = java lang string r0 <NEXT> $ z4 = org apache axis utils java utils be true explicitly $ r1 <NEXT> return $ z4 <NEXT> if $ z3 == 0 goto label6 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org apache axis utils java utils be false explicitly r0 1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis utils lockable hashtable r0 <NEXT> r2 parent = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r11 = org apache axis wsdl symbol table bind entry r0 <NEXT> $ r3 = r11 attribute <NEXT> $ r4 = $ r3 get r1 <NEXT> r9 = org apache axis wsdl symbol table bind entry $ operation attr $ r4 <NEXT> if r9 ! = null goto label1 <NEXT> r10 = new org apache axis wsdl symbol table bind entry $ operation attr <NEXT> specialinvoke r10 < init > <NEXT> r9 = r10 <NEXT> r12 = org apache axis wsdl symbol table bind entry r0 <NEXT> $ r7 = r12 attribute <NEXT> $ r7 put r1 r10 <NEXT> label r9 set input body type r2 <NEXT> $ r5 = org apache axis constant use literal <NEXT> if r2 ! = $ r5 goto label2 <NEXT> r13 = org apache axis wsdl symbol table bind entry r0 <NEXT> r13 set have literal 1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 get node <NEXT> r4 = org apache axis wsdl symbol table schema utils get complex element extension base r2 r1 <NEXT> if r4 ! = null goto label1 <NEXT> r4 = org apache axis wsdl symbol table schema utils get complex element restriction base r2 r1 <NEXT> label if r4 ! = null goto label2 <NEXT> r3 = org apache axis wsdl symbol table schema utils get simple type base r2 <NEXT> if r3 == null goto label2 <NEXT> r4 = r1 get type r3 <NEXT> label r5 = org apache axis wsdl symbol table type entry r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ message entry <NEXT> if $ r2 ! = null goto label1 <NEXT> $ r7 = org apache axis wsdl symbol table symbol table class $ \ `` org apache axis wsdl symbol table message entry\ `` <NEXT> org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ message entry = $ r7 <NEXT> goto label2 <NEXT> label r8 = org apache axis wsdl symbol table symbol table r0 <NEXT> $ r3 = r8 get r1 $ r7 <NEXT> $ r4 = org apache axis wsdl symbol table message entry $ r3 <NEXT> return $ r4 <NEXT> if $ r2 ! = null goto label1 <NEXT> label $ r7 = org apache axis wsdl symbol table symbol table class $ org $ apache $ axis $ wsdl $ symbol table $ message entry <END>
<BEG> r0 = @ this <NEXT> r7 = new java util vector <NEXT> specialinvoke r7 < init > <NEXT> r8 = org apache axis wsdl symbol table symbol table r0 <NEXT> $ r3 = r8 element type entry <NEXT> $ r4 = $ r3 value <NEXT> r7 add all $ r4 <NEXT> r9 = org apache axis wsdl symbol table symbol table r0 <NEXT> $ r5 = r9 type type entry <NEXT> $ r6 = $ r5 value <NEXT> r7 add all $ r6 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org apache axis constant be s o a p_ e n c r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = org apache axis constant be schema x s d r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = org apache axis constant be schema x s i r1 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = r1 equal \ `` http www w3 org xml 1998 namespace\ `` <NEXT> if $ z3 == 0 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache axis wsdl symbol table type entry r0 <NEXT> r1 underl type nillable = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache axis wsdl symbol table undefined delegate r0 <NEXT> $ r2 = r3 list <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis wsdl to java emitter r0 <NEXT> $ z0 = r1 b build file generation <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache axis wsdl to java emitter r0 <NEXT> r1 b generate all = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache axis wsdl to java emitter r0 <NEXT> r2 run r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache axis wsdl to java emitter r0 <NEXT> r1 set server side z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache axis wsdl to java emitter r0 <NEXT> $ z0 = r1 be deploy <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = org apache axis wsdl to java java class writer r0 <NEXT> r2 = r13 get package <NEXT> if r2 == null goto label1 <NEXT> $ i0 = r2 length <NEXT> if $ i0 < = 0 goto label1 <NEXT> r12 = new java lang string buffer <NEXT> specialinvoke r12 < init > <NEXT> $ r4 = r12 append r2 <NEXT> $ r5 = $ r4 append 46 <NEXT> r14 = org apache axis wsdl to java java class writer r0 <NEXT> $ r6 = r14 get class name <NEXT> $ r7 = $ r5 append $ r6 <NEXT> r8 = $ r7 to string <NEXT> goto label2 <NEXT> label r16 = org apache axis wsdl to java java class writer r0 <NEXT> $ r9 = r16 emitter <NEXT> $ r10 = $ r9 get generate file info <NEXT> r17 = org apache axis wsdl to java java class writer r0 <NEXT> $ r11 = r17 type <NEXT> $ r10 add r1 r8 $ r11 <NEXT> return <NEXT> if $ i0 < = 0 goto label1 <NEXT> label r15 = org apache axis wsdl to java java class writer r0 <NEXT> r8 = r15 get class name <END>
<BEG> r0 = @ this <NEXT> return \ `` class \ `` <END>
<BEG> r0 = @ this <NEXT> r2 = org apache axis wsdl to java java deploy writer r0 <NEXT> $ r1 = r2 emitter <NEXT> $ z0 = $ r1 be server side <NEXT> if $ z0 == 0 goto label1 <NEXT> specialinvoke r0 generate <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r10 = org apache axis wsdl to java java impl writer r0 <NEXT> $ r4 = r10 b entry <NEXT> $ r3 = org apache axis wsdl to java java bind writer interface_name <NEXT> $ r5 = $ r4 get dynamic var $ r3 <NEXT> r1 = java lang string $ r5 <NEXT> r9 = new java lang string buffer <NEXT> specialinvoke r9 < init > <NEXT> $ r7 = r9 append \ `` implement \ `` <NEXT> $ r8 = $ r7 append r1 <NEXT> r2 = $ r8 to string <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r1 println \ `` private java util hash set port = null \ `` <NEXT> r1 println <NEXT> r1 println \ `` public java util iterator get port { \ `` <NEXT> r1 println \ `` if port == null { \ `` <NEXT> r1 println \ `` port = new java util hash set \ `` <NEXT> i1 = 0 <NEXT> label $ i0 = r3 size <NEXT> if i1 > = $ i0 goto label2 <NEXT> $ r4 = new java lang string buffer <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append \ `` port add new javax xml namespace q name \\\ `` \ `` <NEXT> $ r6 = $ r5 append r2 <NEXT> $ r7 = $ r6 append \ `` \\\ <NEXT> $ r8 = r3 get i1 <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ `` \\\ `` \ `` <NEXT> $ r11 = $ r10 to string <NEXT> r1 println $ r11 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label r1 println \ `` } \ `` <NEXT> r1 println \ `` return port iterator \ `` <NEXT> r1 println \ `` } \ `` <END>
<BEG> r0 = @ this <NEXT> r10 = @ parameter0 <NEXT> if r10 == null goto label1 <NEXT> $ c2 = java io file separator char <NEXT> r10 = org apache axis wsdl to java namespaces normalize package name r10 $ c2 <NEXT> label r15 = org apache axis wsdl to java namespaces r0 <NEXT> $ r1 = r15 root <NEXT> if $ r1 ! = null goto label2 <NEXT> r11 = r10 <NEXT> goto label3 <NEXT> label if r11 ! = null goto label4 <NEXT> $ r12 = \ `` \ `` <NEXT> goto label5 <NEXT> label return $ r12 <NEXT> label if r11 ! = null goto label4 <NEXT> label r14 = new java lang string buffer <NEXT> specialinvoke r14 < init > <NEXT> $ r8 = r14 append r11 <NEXT> $ c1 = java io file separator char <NEXT> $ r9 = $ r8 append $ c1 <NEXT> $ r12 = $ r9 to string <NEXT> if $ r1 ! = null goto label2 <NEXT> label r13 = new java lang string buffer <NEXT> specialinvoke r13 < init > <NEXT> r16 = org apache axis wsdl to java namespaces r0 <NEXT> $ r3 = r16 root <NEXT> $ r4 = r13 append $ r3 <NEXT> $ c0 = java io file separator char <NEXT> $ r5 = $ r4 append $ c0 <NEXT> $ r6 = $ r5 append r10 <NEXT> r11 = $ r6 to string <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string buffer <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` new javax xml namespace q name \\\ `` \ `` <NEXT> $ r3 = r0 get namespace u r i <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \\\ <NEXT> $ r6 = r0 get local part <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` \\\ `` \ `` <NEXT> $ r9 = $ r8 to string <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com box sdk box a p i connection r0 <NEXT> r2 token u r l = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk box a p i connection r0 <NEXT> $ r1 = r2 base u r l <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com box sdk box a p i connection r0 <NEXT> r1 read timeout = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r42 = com box sdk box a p i connection r0 <NEXT> $ r3 = r42 refresh lock <NEXT> $ r4 = $ r3 write lock <NEXT> $ r4 lock <NEXT> r43 = com box sdk box a p i connection r0 <NEXT> $ z0 = r43 can refresh <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r44 = com box sdk box a p i connection r0 <NEXT> $ r20 = r44 refresh lock <NEXT> $ r21 = $ r20 write lock <NEXT> $ r21 unlock <NEXT> r37 = new java lang illegal state exception <NEXT> specialinvoke r37 < init > \ `` the box a p i connection can not be refresh because it doesn\'t have a refresh token \ `` <NEXT> throw r37 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r38 = new java net url <NEXT> r45 = com box sdk box a p i connection r0 <NEXT> $ r6 = r45 token u r l <NEXT> specialinvoke r38 < init > $ r6 <NEXT> label goto label5 <NEXT> label $ r7 = newarray java lang object [ 3 ] <NEXT> r47 = com box sdk box a p i connection r0 <NEXT> $ r8 = r47 refresh token <NEXT> $ r7 [ 0 ] = $ r8 <NEXT> r48 = com box sdk box a p i connection r0 <NEXT> $ r9 = r48 client i d <NEXT> $ r7 [ 1 ] = $ r9 <NEXT> r49 = com box sdk box a p i connection r0 <NEXT> $ r10 = r49 client secret <NEXT> $ r7 [ 2 ] = $ r10 <NEXT> r33 = java lang string format \ `` grant_type=refresh_token & refresh_token= % s & client_id= % s & client_secret= % s\ <NEXT> r41 = new com box sdk box a p i request <NEXT> r50 = com box sdk box a p i connection r0 <NEXT> specialinvoke r41 < init > r50 r38 \ `` post\ `` <NEXT> r41 should authenticate 0 <NEXT> r41 set body r33 <NEXT> label $ r12 = r41 send <NEXT> r34 = com box sdk box j s o n response $ r12 <NEXT> r2 = r34 get j s o n <NEXT> label goto label9 <NEXT> label r36 = com eclipsesource json json object read from r2 <NEXT> $ r13 = r36 get \ `` access_token\ `` <NEXT> $ r14 = $ r13 a string <NEXT> r54 = com box sdk box a p i connection r0 <NEXT> r54 access token = $ r14 <NEXT> $ r15 = r36 get \ `` refresh_token\ `` <NEXT> $ r16 = $ r15 a string <NEXT> r55 = com box sdk box a p i connection r0 <NEXT> r55 refresh token = $ r16 <NEXT> $ l0 = java lang system current time millis <NEXT> r56 = com box sdk box a p i connection r0 <NEXT> r56 last refresh = $ l0 <NEXT> $ r17 = r36 get \ `` expires_in\ `` <NEXT> $ l1 = $ r17 a long <NEXT> $ l2 = $ l1 * 1000l <NEXT> r57 = com box sdk box a p i connection r0 <NEXT> r57 expire = $ l2 <NEXT> r58 = com box sdk box a p i connection r0 <NEXT> r58 notify refresh <NEXT> r59 = com box sdk box a p i connection r0 <NEXT> $ r18 = r59 refresh lock <NEXT> $ r19 = $ r18 write lock <NEXT> $ r19 unlock <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com box sdk box a p i connection r0 <NEXT> $ r4 = r6 listener <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = com box sdk box a p i connection listener $ r5 <NEXT> r7 = com box sdk box a p i connection r0 <NEXT> r3 on error r7 r1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> label r17 = new java net url <NEXT> r21 = com box sdk box a p i connection r0 <NEXT> $ r4 = r21 revoke u r l <NEXT> specialinvoke r17 < init > $ r4 <NEXT> label goto label5 <NEXT> label $ r5 = newarray java lang object [ 3 ] <NEXT> r22 = com box sdk box a p i connection r0 <NEXT> $ r6 = r22 access token <NEXT> $ r5 [ 0 ] = $ r6 <NEXT> r23 = com box sdk box a p i connection r0 <NEXT> $ r7 = r23 client i d <NEXT> $ r5 [ 1 ] = $ r7 <NEXT> r24 = com box sdk box a p i connection r0 <NEXT> $ r8 = r24 client secret <NEXT> $ r5 [ 2 ] = $ r8 <NEXT> r16 = java lang string format \ `` token= % s & client_id= % s & client_secret= % s\ <NEXT> r20 = new com box sdk box a p i request <NEXT> r25 = com box sdk box a p i connection r0 <NEXT> specialinvoke r20 < init > r25 r17 \ `` post\ `` <NEXT> r20 should authenticate 0 <NEXT> r20 set body r16 <NEXT> label r20 send <NEXT> label goto label9 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk box a p i request r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r16 = com box sdk box collaboration r0 <NEXT> r1 = r16 get a p i <NEXT> $ r6 = com box sdk box collaboration collaboration_url_template <NEXT> $ r7 = r1 get base u r l <NEXT> $ r8 = newarray java lang object [ 1 ] <NEXT> r17 = com box sdk box collaboration r0 <NEXT> $ r9 = r17 get i d <NEXT> $ r8 [ 0 ] = $ r9 <NEXT> r2 = $ r6 build $ r7 $ r8 <NEXT> r14 = new com box sdk box a p i request <NEXT> specialinvoke r14 < init > r1 r2 \ `` get\ `` <NEXT> $ r11 = r14 send <NEXT> r4 = com box sdk box j s o n response $ r11 <NEXT> $ r12 = r4 get j s o n <NEXT> r5 = com eclipsesource json json object read from $ r12 <NEXT> r15 = new com box sdk box collaboration $ info <NEXT> r18 = com box sdk box collaboration r0 <NEXT> specialinvoke r15 < init > r18 r5 <NEXT> return r15 <END>
<BEG> r0 = @ this <NEXT> r12 = com box sdk box collaboration whitelist exempt target r0 <NEXT> r1 = r12 get a p i <NEXT> $ r5 = com box sdk box collaboration whitelist exempt target collaboration_whitelist_exempt_target_entry_url_template <NEXT> $ r6 = r1 get base u r l <NEXT> $ r7 = newarray java lang object [ 1 ] <NEXT> r13 = com box sdk box collaboration whitelist exempt target r0 <NEXT> $ r8 = r13 get i d <NEXT> $ r7 [ 0 ] = $ r8 <NEXT> r2 = $ r5 build $ r6 $ r7 <NEXT> r11 = new com box sdk box a p i request <NEXT> $ r10 = com box sdk http http method delete <NEXT> specialinvoke r11 < init > r1 r2 $ r10 <NEXT> r4 = r11 send <NEXT> r4 disconnect <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk box event r0 <NEXT> $ r1 = r2 source j s o n <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com box sdk box file r0 <NEXT> r2 upload version r1 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i2 = @ parameter3 <NEXT> i3 = @ parameter4 <NEXT> r32 = new com box sdk query string builder <NEXT> specialinvoke r32 < init > <NEXT> $ l4 = long i0 <NEXT> r32 append param \ `` min_width\ <NEXT> $ l5 = long i1 <NEXT> r32 append param \ `` min_height\ <NEXT> $ l6 = long i2 <NEXT> r32 append param \ `` max_width\ <NEXT> $ l7 = long i3 <NEXT> r32 append param \ `` max_height\ <NEXT> $ r15 = com box sdk box file $ thumbnail file type png <NEXT> if r1 ! = $ r15 goto label01 <NEXT> r30 = com box sdk box file get_thumbnail_png_template <NEXT> goto label03 <NEXT> label r38 = com box sdk box file r0 <NEXT> $ r18 = r38 get a p i <NEXT> $ r19 = $ r18 get base u r l <NEXT> $ r20 = r32 to string <NEXT> $ r21 = newarray java lang object [ 1 ] <NEXT> r39 = com box sdk box file r0 <NEXT> $ r22 = r39 get i d <NEXT> $ r21 [ 0 ] = $ r22 <NEXT> r3 = r30 build with query $ r19 $ r20 $ r21 <NEXT> r34 = new com box sdk box a p i request <NEXT> r40 = com box sdk box file r0 <NEXT> $ r24 = r40 get a p i <NEXT> specialinvoke r34 < init > $ r24 r3 \ `` get\ `` <NEXT> r5 = r34 send <NEXT> r35 = new java io byte array output stream <NEXT> specialinvoke r35 < init > <NEXT> r7 = r5 get body <NEXT> r8 = newarray byte [ 8192 ] <NEXT> label i8 = r7 read r8 <NEXT> label if i8 == -1 goto label06 <NEXT> r35 write r8 0 i8 <NEXT> i8 = r7 read r8 <NEXT> goto label05 <NEXT> label if i8 == -1 goto label06 <NEXT> label r5 disconnect <NEXT> goto label10 <NEXT> label $ r26 = r35 to byte array <NEXT> return $ r26 <NEXT> if r1 ! = $ r15 goto label01 <NEXT> label $ r16 = com box sdk box file $ thumbnail file type jpg <NEXT> if r1 ! = $ r16 goto label02 <NEXT> r30 = com box sdk box file get_thumbnail_jpg_template <NEXT> if r1 ! = $ r16 goto label02 <NEXT> label r33 = new com box sdk box a p i exception <NEXT> specialinvoke r33 < init > \ `` unsupported thumbnail file type\ `` <NEXT> r37 = java lang throwable r33 <NEXT> throw r37 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r13 = new com eclipsesource json json object <NEXT> specialinvoke r13 < init > <NEXT> $ r7 = r1 get i d <NEXT> r13 add \ `` id\ <NEXT> $ z0 = r1 instanceof com box sdk box user <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 add \ `` type\ <NEXT> goto label3 <NEXT> label r15 = com box sdk box file r0 <NEXT> $ r11 = specialinvoke r15 collaborate r13 r2 r3 r4 <NEXT> return $ r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 instanceof com box sdk box group <NEXT> if $ z1 == 0 goto label2 <NEXT> label r14 = new java lang illegal argument exception <NEXT> specialinvoke r14 < init > \ `` the give collaborator be of an unknown type \ `` <NEXT> throw r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r13 = new com eclipsesource json json object <NEXT> specialinvoke r13 < init > <NEXT> $ r7 = r1 get i d <NEXT> r13 add \ `` id\ <NEXT> $ z0 = r1 instanceof com box sdk box user <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 add \ `` type\ <NEXT> goto label3 <NEXT> label r15 = com box sdk box file r0 <NEXT> $ r11 = specialinvoke r15 collaborate r13 r2 r3 r4 <NEXT> return $ r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 instanceof com box sdk box group <NEXT> if $ z1 == 0 goto label2 <NEXT> label r14 = new java lang illegal argument exception <NEXT> specialinvoke r14 < init > \ `` the give collaborator be of an unknown type \ `` <NEXT> throw r14 <END>
<BEG> r0 = @ this <NEXT> r10 = com box sdk box file upload session r0 <NEXT> $ r3 = r10 session info <NEXT> $ r4 = $ r3 get session endpoint <NEXT> r1 = $ r4 get abort endpoint <NEXT> r9 = new com box sdk box j s o n request <NEXT> r11 = com box sdk box file upload session r0 <NEXT> $ r6 = r11 get a p i <NEXT> $ r7 = com box sdk http http method delete <NEXT> specialinvoke r9 < init > $ r6 r1 $ r7 <NEXT> r9 send <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com box sdk box file version r0 <NEXT> r2 file i d = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk box file version r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com box sdk box folder folder_info_url_template <NEXT> r3 = com box sdk box folder r0 <NEXT> $ r2 = r3 apply watermark $ r1 \ `` default\ `` <NEXT> return $ r2 <END>
<BEG> $ i0 = com box sdk box global setting max request attempt <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r4 = com box sdk box group group_url_template <NEXT> r12 = com box sdk box group r0 <NEXT> $ r5 = r12 get a p i <NEXT> $ r6 = $ r5 get base u r l <NEXT> $ r7 = newarray java lang object [ 1 ] <NEXT> r13 = com box sdk box group r0 <NEXT> $ r8 = r13 get i d <NEXT> $ r7 [ 0 ] = $ r8 <NEXT> r1 = $ r4 build $ r6 $ r7 <NEXT> r11 = new com box sdk box a p i request <NEXT> r14 = com box sdk box group r0 <NEXT> $ r10 = r14 get a p i <NEXT> specialinvoke r11 < init > $ r10 r1 \ `` delete\ `` <NEXT> r3 = r11 send <NEXT> r3 disconnect <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com box sdk box redirect response r0 <NEXT> r2 redirect u r l = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk box resource r0 <NEXT> $ r1 = r2 get i d <NEXT> $ i0 = $ r1 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com box sdk box retention policy r0 <NEXT> $ r2 = r6 get a p i <NEXT> r7 = com box sdk box retention policy r0 <NEXT> $ r3 = r7 get i d <NEXT> $ r4 = r1 get i d <NEXT> $ r5 = com box sdk box retention policy assignment create assignment to folder $ r2 $ r3 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = com box sdk box search parameter r0 <NEXT> r1 query = null <NEXT> r2 = com box sdk box search parameter r0 <NEXT> r2 field = null <NEXT> r3 = com box sdk box search parameter r0 <NEXT> r3 scope = null <NEXT> r4 = com box sdk box search parameter r0 <NEXT> r4 file extension = null <NEXT> r5 = com box sdk box search parameter r0 <NEXT> r5 create range = null <NEXT> r6 = com box sdk box search parameter r0 <NEXT> r6 update range = null <NEXT> r7 = com box sdk box search parameter r0 <NEXT> r7 size range = null <NEXT> r8 = com box sdk box search parameter r0 <NEXT> r8 owner user id = null <NEXT> r9 = com box sdk box search parameter r0 <NEXT> r9 ancestor folder id = null <NEXT> r10 = com box sdk box search parameter r0 <NEXT> r10 content type = null <NEXT> r11 = com box sdk box search parameter r0 <NEXT> r11 type = null <NEXT> r12 = com box sdk box search parameter r0 <NEXT> r12 trash content = null <NEXT> r13 = com box sdk box search parameter r0 <NEXT> r13 metadata filter = null <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com box sdk box search parameter r0 <NEXT> r2 field = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new com box sdk query string builder <NEXT> specialinvoke r6 < init > <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 < = 0 goto label1 <NEXT> r6 append param \ `` fields\ <NEXT> label r7 = new com box sdk box task $ 1 <NEXT> r8 = com box sdk box task r0 <NEXT> specialinvoke r7 < init > r8 r6 <NEXT> r9 = java lang iterable r7 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r6 = com box sdk box trash folder_info_url_template <NEXT> r12 = com box sdk box trash r0 <NEXT> $ r5 = r12 api <NEXT> $ r7 = $ r5 get base u r l <NEXT> $ r8 = newarray java lang object [ 1 ] <NEXT> $ r8 [ 0 ] = r1 <NEXT> r2 = $ r6 build $ r7 $ r8 <NEXT> r11 = new com box sdk box a p i request <NEXT> r13 = com box sdk box trash r0 <NEXT> $ r10 = r13 api <NEXT> specialinvoke r11 < init > $ r10 r2 \ `` delete\ `` <NEXT> r4 = r11 send <NEXT> r4 disconnect <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com box sdk box upload email r0 <NEXT> r3 access = r1 <NEXT> $ r2 = r1 to j s o n value <NEXT> r4 = com box sdk box upload email r0 <NEXT> r4 add pending change \ `` access\ <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r5 = com box sdk box user get_me_url <NEXT> $ r6 = r0 get base u r l <NEXT> $ r7 = newarray java lang object [ 0 ] <NEXT> r1 = $ r5 build $ r6 $ r7 <NEXT> $ r8 = new com box sdk box a p i request <NEXT> specialinvoke $ r8 < init > r0 r1 \ `` get\ `` <NEXT> $ r9 = $ r8 send <NEXT> r3 = com box sdk box j s o n response $ r9 <NEXT> $ r10 = r3 get j s o n <NEXT> r4 = com eclipsesource json json object read from $ r10 <NEXT> $ r11 = new com box sdk box user <NEXT> $ r12 = r4 get \ `` id\ `` <NEXT> $ r13 = $ r12 a string <NEXT> specialinvoke $ r11 < init > r0 $ r13 <NEXT> return $ r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r6 = com box sdk box web link web_link_url_template <NEXT> r18 = com box sdk box web link r0 <NEXT> $ r7 = r18 get a p i <NEXT> $ r8 = $ r7 get base u r l <NEXT> $ r9 = newarray java lang object [ 1 ] <NEXT> r19 = com box sdk box web link r0 <NEXT> $ r10 = r19 get i d <NEXT> $ r9 [ 0 ] = $ r10 <NEXT> r2 = $ r6 build $ r8 $ r9 <NEXT> r16 = new com box sdk box j s o n request <NEXT> r20 = com box sdk box web link r0 <NEXT> $ r12 = r20 get a p i <NEXT> specialinvoke r16 < init > $ r12 r2 \ `` put\ `` <NEXT> r17 = new com eclipsesource json json object <NEXT> specialinvoke r17 < init > <NEXT> r17 add \ `` name\ <NEXT> $ r15 = r17 to string <NEXT> r16 set body $ r15 <NEXT> r5 = r16 send <NEXT> r5 disconnect <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com box sdk create user params r0 <NEXT> $ z0 = r1 be exempt from login verification <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk file upload params r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk metadata r0 <NEXT> $ r1 = r2 get \ `` $ id\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk box metadata filter r0 <NEXT> $ r1 = r2 scope <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> r5 = com box sdk metadata r0 <NEXT> $ r2 = r5 value <NEXT> r6 = com box sdk metadata r0 <NEXT> $ r3 = specialinvoke r6 path to property r1 <NEXT> $ r2 set $ r3 f0 <NEXT> r7 = com box sdk metadata r0 <NEXT> specialinvoke r7 add op \ `` replace\ <NEXT> r8 = com box sdk metadata r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com box sdk metadata r0 <NEXT> $ r2 = r4 get value r1 <NEXT> $ r3 = $ r2 a string <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk metadata template r0 <NEXT> $ r1 = r2 template key <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com box sdk representation r0 <NEXT> $ r1 = r2 content <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com box sdk size range r0 <NEXT> r1 upper bound bytes = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = bsh name suffix r1 1 <NEXT> r6 = bsh bsh class manager r0 <NEXT> $ r3 = r6 define class base names <NEXT> $ r4 = $ r3 get r2 <NEXT> $ r5 = java lang string $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = bsh name suffix r1 1 <NEXT> r7 = bsh bsh class manager r0 <NEXT> $ r3 = r7 define class <NEXT> $ r3 remove r1 <NEXT> r8 = bsh bsh class manager r0 <NEXT> $ r5 = r8 define class base names <NEXT> $ r5 remove r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = bsh bsh method r0 <NEXT> $ r1 = r2 creturn type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = bsh call stack r0 <NEXT> $ r2 = r3 stack <NEXT> $ r2 set element at r1 i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = bsh capability class <NEXT> r6 = $ r2 get r0 <NEXT> if r6 ! = null goto label5 <NEXT> label r6 = java lang class for name r0 <NEXT> label goto label4 <NEXT> label if r6 == null goto label5 <NEXT> $ r3 = bsh capability class <NEXT> $ r3 put r6 \ `` unused\ `` <NEXT> label if r6 == null goto label6 <NEXT> $ z0 = 1 <NEXT> goto label7 <NEXT> label return $ z0 <NEXT> label if r6 == null goto label6 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = bsh classpath bsh class path r0 <NEXT> $ r3 = r5 class source <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r17 = bsh interpreter r0 <NEXT> $ r2 = r17 console <NEXT> if $ r2 == null goto label1 <NEXT> r18 = bsh interpreter r0 <NEXT> $ r10 = r18 console <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r11 = r15 append \ `` error \ `` <NEXT> $ r12 = $ r11 append r1 <NEXT> $ r13 = $ r12 append \ `` \n\ `` <NEXT> $ r14 = $ r13 to string <NEXT> $ r10 error $ r14 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r2 == null goto label1 <NEXT> label r19 = bsh interpreter r0 <NEXT> $ r4 = r19 err <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r5 = r16 append \ `` error \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 to string <NEXT> $ r4 println $ r7 <NEXT> r20 = bsh interpreter r0 <NEXT> $ r8 = r20 err <NEXT> $ r8 flush <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = bsh interpreter debug <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = bsh interpreter debug <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r3 = $ r1 append \ `` debug \ `` <NEXT> $ r4 = $ r3 append r0 <NEXT> $ r5 = $ r4 to string <NEXT> $ r2 println $ r5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = bsh interpreter r0 <NEXT> $ r1 = r3 get name space <NEXT> $ r2 = $ r1 get class manager <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 unset variable r1 <NEXT> r4 = bsh external name space r0 <NEXT> $ r2 = r4 external map <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> label r7 = bsh servlet simple template r0 <NEXT> $ r4 = r7 find template r1 <NEXT> if $ r4 == null goto label2 <NEXT> r8 = bsh servlet simple template r0 <NEXT> $ r5 = r8 buff <NEXT> $ i1 = $ r4 [ 0 ] <NEXT> $ i0 = $ r4 [ 1 ] <NEXT> $ r5 replace $ i1 $ i0 r2 <NEXT> goto label1 <NEXT> if $ r4 == null goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache cassandra concurrent stage manager stag <NEXT> $ r2 = $ r1 get r0 <NEXT> $ r3 = org apache cassandra concurrent local aware executor service $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ z0 = org apache cassandra config column definition $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r10 = org apache cassandra config column definition r0 <NEXT> $ r4 = r10 type <NEXT> $ z2 = $ r4 instanceof org apache cassandra db marshal user type <NEXT> if $ z2 == 0 goto label1 <NEXT> r11 = org apache cassandra config column definition r0 <NEXT> $ r5 = r11 type <NEXT> $ z3 = $ r5 be multi cell <NEXT> if $ z3 == 0 goto label1 <NEXT> r9 = new java lang assertion error <NEXT> specialinvoke r9 < init > <NEXT> throw r9 <NEXT> if $ z3 == 0 goto label1 <NEXT> label r12 = org apache cassandra config column definition r0 <NEXT> $ r7 = r12 type <NEXT> $ z4 = $ r7 instanceof org apache cassandra db marshal collection type <NEXT> if $ z4 == 0 goto label2 <NEXT> r13 = org apache cassandra config column definition r0 <NEXT> $ r1 = r13 type <NEXT> $ z1 = $ r1 be multi cell <NEXT> if $ z1 == 0 goto label2 <NEXT> r14 = org apache cassandra config column definition r0 <NEXT> $ r2 = r14 type <NEXT> $ r3 = org apache cassandra db marshal collection type $ r2 <NEXT> $ r8 = $ r3 value comparator <NEXT> goto label3 <NEXT> label return $ r8 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r15 = org apache cassandra config column definition r0 <NEXT> $ r8 = r15 type <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org apache cassandra config schema $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang assertion error <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org apache cassandra config schema r0 <NEXT> $ r2 = r7 keyspaces <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org apache cassandra schema keyspace metadata $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache cassandra config schema r0 <NEXT> $ r2 = schema $ load__2 bootstrap $ r3 <NEXT> r1 for each $ r2 <NEXT> r4 = org apache cassandra config schema r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache cassandra schema schema keyspace calculate schema digest <NEXT> $ r2 = r1 leave <NEXT> $ r3 = java util uuid $ r2 <NEXT> r7 = org apache cassandra config schema r0 <NEXT> r7 version = $ r3 <NEXT> $ r4 = r1 right <NEXT> $ r5 = java util uuid $ r4 <NEXT> r8 = org apache cassandra config schema r0 <NEXT> r8 alt version = $ r5 <NEXT> r9 = org apache cassandra config schema r0 <NEXT> $ r6 = r9 get version <NEXT> org apache cassandra db system keyspace update schema version $ r6 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = new org apache cassandra cql3 function aggregate fcts $ 23 <NEXT> $ r2 = newarray org apache cassandra db marshal abstract type [ 1 ] <NEXT> $ r2 [ 0 ] = r0 <NEXT> specialinvoke r3 < init > \ `` min\ <NEXT> r4 = org apache cassandra cql3 function aggregate function r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache cassandra cql3 query option r0 <NEXT> $ r1 = r3 get specific option <NEXT> $ r2 = org apache cassandra cql3 query option $ specific option access $ 400 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache cassandra cql3 restriction cluster column restriction r0 <NEXT> $ r3 = r5 restriction <NEXT> r1 = $ r3 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r4 = r1 next <NEXT> r2 = org apache cassandra cql3 restriction single restriction $ r4 <NEXT> $ z1 = r2 be slice <NEXT> if $ z1 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> i1 = 0 <NEXT> r6 = org apache cassandra cql3 restriction cluster column restriction r0 <NEXT> $ r3 = r6 restriction <NEXT> r1 = $ r3 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r4 = r1 next <NEXT> r2 = org apache cassandra cql3 restriction single restriction $ r4 <NEXT> r7 = org apache cassandra cql3 restriction cluster column restriction r0 <NEXT> $ z2 = specialinvoke r7 handle in filter r2 i1 <NEXT> if $ z2 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = r2 be slice <NEXT> if $ z3 ! = 0 goto label3 <NEXT> $ r5 = r2 get last column <NEXT> $ i0 = $ r5 position <NEXT> i1 = $ i0 + 1 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r8 = org apache cassandra cql3 restriction cluster column restriction r0 <NEXT> $ z1 = r8 have contains <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra cql3 restriction statement restriction r0 <NEXT> $ r1 = r2 cluster column restriction <NEXT> $ z0 = $ r1 have i n <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 be start <NEXT> if $ z0 == 0 goto label3 <NEXT> r6 = org apache cassandra cql3 restriction term slice r0 <NEXT> $ r3 = r6 bound inclusive <NEXT> $ i1 = r1 idx <NEXT> $ z2 = $ r3 [ $ i1 ] <NEXT> if $ z2 == 0 goto label1 <NEXT> $ r4 = org apache cassandra cql3 operator gte <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ z2 == 0 goto label1 <NEXT> label $ r4 = org apache cassandra cql3 operator gt <NEXT> if $ z0 == 0 goto label3 <NEXT> label r7 = org apache cassandra cql3 restriction term slice r0 <NEXT> $ r2 = r7 bound inclusive <NEXT> $ i0 = r1 idx <NEXT> $ z1 = $ r2 [ $ i0 ] <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r5 = org apache cassandra cql3 operator lte <NEXT> goto label5 <NEXT> label return $ r5 <NEXT> if $ z1 == 0 goto label4 <NEXT> label $ r5 = org apache cassandra cql3 operator lt <END>
<BEG> r0 = @ this <NEXT> r5 = org apache cassandra cql3 selection selection r0 <NEXT> $ r3 = r5 get columns <NEXT> r1 = $ r3 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r4 = r1 next <NEXT> r2 = org apache cassandra config column definition $ r4 <NEXT> $ z1 = r2 be complex <NEXT> if $ z1 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache cassandra cql3 statement c q l3 ca request r0 <NEXT> $ r4 = r9 static condition <NEXT> if $ r4 == null goto label1 <NEXT> r10 = org apache cassandra cql3 statement c q l3 ca request r0 <NEXT> $ r8 = r10 static condition <NEXT> $ z1 = $ r8 applies to r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label r11 = org apache cassandra cql3 statement c q l3 ca request r0 <NEXT> $ r5 = r11 condition <NEXT> $ r6 = $ r5 value <NEXT> r2 = $ r6 iterator <NEXT> label $ z2 = r2 have next <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r7 = r2 next <NEXT> r3 = org apache cassandra cql3 statement c q l3 ca request $ row condition $ r7 <NEXT> $ z0 = r3 applies to r1 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> label goto label2 <NEXT> if $ z2 == 0 goto label4 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org apache cassandra exception invalid request exception <NEXT> $ r3 = java lang string format r0 r1 <NEXT> specialinvoke $ r2 < init > $ r3 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra db cluster comparator r0 <NEXT> $ r1 = r2 row comparator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = org apache cassandra db column family store r0 <NEXT> $ r4 = r11 data <NEXT> entermonitor $ r4 <NEXT> label r12 = org apache cassandra db column family store r0 <NEXT> $ r5 = r12 data <NEXT> $ r6 = $ r5 get view <NEXT> $ r7 = $ r6 get current memtable <NEXT> if $ r7 ! = r1 goto label3 <NEXT> r13 = org apache cassandra db column family store r0 <NEXT> $ r9 = r13 switch memtable <NEXT> exitmonitor $ r4 <NEXT> label return $ r9 <NEXT> if $ r7 ! = r1 goto label3 <NEXT> label exitmonitor $ r4 <NEXT> label goto label7 <NEXT> label r14 = org apache cassandra db column family store r0 <NEXT> $ r8 = specialinvoke r14 wait for flush <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra db column family store r0 <NEXT> $ r1 = r2 data <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = org apache cassandra config schema instance <NEXT> r1 = $ r3 get c f r0 <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label $ r4 = r1 leave <NEXT> $ r5 = java lang string $ r4 <NEXT> r2 = org apache cassandra db keyspace open $ r5 <NEXT> if r2 ! = null goto label2 <NEXT> label $ r6 = r2 get column family store r0 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 be super <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 be compact table <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r1 = r0 partition column <NEXT> $ r2 = $ r1 without static <NEXT> $ i0 = $ r2 size <NEXT> if $ i0 < = 1 goto label2 <NEXT> $ r3 = r0 cluster column <NEXT> $ i1 = $ r3 size <NEXT> if $ i1 < 1 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache cassandra db column r0 <NEXT> $ i0 = r1 complex idx <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache cassandra db column r0 <NEXT> $ r2 = r5 column <NEXT> r6 = org apache cassandra db column r0 <NEXT> $ i0 = r6 complex idx <NEXT> r7 = org apache cassandra db column r0 <NEXT> $ r1 = r7 column <NEXT> $ i1 = org apache cassandra utils btree b tree size $ r1 <NEXT> $ i2 = $ i1 - 1 <NEXT> $ r3 = org apache cassandra utils btree b tree $ dir asc <NEXT> $ r4 = org apache cassandra utils btree b tree iterator $ r2 $ i0 $ i2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache cassandra db compaction compaction strategy manager r0 <NEXT> $ r2 = r6 write lock <NEXT> $ r2 lock <NEXT> label r7 = org apache cassandra db compaction compaction strategy manager r0 <NEXT> r7 be active = 0 <NEXT> label r8 = org apache cassandra db compaction compaction strategy manager r0 <NEXT> $ r3 = r8 write lock <NEXT> $ r3 unlock <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra db compaction writer compaction aware writer r0 <NEXT> $ r1 = r2 directory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> l1 = @ parameter2 <NEXT> r2 = org apache cassandra db context counter context $ context state allocate 0 0 1 <NEXT> r2 write remote r1 l0 l1 <NEXT> $ r3 = r2 context <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache cassandra utils counter id get local id <NEXT> r4 = org apache cassandra db context counter context r0 <NEXT> $ r3 = r4 get clock and count of r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new org apache cassandra db lifecycle tracker <NEXT> specialinvoke $ r3 < init > null 0 <NEXT> $ r3 add initial s s table r1 <NEXT> $ r4 = org apache cassandra db lifecycle helper empty set <NEXT> $ r5 = org apache cassandra db lifecycle view update compact $ r4 r1 <NEXT> $ r3 apply $ r5 <NEXT> $ r7 = new org apache cassandra db lifecycle lifecycle transaction <NEXT> specialinvoke $ r7 < init > $ r3 r0 r1 <NEXT> return $ r7 <END>
<BEG> org apache cassandra db lifecycle log transaction reschedule fail deletion <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache cassandra db liveness info r0 <NEXT> $ l0 = r2 timestamp <NEXT> org apache cassandra utils f b utility update with long r1 $ l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache cassandra db liveness info r0 <NEXT> $ l1 = r2 timestamp <NEXT> $ l0 = r1 timestamp <NEXT> $ b2 = $ l1 cmp $ l0 <NEXT> if $ b2 == 0 goto label3 <NEXT> r3 = org apache cassandra db liveness info r0 <NEXT> $ l6 = r3 timestamp <NEXT> $ l5 = r1 timestamp <NEXT> $ b7 = $ l6 cmp $ l5 <NEXT> if $ b7 < = 0 goto label1 <NEXT> $ z7 = 1 <NEXT> goto label2 <NEXT> label return $ z7 <NEXT> if $ b7 < = 0 goto label1 <NEXT> label $ z7 = 0 <NEXT> if $ b2 == 0 goto label3 <NEXT> label r4 = org apache cassandra db liveness info r0 <NEXT> $ z0 = r4 be expire <NEXT> $ z1 = r1 be expire <NEXT> $ z2 = $ z0 ^ $ z1 <NEXT> if $ z2 == 0 goto label4 <NEXT> r5 = org apache cassandra db liveness info r0 <NEXT> $ z6 = r5 be expire <NEXT> return $ z6 <NEXT> if $ z2 == 0 goto label4 <NEXT> label r6 = org apache cassandra db liveness info r0 <NEXT> $ z3 = r6 be expire <NEXT> $ z4 = r1 be expire <NEXT> if $ z3 ! = $ z4 goto label7 <NEXT> r7 = org apache cassandra db liveness info r0 <NEXT> $ i3 = r7 local expiration time <NEXT> $ i4 = r1 local expiration time <NEXT> if $ i3 < = $ i4 goto label5 <NEXT> $ z8 = 1 <NEXT> goto label6 <NEXT> label return $ z8 <NEXT> if $ i3 < = $ i4 goto label5 <NEXT> label $ z8 = 0 <NEXT> if $ z3 ! = $ z4 goto label7 <NEXT> label r8 = org apache cassandra db liveness info r0 <NEXT> $ z5 = r8 be expire <NEXT> return $ z5 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ r1 = new org apache cassandra db liveness info <NEXT> specialinvoke $ r1 < init > l0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra db row column data r0 <NEXT> $ r1 = r2 column <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache cassandra db row encode stats r0 <NEXT> $ l4 = r4 min timestamp <NEXT> $ l3 = org apache cassandra db row encode stats timestamp_epoch <NEXT> $ b5 = $ l4 cmp $ l3 <NEXT> if $ b5 ! = 0 goto label1 <NEXT> $ l18 = r1 min timestamp <NEXT> goto label3 <NEXT> label l0 = $ l18 <NEXT> r7 = org apache cassandra db row encode stats r0 <NEXT> $ i19 = r7 min local deletion time <NEXT> $ i20 = org apache cassandra db row encode stats deletion_time_epoch <NEXT> if $ i19 ! = $ i20 goto label4 <NEXT> $ i21 = r1 min local deletion time <NEXT> goto label6 <NEXT> label i1 = $ i21 <NEXT> r10 = org apache cassandra db row encode stats r0 <NEXT> $ i22 = r10 min t t l <NEXT> if $ i22 ! = 0 goto label7 <NEXT> $ i23 = r1 min t t l <NEXT> goto label9 <NEXT> label r3 = new org apache cassandra db row encode stats <NEXT> specialinvoke r3 < init > l0 i1 $ i23 <NEXT> return r3 <NEXT> if $ i22 ! = 0 goto label7 <NEXT> label $ i15 = r1 min t t l <NEXT> if $ i15 ! = 0 goto label8 <NEXT> r11 = org apache cassandra db row encode stats r0 <NEXT> $ i23 = r11 min t t l <NEXT> if $ i15 ! = 0 goto label8 <NEXT> label r12 = org apache cassandra db row encode stats r0 <NEXT> $ i17 = r12 min t t l <NEXT> $ i16 = r1 min t t l <NEXT> $ i23 = java lang math min $ i17 $ i16 <NEXT> if $ i19 ! = $ i20 goto label4 <NEXT> label $ i12 = r1 min local deletion time <NEXT> $ i11 = org apache cassandra db row encode stats deletion_time_epoch <NEXT> if $ i12 ! = $ i11 goto label5 <NEXT> r8 = org apache cassandra db row encode stats r0 <NEXT> $ i21 = r8 min local deletion time <NEXT> if $ i12 ! = $ i11 goto label5 <NEXT> label r9 = org apache cassandra db row encode stats r0 <NEXT> $ i14 = r9 min local deletion time <NEXT> $ i13 = r1 min local deletion time <NEXT> $ i21 = java lang math min $ i14 $ i13 <NEXT> if $ b5 ! = 0 goto label1 <NEXT> label $ l7 = r1 min timestamp <NEXT> $ l6 = org apache cassandra db row encode stats timestamp_epoch <NEXT> $ b8 = $ l7 cmp $ l6 <NEXT> if $ b8 ! = 0 goto label2 <NEXT> r5 = org apache cassandra db row encode stats r0 <NEXT> $ l18 = r5 min timestamp <NEXT> if $ b8 ! = 0 goto label2 <NEXT> label r6 = org apache cassandra db row encode stats r0 <NEXT> $ l10 = r6 min timestamp <NEXT> $ l9 = r1 min timestamp <NEXT> $ l18 = java lang math min $ l10 $ l9 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra db row range tombstone boundary marker r0 <NEXT> $ r1 = r2 start deletion <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = org apache cassandra db single partition read command $ assertion disable <NEXT> if $ z0 ! = 0 goto label2 <NEXT> if r2 == null goto label1 <NEXT> $ z1 = r2 valid for read on r1 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r6 = new java lang assertion error <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label $ r3 = r1 name <NEXT> org apache cassandra trace trace trace \ `` execute single-partition query on { } \ <NEXT> r7 = org apache cassandra db single partition read command r0 <NEXT> $ r4 = specialinvoke r7 query memtable and disk internal r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ z0 = org apache cassandra db slice $ assertion disable <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ z1 = r1 be start <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = r2 be end <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label r4 = new java lang assertion error <NEXT> specialinvoke r4 < init > <NEXT> throw r4 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label r5 = org apache cassandra db cluster prefix r2 <NEXT> r6 = org apache cassandra db cluster prefix r1 <NEXT> $ i0 = r0 compare r5 r6 <NEXT> if $ i0 > 0 goto label3 <NEXT> $ z3 = 1 <NEXT> goto label4 <NEXT> label return $ z3 <NEXT> if $ i0 > 0 goto label3 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = new java util array list <NEXT> r12 = org apache cassandra db view table view r0 <NEXT> $ r7 = r12 view <NEXT> $ i0 = $ r7 size <NEXT> specialinvoke r11 < init > $ i0 <NEXT> r13 = org apache cassandra db view table view r0 <NEXT> $ r8 = r13 view <NEXT> r3 = $ r8 iterator <NEXT> label $ z2 = r3 have next <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r9 = r3 next <NEXT> r4 = org apache cassandra db view view $ r9 <NEXT> r5 = r4 get read query <NEXT> $ r10 = r1 partition key <NEXT> $ z0 = r5 select key $ r10 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> goto label1 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r11 add r4 <NEXT> if $ z2 == 0 goto label3 <NEXT> label return r11 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra db view view r0 <NEXT> $ r1 = r2 base non p k column in view p k <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = new org apache cassandra dht bound <NEXT> $ r3 = r0 min key bound <NEXT> $ r4 = r1 max key bound <NEXT> r6 = org apache cassandra dht ring position $ r3 <NEXT> r7 = org apache cassandra dht ring position $ r4 <NEXT> specialinvoke r5 < init > r6 r7 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r0 set int \ `` cassandra input split size\ <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get string collection \ `` mapreduce output bulkoutputformat ignorehosts\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org apache cassandra hadoop hadoop compat progress_method <NEXT> $ r1 = newarray java lang object [ 0 ] <NEXT> org apache cassandra hadoop hadoop compat invoke $ r2 r0 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org apache cassandra hint hint service r0 <NEXT> $ z0 = r8 be shut down <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = new java lang illegal state exception <NEXT> specialinvoke r7 < init > \ `` hint service be shut down and can\'t accept new hints\ `` <NEXT> throw r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r9 = org apache cassandra hint hint service r0 <NEXT> $ r3 = r9 catalog <NEXT> $ r3 maybe load store r1 <NEXT> r10 = org apache cassandra hint hint service r0 <NEXT> $ r4 = r10 buffer pool <NEXT> $ r4 write r1 r2 <NEXT> $ r5 = org apache cassandra metric storage metric total hint <NEXT> $ i0 = com google common collect iterables size r1 <NEXT> $ l1 = long $ i0 <NEXT> $ r5 inc $ l1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra io sstable format s s table reader r0 <NEXT> $ r1 = r2 bf <NEXT> $ l0 = $ r1 off heap size <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = org apache cassandra io sstable format s s table reader r0 <NEXT> $ r5 = r6 get scanner r2 <NEXT> return $ r5 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r3 = java util collection singleton list r1 <NEXT> r7 = org apache cassandra io sstable format s s table reader r0 <NEXT> $ r4 = r7 get scanner $ r3 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = org apache cassandra utils f b utility get broadcast address <NEXT> $ z0 = r1 equal $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> r22 = org apache cassandra locator gossip property file snitch r0 <NEXT> $ r21 = r22 my d c <NEXT> return $ r21 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r4 = org apache cassandra gm gossiper instance <NEXT> r2 = $ r4 get endpoint state for endpoint r1 <NEXT> if r2 == null goto label2 <NEXT> $ r16 = org apache cassandra gm application state dc <NEXT> $ r17 = r2 get application state $ r16 <NEXT> if $ r17 ! = null goto label6 <NEXT> label r23 = org apache cassandra locator gossip property file snitch r0 <NEXT> $ r5 = r23 psnitch <NEXT> if $ r5 ! = null goto label5 <NEXT> r24 = org apache cassandra locator gossip property file snitch r0 <NEXT> $ r8 = r24 save endpoint <NEXT> if $ r8 ! = null goto label3 <NEXT> $ r15 = org apache cassandra db system keyspace load dc rack info <NEXT> r25 = org apache cassandra locator gossip property file snitch r0 <NEXT> r25 save endpoint = $ r15 <NEXT> label r26 = org apache cassandra locator gossip property file snitch r0 <NEXT> $ r9 = r26 save endpoint <NEXT> $ z1 = $ r9 contain key r1 <NEXT> if $ z1 == 0 goto label4 <NEXT> r27 = org apache cassandra locator gossip property file snitch r0 <NEXT> $ r10 = r27 save endpoint <NEXT> $ r11 = $ r10 get r1 <NEXT> $ r12 = java util map $ r11 <NEXT> $ r13 = $ r12 get \ `` data_center\ `` <NEXT> $ r14 = java lang string $ r13 <NEXT> return $ r14 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return \ `` unknown_dc\ `` <NEXT> if $ r5 ! = null goto label5 <NEXT> label r28 = org apache cassandra locator gossip property file snitch r0 <NEXT> $ r6 = r28 psnitch <NEXT> $ r7 = $ r6 get datacenter r1 <NEXT> return $ r7 <NEXT> if $ r17 ! = null goto label6 <NEXT> label $ r18 = org apache cassandra gm application state dc <NEXT> $ r19 = r2 get application state $ r18 <NEXT> $ r20 = $ r19 value <NEXT> return $ r20 <END>
<BEG> r0 = @ this <NEXT> r11 = org apache cassandra locator token metadata r0 <NEXT> $ r2 = r11 lock <NEXT> $ r3 = $ r2 write lock <NEXT> $ r3 lock <NEXT> label $ r4 = org apache cassandra locator token metadata logger <NEXT> $ r4 info \ `` updating topology for all endpoint that have changed\ `` <NEXT> r12 = org apache cassandra locator token metadata r0 <NEXT> $ r5 = r12 topology <NEXT> $ r5 update endpoint <NEXT> r13 = org apache cassandra locator token metadata r0 <NEXT> r13 invalidate cache ring <NEXT> label r14 = org apache cassandra locator token metadata r0 <NEXT> $ r6 = r14 lock <NEXT> $ r7 = $ r6 write lock <NEXT> $ r7 unlock <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r17 = org apache cassandra locator token metadata r0 <NEXT> $ r2 = r17 lock <NEXT> $ r3 = $ r2 write lock <NEXT> $ r3 lock <NEXT> label r18 = org apache cassandra locator token metadata r0 <NEXT> $ r4 = r18 token to endpoint map <NEXT> $ r4 clear <NEXT> r19 = org apache cassandra locator token metadata r0 <NEXT> $ r5 = r19 endpoint to host id map <NEXT> $ r5 clear <NEXT> r20 = org apache cassandra locator token metadata r0 <NEXT> $ r6 = r20 bootstrap tokens <NEXT> $ r6 clear <NEXT> r21 = org apache cassandra locator token metadata r0 <NEXT> $ r7 = r21 leave endpoint <NEXT> $ r7 clear <NEXT> r22 = org apache cassandra locator token metadata r0 <NEXT> $ r8 = r22 pending range <NEXT> $ r8 clear <NEXT> r23 = org apache cassandra locator token metadata r0 <NEXT> $ r9 = r23 move endpoint <NEXT> $ r9 clear <NEXT> r24 = org apache cassandra locator token metadata r0 <NEXT> $ r10 = r24 sort token <NEXT> $ r10 clear <NEXT> r25 = org apache cassandra locator token metadata r0 <NEXT> $ r11 = r25 topology <NEXT> $ r11 clear <NEXT> r26 = org apache cassandra locator token metadata r0 <NEXT> r26 invalidate cache ring <NEXT> label r27 = org apache cassandra locator token metadata r0 <NEXT> $ r12 = r27 lock <NEXT> $ r13 = $ r12 write lock <NEXT> $ r13 unlock <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra metric restorable meter r0 <NEXT> $ r1 = r2 count <NEXT> $ l0 = $ r1 get <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache cassandra net messaging service r0 <NEXT> $ r2 = r5 verb handler <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org apache cassandra net i verb handler $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache cassandra schema view r0 <NEXT> $ r2 = r5 view <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java util optional of nullable $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = org apache cassandra schema view r0 <NEXT> $ r3 = r11 get r1 <NEXT> $ r4 = view $ lambda_without_1__2 bootstrap $ r1 <NEXT> $ r5 = $ r3 or else throw $ r4 <NEXT> r2 = org apache cassandra config view definition $ r5 <NEXT> $ r6 = org apache cassandra schema view builder <NEXT> $ r7 = view $ lambda_without_2__3 bootstrap $ r2 <NEXT> $ r8 = com google common collect iterables filter r0 $ r7 <NEXT> $ r9 = $ r6 add $ r8 <NEXT> $ r10 = $ r9 build <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org apache cassandra security s s l factory create s s l context r0 1 <NEXT> $ r4 = r1 get socket factory <NEXT> $ r5 = $ r4 create socket <NEXT> r2 = javax net ssl s s l socket $ r5 <NEXT> label org apache cassandra security s s l factory prepare socket r2 r0 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache cassandra stream stream plan r0 <NEXT> $ r3 = r4 coordinator <NEXT> $ r3 transfer file r1 r2 <NEXT> r5 = org apache cassandra stream stream plan r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r21 = org apache cassandra stream stream receive task r0 <NEXT> $ z0 = r21 do <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r12 = org apache cassandra stream stream receive task logger <NEXT> r22 = org apache cassandra stream stream receive task r0 <NEXT> $ r11 = r22 session <NEXT> $ r13 = $ r11 plan id <NEXT> $ r14 = r1 get filename <NEXT> $ r12 warn \ `` [ { } ] receive sstable { } on already finish stream receive task abort sstable \ <NEXT> $ r15 = r1 abort null <NEXT> org apache cassandra utils throwables maybe fail $ r15 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r23 = org apache cassandra stream stream receive task r0 <NEXT> $ i0 = r23 remote s s table receive <NEXT> $ i1 = $ i0 + 1 <NEXT> r24 = org apache cassandra stream stream receive task r0 <NEXT> r24 remote s s table receive = $ i1 <NEXT> $ z1 = org apache cassandra stream stream receive task $ assertion disable <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r25 = org apache cassandra stream stream receive task r0 <NEXT> $ r8 = r25 cf id <NEXT> $ r9 = r1 get cf id <NEXT> $ z3 = $ r8 equal $ r9 <NEXT> if $ z3 ! = 0 goto label2 <NEXT> r19 = new java lang assertion error <NEXT> specialinvoke r19 < init > <NEXT> throw r19 <NEXT> if $ z3 ! = 0 goto label2 <NEXT> label r18 = null <NEXT> label r18 = r1 finish 1 <NEXT> label goto label6 <NEXT> label r26 = org apache cassandra stream stream receive task r0 <NEXT> $ r3 = r26 txn <NEXT> $ r3 update r18 0 <NEXT> r27 = org apache cassandra stream stream receive task r0 <NEXT> $ r4 = r27 sstables <NEXT> $ r4 add all r18 <NEXT> r28 = org apache cassandra stream stream receive task r0 <NEXT> $ i3 = r28 remote s s table receive <NEXT> r29 = org apache cassandra stream stream receive task r0 <NEXT> $ i2 = r29 total file <NEXT> if $ i3 ! = $ i2 goto label7 <NEXT> r30 = org apache cassandra stream stream receive task r0 <NEXT> r30 do = 1 <NEXT> $ r6 = org apache cassandra stream stream receive task executor <NEXT> r20 = new org apache cassandra stream stream receive task $ on completion runnable <NEXT> r31 = org apache cassandra stream stream receive task r0 <NEXT> specialinvoke r20 < init > r31 <NEXT> r32 = java lang runnable r20 <NEXT> $ r6 submit r32 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> l1 = @ parameter3 <NEXT> l2 = @ parameter4 <NEXT> r10 = org apache cassandra stream stream writer r0 <NEXT> $ r3 = r10 transfer buffer <NEXT> $ i5 = lengthof $ r3 <NEXT> $ l7 = long $ i5 <NEXT> $ l6 = l1 - l2 <NEXT> $ l8 = java lang math min $ l7 $ l6 <NEXT> i3 = int $ l8 <NEXT> r11 = org apache cassandra stream stream writer r0 <NEXT> $ r4 = r11 transfer buffer <NEXT> $ i9 = lengthof $ r4 <NEXT> $ l10 = long $ i9 <NEXT> $ l11 = r1 length <NEXT> $ l12 = r1 get file pointer <NEXT> $ l13 = $ l11 - $ l12 <NEXT> $ l14 = java lang math min $ l10 $ l13 <NEXT> i4 = int $ l14 <NEXT> r12 = org apache cassandra stream stream writer r0 <NEXT> $ r5 = r12 transfer buffer <NEXT> r1 read fully $ r5 0 i4 <NEXT> if r2 == null goto label1 <NEXT> r13 = org apache cassandra stream stream writer r0 <NEXT> $ r9 = r13 transfer buffer <NEXT> r2 validate $ r9 0 i4 <NEXT> label r14 = org apache cassandra stream stream writer r0 <NEXT> $ r6 = r14 limiter <NEXT> $ i15 = i3 - i0 <NEXT> $ r6 acquire $ i15 <NEXT> r15 = org apache cassandra stream stream writer r0 <NEXT> $ r8 = r15 compress output <NEXT> r16 = org apache cassandra stream stream writer r0 <NEXT> $ r7 = r16 transfer buffer <NEXT> $ i16 = i3 - i0 <NEXT> $ r8 write $ r7 i0 $ i16 <NEXT> $ l17 = long i3 <NEXT> return $ l17 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache cassandra thrift t custom socket r0 <NEXT> $ r1 = r3 socket <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache cassandra thrift t custom socket r0 <NEXT> $ r2 = r4 socket <NEXT> $ z0 = $ r2 be connect <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r12 = org apache cassandra trace trace state r0 <NEXT> $ r3 = r12 status <NEXT> $ r2 = org apache cassandra trace trace state $ status idle <NEXT> if $ r3 ! = $ r2 goto label4 <NEXT> label r0 wait l0 <NEXT> label goto label4 <NEXT> label r13 = org apache cassandra trace trace state r0 <NEXT> $ r5 = r13 status <NEXT> $ r4 = org apache cassandra trace trace state $ status active <NEXT> if $ r5 ! = $ r4 goto label5 <NEXT> $ r7 = org apache cassandra trace trace state $ status idle <NEXT> r14 = org apache cassandra trace trace state r0 <NEXT> r14 status = $ r7 <NEXT> $ r8 = org apache cassandra trace trace state $ status active <NEXT> return $ r8 <NEXT> if $ r5 ! = $ r4 goto label5 <NEXT> label r15 = org apache cassandra trace trace state r0 <NEXT> $ r6 = r15 status <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z4 = 0 <NEXT> r13 = null <NEXT> r14 = r1 iterator <NEXT> label $ z0 = r14 have next <NEXT> if $ z0 == 0 goto label7 <NEXT> $ r9 = r14 next <NEXT> r2 = org apache cassandra db i mutation $ r9 <NEXT> $ z1 = r2 instanceof org apache cassandra db counter mutation <NEXT> if $ z1 == 0 goto label2 <NEXT> z4 = 1 <NEXT> label $ r10 = r2 get partition update <NEXT> r3 = $ r10 iterator <NEXT> label $ z5 = r3 have next <NEXT> if $ z5 == 0 goto label6 <NEXT> $ r11 = r3 next <NEXT> r4 = org apache cassandra db partition partition update $ r11 <NEXT> r18 = org apache cassandra trigger trigger executor r0 <NEXT> r5 = specialinvoke r18 execute internal r4 <NEXT> if r5 == null goto label3 <NEXT> $ z2 = r5 be empty <NEXT> if $ z2 == 0 goto label4 <NEXT> goto label3 <NEXT> if $ z2 == 0 goto label4 <NEXT> label r19 = org apache cassandra trigger trigger executor r0 <NEXT> specialinvoke r19 validate r5 <NEXT> if r13 ! = null goto label5 <NEXT> r16 = new java util link list <NEXT> specialinvoke r16 < init > <NEXT> r13 = r16 <NEXT> label r13 add all r5 <NEXT> if $ z5 == 0 goto label6 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label7 <NEXT> label if r13 ! = null goto label8 <NEXT> return null <NEXT> label if r13 ! = null goto label8 <NEXT> label if z4 == 0 goto label9 <NEXT> r17 = new org apache cassandra exception invalid request exception <NEXT> specialinvoke r17 < init > \ `` counter mutation and trigger mutation can not be apply together atomically \ `` <NEXT> r20 = java lang throwable r17 <NEXT> throw r20 <NEXT> label if z4 == 0 goto label9 <NEXT> label $ r6 = com google common collect iterables concat r1 r13 <NEXT> r21 = org apache cassandra trigger trigger executor r0 <NEXT> $ r7 = specialinvoke r21 merge mutation $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> $ i1 = org apache cassandra utils btree b tree size r0 <NEXT> $ i2 = org apache cassandra utils btree b tree to array r0 0 $ i1 r1 i0 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r5 = org apache cassandra utils concurrent interval lock r0 <NEXT> $ r1 = r5 time source <NEXT> l1 = $ r1 current time millis <NEXT> r6 = org apache cassandra utils concurrent interval lock r0 <NEXT> $ r2 = r6 last acquire <NEXT> $ l2 = $ r2 get <NEXT> $ l3 = l1 - $ l2 <NEXT> $ b4 = $ l3 cmp l0 <NEXT> if $ b4 < 0 goto label1 <NEXT> r7 = org apache cassandra utils concurrent interval lock r0 <NEXT> $ r4 = r7 write lock <NEXT> $ z1 = $ r4 try lock <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label z0 = $ z2 <NEXT> if $ z2 == 0 goto label3 <NEXT> r8 = org apache cassandra utils concurrent interval lock r0 <NEXT> $ r3 = r8 last acquire <NEXT> $ r3 set l1 <NEXT> label return z0 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache cassandra utils concurrent ref r0 <NEXT> $ r1 = r2 state <NEXT> $ r1 release 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache cassandra utils concurrent wait queue r0 <NEXT> $ z0 = r5 have waiter <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r6 = org apache cassandra utils concurrent wait queue r0 <NEXT> $ r3 = r6 queue <NEXT> r1 = $ r3 iterator <NEXT> i0 = 0 <NEXT> label $ z1 = r1 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r4 = r1 next <NEXT> r2 = org apache cassandra utils concurrent wait queue $ signal $ r4 <NEXT> $ z2 = r2 be cancel <NEXT> if $ z2 ! = 0 goto label3 <NEXT> i0 = i0 + 1 <NEXT> label goto label2 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> label $ z0 = r0 get a boolean <NEXT> if $ z0 ! = 0 goto label4 <NEXT> r2 = r1 register <NEXT> $ z1 = r0 get a boolean <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r2 await uninterruptibly <NEXT> goto label3 <NEXT> label goto label1 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r2 cancel <NEXT> if $ z0 ! = 0 goto label4 <NEXT> label return <END>
<BEG> $ r1 = org apache cassandra utils f b utility local inet address <NEXT> if $ r1 ! = null goto label6 <NEXT> label $ r3 = org apache cassandra config database descriptor get listen address <NEXT> if $ r3 ! = null goto label2 <NEXT> $ r6 = java net inet address get local host <NEXT> goto label3 <NEXT> label org apache cassandra utils f b utility local inet address = $ r6 <NEXT> label goto label6 <NEXT> label $ r2 = org apache cassandra utils f b utility local inet address <NEXT> return $ r2 <NEXT> if $ r3 ! = null goto label2 <NEXT> label $ r6 = org apache cassandra config database descriptor get listen address <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> i1 = @ parameter3 <NEXT> i2 = r1 position <NEXT> i3 = r1 limit <NEXT> $ r2 = r1 position i0 <NEXT> $ i4 = i0 + i1 <NEXT> $ r2 limit $ i4 <NEXT> r0 update r1 <NEXT> $ r4 = r1 position i2 <NEXT> $ r4 limit i3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r5 = new java util array list <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = r0 merkle tree <NEXT> $ r7 = $ r6 value <NEXT> r3 = $ r7 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r8 = r3 next <NEXT> r4 = org apache cassandra utils merkle tree $ r8 <NEXT> $ r9 = r4 full range <NEXT> $ r10 = r1 get merkle tree $ r9 <NEXT> $ r11 = org apache cassandra utils merkle tree difference r4 $ r10 <NEXT> $ r5 add all $ r11 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> $ l1 = org apache cassandra utils object sizes size of array $ i0 1l <NEXT> return $ l1 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 - 1 <NEXT> $ i2 = i0 & $ i1 <NEXT> if $ i2 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i2 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> $ r1 = org apache cassandra utils test rate limiter ref <NEXT> $ r2 = $ r1 get <NEXT> r7 = com google common util concurrent rate limiter $ r2 <NEXT> if r7 == null goto label1 <NEXT> $ d2 = r7 get rate <NEXT> $ b0 = $ d2 cmpl d0 <NEXT> if $ b0 == 0 goto label2 <NEXT> label $ r3 = org apache cassandra utils test rate limiter ref <NEXT> $ r4 = com google common util concurrent rate limiter create d0 <NEXT> $ r3 compare and set r7 $ r4 <NEXT> $ r5 = org apache cassandra utils test rate limiter ref <NEXT> $ r6 = $ r5 get <NEXT> r7 = com google common util concurrent rate limiter $ r6 <NEXT> label r7 acquire 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core aggregate metadata r0 <NEXT> $ r1 = specialinvoke r2 a c q l query 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core cluster r0 <NEXT> $ r1 = r2 connect async null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = com datastax driver core cluster r0 <NEXT> $ r1 = r3 manager <NEXT> $ r2 = $ r1 cluster name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com datastax driver core cluster r0 <NEXT> $ r2 = r5 manager <NEXT> com datastax driver core cluster check not close $ r2 <NEXT> r6 = com datastax driver core cluster r0 <NEXT> $ r3 = r6 manager <NEXT> $ r4 = $ r3 listener <NEXT> z0 = $ r4 remove r1 <NEXT> if z0 == 0 goto label1 <NEXT> r7 = com datastax driver core cluster r0 <NEXT> r1 on unregister r7 <NEXT> label r8 = com datastax driver core cluster r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = com datastax driver core duration r0 <NEXT> $ l0 = r1 nanosecond <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core exception already exist exception r0 <NEXT> $ r1 = r2 keyspace <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core exception unavailable exception r0 <NEXT> $ r1 = r2 consistency <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com datastax driver core execution info r0 <NEXT> $ i0 = r1 successful execution index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core execution info r0 <NEXT> $ r1 = r2 trace <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core function metadata r0 <NEXT> $ r1 = r2 return type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = com datastax driver core host r0 <NEXT> $ r1 = r3 address <NEXT> $ r2 = $ r1 get address <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core host r0 <NEXT> $ r1 = r2 schema version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = com datastax driver core keyspace metadata r0 <NEXT> $ r1 = r4 user type <NEXT> $ r2 = $ r1 value <NEXT> $ r3 = java util collection unmodifiable collection $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return 0 <NEXT> if r0 ! = null goto label1 <NEXT> label i0 = com datastax driver core metadata case insensitive hash r0 <NEXT> $ r4 = com datastax driver core metadata reserved_keywords <NEXT> $ r5 = $ r4 get i0 <NEXT> r1 = java util list $ r5 <NEXT> if r1 ! = null goto label2 <NEXT> label r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r6 = r2 next <NEXT> r3 = char [ ] $ r6 <NEXT> $ z1 = com datastax driver core metadata equal ignore case ascii r0 r3 <NEXT> if $ z1 == 0 goto label4 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label4 <NEXT> label goto label3 <NEXT> if $ z0 == 0 goto label5 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r3 = new java util hash set <NEXT> r4 = com datastax driver core metadata r0 <NEXT> $ r2 = r4 all host <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> label r6 = com datastax driver core metadata r0 <NEXT> $ r2 = r6 cluster <NEXT> $ r3 = $ r2 control connection <NEXT> $ z0 = $ r3 check schema agreement <NEXT> label return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core metric r0 <NEXT> $ r1 = r2 trash connection <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com datastax driver core parse utils quote r0 39 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com datastax driver core parse utils unquote r0 39 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new com datastax driver core policy latency aware policy $ builder <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> $ r0 = com datastax driver core policy policy default_address_translator <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core policy policy r0 <NEXT> $ r1 = r2 retry policy <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com datastax driver core protocol option r0 <NEXT> $ i0 = r1 max schema agreement wait second <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com datastax driver core querybuilder batch r0 <NEXT> $ r2 = r4 using <NEXT> $ r3 = $ r2 and r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new com datastax driver core querybuilder order <NEXT> specialinvoke $ r1 < init > r0 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new com datastax driver core querybuilder use $ with marker <NEXT> specialinvoke r2 < init > \ `` timestamp\ <NEXT> r3 = com datastax driver core querybuilder use r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com datastax driver core querybuilder query builder incr r0 1l <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new com datastax driver core querybuilder assignment $ collection assignment <NEXT> specialinvoke r3 < init > r0 r1 0 <NEXT> r4 = com datastax driver core querybuilder assignment r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r1 instanceof com datastax driver core querybuilder bind marker <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = new com datastax driver core exception invalid query exception <NEXT> specialinvoke r5 < init > \ `` bind a value in remove be not support use remove all and bind a singleton set\ `` <NEXT> r6 = java lang throwable r5 <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = java util collection singleton r1 <NEXT> $ r3 = com datastax driver core querybuilder query builder remove all r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new com datastax driver core querybuilder utils $ f call <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new com datastax driver core querybuilder utils $ alias <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com datastax driver core query option r0 <NEXT> r1 default idempotence = z0 <NEXT> r2 = com datastax driver core query option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = com datastax driver core query option r0 <NEXT> $ i0 = r1 refresh node list interval millis <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com datastax driver core query option r0 <NEXT> r1 max pending refresh node list request = i0 <NEXT> r2 = com datastax driver core query option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com datastax driver core query option r0 <NEXT> r1 refresh node interval millis = i0 <NEXT> r2 = com datastax driver core query option r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> com datastax driver core schemabuilder abstract create statement validate not empty r1 \ `` column name\ `` <NEXT> com datastax driver core schemabuilder abstract create statement validate not null r2 \ `` column type\ `` <NEXT> $ r3 = newarray java lang object [ 1 ] <NEXT> $ r3 [ 0 ] = r1 <NEXT> $ r4 = java lang string format \ `` the column name \ ' % s\ ' be not allow because it be a reserved keyword\ <NEXT> com datastax driver core schemabuilder abstract create statement validate not key word r1 $ r4 <NEXT> r8 = com datastax driver core schemabuilder abstract create statement r0 <NEXT> $ r5 = r8 simple columns <NEXT> $ r5 put r1 r2 <NEXT> r9 = com datastax driver core schemabuilder abstract create statement r0 <NEXT> $ r7 = r9 self <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> com datastax driver core schemabuilder create validate not empty r1 \ `` cluster column name\ `` <NEXT> com datastax driver core schemabuilder create validate not null r2 \ `` udt cluster column type\ `` <NEXT> $ r3 = newarray java lang object [ 1 ] <NEXT> $ r3 [ 0 ] = r1 <NEXT> $ r4 = java lang string format \ `` the clustering column name \ ' % s\ ' be not allow because it be a reserved keyword\ <NEXT> com datastax driver core schemabuilder create validate not key word r1 $ r4 <NEXT> r7 = com datastax driver core schemabuilder create r0 <NEXT> $ r5 = r7 cluster column <NEXT> $ r5 put r1 r2 <NEXT> r8 = com datastax driver core schemabuilder create r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = com datastax driver core schemabuilder create index r0 <NEXT> r1 if not exist = 1 <NEXT> r2 = com datastax driver core schemabuilder create index r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core schemabuilder create type r0 <NEXT> $ r1 = r2 build internal <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new com datastax driver core schemabuilder create index <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com datastax driver core schemabuilder u d t type frozen r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com datastax driver core schemabuilder u d t type literal r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com google common base optional from nullable r1 <NEXT> r6 = com datastax driver core schemabuilder table option r0 <NEXT> r6 cassandra21 key cache = $ r3 <NEXT> $ r4 = com google common base optional from nullable r2 <NEXT> r7 = com datastax driver core schemabuilder table option r0 <NEXT> r7 cassandra21 row cache = $ r4 <NEXT> r8 = com datastax driver core schemabuilder table option r0 <NEXT> $ r5 = r8 self <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> com datastax driver core schemabuilder table option validate rate value r1 \ `` bloom filter false positive change\ `` <NEXT> $ r2 = com google common base optional from nullable r1 <NEXT> r4 = com datastax driver core schemabuilder table option r0 <NEXT> r4 bloom filter f p chance = $ r2 <NEXT> r5 = com datastax driver core schemabuilder table option r0 <NEXT> $ r3 = r5 self <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com google common base optional from nullable r1 <NEXT> r4 = com datastax driver core schemabuilder table option r0 <NEXT> r4 gc grace second = $ r2 <NEXT> r5 = com datastax driver core schemabuilder table option r0 <NEXT> $ r3 = r5 self <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = com google common base string be null or empty r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = new java lang illegal argument exception <NEXT> specialinvoke r7 < init > \ `` key for custom option should not be null or blank\ `` <NEXT> throw r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = com datastax driver core schemabuilder table option r0 <NEXT> $ r3 = r8 custom option <NEXT> $ r4 = com datastax driver core schemabuilder table option build custom option r1 r2 <NEXT> $ r3 add $ r4 <NEXT> r9 = com datastax driver core schemabuilder table option r0 <NEXT> $ r5 = r9 self <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r9 = com datastax driver core simple statement r0 <NEXT> $ r1 = r9 value <NEXT> if $ r1 ! = null goto label1 <NEXT> r7 = new java lang illegal state exception <NEXT> specialinvoke r7 < init > \ `` this statement do not have positional values\ `` <NEXT> throw r7 <NEXT> if $ r1 ! = null goto label1 <NEXT> label if i0 < 0 goto label2 <NEXT> r10 = com datastax driver core simple statement r0 <NEXT> $ r3 = r10 value <NEXT> $ i1 = lengthof $ r3 <NEXT> if i0 < $ i1 goto label3 <NEXT> label r8 = new java lang array index out of bound exception <NEXT> specialinvoke r8 < init > i0 <NEXT> throw r8 <NEXT> if i0 < $ i1 goto label3 <NEXT> label r11 = com datastax driver core simple statement r0 <NEXT> $ r4 = r11 value <NEXT> $ r5 = $ r4 [ i0 ] <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core socket option r0 <NEXT> $ r1 = r2 reuse address <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com datastax driver core statement r0 <NEXT> r2 retry policy = r1 <NEXT> r3 = com datastax driver core statement r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core token range r0 <NEXT> $ r1 = r2 start <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new com datastax driver core type codec $ custom codec <NEXT> r3 = com datastax driver core data type r0 <NEXT> specialinvoke r2 < init > r3 null <NEXT> r4 = com datastax driver core type codec r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core user type r0 <NEXT> $ r1 = r2 keyspace <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com datastax driver core version number r0 <NEXT> $ i0 = r1 minor <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com datastax driver core version number r0 <NEXT> $ r1 = r2 build <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io github classgraph annotation enum value r0 <NEXT> $ r1 = r2 load class and return enum value 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = io github classgraph array class info r0 <NEXT> $ r1 = r3 array type signature <NEXT> $ r2 = $ r1 get type signature str <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io github classgraph array type signature r0 <NEXT> $ r2 = r3 element type signature <NEXT> $ r2 find referenced class name r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = io github classgraph class graph r0 <NEXT> $ r1 = r2 scan spec <NEXT> $ r1 scan nest jar = 0 <NEXT> r3 = io github classgraph class graph r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = io github classgraph class graph r0 <NEXT> r3 enable class info <NEXT> r4 = io github classgraph class graph r0 <NEXT> $ r2 = r4 scan spec <NEXT> $ r2 enable external class = 1 <NEXT> r5 = io github classgraph class graph r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = io github classgraph class graph r0 <NEXT> $ r1 = r2 scan spec <NEXT> $ r1 ignore parent module layer = 1 <NEXT> r3 = io github classgraph class graph r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r3 = r1 [ i1 ] <NEXT> r4 = nonapi io github classgraph utils jar utils leaf name r3 <NEXT> $ z0 = r4 equal r3 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r13 = new java lang illegal argument exception <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r9 = r12 append \ `` can only blacklist jar by leafname \ `` <NEXT> $ r10 = $ r9 append r3 <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r13 < init > $ r11 <NEXT> throw r13 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r14 = io github classgraph class graph r0 <NEXT> $ r5 = r14 scan spec <NEXT> $ r6 = $ r5 jar white black list <NEXT> $ r6 add to blacklist r4 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label r15 = io github classgraph class graph r0 <NEXT> return r15 <END>
<BEG> r0 = @ this <NEXT> r1 = io github classgraph class info r0 <NEXT> $ i0 = r1 modifier <NEXT> $ i1 = $ i0 & 8192 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r4 = io github classgraph class info r0 <NEXT> $ r2 = r4 related class <NEXT> $ r1 = io github classgraph class info $ rel type classes_implementing <NEXT> $ r3 = $ r2 get $ r1 <NEXT> if $ r3 ! = null goto label1 <NEXT> r5 = io github classgraph class info r0 <NEXT> $ z0 = r5 be interface <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = new io github classgraph class info list <NEXT> $ r3 = io github classgraph class info $ rel type contains_inner_class <NEXT> $ r2 = newarray io github classgraph class info $ class type [ 0 ] <NEXT> r6 = io github classgraph class info r0 <NEXT> $ r4 = specialinvoke r6 filter class info $ r3 0 $ r2 <NEXT> specialinvoke r5 < init > $ r4 1 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = io github classgraph class info r0 <NEXT> $ r1 = specialinvoke r2 get declare method info null 0 1 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = io github classgraph class info r0 <NEXT> $ r4 = r12 scan result <NEXT> $ r5 = $ r4 scan spec <NEXT> $ z0 = $ r5 enable field info <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r11 = new java lang illegal argument exception <NEXT> specialinvoke r11 < init > \ `` please call class graph #enable field info before #scan \ `` <NEXT> throw r11 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r13 = io github classgraph class info r0 <NEXT> $ r6 = r13 field info <NEXT> if $ r6 ! = null goto label2 <NEXT> return null <NEXT> if $ r6 ! = null goto label2 <NEXT> label r14 = io github classgraph class info r0 <NEXT> $ r7 = r14 field info <NEXT> r2 = $ r7 iterator <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r8 = r2 next <NEXT> r3 = io github classgraph field info $ r8 <NEXT> $ r9 = r3 get name <NEXT> $ z2 = $ r9 equal r1 <NEXT> if $ z2 == 0 goto label4 <NEXT> return r3 <NEXT> if $ z2 == 0 goto label4 <NEXT> label goto label3 <NEXT> if $ z1 == 0 goto label5 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io github classgraph class info r0 <NEXT> $ r3 = r4 name <NEXT> $ r2 = r1 name <NEXT> $ i0 = $ r3 compare to $ r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = specialinvoke r0 equal r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = io github classgraph class type signature r0 <NEXT> $ r1 = r2 superinterface signatures <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = io github classgraph field info r0 <NEXT> $ i0 = r1 modifier <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = io github classgraph field info r0 <NEXT> $ r2 = r5 get annotation info <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = io github classgraph annotation info $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io github classgraph method info r0 <NEXT> $ r2 = r3 get annotation info <NEXT> $ z0 = $ r2 contain name r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = io github classgraph method parameter info r0 <NEXT> $ i0 = r1 modifier <NEXT> $ z0 = java lang reflect modifier be final $ i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = io github classgraph module ref r0 <NEXT> $ r1 = r2 layer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = io github classgraph scan result r0 <NEXT> $ r5 = r13 close <NEXT> $ z0 = $ r5 get <NEXT> if $ z0 == 0 goto label1 <NEXT> r11 = new java lang illegal argument exception <NEXT> specialinvoke r11 < init > \ `` can not use a scan result after it have be closed\ `` <NEXT> throw r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r14 = io github classgraph scan result r0 <NEXT> r2 = r14 get all resource <NEXT> $ z1 = r2 be empty <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r8 = io github classgraph resource list empty_list <NEXT> return $ r8 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r3 = nonapi io github classgraph utils file utils sanitize entry path r1 1 <NEXT> r15 = io github classgraph scan result r0 <NEXT> $ r6 = r15 get all resource a map <NEXT> $ r7 = $ r6 get r3 <NEXT> r4 = io github classgraph resource list $ r7 <NEXT> if r4 ! = null goto label3 <NEXT> r12 = new io github classgraph resource list <NEXT> $ r10 = r12 <NEXT> specialinvoke r12 < init > 1 <NEXT> goto label4 <NEXT> label return $ r10 <NEXT> if r4 ! = null goto label3 <NEXT> label $ r10 = r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r16 = io github classgraph scan result r0 <NEXT> $ r7 = r16 close <NEXT> $ z0 = $ r7 get <NEXT> if $ z0 == 0 goto label1 <NEXT> r14 = new java lang illegal argument exception <NEXT> specialinvoke r14 < init > \ `` can not use a scan result after it have be closed\ `` <NEXT> throw r14 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r17 = io github classgraph scan result r0 <NEXT> r2 = r17 get all resource <NEXT> $ z1 = r2 be empty <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r11 = io github classgraph resource list empty_list <NEXT> return $ r11 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r13 = r1 <NEXT> label $ z2 = r13 start with \ `` \ `` <NEXT> if $ z2 == 0 goto label4 <NEXT> r13 = r13 substring 1 <NEXT> goto label3 <NEXT> if $ z2 == 0 goto label4 <NEXT> label r15 = new io github classgraph resource list <NEXT> specialinvoke r15 < init > <NEXT> r4 = r2 iterator <NEXT> label $ z3 = r4 have next <NEXT> if $ z3 == 0 goto label7 <NEXT> $ r9 = r4 next <NEXT> r5 = io github classgraph resource $ r9 <NEXT> r6 = r5 get path <NEXT> i0 = r6 last index of 47 <NEXT> i1 = r6 last index of 46 <NEXT> if i1 < = i0 goto label6 <NEXT> $ i2 = i1 + 1 <NEXT> $ r10 = r6 substring $ i2 <NEXT> $ z4 = $ r10 equal ignore case r13 <NEXT> if $ z4 == 0 goto label6 <NEXT> r15 add r5 <NEXT> label goto label5 <NEXT> if $ z3 == 0 goto label7 <NEXT> label return r15 <END>
<BEG> r0 = @ this <NEXT> r12 = io github classgraph scan result r0 <NEXT> $ r1 = r12 close <NEXT> $ z0 = $ r1 get <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = new java lang illegal argument exception <NEXT> specialinvoke r10 < init > \ `` can not use a scan result after it have be closed\ `` <NEXT> throw r10 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r13 = io github classgraph scan result r0 <NEXT> $ r2 = r13 scan spec <NEXT> $ z1 = $ r2 enable class info <NEXT> if $ z1 == 0 goto label2 <NEXT> r14 = io github classgraph scan result r0 <NEXT> $ r4 = r14 scan spec <NEXT> $ z2 = $ r4 enable annotation info <NEXT> if $ z2 ! = 0 goto label3 <NEXT> label r11 = new java lang illegal argument exception <NEXT> specialinvoke r11 < init > \ `` please call class graph #enable class info and #enable annotation info before #scan \ `` <NEXT> throw r11 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> label r15 = io github classgraph scan result r0 <NEXT> $ r5 = r15 class name to class info <NEXT> $ r6 = $ r5 value <NEXT> r16 = io github classgraph scan result r0 <NEXT> $ r7 = r16 scan spec <NEXT> $ r8 = io github classgraph class info get all interface or annotation class $ r6 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = io github classgraph type argument r0 <NEXT> $ r1 = r2 type signature <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = nonapi io github classgraph concurrency interruption checker r0 <NEXT> $ r1 = r3 interrupt <NEXT> $ r1 set 1 <NEXT> $ r2 = java lang thread current thread <NEXT> $ r2 interrupt <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> r2 = @ parameter4 <NEXT> $ r7 = r0 get class <NEXT> $ r8 = r2 get $ r7 <NEXT> $ r9 = $ r8 field name to field type info <NEXT> $ r10 = $ r9 get r1 <NEXT> r3 = nonapi io github classgraph json field type info $ r10 <NEXT> if r3 ! = null goto label1 <NEXT> $ r22 = new java lang illegal argument exception <NEXT> $ r23 = new java lang string builder <NEXT> specialinvoke $ r23 < init > <NEXT> $ r24 = $ r23 append \ `` class \ `` <NEXT> $ r25 = r0 get class <NEXT> $ r26 = $ r25 get name <NEXT> $ r27 = $ r24 append $ r26 <NEXT> $ r28 = $ r27 append \ `` do not have a field name \\\ `` \ `` <NEXT> $ r29 = $ r28 append r1 <NEXT> $ r30 = $ r29 append \ `` \\\ `` \ `` <NEXT> $ r31 = $ r30 to string <NEXT> specialinvoke $ r22 < init > $ r31 <NEXT> throw $ r22 <NEXT> if r3 ! = null goto label1 <NEXT> label r4 = r3 field <NEXT> $ z1 = nonapi io github classgraph json j s o n utils field be serializable r4 0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ r12 = new java lang illegal argument exception <NEXT> $ r13 = new java lang string builder <NEXT> specialinvoke $ r13 < init > <NEXT> $ r14 = $ r13 append \ `` field \ `` <NEXT> $ r15 = r0 get class <NEXT> $ r16 = $ r15 get name <NEXT> $ r17 = $ r14 append $ r16 <NEXT> $ r18 = $ r17 append \ `` \ `` <NEXT> $ r19 = $ r18 append r1 <NEXT> $ r20 = $ r19 append \ `` need to be accessible non-transient and non-final\ `` <NEXT> $ r21 = $ r20 to string <NEXT> specialinvoke $ r12 < init > $ r21 <NEXT> throw $ r12 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r5 = nonapi io github classgraph json j s o n utils get field value r0 r4 <NEXT> label goto label5 <NEXT> label $ r11 = nonapi io github classgraph json j s o n serializer serialize object r5 i0 z0 r2 <NEXT> return $ r11 <END>
<BEG> r0 = @ this <NEXT> $ r4 = class \ `` lnonapi io github classgraph scanspec scan spec \ `` <NEXT> r1 = $ r4 get declare field <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label6 <NEXT> r2 = r1 [ i1 ] <NEXT> $ r5 = class \ `` lnonapi io github classgraph scanspec white black list \ `` <NEXT> $ r6 = r2 get type <NEXT> $ z0 = $ r5 be assignable from $ r6 <NEXT> if $ z0 == 0 goto label5 <NEXT> label $ r7 = r2 get r0 <NEXT> $ r8 = nonapi io github classgraph scanspec white black list $ r7 <NEXT> $ r8 sort prefix <NEXT> label goto label5 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label6 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 replace 47 46 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = nonapi io github classgraph scanspec white black list r0 <NEXT> $ r1 = r4 blacklist <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = nonapi io github classgraph scanspec white black list r0 <NEXT> $ r2 = r5 blacklist prefix <NEXT> if $ r2 ! = null goto label1 <NEXT> r6 = nonapi io github classgraph scanspec white black list r0 <NEXT> $ r3 = r6 blacklist glob <NEXT> if $ r3 ! = null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r3 ! = null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = nonapi io github classgraph scanspec white black list r0 <NEXT> $ z0 = r2 whitelist be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r3 = nonapi io github classgraph scanspec white black list r0 <NEXT> $ z1 = r3 be whitelisted and not blacklist r1 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java lang boolean type <NEXT> if r2 ! = $ r3 goto label1 <NEXT> $ r18 = java lang boolean false <NEXT> return $ r18 <NEXT> if r2 ! = $ r3 goto label1 <NEXT> label $ r4 = java lang integer type <NEXT> if r2 ! = $ r4 goto label2 <NEXT> $ r17 = org apache common beanutils lazy dyna bean integer_ z e r o <NEXT> return $ r17 <NEXT> if r2 ! = $ r4 goto label2 <NEXT> label $ r5 = java lang long type <NEXT> if r2 ! = $ r5 goto label3 <NEXT> $ r16 = org apache common beanutils lazy dyna bean long_ z e r o <NEXT> return $ r16 <NEXT> if r2 ! = $ r5 goto label3 <NEXT> label $ r6 = java lang double type <NEXT> if r2 ! = $ r6 goto label4 <NEXT> $ r15 = org apache common beanutils lazy dyna bean double_ z e r o <NEXT> return $ r15 <NEXT> if r2 ! = $ r6 goto label4 <NEXT> label $ r7 = java lang float type <NEXT> if r2 ! = $ r7 goto label5 <NEXT> $ r14 = org apache common beanutils lazy dyna bean float_ z e r o <NEXT> return $ r14 <NEXT> if r2 ! = $ r7 goto label5 <NEXT> label $ r8 = java lang byte type <NEXT> if r2 ! = $ r8 goto label6 <NEXT> $ r13 = org apache common beanutils lazy dyna bean byte_ z e r o <NEXT> return $ r13 <NEXT> if r2 ! = $ r8 goto label6 <NEXT> label $ r9 = java lang short type <NEXT> if r2 ! = $ r9 goto label7 <NEXT> $ r12 = org apache common beanutils lazy dyna bean short_ z e r o <NEXT> return $ r12 <NEXT> if r2 ! = $ r9 goto label7 <NEXT> label $ r10 = java lang character type <NEXT> if r2 ! = $ r10 goto label8 <NEXT> $ r11 = org apache common beanutils lazy dyna bean character_ s p a c e <NEXT> return $ r11 <NEXT> if r2 ! = $ r10 goto label8 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common cli command line r0 <NEXT> $ r1 = r4 hashcode map <NEXT> $ r2 = $ r1 value <NEXT> $ r3 = $ r2 iterator <NEXT> return $ r3 <END>
<BEG> org apache common cli option builder number of args = -2 <NEXT> $ r0 = org apache common cli option builder instance <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r6 = new org apache common cli option <NEXT> specialinvoke r6 < init > r1 r2 z0 r3 <NEXT> r7 = org apache common cli option r0 <NEXT> r7 add option r6 <NEXT> r8 = org apache common cli option r0 <NEXT> return r8 <END>
<BEG> r0 = @ parameter0 <NEXT> label r19 = java lang class for name r0 <NEXT> label goto label4 <NEXT> label r20 = r19 new instance <NEXT> label goto label8 <NEXT> label return r20 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = new org apache common collection bag predicate bag <NEXT> $ r3 = org apache common collection functors instanceof predicate get instance r1 <NEXT> specialinvoke r4 < init > r0 $ r3 <NEXT> r5 = org apache common collection bag r4 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org apache common collection unmodifiable <NEXT> if $ z0 == 0 goto label1 <NEXT> return r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = new org apache common collection bidimap unmodifiable bidi map <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org apache common collection bidi map r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common collection bound fifo buffer r0 <NEXT> $ i0 = r1 size <NEXT> r2 = org apache common collection bound fifo buffer r0 <NEXT> $ i1 = r2 max element <NEXT> if $ i0 ! = $ i1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 ! = $ i1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common collection bound fifo buffer r0 <NEXT> $ z0 = r5 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = new org apache common collection buffer underflow exception <NEXT> specialinvoke r4 < init > \ `` the buffer be already empty\ `` <NEXT> r6 = java lang throwable r4 <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org apache common collection bound fifo buffer r0 <NEXT> $ r1 = r7 m_elements <NEXT> r8 = org apache common collection bound fifo buffer r0 <NEXT> $ i0 = r8 m_start <NEXT> $ r2 = $ r1 [ $ i0 ] <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r25 = org apache common collection buffer block buffer r0 <NEXT> $ r5 = r25 lock <NEXT> entermonitor $ r5 <NEXT> label r26 = org apache common collection buffer block buffer r0 <NEXT> $ r6 = r26 collection <NEXT> $ z0 = $ r6 be empty <NEXT> if $ z0 == 0 goto label08 <NEXT> label r27 = org apache common collection buffer block buffer r0 <NEXT> $ l0 = r27 timeout <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 > 0 goto label03 <NEXT> r28 = org apache common collection buffer block buffer r0 <NEXT> $ r10 = r28 lock <NEXT> $ r10 wait <NEXT> goto label06 <NEXT> label goto label01 <NEXT> if $ b1 > 0 goto label03 <NEXT> label r29 = org apache common collection buffer block buffer r0 <NEXT> $ l2 = r29 timeout <NEXT> r30 = org apache common collection buffer block buffer r0 <NEXT> $ r9 = r30 get $ l2 <NEXT> label exitmonitor $ r5 <NEXT> label return $ r9 <NEXT> if $ z0 == 0 goto label08 <NEXT> label r32 = org apache common collection buffer block buffer r0 <NEXT> $ r7 = r32 get buffer <NEXT> $ r8 = $ r7 get <NEXT> exitmonitor $ r5 <NEXT> label return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collection buffer priority buffer r0 <NEXT> $ r1 = r2 comparator <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common collection functors chain closure get instance r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r12 = new java lang illegal argument exception <NEXT> specialinvoke $ r12 < init > \ `` the object and closure map must not be null\ `` <NEXT> throw $ r12 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r4 = r0 remove null <NEXT> r1 = org apache common collection closure $ r4 <NEXT> i0 = r0 size <NEXT> r13 = newarray org apache common collection closure [ i0 ] <NEXT> r14 = newarray org apache common collection predicate [ i0 ] <NEXT> i1 = 0 <NEXT> $ r5 = r0 entry set <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r2 next <NEXT> r3 = java util map $ entry $ r7 <NEXT> $ r8 = r3 get key <NEXT> $ r9 = org apache common collection functors equal predicate get instance $ r8 <NEXT> r14 [ i1 ] = $ r9 <NEXT> $ r10 = r3 get value <NEXT> $ r11 = org apache common collection closure $ r10 <NEXT> r13 [ i1 ] = $ r11 <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r6 = org apache common collection closure utils switch closure r14 r13 r1 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == null goto label2 <NEXT> if r1 == null goto label2 <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r3 = r2 next <NEXT> r1 execute $ r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if r0 == null goto label3 <NEXT> if r1 == null goto label3 <NEXT> r3 = r0 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> r4 = r3 next <NEXT> $ z1 = r1 evaluate r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> r2 add r4 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache common collection cursorable link list r0 <NEXT> $ r2 = r5 _head <NEXT> $ r3 = $ r2 prev <NEXT> r6 = org apache common collection cursorable link list r0 <NEXT> r6 insert listable $ r3 null r1 <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r10 = org apache common collection cursorable link list r0 <NEXT> $ r2 = r10 _head <NEXT> $ r3 = $ r2 next <NEXT> if $ r3 == null goto label1 <NEXT> r11 = org apache common collection cursorable link list r0 <NEXT> $ r5 = r11 _head <NEXT> $ r6 = $ r5 next <NEXT> r1 = $ r6 value <NEXT> r12 = org apache common collection cursorable link list r0 <NEXT> $ r7 = r12 _head <NEXT> $ r8 = $ r7 next <NEXT> r13 = org apache common collection cursorable link list r0 <NEXT> r13 remove listable $ r8 <NEXT> return r1 <NEXT> if $ r3 == null goto label1 <NEXT> label r9 = new java util no such element exception <NEXT> specialinvoke r9 < init > <NEXT> throw r9 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collection default map bag r0 <NEXT> $ r1 = r2 _map <NEXT> $ i0 = $ r1 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common collection fast array list r0 <NEXT> $ z0 = r1 fast <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache common collection fast array list r0 <NEXT> $ z0 = r7 fast <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = org apache common collection fast array list r0 <NEXT> $ r5 = r8 list <NEXT> $ z2 = $ r5 be empty <NEXT> return $ z2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r9 = org apache common collection fast array list r0 <NEXT> $ r3 = r9 list <NEXT> entermonitor $ r3 <NEXT> label r10 = org apache common collection fast array list r0 <NEXT> $ r4 = r10 list <NEXT> $ z1 = $ r4 be empty <NEXT> exitmonitor $ r3 <NEXT> label return $ z1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = org apache common collection fast array list r0 <NEXT> $ z1 = r14 fast <NEXT> if $ z1 == 0 goto label5 <NEXT> entermonitor r0 <NEXT> label r15 = org apache common collection fast array list r0 <NEXT> $ r8 = r15 list <NEXT> $ r9 = $ r8 clone <NEXT> r2 = java util array list $ r9 <NEXT> z0 = r2 remove r1 <NEXT> r16 = org apache common collection fast array list r0 <NEXT> r16 list = r2 <NEXT> exitmonitor r0 <NEXT> label return z0 <NEXT> if $ z1 == 0 goto label5 <NEXT> label r17 = org apache common collection fast array list r0 <NEXT> $ r5 = r17 list <NEXT> entermonitor $ r5 <NEXT> label r18 = org apache common collection fast array list r0 <NEXT> $ r6 = r18 list <NEXT> $ z2 = $ r6 remove r1 <NEXT> exitmonitor $ r5 <NEXT> label return $ z2 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache common collection fast array list r0 <NEXT> $ z0 = r9 fast <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = org apache common collection fast array list r0 <NEXT> $ r6 = r10 list <NEXT> $ r7 = $ r6 to array <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org apache common collection fast array list r0 <NEXT> $ r3 = r11 list <NEXT> entermonitor $ r3 <NEXT> label r12 = org apache common collection fast array list r0 <NEXT> $ r4 = r12 list <NEXT> $ r5 = $ r4 to array <NEXT> exitmonitor $ r3 <NEXT> label return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collection functors all predicate r0 <NEXT> $ r1 = r2 i predicate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collection functors transformer closure r0 <NEXT> $ r1 = r2 i transformer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common collection iterators list iterator wrapper r0 <NEXT> $ i0 = r5 current index <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r4 = new java util no such element exception <NEXT> specialinvoke r4 < init > <NEXT> throw r4 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r6 = org apache common collection iterators list iterator wrapper r0 <NEXT> $ i1 = r6 current index <NEXT> $ i2 = $ i1 - 1 <NEXT> r7 = org apache common collection iterators list iterator wrapper r0 <NEXT> r7 current index = $ i2 <NEXT> r8 = org apache common collection iterators list iterator wrapper r0 <NEXT> $ r1 = r8 list <NEXT> r9 = org apache common collection iterators list iterator wrapper r0 <NEXT> $ i3 = r9 current index <NEXT> $ r2 = $ r1 get $ i3 <NEXT> return $ r2 <END>
<BEG> $ r0 = org apache common collection iterator utils empty_map_iterator <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common collection list type list decorate r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = r1 size <NEXT> if i0 ! = 0 goto label1 <NEXT> return <NEXT> if i0 ! = 0 goto label1 <NEXT> label r9 = org apache common collection map abstract hash map r0 <NEXT> $ i2 = r9 size <NEXT> $ i3 = $ i2 + i0 <NEXT> $ f1 = float $ i3 <NEXT> r10 = org apache common collection map abstract hash map r0 <NEXT> $ f0 = r10 load factor <NEXT> $ f2 = $ f1 $ f0 <NEXT> $ f3 = $ f2 + 1 0f <NEXT> i1 = int $ f3 <NEXT> r11 = org apache common collection map abstract hash map r0 <NEXT> $ i4 = r11 calculate new capacity i1 <NEXT> r12 = org apache common collection map abstract hash map r0 <NEXT> r12 ensure capacity $ i4 <NEXT> $ r4 = r1 entry set <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = java util map $ entry $ r5 <NEXT> $ r6 = r3 get key <NEXT> $ r7 = r3 get value <NEXT> r13 = org apache common collection map abstract hash map r0 <NEXT> r13 put $ r6 $ r7 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org apache common collection map abstract hash map r0 <NEXT> $ i1 = r3 mod count <NEXT> $ i2 = $ i1 + 1 <NEXT> r4 = org apache common collection map abstract hash map r0 <NEXT> r4 mod count = $ i2 <NEXT> r5 = org apache common collection map abstract hash map r0 <NEXT> r5 remove entry r1 i0 r2 <NEXT> r6 = org apache common collection map abstract hash map r0 <NEXT> $ i3 = r6 size <NEXT> $ i4 = $ i3 - 1 <NEXT> r7 = org apache common collection map abstract hash map r0 <NEXT> r7 size = $ i4 <NEXT> r8 = org apache common collection map abstract hash map r0 <NEXT> r8 destroy entry r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org apache common collection map abstract link map r0 <NEXT> $ i0 = r6 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r5 = new java util no such element exception <NEXT> specialinvoke r5 < init > \ `` map be empty\ `` <NEXT> throw r5 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r7 = org apache common collection map abstract link map r0 <NEXT> $ r1 = r7 header <NEXT> $ r2 = $ r1 after <NEXT> $ r3 = $ r2 get key <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache common collection map abstract link map r0 <NEXT> $ i0 = r6 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r5 = new java util no such element exception <NEXT> specialinvoke r5 < init > \ `` map be empty\ `` <NEXT> throw r5 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r7 = org apache common collection map abstract link map r0 <NEXT> $ r1 = r7 header <NEXT> $ r2 = $ r1 before <NEXT> $ r3 = $ r2 get key <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r5 = new org apache common collection map abstract link map $ link entry <NEXT> specialinvoke r5 < init > r1 i0 r2 r3 <NEXT> r6 = org apache common collection map abstract hash map $ hash entry r5 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 after <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common collection map composite map r0 <NEXT> r2 mutator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache common collection map composite map r0 <NEXT> $ r2 = r7 mutator <NEXT> if $ r2 ! = null goto label1 <NEXT> r6 = new java lang unsupported operation exception <NEXT> specialinvoke r6 < init > \ `` no mutator specified\ `` <NEXT> throw r6 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r8 = org apache common collection map composite map r0 <NEXT> $ r4 = r8 mutator <NEXT> r9 = org apache common collection map composite map r0 <NEXT> $ r3 = r9 composite <NEXT> r10 = org apache common collection map composite map r0 <NEXT> $ r4 put all r10 $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> return r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r13 = new org apache common collection map link map <NEXT> $ i0 = r1 size <NEXT> specialinvoke r13 < init > $ i0 <NEXT> $ r6 = r1 entry set <NEXT> r3 = $ r6 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r7 = r3 next <NEXT> r4 = java util map $ entry $ r7 <NEXT> $ r8 = r4 get key <NEXT> r14 = org apache common collection map transform map r0 <NEXT> $ r9 = r14 transform key $ r8 <NEXT> $ r10 = r4 get value <NEXT> r15 = org apache common collection map transform map r0 <NEXT> $ r11 = r15 transform value $ r10 <NEXT> r16 = java util map r13 <NEXT> r16 put $ r9 $ r11 <NEXT> goto label2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r17 = java util map r13 <NEXT> return r17 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> r2 = r0 get r1 <NEXT> if r2 == null goto label1 <NEXT> $ z0 = r2 instanceof java util map <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = java util map r2 <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org apache common collection map utils get short r0 r1 <NEXT> if r3 ! = null goto label1 <NEXT> r3 = r2 <NEXT> label return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org apache common collection map utils get double r0 r1 <NEXT> if r3 ! = null goto label1 <NEXT> r3 = r2 <NEXT> label return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org apache common collection map utils be empty r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org apache common collection map predicate map decorate r0 r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common collection map multi value map decorate r0 r1 <NEXT> r3 = java util map $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache common collection map multi value map decorate r0 r1 <NEXT> r3 = java util map $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common collection reference map r0 <NEXT> specialinvoke r4 purge <NEXT> r5 = org apache common collection reference map r0 <NEXT> r2 = specialinvoke r5 get entry r1 <NEXT> if r2 ! = null goto label1 <NEXT> return 0 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r3 = r2 get value <NEXT> if $ r3 == null goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ r3 == null goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = new org apache common collection set predicate set <NEXT> $ r3 = org apache common collection functors instanceof predicate get instance r1 <NEXT> specialinvoke r4 < init > r0 $ r3 <NEXT> r5 = java util set r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common collection synchronize priority queue r0 <NEXT> $ r1 = r2 m_priority queue <NEXT> $ z0 = $ r1 be empty <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common collection synchronize priority queue r0 <NEXT> $ r1 = r3 m_priority queue <NEXT> $ r2 = $ r1 peek <NEXT> return $ r2 <END>
<BEG> $ r0 = org apache common collection functors n o p transformer instance <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common compress archivers cpio cpio archive input stream r0 <NEXT> specialinvoke r1 ensure open <NEXT> r2 = org apache common compress archivers cpio cpio archive input stream r0 <NEXT> $ z0 = r2 entry e o f <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common compress archivers tar tar archive output stream r0 <NEXT> $ z0 = r3 finish <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = org apache common compress archivers tar tar archive output stream r0 <NEXT> r4 finish <NEXT> label r5 = org apache common compress archivers tar tar archive output stream r0 <NEXT> $ z1 = r5 close <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r6 = org apache common compress archivers tar tar archive output stream r0 <NEXT> $ r1 = r6 buffer <NEXT> $ r1 close <NEXT> r7 = org apache common compress archivers tar tar archive output stream r0 <NEXT> $ r2 = r7 out <NEXT> $ r2 close <NEXT> r8 = org apache common compress archivers tar tar archive output stream r0 <NEXT> r8 close = 1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r1 = org apache common configuration abstract configuration r0 <NEXT> r1 list delimiter = c0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common configuration abstract configuration r0 <NEXT> $ z0 = r1 delimiter parse disabled <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common configuration abstract configuration r0 <NEXT> $ z0 = r1 throw exception on miss <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r4 = new org apache common configuration interpol configuration interpolator <NEXT> specialinvoke r4 < init > <NEXT> r5 = new org apache common configuration abstract configuration $ 1 <NEXT> r6 = org apache common configuration abstract configuration r0 <NEXT> specialinvoke r5 < init > r6 <NEXT> r7 = org apache common lang text str lookup r5 <NEXT> r4 set default lookup r7 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache common configuration abstract configuration $ 2 <NEXT> r3 = org apache common configuration abstract configuration r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = org apache common configuration abstract configuration r0 <NEXT> r5 = org apache common configuration event configuration error listener r2 <NEXT> r4 add error listener r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org apache common configuration abstract file configuration r0 <NEXT> $ r1 = r8 get file name <NEXT> if $ r1 ! = null goto label1 <NEXT> r7 = new org apache common configuration configuration exception <NEXT> specialinvoke r7 < init > \ `` no file name have be set ! \ `` <NEXT> r9 = java lang throwable r7 <NEXT> throw r9 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r10 = org apache common configuration abstract file configuration r0 <NEXT> $ r2 = r10 source u r l <NEXT> if $ r2 == null goto label2 <NEXT> r11 = org apache common configuration abstract file configuration r0 <NEXT> $ r5 = r11 source u r l <NEXT> r12 = org apache common configuration abstract file configuration r0 <NEXT> r12 save $ r5 <NEXT> goto label3 <NEXT> label r15 = org apache common configuration abstract file configuration r0 <NEXT> $ r4 = r15 strategy <NEXT> $ r4 init <NEXT> return <NEXT> if $ r2 == null goto label2 <NEXT> label r13 = org apache common configuration abstract file configuration r0 <NEXT> $ r3 = r13 file name <NEXT> r14 = org apache common configuration abstract file configuration r0 <NEXT> r14 save $ r3 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common configuration abstract file configuration r0 <NEXT> $ r3 = r5 reload lock <NEXT> entermonitor $ r3 <NEXT> label r6 = org apache common configuration abstract file configuration r0 <NEXT> $ i0 = r6 no reload <NEXT> $ i1 = $ i0 + 1 <NEXT> r7 = org apache common configuration abstract file configuration r0 <NEXT> r7 no reload = $ i1 <NEXT> exitmonitor $ r3 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common configuration abstract hierarchical file configuration r0 <NEXT> r2 delegate = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common configuration base configuration r0 <NEXT> $ r1 = r2 store <NEXT> $ z0 = $ r1 be empty <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new java io file <NEXT> specialinvoke r6 < init > r1 <NEXT> r2 = r6 get absolute file <NEXT> $ r4 = r2 get name <NEXT> r7 = org apache common configuration configuration factory r0 <NEXT> r7 configuration file name = $ r4 <NEXT> $ r5 = r2 get parent <NEXT> r8 = org apache common configuration configuration factory r0 <NEXT> r8 implicit base path = $ r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache common configuration configuration key r0 <NEXT> $ r2 = r7 key buffer <NEXT> $ i0 = $ r2 length <NEXT> if $ i0 < = 0 goto label1 <NEXT> r8 = org apache common configuration configuration key r0 <NEXT> $ z0 = specialinvoke r8 have delimiter <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = org apache common configuration configuration key be attribute key r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r9 = org apache common configuration configuration key r0 <NEXT> $ r4 = r9 key buffer <NEXT> $ r4 append 46 <NEXT> label r10 = org apache common configuration configuration key r0 <NEXT> $ r6 = r10 key buffer <NEXT> $ r6 append r1 <NEXT> r11 = org apache common configuration configuration key r0 <NEXT> specialinvoke r11 remove trail delimiter <NEXT> r12 = org apache common configuration configuration key r0 <NEXT> return r12 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ r2 = r0 get protocol <NEXT> $ z0 = $ r2 equal \ `` file\ `` <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label return null <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r3 = r0 get file <NEXT> $ c1 = java io file separator char <NEXT> r11 = $ r3 replace 47 $ c1 <NEXT> i8 = 0 <NEXT> label $ i9 = r11 index of 37 i8 <NEXT> i8 = $ i9 <NEXT> if $ i9 < 0 goto label4 <NEXT> $ i2 = $ i9 + 2 <NEXT> $ i3 = r11 length <NEXT> if $ i2 > = $ i3 goto label3 <NEXT> $ i5 = $ i9 + 1 <NEXT> $ i4 = $ i9 + 3 <NEXT> r1 = r11 substring $ i5 $ i4 <NEXT> $ i6 = java lang integer parse int r1 16 <NEXT> c0 = char $ i6 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = r11 substring 0 $ i9 <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append c0 <NEXT> $ i7 = $ i9 + 3 <NEXT> $ r9 = r11 substring $ i7 <NEXT> $ r10 = $ r8 append $ r9 <NEXT> r11 = $ r10 to string <NEXT> goto label3 <NEXT> if $ i9 < 0 goto label4 <NEXT> label $ r4 = new java io file <NEXT> specialinvoke $ r4 < init > r11 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org apache common configuration configuration x m l reader r0 <NEXT> $ r3 = r9 get exception <NEXT> if $ r3 ! = null goto label6 <NEXT> label if r2 ! = null goto label2 <NEXT> $ r6 = org apache common configuration configuration x m l reader empty_attrs <NEXT> goto label3 <NEXT> label r10 = org apache common configuration configuration x m l reader r0 <NEXT> $ r4 = r10 get content handler <NEXT> $ r4 start element \ `` \ <NEXT> label goto label6 <NEXT> label return <NEXT> label if r2 ! = null goto label2 <NEXT> label $ r6 = r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r5 = org apache common configuration data configuration r0 <NEXT> $ r3 = r5 get short list r1 r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = newarray short [ 0 ] <NEXT> r4 = org apache common configuration data configuration r0 <NEXT> $ r3 = r4 get short array r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r5 = org apache common configuration data configuration r0 <NEXT> $ r3 = r5 get long list r1 r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r5 = org apache common configuration data configuration r0 <NEXT> $ r3 = r5 get big integer list r1 r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = newarray java net url [ 0 ] <NEXT> r4 = org apache common configuration data configuration r0 <NEXT> $ r3 = r4 get u r l array r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common configuration data configuration r0 <NEXT> $ r2 = r4 get class \ `` ljava awt color \ <NEXT> $ r3 = java awt color $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache common configuration default configuration builder r0 <NEXT> $ r2 = r5 provider <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org apache common configuration default configuration builder $ configuration provider $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r7 = org apache common configuration default configuration builder r0 <NEXT> r7 load <NEXT> label r8 = org apache common configuration default configuration builder r0 <NEXT> r8 init file system <NEXT> r9 = org apache common configuration default configuration builder r0 <NEXT> r9 init system property <NEXT> r10 = org apache common configuration default configuration builder r0 <NEXT> r10 configure entity resolver <NEXT> r11 = org apache common configuration default configuration builder r0 <NEXT> r11 register configure provider <NEXT> r12 = org apache common configuration default configuration builder r0 <NEXT> r12 register configure lookup <NEXT> r13 = org apache common configuration default configuration builder r0 <NEXT> r1 = r13 create result configuration <NEXT> r14 = org apache common configuration default configuration builder r0 <NEXT> r14 construct configuration = r1 <NEXT> r15 = org apache common configuration default configuration builder r0 <NEXT> r2 = specialinvoke r15 fetch top level override configs <NEXT> r16 = org apache common configuration default configuration builder r0 <NEXT> $ r5 = specialinvoke r16 fetch child configs \ `` override\ `` <NEXT> r2 add all $ r5 <NEXT> r17 = org apache common configuration default configuration builder r0 <NEXT> r17 init combine configuration r1 r2 \ `` header combiner override list-nodes node\ `` <NEXT> r18 = org apache common configuration default configuration builder r0 <NEXT> r3 = specialinvoke r18 fetch child configs \ `` additional\ `` <NEXT> $ z2 = r3 be empty <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r19 = org apache common configuration default configuration builder r0 <NEXT> r4 = r19 create additionals configuration r1 <NEXT> $ r6 = org apache common configuration default configuration builder additional_name <NEXT> r20 = org apache common configuration abstract configuration r4 <NEXT> r1 add configuration r20 $ r6 <NEXT> r21 = org apache common configuration default configuration builder r0 <NEXT> r21 init combine configuration r4 r3 \ `` header combiner additional list-nodes node\ `` <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common configuration event configuration event r0 <NEXT> $ r1 = r2 property value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = new java util array list <NEXT> r5 = org apache common configuration event event source r0 <NEXT> $ r2 = r5 listener <NEXT> specialinvoke r4 < init > $ r2 <NEXT> $ r3 = java util collection unmodifiable collection r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r5 = org apache common configuration event event source r0 <NEXT> $ r3 = r5 lock detail event count <NEXT> entermonitor $ r3 <NEXT> label if z0 == 0 goto label2 <NEXT> r6 = org apache common configuration event event source r0 <NEXT> $ i2 = r6 detail event <NEXT> $ i3 = $ i2 + 1 <NEXT> r7 = org apache common configuration event event source r0 <NEXT> r7 detail event = $ i3 <NEXT> goto label3 <NEXT> label exitmonitor $ r3 <NEXT> label goto label7 <NEXT> label return <NEXT> label if z0 == 0 goto label2 <NEXT> label r8 = org apache common configuration event event source r0 <NEXT> $ i0 = r8 detail event <NEXT> $ i1 = $ i0 - 1 <NEXT> r9 = org apache common configuration event event source r0 <NEXT> r9 detail event = $ i1 <END>
<BEG> r0 = @ this <NEXT> r4 = new java util array list <NEXT> r5 = org apache common configuration event event source r0 <NEXT> $ r2 = r5 error listener <NEXT> specialinvoke r4 < init > $ r2 <NEXT> $ r3 = java util collection unmodifiable collection r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r1 = new java lang null pointer exception <NEXT> specialinvoke $ r1 < init > \ `` a file system implementation be required\ `` <NEXT> throw $ r1 <NEXT> if r0 ! = null goto label1 <NEXT> label org apache common configuration file system file system = r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common configuration dynamic combined configuration r0 <NEXT> $ r2 = r4 configs <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org apache common configuration dynamic combined configuration r0 <NEXT> $ r3 = specialinvoke r5 get current config <NEXT> $ r3 set root r1 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r2 == null goto label1 <NEXT> label specialinvoke r0 set root r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common configuration hierarchical configuration r0 <NEXT> $ r2 = r3 fetch node list r1 <NEXT> $ i0 = $ r2 size <NEXT> $ i1 = $ i0 - 1 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache common configuration hierarchical configuration r0 <NEXT> $ r2 = r5 get expression engine <NEXT> r6 = org apache common configuration hierarchical configuration r0 <NEXT> $ r3 = r6 get root node <NEXT> $ r4 = $ r2 query $ r3 r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common configuration hierarchical configuration x m l reader r0 <NEXT> r2 configuration = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ z0 = r1 start with \ `` [ \ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = r1 end with \ `` ] \ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = org apache common configuration interpol configuration interpolator global lookup <NEXT> entermonitor $ r3 <NEXT> label $ r4 = org apache common configuration interpol configuration interpolator global lookup <NEXT> $ r5 = $ r4 remove r0 <NEXT> if $ r5 == null goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label exitmonitor $ r3 <NEXT> label return $ z0 <NEXT> if $ r5 == null goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common configuration interpol configuration interpolator r0 <NEXT> $ r1 = r2 parent interpolator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache common configuration j n d i configuration r0 <NEXT> $ r1 = r9 base context <NEXT> if $ r1 ! = null goto label3 <NEXT> r10 = org apache common configuration j n d i configuration r0 <NEXT> $ r2 = r10 get context <NEXT> r11 = org apache common configuration j n d i configuration r0 <NEXT> $ r3 = r11 prefix <NEXT> if $ r3 ! = null goto label1 <NEXT> $ r7 = \ `` \ `` <NEXT> goto label2 <NEXT> label $ r4 = $ r2 lookup $ r7 <NEXT> $ r5 = javax name context $ r4 <NEXT> r13 = org apache common configuration j n d i configuration r0 <NEXT> r13 base context = $ r5 <NEXT> label r14 = org apache common configuration j n d i configuration r0 <NEXT> $ r8 = r14 base context <NEXT> return $ r8 <NEXT> if $ r3 ! = null goto label1 <NEXT> label r12 = org apache common configuration j n d i configuration r0 <NEXT> $ r7 = r12 prefix <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common configuration reload file change reload strategy r0 <NEXT> $ l0 = r1 refresh delay <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` expression engine must not be null ! \ `` <NEXT> throw r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org apache common configuration tree default configuration key r0 <NEXT> r4 expression engine = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return \ `` \ `` <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = r1 <NEXT> label r5 = org apache common configuration tree default configuration key r0 <NEXT> $ z0 = specialinvoke r5 have trail delimiter r4 <NEXT> if $ z0 == 0 goto label3 <NEXT> $ i0 = r4 length <NEXT> r6 = org apache common configuration tree default configuration key r0 <NEXT> $ r2 = r6 get expression engine <NEXT> $ r3 = $ r2 get property delimiter <NEXT> $ i1 = $ r3 length <NEXT> $ i2 = $ i0 - $ i1 <NEXT> r4 = r4 substring 0 $ i2 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common configuration tree default configuration node r0 <NEXT> $ r1 = r2 parent <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common configuration tree default configuration node r0 <NEXT> $ r1 = r3 child <NEXT> $ r2 = $ r1 get sub node <NEXT> $ i0 = $ r2 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache common configuration tree default configuration node r0 <NEXT> $ r1 = r3 child <NEXT> $ r2 = $ r1 get node i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common configuration tree default configuration node r0 <NEXT> $ r1 = r2 child <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common configuration tree default configuration node r0 <NEXT> $ r1 = r3 attribute <NEXT> $ r2 = $ r1 get sub node <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common configuration tree default expression engine r0 <NEXT> $ r1 = r2 index end <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common configuration tree node add data r0 <NEXT> $ z0 = r1 attribute <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common configuration tree node add data r0 <NEXT> r2 new node name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache common configuration tree node add data r0 <NEXT> $ r2 = r6 path node <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util link list <NEXT> specialinvoke r5 < init > <NEXT> r7 = org apache common configuration tree node add data r0 <NEXT> r7 path node = r5 <NEXT> label r8 = org apache common configuration tree node add data r0 <NEXT> $ r3 = r8 path node <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label2 <NEXT> $ r4 = r1 get child <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = org apache common configuration tree configuration node $ r5 <NEXT> r6 = org apache common configuration tree view node r0 <NEXT> r6 add child r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r7 = org apache common configuration x m l configuration r0 <NEXT> $ r1 = r7 get document <NEXT> if $ r1 ! = null goto label3 <NEXT> r8 = org apache common configuration x m l configuration r0 <NEXT> $ r5 = r8 root element name <NEXT> if $ r5 ! = null goto label1 <NEXT> $ r6 = \ `` configuration\ `` <NEXT> goto label2 <NEXT> label return $ r6 <NEXT> if $ r5 ! = null goto label1 <NEXT> label r9 = org apache common configuration x m l configuration r0 <NEXT> $ r6 = r9 root element name <NEXT> if $ r1 ! = null goto label3 <NEXT> label r10 = org apache common configuration x m l configuration r0 <NEXT> $ r2 = r10 get document <NEXT> $ r3 = $ r2 get document element <NEXT> $ r4 = $ r3 get node name <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common configuration x m l configuration r0 <NEXT> $ z0 = r1 schema validation <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common configuration x m l configuration r0 <NEXT> $ r1 = r2 document <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r1 create element \ `` properties\ `` <NEXT> r2 append child r3 <NEXT> r15 = org apache common configuration x m l property configuration r0 <NEXT> $ r7 = r15 get header <NEXT> if $ r7 == null goto label1 <NEXT> r13 = r1 create element \ `` comment\ `` <NEXT> r3 append child r13 <NEXT> r16 = org apache common configuration x m l property configuration r0 <NEXT> $ r11 = r16 get header <NEXT> $ r12 = org apache common lang string escape utils escape xml $ r11 <NEXT> r13 set text content $ r12 <NEXT> label r17 = org apache common configuration x m l property configuration r0 <NEXT> r14 = r17 get key <NEXT> label $ z1 = r14 have next <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r8 = r14 next <NEXT> r4 = java lang string $ r8 <NEXT> r18 = org apache common configuration x m l property configuration r0 <NEXT> r5 = r18 get property r4 <NEXT> $ z0 = r5 instanceof java util list <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r9 = java util list r5 <NEXT> r19 = org apache common configuration x m l property configuration r0 <NEXT> specialinvoke r19 write property r1 r3 r4 $ r9 <NEXT> goto label4 <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r20 = org apache common configuration x m l property configuration r0 <NEXT> specialinvoke r20 write property r1 r3 r4 r5 <NEXT> if $ z1 == 0 goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r11 = new java util hash map <NEXT> specialinvoke r11 < init > <NEXT> r12 = org apache common configuration beanutils x m l bean declaration r0 <NEXT> $ r5 = r12 get node <NEXT> $ r6 = $ r5 get child <NEXT> r2 = $ r6 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r2 next <NEXT> r3 = org apache common configuration tree configuration node $ r7 <NEXT> r13 = org apache common configuration beanutils x m l bean declaration r0 <NEXT> $ z1 = r13 be reserve node r3 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ r8 = r3 get name <NEXT> r14 = org apache common configuration beanutils x m l bean declaration r0 <NEXT> $ r9 = r14 create bean declaration r3 <NEXT> r11 put $ r8 $ r9 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r11 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common configuration configuration key r0 <NEXT> $ r1 = r3 key buffer <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common configuration configuration key r0 <NEXT> $ r1 = r3 key buffer <NEXT> $ r2 = java lang string value of $ r1 <NEXT> $ i0 = $ r2 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = new org apache common configuration configuration map $ configuration set <NEXT> r4 = org apache common configuration configuration map r0 <NEXT> $ r2 = r4 configuration <NEXT> specialinvoke r3 < init > $ r2 <NEXT> r5 = java util set r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache common configuration configuration map r0 <NEXT> $ r2 = r5 configuration <NEXT> $ r3 = java lang string value of r1 <NEXT> $ r4 = $ r2 get property $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache common configuration hierarchical configuration r0 <NEXT> r6 fire event 2 r1 null 1 <NEXT> r7 = org apache common configuration hierarchical configuration r0 <NEXT> r2 = r7 fetch node list r1 <NEXT> r3 = r2 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = r3 next <NEXT> $ r5 = org apache common configuration tree configuration node $ r4 <NEXT> r8 = org apache common configuration hierarchical configuration r0 <NEXT> r8 clear node $ r5 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r9 = org apache common configuration hierarchical configuration r0 <NEXT> r9 fire event 2 r1 null 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new org apache common configuration hierarchical configuration $ node <NEXT> specialinvoke $ r2 < init > r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common configuration hierarchical configuration x m l reader r0 <NEXT> $ r1 = r2 get configuration <NEXT> r3 = org apache common configuration configuration $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = new java lang unsupported operation exception <NEXT> specialinvoke $ r3 < init > \ `` read only configuration\ `` <NEXT> throw $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common csv c s v format r0 <NEXT> $ r1 = r2 record separator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common csv c s v format r0 <NEXT> $ r1 = r2 null string <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common csv c s v format r0 <NEXT> $ r1 = r2 quote character <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r2 = r16 append \ `` c s v record [ comment=\ `` <NEXT> r17 = org apache common csv c s v record r0 <NEXT> $ r3 = r17 comment <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ <NEXT> r18 = org apache common csv c s v record r0 <NEXT> $ r6 = r18 map <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ <NEXT> r19 = org apache common csv c s v record r0 <NEXT> $ l0 = r19 record number <NEXT> $ r9 = $ r8 append $ l0 <NEXT> $ r10 = $ r9 append \ <NEXT> r20 = org apache common csv c s v record r0 <NEXT> $ r11 = r20 value <NEXT> $ r12 = java util array to string $ r11 <NEXT> $ r13 = $ r10 append $ r12 <NEXT> $ r14 = $ r13 append \ `` ] \ `` <NEXT> $ r15 = $ r14 to string <NEXT> return $ r15 <END>
<BEG> r0 = @ this <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> r12 = org apache common csv token r0 <NEXT> $ r2 = r12 type <NEXT> $ r3 = $ r2 name <NEXT> $ r4 = r11 append $ r3 <NEXT> $ r5 = $ r4 append \ `` [ \ `` <NEXT> r13 = org apache common csv token r0 <NEXT> $ r6 = r13 content <NEXT> $ r7 = $ r6 to string <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 append \ `` ] \ `` <NEXT> $ r10 = $ r9 to string <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common dbcp2 basic data source r0 <NEXT> $ r1 = r3 connection pool <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org apache common dbcp2 basic data source r0 <NEXT> $ r2 = r4 connection pool <NEXT> $ r2 evict <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 basic data source r0 <NEXT> $ z0 = r1 auto commit on return <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 basic data source r0 <NEXT> $ z0 = r1 cache state <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 basic data source r0 <NEXT> $ z0 = r1 fast fail validation <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 basic data source r0 <NEXT> $ i0 = r1 max idle <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 basic data source r0 <NEXT> $ l0 = r1 max wait millis <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 basic data source r0 <NEXT> $ i0 = r1 min idle <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common dbcp2 basic data source r0 <NEXT> $ r1 = r3 abandon config <NEXT> if $ r1 ! = null goto label1 <NEXT> $ z0 = 0 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache common dbcp2 basic data source r0 <NEXT> $ r2 = r4 abandon config <NEXT> $ z0 = $ r2 get remove abandon on maintenance <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common dbcp2 basic data source r0 <NEXT> r1 auto commit on return = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common dbcp2 basic data source r0 <NEXT> $ r2 = r4 connection pool <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org apache common dbcp2 basic data source r0 <NEXT> $ r3 = r5 connection pool <NEXT> $ r3 set eviction policy class name r1 <NEXT> label r6 = org apache common dbcp2 basic data source r0 <NEXT> r6 eviction policy class name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache common dbcp2 basic data source r0 <NEXT> r3 max total = i0 <NEXT> r4 = org apache common dbcp2 basic data source r0 <NEXT> $ r1 = r4 connection pool <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org apache common dbcp2 basic data source r0 <NEXT> $ r2 = r5 connection pool <NEXT> $ r2 set max total i0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org apache common dbcp2 basic data source r0 <NEXT> r3 test while idle = z0 <NEXT> r4 = org apache common dbcp2 basic data source r0 <NEXT> $ r1 = r4 connection pool <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org apache common dbcp2 basic data source r0 <NEXT> $ r2 = r5 connection pool <NEXT> $ r2 set test while idle z0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 cpdsadapter connection impl r0 <NEXT> $ z0 = r1 access to underlie connection allow <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common dbcp2 cpdsadapter connection impl r0 <NEXT> $ z0 = r2 be access to underlie connection allow <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = specialinvoke r0 get innermost delegate internal <NEXT> return $ r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> specialinvoke r9 assert initialization allow <NEXT> r10 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> r10 connection property = r1 <NEXT> r11 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> $ r2 = r11 connection property <NEXT> if $ r2 == null goto label2 <NEXT> r12 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> $ r3 = r12 connection property <NEXT> $ z0 = $ r3 contain key \ `` user\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> $ r7 = r13 connection property <NEXT> $ r8 = $ r7 get property \ `` user\ `` <NEXT> r14 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> r14 set user $ r8 <NEXT> label r15 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> $ r4 = r15 connection property <NEXT> $ z1 = $ r4 contain key \ `` password\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> r16 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> $ r5 = r16 connection property <NEXT> $ r6 = $ r5 get property \ `` password\ `` <NEXT> r17 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> r17 set password $ r6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> specialinvoke r2 assert initialization allow <NEXT> r3 = org apache common dbcp2 cpdsadapter driver adapter c p d s r0 <NEXT> r3 url = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 datasources per user pool data source r0 <NEXT> $ i0 = r1 get num active null <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common dbcp2 delegate database meta data r0 <NEXT> $ r1 = r2 database meta data <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common dbcp2 delegate statement r0 <NEXT> $ z0 = r1 close <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common dbcp2 p stmt key r0 <NEXT> $ r1 = r2 column index <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = org apache common dbcp2 utils message <NEXT> r2 = $ r4 get string r0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return r2 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r5 = new java text message format <NEXT> specialinvoke $ r5 < init > r2 <NEXT> $ r6 = new java lang string buffer <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = $ r5 format r1 $ r6 null <NEXT> $ r8 = $ r7 to string <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common httpclient params http method params r0 <NEXT> $ r1 = r3 get parameter \ `` http protocol uri-charset\ `` <NEXT> r2 = java lang string $ r1 <NEXT> if r2 ! = null goto label1 <NEXT> r2 = \ `` utf-8\ `` <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> label specialinvoke r0 close <NEXT> label r5 = org apache common io input tee input stream r0 <NEXT> $ z0 = r5 close branch <NEXT> if $ z0 == 0 goto label6 <NEXT> r6 = org apache common io input tee input stream r0 <NEXT> $ r2 = r6 branch <NEXT> $ r2 close <NEXT> goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r3 = org apache common io output proxy writer r0 <NEXT> $ r2 = r3 out <NEXT> $ r2 write r1 i0 i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 close <NEXT> r2 = org apache common io output tee output stream r0 <NEXT> $ r1 = r2 branch <NEXT> $ r1 close <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ i0 = org apache common lang array utils index of r0 z0 0 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache common lang builder reflection to string builder to string r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common lang mutable mutable byte r0 <NEXT> $ b0 = r1 value <NEXT> return $ b0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common lang time stop watch r0 <NEXT> $ i0 = r3 run state <NEXT> if $ i0 == 2 goto label1 <NEXT> r4 = org apache common lang time stop watch r0 <NEXT> $ i4 = r4 run state <NEXT> if $ i4 ! = 3 goto label2 <NEXT> label r5 = org apache common lang time stop watch r0 <NEXT> $ l2 = r5 stop time <NEXT> r6 = org apache common lang time stop watch r0 <NEXT> $ l1 = r6 start time <NEXT> $ l3 = $ l2 - $ l1 <NEXT> return $ l3 <NEXT> if $ i4 ! = 3 goto label2 <NEXT> label r7 = org apache common lang time stop watch r0 <NEXT> $ i5 = r7 run state <NEXT> if $ i5 ! = 0 goto label3 <NEXT> return 0l <NEXT> if $ i5 ! = 0 goto label3 <NEXT> label r8 = org apache common lang time stop watch r0 <NEXT> $ i6 = r8 run state <NEXT> if $ i6 ! = 1 goto label4 <NEXT> $ l7 = java lang system current time millis <NEXT> r9 = org apache common lang time stop watch r0 <NEXT> $ l8 = r9 start time <NEXT> $ l9 = $ l7 - $ l8 <NEXT> return $ l9 <NEXT> if $ i6 ! = 1 goto label4 <NEXT> label r2 = new java lang runtime exception <NEXT> specialinvoke r2 < init > \ `` illegal run state have occur \ `` <NEXT> throw r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common lang time stop watch r0 <NEXT> $ i0 = r3 run state <NEXT> if $ i0 == 1 goto label1 <NEXT> r2 = new java lang illegal state exception <NEXT> specialinvoke r2 < init > \ `` stopwatch be not run \ `` <NEXT> throw r2 <NEXT> if $ i0 == 1 goto label1 <NEXT> label $ l1 = java lang system current time millis <NEXT> r4 = org apache common lang time stop watch r0 <NEXT> r4 stop time = $ l1 <NEXT> r5 = org apache common lang time stop watch r0 <NEXT> r5 split state = 11 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> org apache common lang validate not null r0 <NEXT> i1 = 0 <NEXT> goto label3 <NEXT> label $ i0 = lengthof r0 <NEXT> if i1 < $ i0 goto label1 <NEXT> label $ r1 = r0 [ i1 ] <NEXT> if $ r1 ! = null goto label2 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> $ r3 = new java lang string buffer <NEXT> specialinvoke $ r3 < init > \ `` the validated array contain null element at index \ `` <NEXT> $ r4 = $ r3 append i1 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke $ r2 < init > $ r5 <NEXT> throw $ r2 <NEXT> if $ r1 ! = null goto label2 <NEXT> label i1 = i1 + 1 <NEXT> if i1 < $ i0 goto label1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r1 = new java lang illegal argument exception <NEXT> specialinvoke $ r1 < init > \ `` the validated array be empty\ `` <NEXT> throw $ r1 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org apache common log impl log4 j category log r0 <NEXT> $ r5 = r6 category <NEXT> $ r4 = org apache common log impl log4 j category log fqcn <NEXT> $ r3 = org apache log4j level debug <NEXT> $ r5 log $ r4 $ r3 r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org apache common log impl log4 j category log r0 <NEXT> $ r5 = r6 category <NEXT> $ r4 = org apache common log impl log4 j category log fqcn <NEXT> $ r3 = org apache log4j level debug <NEXT> $ r5 log $ r4 $ r3 r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache common log impl log4 j category log r0 <NEXT> $ r4 = r5 category <NEXT> $ r3 = org apache common log impl log4 j category log fqcn <NEXT> $ r2 = org apache log4j level error <NEXT> $ r4 log $ r3 $ r2 r1 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org apache common log impl log4 j category log r0 <NEXT> $ r5 = r6 category <NEXT> $ r4 = org apache common log impl log4 j category log fqcn <NEXT> $ r3 = org apache log4j level error <NEXT> $ r5 log $ r4 $ r3 r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache common log impl log4 j category log r0 <NEXT> $ r4 = r5 category <NEXT> $ r3 = org apache common log impl log4 j category log fqcn <NEXT> $ r2 = org apache log4j level fatal <NEXT> $ r4 log $ r3 $ r2 r1 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org apache common log impl log4 j logger is12 <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = org apache common log impl log4 j logger r0 <NEXT> $ r5 = r9 get logger <NEXT> $ r8 = org apache common log impl log4 j logger fqcn <NEXT> $ r6 = org apache log4j level fatal <NEXT> $ r7 = org apache log4j priority $ r6 <NEXT> r10 = org apache log4j category $ r5 <NEXT> r10 log $ r8 $ r7 r1 null <NEXT> goto label2 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org apache common log impl log4 j logger r0 <NEXT> $ r2 = r11 get logger <NEXT> $ r4 = org apache common log impl log4 j logger fqcn <NEXT> $ r3 = org apache log4j level fatal <NEXT> r12 = org apache log4j category $ r2 <NEXT> r12 log $ r4 $ r3 r1 null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common log impl log kit logger r0 <NEXT> r2 debug r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r2 = new org apache common math analysis binary function $ 8 <NEXT> r3 = org apache common math analysis binary function r0 <NEXT> specialinvoke r2 < init > r3 d0 <NEXT> r4 = org apache common math analysis composable function r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r2 = new org apache common math analysis composable function $ 35 <NEXT> r3 = org apache common math analysis composable function r0 <NEXT> specialinvoke r2 < init > r3 d0 <NEXT> r4 = org apache common math analysis composable function r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r4 = new org apache common math analysis polynomial polynomial function <NEXT> r5 = org apache common math analysis solver laguerre solver r0 <NEXT> $ r2 = r5 p <NEXT> $ r3 = $ r2 get coefficient <NEXT> specialinvoke r4 < init > $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r2 = org apache common math analysis solver laguerre solver r0 <NEXT> $ d3 = r2 relative accuracy <NEXT> $ d4 = r1 ab <NEXT> $ d6 = $ d3 * $ d4 <NEXT> r3 = org apache common math analysis solver laguerre solver r0 <NEXT> $ d5 = r3 absolute accuracy <NEXT> d2 = java lang math max $ d6 $ d5 <NEXT> $ d7 = r1 get real <NEXT> r4 = org apache common math analysis solver laguerre solver r0 <NEXT> $ z0 = r4 be sequence d0 $ d7 d1 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ d8 = r1 get imaginary <NEXT> $ d9 = java lang math ab $ d8 <NEXT> $ b0 = $ d9 cmpg d2 <NEXT> if $ b0 < = 0 goto label1 <NEXT> $ d10 = r1 ab <NEXT> r5 = org apache common math analysis solver laguerre solver r0 <NEXT> $ d11 = r5 function value accuracy <NEXT> $ b1 = $ d10 cmpg $ d11 <NEXT> if $ b1 > 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ b1 > 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> r6 = org apache common math analysis solver univariate real solver impl r0 <NEXT> $ z0 = r6 be sequence d0 d1 d2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r1 = newarray java lang object [ 3 ] <NEXT> $ r2 = java lang double value of d0 <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> $ r3 = java lang double value of d1 <NEXT> $ r1 [ 1 ] = $ r3 <NEXT> $ r4 = java lang double value of d2 <NEXT> $ r1 [ 2 ] = $ r4 <NEXT> $ r5 = org apache common math math runtime exception create illegal argument exception \ `` invalid interval initial value parameter lower= { 0 } initial= { 1 } upper= { 2 } \ <NEXT> throw $ r5 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache common math distribution cauchy distribution impl r0 <NEXT> specialinvoke r1 set scale internal d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r2 = org apache common math distribution chi square distribution impl r0 <NEXT> $ r1 = r2 gamma <NEXT> $ d1 = $ r1 cumulative probability d0 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > 0 goto label1 <NEXT> return 0 0 <NEXT> if i0 > 0 goto label1 <NEXT> label r1 = org apache common math distribution zipf distribution impl r0 <NEXT> $ i1 = r1 number of element <NEXT> if i0 < $ i1 goto label2 <NEXT> return 1 0 <NEXT> if i0 < $ i1 goto label2 <NEXT> label r2 = org apache common math distribution zipf distribution impl r0 <NEXT> $ d0 = r2 exponent <NEXT> r3 = org apache common math distribution zipf distribution impl r0 <NEXT> $ d1 = specialinvoke r3 generalize harmonic i0 $ d0 <NEXT> r4 = org apache common math distribution zipf distribution impl r0 <NEXT> $ i2 = r4 number of element <NEXT> r5 = org apache common math distribution zipf distribution impl r0 <NEXT> $ d2 = r5 exponent <NEXT> r6 = org apache common math distribution zipf distribution impl r0 <NEXT> $ d3 = specialinvoke r6 generalize harmonic $ i2 $ d2 <NEXT> $ d4 = $ d1 $ d3 <NEXT> return $ d4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get measurement <NEXT> d4 = 0 0 <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r2 <NEXT> if i1 > = $ i0 goto label2 <NEXT> $ r3 = r2 [ i1 ] <NEXT> d0 = $ r3 get residual <NEXT> $ d1 = d0 * d0 <NEXT> $ r4 = r2 [ i1 ] <NEXT> $ d2 = $ r4 get weight <NEXT> $ d3 = $ d1 $ d2 <NEXT> d4 = d4 + $ d3 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label return d4 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache common math estimation levenberg marquardt estimator r0 <NEXT> r1 cost relative tolerance = d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common math estimation simple estimation problem r0 <NEXT> $ r2 = r3 parameter <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common math estimation weight measurement r0 <NEXT> r1 ignore = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common math fraction big fraction r0 <NEXT> $ r1 = r2 numerator <NEXT> $ l0 = $ r1 long value <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common math fraction big fraction r0 <NEXT> $ r2 = r4 numerator <NEXT> r5 = org apache common math fraction big fraction r0 <NEXT> $ r1 = r5 denominator <NEXT> $ r3 = $ r2 divide $ r1 <NEXT> $ i0 = $ r3 int value <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common math genetics fix generation count r0 <NEXT> $ i1 = r2 num generation <NEXT> r3 = org apache common math genetics fix generation count r0 <NEXT> $ i0 = r3 max generation <NEXT> if $ i1 > = $ i0 goto label1 <NEXT> r4 = org apache common math genetics fix generation count r0 <NEXT> $ i2 = r4 num generation <NEXT> $ i3 = $ i2 + 1 <NEXT> r5 = org apache common math genetics fix generation count r0 <NEXT> r5 num generation = $ i3 <NEXT> return 0 <NEXT> if $ i1 > = $ i0 goto label1 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache common math linear abstract field matrix r0 <NEXT> $ i0 = r8 get row dimension <NEXT> $ i1 = r1 get row dimension <NEXT> if $ i0 ! = $ i1 goto label1 <NEXT> r9 = org apache common math linear abstract field matrix r0 <NEXT> $ i6 = r9 get column dimension <NEXT> $ i7 = r1 get column dimension <NEXT> if $ i6 == $ i7 goto label2 <NEXT> label $ r2 = newarray java lang object [ 4 ] <NEXT> r10 = org apache common math linear abstract field matrix r0 <NEXT> $ i2 = r10 get row dimension <NEXT> $ r3 = java lang integer value of $ i2 <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> r11 = org apache common math linear abstract field matrix r0 <NEXT> $ i3 = r11 get column dimension <NEXT> $ r4 = java lang integer value of $ i3 <NEXT> $ r2 [ 1 ] = $ r4 <NEXT> $ i4 = r1 get row dimension <NEXT> $ r5 = java lang integer value of $ i4 <NEXT> $ r2 [ 2 ] = $ r5 <NEXT> $ i5 = r1 get column dimension <NEXT> $ r6 = java lang integer value of $ i5 <NEXT> $ r2 [ 3 ] = $ r6 <NEXT> $ r7 = org apache common math math runtime exception create illegal argument exception \ `` { 0 } x { 1 } and { 2 } x { 3 } matrix be not subtraction compatible\ <NEXT> throw $ r7 <NEXT> if $ i6 == $ i7 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common math linear big matrix impl r0 <NEXT> $ i0 = r3 get row dimension <NEXT> $ r1 = org apache common math linear matrix utils create big identity matrix $ i0 <NEXT> r4 = org apache common math linear big matrix impl r0 <NEXT> $ r2 = r4 solve $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = lengthof r1 <NEXT> r2 = newarray java math big decimal [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r2 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r5 = new java math big decimal <NEXT> $ d0 = r1 [ i2 ] <NEXT> specialinvoke r5 < init > $ d0 <NEXT> r2 [ i2 ] = r5 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label r6 = org apache common math linear big matrix impl r0 <NEXT> $ r3 = r6 operate r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache common math linear big matrix impl r0 <NEXT> $ r1 = r5 lu <NEXT> if $ r1 ! = null goto label1 <NEXT> r6 = org apache common math linear big matrix impl r0 <NEXT> r6 lu decompose <NEXT> label r4 = new org apache common math linear big matrix impl <NEXT> r7 = org apache common math linear big matrix impl r0 <NEXT> $ r3 = r7 lu <NEXT> specialinvoke r4 < init > $ r3 <NEXT> r8 = org apache common math linear big matrix r4 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r0 ! = r1 goto label01 <NEXT> return 1 <NEXT> if r0 ! = r1 goto label01 <NEXT> label $ z0 = r1 instanceof org apache common math linear open map real vector <NEXT> if $ z0 ! = 0 goto label02 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label02 <NEXT> label r2 = org apache common math linear open map real vector r1 <NEXT> r7 = org apache common math linear open map real vector r0 <NEXT> $ i1 = r7 virtual size <NEXT> $ i0 = r2 virtual size <NEXT> if $ i1 == $ i0 goto label03 <NEXT> label r8 = org apache common math linear open map real vector r0 <NEXT> $ d0 = r8 epsilon <NEXT> $ l2 = java lang double double to long bit $ d0 <NEXT> $ d1 = r2 epsilon <NEXT> $ l3 = java lang double double to long bit $ d1 <NEXT> $ b4 = $ l2 cmp $ l3 <NEXT> if $ b4 == 0 goto label04 <NEXT> label r9 = org apache common math linear open map real vector r0 <NEXT> $ r3 = r9 entry <NEXT> r5 = $ r3 iterator <NEXT> label $ z1 = r5 have next <NEXT> if $ z1 == 0 goto label07 <NEXT> r5 advance <NEXT> $ i9 = r5 key <NEXT> d4 = r2 get entry $ i9 <NEXT> $ l10 = java lang double double to long bit d4 <NEXT> $ d3 = r5 value <NEXT> $ l11 = java lang double double to long bit $ d3 <NEXT> $ b12 = $ l10 cmp $ l11 <NEXT> if $ b12 == 0 goto label06 <NEXT> label goto label05 <NEXT> if $ z1 == 0 goto label07 <NEXT> label $ r4 = specialinvoke r2 get entry <NEXT> r6 = $ r4 iterator <NEXT> label $ z2 = r6 have next <NEXT> if $ z2 == 0 goto label10 <NEXT> r6 advance <NEXT> d5 = r6 value <NEXT> $ l5 = java lang double double to long bit d5 <NEXT> $ i6 = r6 key <NEXT> r10 = org apache common math linear open map real vector r0 <NEXT> $ d2 = r10 get entry $ i6 <NEXT> $ l7 = java lang double double to long bit $ d2 <NEXT> $ b8 = $ l5 cmp $ l7 <NEXT> if $ b8 == 0 goto label09 <NEXT> label goto label08 <NEXT> if $ z2 == 0 goto label10 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common math math exception r0 <NEXT> $ r1 = r4 argument <NEXT> $ r2 = $ r1 clone <NEXT> $ r3 = java lang object [ ] $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org apache common math math runtime exception $ 7 <NEXT> specialinvoke r3 < init > r0 r1 <NEXT> r4 = java util no such element exception r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = org apache common math ode event event state r0 <NEXT> r4 t0 = d0 <NEXT> r5 = org apache common math ode event event state r0 <NEXT> $ r2 = r5 handler <NEXT> $ d1 = $ r2 g d0 r1 <NEXT> r6 = org apache common math ode event event state r0 <NEXT> r6 g0 = $ d1 <NEXT> r7 = org apache common math ode event event state r0 <NEXT> $ d2 = r7 g0 <NEXT> $ b0 = $ d2 cmpl 0 0 <NEXT> if $ b0 < 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label r8 = org apache common math ode event event state r0 <NEXT> r8 g0 positive = $ z0 <NEXT> return <NEXT> if $ b0 < 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache common math ode sample dummy step interpolator <NEXT> r3 = org apache common math ode sample dummy step interpolator r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = org apache common math ode sample step interpolator r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 < i1 goto label1 <NEXT> $ r2 = newarray java lang object [ 2 ] <NEXT> $ r3 = java lang integer value of i1 <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> $ r4 = java lang integer value of i0 <NEXT> $ r2 [ 1 ] = $ r4 <NEXT> $ r5 = org apache common math math runtime exception create illegal argument exception \ `` upper bound { 0 } must be great than low bound { 1 } \ <NEXT> throw $ r5 <NEXT> if i0 < i1 goto label1 <NEXT> label r6 = org apache common math random random data impl r0 <NEXT> $ r1 = specialinvoke r6 get run <NEXT> d0 = $ r1 next double <NEXT> $ d1 = double i1 <NEXT> $ d5 = d0 * $ d1 <NEXT> $ d3 = 1 0 - d0 <NEXT> $ d2 = double i0 <NEXT> $ d4 = $ d3 * $ d2 <NEXT> $ d6 = $ d5 + $ d4 <NEXT> $ d7 = $ d6 + d0 <NEXT> $ i2 = int $ d7 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 < i1 goto label1 <NEXT> $ r2 = newarray java lang object [ 2 ] <NEXT> $ r3 = java lang integer value of i1 <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> $ r4 = java lang integer value of i0 <NEXT> $ r2 [ 1 ] = $ r4 <NEXT> $ r5 = org apache common math math runtime exception create illegal argument exception \ `` upper bound { 0 } must be great than low bound { 1 } \ <NEXT> throw $ r5 <NEXT> if i0 < i1 goto label1 <NEXT> label r6 = org apache common math random random data impl r0 <NEXT> r1 = specialinvoke r6 get sec run <NEXT> $ d0 = r1 next double <NEXT> $ i2 = i1 - i0 <NEXT> $ i3 = $ i2 + 1 <NEXT> $ d1 = double $ i3 <NEXT> $ d2 = $ d0 * $ d1 <NEXT> $ i4 = int $ d2 <NEXT> $ i5 = i0 + $ i4 <NEXT> return $ i5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org apache common math linear block real matrix <NEXT> specialinvoke r4 < init > r1 <NEXT> r5 = org apache common math stat correlation pearsons correlation r0 <NEXT> r6 = org apache common math linear real matrix r4 <NEXT> $ r3 = r5 compute correlation matrix r6 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> $ b0 = d0 cmpg 0 0 <NEXT> if $ b0 < = 0 goto label1 <NEXT> $ b1 = d0 cmpl 100 0 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label $ r1 = newarray java lang object [ 1 ] <NEXT> $ r2 = java lang double value of d0 <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> $ r3 = org apache common math math runtime exception create illegal argument exception \ `` out of bound quantile value { 0 } must be in 0 100 ] \ <NEXT> throw $ r3 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label r4 = org apache common math stat descriptive rank percentile r0 <NEXT> r4 quantile = d0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> org apache common math stat inference test utils unknown distribution chi square test = r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> d0 = @ parameter2 <NEXT> r3 = org apache common math stat inference t test impl r0 <NEXT> specialinvoke r3 check significance level d0 <NEXT> r4 = org apache common math stat inference t test impl r0 <NEXT> $ d1 = r4 pair t test r1 r2 <NEXT> $ b0 = $ d1 cmpg d0 <NEXT> if $ b0 > = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b0 > = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> d0 = @ parameter2 <NEXT> r3 = org apache common math stat inference t test impl r0 <NEXT> specialinvoke r3 check significance level d0 <NEXT> r4 = org apache common math stat inference t test impl r0 <NEXT> $ d1 = r4 homoscedastic t test r1 r2 <NEXT> $ b0 = $ d1 cmpg d0 <NEXT> if $ b0 > = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b0 > = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = lengthof r1 <NEXT> $ i1 = $ i0 - 1 <NEXT> $ d1 = double $ i1 <NEXT> d0 = 2 0 $ d1 <NEXT> r4 = org apache common math transform fast cosine transformer r0 <NEXT> $ r2 = r4 fct r1 <NEXT> $ r3 = org apache common math transform fast fourier transformer scale array $ r2 d0 <NEXT> return $ r3 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> $ z0 = org apache common math util math utils equal d0 d1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ d3 = d1 - d0 <NEXT> $ d4 = java lang math ab $ d3 <NEXT> $ b0 = $ d4 cmpg d2 <NEXT> if $ b0 > 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ b0 > 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> b0 = @ parameter0 <NEXT> if b0 < 0 goto label1 <NEXT> $ b1 = 1 <NEXT> goto label2 <NEXT> label return $ b1 <NEXT> if b0 < 0 goto label1 <NEXT> label $ b1 = -1 <END>
<BEG> b0 = @ parameter0 <NEXT> if b0 < 0 goto label1 <NEXT> $ b1 = 1 <NEXT> goto label2 <NEXT> label return $ b1 <NEXT> if b0 < 0 goto label1 <NEXT> label $ b1 = -1 <END>
<BEG> b0 = @ parameter0 <NEXT> if b0 < 0 goto label1 <NEXT> $ b1 = 1 <NEXT> goto label2 <NEXT> label return $ b1 <NEXT> if b0 < 0 goto label1 <NEXT> label $ b1 = -1 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ d2 = d0 + 3 141592653589793 <NEXT> $ d3 = $ d2 - d1 <NEXT> $ d4 = $ d3 6 283185307179586 <NEXT> $ d5 = java lang math floor $ d4 <NEXT> $ d6 = 6 283185307179586 * $ d5 <NEXT> $ d7 = d0 - $ d6 <NEXT> return $ d7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> d5 = 0 0 <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r0 <NEXT> if i1 > = $ i0 goto label2 <NEXT> $ d3 = r0 [ i1 ] <NEXT> $ d2 = r1 [ i1 ] <NEXT> d0 = $ d3 - $ d2 <NEXT> $ d4 = d0 * d0 <NEXT> d5 = d5 + $ d4 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label $ d1 = java lang math sqrt d5 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common math util resizable double array r0 <NEXT> $ i0 = r1 num element <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 == 0 goto label1 <NEXT> if i0 == 1 goto label1 <NEXT> $ r4 = newarray java lang object [ 5 ] <NEXT> $ r5 = java lang integer value of i0 <NEXT> $ r4 [ 0 ] = $ r5 <NEXT> $ r6 = java lang integer value of 0 <NEXT> $ r4 [ 1 ] = $ r6 <NEXT> $ r4 [ 2 ] = \ `` multiplicative_mode\ `` <NEXT> $ r7 = java lang integer value of 1 <NEXT> $ r4 [ 3 ] = $ r7 <NEXT> $ r4 [ 4 ] = \ `` additive_mode\ `` <NEXT> $ r8 = org apache common math math runtime exception create illegal argument exception \ `` unsupported expansion mode { 0 } support mode be { 1 } { 2 } and { 3 } { 4 } \ <NEXT> throw $ r8 <NEXT> if i0 == 1 goto label1 <NEXT> label entermonitor r0 <NEXT> label r10 = org apache common math util resizable double array r0 <NEXT> r10 expansion mode = i0 <NEXT> exitmonitor r0 <NEXT> label goto label6 <NEXT> label return <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ z0 = java lang double be na n d0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z2 = java lang double be na n d1 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label $ z1 = org apache common math3 util precision equal d0 d1 1 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z3 = 1 <NEXT> goto label4 <NEXT> label return $ z3 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net bsd r exec client r0 <NEXT> $ r1 = r2 _input_ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r6 = org apache common net char gen u d p client r0 <NEXT> $ r2 = r6 __send packet <NEXT> $ r2 set address r1 <NEXT> r7 = org apache common net char gen u d p client r0 <NEXT> $ r3 = r7 __send packet <NEXT> $ r3 set port i0 <NEXT> r8 = org apache common net char gen u d p client r0 <NEXT> $ r5 = r8 _socket_ <NEXT> r9 = org apache common net char gen u d p client r0 <NEXT> $ r4 = r9 __send packet <NEXT> $ r5 send $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net datagram socket client r0 <NEXT> $ r1 = r2 _socket_ <NEXT> $ i0 = $ r1 get local port <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common net ftp ftp r0 <NEXT> $ i1 = r1 send command i0 null <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net ftp ftp r0 <NEXT> $ i0 = r1 _reply code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net ftp ftp r0 <NEXT> $ i0 = r1 send command 26 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net ftp ftp r0 <NEXT> $ i0 = r1 send command 27 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common net ftp ftp r0 <NEXT> $ i0 = r2 send command 28 r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net ftp ftp r0 <NEXT> $ i0 = r1 send command 31 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net ftp f t p client r0 <NEXT> r1 __data connection mode = 0 <NEXT> r2 = org apache common net ftp f t p client r0 <NEXT> r2 __passive host = null <NEXT> r3 = org apache common net ftp f t p client r0 <NEXT> r3 __passive port = -1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net ftp f t p client r0 <NEXT> $ r1 = specialinvoke r2 __store file stream 15 null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common net ftp f t p client r0 <NEXT> $ r2 = r3 create file list null r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common net ftp f t p client r0 <NEXT> r1 __buffer size = i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org apache common net ftp f t p client config language_code_map <NEXT> r1 = $ r2 get r0 <NEXT> if r1 == null goto label2 <NEXT> $ z0 = r1 instanceof java util locale <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r7 = new java text date format symbol <NEXT> $ r8 = java util locale r1 <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 instanceof java lang string <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 = java lang string r1 <NEXT> $ r6 = org apache common net ftp f t p client config get date format symbols $ r5 <NEXT> return $ r6 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r3 = new java text date format symbol <NEXT> $ r4 = java util locale u <NEXT> specialinvoke $ r3 < init > $ r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net ftp f t p file r0 <NEXT> $ r1 = r2 _user <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net ftp f t p file r0 <NEXT> $ r1 = r2 _link <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net ftp f t p file r0 <NEXT> $ r1 = r2 _raw listing <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r11 = new java io buffer reader <NEXT> r10 = new java io input stream reader <NEXT> specialinvoke r10 < init > r1 r2 <NEXT> specialinvoke r11 < init > r10 <NEXT> r12 = org apache common net ftp f t p file list r0 <NEXT> $ r6 = r12 parser <NEXT> r9 = $ r6 read next entry r11 <NEXT> label if r9 == null goto label2 <NEXT> r13 = org apache common net ftp f t p file list r0 <NEXT> $ r7 = r13 line <NEXT> $ r7 add r9 <NEXT> r14 = org apache common net ftp f t p file list r0 <NEXT> $ r8 = r14 parser <NEXT> r9 = $ r8 read next entry r11 <NEXT> goto label1 <NEXT> label if r9 == null goto label2 <NEXT> label r11 close <NEXT> return <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 < 500 goto label1 <NEXT> if i0 > = 600 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if i0 > = 600 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common net ftp parser configurable f t p file entry parser impl r0 <NEXT> $ r2 = r4 timestamp parser <NEXT> $ r3 = $ r2 parse timestamp r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ z0 = org apache common net io from net a s c i i input stream _no conversion require <NEXT> if $ z0 == 0 goto label1 <NEXT> $ i1 = specialinvoke r0 read <NEXT> return $ i1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r1 = org apache common net io from net a s c i i input stream r0 <NEXT> $ i0 = specialinvoke r1 __read <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache common net nntp new group or news query r0 <NEXT> $ r2 = r9 __distributions <NEXT> if $ r2 == null goto label1 <NEXT> r10 = org apache common net nntp new group or news query r0 <NEXT> $ r6 = r10 __distributions <NEXT> $ r6 append 44 <NEXT> goto label2 <NEXT> label r12 = org apache common net nntp new group or news query r0 <NEXT> $ r4 = r12 __distributions <NEXT> $ r4 append r1 <NEXT> return <NEXT> if $ r2 == null goto label1 <NEXT> label r8 = new java lang string buffer <NEXT> specialinvoke r8 < init > <NEXT> r11 = org apache common net nntp new group or news query r0 <NEXT> r11 __distributions = r8 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net nntp nntp r0 <NEXT> $ i0 = r1 send command 12 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net nntp n n t p client r0 <NEXT> $ r1 = r2 retrieve article header null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net nntp n n t p client r0 <NEXT> $ i0 = r1 get reply <NEXT> $ z0 = org apache common net nntp n n t p reply be positive completion $ i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net nntp simple n n t p header r0 <NEXT> $ r1 = r2 __from <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net ntp time stamp r0 <NEXT> $ l0 = r1 ntp time <NEXT> $ l1 = $ l0 > > > 32 <NEXT> $ l2 = $ l1 & 4294967295l <NEXT> return $ l2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net ntp time stamp r0 <NEXT> $ l2 = r1 ntp time <NEXT> r2 = org apache common net ntp time stamp r0 <NEXT> $ l0 = r2 ntp time <NEXT> $ l1 = $ l0 > > > 32 <NEXT> $ l3 = $ l2 ^ $ l1 <NEXT> $ i4 = int $ l3 <NEXT> return $ i4 <END>
<BEG> r0 = @ this <NEXT> r19 = new java lang string buffer <NEXT> specialinvoke r19 < init > <NEXT> r19 append 60 <NEXT> r20 = org apache common net smtp relay path r0 <NEXT> $ r5 = r20 _path <NEXT> r2 = $ r5 element <NEXT> $ z0 = r2 have more element <NEXT> if $ z0 == 0 goto label3 <NEXT> r19 append 64 <NEXT> $ r11 = r2 next element <NEXT> $ r12 = java lang string $ r11 <NEXT> r19 append $ r12 <NEXT> label $ z1 = r2 have more element <NEXT> if $ z1 == 0 goto label2 <NEXT> r19 append \ <NEXT> $ r16 = r2 next element <NEXT> $ r17 = java lang string $ r16 <NEXT> r19 append $ r17 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r19 append 58 <NEXT> label r21 = org apache common net smtp relay path r0 <NEXT> $ r6 = r21 _email address <NEXT> r19 append $ r6 <NEXT> r19 append 62 <NEXT> $ r9 = r19 to string <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net smtp smtp r0 <NEXT> specialinvoke r1 __get reply <NEXT> r2 = org apache common net smtp smtp r0 <NEXT> $ i0 = r2 _reply code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net smtp s m t p client r0 <NEXT> $ i0 = r1 rset <NEXT> $ z0 = org apache common net smtp s m t p reply be positive completion $ i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net socket client r0 <NEXT> $ i0 = r1 _default port_ <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common net tftp tftp r0 <NEXT> r1 __receive buffer = null <NEXT> r2 = org apache common net tftp tftp r0 <NEXT> r2 __receive datagram = null <NEXT> r3 = org apache common net tftp tftp r0 <NEXT> r3 _send buffer = null <NEXT> r4 = org apache common net tftp tftp r0 <NEXT> r4 __send datagram = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache common net tftp tftp r0 <NEXT> $ r2 = r4 _socket_ <NEXT> $ r3 = r1 new datagram <NEXT> $ r2 send $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common net tftp t f t p data packet r0 <NEXT> r1 _block number = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common net ftp f t p client r0 <NEXT> $ i0 = r3 mdtm r1 <NEXT> $ z0 = org apache common net ftp f t p reply be positive completion $ i0 <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = org apache common net ftp f t p client r0 <NEXT> $ r2 = r4 get reply string <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r4 = org apache common net ftp f t p s client r0 <NEXT> $ r1 = r4 _socket_ <NEXT> $ z0 = $ r1 instanceof javax net ssl s s l socket <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org apache common net ftp f t p s client r0 <NEXT> $ r2 = r5 _socket_ <NEXT> $ r3 = javax net ssl s s l socket $ r2 <NEXT> $ z1 = $ r3 get use client mode <NEXT> return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common net socket client r0 <NEXT> r1 send buffer size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common net ftp f t p client r0 <NEXT> r2 __copy stream listener = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org apache common net imap imap r0 <NEXT> $ i0 = r3 send command r1 r2 <NEXT> $ z0 = org apache common net imap i m a p reply be success $ i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = org apache common net imap i m a p command lsub <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r5 = r9 append r1 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r7 = $ r6 append r2 <NEXT> $ r8 = $ r7 to string <NEXT> r10 = org apache common net imap i m a p client r0 <NEXT> $ z0 = r10 do command $ r4 $ r8 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get i m a p command <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common net nntp article iterator r0 <NEXT> $ r1 = r2 next <NEXT> return $ r1 <END>
<BEG> $ r0 = org apache common net util trust manager utils accept_all <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common pool impl soft reference object pool r0 <NEXT> $ i0 = r1 _num active <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r10 = org apache common pool impl stack key object pool r0 <NEXT> $ r4 = r10 _pools <NEXT> $ r5 = $ r4 key set <NEXT> r1 = $ r5 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> r2 = r1 next <NEXT> r11 = org apache common pool impl stack key object pool r0 <NEXT> $ r8 = r11 _pools <NEXT> $ r9 = $ r8 get r2 <NEXT> r3 = java util stack $ r9 <NEXT> r12 = org apache common pool impl stack key object pool r0 <NEXT> specialinvoke r12 destroy stack r2 r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r13 = org apache common pool impl stack key object pool r0 <NEXT> r13 _tot idle = 0 <NEXT> r14 = org apache common pool impl stack key object pool r0 <NEXT> $ r6 = r14 _pools <NEXT> $ r6 clear <NEXT> r15 = org apache common pool impl stack key object pool r0 <NEXT> $ r7 = r15 _active count <NEXT> $ r7 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common pool impl stack object pool r0 <NEXT> $ i0 = r1 _max sleep <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ l1 = long i0 <NEXT> $ r1 = java time duration of second $ l1 <NEXT> r2 = org apache common pool2 impl abandon config r0 <NEXT> r2 set remove abandon timeout $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache common pool2 impl base generic object pool r0 <NEXT> $ z0 = r1 lifo <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common pool2 impl base generic object pool r0 <NEXT> $ r1 = r2 return count <NEXT> $ l0 = $ r1 get <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache common pool2 impl base generic object pool r0 <NEXT> r2 eviction policy = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache common pool2 impl base generic object pool r0 <NEXT> r1 max total = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache common pool2 impl base generic object pool r0 <NEXT> r1 test on borrow = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache common pool2 impl base generic object pool r0 <NEXT> r3 time between eviction run = r1 <NEXT> r4 = org apache common pool2 impl base generic object pool r0 <NEXT> $ r2 = r4 time between eviction run <NEXT> r5 = org apache common pool2 impl base generic object pool r0 <NEXT> r5 start evictor $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache common pool2 impl generic object pool r0 <NEXT> $ r1 = r2 factory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache common pool2 impl link block deque r0 <NEXT> $ r3 = r9 lock <NEXT> $ r3 lock <NEXT> label r10 = org apache common pool2 impl link block deque r0 <NEXT> r8 = r10 first <NEXT> label if r8 == null goto label3 <NEXT> r8 item = null <NEXT> r1 = r8 next <NEXT> r8 prev = null <NEXT> r8 next = null <NEXT> r8 = r1 <NEXT> goto label2 <NEXT> label if r8 == null goto label3 <NEXT> label r11 = org apache common pool2 impl link block deque r0 <NEXT> r11 last = null <NEXT> r12 = org apache common pool2 impl link block deque r0 <NEXT> r12 first = null <NEXT> r13 = org apache common pool2 impl link block deque r0 <NEXT> r13 count = 0 <NEXT> r14 = org apache common pool2 impl link block deque r0 <NEXT> $ r4 = r14 not full <NEXT> $ r4 signal all <NEXT> label r15 = org apache common pool2 impl link block deque r0 <NEXT> $ r5 = r15 lock <NEXT> $ r5 unlock <NEXT> goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache common pool2 impl pool soft reference r0 <NEXT> $ r1 = r3 reference <NEXT> $ r2 = $ r1 get <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache common text lookup property string lookup instance <NEXT> r2 = org apache common text lookup string lookup $ r1 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new com github mustachejava function bundle function $ pre translate func <NEXT> specialinvoke r3 < init > r0 r1 0 null <NEXT> r4 = java util function function r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = com ning compress lzf l z f output stream r0 <NEXT> $ z0 = r1 _cfg finish block on flush <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = com googlecode concurrenttrees solver l c substring solver r0 <NEXT> $ r1 = r3 suffix tree <NEXT> $ r2 = $ r1 get long common substring <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = com typesafe config config parse option r0 <NEXT> $ r2 = r8 syntax <NEXT> if $ r2 ! = r1 goto label1 <NEXT> r9 = com typesafe config config parse option r0 <NEXT> return r9 <NEXT> if $ r2 ! = r1 goto label1 <NEXT> label r7 = new com typesafe config config parse option <NEXT> r10 = com typesafe config config parse option r0 <NEXT> $ r6 = r10 origin description <NEXT> r11 = com typesafe config config parse option r0 <NEXT> $ z0 = r11 allow miss <NEXT> r12 = com typesafe config config parse option r0 <NEXT> $ r5 = r12 includer <NEXT> r13 = com typesafe config config parse option r0 <NEXT> $ r4 = r13 class loader <NEXT> specialinvoke r7 < init > r1 $ r6 $ z0 $ r5 $ r4 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r7 = com typesafe config config parse option r0 <NEXT> $ z1 = r7 allow miss <NEXT> if $ z1 ! = z0 goto label1 <NEXT> r8 = com typesafe config config parse option r0 <NEXT> return r8 <NEXT> if $ z1 ! = z0 goto label1 <NEXT> label r6 = new com typesafe config config parse option <NEXT> r9 = com typesafe config config parse option r0 <NEXT> $ r5 = r9 syntax <NEXT> r10 = com typesafe config config parse option r0 <NEXT> $ r4 = r10 origin description <NEXT> r11 = com typesafe config config parse option r0 <NEXT> $ r3 = r11 includer <NEXT> r12 = com typesafe config config parse option r0 <NEXT> $ r2 = r12 class loader <NEXT> specialinvoke r6 < init > $ r5 $ r4 z0 $ r3 $ r2 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = com typesafe config config render option r0 <NEXT> $ z1 = r3 origin comment <NEXT> if z0 ! = $ z1 goto label1 <NEXT> r4 = com typesafe config config render option r0 <NEXT> return r4 <NEXT> if z0 ! = $ z1 goto label1 <NEXT> label r2 = new com typesafe config config render option <NEXT> r5 = com typesafe config config render option r0 <NEXT> $ z4 = r5 comment <NEXT> r6 = com typesafe config config render option r0 <NEXT> $ z3 = r6 format <NEXT> r7 = com typesafe config config render option r0 <NEXT> $ z2 = r7 json <NEXT> specialinvoke r2 < init > z0 $ z4 $ z3 $ z2 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r7 = com typesafe config impl abstract config object r0 <NEXT> $ r3 = com typesafe config impl abstract config object peek path r7 r1 null <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = cucumber api data table r0 <NEXT> $ r2 = r4 table converter <NEXT> r5 = cucumber api data table r0 <NEXT> $ r3 = $ r2 to list r5 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = newarray java lang class [ 1 ] <NEXT> $ r4 [ 0 ] = r2 <NEXT> r7 = new cucumber runtime runtime option $ 1 <NEXT> r8 = cucumber runtime runtime option r0 <NEXT> specialinvoke r7 < init > r8 r2 <NEXT> r9 = java lang reflect invocation handler r7 <NEXT> r3 = java lang reflect proxy new proxy instance r1 $ r4 r9 <NEXT> $ r6 = r2 cast r3 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r6 = new java lang string builder <NEXT> specialinvoke $ r6 < init > <NEXT> $ r6 append \ `` < \ `` <NEXT> $ r6 append r1 <NEXT> if r2 == null goto label1 <NEXT> $ r6 append \ `` class=\\\ `` \ `` <NEXT> $ r6 append r2 <NEXT> $ r6 append \ `` \\\ `` \ `` <NEXT> label $ r6 append \ `` > \ `` <NEXT> r4 = $ r6 to string <NEXT> $ i0 = $ r6 length <NEXT> $ r6 delete 0 $ i0 <NEXT> $ r6 append \ `` < \ `` <END>
<BEG> r0 = @ this <NEXT> r4 = org apache curator curator zookeeper client r0 <NEXT> $ r1 = r4 retry policy <NEXT> $ r2 = $ r1 get <NEXT> $ r3 = org apache curator retry policy $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache curator ensemble exhibitor exhibitor ensemble provider r0 <NEXT> $ r2 = r4 exhibitor <NEXT> $ r2 set r1 <NEXT> r5 = org apache curator ensemble exhibitor exhibitor ensemble provider r0 <NEXT> $ r3 = r5 master exhibitor <NEXT> $ r3 set r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache curator utils ensure path r0 <NEXT> $ r1 = r2 path <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> org apache curator utils path utils validate path r0 <NEXT> i0 = r0 last index of \ `` \ `` <NEXT> if i0 > = 0 goto label1 <NEXT> $ r6 = new org apache curator utils z k paths $ path and node <NEXT> specialinvoke $ r6 < init > r0 \ `` \ `` <NEXT> return $ r6 <NEXT> if i0 > = 0 goto label1 <NEXT> label $ i1 = i0 + 1 <NEXT> $ i2 = r0 length <NEXT> if $ i1 < $ i2 goto label2 <NEXT> $ r5 = new org apache curator utils z k paths $ path and node <NEXT> specialinvoke $ r5 < init > \ `` \ <NEXT> return $ r5 <NEXT> if $ i1 < $ i2 goto label2 <NEXT> label $ i3 = i0 + 1 <NEXT> r1 = r0 substring $ i3 <NEXT> if i0 < = 0 goto label3 <NEXT> $ r7 = r0 substring 0 i0 <NEXT> goto label4 <NEXT> label $ r4 = new org apache curator utils z k paths $ path and node <NEXT> specialinvoke $ r4 < init > $ r7 r1 <NEXT> return $ r4 <NEXT> if i0 < = 0 goto label3 <NEXT> label $ r7 = \ `` \ `` <END>
<BEG> r0 = @ this <NEXT> r1 = org apache curator framework recipes barrier distribute double barrier r0 <NEXT> r1 leave -1l null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache curator framework recipe cache node cache r0 <NEXT> r1 start 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = java lang thread current thread <NEXT> r30 = org apache curator framework recipe lock inter process mutex r0 <NEXT> $ r4 = r30 thread data <NEXT> $ r5 = $ r4 get r1 <NEXT> r2 = org apache curator framework recipe lock inter process mutex $ lock data $ r5 <NEXT> if r2 ! = null goto label1 <NEXT> r27 = new java lang illegal monitor state exception <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r19 = r26 append \ `` you do not own the lock \ `` <NEXT> r31 = org apache curator framework recipe lock inter process mutex r0 <NEXT> $ r20 = r31 base path <NEXT> $ r21 = $ r19 append $ r20 <NEXT> $ r22 = $ r21 to string <NEXT> specialinvoke r27 < init > $ r22 <NEXT> throw r27 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r6 = r2 lock count <NEXT> i0 = $ r6 decrement and get <NEXT> if i0 < = 0 goto label2 <NEXT> return <NEXT> if i0 < = 0 goto label2 <NEXT> label if i0 > = 0 goto label3 <NEXT> r29 = new java lang illegal monitor state exception <NEXT> r28 = new java lang string builder <NEXT> specialinvoke r28 < init > <NEXT> $ r13 = r28 append \ `` lock count have go negative for lock \ `` <NEXT> r32 = org apache curator framework recipe lock inter process mutex r0 <NEXT> $ r14 = r32 base path <NEXT> $ r15 = $ r13 append $ r14 <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke r29 < init > $ r16 <NEXT> throw r29 <NEXT> label if i0 > = 0 goto label3 <NEXT> label r33 = org apache curator framework recipe lock inter process mutex r0 <NEXT> $ r8 = r33 internals <NEXT> $ r7 = r2 lock path <NEXT> $ r8 release lock $ r7 <NEXT> label r34 = org apache curator framework recipe lock inter process mutex r0 <NEXT> $ r9 = r34 thread data <NEXT> $ r9 remove r1 <NEXT> goto label7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache curator framework recipe lock inter process read write lock r0 <NEXT> $ r1 = r2 write mutex <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com lmax disruptor collection histogram r0 <NEXT> $ l0 = r1 get upper bound for factor 0 99 <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com lmax disruptor dsl event handler group r0 <NEXT> $ r2 = r3 handle event with r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = com lmax disruptor dsl event handler group r0 <NEXT> $ r1 = r5 disruptor <NEXT> $ r2 = $ r1 get ring buffer <NEXT> r6 = com lmax disruptor dsl event handler group r0 <NEXT> $ r3 = r6 sequence <NEXT> $ r4 = $ r2 new barrier $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = com lmax disruptor sequence group sequence_updater <NEXT> $ r3 = newarray com lmax disruptor sequence [ 1 ] <NEXT> $ r3 [ 0 ] = r2 <NEXT> com lmax disruptor sequence group add sequence r0 $ r4 r1 $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org dom4j util indexed element r0 <NEXT> r1 = r2 create index <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org dom4j util indexed element r0 <NEXT> r1 = r2 create index <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org easymock easy mock create nice control <NEXT> $ r2 = $ r1 create mock r0 <NEXT> return $ r2 <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> org easymock internal last control report and 2 <NEXT> return 0 <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> org easymock internal last control report and 2 <NEXT> return 0 <END>
<BEG> z0 = @ parameter0 <NEXT> org easymock internal last control report not <NEXT> return 0 <END>
<BEG> z0 = @ parameter0 <NEXT> r2 = new org easymock internal matcher equal <NEXT> $ r1 = java lang boolean value of z0 <NEXT> specialinvoke r2 < init > $ r1 <NEXT> r3 = org easymock i argument matcher r2 <NEXT> org easymock easy mock report matcher r3 <NEXT> return 0 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r3 = new org easymock internal matcher equal with delta <NEXT> $ r1 = java lang double value of d0 <NEXT> $ r2 = java lang double value of d1 <NEXT> specialinvoke r3 < init > $ r1 $ r2 <NEXT> r4 = org easymock i argument matcher r3 <NEXT> org easymock easy mock report matcher r4 <NEXT> return 0 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r2 = r0 [ i1 ] <NEXT> $ r3 = org easymock easy mock get control r2 <NEXT> $ r3 replay <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org easymock mock control r0 <NEXT> $ r1 = r2 ctrl <NEXT> $ r1 replay <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org easymock mock control r0 <NEXT> $ r2 = specialinvoke r5 expect last call \ `` method call on the mock need before set return value\ `` <NEXT> $ r3 = $ r2 and return r1 <NEXT> $ r3 once <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org easymock mock control r0 <NEXT> $ r1 = specialinvoke r3 expect last call \ `` method call on the mock need before set void callable\ `` <NEXT> $ r1 once <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r5 = org easymock mock control r0 <NEXT> $ r2 = specialinvoke r5 expect last call \ `` method call on the mock need before set throwable\ `` <NEXT> $ r3 = $ r2 and throw r1 <NEXT> $ r3 time i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org easymock mock control r0 <NEXT> $ r2 = r3 ctrl <NEXT> $ r2 set legacy default throwable r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org easymock mock control r0 <NEXT> $ r2 = r3 ctrl <NEXT> $ r2 set legacy default return value r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r4 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ i1 = r4 default nullness <NEXT> $ i2 = $ i1 & 256 <NEXT> if $ i2 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label r5 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> r5 next be default location = $ z2 <NEXT> r6 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> r6 next be type bound = 1 <NEXT> r7 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ z1 = r7 be empty <NEXT> if $ z1 == 0 goto label3 <NEXT> r8 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ l4 = r8 match <NEXT> r9 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ i3 = r9 path ptr <NEXT> r10 = org eclipse jdt internal compiler classfmt non null default aware type annotation walker r0 <NEXT> $ r2 = r10 restrict $ l4 $ i3 <NEXT> return $ r2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ r1 = specialinvoke r0 to type parameter bound z0 i0 <NEXT> return $ r1 <NEXT> if $ i2 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = lengthof r1 <NEXT> r2 = newarray byte [ $ i0 ] <NEXT> i6 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i6 > = $ i1 goto label2 <NEXT> $ i2 = lengthof r1 <NEXT> $ i3 = $ i2 - 1 <NEXT> $ i4 = $ i3 - i6 <NEXT> $ b5 = r1 [ $ i4 ] <NEXT> r2 [ i6 ] = $ b5 <NEXT> i6 = i6 + 1 <NEXT> goto label1 <NEXT> if i6 > = $ i1 goto label2 <NEXT> label $ r3 = new java math big integer <NEXT> specialinvoke $ r3 < init > 1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = net i2p crypto eddsa math ed25519 ed25519 field element r1 <NEXT> r2 = $ r4 t <NEXT> $ i122 = r2 [ 1 ] <NEXT> i0 = 19 * $ i122 <NEXT> $ i123 = r2 [ 2 ] <NEXT> i1 = 19 * $ i123 <NEXT> $ i124 = r2 [ 3 ] <NEXT> i2 = 19 * $ i124 <NEXT> $ i125 = r2 [ 4 ] <NEXT> i3 = 19 * $ i125 <NEXT> $ i126 = r2 [ 5 ] <NEXT> i4 = 19 * $ i126 <NEXT> $ i127 = r2 [ 6 ] <NEXT> i5 = 19 * $ i127 <NEXT> $ i128 = r2 [ 7 ] <NEXT> i6 = 19 * $ i128 <NEXT> $ i129 = r2 [ 8 ] <NEXT> i7 = 19 * $ i129 <NEXT> $ i130 = r2 [ 9 ] <NEXT> i8 = 19 * $ i130 <NEXT> r88 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r5 = r88 t <NEXT> $ i131 = $ r5 [ 1 ] <NEXT> i9 = 2 * $ i131 <NEXT> r89 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r6 = r89 t <NEXT> $ i132 = $ r6 [ 3 ] <NEXT> i10 = 2 * $ i132 <NEXT> r90 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r7 = r90 t <NEXT> $ i133 = $ r7 [ 5 ] <NEXT> i11 = 2 * $ i133 <NEXT> r91 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r8 = r91 t <NEXT> $ i134 = $ r8 [ 7 ] <NEXT> i12 = 2 * $ i134 <NEXT> r92 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r9 = r92 t <NEXT> $ i135 = $ r9 [ 9 ] <NEXT> i13 = 2 * $ i135 <NEXT> r93 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r10 = r93 t <NEXT> $ i136 = $ r10 [ 0 ] <NEXT> $ l139 = long $ i136 <NEXT> $ i137 = r2 [ 0 ] <NEXT> $ l138 = long $ i137 <NEXT> l14 = $ l139 * $ l138 <NEXT> r94 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r11 = r94 t <NEXT> $ i140 = $ r11 [ 0 ] <NEXT> $ l143 = long $ i140 <NEXT> $ i141 = r2 [ 1 ] <NEXT> $ l142 = long $ i141 <NEXT> l15 = $ l143 * $ l142 <NEXT> r95 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r12 = r95 t <NEXT> $ i144 = $ r12 [ 0 ] <NEXT> $ l147 = long $ i144 <NEXT> $ i145 = r2 [ 2 ] <NEXT> $ l146 = long $ i145 <NEXT> l16 = $ l147 * $ l146 <NEXT> r96 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r13 = r96 t <NEXT> $ i148 = $ r13 [ 0 ] <NEXT> $ l151 = long $ i148 <NEXT> $ i149 = r2 [ 3 ] <NEXT> $ l150 = long $ i149 <NEXT> l17 = $ l151 * $ l150 <NEXT> r97 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r14 = r97 t <NEXT> $ i152 = $ r14 [ 0 ] <NEXT> $ l155 = long $ i152 <NEXT> $ i153 = r2 [ 4 ] <NEXT> $ l154 = long $ i153 <NEXT> l18 = $ l155 * $ l154 <NEXT> r98 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r15 = r98 t <NEXT> $ i156 = $ r15 [ 0 ] <NEXT> $ l159 = long $ i156 <NEXT> $ i157 = r2 [ 5 ] <NEXT> $ l158 = long $ i157 <NEXT> l19 = $ l159 * $ l158 <NEXT> r99 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r16 = r99 t <NEXT> $ i160 = $ r16 [ 0 ] <NEXT> $ l163 = long $ i160 <NEXT> $ i161 = r2 [ 6 ] <NEXT> $ l162 = long $ i161 <NEXT> l20 = $ l163 * $ l162 <NEXT> r100 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r17 = r100 t <NEXT> $ i164 = $ r17 [ 0 ] <NEXT> $ l167 = long $ i164 <NEXT> $ i165 = r2 [ 7 ] <NEXT> $ l166 = long $ i165 <NEXT> l21 = $ l167 * $ l166 <NEXT> r101 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r18 = r101 t <NEXT> $ i168 = $ r18 [ 0 ] <NEXT> $ l171 = long $ i168 <NEXT> $ i169 = r2 [ 8 ] <NEXT> $ l170 = long $ i169 <NEXT> l22 = $ l171 * $ l170 <NEXT> r102 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r19 = r102 t <NEXT> $ i172 = $ r19 [ 0 ] <NEXT> $ l175 = long $ i172 <NEXT> $ i173 = r2 [ 9 ] <NEXT> $ l174 = long $ i173 <NEXT> l23 = $ l175 * $ l174 <NEXT> r103 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r20 = r103 t <NEXT> $ i176 = $ r20 [ 1 ] <NEXT> $ l179 = long $ i176 <NEXT> $ i177 = r2 [ 0 ] <NEXT> $ l178 = long $ i177 <NEXT> l24 = $ l179 * $ l178 <NEXT> $ l182 = long i9 <NEXT> $ i180 = r2 [ 1 ] <NEXT> $ l181 = long $ i180 <NEXT> l25 = $ l182 * $ l181 <NEXT> r104 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r21 = r104 t <NEXT> $ i183 = $ r21 [ 1 ] <NEXT> $ l186 = long $ i183 <NEXT> $ i184 = r2 [ 2 ] <NEXT> $ l185 = long $ i184 <NEXT> l26 = $ l186 * $ l185 <NEXT> $ l189 = long i9 <NEXT> $ i187 = r2 [ 3 ] <NEXT> $ l188 = long $ i187 <NEXT> l27 = $ l189 * $ l188 <NEXT> r105 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r22 = r105 t <NEXT> $ i190 = $ r22 [ 1 ] <NEXT> $ l193 = long $ i190 <NEXT> $ i191 = r2 [ 4 ] <NEXT> $ l192 = long $ i191 <NEXT> l28 = $ l193 * $ l192 <NEXT> $ l196 = long i9 <NEXT> $ i194 = r2 [ 5 ] <NEXT> $ l195 = long $ i194 <NEXT> l29 = $ l196 * $ l195 <NEXT> r106 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r23 = r106 t <NEXT> $ i197 = $ r23 [ 1 ] <NEXT> $ l200 = long $ i197 <NEXT> $ i198 = r2 [ 6 ] <NEXT> $ l199 = long $ i198 <NEXT> l30 = $ l200 * $ l199 <NEXT> $ l203 = long i9 <NEXT> $ i201 = r2 [ 7 ] <NEXT> $ l202 = long $ i201 <NEXT> l31 = $ l203 * $ l202 <NEXT> r107 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r24 = r107 t <NEXT> $ i204 = $ r24 [ 1 ] <NEXT> $ l207 = long $ i204 <NEXT> $ i205 = r2 [ 8 ] <NEXT> $ l206 = long $ i205 <NEXT> l32 = $ l207 * $ l206 <NEXT> $ l209 = long i9 <NEXT> $ l208 = long i8 <NEXT> l33 = $ l209 * $ l208 <NEXT> r108 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r25 = r108 t <NEXT> $ i210 = $ r25 [ 2 ] <NEXT> $ l213 = long $ i210 <NEXT> $ i211 = r2 [ 0 ] <NEXT> $ l212 = long $ i211 <NEXT> l34 = $ l213 * $ l212 <NEXT> r109 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r26 = r109 t <NEXT> $ i214 = $ r26 [ 2 ] <NEXT> $ l217 = long $ i214 <NEXT> $ i215 = r2 [ 1 ] <NEXT> $ l216 = long $ i215 <NEXT> l35 = $ l217 * $ l216 <NEXT> r110 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r27 = r110 t <NEXT> $ i218 = $ r27 [ 2 ] <NEXT> $ l221 = long $ i218 <NEXT> $ i219 = r2 [ 2 ] <NEXT> $ l220 = long $ i219 <NEXT> l36 = $ l221 * $ l220 <NEXT> r111 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r28 = r111 t <NEXT> $ i222 = $ r28 [ 2 ] <NEXT> $ l225 = long $ i222 <NEXT> $ i223 = r2 [ 3 ] <NEXT> $ l224 = long $ i223 <NEXT> l37 = $ l225 * $ l224 <NEXT> r112 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r29 = r112 t <NEXT> $ i226 = $ r29 [ 2 ] <NEXT> $ l229 = long $ i226 <NEXT> $ i227 = r2 [ 4 ] <NEXT> $ l228 = long $ i227 <NEXT> l38 = $ l229 * $ l228 <NEXT> r113 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r30 = r113 t <NEXT> $ i230 = $ r30 [ 2 ] <NEXT> $ l233 = long $ i230 <NEXT> $ i231 = r2 [ 5 ] <NEXT> $ l232 = long $ i231 <NEXT> l39 = $ l233 * $ l232 <NEXT> r114 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r31 = r114 t <NEXT> $ i234 = $ r31 [ 2 ] <NEXT> $ l237 = long $ i234 <NEXT> $ i235 = r2 [ 6 ] <NEXT> $ l236 = long $ i235 <NEXT> l40 = $ l237 * $ l236 <NEXT> r115 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r32 = r115 t <NEXT> $ i238 = $ r32 [ 2 ] <NEXT> $ l241 = long $ i238 <NEXT> $ i239 = r2 [ 7 ] <NEXT> $ l240 = long $ i239 <NEXT> l41 = $ l241 * $ l240 <NEXT> r116 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r33 = r116 t <NEXT> $ i242 = $ r33 [ 2 ] <NEXT> $ l244 = long $ i242 <NEXT> $ l243 = long i7 <NEXT> l42 = $ l244 * $ l243 <NEXT> r117 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r34 = r117 t <NEXT> $ i245 = $ r34 [ 2 ] <NEXT> $ l247 = long $ i245 <NEXT> $ l246 = long i8 <NEXT> l43 = $ l247 * $ l246 <NEXT> r118 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r35 = r118 t <NEXT> $ i248 = $ r35 [ 3 ] <NEXT> $ l251 = long $ i248 <NEXT> $ i249 = r2 [ 0 ] <NEXT> $ l250 = long $ i249 <NEXT> l44 = $ l251 * $ l250 <NEXT> $ l254 = long i10 <NEXT> $ i252 = r2 [ 1 ] <NEXT> $ l253 = long $ i252 <NEXT> l45 = $ l254 * $ l253 <NEXT> r119 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r36 = r119 t <NEXT> $ i255 = $ r36 [ 3 ] <NEXT> $ l258 = long $ i255 <NEXT> $ i256 = r2 [ 2 ] <NEXT> $ l257 = long $ i256 <NEXT> l46 = $ l258 * $ l257 <NEXT> $ l261 = long i10 <NEXT> $ i259 = r2 [ 3 ] <NEXT> $ l260 = long $ i259 <NEXT> l47 = $ l261 * $ l260 <NEXT> r120 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r37 = r120 t <NEXT> $ i262 = $ r37 [ 3 ] <NEXT> $ l265 = long $ i262 <NEXT> $ i263 = r2 [ 4 ] <NEXT> $ l264 = long $ i263 <NEXT> l48 = $ l265 * $ l264 <NEXT> $ l268 = long i10 <NEXT> $ i266 = r2 [ 5 ] <NEXT> $ l267 = long $ i266 <NEXT> l49 = $ l268 * $ l267 <NEXT> r121 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r38 = r121 t <NEXT> $ i269 = $ r38 [ 3 ] <NEXT> $ l272 = long $ i269 <NEXT> $ i270 = r2 [ 6 ] <NEXT> $ l271 = long $ i270 <NEXT> l50 = $ l272 * $ l271 <NEXT> $ l274 = long i10 <NEXT> $ l273 = long i6 <NEXT> l51 = $ l274 * $ l273 <NEXT> r122 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r39 = r122 t <NEXT> $ i275 = $ r39 [ 3 ] <NEXT> $ l277 = long $ i275 <NEXT> $ l276 = long i7 <NEXT> l52 = $ l277 * $ l276 <NEXT> $ l279 = long i10 <NEXT> $ l278 = long i8 <NEXT> l53 = $ l279 * $ l278 <NEXT> r123 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r40 = r123 t <NEXT> $ i280 = $ r40 [ 4 ] <NEXT> $ l283 = long $ i280 <NEXT> $ i281 = r2 [ 0 ] <NEXT> $ l282 = long $ i281 <NEXT> l54 = $ l283 * $ l282 <NEXT> r124 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r41 = r124 t <NEXT> $ i284 = $ r41 [ 4 ] <NEXT> $ l287 = long $ i284 <NEXT> $ i285 = r2 [ 1 ] <NEXT> $ l286 = long $ i285 <NEXT> l55 = $ l287 * $ l286 <NEXT> r125 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r42 = r125 t <NEXT> $ i288 = $ r42 [ 4 ] <NEXT> $ l291 = long $ i288 <NEXT> $ i289 = r2 [ 2 ] <NEXT> $ l290 = long $ i289 <NEXT> l56 = $ l291 * $ l290 <NEXT> r126 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r43 = r126 t <NEXT> $ i292 = $ r43 [ 4 ] <NEXT> $ l295 = long $ i292 <NEXT> $ i293 = r2 [ 3 ] <NEXT> $ l294 = long $ i293 <NEXT> l57 = $ l295 * $ l294 <NEXT> r127 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r44 = r127 t <NEXT> $ i296 = $ r44 [ 4 ] <NEXT> $ l299 = long $ i296 <NEXT> $ i297 = r2 [ 4 ] <NEXT> $ l298 = long $ i297 <NEXT> l58 = $ l299 * $ l298 <NEXT> r128 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r45 = r128 t <NEXT> $ i300 = $ r45 [ 4 ] <NEXT> $ l303 = long $ i300 <NEXT> $ i301 = r2 [ 5 ] <NEXT> $ l302 = long $ i301 <NEXT> l59 = $ l303 * $ l302 <NEXT> r129 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r46 = r129 t <NEXT> $ i304 = $ r46 [ 4 ] <NEXT> $ l306 = long $ i304 <NEXT> $ l305 = long i5 <NEXT> l60 = $ l306 * $ l305 <NEXT> r130 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r47 = r130 t <NEXT> $ i307 = $ r47 [ 4 ] <NEXT> $ l309 = long $ i307 <NEXT> $ l308 = long i6 <NEXT> l61 = $ l309 * $ l308 <NEXT> r131 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r48 = r131 t <NEXT> $ i310 = $ r48 [ 4 ] <NEXT> $ l312 = long $ i310 <NEXT> $ l311 = long i7 <NEXT> l62 = $ l312 * $ l311 <NEXT> r132 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r49 = r132 t <NEXT> $ i313 = $ r49 [ 4 ] <NEXT> $ l315 = long $ i313 <NEXT> $ l314 = long i8 <NEXT> l63 = $ l315 * $ l314 <NEXT> r133 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r50 = r133 t <NEXT> $ i316 = $ r50 [ 5 ] <NEXT> $ l319 = long $ i316 <NEXT> $ i317 = r2 [ 0 ] <NEXT> $ l318 = long $ i317 <NEXT> l64 = $ l319 * $ l318 <NEXT> $ l322 = long i11 <NEXT> $ i320 = r2 [ 1 ] <NEXT> $ l321 = long $ i320 <NEXT> l65 = $ l322 * $ l321 <NEXT> r134 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r51 = r134 t <NEXT> $ i323 = $ r51 [ 5 ] <NEXT> $ l326 = long $ i323 <NEXT> $ i324 = r2 [ 2 ] <NEXT> $ l325 = long $ i324 <NEXT> l66 = $ l326 * $ l325 <NEXT> $ l329 = long i11 <NEXT> $ i327 = r2 [ 3 ] <NEXT> $ l328 = long $ i327 <NEXT> l67 = $ l329 * $ l328 <NEXT> r135 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r52 = r135 t <NEXT> $ i330 = $ r52 [ 5 ] <NEXT> $ l333 = long $ i330 <NEXT> $ i331 = r2 [ 4 ] <NEXT> $ l332 = long $ i331 <NEXT> l68 = $ l333 * $ l332 <NEXT> $ l335 = long i11 <NEXT> $ l334 = long i4 <NEXT> l69 = $ l335 * $ l334 <NEXT> r136 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r53 = r136 t <NEXT> $ i336 = $ r53 [ 5 ] <NEXT> $ l338 = long $ i336 <NEXT> $ l337 = long i5 <NEXT> l70 = $ l338 * $ l337 <NEXT> $ l340 = long i11 <NEXT> $ l339 = long i6 <NEXT> l71 = $ l340 * $ l339 <NEXT> r137 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r54 = r137 t <NEXT> $ i341 = $ r54 [ 5 ] <NEXT> $ l343 = long $ i341 <NEXT> $ l342 = long i7 <NEXT> l72 = $ l343 * $ l342 <NEXT> $ l345 = long i11 <NEXT> $ l344 = long i8 <NEXT> l73 = $ l345 * $ l344 <NEXT> r138 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r55 = r138 t <NEXT> $ i346 = $ r55 [ 6 ] <NEXT> $ l349 = long $ i346 <NEXT> $ i347 = r2 [ 0 ] <NEXT> $ l348 = long $ i347 <NEXT> l74 = $ l349 * $ l348 <NEXT> r139 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r56 = r139 t <NEXT> $ i350 = $ r56 [ 6 ] <NEXT> $ l353 = long $ i350 <NEXT> $ i351 = r2 [ 1 ] <NEXT> $ l352 = long $ i351 <NEXT> l75 = $ l353 * $ l352 <NEXT> r140 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r57 = r140 t <NEXT> $ i354 = $ r57 [ 6 ] <NEXT> $ l357 = long $ i354 <NEXT> $ i355 = r2 [ 2 ] <NEXT> $ l356 = long $ i355 <NEXT> l76 = $ l357 * $ l356 <NEXT> r141 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r58 = r141 t <NEXT> $ i358 = $ r58 [ 6 ] <NEXT> $ l361 = long $ i358 <NEXT> $ i359 = r2 [ 3 ] <NEXT> $ l360 = long $ i359 <NEXT> l77 = $ l361 * $ l360 <NEXT> r142 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r59 = r142 t <NEXT> $ i362 = $ r59 [ 6 ] <NEXT> $ l364 = long $ i362 <NEXT> $ l363 = long i3 <NEXT> l78 = $ l364 * $ l363 <NEXT> r143 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r60 = r143 t <NEXT> $ i365 = $ r60 [ 6 ] <NEXT> $ l367 = long $ i365 <NEXT> $ l366 = long i4 <NEXT> l79 = $ l367 * $ l366 <NEXT> r144 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r61 = r144 t <NEXT> $ i368 = $ r61 [ 6 ] <NEXT> $ l370 = long $ i368 <NEXT> $ l369 = long i5 <NEXT> l80 = $ l370 * $ l369 <NEXT> r145 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r62 = r145 t <NEXT> $ i371 = $ r62 [ 6 ] <NEXT> $ l373 = long $ i371 <NEXT> $ l372 = long i6 <NEXT> l81 = $ l373 * $ l372 <NEXT> r146 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r63 = r146 t <NEXT> $ i374 = $ r63 [ 6 ] <NEXT> $ l376 = long $ i374 <NEXT> $ l375 = long i7 <NEXT> l82 = $ l376 * $ l375 <NEXT> r147 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r64 = r147 t <NEXT> $ i377 = $ r64 [ 6 ] <NEXT> $ l379 = long $ i377 <NEXT> $ l378 = long i8 <NEXT> l83 = $ l379 * $ l378 <NEXT> r148 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r65 = r148 t <NEXT> $ i380 = $ r65 [ 7 ] <NEXT> $ l383 = long $ i380 <NEXT> $ i381 = r2 [ 0 ] <NEXT> $ l382 = long $ i381 <NEXT> l84 = $ l383 * $ l382 <NEXT> $ l386 = long i12 <NEXT> $ i384 = r2 [ 1 ] <NEXT> $ l385 = long $ i384 <NEXT> l85 = $ l386 * $ l385 <NEXT> r149 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r66 = r149 t <NEXT> $ i387 = $ r66 [ 7 ] <NEXT> $ l390 = long $ i387 <NEXT> $ i388 = r2 [ 2 ] <NEXT> $ l389 = long $ i388 <NEXT> l86 = $ l390 * $ l389 <NEXT> $ l392 = long i12 <NEXT> $ l391 = long i2 <NEXT> l87 = $ l392 * $ l391 <NEXT> r150 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r67 = r150 t <NEXT> $ i393 = $ r67 [ 7 ] <NEXT> $ l395 = long $ i393 <NEXT> $ l394 = long i3 <NEXT> l88 = $ l395 * $ l394 <NEXT> $ l397 = long i12 <NEXT> $ l396 = long i4 <NEXT> l89 = $ l397 * $ l396 <NEXT> r151 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r68 = r151 t <NEXT> $ i398 = $ r68 [ 7 ] <NEXT> $ l400 = long $ i398 <NEXT> $ l399 = long i5 <NEXT> l90 = $ l400 * $ l399 <NEXT> $ l402 = long i12 <NEXT> $ l401 = long i6 <NEXT> l91 = $ l402 * $ l401 <NEXT> r152 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r69 = r152 t <NEXT> $ i403 = $ r69 [ 7 ] <NEXT> $ l405 = long $ i403 <NEXT> $ l404 = long i7 <NEXT> l92 = $ l405 * $ l404 <NEXT> $ l407 = long i12 <NEXT> $ l406 = long i8 <NEXT> l93 = $ l407 * $ l406 <NEXT> r153 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r70 = r153 t <NEXT> $ i408 = $ r70 [ 8 ] <NEXT> $ l411 = long $ i408 <NEXT> $ i409 = r2 [ 0 ] <NEXT> $ l410 = long $ i409 <NEXT> l94 = $ l411 * $ l410 <NEXT> r154 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r71 = r154 t <NEXT> $ i412 = $ r71 [ 8 ] <NEXT> $ l415 = long $ i412 <NEXT> $ i413 = r2 [ 1 ] <NEXT> $ l414 = long $ i413 <NEXT> l95 = $ l415 * $ l414 <NEXT> r155 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r72 = r155 t <NEXT> $ i416 = $ r72 [ 8 ] <NEXT> $ l418 = long $ i416 <NEXT> $ l417 = long i1 <NEXT> l96 = $ l418 * $ l417 <NEXT> r156 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r73 = r156 t <NEXT> $ i419 = $ r73 [ 8 ] <NEXT> $ l421 = long $ i419 <NEXT> $ l420 = long i2 <NEXT> l97 = $ l421 * $ l420 <NEXT> r157 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r74 = r157 t <NEXT> $ i422 = $ r74 [ 8 ] <NEXT> $ l424 = long $ i422 <NEXT> $ l423 = long i3 <NEXT> l98 = $ l424 * $ l423 <NEXT> r158 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r75 = r158 t <NEXT> $ i425 = $ r75 [ 8 ] <NEXT> $ l427 = long $ i425 <NEXT> $ l426 = long i4 <NEXT> l99 = $ l427 * $ l426 <NEXT> r159 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r76 = r159 t <NEXT> $ i428 = $ r76 [ 8 ] <NEXT> $ l430 = long $ i428 <NEXT> $ l429 = long i5 <NEXT> l100 = $ l430 * $ l429 <NEXT> r160 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r77 = r160 t <NEXT> $ i431 = $ r77 [ 8 ] <NEXT> $ l433 = long $ i431 <NEXT> $ l432 = long i6 <NEXT> l101 = $ l433 * $ l432 <NEXT> r161 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r78 = r161 t <NEXT> $ i434 = $ r78 [ 8 ] <NEXT> $ l436 = long $ i434 <NEXT> $ l435 = long i7 <NEXT> l102 = $ l436 * $ l435 <NEXT> r162 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r79 = r162 t <NEXT> $ i437 = $ r79 [ 8 ] <NEXT> $ l439 = long $ i437 <NEXT> $ l438 = long i8 <NEXT> l103 = $ l439 * $ l438 <NEXT> r163 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r80 = r163 t <NEXT> $ i440 = $ r80 [ 9 ] <NEXT> $ l443 = long $ i440 <NEXT> $ i441 = r2 [ 0 ] <NEXT> $ l442 = long $ i441 <NEXT> l104 = $ l443 * $ l442 <NEXT> $ l445 = long i13 <NEXT> $ l444 = long i0 <NEXT> l105 = $ l445 * $ l444 <NEXT> r164 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r81 = r164 t <NEXT> $ i446 = $ r81 [ 9 ] <NEXT> $ l448 = long $ i446 <NEXT> $ l447 = long i1 <NEXT> l106 = $ l448 * $ l447 <NEXT> $ l450 = long i13 <NEXT> $ l449 = long i2 <NEXT> l107 = $ l450 * $ l449 <NEXT> r165 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r82 = r165 t <NEXT> $ i451 = $ r82 [ 9 ] <NEXT> $ l453 = long $ i451 <NEXT> $ l452 = long i3 <NEXT> l108 = $ l453 * $ l452 <NEXT> $ l455 = long i13 <NEXT> $ l454 = long i4 <NEXT> l109 = $ l455 * $ l454 <NEXT> r166 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r83 = r166 t <NEXT> $ i456 = $ r83 [ 9 ] <NEXT> $ l458 = long $ i456 <NEXT> $ l457 = long i5 <NEXT> l110 = $ l458 * $ l457 <NEXT> $ l460 = long i13 <NEXT> $ l459 = long i6 <NEXT> l111 = $ l460 * $ l459 <NEXT> r167 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r84 = r167 t <NEXT> $ i461 = $ r84 [ 9 ] <NEXT> $ l463 = long $ i461 <NEXT> $ l462 = long i7 <NEXT> l112 = $ l463 * $ l462 <NEXT> $ l465 = long i13 <NEXT> $ l464 = long i8 <NEXT> l113 = $ l465 * $ l464 <NEXT> $ l466 = l14 + l33 <NEXT> $ l467 = $ l466 + l42 <NEXT> $ l468 = $ l467 + l51 <NEXT> $ l469 = $ l468 + l60 <NEXT> $ l470 = $ l469 + l69 <NEXT> $ l471 = $ l470 + l78 <NEXT> $ l472 = $ l471 + l87 <NEXT> $ l473 = $ l472 + l96 <NEXT> l581 = $ l473 + l105 <NEXT> $ l474 = l15 + l24 <NEXT> $ l475 = $ l474 + l43 <NEXT> $ l476 = $ l475 + l52 <NEXT> $ l477 = $ l476 + l61 <NEXT> $ l478 = $ l477 + l70 <NEXT> $ l479 = $ l478 + l79 <NEXT> $ l480 = $ l479 + l88 <NEXT> $ l481 = $ l480 + l97 <NEXT> l582 = $ l481 + l106 <NEXT> $ l482 = l16 + l25 <NEXT> $ l483 = $ l482 + l34 <NEXT> $ l484 = $ l483 + l53 <NEXT> $ l485 = $ l484 + l62 <NEXT> $ l486 = $ l485 + l71 <NEXT> $ l487 = $ l486 + l80 <NEXT> $ l488 = $ l487 + l89 <NEXT> $ l489 = $ l488 + l98 <NEXT> l583 = $ l489 + l107 <NEXT> $ l490 = l17 + l26 <NEXT> $ l491 = $ l490 + l35 <NEXT> $ l492 = $ l491 + l44 <NEXT> $ l493 = $ l492 + l63 <NEXT> $ l494 = $ l493 + l72 <NEXT> $ l495 = $ l494 + l81 <NEXT> $ l496 = $ l495 + l90 <NEXT> $ l497 = $ l496 + l99 <NEXT> l584 = $ l497 + l108 <NEXT> $ l498 = l18 + l27 <NEXT> $ l499 = $ l498 + l36 <NEXT> $ l500 = $ l499 + l45 <NEXT> $ l501 = $ l500 + l54 <NEXT> $ l502 = $ l501 + l73 <NEXT> $ l503 = $ l502 + l82 <NEXT> $ l504 = $ l503 + l91 <NEXT> $ l505 = $ l504 + l100 <NEXT> l585 = $ l505 + l109 <NEXT> $ l506 = l19 + l28 <NEXT> $ l507 = $ l506 + l37 <NEXT> $ l508 = $ l507 + l46 <NEXT> $ l509 = $ l508 + l55 <NEXT> $ l510 = $ l509 + l64 <NEXT> $ l511 = $ l510 + l83 <NEXT> $ l512 = $ l511 + l92 <NEXT> $ l513 = $ l512 + l101 <NEXT> l586 = $ l513 + l110 <NEXT> $ l514 = l20 + l29 <NEXT> $ l515 = $ l514 + l38 <NEXT> $ l516 = $ l515 + l47 <NEXT> $ l517 = $ l516 + l56 <NEXT> $ l518 = $ l517 + l65 <NEXT> $ l519 = $ l518 + l74 <NEXT> $ l520 = $ l519 + l93 <NEXT> $ l521 = $ l520 + l102 <NEXT> l587 = $ l521 + l111 <NEXT> $ l522 = l21 + l30 <NEXT> $ l523 = $ l522 + l39 <NEXT> $ l524 = $ l523 + l48 <NEXT> $ l525 = $ l524 + l57 <NEXT> $ l526 = $ l525 + l66 <NEXT> $ l527 = $ l526 + l75 <NEXT> $ l528 = $ l527 + l84 <NEXT> $ l529 = $ l528 + l103 <NEXT> l588 = $ l529 + l112 <NEXT> $ l530 = l22 + l31 <NEXT> $ l531 = $ l530 + l40 <NEXT> $ l532 = $ l531 + l49 <NEXT> $ l533 = $ l532 + l58 <NEXT> $ l534 = $ l533 + l67 <NEXT> $ l535 = $ l534 + l76 <NEXT> $ l536 = $ l535 + l85 <NEXT> $ l537 = $ l536 + l94 <NEXT> l589 = $ l537 + l113 <NEXT> $ l538 = l23 + l32 <NEXT> $ l539 = $ l538 + l41 <NEXT> $ l540 = $ l539 + l50 <NEXT> $ l541 = $ l540 + l59 <NEXT> $ l542 = $ l541 + l68 <NEXT> $ l543 = $ l542 + l77 <NEXT> $ l544 = $ l543 + l86 <NEXT> $ l545 = $ l544 + l95 <NEXT> l590 = $ l545 + l104 <NEXT> $ l546 = l581 + 33554432l <NEXT> l591 = $ l546 > > 26 <NEXT> l592 = l582 + l591 <NEXT> $ l547 = l591 < < 26 <NEXT> l593 = l581 - $ l547 <NEXT> $ l548 = l585 + 33554432l <NEXT> l594 = $ l548 > > 26 <NEXT> l595 = l586 + l594 <NEXT> $ l549 = l594 < < 26 <NEXT> l596 = l585 - $ l549 <NEXT> $ l550 = l592 + 16777216l <NEXT> l114 = $ l550 > > 25 <NEXT> l597 = l583 + l114 <NEXT> $ l551 = l114 < < 25 <NEXT> l598 = l592 - $ l551 <NEXT> $ l552 = l595 + 16777216l <NEXT> l117 = $ l552 > > 25 <NEXT> l599 = l587 + l117 <NEXT> $ l553 = l117 < < 25 <NEXT> l600 = l595 - $ l553 <NEXT> $ l554 = l597 + 33554432l <NEXT> l115 = $ l554 > > 26 <NEXT> l601 = l584 + l115 <NEXT> $ l555 = l115 < < 26 <NEXT> l602 = l597 - $ l555 <NEXT> $ l556 = l599 + 33554432l <NEXT> l118 = $ l556 > > 26 <NEXT> l603 = l588 + l118 <NEXT> $ l557 = l118 < < 26 <NEXT> l604 = l599 - $ l557 <NEXT> $ l558 = l601 + 16777216l <NEXT> l116 = $ l558 > > 25 <NEXT> l605 = l596 + l116 <NEXT> $ l559 = l116 < < 25 <NEXT> l606 = l601 - $ l559 <NEXT> $ l560 = l603 + 16777216l <NEXT> l119 = $ l560 > > 25 <NEXT> l607 = l589 + l119 <NEXT> $ l561 = l119 < < 25 <NEXT> l608 = l603 - $ l561 <NEXT> $ l562 = l605 + 33554432l <NEXT> l609 = $ l562 > > 26 <NEXT> l610 = l600 + l609 <NEXT> $ l563 = l609 < < 26 <NEXT> l611 = l605 - $ l563 <NEXT> $ l564 = l607 + 33554432l <NEXT> l120 = $ l564 > > 26 <NEXT> l612 = l590 + l120 <NEXT> $ l565 = l120 < < 26 <NEXT> l613 = l607 - $ l565 <NEXT> $ l566 = l612 + 16777216l <NEXT> l121 = $ l566 > > 25 <NEXT> $ l567 = l121 * 19l <NEXT> l614 = l593 + $ l567 <NEXT> $ l568 = l121 < < 25 <NEXT> l615 = l612 - $ l568 <NEXT> $ l569 = l614 + 33554432l <NEXT> l616 = $ l569 > > 26 <NEXT> l617 = l598 + l616 <NEXT> $ l570 = l616 < < 26 <NEXT> l618 = l614 - $ l570 <NEXT> r3 = newarray int [ 10 ] <NEXT> $ i571 = int l618 <NEXT> r3 [ 0 ] = $ i571 <NEXT> $ i572 = int l617 <NEXT> r3 [ 1 ] = $ i572 <NEXT> $ i573 = int l602 <NEXT> r3 [ 2 ] = $ i573 <NEXT> $ i574 = int l606 <NEXT> r3 [ 3 ] = $ i574 <NEXT> $ i575 = int l611 <NEXT> r3 [ 4 ] = $ i575 <NEXT> $ i576 = int l610 <NEXT> r3 [ 5 ] = $ i576 <NEXT> $ i577 = int l604 <NEXT> r3 [ 6 ] = $ i577 <NEXT> $ i578 = int l608 <NEXT> r3 [ 7 ] = $ i578 <NEXT> $ i579 = int l613 <NEXT> r3 [ 8 ] = $ i579 <NEXT> $ i580 = int l615 <NEXT> r3 [ 9 ] = $ i580 <NEXT> r87 = new net i2p crypto eddsa math ed25519 ed25519 field element <NEXT> r168 = net i2p crypto eddsa math ed25519 ed25519 field element r0 <NEXT> $ r86 = r168 f <NEXT> specialinvoke r87 < init > $ r86 r3 <NEXT> r169 = net i2p crypto eddsa math field element r87 <NEXT> return r169 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin cluster health cluster health response r0 <NEXT> $ i0 = r1 delay unassigned shard <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch action admin cluster node info node info r0 <NEXT> $ r1 = r3 get node <NEXT> $ r2 = $ r1 get host name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin cluster reroute cluster reroute request r0 <NEXT> $ r1 = r2 command <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin cluster setting cluster get setting response r0 <NEXT> $ r1 = r2 persistent setting <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin cluster shard cluster search shard request r0 <NEXT> $ r1 = r2 rout <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin cluster shard cluster search shard request r0 <NEXT> $ r1 = r2 rout <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin cluster snapshot create create snapshot request r0 <NEXT> $ r1 = r2 repository <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin cluster snapshot create create snapshot request r0 <NEXT> $ z0 = r1 wait for completion <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org elasticsearch common setting setting builder <NEXT> $ r4 = $ r3 load from source r1 r2 <NEXT> $ r5 = $ r4 build <NEXT> r6 = org elasticsearch action admin cluster snapshot create create snapshot request r0 <NEXT> r6 setting = $ r5 <NEXT> r7 = org elasticsearch action admin cluster snapshot create create snapshot request r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin cluster snapshot restore restore snapshot request r0 <NEXT> $ r1 = r2 snapshot <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin cluster snapshot restore restore snapshot request r0 <NEXT> $ z0 = r1 partial <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin cluster snapshot restore restore snapshot request r0 <NEXT> $ z0 = r1 include alias <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin cluster snapshot status snapshot index status r0 <NEXT> $ r1 = r2 index <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin cluster snapshot status snapshot stats r0 <NEXT> $ l0 = r1 start time <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin cluster snapshot status snapshot stats r0 <NEXT> $ i0 = r1 incremental file count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r4 = org elasticsearch action admin cluster state cluster state request builder r0 <NEXT> $ r1 = r4 request <NEXT> $ r2 = org elasticsearch action admin cluster state cluster state request $ r1 <NEXT> $ r2 all <NEXT> r5 = org elasticsearch action admin cluster state cluster state request builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = new org elasticsearch action admin index alias alias <NEXT> $ r4 = r0 current name <NEXT> specialinvoke $ r3 < init > $ r4 <NEXT> r33 = null <NEXT> r34 = r0 next token <NEXT> if r34 ! = null goto label1 <NEXT> $ r32 = new java lang illegal argument exception <NEXT> specialinvoke $ r32 < init > \ `` no alias be specified\ `` <NEXT> throw $ r32 <NEXT> if r34 ! = null goto label1 <NEXT> label $ r35 = r0 next token <NEXT> $ r37 = org elasticsearch common xcontent x content parser $ token end_object <NEXT> if $ r35 == $ r37 goto label8 <NEXT> $ r5 = org elasticsearch common xcontent x content parser $ token field_name <NEXT> if $ r35 ! = $ r5 goto label2 <NEXT> r33 = r0 current name <NEXT> goto label1 <NEXT> if $ r35 ! = $ r5 goto label2 <NEXT> label $ r6 = org elasticsearch common xcontent x content parser $ token start_object <NEXT> if $ r35 ! = $ r6 goto label3 <NEXT> $ r29 = org elasticsearch action admin index alias alias filter <NEXT> $ r30 = r0 get deprecation handler <NEXT> $ z7 = $ r29 match r33 $ r30 <NEXT> if $ z7 == 0 goto label1 <NEXT> r2 = r0 map order <NEXT> $ r3 filter r2 <NEXT> if $ r35 ! = $ r6 goto label3 <NEXT> label $ r7 = org elasticsearch common xcontent x content parser $ token value_string <NEXT> if $ r35 ! = $ r7 goto label6 <NEXT> $ r17 = org elasticsearch action admin index alias alias rout <NEXT> $ r18 = r0 get deprecation handler <NEXT> $ z4 = $ r17 match r33 $ r18 <NEXT> if $ z4 == 0 goto label4 <NEXT> $ r27 = r0 text <NEXT> $ r3 rout $ r27 <NEXT> if $ z4 == 0 goto label4 <NEXT> label $ r19 = org elasticsearch action admin index alias alias index_routing <NEXT> $ r20 = r0 get deprecation handler <NEXT> $ z5 = $ r19 match r33 $ r20 <NEXT> if $ z5 == 0 goto label5 <NEXT> $ r25 = r0 text <NEXT> $ r3 index rout $ r25 <NEXT> if $ z5 == 0 goto label5 <NEXT> label $ r21 = org elasticsearch action admin index alias alias search_routing <NEXT> $ r22 = r0 get deprecation handler <NEXT> $ z6 = $ r21 match r33 $ r22 <NEXT> if $ z6 == 0 goto label1 <NEXT> $ r23 = r0 text <NEXT> $ r3 search rout $ r23 <NEXT> if $ r35 ! = $ r7 goto label6 <NEXT> label $ r8 = org elasticsearch common xcontent x content parser $ token value_boolean <NEXT> if $ r35 ! = $ r8 goto label1 <NEXT> $ r9 = org elasticsearch action admin index alias alias is_write_index <NEXT> $ r10 = r0 get deprecation handler <NEXT> $ z0 = $ r9 match r33 $ r10 <NEXT> if $ z0 == 0 goto label7 <NEXT> $ z3 = r0 boolean value <NEXT> $ r15 = java lang boolean value of $ z3 <NEXT> $ r3 write index $ r15 <NEXT> if $ z0 == 0 goto label7 <NEXT> label $ r11 = org elasticsearch action admin index alias alias is_hidden <NEXT> $ r12 = r0 get deprecation handler <NEXT> $ z1 = $ r11 match r33 $ r12 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = r0 boolean value <NEXT> $ r13 = java lang boolean value of $ z2 <NEXT> $ r3 be hidden $ r13 <NEXT> if $ r35 == $ r37 goto label8 <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org elasticsearch action admin index alias index aliases request builder r0 <NEXT> $ r2 = r5 request <NEXT> $ r3 = org elasticsearch action admin index alias index aliases request $ r2 <NEXT> $ r3 add alias action r1 <NEXT> r6 = org elasticsearch action admin index alias index aliases request builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org elasticsearch action admin index analyze analyze request builder r0 <NEXT> $ r2 = r5 request <NEXT> $ r3 = org elasticsearch action admin index analyze analyze action $ request $ r2 <NEXT> $ r3 tokenizer r1 <NEXT> r6 = org elasticsearch action admin index analyze analyze request builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = r1 rout table <NEXT> $ r5 = $ r4 all shard r3 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org elasticsearch action support active shard count from i0 <NEXT> r3 = org elasticsearch action admin index close close index request builder r0 <NEXT> $ r2 = r3 set wait for active shard $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org elasticsearch action admin index create create index cluster state update request r0 <NEXT> r1 name resolve at = l0 <NEXT> r2 = org elasticsearch action admin index create create index cluster state update request r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin index create create index cluster state update request r0 <NEXT> $ l0 = r1 name resolve at <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin index create create index cluster state update request r0 <NEXT> $ r1 = r2 data stream name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org elasticsearch common setting setting builder <NEXT> $ r3 = $ r2 load from map r1 <NEXT> $ r4 = $ r3 build <NEXT> r5 = org elasticsearch action admin index create create index request r0 <NEXT> r5 setting = $ r4 <NEXT> r6 = org elasticsearch action admin index create create index request r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = new org elasticsearch common bytes byte array <NEXT> specialinvoke r6 < init > r2 <NEXT> r7 = org elasticsearch action admin index create create index request r0 <NEXT> r8 = org elasticsearch common bytes byte reference r6 <NEXT> $ r5 = specialinvoke r7 mapping r1 r8 r3 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin index forcemerge force merge request r0 <NEXT> $ z0 = r1 only expunge deletes <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin index map put put map request r0 <NEXT> $ r1 = r2 index <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin index map put put map request r0 <NEXT> $ r1 = r2 concrete index <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org elasticsearch action admin index shard index shard store request builder r0 <NEXT> $ r2 = r5 request <NEXT> $ r3 = org elasticsearch action admin index shard index shard store request $ r2 <NEXT> $ r3 index r1 <NEXT> r6 = org elasticsearch action admin index shard index shard store request builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util object require non null r1 <NEXT> $ r3 = org elasticsearch action admin index shrink resize type $ r2 <NEXT> r4 = org elasticsearch action admin index shrink resize request r0 <NEXT> r4 type = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action admin index stats common stats flag r0 <NEXT> $ r1 = r2 group <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org elasticsearch action admin index template put put index template request builder r0 <NEXT> $ r3 = r6 request <NEXT> $ r4 = org elasticsearch action admin index template put put index template request $ r3 <NEXT> $ r4 setting r1 r2 <NEXT> r7 = org elasticsearch action admin index template put put index template request builder r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action admin index validate query validate query response r0 <NEXT> $ z0 = r1 valid <NEXT> return $ z0 <END>
<BEG> $ r0 = org elasticsearch core time value time value millis 50l <NEXT> $ r1 = org elasticsearch action bulk backoff policy exponential backoff $ r0 8 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action bulk bulk item response r0 <NEXT> $ i0 = r1 id <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r6 = org elasticsearch action bulk bulk item response r0 <NEXT> $ r1 = r6 failure <NEXT> if $ r1 == null goto label1 <NEXT> r7 = org elasticsearch action bulk bulk item response r0 <NEXT> $ r4 = r7 failure <NEXT> $ r5 = $ r4 get type <NEXT> return $ r5 <NEXT> if $ r1 == null goto label1 <NEXT> label r8 = org elasticsearch action bulk bulk item response r0 <NEXT> $ r2 = r8 response <NEXT> $ r3 = $ r2 get type <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r6 = org elasticsearch action bulk bulk processor r0 <NEXT> $ r5 = r6 add r1 r2 r3 null r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r7 = org elasticsearch action bulk bulk processor r0 <NEXT> $ r2 = r7 lock <NEXT> $ r2 lock <NEXT> label r8 = org elasticsearch action bulk bulk processor r0 <NEXT> r8 ensure open <NEXT> r9 = org elasticsearch action bulk bulk processor r0 <NEXT> $ r3 = r9 bulk request <NEXT> $ i0 = $ r3 number of action <NEXT> if $ i0 < = 0 goto label2 <NEXT> r10 = org elasticsearch action bulk bulk processor r0 <NEXT> specialinvoke r10 execute <NEXT> label r11 = org elasticsearch action bulk bulk processor r0 <NEXT> $ r4 = r11 lock <NEXT> $ r4 unlock <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action bulk bulk request r0 <NEXT> $ r1 = r2 request <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action doc write response r0 <NEXT> $ r1 = r2 result <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action doc write response r0 <NEXT> $ r1 = r2 id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> $ r4 = org elasticsearch common string empty_array <NEXT> goto label2 <NEXT> label if r2 ! = null goto label3 <NEXT> $ r5 = org elasticsearch common string empty_array <NEXT> goto label4 <NEXT> label r7 = org elasticsearch action explain explain request builder r0 <NEXT> $ r6 = r7 set fetch source $ r4 $ r5 <NEXT> return $ r6 <NEXT> label if r2 ! = null goto label3 <NEXT> label $ r5 = newarray java lang string [ 1 ] <NEXT> $ r5 [ 0 ] = r2 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r4 = newarray java lang string [ 1 ] <NEXT> $ r4 [ 0 ] = r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch action get get response r0 <NEXT> $ r1 = r3 get result <NEXT> $ r2 = $ r1 source a string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch action index index request r0 <NEXT> r2 pipeline = r1 <NEXT> r3 = org elasticsearch action index index request r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action index index request r0 <NEXT> $ z0 = r1 be pipeline resolve <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r2 = org elasticsearch action index index request r0 <NEXT> $ r1 = r2 set if seq no l0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch action ingest get pipeline response r0 <NEXT> $ r1 = r3 pipeline <NEXT> $ r2 = java util collection unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action search multi search response r0 <NEXT> $ r1 = r2 item <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > 1 goto label1 <NEXT> r2 = new java lang illegal argument exception <NEXT> specialinvoke r2 < init > \ `` batch reduce size must be > = 2\ `` <NEXT> throw r2 <NEXT> if i0 > 1 goto label1 <NEXT> label r3 = org elasticsearch action search search request r0 <NEXT> r3 batch reduce size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org elasticsearch action search search request builder r0 <NEXT> $ r3 = specialinvoke r5 source builder <NEXT> $ r3 sort r1 r2 <NEXT> r6 = org elasticsearch action search search request builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action search search response r0 <NEXT> $ r1 = r2 shard failure <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action search shard search failure r0 <NEXT> $ r1 = r2 shard target <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r5 = listener timeouts $ lambda_wrap with timeout_0__1 bootstrap $ r4 r2 r1 <NEXT> $ r6 = org elasticsearch action support listener timeouts wrap with timeout r0 r2 r3 r1 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action support replication replication request r0 <NEXT> $ r1 = r2 wait for active shard <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action support replication replication request r0 <NEXT> $ l0 = r1 rout base on cluster version <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action support task base task request r0 <NEXT> $ r1 = r2 parent task id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action support task base task response r0 <NEXT> $ r1 = r2 node failure <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org elasticsearch action support transport action be shard not available exception r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action termvectors term vector request r0 <NEXT> $ r1 = r2 select field <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r4 = org elasticsearch action termvectors term vector request builder r0 <NEXT> $ r1 = r4 request <NEXT> $ r2 = org elasticsearch action termvectors term vector request $ r1 <NEXT> $ r2 payload z0 <NEXT> r5 = org elasticsearch action termvectors term vector request builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action update update request r0 <NEXT> $ r1 = r2 id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch action update update request r0 <NEXT> $ l0 = r1 if primary term <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch action update update request r0 <NEXT> $ r1 = r2 doc <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org elasticsearch action update update request r0 <NEXT> $ r3 = specialinvoke r5 safe doc <NEXT> $ r3 source r1 r2 <NEXT> r6 = org elasticsearch action update update request r0 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org elasticsearch action admin index cache clear clear index cache request <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org elasticsearch client transport transport client r0 <NEXT> $ r2 = r4 node service <NEXT> $ r2 add transport address r1 <NEXT> r5 = org elasticsearch client transport transport client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org elasticsearch client transport transport client r0 <NEXT> $ r2 = r4 node service <NEXT> $ r2 remove transport address r1 <NEXT> r5 = org elasticsearch client transport transport client r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch cluster ack cluster state update request r0 <NEXT> r2 ack timeout = r1 <NEXT> r3 = org elasticsearch cluster ack cluster state update request r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch cluster ack index cluster state update request r0 <NEXT> r2 index = r1 <NEXT> r3 = org elasticsearch cluster ack index cluster state update request r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch cluster ack index cluster state update request r0 <NEXT> r2 index = r1 <NEXT> r3 = org elasticsearch cluster ack index cluster state update request r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org elasticsearch cluster acked cluster state update task r0 <NEXT> $ r2 = r5 listener <NEXT> if r1 ! = null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label r6 = org elasticsearch cluster acked cluster state update task r0 <NEXT> $ r3 = r6 new response $ z0 <NEXT> $ r2 on response $ r3 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r7 = org elasticsearch cluster action shard shard state action r0 <NEXT> $ r5 = r7 cluster service <NEXT> $ r6 = $ r5 state <NEXT> r8 = org elasticsearch cluster action shard shard state action r0 <NEXT> r8 local shard fail r1 r2 r3 r4 $ r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org elasticsearch cluster cluster change event r0 <NEXT> $ r1 = r5 state <NEXT> $ r2 = $ r1 rout table <NEXT> r6 = org elasticsearch cluster cluster change event r0 <NEXT> $ r3 = r6 previous state <NEXT> $ r4 = $ r3 rout table <NEXT> if $ r2 == $ r4 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r2 == $ r4 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch cluster cluster change event r0 <NEXT> $ r1 = r3 state <NEXT> $ r2 = $ r1 node <NEXT> $ z0 = $ r2 be local node elect master <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org elasticsearch cluster cluster state builder r0 <NEXT> $ r3 = r0 custom <NEXT> $ r4 = $ r3 key it <NEXT> $ r5 = cluster module $ lambda_filter custom for pre63 clients_0__4 bootstrap $ r1 <NEXT> $ r4 for each remain $ r5 <NEXT> $ r6 = r0 metadata <NEXT> r2 = org elasticsearch cluster metadata metadata builder $ r6 <NEXT> $ r7 = r0 metadata <NEXT> $ r8 = $ r7 custom <NEXT> $ r9 = $ r8 key it <NEXT> $ r10 = cluster module $ lambda_filter custom for pre63 clients_1__9 bootstrap $ r2 <NEXT> $ r9 for each remain $ r10 <NEXT> $ r11 = r1 metadata r2 <NEXT> $ r12 = $ r11 build <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r11 = org elasticsearch cluster cluster state observer r0 <NEXT> $ r2 = r11 observe context <NEXT> $ r3 = $ r2 get <NEXT> if $ r3 == null goto label1 <NEXT> r9 = new org elasticsearch elasticsearch exception <NEXT> $ r8 = newarray java lang object [ 0 ] <NEXT> specialinvoke r9 < init > \ `` can not set current cluster state while wait for a cluster state change\ <NEXT> r12 = java lang throwable r9 <NEXT> throw r12 <NEXT> if $ r3 == null goto label1 <NEXT> label r13 = org elasticsearch cluster cluster state observer r0 <NEXT> $ r4 = r13 cluster applier service <NEXT> r1 = $ r4 state <NEXT> r14 = org elasticsearch cluster cluster state observer r0 <NEXT> $ r6 = r14 last observed state <NEXT> r10 = new org elasticsearch cluster cluster state observer $ stored state <NEXT> specialinvoke r10 < init > r1 <NEXT> $ r6 set r10 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r1 get min node version <NEXT> r3 = r1 get max node version <NEXT> org elasticsearch cluster coordination join task executor ensure nodes compatibility r0 r2 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org elasticsearch cluster metadata index metadata r0 <NEXT> $ r1 = r4 mapping <NEXT> $ r2 = $ r1 get \ `` _default_\ `` <NEXT> $ r3 = org elasticsearch cluster metadata mapping metadata $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch cluster metadata index metadata r0 <NEXT> $ i0 = r1 rout num shard <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 last index of \ `` -\ `` <NEXT> if i0 ! = -1 goto label1 <NEXT> $ r4 = new java lang illegal argument exception <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append \ `` no - separator find in index name [ \ `` <NEXT> $ r7 = $ r6 append r0 <NEXT> $ r8 = $ r7 append \ `` ] \ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r4 < init > $ r9 <NEXT> throw $ r4 <NEXT> if i0 ! = -1 goto label1 <NEXT> label $ i1 = i0 + 1 <NEXT> $ z0 = r0 end with \ `` > \ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> $ i3 = r0 length <NEXT> $ i4 = $ i3 - 1 <NEXT> goto label3 <NEXT> label $ r2 = r0 substring $ i1 $ i4 <NEXT> $ i2 = java lang integer parse int $ r2 <NEXT> label return $ i2 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i4 = r0 length <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r5 = r2 index <NEXT> $ z0 = org elasticsearch common util collection utils be empty $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r11 = null <NEXT> goto label2 <NEXT> label $ r7 = r2 index option <NEXT> $ r8 = newarray java lang string [ 1 ] <NEXT> $ r8 [ 0 ] = $ r11 <NEXT> r13 = org elasticsearch cluster metadata index name expression resolver r0 <NEXT> r4 = r13 concrete index r1 $ r7 $ r8 <NEXT> $ i0 = lengthof r4 <NEXT> if $ i0 == 1 goto label3 <NEXT> r12 = new java lang illegal argument exception <NEXT> specialinvoke r12 < init > \ `` unable to return a single index a the index and option provide got resolve to multiple indices\ `` <NEXT> throw r12 <NEXT> if $ i0 == 1 goto label3 <NEXT> label $ r9 = r4 [ 0 ] <NEXT> return $ r9 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r6 = r2 index <NEXT> $ r11 = $ r6 [ 0 ] <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = org elasticsearch cluster metadata metadata $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> if r1 ! = null goto label1 <NEXT> r25 = new java lang assertion error <NEXT> specialinvoke r25 < init > <NEXT> throw r25 <NEXT> if r1 ! = null goto label1 <NEXT> label $ z1 = org elasticsearch cluster metadata metadata $ assertion disable <NEXT> if $ z1 ! = 0 goto label2 <NEXT> if r2 ! = null goto label2 <NEXT> r26 = new java lang assertion error <NEXT> specialinvoke r26 < init > <NEXT> throw r26 <NEXT> if r2 ! = null goto label2 <NEXT> label $ i0 = lengthof r2 <NEXT> if $ i0 ! = 0 goto label3 <NEXT> return 0 <NEXT> if $ i0 ! = 0 goto label3 <NEXT> label $ r11 = com carrotsearch hppc object hash set from r2 <NEXT> r28 = org elasticsearch cluster metadata metadata r0 <NEXT> $ r12 = r28 index <NEXT> $ r13 = $ r12 key <NEXT> r29 = com carrotsearch hppc object lookup container $ r11 <NEXT> r3 = org elasticsearch common collect hppc map intersection r29 $ r13 <NEXT> r4 = r3 iterator <NEXT> label $ z2 = r4 have next <NEXT> if $ z2 == 0 goto label9 <NEXT> $ r14 = r4 next <NEXT> r5 = java lang string $ r14 <NEXT> r30 = org elasticsearch cluster metadata metadata r0 <NEXT> $ r15 = r30 index <NEXT> $ r16 = $ r15 get r5 <NEXT> r6 = org elasticsearch cluster metadata index metadata $ r16 <NEXT> r27 = new java util array list <NEXT> specialinvoke r27 < init > <NEXT> $ r18 = r6 get aliases <NEXT> $ r19 = $ r18 value <NEXT> r8 = $ r19 iterator <NEXT> label $ z3 = r8 have next <NEXT> if $ z3 == 0 goto label7 <NEXT> $ r20 = r8 next <NEXT> r9 = com carrotsearch hppc cursor object cursor $ r20 <NEXT> $ r21 = r9 value <NEXT> r10 = org elasticsearch cluster metadata alias metadata $ r21 <NEXT> $ r22 = r10 alias <NEXT> $ z5 = org elasticsearch common regex regex simple match r1 $ r22 <NEXT> if $ z5 == 0 goto label6 <NEXT> r27 add r10 <NEXT> label goto label5 <NEXT> if $ z3 == 0 goto label7 <NEXT> label $ z4 = r27 be empty <NEXT> if $ z4 ! = 0 goto label8 <NEXT> return 1 <NEXT> if $ z4 ! = 0 goto label8 <NEXT> label goto label4 <NEXT> if $ z2 == 0 goto label9 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch cluster metadata metadata r0 <NEXT> $ i0 = r1 total open index shard <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> $ r5 = r3 metadata <NEXT> org elasticsearch cluster metadata metadata index template service validate not in use $ r5 r1 <NEXT> r17 = org elasticsearch cluster metadata metadata index template service r0 <NEXT> $ r7 = r17 cluster service <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r8 = r15 append \ `` remove-component-template [ \ `` <NEXT> $ r9 = java lang string join \ <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 append \ `` ] \ `` <NEXT> $ r12 = $ r11 to string <NEXT> r16 = new org elasticsearch cluster metadata metadata index template service $ 3 <NEXT> $ r14 = org elasticsearch common priority urgent <NEXT> r18 = org elasticsearch cluster metadata metadata index template service r0 <NEXT> specialinvoke r16 < init > r18 $ r14 r2 r4 r1 <NEXT> r19 = org elasticsearch cluster cluster state task config r16 <NEXT> $ r7 submit state update task $ r12 r19 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org elasticsearch cluster node discovery node r0 <NEXT> $ r2 = r3 node <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch cluster rout allocation allocate unassigned decision r0 <NEXT> r2 check decision state <NEXT> r3 = org elasticsearch cluster rout allocation allocate unassigned decision r0 <NEXT> $ r1 = r3 allocation id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if z0 == 0 goto label1 <NEXT> r14 = new org elasticsearch cluster rout allocation reroute explanation <NEXT> $ r5 = org elasticsearch cluster rout allocation decider decision no <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> r15 = org elasticsearch cluster rout allocation command abstract allocate allocation command r0 <NEXT> $ r6 = r15 name <NEXT> $ r7 = r13 append $ r6 <NEXT> $ r8 = $ r7 append \ `` allocation command \ `` <NEXT> $ r9 = $ r8 to string <NEXT> $ r10 = r2 get message <NEXT> $ r11 = newarray java lang object [ 0 ] <NEXT> $ r12 = r1 decision $ r5 $ r9 $ r10 $ r11 <NEXT> specialinvoke r14 < init > r0 $ r12 <NEXT> return r14 <NEXT> if z0 == 0 goto label1 <NEXT> label throw r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch cluster rout allocation disk threshold setting r0 <NEXT> $ r1 = r2 high watermark raw <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label2 <NEXT> $ z0 = org elasticsearch cluster rout allocation move decision $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r4 = r0 type <NEXT> $ r5 = org elasticsearch cluster rout allocation decider decision $ type no <NEXT> if $ r4 ! = $ r5 goto label1 <NEXT> $ r6 = new java lang assertion error <NEXT> specialinvoke $ r6 < init > <NEXT> throw $ r6 <NEXT> if $ r4 ! = $ r5 goto label1 <NEXT> label $ r2 = new org elasticsearch cluster rout allocation move decision <NEXT> $ r3 = org elasticsearch cluster rout allocation allocation decision no_attempt <NEXT> specialinvoke $ r2 < init > r0 null $ r3 null null 0 <NEXT> return $ r2 <NEXT> if r0 == null goto label2 <NEXT> label $ r1 = org elasticsearch cluster rout allocation move decision cached_stay_decision <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch cluster rout allocation move decision r0 <NEXT> r2 check decision state <NEXT> r3 = org elasticsearch cluster rout allocation move decision r0 <NEXT> $ r1 = r3 cluster rebalance decision <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch cluster rout allocation rout allocation r0 <NEXT> $ l0 = r1 current nano time <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch cluster rout allocation rout allocation r0 <NEXT> $ r1 = r2 rout node <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch cluster rout allocation rout allocation r0 <NEXT> $ r1 = r2 metadata <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch cluster rout allocation shard allocation decision r0 <NEXT> $ r1 = r2 move decision <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i1 = lengthof r1 <NEXT> if $ i1 ! = 1 goto label2 <NEXT> $ r11 = r1 [ 0 ] <NEXT> $ r10 = org elasticsearch cluster rout shard rout state initialize <NEXT> if $ r11 ! = $ r10 goto label1 <NEXT> r18 = new java util array list <NEXT> r21 = org elasticsearch cluster rout rout node r0 <NEXT> $ r17 = r21 initialize shard <NEXT> specialinvoke r18 < init > $ r17 <NEXT> return r18 <NEXT> if $ r11 ! = $ r10 goto label1 <NEXT> label $ r13 = r1 [ 0 ] <NEXT> $ r12 = org elasticsearch cluster rout shard rout state relocate <NEXT> if $ r13 ! = $ r12 goto label2 <NEXT> r19 = new java util array list <NEXT> r22 = org elasticsearch cluster rout rout node r0 <NEXT> $ r15 = r22 relocate shard <NEXT> specialinvoke r19 < init > $ r15 <NEXT> return r19 <NEXT> if $ r13 ! = $ r12 goto label2 <NEXT> label r20 = new java util array list <NEXT> specialinvoke r20 < init > <NEXT> r23 = org elasticsearch cluster rout rout node r0 <NEXT> r3 = r23 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label7 <NEXT> $ r8 = r3 next <NEXT> r4 = org elasticsearch cluster rout shard rout $ r8 <NEXT> i0 = lengthof r1 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label6 <NEXT> r6 = r1 [ i2 ] <NEXT> $ r9 = r4 state <NEXT> if $ r9 ! = r6 goto label5 <NEXT> r20 add r4 <NEXT> label i2 = i2 + 1 <NEXT> goto label4 <NEXT> label if i2 > = i0 goto label6 <NEXT> label goto label3 <NEXT> if $ z1 == 0 goto label7 <NEXT> label return r20 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch cluster service cluster service r0 <NEXT> $ r1 = r3 cluster applier service <NEXT> $ r2 = $ r1 state <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch cluster snapshot deletion in progress r0 <NEXT> $ r1 = r2 entry <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r12 = org elasticsearch common breaker child memory circuit breaker r0 <NEXT> $ r1 = r12 use <NEXT> l1 = $ r1 add and get l0 <NEXT> r13 = org elasticsearch common breaker child memory circuit breaker r0 <NEXT> $ r2 = r13 logger <NEXT> r14 = org elasticsearch common breaker child memory circuit breaker r0 <NEXT> $ r3 = child memory circuit breaker $ lambda_add without breaking_3__4 bootstrap $ r14 l0 l1 <NEXT> $ r2 trace $ r3 <NEXT> $ z0 = org elasticsearch common breaker child memory circuit breaker $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ b2 = l1 cmp 0l <NEXT> if $ b2 > = 0 goto label1 <NEXT> r11 = new java lang assertion error <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r6 = r10 append \ `` used byte [ \ `` <NEXT> $ r7 = $ r6 append l1 <NEXT> $ r8 = $ r7 append \ `` ] must be > = 0\ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> throw r11 <NEXT> if $ b2 > = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org elasticsearch common cache cache r0 <NEXT> r3 = specialinvoke r5 get cache segment r1 <NEXT> r6 = org elasticsearch common cache cache r0 <NEXT> $ r4 = r6 invalidation consumer <NEXT> r3 remove r1 r2 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l4 = 0l <NEXT> l5 = 0l <NEXT> l6 = 0l <NEXT> i7 = 0 <NEXT> label r16 = org elasticsearch common cache cache r0 <NEXT> $ r1 = r16 segment <NEXT> $ i0 = lengthof $ r1 <NEXT> if i7 > = $ i0 goto label2 <NEXT> r17 = org elasticsearch common cache cache r0 <NEXT> $ r3 = r17 segment <NEXT> $ r4 = $ r3 [ i7 ] <NEXT> $ r5 = $ r4 segment stats <NEXT> $ r6 = org elasticsearch common cache cache $ cache segment $ segment stats access $ 500 $ r5 <NEXT> $ l1 = $ r6 long value <NEXT> l4 = l4 + $ l1 <NEXT> r18 = org elasticsearch common cache cache r0 <NEXT> $ r7 = r18 segment <NEXT> $ r8 = $ r7 [ i7 ] <NEXT> $ r9 = $ r8 segment stats <NEXT> $ r10 = org elasticsearch common cache cache $ cache segment $ segment stats access $ 600 $ r9 <NEXT> $ l2 = $ r10 long value <NEXT> l5 = l5 + $ l2 <NEXT> r19 = org elasticsearch common cache cache r0 <NEXT> $ r11 = r19 segment <NEXT> $ r12 = $ r11 [ i7 ] <NEXT> $ r13 = $ r12 segment stats <NEXT> $ r14 = org elasticsearch common cache cache $ cache segment $ segment stats access $ 700 $ r13 <NEXT> $ l3 = $ r14 long value <NEXT> l6 = l6 + $ l3 <NEXT> i7 = i7 + 1 <NEXT> goto label1 <NEXT> if i7 > = $ i0 goto label2 <NEXT> label r15 = new org elasticsearch common cache cache $ cache stats <NEXT> specialinvoke r15 < init > l4 l5 l6 <NEXT> return r15 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get name <NEXT> i0 = r1 last index of 46 <NEXT> if i0 == -1 goto label1 <NEXT> $ r2 = r1 substring 0 i0 <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if i0 == -1 goto label1 <NEXT> label $ r2 = \ `` \ `` <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch common collect immutable open int map r0 <NEXT> $ r1 = r3 map <NEXT> $ r2 = $ r1 iterator <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r9 = org elasticsearch common geo builder coordinate builder r0 <NEXT> $ r3 = r9 point <NEXT> $ r4 = $ r3 get 0 <NEXT> r1 = org locationtech jts geom coordinate $ r4 <NEXT> r10 = org elasticsearch common geo builder coordinate builder r0 <NEXT> $ r6 = r10 point <NEXT> r11 = org elasticsearch common geo builder coordinate builder r0 <NEXT> $ r5 = r11 point <NEXT> $ i0 = $ r5 size <NEXT> $ i1 = $ i0 - 1 <NEXT> $ r7 = $ r6 get $ i1 <NEXT> r2 = org locationtech jts geom coordinate $ r7 <NEXT> $ d1 = r1 x <NEXT> $ d0 = r2 x <NEXT> $ b2 = $ d1 cmpl $ d0 <NEXT> if $ b2 ! = 0 goto label1 <NEXT> $ d3 = r1 y <NEXT> $ d2 = r2 y <NEXT> $ b3 = $ d3 cmpl $ d2 <NEXT> if $ b3 == 0 goto label2 <NEXT> label r12 = org elasticsearch common geo builder coordinate builder r0 <NEXT> $ r8 = r12 point <NEXT> $ r8 add r1 <NEXT> label r13 = org elasticsearch common geo builder coordinate builder r0 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r16 = new org elasticsearch common geo builder polygon builder <NEXT> r15 = new org elasticsearch common geo builder coordinate builder <NEXT> specialinvoke r15 < init > <NEXT> $ r7 = r1 shell <NEXT> $ r8 = $ r7 coordinate 0 <NEXT> $ r9 = r15 coordinate $ r8 <NEXT> r17 = org elasticsearch common geo builder multi polygon builder r0 <NEXT> $ r10 = r17 orientation <NEXT> specialinvoke r16 < init > $ r9 $ r10 <NEXT> $ r11 = r1 hole <NEXT> r3 = $ r11 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r13 = r3 next <NEXT> r4 = org elasticsearch common geo builder line string builder $ r13 <NEXT> r16 hole r4 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r18 = org elasticsearch common geo builder multi polygon builder r0 <NEXT> $ r12 = r18 polygon <NEXT> $ r12 add r16 <NEXT> r19 = org elasticsearch common geo builder multi polygon builder r0 <NEXT> return r19 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch common geo builder multi polygon builder r0 <NEXT> $ r1 = r2 polygon <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r1 = org elasticsearch common geo geo bound box r0 <NEXT> $ d2 = r1 bottom <NEXT> $ b0 = d1 cmpl $ d2 <NEXT> if $ b0 < 0 goto label7 <NEXT> r2 = org elasticsearch common geo geo bound box r0 <NEXT> $ d3 = r2 top <NEXT> $ b1 = d1 cmpg $ d3 <NEXT> if $ b1 > 0 goto label7 <NEXT> r3 = org elasticsearch common geo geo bound box r0 <NEXT> $ d4 = r3 leave <NEXT> r4 = org elasticsearch common geo geo bound box r0 <NEXT> $ d5 = r4 right <NEXT> $ b2 = $ d4 cmpg $ d5 <NEXT> if $ b2 > 0 goto label3 <NEXT> r5 = org elasticsearch common geo geo bound box r0 <NEXT> $ d8 = r5 leave <NEXT> $ b5 = d0 cmpl $ d8 <NEXT> if $ b5 < 0 goto label1 <NEXT> r6 = org elasticsearch common geo geo bound box r0 <NEXT> $ d9 = r6 right <NEXT> $ b6 = d0 cmpg $ d9 <NEXT> if $ b6 > 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b6 > 0 goto label1 <NEXT> label $ z0 = 0 <NEXT> if $ b2 > 0 goto label3 <NEXT> label r7 = org elasticsearch common geo geo bound box r0 <NEXT> $ d6 = r7 leave <NEXT> $ b3 = d0 cmpl $ d6 <NEXT> if $ b3 > = 0 goto label4 <NEXT> r8 = org elasticsearch common geo geo bound box r0 <NEXT> $ d7 = r8 right <NEXT> $ b4 = d0 cmpg $ d7 <NEXT> if $ b4 > 0 goto label5 <NEXT> label $ z1 = 1 <NEXT> goto label6 <NEXT> label return $ z1 <NEXT> if $ b4 > 0 goto label5 <NEXT> label $ z1 = 0 <NEXT> if $ b1 > 0 goto label7 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch common geo geo distance r0 <NEXT> $ i0 = r2 ordinal <NEXT> r1 write v int $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> d3 = @ parameter3 <NEXT> r1 = @ parameter4 <NEXT> $ r2 = org elasticsearch common geo geo distance plane <NEXT> if r0 ! = $ r2 goto label1 <NEXT> $ d6 = org elasticsearch common geo geo utils plane distance d0 d1 d2 d3 <NEXT> $ r4 = org elasticsearch common unit distance unit meter <NEXT> $ d7 = org elasticsearch common unit distance unit convert $ d6 $ r4 r1 <NEXT> return $ d7 <NEXT> if r0 ! = $ r2 goto label1 <NEXT> label $ d4 = org elasticsearch common geo geo utils arc distance d0 d1 d2 d3 <NEXT> $ r3 = org elasticsearch common unit distance unit meter <NEXT> $ d5 = org elasticsearch common unit distance unit convert $ d4 $ r3 r1 <NEXT> return $ d5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r7 = org elasticsearch common inject assistedinject assist constructor r0 <NEXT> $ r3 = r7 constructor <NEXT> $ r4 = $ r3 new instance r1 <NEXT> label return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i2 = r0 length <NEXT> if $ i2 ! = 0 goto label1 <NEXT> return r0 <NEXT> if $ i2 ! = 0 goto label1 <NEXT> label c0 = r0 char at 0 <NEXT> c1 = java lang character to upper case c0 <NEXT> if c0 ! = c1 goto label2 <NEXT> $ r5 = r0 <NEXT> goto label3 <NEXT> label return $ r5 <NEXT> if c0 ! = c1 goto label2 <NEXT> label $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append c1 <NEXT> $ r3 = r0 substring 1 <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 to string <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = java nio file file new directory stream r0 <NEXT> label r5 = org elasticsearch common io file system utils to array r1 <NEXT> label if r1 == null goto label3 <NEXT> r1 close <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org elasticsearch common io u t f8 stream writer r0 <NEXT> $ r2 = r5 _output stream <NEXT> if $ r2 == null goto label1 <NEXT> r4 = new java lang illegal state exception <NEXT> specialinvoke r4 < init > \ `` writer not close or reset\ `` <NEXT> throw r4 <NEXT> if $ r2 == null goto label1 <NEXT> label r6 = org elasticsearch common io u t f8 stream writer r0 <NEXT> r6 _output stream = r1 <NEXT> r7 = org elasticsearch common io u t f8 stream writer r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch common lucene index elasticsearch leaf reader r0 <NEXT> $ r1 = r2 shard id <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org elasticsearch common lucene lucene $ directory reader with all live doc <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org apache lucene index directory reader r2 <NEXT> return r3 <END>
<BEG> i0 = @ parameter0 <NEXT> r1 = new org elasticsearch common lucene lucene $ 3 <NEXT> specialinvoke r1 < init > i0 <NEXT> r2 = org apache lucene index leaf reader r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch common lucene search more like this query r0 <NEXT> r2 minimum should match = r1 <NEXT> return <END>
<BEG> d0 = @ parameter0 <NEXT> $ z0 = java lang double be na n d0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = java lang double be infinite d0 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return 0 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch common parse exception r0 <NEXT> $ i0 = r1 column number <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = org elasticsearch common setting set grouped setting updater r1 r2 r3 <NEXT> r5 = org elasticsearch common setting abstract scoped setting r0 <NEXT> r5 add setting updater $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch common setting set r0 <NEXT> $ r2 = r3 property <NEXT> $ r1 = org elasticsearch common setting set $ property operator dynamic <NEXT> $ z0 = $ r2 contain $ r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get secure setting <NEXT> if r2 == null goto label1 <NEXT> $ r3 = r2 get set name <NEXT> r5 = org elasticsearch common setting set r0 <NEXT> $ r4 = r5 get key <NEXT> $ z0 = $ r3 contain $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get secure setting <NEXT> if r2 == null goto label1 <NEXT> $ r3 = r2 get set name <NEXT> r5 = org elasticsearch common setting secure set r0 <NEXT> $ r4 = r5 get key <NEXT> $ z0 = $ r3 contain $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = new org elasticsearch common setting setting <NEXT> r8 = new org elasticsearch common setting setting $ filter map <NEXT> r11 = org elasticsearch common setting setting r0 <NEXT> $ r4 = r11 setting <NEXT> specialinvoke r8 < init > $ r4 r1 null null <NEXT> r12 = org elasticsearch common setting setting r0 <NEXT> $ r5 = r12 secure setting <NEXT> if $ r5 ! = null goto label1 <NEXT> $ r7 = null <NEXT> goto label2 <NEXT> label r14 = java util map r8 <NEXT> r15 = org elasticsearch common setting secure setting $ r7 <NEXT> specialinvoke r10 < init > r14 r15 <NEXT> return r10 <NEXT> if $ r5 ! = null goto label1 <NEXT> label r9 = new org elasticsearch common setting setting $ prefixed secure setting <NEXT> $ r7 = r9 <NEXT> r13 = org elasticsearch common setting setting r0 <NEXT> $ r6 = r13 secure setting <NEXT> specialinvoke r9 < init > $ r6 \ `` \ <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r17 = org elasticsearch common setting setting r0 <NEXT> r3 = r17 get r1 <NEXT> if r3 ! = null goto label1 <NEXT> return r2 <NEXT> if r3 ! = null goto label1 <NEXT> label $ f0 = java lang float parse float r3 <NEXT> $ r5 = java lang float value of $ f0 <NEXT> label return $ r5 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> r17 = org elasticsearch common setting setting r0 <NEXT> $ r5 = r17 setting <NEXT> $ r6 = $ r5 entry set <NEXT> r2 = $ r6 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r8 = r2 next <NEXT> r3 = java util map $ entry $ r8 <NEXT> $ r9 = r3 get key <NEXT> $ r10 = java lang string $ r9 <NEXT> $ r11 = r16 append $ r10 <NEXT> $ r12 = $ r11 append \ `` =\ `` <NEXT> $ r13 = r3 get value <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r14 append c0 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r7 = r16 to string <NEXT> return $ r7 <END>
<BEG> l0 = @ parameter0 <NEXT> $ l1 = l0 + 259200000l <NEXT> $ l2 = org elasticsearch common time date utils round floor $ l1 604800000l <NEXT> $ l3 = $ l2 - 259200000l <NEXT> return $ l3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org elasticsearch common unit distance unit $ distance access $ 000 r0 r1 <NEXT> $ d0 = r3 value <NEXT> $ r4 = r3 unit <NEXT> $ d1 = org elasticsearch common unit distance unit convert $ d0 $ r4 r2 <NEXT> return $ d1 <END>
<BEG> l0 = @ parameter0 <NEXT> $ l2 = l0 > > 63 <NEXT> $ l1 = l0 < < 1 <NEXT> $ l3 = $ l2 ^ $ l1 <NEXT> return $ l3 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i1 = org elasticsearch common util byte utils read int l e r0 i0 <NEXT> $ f0 = java lang float int bit to float $ i1 <NEXT> return $ f0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org elasticsearch common util collection utils convert r0 <NEXT> if r2 == null goto label1 <NEXT> $ r3 = new java util identity hash map <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = java util collection new set from map $ r3 <NEXT> org elasticsearch common util collection utils ensure no self reference r2 r0 $ r4 r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> $ z0 = org elasticsearch common util concurrent count down $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r7 = org elasticsearch common util concurrent count down r0 <NEXT> $ i2 = r7 original count <NEXT> if $ i2 > 0 goto label1 <NEXT> r5 = new java lang assertion error <NEXT> specialinvoke r5 < init > <NEXT> throw r5 <NEXT> if $ i2 > 0 goto label1 <NEXT> label r8 = org elasticsearch common util concurrent count down r0 <NEXT> $ r4 = r8 count down <NEXT> i0 = $ r4 get <NEXT> $ z2 = org elasticsearch common util concurrent count down $ assertion disable <NEXT> if $ z2 ! = 0 goto label2 <NEXT> if i0 > = 0 goto label2 <NEXT> r6 = new java lang assertion error <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if i0 > = 0 goto label2 <NEXT> label if i0 ! = 0 goto label3 <NEXT> return 0 <NEXT> label if i0 ! = 0 goto label3 <NEXT> label r9 = org elasticsearch common util concurrent count down r0 <NEXT> $ r1 = r9 count down <NEXT> $ i1 = i0 - 1 <NEXT> $ z1 = $ r1 compare and set i0 $ i1 <NEXT> if $ z1 == 0 goto label6 <NEXT> if i0 ! = 1 goto label4 <NEXT> $ z3 = 1 <NEXT> goto label5 <NEXT> label return $ z3 <NEXT> if i0 ! = 1 goto label4 <NEXT> label $ z3 = 0 <NEXT> if $ z1 == 0 goto label6 <NEXT> label goto label1 <END>
<BEG> r0 = @ this <NEXT> $ z0 = org elasticsearch common util concurrent count down $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r7 = org elasticsearch common util concurrent count down r0 <NEXT> $ i2 = r7 original count <NEXT> if $ i2 > 0 goto label1 <NEXT> r5 = new java lang assertion error <NEXT> specialinvoke r5 < init > <NEXT> throw r5 <NEXT> if $ i2 > 0 goto label1 <NEXT> label $ z1 = org elasticsearch common util concurrent count down $ assertion disable <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r8 = org elasticsearch common util concurrent count down r0 <NEXT> $ r2 = r8 count down <NEXT> $ i1 = $ r2 get <NEXT> if $ i1 > = 0 goto label2 <NEXT> r6 = new java lang assertion error <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if $ i1 > = 0 goto label2 <NEXT> label r9 = org elasticsearch common util concurrent count down r0 <NEXT> $ r1 = r9 count down <NEXT> $ i0 = $ r1 get and set 0 <NEXT> if $ i0 < = 0 goto label3 <NEXT> $ z2 = 1 <NEXT> goto label4 <NEXT> label return $ z2 <NEXT> if $ i0 < = 0 goto label3 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch common util concurrent key lock r0 <NEXT> $ r1 = r2 map <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch common util concurrent queue resize es thread pool executor r0 <NEXT> $ r1 = r2 execution e w m a <NEXT> $ d0 = $ r1 get average <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org elasticsearch common util concurrent thread context $ context preserving abstract runnable <NEXT> if $ z0 == 0 goto label1 <NEXT> return r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 instanceof org elasticsearch common util concurrent thread context $ context preserving runnable <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r1 instanceof org elasticsearch common util concurrent abstract runnable <NEXT> if $ z2 == 0 goto label3 <NEXT> r5 = new org elasticsearch common util concurrent thread context $ context preserving abstract runnable <NEXT> $ r4 = org elasticsearch common util concurrent abstract runnable r1 <NEXT> r7 = org elasticsearch common util concurrent thread context r0 <NEXT> specialinvoke r5 < init > r7 $ r4 null <NEXT> r8 = java lang runnable r5 <NEXT> return r8 <NEXT> if $ z2 == 0 goto label3 <NEXT> label r6 = new org elasticsearch common util concurrent thread context $ context preserving runnable <NEXT> r9 = org elasticsearch common util concurrent thread context r0 <NEXT> specialinvoke r6 < init > r9 r1 null <NEXT> r10 = java lang runnable r6 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch common util set back scale cuckoo filter r0 <NEXT> $ r1 = r2 rng <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch common util single object cache r0 <NEXT> $ r1 = r3 refresh interval <NEXT> $ l1 = $ r1 millis <NEXT> $ b2 = $ l1 cmp 0l <NEXT> if $ b2 ! = 0 goto label1 <NEXT> return 1 <NEXT> if $ b2 ! = 0 goto label1 <NEXT> label l0 = java lang system current time millis <NEXT> r4 = org elasticsearch common util single object cache r0 <NEXT> $ l3 = r4 last refresh timestamp <NEXT> $ l4 = l0 - $ l3 <NEXT> r5 = org elasticsearch common util single object cache r0 <NEXT> $ r2 = r5 refresh interval <NEXT> $ l5 = $ r2 millis <NEXT> $ b6 = $ l4 cmp $ l5 <NEXT> if $ b6 < = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ b6 < = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org elasticsearch common validation exception r0 <NEXT> $ r2 = r3 validation error <NEXT> $ r2 add r1 <NEXT> r4 = org elasticsearch common validation exception r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org elasticsearch discovery block cluster state publish response handler r0 <NEXT> $ r2 = r7 latch <NEXT> $ l0 = r1 millis <NEXT> $ r3 = java util concurrent time unit milliseconds <NEXT> z0 = $ r2 await $ l0 $ r3 <NEXT> $ z1 = org elasticsearch discovery block cluster state publish response handler $ assertion disable <NEXT> if $ z1 ! = 0 goto label1 <NEXT> if z0 == 0 goto label1 <NEXT> r8 = org elasticsearch discovery block cluster state publish response handler r0 <NEXT> $ r4 = r8 pending node <NEXT> $ z2 = $ r4 be empty <NEXT> if $ z2 ! = 0 goto label1 <NEXT> r6 = new java lang assertion error <NEXT> specialinvoke r6 < init > \ `` response count reach 0 but still wait for some nodes\ `` <NEXT> throw r6 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label return z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r6 = r1 to array class \ `` lorg elasticsearch cluster node discovery node \ `` <NEXT> $ r7 = org elasticsearch cluster node discovery node [ ] $ r6 <NEXT> $ r8 = java util array a list $ r7 <NEXT> r16 = org elasticsearch discovery zen elect master service r0 <NEXT> r2 = specialinvoke r16 sort master node $ r8 <NEXT> if r2 ! = null goto label1 <NEXT> $ r14 = newarray org elasticsearch cluster node discovery node [ 0 ] <NEXT> return $ r14 <NEXT> if r2 ! = null goto label1 <NEXT> label r15 = new java util array list <NEXT> specialinvoke r15 < init > i0 <NEXT> i2 = 0 <NEXT> r4 = r2 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r13 = r4 next <NEXT> r5 = org elasticsearch cluster node discovery node $ r13 <NEXT> i2 = i2 + 1 <NEXT> if i2 < i0 goto label3 <NEXT> goto label4 <NEXT> label $ i1 = r15 size <NEXT> $ r10 = newarray org elasticsearch cluster node discovery node [ $ i1 ] <NEXT> $ r11 = r15 to array $ r10 <NEXT> $ r12 = org elasticsearch cluster node discovery node [ ] $ r11 <NEXT> return $ r12 <NEXT> if i2 < i0 goto label3 <NEXT> label r15 add r5 <NEXT> goto label2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r16 = org elasticsearch discovery zen pending cluster state queue r0 <NEXT> $ r4 = r16 pending state <NEXT> r14 = new org elasticsearch discovery zen pending cluster state queue $ cluster state context <NEXT> specialinvoke r14 < init > r1 <NEXT> $ r4 add r14 <NEXT> r17 = org elasticsearch discovery zen pending cluster state queue r0 <NEXT> $ r5 = r17 pending state <NEXT> $ i0 = $ r5 size <NEXT> r18 = org elasticsearch discovery zen pending cluster state queue r0 <NEXT> $ i1 = r18 max queue size <NEXT> if $ i0 < = $ i1 goto label1 <NEXT> r19 = org elasticsearch discovery zen pending cluster state queue r0 <NEXT> $ r6 = r19 pending state <NEXT> $ r7 = $ r6 remove 0 <NEXT> r2 = org elasticsearch discovery zen pending cluster state queue $ cluster state context $ r7 <NEXT> r20 = org elasticsearch discovery zen pending cluster state queue r0 <NEXT> $ r8 = r20 logger <NEXT> r21 = org elasticsearch discovery zen pending cluster state queue r0 <NEXT> $ i2 = r21 max queue size <NEXT> $ r9 = java lang integer value of $ i2 <NEXT> $ r8 warn \ `` drop pending state [ { } ] more than [ { } ] pending state \ <NEXT> $ z1 = r2 commit <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r12 = r2 listener <NEXT> r15 = new org elasticsearch elasticsearch exception <NEXT> $ r11 = newarray java lang object [ 1 ] <NEXT> r22 = org elasticsearch discovery zen pending cluster state queue r0 <NEXT> $ i3 = r22 max queue size <NEXT> $ r13 = java lang integer value of $ i3 <NEXT> $ r11 [ 0 ] = $ r13 <NEXT> specialinvoke r15 < init > \ `` too many pending state [ { } ] pending \ <NEXT> r23 = java lang exception r15 <NEXT> $ r12 on new cluster state fail r23 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch discovery zen zen discovery r0 <NEXT> $ r1 = r2 join thread control <NEXT> $ z0 = $ r1 join thread active <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r13 = org elasticsearch env node environment r0 <NEXT> r4 = r13 index path r1 <NEXT> r14 = org elasticsearch env node environment r0 <NEXT> $ r6 = r14 logger <NEXT> $ i0 = lengthof r4 <NEXT> $ r7 = java lang integer value of $ i0 <NEXT> $ r6 trace \ `` delete index { } directory path { } [ { } ] \ <NEXT> r3 accept r4 <NEXT> org elasticsearch core internal io i o utils rm r4 <NEXT> $ z0 = r2 have custom data path <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r8 = r2 custom data path <NEXT> $ r9 = r1 get u u i d <NEXT> r15 = org elasticsearch env node environment r0 <NEXT> r5 = specialinvoke r15 resolve index custom location $ r8 $ r9 <NEXT> r16 = org elasticsearch env node environment r0 <NEXT> $ r10 = r16 logger <NEXT> $ r10 trace \ `` delete custom index { } directory [ { } ] \ <NEXT> $ r11 = newarray java nio file path [ 1 ] <NEXT> $ r11 [ 0 ] = r5 <NEXT> r3 accept $ r11 <NEXT> $ r12 = newarray java nio file path [ 1 ] <NEXT> $ r12 [ 0 ] = r5 <NEXT> org elasticsearch core internal io i o utils rm $ r12 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r10 = org elasticsearch env node environment r0 <NEXT> $ r3 = r10 shard lock <NEXT> entermonitor $ r3 <NEXT> label r9 = new java util hash set <NEXT> r11 = org elasticsearch env node environment r0 <NEXT> $ r5 = r11 shard lock <NEXT> $ r6 = $ r5 key set <NEXT> specialinvoke r9 < init > $ r6 <NEXT> $ r7 = java util collection unmodifiable set r9 <NEXT> exitmonitor $ r3 <NEXT> label return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org elasticsearch env node environment r0 <NEXT> specialinvoke r8 assert env be lock <NEXT> r9 = org elasticsearch env node environment r0 <NEXT> $ r3 = r9 node path <NEXT> $ i0 = lengthof $ r3 <NEXT> r2 = newarray java nio file path [ $ i0 ] <NEXT> i2 = 0 <NEXT> label r10 = org elasticsearch env node environment r0 <NEXT> $ r4 = r10 node path <NEXT> $ i1 = lengthof $ r4 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r11 = org elasticsearch env node environment r0 <NEXT> $ r5 = r11 node path <NEXT> $ r6 = $ r5 [ i2 ] <NEXT> $ r7 = $ r6 resolve r1 <NEXT> r2 [ i2 ] = $ r7 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch env shard lock r0 <NEXT> $ r1 = r2 shard id <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r2 = r0 [ i1 ] <NEXT> r5 = new org apache lucene store n i o f s directory <NEXT> $ r4 = r2 resolve \ `` _state\ `` <NEXT> specialinvoke r5 < init > $ r4 <NEXT> r6 = org apache lucene store directory r5 <NEXT> org elasticsearch common lucene lucene clean lucene index r6 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index analysis abstract index analyzer provider r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org elasticsearch index analysis pre configure tokenizer <NEXT> $ r3 = org elasticsearch index analysis pre build cache factory $ cache strategy one <NEXT> $ r4 = pre configure tokenizer $ lambda_singleton_0__3 bootstrap $ r1 <NEXT> specialinvoke $ r2 < init > r0 $ r3 $ r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r6 = org elasticsearch index codec codec service r0 <NEXT> $ r1 = r6 codecs <NEXT> $ r2 = $ r1 key set <NEXT> $ r3 = newarray java lang string [ 0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = java lang string [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r4 = org elasticsearch index engine engine r0 <NEXT> $ r1 = r4 engine config <NEXT> $ r2 = $ r1 get snapshot commit supplier <NEXT> r5 = org elasticsearch index engine engine r0 <NEXT> $ r3 = $ r2 acquire index commit for snapshot r5 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index engine segment stats r0 <NEXT> $ l0 = r1 term vector memory in byte <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index engine segment stats r0 <NEXT> $ l0 = r1 norm memory in byte <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index fielddata ordinal ordinal builder r0 <NEXT> r1 ordinal = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index flush flush stats r0 <NEXT> $ l0 = r1 total time in millis <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index index setting r0 <NEXT> $ z0 = r1 query string analyze wildcard <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index index setting r0 <NEXT> $ r1 = r2 setting <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index index setting r0 <NEXT> $ r1 = r2 sync interval <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org elasticsearch index index setting index_translog_retention_total_files_setting <NEXT> r5 = org elasticsearch index index setting r0 <NEXT> $ r2 = r5 get setting <NEXT> $ r3 = $ r1 get $ r2 <NEXT> $ r4 = java lang integer $ r3 <NEXT> $ i0 = $ r4 int value <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index index setting r0 <NEXT> $ r1 = r2 generation threshold size <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index index setting r0 <NEXT> $ i0 = r1 max docvalue field <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index index setting r0 <NEXT> $ r1 = r2 search idle after <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org elasticsearch index mapper map lookup r0 <NEXT> $ r2 = r4 field type lookup <NEXT> $ r3 = $ r2 get r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = new org elasticsearch index mapper parse context $ 2 <NEXT> r3 = org elasticsearch index mapper parse context r0 <NEXT> r4 = org elasticsearch index mapper parse context r0 <NEXT> specialinvoke r2 < init > r3 r4 <NEXT> r5 = org elasticsearch index mapper parse context r2 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> z1 = @ parameter3 <NEXT> r7 = org elasticsearch index mapper range type r0 <NEXT> $ r4 = r7 number type <NEXT> r3 = $ r4 parse r2 z0 <NEXT> if z1 == 0 goto label1 <NEXT> $ r6 = r3 <NEXT> goto label2 <NEXT> label return $ r6 <NEXT> if z1 == 0 goto label1 <NEXT> label r8 = org elasticsearch index mapper range type r0 <NEXT> $ r5 = r8 next up r3 <NEXT> $ r6 = java lang number $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index merge scheduler config r0 <NEXT> $ z0 = r1 auto throttle <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query abstract geometry query builder r0 <NEXT> $ r1 = r2 indexed shape rout <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query boost query builder r0 <NEXT> $ r1 = r2 positive query <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index query common term query builder r0 <NEXT> $ f0 = r1 cutoff frequency <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query functionscore function score query builder r0 <NEXT> $ r1 = r2 score mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index query functionscore function score query builder r0 <NEXT> $ f0 = r1 max boost <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query geo bound box query builder r0 <NEXT> $ r1 = r2 validation method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query geo bound box query builder r0 <NEXT> $ r1 = r2 field name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query geo distance query builder r0 <NEXT> $ r1 = r2 geo distance <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query geo distance query builder r0 <NEXT> $ r1 = r2 validation method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index query match bool prefix query builder r0 <NEXT> $ i0 = r1 max expansion <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` [ match ] require zero term query to be non-null\ `` <NEXT> throw r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org elasticsearch index query match query builder r0 <NEXT> r4 zero term query = r1 <NEXT> r5 = org elasticsearch index query match query builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index query more like this query builder r0 <NEXT> $ i0 = r1 min doc freq <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index query more like this query builder r0 <NEXT> $ z0 = r1 fail on unsupported field <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query nest query builder r0 <NEXT> $ r1 = r2 query <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org elasticsearch index query match query builder <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org elasticsearch index query match phrase query builder <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org elasticsearch index query combine field query builder <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org elasticsearch index query range query builder <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org elasticsearch index query functionscore function score query builder <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org elasticsearch index query functionscore script score query builder <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org elasticsearch index query query builder geo shape query r0 r1 <NEXT> $ r3 = org elasticsearch common geo shape relation disjoint <NEXT> r2 relation $ r3 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query query string query builder r0 <NEXT> $ r1 = r2 fuzziness <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org elasticsearch index query search execution context r0 <NEXT> $ r2 = specialinvoke r3 field type r1 <NEXT> if $ r2 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r2 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r26 = @ parameter0 <NEXT> $ z0 = r26 equal \ `` string\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r24 = org elasticsearch index query search execution context deprecation logger <NEXT> $ r23 = org elasticsearch common log deprecation category mapping <NEXT> $ r22 = newarray java lang object [ 0 ] <NEXT> $ r24 deprecate $ r23 \ `` unmapped_type_string\ <NEXT> r26 = \ `` keyword\ `` <NEXT> label r32 = org elasticsearch index query search execution context r0 <NEXT> $ r5 = r32 mapper service <NEXT> r1 = $ r5 parser context <NEXT> r2 = r1 type parser r26 <NEXT> if r2 ! = null goto label2 <NEXT> r28 = new java lang illegal argument exception <NEXT> r27 = new java lang string builder <NEXT> specialinvoke r27 < init > <NEXT> $ r18 = r27 append \ `` no mapper find for type [ \ `` <NEXT> $ r19 = $ r18 append r26 <NEXT> $ r20 = $ r19 append \ `` ] \ `` <NEXT> $ r21 = $ r20 to string <NEXT> specialinvoke r28 < init > $ r21 <NEXT> throw r28 <NEXT> if r2 ! = null goto label2 <NEXT> label $ r6 = java util collection empty map <NEXT> r3 = r2 parse \ `` __anonymous_\ <NEXT> r29 = new org elasticsearch index mapper content path <NEXT> specialinvoke r29 < init > 0 <NEXT> r4 = r3 build r29 <NEXT> $ z1 = r4 instanceof org elasticsearch index mapper field mapper <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r14 = org elasticsearch index mapper field mapper r4 <NEXT> $ r15 = $ r14 field type <NEXT> return $ r15 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r31 = new java lang illegal argument exception <NEXT> r30 = new java lang string builder <NEXT> specialinvoke r30 < init > <NEXT> $ r10 = r30 append \ `` mapper for type [ \ `` <NEXT> $ r11 = $ r10 append r26 <NEXT> $ r12 = $ r11 append \ `` ] must be a leaf field\ `` <NEXT> $ r13 = $ r12 to string <NEXT> specialinvoke r31 < init > $ r13 <NEXT> throw r31 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org elasticsearch common string be empty r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` supplied field be null or empty\ `` <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org elasticsearch index query simple query string builder r0 <NEXT> $ r2 = r7 field and weight <NEXT> $ r3 = java lang float value of 1 0f <NEXT> $ r2 put r1 $ r3 <NEXT> r8 = org elasticsearch index query simple query string builder r0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> $ z0 = org elasticsearch common string be empty r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new java lang illegal argument exception <NEXT> specialinvoke r6 < init > \ `` supplied field be null or empty\ `` <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org elasticsearch index query simple query string builder r0 <NEXT> r7 check negative boost f0 <NEXT> r8 = org elasticsearch index query simple query string builder r0 <NEXT> $ r2 = r8 field and weight <NEXT> $ r3 = java lang float value of f0 <NEXT> $ r2 put r1 $ r3 <NEXT> r9 = org elasticsearch index query simple query string builder r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query simple query string builder r0 <NEXT> $ r1 = r2 analyzer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index query simple query string builder r0 <NEXT> $ r1 = r2 setting <NEXT> $ z0 = $ r1 lenient <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index refresh refresh stats r0 <NEXT> $ l0 = r1 total <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index refresh refresh stats r0 <NEXT> $ l0 = r1 external total <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index refresh refresh stats r0 <NEXT> $ l0 = r1 total time in millis <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index refresh refresh stats r0 <NEXT> $ l0 = r1 external total time in millis <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org elasticsearch index reindex abstract bulk by scroll request builder r0 <NEXT> $ r2 = r6 request <NEXT> $ r3 = org elasticsearch index reindex abstract bulk by scroll request $ r2 <NEXT> $ r3 set retry backoff initial time r1 <NEXT> r7 = org elasticsearch index reindex abstract bulk by scroll request builder r0 <NEXT> $ r5 = r7 self <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r9 = org elasticsearch index reindex bulk by scroll task r0 <NEXT> $ z0 = r9 be worker <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new java lang illegal state exception <NEXT> specialinvoke r6 < init > \ `` this task be already a worker\ `` <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r10 = org elasticsearch index reindex bulk by scroll task r0 <NEXT> $ z1 = r10 be leader <NEXT> if $ z1 == 0 goto label2 <NEXT> r7 = new java lang illegal state exception <NEXT> specialinvoke r7 < init > \ `` this task be already a leader for other slice subtasks\ `` <NEXT> throw r7 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r8 = new org elasticsearch index reindex worker bulk by scroll task state <NEXT> r11 = org elasticsearch index reindex bulk by scroll task r0 <NEXT> specialinvoke r8 < init > r11 r1 f0 <NEXT> r12 = org elasticsearch index reindex bulk by scroll task r0 <NEXT> r12 worker state = r8 <NEXT> r13 = org elasticsearch index reindex bulk by scroll task r0 <NEXT> $ z2 = r13 be cancel <NEXT> if $ z2 == 0 goto label3 <NEXT> r14 = org elasticsearch index reindex bulk by scroll task r0 <NEXT> $ r3 = r14 worker state <NEXT> $ r3 handle cancel <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org elasticsearch index reindex delete by query request r0 <NEXT> $ r1 = r4 get search request <NEXT> $ r2 = $ r1 source <NEXT> $ r2 size i0 <NEXT> r5 = org elasticsearch index reindex delete by query request r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ z0 = org elasticsearch index seqno replication tracker $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r19 = org elasticsearch index seqno replication tracker r0 <NEXT> $ z8 = r19 primary mode <NEXT> if $ z8 ! = 0 goto label1 <NEXT> r14 = new java lang assertion error <NEXT> specialinvoke r14 < init > <NEXT> throw r14 <NEXT> if $ z8 ! = 0 goto label1 <NEXT> label $ z1 = org elasticsearch index seqno replication tracker $ assertion disable <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r20 = org elasticsearch index seqno replication tracker r0 <NEXT> $ z7 = r20 handoff in progress <NEXT> if $ z7 == 0 goto label2 <NEXT> r15 = new java lang assertion error <NEXT> specialinvoke r15 < init > <NEXT> throw r15 <NEXT> if $ z7 == 0 goto label2 <NEXT> label $ z2 = org elasticsearch index seqno replication tracker $ assertion disable <NEXT> if $ z2 ! = 0 goto label3 <NEXT> r21 = org elasticsearch index seqno replication tracker r0 <NEXT> $ z6 = specialinvoke r21 invariant <NEXT> if $ z6 ! = 0 goto label3 <NEXT> r16 = new java lang assertion error <NEXT> specialinvoke r16 < init > <NEXT> throw r16 <NEXT> if $ z6 ! = 0 goto label3 <NEXT> label r22 = org elasticsearch index seqno replication tracker r0 <NEXT> $ r3 = r22 checkpoint <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = org elasticsearch index seqno replication tracker $ checkpoint state $ r4 <NEXT> $ z3 = org elasticsearch index seqno replication tracker $ assertion disable <NEXT> if $ z3 ! = 0 goto label4 <NEXT> r23 = org elasticsearch index seqno replication tracker r0 <NEXT> $ r9 = r23 shard allocation id <NEXT> $ z5 = $ r9 equal r1 <NEXT> if $ z5 == 0 goto label4 <NEXT> if r2 ! = null goto label4 <NEXT> r17 = new java lang assertion error <NEXT> specialinvoke r17 < init > <NEXT> throw r17 <NEXT> if r2 ! = null goto label4 <NEXT> label if r2 == null goto label5 <NEXT> $ l2 = r2 global checkpoint <NEXT> $ b3 = l0 cmp $ l2 <NEXT> if $ b3 < = 0 goto label5 <NEXT> l1 = r2 global checkpoint <NEXT> r2 global checkpoint = l0 <NEXT> r24 = org elasticsearch index seqno replication tracker r0 <NEXT> $ r6 = r24 logger <NEXT> $ r7 = java lang long value of l1 <NEXT> $ r8 = java lang long value of l0 <NEXT> $ r6 trace \ `` update local knowledge for [ { } ] on the primary of the global checkpoint from [ { } ] to [ { } ] \ <NEXT> label $ z9 = org elasticsearch index seqno replication tracker $ assertion disable <NEXT> if $ z9 ! = 0 goto label6 <NEXT> r25 = org elasticsearch index seqno replication tracker r0 <NEXT> $ z4 = specialinvoke r25 invariant <NEXT> if $ z4 ! = 0 goto label6 <NEXT> r18 = new java lang assertion error <NEXT> specialinvoke r18 < init > <NEXT> throw r18 <NEXT> if $ z4 ! = 0 goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index seqno retention lease r0 <NEXT> $ l0 = r1 retain sequence number <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index snapshots blobstore blob store index shard snapshot r0 <NEXT> $ r1 = r2 snapshot <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index snapshots blobstore blob store index shard snapshot r0 <NEXT> $ r1 = r2 index file <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index snapshots blobstore blob store index shard snapshot r0 <NEXT> $ i0 = r1 incremental file count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = org elasticsearch index snapshots blobstore snapshot file r0 <NEXT> $ r5 = r15 physical file <NEXT> if $ r5 ! = null goto label3 <NEXT> r14 = new java util hash map <NEXT> specialinvoke r14 < init > <NEXT> r16 = org elasticsearch index snapshots blobstore snapshot file r0 <NEXT> $ r10 = r16 index file <NEXT> r3 = $ r10 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r11 = r3 next <NEXT> r4 = org elasticsearch index snapshots blobstore blob store index shard snapshot $ file info $ r11 <NEXT> $ r12 = r4 physical name <NEXT> r14 put $ r12 r4 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r17 = org elasticsearch index snapshots blobstore snapshot file r0 <NEXT> r17 physical file = r14 <NEXT> label r18 = org elasticsearch index snapshots blobstore snapshot file r0 <NEXT> $ r6 = r18 physical file <NEXT> $ r7 = $ r6 get r1 <NEXT> $ r8 = org elasticsearch index snapshots blobstore blob store index shard snapshot $ file info $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r8 = org elasticsearch index store store r0 <NEXT> r8 ensure open <NEXT> r9 = org elasticsearch index store store r0 <NEXT> r1 = r9 directory <NEXT> r7 = null <NEXT> r2 = r1 list all <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label7 <NEXT> r4 = r2 [ i1 ] <NEXT> $ z0 = r4 start with \ `` corrupted_\ `` <NEXT> if $ z0 == 0 goto label6 <NEXT> label r1 delete file r4 <NEXT> label goto label6 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label7 <NEXT> label if r7 == null goto label8 <NEXT> throw r7 <NEXT> label if r7 == null goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r27 = org elasticsearch index store store r0 <NEXT> $ r6 = r27 metadata lock <NEXT> $ r7 = $ r6 write lock <NEXT> $ r7 lock <NEXT> label r28 = org elasticsearch index store store r0 <NEXT> $ r8 = r28 directory <NEXT> r29 = org apache lucene store directory $ r8 <NEXT> r2 = org elasticsearch index store store new temporary append index writer r29 null <NEXT> label $ r9 = org elasticsearch index store store get user data r2 <NEXT> $ r10 = $ r9 get \ `` translog_uuid\ `` <NEXT> $ z0 = r1 equal $ r10 <NEXT> if $ z0 == 0 goto label03 <NEXT> r26 = new java lang illegal argument exception <NEXT> r25 = new java lang string builder <NEXT> specialinvoke r25 < init > <NEXT> $ r16 = r25 append \ `` a new translog uuid can\'t be equal to exist one get [ \ `` <NEXT> $ r17 = $ r16 append r1 <NEXT> $ r18 = $ r17 append \ `` ] \ `` <NEXT> $ r19 = $ r18 to string <NEXT> specialinvoke r26 < init > $ r19 <NEXT> throw r26 <NEXT> if $ z0 == 0 goto label03 <NEXT> label $ r11 = java util collection singleton map \ `` translog_uuid\ <NEXT> org elasticsearch index store store update commit data r2 $ r11 <NEXT> label if r2 == null goto label10 <NEXT> r2 close <NEXT> goto label10 <NEXT> label r30 = org elasticsearch index store store r0 <NEXT> $ r12 = r30 metadata lock <NEXT> $ r13 = $ r12 write lock <NEXT> $ r13 unlock <NEXT> goto label13 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch index translog translog read operation r1 <NEXT> $ l0 = r2 primary term <NEXT> r15 = org elasticsearch index translog base translog reader r0 <NEXT> $ l1 = r15 get primary term <NEXT> $ b2 = $ l0 cmp $ l1 <NEXT> if $ b2 < = 0 goto label1 <NEXT> r16 = org elasticsearch index translog base translog reader r0 <NEXT> $ l3 = r16 get primary term <NEXT> $ b4 = $ l3 cmp 0l <NEXT> if $ b4 == 0 goto label1 <NEXT> r14 = new org elasticsearch index translog translog corrupt exception <NEXT> r17 = org elasticsearch index translog base translog reader r0 <NEXT> $ r4 = r17 path <NEXT> $ r5 = $ r4 to string <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r7 = r13 append \ `` operation\ 's term be new than translog header term operation term [ \ `` <NEXT> $ l5 = r2 primary term <NEXT> $ r8 = $ r7 append $ l5 <NEXT> $ r9 = $ r8 append \ `` ] translog header term [ \ `` <NEXT> r18 = org elasticsearch index translog base translog reader r0 <NEXT> $ l6 = r18 get primary term <NEXT> $ r10 = $ r9 append $ l6 <NEXT> $ r11 = $ r10 append \ `` ] \ `` <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke r14 < init > $ r5 $ r12 <NEXT> r19 = java lang throwable r14 <NEXT> throw r19 <NEXT> if $ b4 == 0 goto label1 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r32 = org elasticsearch index translog translog r0 <NEXT> $ r3 = r32 read lock <NEXT> r1 = $ r3 acquire <NEXT> label r33 = org elasticsearch index translog translog r0 <NEXT> $ r4 = r33 reader <NEXT> $ z0 = $ r4 be empty <NEXT> if $ z0 == 0 goto label04 <NEXT> r34 = org elasticsearch index translog translog r0 <NEXT> $ r26 = r34 current <NEXT> l1 = $ r26 get generation <NEXT> label if r1 == null goto label03 <NEXT> r1 close <NEXT> label return l1 <NEXT> if $ z0 == 0 goto label04 <NEXT> label $ z1 = org elasticsearch index translog translog $ assertion disable <NEXT> if $ z1 ! = 0 goto label05 <NEXT> r35 = org elasticsearch index translog translog r0 <NEXT> $ r8 = r35 reader <NEXT> $ r9 = $ r8 stream <NEXT> $ r10 = translog $ get generation__4 bootstrap $ <NEXT> $ r11 = $ r9 map $ r10 <NEXT> $ r12 = translog $ compare to__5 bootstrap $ <NEXT> $ r13 = $ r11 min $ r12 <NEXT> $ r14 = $ r13 get <NEXT> $ r16 = java lang long $ r14 <NEXT> r36 = org elasticsearch index translog translog r0 <NEXT> $ r15 = r36 reader <NEXT> $ r17 = $ r15 get 0 <NEXT> $ r18 = org elasticsearch index translog translog reader $ r17 <NEXT> $ l0 = $ r18 get generation <NEXT> $ r19 = java lang long value of $ l0 <NEXT> $ z2 = $ r16 equal $ r19 <NEXT> if $ z2 ! = 0 goto label05 <NEXT> r31 = new java lang assertion error <NEXT> r30 = new java lang string builder <NEXT> specialinvoke r30 < init > <NEXT> $ r22 = r30 append \ `` the first translog isn\'t the one with the minimum generation\ `` <NEXT> r37 = org elasticsearch index translog translog r0 <NEXT> $ r23 = r37 reader <NEXT> $ r24 = $ r22 append $ r23 <NEXT> $ r25 = $ r24 to string <NEXT> specialinvoke r31 < init > $ r25 <NEXT> throw r31 <NEXT> if $ z2 ! = 0 goto label05 <NEXT> label r38 = org elasticsearch index translog translog r0 <NEXT> $ r5 = r38 reader <NEXT> $ r6 = $ r5 get 0 <NEXT> $ r7 = org elasticsearch index translog translog reader $ r6 <NEXT> l2 = $ r7 get generation <NEXT> label if r1 == null goto label07 <NEXT> label return l2 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index warmer warm stats r0 <NEXT> $ l0 = r1 total time in millis <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r11 = org elasticsearch index recovery recovery collection r0 <NEXT> $ r3 = r11 on go recovery <NEXT> $ r4 = java lang long value of l0 <NEXT> $ r5 = $ r3 remove $ r4 <NEXT> r2 = org elasticsearch index recovery recovery target $ r5 <NEXT> if r2 == null goto label1 <NEXT> r12 = org elasticsearch index recovery recovery collection r0 <NEXT> $ r6 = r12 logger <NEXT> $ r7 = r2 shard id <NEXT> $ r8 = r2 source node <NEXT> $ l1 = r2 recovery id <NEXT> $ r9 = java lang long value of $ l1 <NEXT> $ r10 = java lang boolean value of z0 <NEXT> $ r6 trace \ `` { } fail recovery from { } id [ { } ] send shard failure [ { } ] \ <NEXT> r2 fail r1 z0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch index system data stream descriptor r0 <NEXT> $ r1 = r2 executor name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org elasticsearch ingest ingest service r0 <NEXT> $ r3 = r6 pipeline <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = org elasticsearch ingest ingest service $ pipeline holder $ r4 <NEXT> if r2 == null goto label1 <NEXT> $ r5 = r2 pipeline <NEXT> return $ r5 <NEXT> if r2 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org elasticsearch common setting setting builder <NEXT> $ r2 = java util collection empty map <NEXT> org elasticsearch node internal setting preparer initialize setting r1 r0 $ r2 <NEXT> $ r3 = internal setting preparer $ lambda_prepare settings_0__1 bootstrap $ <NEXT> org elasticsearch node internal setting preparer finalize setting r1 $ r3 <NEXT> $ r4 = r1 build <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org elasticsearch persistent persistent task custom metadata get persistent task custom metadata r0 <NEXT> if r1 ! = null goto label1 <NEXT> return r0 <NEXT> if r1 ! = null goto label1 <NEXT> label r2 = org elasticsearch persistent persistent task custom metadata builder r1 <NEXT> $ r4 = r1 task <NEXT> r20 = $ r4 iterator <NEXT> label $ z0 = r20 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r11 = r20 next <NEXT> r3 = org elasticsearch persistent persistent task custom metadata $ persistent task $ r11 <NEXT> $ r12 = r3 get assignment <NEXT> $ r13 = $ r12 get executor node <NEXT> if $ r13 == null goto label3 <NEXT> $ r14 = r0 node <NEXT> $ r15 = r3 get assignment <NEXT> $ r16 = $ r15 get executor node <NEXT> $ z2 = $ r14 node exist $ r16 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> $ r17 = r3 get id <NEXT> $ r18 = org elasticsearch persistent persistent task custom metadata lost_node_assignment <NEXT> r2 reassign task $ r17 $ r18 <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ z1 = r2 be change <NEXT> if $ z1 ! = 0 goto label5 <NEXT> label $ r5 = r0 metadata <NEXT> r21 = org elasticsearch cluster metadata metadata builder $ r5 <NEXT> $ r6 = r2 build <NEXT> r22 = org elasticsearch cluster metadata metadata $ custom $ r6 <NEXT> r21 put custom \ `` persistent_tasks\ <NEXT> $ r8 = org elasticsearch cluster cluster state builder r0 <NEXT> $ r9 = $ r8 metadata r21 <NEXT> $ r10 = $ r9 build <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util collection empty list <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 resolve \ `` plugin-descriptor properties\ `` <NEXT> $ r9 = new java util property <NEXT> specialinvoke $ r9 < init > <NEXT> $ r10 = newarray java nio file open option [ 0 ] <NEXT> r87 = java nio file file new input stream r1 $ r10 <NEXT> label $ r9 load r87 <NEXT> label if r87 == null goto label08 <NEXT> r87 close <NEXT> goto label08 <NEXT> label $ r11 = $ r9 string property name <NEXT> $ r12 = $ r11 stream <NEXT> $ r13 = java util function function identity <NEXT> java util object require non null $ r9 <NEXT> $ r15 = plugin info $ get property__1 bootstrap $ $ r9 <NEXT> $ r16 = java util stream collector to map $ r13 $ r15 <NEXT> $ r17 = $ r12 collect $ r16 <NEXT> r2 = java util map $ r17 <NEXT> $ r18 = r2 remove \ `` name\ `` <NEXT> r90 = java lang string $ r18 <NEXT> if r90 == null goto label09 <NEXT> $ z1 = r90 be empty <NEXT> if $ z1 == 0 goto label10 <NEXT> label $ r19 = new java lang illegal argument exception <NEXT> $ r20 = new java lang string builder <NEXT> specialinvoke $ r20 < init > <NEXT> $ r21 = $ r20 append \ `` property [ name ] be miss in [ \ `` <NEXT> $ r22 = $ r21 append r1 <NEXT> $ r23 = $ r22 append \ `` ] \ `` <NEXT> $ r24 = $ r23 to string <NEXT> specialinvoke $ r19 < init > $ r24 <NEXT> throw $ r19 <NEXT> if $ z1 == 0 goto label10 <NEXT> label $ r25 = r2 remove \ `` description\ `` <NEXT> r91 = java lang string $ r25 <NEXT> if r91 ! = null goto label11 <NEXT> $ r77 = new java lang illegal argument exception <NEXT> $ r78 = new java lang string builder <NEXT> specialinvoke $ r78 < init > <NEXT> $ r79 = $ r78 append \ `` property [ description ] be miss for plugin [ \ `` <NEXT> $ r80 = $ r79 append r90 <NEXT> $ r81 = $ r80 append \ `` ] \ `` <NEXT> $ r82 = $ r81 to string <NEXT> specialinvoke $ r77 < init > $ r82 <NEXT> throw $ r77 <NEXT> if r91 ! = null goto label11 <NEXT> label $ r26 = r2 remove \ `` version\ `` <NEXT> r92 = java lang string $ r26 <NEXT> if r92 ! = null goto label12 <NEXT> $ r71 = new java lang illegal argument exception <NEXT> $ r72 = new java lang string builder <NEXT> specialinvoke $ r72 < init > <NEXT> $ r73 = $ r72 append \ `` property [ version ] be miss for plugin [ \ `` <NEXT> $ r74 = $ r73 append r90 <NEXT> $ r75 = $ r74 append \ `` ] \ `` <NEXT> $ r76 = $ r75 to string <NEXT> specialinvoke $ r71 < init > $ r76 <NEXT> throw $ r71 <NEXT> if r92 ! = null goto label12 <NEXT> label $ r27 = r2 remove \ `` elasticsearch version\ `` <NEXT> r93 = java lang string $ r27 <NEXT> if r93 ! = null goto label13 <NEXT> $ r65 = new java lang illegal argument exception <NEXT> $ r66 = new java lang string builder <NEXT> specialinvoke $ r66 < init > <NEXT> $ r67 = $ r66 append \ `` property [ elasticsearch version ] be miss for plugin [ \ `` <NEXT> $ r68 = $ r67 append r90 <NEXT> $ r69 = $ r68 append \ `` ] \ `` <NEXT> $ r70 = $ r69 to string <NEXT> specialinvoke $ r65 < init > $ r70 <NEXT> throw $ r65 <NEXT> if r93 ! = null goto label13 <NEXT> label r3 = org elasticsearch version from string r93 <NEXT> $ r28 = r2 remove \ `` java version\ `` <NEXT> r4 = java lang string $ r28 <NEXT> if r4 ! = null goto label14 <NEXT> $ r59 = new java lang illegal argument exception <NEXT> $ r60 = new java lang string builder <NEXT> specialinvoke $ r60 < init > <NEXT> $ r61 = $ r60 append \ `` property [ java version ] be miss for plugin [ \ `` <NEXT> $ r62 = $ r61 append r90 <NEXT> $ r63 = $ r62 append \ `` ] \ `` <NEXT> $ r64 = $ r63 to string <NEXT> specialinvoke $ r59 < init > $ r64 <NEXT> throw $ r59 <NEXT> if r4 ! = null goto label14 <NEXT> label org elasticsearch jdk jar hell check version format r4 <NEXT> $ r29 = r2 remove \ `` extend plugins\ `` <NEXT> r5 = java lang string $ r29 <NEXT> if r5 ! = null goto label15 <NEXT> r94 = java util collection empty list <NEXT> goto label16 <NEXT> label $ r31 = r2 remove \ `` have native controller\ `` <NEXT> $ r32 = java lang string $ r31 <NEXT> z0 = org elasticsearch plugins plugin info parse boolean value r90 \ `` have native controller\ <NEXT> $ r33 = r2 remove \ `` type\ `` <NEXT> $ r34 = java lang string $ r33 <NEXT> r6 = org elasticsearch plugins plugin info get plugin type r90 $ r34 <NEXT> $ r35 = r2 remove \ `` classname\ `` <NEXT> $ r36 = java lang string $ r35 <NEXT> r7 = org elasticsearch plugins plugin info get classname r90 r6 $ r36 <NEXT> $ r37 = r2 remove \ `` java opts\ `` <NEXT> r8 = java lang string $ r37 <NEXT> $ r38 = org elasticsearch plugins plugin type bootstrap <NEXT> if r6 == $ r38 goto label17 <NEXT> $ z5 = org elasticsearch common string be null or empty r8 <NEXT> if $ z5 ! = 0 goto label17 <NEXT> $ r53 = new java lang illegal argument exception <NEXT> $ r54 = new java lang string builder <NEXT> specialinvoke $ r54 < init > <NEXT> $ r55 = $ r54 append \ `` [ java opts ] can only have a value when [ type ] be set to [ bootstrap ] for plugin [ \ `` <NEXT> $ r56 = $ r55 append r90 <NEXT> $ r57 = $ r56 append \ `` ] \ `` <NEXT> $ r58 = $ r57 to string <NEXT> specialinvoke $ r53 < init > $ r58 <NEXT> throw $ r53 <NEXT> if $ z5 ! = 0 goto label17 <NEXT> label $ r39 = org elasticsearch version v_6_3_0 <NEXT> $ z2 = r3 before $ r39 <NEXT> if $ z2 == 0 goto label18 <NEXT> $ r51 = org elasticsearch version v_6_0_0_beta2 <NEXT> $ z4 = r3 on or after $ r51 <NEXT> if $ z4 == 0 goto label18 <NEXT> r2 remove \ `` require keystore\ `` <NEXT> label z6 = 0 <NEXT> $ r95 = org elasticsearch plugins plugin info licensed_plugins_support <NEXT> $ z7 = r3 on or after $ r95 <NEXT> if $ z7 == 0 goto label19 <NEXT> $ r49 = r2 remove \ `` licensed\ `` <NEXT> $ r50 = java lang string $ r49 <NEXT> z6 = org elasticsearch plugins plugin info parse boolean value r90 \ `` licensed\ <NEXT> label $ z3 = r2 be empty <NEXT> if $ z3 ! = 0 goto label20 <NEXT> $ r41 = new java lang illegal argument exception <NEXT> $ r42 = new java lang string builder <NEXT> specialinvoke $ r42 < init > <NEXT> $ r43 = $ r42 append \ `` unknown property for plugin [ \ `` <NEXT> $ r44 = $ r43 append r90 <NEXT> $ r45 = $ r44 append \ `` ] in plugin descriptor \ `` <NEXT> $ r46 = r2 key set <NEXT> $ r47 = $ r45 append $ r46 <NEXT> $ r48 = $ r47 to string <NEXT> specialinvoke $ r41 < init > $ r48 <NEXT> throw $ r41 <NEXT> if $ z3 ! = 0 goto label20 <NEXT> label $ r40 = new org elasticsearch plugins plugin info <NEXT> specialinvoke $ r40 < init > r90 r91 r92 r3 r4 r7 r94 z0 r6 r8 z6 <NEXT> return $ r40 <NEXT> if r5 ! = null goto label15 <NEXT> label $ r30 = org elasticsearch common string delimit list to string array r5 \ <NEXT> r94 = java util array a list $ r30 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch plugins plugin info r0 <NEXT> $ r1 = r2 extend plugins <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch plugins plugin info r0 <NEXT> $ z0 = r1 be license <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch repository blobstore blob store repository r0 <NEXT> $ z0 = r1 compress <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org elasticsearch rest action admin index rest get index action allow response parameter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch rest rest request r0 <NEXT> $ r1 = r3 http request <NEXT> $ r2 = $ r1 uri <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch rest rest request r0 <NEXT> $ r1 = r2 raw path <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label i0 = r0 length <NEXT> if i0 < = 2 goto label2 <NEXT> $ z1 = r0 start with \ `` \ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> $ z2 = r0 end with \ `` \ `` <NEXT> if $ z2 == 0 goto label2 <NEXT> $ z3 = 1 <NEXT> goto label3 <NEXT> label if $ z3 == 0 goto label4 <NEXT> $ i1 = r0 length <NEXT> $ i2 = $ i1 - 1 <NEXT> $ r1 = r0 substring 1 $ i2 <NEXT> $ r2 = java util regex pattern compile $ r1 <NEXT> return $ r2 <NEXT> label if $ z3 == 0 goto label4 <NEXT> label return null <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch script script exception r0 <NEXT> $ r1 = r2 script <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch script script exception r0 <NEXT> $ r1 = r2 lang <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org elasticsearch search aggregation aggregation r0 <NEXT> $ r5 = r8 aggregation <NEXT> r3 = $ r5 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r3 next <NEXT> r4 = org elasticsearch search aggregation aggregation $ r6 <NEXT> r4 to x content r1 r2 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org elasticsearch search aggregation aggregator factory r0 <NEXT> $ r3 = r5 metadata <NEXT> r6 = org elasticsearch search aggregation aggregator factory r0 <NEXT> $ r4 = r6 create internal r1 r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search aggregation bucket adjacency adjacency matrix aggregation builder r0 <NEXT> $ r1 = r2 separator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org elasticsearch search aggregation bucket best bucket defer collector $ 2 <NEXT> r4 = org elasticsearch search aggregation bucket best bucket defer collector r0 <NEXT> specialinvoke r3 < init > r4 r1 r1 <NEXT> r5 = org elasticsearch search aggregation aggregator r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org elasticsearch search aggregation bucket composite composite value collector queue $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ i0 = r1 size <NEXT> r20 = org elasticsearch search aggregation bucket composite composite value collector queue r0 <NEXT> $ r6 = r20 array <NEXT> $ i1 = lengthof $ r6 <NEXT> if $ i0 == $ i1 goto label1 <NEXT> r17 = new java lang assertion error <NEXT> specialinvoke r17 < init > <NEXT> throw r17 <NEXT> if $ i0 == $ i1 goto label1 <NEXT> label r21 = org elasticsearch search aggregation bucket composite composite value collector queue r0 <NEXT> r21 after key be set = 1 <NEXT> i2 = 0 <NEXT> label $ i3 = r1 size <NEXT> if i2 > = $ i3 goto label7 <NEXT> label r22 = org elasticsearch search aggregation bucket composite composite value collector queue r0 <NEXT> $ r3 = r22 array <NEXT> $ r4 = $ r3 [ i2 ] <NEXT> $ r5 = r1 get i2 <NEXT> $ r4 set after $ r5 <NEXT> label goto label6 <NEXT> label i2 = i2 + 1 <NEXT> goto label2 <NEXT> if i2 > = $ i3 goto label7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r2 = org elasticsearch search aggregation bucket histogram date histogram aggregation builder r0 <NEXT> $ r1 = r2 interval l0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search aggregation bucket histogram date histogram aggregation builder r0 <NEXT> $ l0 = r1 min doc count <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search aggregation bucket sampler diversified aggregation builder r0 <NEXT> $ i0 = r1 shard size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ b1 = l0 cmp 0l <NEXT> if $ b1 > = 0 goto label1 <NEXT> r12 = new java lang illegal argument exception <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r4 = r11 append \ `` [ min doc count ] must be great than or equal to 0 find [ \ `` <NEXT> $ r5 = $ r4 append l0 <NEXT> $ r6 = $ r5 append \ `` ] in [ \ `` <NEXT> r13 = org elasticsearch search aggregation bucket term significant term aggregation builder r0 <NEXT> $ r7 = r13 name <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 append \ `` ] \ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r12 < init > $ r10 <NEXT> throw r12 <NEXT> if $ b1 > = 0 goto label1 <NEXT> label r14 = org elasticsearch search aggregation bucket term significant term aggregation builder r0 <NEXT> $ r1 = r14 bucket count threshold <NEXT> $ r1 set min doc count l0 <NEXT> r15 = org elasticsearch search aggregation bucket term significant term aggregation builder r0 <NEXT> return r15 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > 0 goto label1 <NEXT> r12 = new java lang illegal argument exception <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r4 = r11 append \ `` [ shard size ] must be great than 0 found [ \ `` <NEXT> $ r5 = $ r4 append i0 <NEXT> $ r6 = $ r5 append \ `` ] in [ \ `` <NEXT> r13 = org elasticsearch search aggregation bucket term significant term aggregation builder r0 <NEXT> $ r7 = r13 name <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 append \ `` ] \ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r12 < init > $ r10 <NEXT> throw r12 <NEXT> if i0 > 0 goto label1 <NEXT> label r14 = org elasticsearch search aggregation bucket term significant term aggregation builder r0 <NEXT> $ r1 = r14 bucket count threshold <NEXT> $ r1 set shard size i0 <NEXT> r15 = org elasticsearch search aggregation bucket term significant term aggregation builder r0 <NEXT> return r15 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search aggregation bucket term term aggregation builder r0 <NEXT> $ r1 = r2 collect mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = new java util array list <NEXT> r4 = org elasticsearch search aggregation internal aggregation r0 <NEXT> $ r2 = specialinvoke r4 get internal aggregation <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch search aggregation metric abstract percentile aggregation builder r0 <NEXT> r2 percentile config = r1 <NEXT> r3 = org elasticsearch search aggregation metric abstract percentile aggregation builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search aggregation metric compensate sum r0 <NEXT> $ d0 = r1 delta <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r1 = org elasticsearch search aggregation metric compensate sum r0 <NEXT> r1 value = d0 <NEXT> r2 = org elasticsearch search aggregation metric compensate sum r0 <NEXT> r2 delta = d1 <NEXT> return <END>
<BEG> l0 = @ parameter0 <NEXT> $ f0 = float l0 <NEXT> $ f1 = $ f0 0 75f <NEXT> $ d0 = double $ f1 <NEXT> $ d1 = java lang math ceil $ d0 <NEXT> l1 = long $ d1 <NEXT> $ l2 = l1 * 4l <NEXT> i3 = org apache lucene util pack packed ints bit require $ l2 <NEXT> i4 = java lang math max i3 4 <NEXT> i5 = java lang math min i4 18 <NEXT> return i5 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search aggregation metric median absolute deviation aggregation builder r0 <NEXT> $ d0 = r1 compression <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search aggregation metric top hit aggregation builder r0 <NEXT> $ r1 = r2 script field <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search aggregation metric top hit aggregation builder r0 <NEXT> $ z0 = r1 track score <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r1 = r0 current token <NEXT> $ r2 = org elasticsearch common xcontent x content parser $ token value_number <NEXT> if r1 == $ r2 goto label1 <NEXT> $ r3 = org elasticsearch common xcontent x content parser $ token value_string <NEXT> if r1 ! = $ r3 goto label2 <NEXT> label $ d1 = r0 double value <NEXT> return $ d1 <NEXT> if r1 ! = $ r3 goto label2 <NEXT> label return d0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search aggregation pipeline serial diff pipeline aggregation builder r0 <NEXT> $ i0 = r1 lag <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r22 = org elasticsearch search aggregation support value source config r0 <NEXT> $ r2 = r22 script <NEXT> if $ r2 == null goto label3 <NEXT> r20 = new java lang string builder <NEXT> specialinvoke r20 < init > <NEXT> $ r13 = r20 append \ `` script yielding [ \ `` <NEXT> r23 = org elasticsearch search aggregation support value source config r0 <NEXT> $ r14 = r23 script value type <NEXT> if $ r14 == null goto label1 <NEXT> r24 = org elasticsearch search aggregation support value source config r0 <NEXT> $ r18 = r24 script value type <NEXT> $ r19 = $ r18 get prefer name <NEXT> goto label2 <NEXT> label $ r15 = $ r13 append $ r19 <NEXT> $ r16 = $ r15 append \ `` ] \ `` <NEXT> $ r17 = $ r16 to string <NEXT> return $ r17 <NEXT> if $ r14 == null goto label1 <NEXT> label $ r19 = \ `` unknown type\ `` <NEXT> if $ r2 == null goto label3 <NEXT> label r25 = org elasticsearch search aggregation support value source config r0 <NEXT> r1 = r25 field type <NEXT> if r1 == null goto label4 <NEXT> r21 = new java lang string builder <NEXT> specialinvoke r21 < init > <NEXT> $ r4 = r21 append \ `` field [ \ `` <NEXT> $ r5 = r1 name <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 append \ `` ] of type [ \ `` <NEXT> $ r8 = r1 type name <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ `` ] \ `` <NEXT> $ r11 = $ r10 to string <NEXT> return $ r11 <NEXT> if r1 == null goto label4 <NEXT> label return \ `` unmapped field\ `` <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search builder search source builder r0 <NEXT> $ r1 = r2 query builder <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search builder search source builder r0 <NEXT> $ r1 = r2 post query builder <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch search builder search source builder r0 <NEXT> $ r3 = r9 doc value field <NEXT> if $ r3 ! = null goto label1 <NEXT> r7 = new java util array list <NEXT> specialinvoke r7 < init > <NEXT> r10 = org elasticsearch search builder search source builder r0 <NEXT> r10 doc value field = r7 <NEXT> label r11 = org elasticsearch search builder search source builder r0 <NEXT> $ r5 = r11 doc value field <NEXT> r8 = new org elasticsearch search fetch subphase field and format <NEXT> specialinvoke r8 < init > r1 r2 <NEXT> $ r5 add r8 <NEXT> r12 = org elasticsearch search builder search source builder r0 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch search fetch fetch context r0 <NEXT> $ r1 = r3 search context <NEXT> $ r2 = $ r1 searcher <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search fetch subphase highlight highlight field r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r4 = org elasticsearch search internal reader context r0 <NEXT> $ r1 = r4 ref count <NEXT> $ r1 inc ref <NEXT> r5 = org elasticsearch search internal reader context r0 <NEXT> specialinvoke r5 try update keep alive l0 <NEXT> r6 = org elasticsearch search internal reader context r0 <NEXT> $ r2 = reader context $ lambda_mark a used_2__1 bootstrap $ r6 <NEXT> $ r3 = org elasticsearch core releasables release once $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org elasticsearch search lookup source lookup r0 <NEXT> $ r3 = r5 source <NEXT> $ r4 = org elasticsearch common xcontent support x content map value extract value r1 $ r3 r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = new org elasticsearch search profile query query profiler <NEXT> specialinvoke r5 < init > <NEXT> r6 = org elasticsearch search profile profilers r0 <NEXT> $ r3 = r6 searcher <NEXT> $ r3 set profiler r5 <NEXT> r7 = org elasticsearch search profile profilers r0 <NEXT> $ r4 = r7 query profilers <NEXT> $ r4 add r5 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r5 = org elasticsearch search profile profilers r0 <NEXT> $ r2 = r5 query profilers <NEXT> r6 = org elasticsearch search profile profilers r0 <NEXT> $ r1 = r6 query profilers <NEXT> $ i0 = $ r1 size <NEXT> $ i1 = $ i0 - 1 <NEXT> $ r3 = $ r2 get $ i1 <NEXT> $ r4 = org elasticsearch search profile query query profiler $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search query query search result r0 <NEXT> $ z0 = r1 be null <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search query query search result r0 <NEXT> $ i0 = r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search rescore rescore context r0 <NEXT> $ r1 = r2 rescorer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org elasticsearch search search shard target r0 <NEXT> $ r1 = r4 cluster alias <NEXT> r5 = org elasticsearch search search shard target r0 <NEXT> $ r2 = r5 get index <NEXT> $ r3 = org elasticsearch transport remote cluster aware build remote index name $ r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search sort geo distance sort builder r0 <NEXT> $ r1 = r2 nest path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search sort script sort builder r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search suggest phrase direct candidate generator builder r0 <NEXT> $ r1 = r2 suggest mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search suggest phrase direct candidate generator builder r0 <NEXT> $ r1 = r2 max edit <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search suggest phrase direct candidate generator builder r0 <NEXT> $ r1 = r2 min word length <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch search suggest phrase phrase suggestion builder r0 <NEXT> $ f0 = r2 max error <NEXT> $ r1 = java lang float value of $ f0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch search suggest suggest builder r0 <NEXT> r2 global text = r1 <NEXT> r3 = org elasticsearch search suggest suggest builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch search suggest term term suggestion builder r0 <NEXT> $ i0 = r1 max inspection <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r9 = r0 custom \ `` snapshots\ `` <NEXT> r2 = org elasticsearch cluster snapshot in progress $ r9 <NEXT> if r2 ! = null goto label1 <NEXT> $ r19 = java util collection empty set <NEXT> return $ r19 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r10 = new java util hash set <NEXT> specialinvoke $ r10 < init > <NEXT> $ r11 = r2 entry <NEXT> r4 = $ r11 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r12 = r4 next <NEXT> r5 = org elasticsearch cluster snapshot in progress $ entry $ r12 <NEXT> $ z1 = r5 partial <NEXT> if $ z1 ! = 0 goto label5 <NEXT> $ z2 = r5 be clone <NEXT> if $ z2 ! = 0 goto label5 <NEXT> $ r13 = r5 index <NEXT> $ r14 = $ r13 key set <NEXT> r6 = $ r14 iterator <NEXT> label $ z3 = r6 have next <NEXT> if $ z3 == 0 goto label5 <NEXT> $ r15 = r6 next <NEXT> r7 = java lang string $ r15 <NEXT> $ r16 = r0 metadata <NEXT> r8 = $ r16 index r7 <NEXT> if r8 == null goto label4 <NEXT> $ r17 = r8 get index <NEXT> $ z4 = r1 contain $ r17 <NEXT> if $ z4 == 0 goto label4 <NEXT> $ r18 = r8 get index <NEXT> $ r10 add $ r18 <NEXT> label goto label3 <NEXT> if $ z3 == 0 goto label5 <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label6 <NEXT> label return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch task task manager r0 <NEXT> $ r1 = r2 ban parent <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 write to r1 <NEXT> r3 = org elasticsearch transport bytes transport request r0 <NEXT> $ r2 = r3 bytes <NEXT> $ i0 = $ r2 length <NEXT> r1 write v int $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch transport cluster connection manager r0 <NEXT> $ r1 = r2 connect node <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 length <NEXT> if $ i0 > = 6 goto label1 <NEXT> return -1 <NEXT> if $ i0 > = 6 goto label1 <NEXT> label $ i1 = org elasticsearch transport tcp transport read header buffer r0 <NEXT> return $ i1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org elasticsearch transport transport action proxy $ proxy request <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org elasticsearch transport transport action proxy $ proxy request r0 <NEXT> $ r2 = $ r1 wrap <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org elasticsearch transport transport action proxy $ proxy request <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r5 = org elasticsearch transport transport service r0 <NEXT> $ r1 = r5 handle incoming request <NEXT> z0 = $ r1 compare and set 0 1 <NEXT> $ z1 = org elasticsearch transport transport service $ assertion disable <NEXT> if $ z1 ! = 0 goto label1 <NEXT> if z0 ! = 0 goto label1 <NEXT> r4 = new java lang assertion error <NEXT> specialinvoke r4 < init > \ `` transport service be already accept incoming requests\ `` <NEXT> throw r4 <NEXT> if z0 ! = 0 goto label1 <NEXT> label $ r2 = org elasticsearch transport transport service logger <NEXT> $ r2 debug \ `` now accept incoming requests\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org elasticsearch transport transport service r0 <NEXT> $ r3 = transport service $ lambda_open connection_7__9 bootstrap $ r6 r1 r2 <NEXT> $ r4 = org elasticsearch action support plain action future get $ r3 <NEXT> $ r5 = org elasticsearch transport transport $ connection $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org elasticsearch transport transport service r0 <NEXT> $ z0 = specialinvoke r5 be local node r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org elasticsearch transport transport service r0 <NEXT> $ r4 = r6 local node connection <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org elasticsearch transport transport service r0 <NEXT> $ r2 = r7 connection manager <NEXT> $ r3 = $ r2 get connection r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org elasticsearch watcher abstract resource watcher r0 <NEXT> $ r2 = r3 listener <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org elasticsearch watcher abstract resource watcher r0 <NEXT> $ r2 = r3 listener <NEXT> $ r2 remove r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i2 = i0 + 2 <NEXT> r1 = newarray char [ $ i2 ] <NEXT> label i8 = 0 <NEXT> label $ i3 = r0 read <NEXT> if $ i3 == -1 goto label5 <NEXT> c9 = char $ i3 <NEXT> if c9 ! = 10 goto label3 <NEXT> goto label5 <NEXT> label if i8 < = 0 goto label6 <NEXT> $ i4 = lengthof r1 <NEXT> if i8 > = $ i4 goto label6 <NEXT> $ i5 = i8 - 1 <NEXT> $ c6 = r1 [ $ i5 ] <NEXT> if $ c6 ! = 13 goto label6 <NEXT> i8 = i8 + -1 <NEXT> label if i8 < = i0 goto label7 <NEXT> java util array fill r1 0 <NEXT> $ r2 = new java lang runtime exception <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` input exceed maximum length of \ `` <NEXT> $ r5 = $ r4 append i0 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke $ r2 < init > $ r6 <NEXT> throw $ r2 <NEXT> label if i8 < = i0 goto label7 <NEXT> label r9 = java util array copy of r1 i8 <NEXT> if c9 ! = 10 goto label3 <NEXT> label $ i7 = lengthof r1 <NEXT> if i8 > = $ i7 goto label4 <NEXT> r1 [ i8 ] = c9 <NEXT> label i8 = i8 + 1 <NEXT> goto label2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> java util object require non null r0 \ `` char array must not be null for constant time equals\ `` <NEXT> java util object require non null r1 \ `` char array must not be null for constant time equals\ `` <NEXT> $ i1 = lengthof r0 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i1 == $ i0 goto label1 <NEXT> return 0 <NEXT> if $ i1 == $ i0 goto label1 <NEXT> label c6 = 0 <NEXT> i7 = 0 <NEXT> label $ i2 = lengthof r0 <NEXT> if i7 > = $ i2 goto label3 <NEXT> $ c4 = r0 [ i7 ] <NEXT> $ c3 = r1 [ i7 ] <NEXT> $ c5 = $ c4 ^ $ c3 <NEXT> c6 = c6 | $ c5 <NEXT> i7 = i7 + 1 <NEXT> goto label2 <NEXT> if i7 > = $ i2 goto label3 <NEXT> label if c6 ! = 0 goto label4 <NEXT> $ z0 = 1 <NEXT> goto label5 <NEXT> label return $ z0 <NEXT> label if c6 ! = 0 goto label4 <NEXT> label $ z0 = 0 <END>
<BEG> $ r0 = org elasticsearch core internal net net utils get extend socket option or null \ `` tcp_keepcount\ `` <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = @ parameter6 <NEXT> r7 = @ parameter7 <NEXT> $ r8 = newarray java lang object [ 8 ] <NEXT> $ r8 [ 0 ] = r0 <NEXT> $ r8 [ 1 ] = r1 <NEXT> $ r8 [ 2 ] = r2 <NEXT> $ r8 [ 3 ] = r3 <NEXT> $ r8 [ 4 ] = r4 <NEXT> $ r8 [ 5 ] = r5 <NEXT> $ r8 [ 6 ] = r6 <NEXT> $ r8 [ 7 ] = r7 <NEXT> $ r9 = org elasticsearch core map map n $ r8 <NEXT> return $ r9 <END>
<BEG> $ r0 = org elasticsearch core path utils default <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 <NEXT> r22 = null <NEXT> $ z0 = org elasticsearch jdk java version be valid r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r16 = new java lang illegal argument exception <NEXT> $ r17 = new java lang string builder <NEXT> specialinvoke $ r17 < init > <NEXT> $ r18 = $ r17 append \ `` java version string [ \ `` <NEXT> $ r19 = $ r18 append r0 <NEXT> $ r20 = $ r19 append \ `` ] could not be parse \ `` <NEXT> $ r21 = $ r20 to string <NEXT> specialinvoke $ r16 < init > $ r21 <NEXT> throw $ r16 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r6 = new java util array list <NEXT> specialinvoke $ r6 < init > <NEXT> r2 = r0 split \ `` -\ `` <NEXT> $ i1 = lengthof r2 <NEXT> if $ i1 ! = 1 goto label2 <NEXT> r23 = r0 split \ `` \\ \ `` <NEXT> goto label4 <NEXT> label r3 = r23 <NEXT> i0 = lengthof r23 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label6 <NEXT> r4 = r3 [ i3 ] <NEXT> $ r15 = java lang integer value of r4 <NEXT> $ r6 add $ r15 <NEXT> i3 = i3 + 1 <NEXT> goto label5 <NEXT> label if i3 > = i0 goto label6 <NEXT> label $ r14 = new org elasticsearch jdk java version <NEXT> specialinvoke $ r14 < init > $ r6 r22 <NEXT> return $ r14 <NEXT> if $ i1 ! = 1 goto label2 <NEXT> label $ i2 = lengthof r2 <NEXT> if $ i2 ! = 2 goto label3 <NEXT> $ r13 = r2 [ 0 ] <NEXT> r23 = $ r13 split \ `` \\ \ `` <NEXT> r22 = r2 [ 1 ] <NEXT> if $ i2 ! = 2 goto label3 <NEXT> label $ r7 = new java lang illegal argument exception <NEXT> $ r8 = new java lang string builder <NEXT> specialinvoke $ r8 < init > <NEXT> $ r9 = $ r8 append \ `` java version string [ \ `` <NEXT> $ r10 = $ r9 append r0 <NEXT> $ r11 = $ r10 append \ `` ] could not be parse \ `` <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke $ r7 < init > $ r12 <NEXT> throw $ r7 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ l2 = long i0 <NEXT> l46 = 4294967295l & $ l2 <NEXT> $ l3 = long i1 <NEXT> l47 = 4294967295l & $ l3 <NEXT> $ r0 = org elasticsearch geometry utils bit util shift <NEXT> $ s4 = $ r0 [ 4 ] <NEXT> $ l5 = l46 < < $ s4 <NEXT> $ l7 = l46 | $ l5 <NEXT> $ r1 = org elasticsearch geometry utils bit util magic <NEXT> $ l6 = $ r1 [ 4 ] <NEXT> l48 = $ l7 & $ l6 <NEXT> $ r2 = org elasticsearch geometry utils bit util shift <NEXT> $ s8 = $ r2 [ 3 ] <NEXT> $ l9 = l48 < < $ s8 <NEXT> $ l11 = l48 | $ l9 <NEXT> $ r3 = org elasticsearch geometry utils bit util magic <NEXT> $ l10 = $ r3 [ 3 ] <NEXT> l49 = $ l11 & $ l10 <NEXT> $ r4 = org elasticsearch geometry utils bit util shift <NEXT> $ s12 = $ r4 [ 2 ] <NEXT> $ l13 = l49 < < $ s12 <NEXT> $ l15 = l49 | $ l13 <NEXT> $ r5 = org elasticsearch geometry utils bit util magic <NEXT> $ l14 = $ r5 [ 2 ] <NEXT> l50 = $ l15 & $ l14 <NEXT> $ r6 = org elasticsearch geometry utils bit util shift <NEXT> $ s16 = $ r6 [ 1 ] <NEXT> $ l17 = l50 < < $ s16 <NEXT> $ l19 = l50 | $ l17 <NEXT> $ r7 = org elasticsearch geometry utils bit util magic <NEXT> $ l18 = $ r7 [ 1 ] <NEXT> l51 = $ l19 & $ l18 <NEXT> $ r8 = org elasticsearch geometry utils bit util shift <NEXT> $ s20 = $ r8 [ 0 ] <NEXT> $ l21 = l51 < < $ s20 <NEXT> $ l23 = l51 | $ l21 <NEXT> $ r9 = org elasticsearch geometry utils bit util magic <NEXT> $ l22 = $ r9 [ 0 ] <NEXT> l52 = $ l23 & $ l22 <NEXT> $ r10 = org elasticsearch geometry utils bit util shift <NEXT> $ s24 = $ r10 [ 4 ] <NEXT> $ l25 = l47 < < $ s24 <NEXT> $ l27 = l47 | $ l25 <NEXT> $ r11 = org elasticsearch geometry utils bit util magic <NEXT> $ l26 = $ r11 [ 4 ] <NEXT> l53 = $ l27 & $ l26 <NEXT> $ r12 = org elasticsearch geometry utils bit util shift <NEXT> $ s28 = $ r12 [ 3 ] <NEXT> $ l29 = l53 < < $ s28 <NEXT> $ l31 = l53 | $ l29 <NEXT> $ r13 = org elasticsearch geometry utils bit util magic <NEXT> $ l30 = $ r13 [ 3 ] <NEXT> l54 = $ l31 & $ l30 <NEXT> $ r14 = org elasticsearch geometry utils bit util shift <NEXT> $ s32 = $ r14 [ 2 ] <NEXT> $ l33 = l54 < < $ s32 <NEXT> $ l35 = l54 | $ l33 <NEXT> $ r15 = org elasticsearch geometry utils bit util magic <NEXT> $ l34 = $ r15 [ 2 ] <NEXT> l55 = $ l35 & $ l34 <NEXT> $ r16 = org elasticsearch geometry utils bit util shift <NEXT> $ s36 = $ r16 [ 1 ] <NEXT> $ l37 = l55 < < $ s36 <NEXT> $ l39 = l55 | $ l37 <NEXT> $ r17 = org elasticsearch geometry utils bit util magic <NEXT> $ l38 = $ r17 [ 1 ] <NEXT> l56 = $ l39 & $ l38 <NEXT> $ r18 = org elasticsearch geometry utils bit util shift <NEXT> $ s40 = $ r18 [ 0 ] <NEXT> $ l41 = l56 < < $ s40 <NEXT> $ l43 = l56 | $ l41 <NEXT> $ r19 = org elasticsearch geometry utils bit util magic <NEXT> $ l42 = $ r19 [ 0 ] <NEXT> l57 = $ l43 & $ l42 <NEXT> $ l44 = l57 < < 1 <NEXT> $ l45 = $ l44 | l52 <NEXT> return $ l45 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 length <NEXT> $ l1 = org elasticsearch geometry utils geohash long encode r0 $ i0 <NEXT> return $ l1 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ r0 = org elasticsearch geometry utils geohash string encode d0 d1 12 <NEXT> return $ r0 <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = org elasticsearch geometry utils geohash precision to lat height <NEXT> $ d0 = $ r0 [ i0 ] <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client response r0 <NEXT> $ r1 = r2 host <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = java util collection empty map <NEXT> r6 = org elasticsearch client rest client r0 <NEXT> $ r5 = r6 perform request r1 r2 $ r4 null r3 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client request r0 <NEXT> $ r1 = r2 option <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch client analytics parse string stats r0 <NEXT> $ i0 = r1 min length <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch client asyncsearch submit async search request r0 <NEXT> $ r1 = r3 search request <NEXT> $ r2 = $ r1 allow partial search result <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = java lang integer value of i0 <NEXT> r2 = org elasticsearch client asyncsearch submit async search request r0 <NEXT> r2 batch reduce size = $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org elasticsearch client asyncsearch submit async search request r0 <NEXT> $ r1 = r3 search request <NEXT> $ r2 = $ r1 request cache <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client async search client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = async search client $ submit async search__6 bootstrap $ <NEXT> $ r6 = async search client $ from x content__12 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client async search client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = async search client $ get async search__6 bootstrap $ <NEXT> $ r6 = async search client $ from x content__8 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client ccr client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = ccr client $ pause follow__12 bootstrap $ <NEXT> $ r5 = ccr client $ from x content__22 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client core acknowledge response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client cluster client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = cluster client $ delete component template__10 bootstrap $ <NEXT> $ r6 = cluster client $ from x content__27 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client cluster client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = cluster client $ put component template__12 bootstrap $ <NEXT> $ r5 = cluster client $ from x content__24 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch action support master acknowledge response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client cluster client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = cluster client $ get component templates__9 bootstrap $ <NEXT> $ r5 = cluster client $ from x content__16 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client index get component template response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client core broadcast response r0 <NEXT> $ r1 = r2 shard <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch client core count response r0 <NEXT> $ l0 = r1 count <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch client core term vector response r0 <NEXT> $ l0 = r1 take in millis <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client graph client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = graph client $ explore__1 bootstrap $ <NEXT> $ r5 = graph client $ from x content__3 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client graph graph explore response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client index lifecycle client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = index lifecycle client $ start i l m__3 bootstrap $ <NEXT> $ r6 = index lifecycle client $ from x content__22 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client index lifecycle client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = index lifecycle client $ explain lifecycle__31 bootstrap $ <NEXT> $ r6 = index lifecycle client $ from x content__41 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client index lifecycle client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = index lifecycle client $ delete snapshot lifecycle policy__36 bootstrap $ <NEXT> $ r5 = index lifecycle client $ from x content__40 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client core acknowledge response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client index lifecycle client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = index lifecycle client $ snapshot lifecycle management status__67 bootstrap $ <NEXT> $ r6 = index lifecycle client $ from x content__72 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = new org elasticsearch client index analyze request <NEXT> specialinvoke $ r3 < init > r0 null r1 null r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client index close index request r0 <NEXT> $ r1 = r2 wait for active shard <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client index put component template request r0 <NEXT> $ r1 = r2 cause <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client index simulate index template request r0 <NEXT> $ r1 = r2 index name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client index simulate index template request r0 <NEXT> $ r1 = r2 index template v2 request <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client index unfreeze index request r0 <NEXT> $ r1 = r2 index <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client index client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = indices client $ get data streams__5 bootstrap $ <NEXT> $ r6 = index client $ from x content__17 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client index client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = indices client $ index exist__99 bootstrap $ <NEXT> $ r5 = index client $ convert exist response__111 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = $ r3 perform request r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = java lang boolean $ r7 <NEXT> $ z0 = $ r8 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client index client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = indices client $ rollover__135 bootstrap $ <NEXT> $ r5 = index client $ from x content__137 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch action admin index rollover rollover response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client index client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = indices client $ index put settings__145 bootstrap $ <NEXT> $ r6 = index client $ from x content__154 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client index client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = indices client $ analyze__183 bootstrap $ <NEXT> $ r5 = index client $ from x content__193 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client index analyze response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = machine learn client $ get job__5 bootstrap $ <NEXT> $ r6 = machine learn client $ from x content__20 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = machine learn client $ open job__6 bootstrap $ <NEXT> $ r5 = machine learn client $ from x content__23 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client ml open job response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = machine learn client $ get datafeed__59 bootstrap $ <NEXT> $ r6 = machine learn client $ from x content__64 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = machine learn client $ post data__116 bootstrap $ <NEXT> $ r5 = machine learn client $ from x content__127 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client ml post data response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = machine learn client $ delete calendar__134 bootstrap $ <NEXT> $ r5 = machine learn client $ from x content__143 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch action support master acknowledge response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = machine learn client $ update filter__164 bootstrap $ <NEXT> $ r5 = machine learn client $ from x content__167 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client ml put filter response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = machine learn client $ delete filter__168 bootstrap $ <NEXT> $ r5 = machine learn client $ from x content__176 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch action support master acknowledge response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = machine learn client $ update data frame analytics__185 bootstrap $ <NEXT> $ r5 = machine learn client $ from x content__197 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client ml put data frame analytics response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = machine learn client $ stop data frame analytics__200 bootstrap $ <NEXT> $ r5 = machine learn client $ from x content__218 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client ml stop data frame analytics response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = machine learn client $ delete data frame analytics__203 bootstrap $ <NEXT> $ r6 = machine learn client $ from x content__212 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = machine learn client $ evaluate data frame__202 bootstrap $ <NEXT> $ r5 = machine learn client $ from x content__214 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client ml evaluate data frame response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client machine learn client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = machine learn client $ evaluate data frame__204 bootstrap $ <NEXT> $ r6 = machine learn client $ from x content__213 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> $ r0 = new org elasticsearch client ml datafeed delay data check config <NEXT> $ r1 = java lang boolean value of 0 <NEXT> specialinvoke $ r0 < init > $ r1 null <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch client ml delete job request r0 <NEXT> r2 force = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch client ml flush job response r0 <NEXT> $ z0 = r1 flush <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch client ml forecast job response r0 <NEXT> $ z0 = r1 acknowledge <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch client ml get bucket request r0 <NEXT> r2 anomaly score = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client ml get category response r0 <NEXT> $ r1 = r2 result <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org elasticsearch client ml get filter request r0 <NEXT> r2 from = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = java lang boolean value of z0 <NEXT> r2 = org elasticsearch client ml get train model request r0 <NEXT> r2 allow no match = $ r1 <NEXT> r3 = org elasticsearch client ml get train model request r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client ml node attribute r0 <NEXT> $ r1 = r2 transport address <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util object require non null r1 \ `` [ job_id ] must not be null\ `` <NEXT> $ r3 = java lang string $ r2 <NEXT> r4 = org elasticsearch client ml open job request r0 <NEXT> r4 job id = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util object require non null r1 \ `` [ job_id ] must not be null\ `` <NEXT> $ r3 = java lang string $ r2 <NEXT> r4 = org elasticsearch client ml reset job request r0 <NEXT> r4 job id = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client ml stop datafeed request r0 <NEXT> $ r1 = r2 datafeed id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch client ml stop datafeed response r0 <NEXT> $ z0 = r1 stop <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = new java util tree set <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r4 = r12 append \ `` [ \ `` <NEXT> $ r5 = org elasticsearch client ml update filter request add_items <NEXT> $ r6 = $ r5 get prefer name <NEXT> $ r7 = $ r4 append $ r6 <NEXT> $ r8 = $ r7 append \ `` ] must not be null\ `` <NEXT> $ r9 = $ r8 to string <NEXT> $ r10 = java util object require non null r1 $ r9 <NEXT> $ r11 = java util collection $ r10 <NEXT> specialinvoke r13 < init > $ r11 <NEXT> r14 = org elasticsearch client ml update filter request r0 <NEXT> r14 add item = r13 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client rest high level client r0 <NEXT> $ r1 = r2 ccr client <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client rest high level client r0 <NEXT> $ r1 = r2 license client <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = rest high level client $ reindex__9 bootstrap $ <NEXT> $ r4 = rest high level client $ from x content__19 bootstrap $ <NEXT> $ r5 = java lang integer value of 409 <NEXT> $ r6 = java util collection singleton $ r5 <NEXT> r9 = org elasticsearch client rest high level client r0 <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = r9 perform request and parse entity r10 $ r3 r2 $ r4 $ r6 <NEXT> $ r8 = org elasticsearch index reindex bulk by scroll response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = rest high level client $ get__37 bootstrap $ <NEXT> $ r4 = rest high level client $ from x content__39 bootstrap $ <NEXT> $ r5 = java lang integer value of 404 <NEXT> $ r6 = java util collection singleton $ r5 <NEXT> r9 = org elasticsearch client rest high level client r0 <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = r9 perform request and parse entity r10 $ r3 r2 $ r4 $ r6 <NEXT> $ r8 = org elasticsearch action get get response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = rest high level client $ index__64 bootstrap $ <NEXT> $ r5 = rest high level client $ from x content__73 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r8 = org elasticsearch client rest high level client r0 <NEXT> r9 = org elasticsearch action action request r1 <NEXT> $ r7 = r8 perform request async and parse entity r9 $ r4 r2 $ r5 r3 $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = rest high level client $ delete__71 bootstrap $ <NEXT> $ r5 = rest high level client $ from x content__86 bootstrap $ <NEXT> $ r6 = java lang integer value of 404 <NEXT> $ r7 = java util collection singleton $ r6 <NEXT> r9 = org elasticsearch client rest high level client r0 <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r8 = r9 perform request async and parse entity r10 $ r4 r2 $ r5 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = rest high level client $ mterm vectors__114 bootstrap $ <NEXT> $ r4 = rest high level client $ from x content__119 bootstrap $ <NEXT> $ r5 = java util collection empty set <NEXT> r8 = org elasticsearch client rest high level client r0 <NEXT> r9 = org elasticsearch client validatable r1 <NEXT> $ r6 = r8 perform request and parse entity r9 $ r3 r2 $ r4 $ r5 <NEXT> $ r7 = org elasticsearch client core multi term vector response $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org elasticsearch client security delete privilege response r0 <NEXT> $ r2 = r3 privilege <NEXT> $ z0 = $ r2 contain r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org elasticsearch client security get api key request <NEXT> specialinvoke $ r1 < init > r0 null null null 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org elasticsearch client security get api key request <NEXT> specialinvoke $ r2 < init > r0 r1 null null 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client security security node response r0 <NEXT> $ r1 = r2 node <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch client security user privilege abstract index privilege r0 <NEXT> $ r1 = r2 privilege <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = org elasticsearch client security client r0 <NEXT> $ r3 = r10 rest high level client <NEXT> $ r4 = security client $ delete user__5 bootstrap $ <NEXT> $ r5 = security client $ from x content__23 bootstrap $ <NEXT> $ r6 = java lang integer value of 404 <NEXT> $ r7 = java util collection singleton $ r6 <NEXT> r11 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r3 perform request and parse entity r11 $ r4 r2 $ r5 $ r7 <NEXT> $ r9 = org elasticsearch client security delete user response $ r8 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org elasticsearch client security client r0 <NEXT> $ z0 = r3 disable user r2 r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org elasticsearch client security client r0 <NEXT> $ r2 = r9 rest high level client <NEXT> $ r3 = org elasticsearch client security authenticate request instance <NEXT> $ r4 = security client $ get request__32 bootstrap $ <NEXT> $ r5 = security client $ from x content__50 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable $ r3 <NEXT> $ r7 = $ r2 perform request and parse entity r10 $ r4 r1 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client security authenticate response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client security client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = security client $ clear api key cache__47 bootstrap $ <NEXT> $ r6 = security client $ from x content__55 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client security client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = org elasticsearch client security get ssl certificate request instance <NEXT> $ r5 = security client $ get request__59 bootstrap $ <NEXT> $ r6 = security client $ from x content__79 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable $ r4 <NEXT> $ r8 = $ r3 perform request async and parse entity r10 $ r5 r1 $ r6 r2 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client security client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = security client $ create token__84 bootstrap $ <NEXT> $ r6 = security client $ from x content__90 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client security client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = security client $ create api key__107 bootstrap $ <NEXT> $ r5 = security client $ from x content__114 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client security create api key response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client snapshot client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = snapshot client $ create repository__5 bootstrap $ <NEXT> $ r5 = snapshot client $ from x content__24 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch action support master acknowledge response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client snapshot client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = snapshot client $ delete repository__8 bootstrap $ <NEXT> $ r6 = snapshot client $ from x content__26 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client snapshot client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = snapshot client $ get snapshots__31 bootstrap $ <NEXT> $ r6 = snapshot client $ from x content__37 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client snapshot client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = snapshot client $ restore snapshot__34 bootstrap $ <NEXT> $ r5 = snapshot client $ from x content__39 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch action action request r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch action admin cluster snapshot restore restore snapshot response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client text structure client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = text structure client $ find file structure__2 bootstrap $ <NEXT> $ r6 = text structure client $ from x content__3 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org elasticsearch client transform client r0 <NEXT> $ r3 = r9 rest high level client <NEXT> $ r4 = transform client $ get transform__1 bootstrap $ <NEXT> $ r5 = transform client $ from x content__18 bootstrap $ <NEXT> $ r6 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r7 = $ r3 perform request and parse entity r10 $ r4 r2 $ r5 $ r6 <NEXT> $ r8 = org elasticsearch client transform get transform response $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org elasticsearch client watcher put watch request r0 <NEXT> r1 active = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client watcher client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = watcher client $ deactivate watch__3 bootstrap $ <NEXT> $ r6 = watcher client $ from x content__27 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = org elasticsearch client watcher client r0 <NEXT> $ r3 = r10 rest high level client <NEXT> $ r4 = watcher client $ delete watch__11 bootstrap $ <NEXT> $ r5 = watcher client $ from x content__16 bootstrap $ <NEXT> $ r6 = java lang integer value of 404 <NEXT> $ r7 = java util collection singleton $ r6 <NEXT> r11 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r3 perform request and parse entity r11 $ r4 r2 $ r5 $ r7 <NEXT> $ r9 = org elasticsearch client watcher delete watch response $ r8 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client watcher client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = watcher client $ ack watch__4 bootstrap $ <NEXT> $ r6 = watcher client $ from x content__17 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r9 = org elasticsearch client x pack client r0 <NEXT> $ r4 = r9 rest high level client <NEXT> $ r5 = x pack client $ info__2 bootstrap $ <NEXT> $ r6 = x pack client $ from x content__8 bootstrap $ <NEXT> $ r7 = java util collection empty set <NEXT> r10 = org elasticsearch client validatable r1 <NEXT> $ r8 = $ r4 perform request async and parse entity r10 $ r5 r2 $ r6 r3 $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch common xcontent x content builder r0 <NEXT> $ z0 = r1 human readable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r3 = org elasticsearch common xcontent x content builder r0 <NEXT> $ r2 = r3 generator <NEXT> $ r2 write u t f8 string r1 i0 i1 <NEXT> r4 = org elasticsearch common xcontent x content builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = net objecthunter exp4j operator operator r0 <NEXT> $ r1 = r2 symbol <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = net objecthunter exp4j tokenizer number token r0 <NEXT> $ d0 = r1 value <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = net objecthunter exp4j validation result r0 <NEXT> $ r1 = r2 error <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf expectit expect builder r0 <NEXT> r2 input = r1 <NEXT> r3 = net sf expectit expect builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf expectit expect builder r0 <NEXT> r2 charset = r1 <NEXT> r3 = net sf expectit expect builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > 0 goto label1 <NEXT> r2 = new java lang illegal argument exception <NEXT> specialinvoke r2 < init > \ `` buffer size must be > 0\ `` <NEXT> throw r2 <NEXT> if i0 > 0 goto label1 <NEXT> label r3 = net sf expectit expect builder r0 <NEXT> r3 buffer size = i0 <NEXT> r4 = net sf expectit expect builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r4 = new net sf expectit matcher simple result <NEXT> specialinvoke r4 < init > 1 r0 r1 r2 1 <NEXT> r5 = net sf expectit result r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r3 = new net jodah failsafe util duration <NEXT> r4 = net jodah failsafe abstract execution r0 <NEXT> $ l0 = r4 wait nanos <NEXT> $ r2 = java util concurrent time unit nanoseconds <NEXT> specialinvoke r3 < init > $ l0 $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r10 = net jodah failsafe async execution r0 <NEXT> $ r5 = r10 future <NEXT> entermonitor $ r5 <NEXT> label r11 = net jodah failsafe async execution r0 <NEXT> $ z1 = r11 complete call <NEXT> if $ z1 ! = 0 goto label3 <NEXT> $ z2 = specialinvoke r0 complete r1 r2 z0 <NEXT> if $ z2 == 0 goto label2 <NEXT> r12 = net jodah failsafe async execution r0 <NEXT> $ r8 = r12 future <NEXT> r13 = net jodah failsafe async execution r0 <NEXT> $ r6 = r13 config <NEXT> $ r7 = $ r6 fallback <NEXT> r14 = net jodah failsafe async execution r0 <NEXT> $ z3 = r14 success <NEXT> $ r8 complete r1 r2 $ r7 $ z3 <NEXT> label r15 = net jodah failsafe async execution r0 <NEXT> r15 complete call = 1 <NEXT> label r16 = net jodah failsafe async execution r0 <NEXT> $ z4 = r16 complete <NEXT> exitmonitor $ r5 <NEXT> label return $ z4 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r10 = net jodah failsafe failsafe future r0 <NEXT> $ z2 = r10 do <NEXT> if $ z2 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z2 == 0 goto label1 <NEXT> label r11 = net jodah failsafe failsafe future r0 <NEXT> $ r1 = r11 delegate <NEXT> z1 = $ r1 cancel z0 <NEXT> r9 = new java util concurrent cancellation exception <NEXT> specialinvoke r9 < init > <NEXT> r12 = net jodah failsafe failsafe future r0 <NEXT> r12 failure = r9 <NEXT> r13 = net jodah failsafe failsafe future r0 <NEXT> r13 cancel = 1 <NEXT> r14 = net jodah failsafe failsafe future r0 <NEXT> $ r5 = r14 config <NEXT> r15 = net jodah failsafe failsafe future r0 <NEXT> $ r4 = r15 failure <NEXT> r16 = net jodah failsafe failsafe future r0 <NEXT> $ r3 = r16 execution <NEXT> $ r5 handle complete null $ r4 $ r3 0 <NEXT> r17 = net jodah failsafe failsafe future r0 <NEXT> $ r8 = r17 failure <NEXT> r18 = net jodah failsafe failsafe future r0 <NEXT> $ r6 = r18 config <NEXT> $ r7 = $ r6 fallback <NEXT> r19 = net jodah failsafe failsafe future r0 <NEXT> r19 complete null $ r8 $ r7 0 <NEXT> return z1 <END>
<BEG> r0 = @ this <NEXT> r1 = net jodah failsafe internal util circular bit set r0 <NEXT> $ i0 = r1 negative <NEXT> $ d1 = double $ i0 <NEXT> r2 = net jodah failsafe internal util circular bit set r0 <NEXT> $ i1 = r2 occupy bit <NEXT> $ d0 = double $ i1 <NEXT> $ d2 = $ d1 $ d0 <NEXT> return $ d2 <END>
<BEG> r0 = @ this <NEXT> r1 = net jodah failsafe retry policy r0 <NEXT> $ d0 = r1 delay factor <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = net jodah failsafe util duration r0 <NEXT> $ r1 = r2 time unit <NEXT> r3 = net jodah failsafe util duration r0 <NEXT> $ l0 = r3 length <NEXT> $ l1 = $ r1 to second $ l0 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> r1 = com sun xml fastinfoset stax event location r0 <NEXT> $ i0 = r1 _char offset <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun xml fastinfoset stax event d t d event r0 <NEXT> $ r1 = r2 _dtd <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun xml fastinfoset stax event end element event r0 <NEXT> $ r1 = r2 _qname <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun xml fastinfoset stax event entity declaration impl r0 <NEXT> $ r1 = r2 _public id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun xml fastinfoset stax event entity declaration impl r0 <NEXT> $ r1 = r2 _notation name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = com sun xml fastinfoset util qualify name array r0 <NEXT> $ r2 = r6 _array <NEXT> if $ r2 ! = null goto label1 <NEXT> return null <NEXT> if $ r2 ! = null goto label1 <NEXT> label r7 = com sun xml fastinfoset util qualify name array r0 <NEXT> $ r3 = r7 _array <NEXT> $ i0 = lengthof $ r3 <NEXT> r1 = newarray com sun xml fastinfoset qualify name [ $ i0 ] <NEXT> r8 = com sun xml fastinfoset util qualify name array r0 <NEXT> $ r5 = r8 _array <NEXT> r9 = com sun xml fastinfoset util qualify name array r0 <NEXT> $ r4 = r9 _array <NEXT> $ i1 = lengthof $ r4 <NEXT> java lang system arraycopy $ r5 0 r1 0 $ i1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> i3 = 0 <NEXT> label r3 = org jvnet fastinfoset sax helper encode algorithm attribute impl r0 <NEXT> $ i0 = r3 _length <NEXT> if i3 > = $ i0 goto label2 <NEXT> r4 = org jvnet fastinfoset sax helper encode algorithm attribute impl r0 <NEXT> $ r1 = r4 _data <NEXT> $ i1 = i3 * 6 <NEXT> $ i2 = $ i1 + 4 <NEXT> $ r1 [ $ i2 ] = null <NEXT> r5 = org jvnet fastinfoset sax helper encode algorithm attribute impl r0 <NEXT> $ r2 = r5 _algorithm data <NEXT> $ r2 [ i3 ] = null <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label2 <NEXT> label r6 = org jvnet fastinfoset sax helper encode algorithm attribute impl r0 <NEXT> r6 _length = 0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> i0 = @ parameter3 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label2 <NEXT> r0 swap i1 i2 <NEXT> i3 = i3 + 1 <NEXT> i1 = i1 + 1 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label2 <NEXT> label return <END>
<BEG> l0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> l2 = @ parameter2 <NEXT> $ b3 = l1 cmp 0l <NEXT> if $ b3 > = 0 goto label1 <NEXT> $ r14 = new java lang array index out of bound exception <NEXT> $ r15 = new java lang string builder <NEXT> specialinvoke $ r15 < init > <NEXT> $ r16 = $ r15 append \ `` offset \ `` <NEXT> $ r17 = $ r16 append l1 <NEXT> $ r18 = $ r17 append \ `` be negative\ `` <NEXT> $ r19 = $ r18 to string <NEXT> specialinvoke $ r14 < init > $ r19 <NEXT> throw $ r14 <NEXT> if $ b3 > = 0 goto label1 <NEXT> label $ b4 = l2 cmp 0l <NEXT> if $ b4 > = 0 goto label2 <NEXT> $ r8 = new java lang illegal argument exception <NEXT> $ r9 = new java lang string builder <NEXT> specialinvoke $ r9 < init > <NEXT> $ r10 = $ r9 append \ `` length \ `` <NEXT> $ r11 = $ r10 append l2 <NEXT> $ r12 = $ r11 append \ `` be negative\ `` <NEXT> $ r13 = $ r12 to string <NEXT> specialinvoke $ r8 < init > $ r13 <NEXT> throw $ r8 <NEXT> if $ b4 > = 0 goto label2 <NEXT> label $ l5 = l1 + l2 <NEXT> $ b6 = $ l5 cmp l0 <NEXT> if $ b6 < = 0 goto label3 <NEXT> $ r0 = new java lang array index out of bound exception <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` last index \ `` <NEXT> $ l7 = l1 + l2 <NEXT> $ r3 = $ r2 append $ l7 <NEXT> $ r4 = $ r3 append \ `` be great than big-array length \ `` <NEXT> $ r5 = $ r4 append l0 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke $ r0 < init > $ r7 <NEXT> throw $ r0 <NEXT> if $ b6 < = 0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> l4 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> l5 = @ parameter2 <NEXT> l6 = @ parameter3 <NEXT> r2 = it unimi dsi fastutil booleans abstract boolean big list r0 <NEXT> r2 ensure index l4 <NEXT> it unimi dsi fastutil booleans boolean big array ensure offset length r1 l5 l6 <NEXT> label $ l0 = l6 <NEXT> l6 = l6 - 1l <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 == 0 goto label2 <NEXT> $ l2 = l4 <NEXT> l4 = l4 + 1l <NEXT> $ l3 = l5 <NEXT> l5 = l5 + 1l <NEXT> $ z0 = it unimi dsi fastutil booleans boolean big array get r1 $ l3 <NEXT> r3 = it unimi dsi fastutil booleans abstract boolean big list r0 <NEXT> r3 add $ l2 $ z0 <NEXT> goto label1 <NEXT> if $ b1 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = r0 goto label01 <NEXT> return 0 <NEXT> if r1 ! = r0 goto label01 <NEXT> label $ z2 = r1 instanceof it unimi dsi fastutil booleans boolean big list <NEXT> if $ z2 == 0 goto label07 <NEXT> r10 = it unimi dsi fastutil booleans abstract boolean big list r0 <NEXT> r6 = r10 list iterator <NEXT> $ r5 = it unimi dsi fastutil booleans boolean big list r1 <NEXT> r7 = $ r5 list iterator <NEXT> label $ z7 = r6 have next <NEXT> if $ z7 == 0 goto label03 <NEXT> $ z10 = r7 have next <NEXT> if $ z10 == 0 goto label03 <NEXT> z0 = r6 next boolean <NEXT> z1 = r7 next boolean <NEXT> $ i1 = java lang boolean compare z0 z1 <NEXT> if $ i1 == 0 goto label02 <NEXT> return $ i1 <NEXT> if $ z10 == 0 goto label03 <NEXT> label $ z8 = r7 have next <NEXT> if $ z8 == 0 goto label04 <NEXT> $ b3 = -1 <NEXT> goto label06 <NEXT> label return $ b3 <NEXT> if $ z8 == 0 goto label04 <NEXT> label $ z9 = r6 have next <NEXT> if $ z9 == 0 goto label05 <NEXT> $ b3 = 1 <NEXT> if $ z9 == 0 goto label05 <NEXT> label $ b3 = 0 <NEXT> if $ z2 == 0 goto label07 <NEXT> label r11 = it unimi dsi fastutil booleans abstract boolean big list r0 <NEXT> r8 = r11 list iterator <NEXT> r9 = r1 list iterator <NEXT> label r12 = it unimi dsi fastutil big list iterator r8 <NEXT> $ z3 = r12 have next <NEXT> if $ z3 == 0 goto label09 <NEXT> $ z6 = r9 have next <NEXT> if $ z6 == 0 goto label09 <NEXT> r13 = it unimi dsi fastutil big list iterator r8 <NEXT> $ r2 = r13 next <NEXT> $ r3 = java lang comparable $ r2 <NEXT> $ r4 = r9 next <NEXT> $ i0 = $ r3 compare to $ r4 <NEXT> if $ i0 == 0 goto label08 <NEXT> return $ i0 <NEXT> if $ z6 == 0 goto label09 <NEXT> label $ z4 = r9 have next <NEXT> if $ z4 == 0 goto label10 <NEXT> $ b5 = -1 <NEXT> goto label12 <NEXT> label return $ b5 <NEXT> if $ z4 == 0 goto label10 <NEXT> label r14 = it unimi dsi fastutil big list iterator r8 <NEXT> $ z5 = r14 have next <NEXT> if $ z5 == 0 goto label11 <NEXT> $ b5 = 1 <NEXT> if $ z5 == 0 goto label11 <NEXT> label $ b5 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i2 = lengthof r0 <NEXT> if i0 < = $ i2 goto label1 <NEXT> $ i3 = lengthof r0 <NEXT> $ l4 = long $ i3 <NEXT> $ l5 = 2l * $ l4 <NEXT> $ l6 = java lang math min $ l5 2147483639l <NEXT> $ l7 = long i0 <NEXT> $ l8 = java lang math max $ l6 $ l7 <NEXT> i1 = int $ l8 <NEXT> r1 = newarray boolean [ i1 ] <NEXT> $ i9 = lengthof r0 <NEXT> java lang system arraycopy r0 0 r1 0 $ i9 <NEXT> return r1 <NEXT> if i0 < = $ i2 goto label1 <NEXT> label return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ i2 = lengthof r0 <NEXT> it unimi dsi fastutil array ensure from to $ i2 i0 i1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> it unimi dsi fastutil booleans boolean array ensure same length r0 r1 <NEXT> $ i0 = lengthof r0 <NEXT> it unimi dsi fastutil booleans boolean array quick sort r0 r1 0 $ i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> it unimi dsi fastutil booleans boolean array quick sort r0 0 $ i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ r5 = it unimi dsi fastutil booleans boolean big array empty_big_array <NEXT> return $ r5 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ i1 = lengthof r0 <NEXT> if $ i1 > 134217728 goto label2 <NEXT> $ r4 = newarray boolean [ ] [ 1 ] <NEXT> $ r4 [ 0 ] = r0 <NEXT> return $ r4 <NEXT> if $ i1 > 134217728 goto label2 <NEXT> label $ i2 = lengthof r0 <NEXT> $ l3 = long $ i2 <NEXT> r1 = it unimi dsi fastutil booleans boolean big array new big array $ l3 <NEXT> i8 = 0 <NEXT> label $ i4 = lengthof r1 <NEXT> if i8 > = $ i4 goto label4 <NEXT> $ l5 = it unimi dsi fastutil big array start i8 <NEXT> $ i7 = int $ l5 <NEXT> $ r3 = r1 [ i8 ] <NEXT> $ r2 = r1 [ i8 ] <NEXT> $ i6 = lengthof $ r2 <NEXT> java lang system arraycopy r0 $ i7 $ r3 0 $ i6 <NEXT> i8 = i8 + 1 <NEXT> goto label3 <NEXT> if i8 > = $ i4 goto label4 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> l1 = @ parameter2 <NEXT> $ l2 = it unimi dsi fastutil booleans boolean big array length r0 <NEXT> it unimi dsi fastutil big array ensure from to $ l2 l0 l1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new it unimi dsi fastutil booleans boolean big list iterators $ unmodifiable big list iterator <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = it unimi dsi fastutil booleans boolean big list iterator r2 <NEXT> return r3 <END>
<BEG> z0 = @ parameter0 <NEXT> r1 = new it unimi dsi fastutil booleans boolean big list $ singleton <NEXT> specialinvoke r1 < init > z0 null <NEXT> r2 = it unimi dsi fastutil booleans boolean big list r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = it unimi dsi fastutil bytes abstract byte2 boolean function r0 <NEXT> $ z0 = r1 def ret value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = it unimi dsi fastutil bytes byte2 boolean open custom hash map r0 <NEXT> $ r1 = r2 strategy <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> b1 = @ parameter1 <NEXT> r2 = it unimi dsi fastutil bytes byte2 byte a v l tree map r0 <NEXT> r1 = specialinvoke r2 add b0 <NEXT> b2 = r1 value <NEXT> $ b3 = r1 value <NEXT> $ i4 = $ b3 + b1 <NEXT> $ b5 = byte $ i4 <NEXT> r1 value = $ b5 <NEXT> return b2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = it unimi dsi fastutil bytes byte array front cod list r0 <NEXT> r1 ensure restrict index i0 <NEXT> r2 = it unimi dsi fastutil bytes byte array front cod list r0 <NEXT> $ i1 = specialinvoke r2 length i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > = 0 goto label1 <NEXT> r18 = new java lang index out of bound exception <NEXT> r17 = new java lang string builder <NEXT> specialinvoke r17 < init > <NEXT> $ r13 = r17 append \ `` index \ `` <NEXT> $ r14 = $ r13 append i0 <NEXT> $ r15 = $ r14 append \ `` be negative\ `` <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke r18 < init > $ r16 <NEXT> throw r18 <NEXT> if i0 > = 0 goto label1 <NEXT> label r21 = it unimi dsi fastutil bytes byte array indirect priority queue r0 <NEXT> $ r1 = r21 ref array <NEXT> $ i1 = lengthof $ r1 <NEXT> if i0 < $ i1 goto label2 <NEXT> r20 = new java lang index out of bound exception <NEXT> r19 = new java lang string builder <NEXT> specialinvoke r19 < init > <NEXT> $ r4 = r19 append \ `` index \ `` <NEXT> $ r5 = $ r4 append i0 <NEXT> $ r6 = $ r5 append \ `` be large than or equal to reference array size \ `` <NEXT> r22 = it unimi dsi fastutil bytes byte array indirect priority queue r0 <NEXT> $ r7 = r22 ref array <NEXT> $ i2 = lengthof $ r7 <NEXT> $ r8 = $ r6 append $ i2 <NEXT> $ r9 = $ r8 append \ `` \ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r20 < init > $ r10 <NEXT> throw r20 <NEXT> if i0 < $ i1 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> b0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> $ i1 = lengthof r0 <NEXT> $ i2 = it unimi dsi fastutil bytes byte array binary search r0 0 $ i1 b0 r1 <NEXT> return $ i2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> $ i0 = lengthof r0 <NEXT> it unimi dsi fastutil bytes byte array radix sort indirect r0 r1 0 $ i0 z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> it unimi dsi fastutil bytes byte array radix sort r0 0 $ i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ l0 = it unimi dsi fastutil bytes byte big array length r0 <NEXT> it unimi dsi fastutil bytes byte big array radix sort r0 0l $ l0 <NEXT> return <END>
<BEG> b0 = @ parameter0 <NEXT> b1 = @ parameter1 <NEXT> r1 = new it unimi dsi fastutil bytes byte iterators $ interval iterator <NEXT> specialinvoke r1 < init > b0 b1 <NEXT> r2 = it unimi dsi fastutil bytes byte list iterator r1 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new it unimi dsi fastutil bytes byte priority queue $ synchronize priority queue <NEXT> specialinvoke r3 < init > r0 r1 <NEXT> r4 = it unimi dsi fastutil bytes byte priority queue r3 <NEXT> return r4 <END>
<BEG> i3 = @ parameter0 <NEXT> $ i0 = i3 > > > 16 <NEXT> i4 = i3 ^ $ i0 <NEXT> i5 = i4 * -2048144789 <NEXT> $ i1 = i5 > > > 13 <NEXT> i6 = i5 ^ $ i1 <NEXT> i7 = i6 * -1028477387 <NEXT> $ i2 = i7 > > > 16 <NEXT> i8 = i7 ^ $ i2 <NEXT> return i8 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new it unimi dsi fastutil indirect priority queue $ synchronized indirect priority queue <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = it unimi dsi fastutil indirect priority queue r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r1 = @ parameter3 <NEXT> it unimi dsi fastutil booleans boolean array ensure offset length r0 i0 i1 <NEXT> i3 = 0 <NEXT> label if i3 > = i1 goto label2 <NEXT> $ i2 = i0 + i3 <NEXT> $ z0 = r0 [ $ i2 ] <NEXT> r1 write boolean $ z0 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i1 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r9 = new java io file input stream <NEXT> specialinvoke r9 < init > r0 <NEXT> $ r6 = r9 get channel <NEXT> l0 = $ r6 size <NEXT> r2 = it unimi dsi fastutil booleans boolean big array new big array l0 <NEXT> r11 = new java io data input stream <NEXT> r10 = new it unimi dsi fastutil io fast buffer input stream <NEXT> specialinvoke r10 < init > r9 <NEXT> r12 = java io input stream r10 <NEXT> specialinvoke r11 < init > r12 <NEXT> i3 = 0 <NEXT> label $ i2 = lengthof r2 <NEXT> if i3 > = $ i2 goto label4 <NEXT> r4 = r2 [ i3 ] <NEXT> i1 = lengthof r4 <NEXT> i4 = 0 <NEXT> label if i4 > = i1 goto label3 <NEXT> $ z0 = r11 read boolean <NEXT> r4 [ i4 ] = $ z0 <NEXT> i4 = i4 + 1 <NEXT> goto label2 <NEXT> label if i4 > = i1 goto label3 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i2 goto label4 <NEXT> label r11 close <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> $ z0 = r0 [ i1 ] <NEXT> r1 write boolean $ z0 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> i1 = @ parameter3 <NEXT> it unimi dsi fastutil bytes byte array ensure offset length r1 i0 i1 <NEXT> i4 = 0 <NEXT> label i4 = 0 <NEXT> label if i4 > = i1 goto label3 <NEXT> $ i2 = i4 + i0 <NEXT> $ b3 = r0 read byte <NEXT> r1 [ $ i2 ] = $ b3 <NEXT> i4 = i4 + 1 <NEXT> goto label2 <NEXT> label if i4 > = i1 goto label3 <NEXT> label goto label5 <NEXT> label return i4 <END>
<BEG> $ r0 = it unimi dsi fastutil object object big list empty_big_list <NEXT> r1 = it unimi dsi fastutil object object big list $ r0 <NEXT> return r1 <END>
<BEG> $ r0 = it unimi dsi fastutil object object set empty_set <NEXT> r1 = it unimi dsi fastutil object object set $ r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache fontbox cmap c map r0 <NEXT> $ r2 = r5 unicode to byte code <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = byte [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r16 = info ganglion gmetric4j g monitor r0 <NEXT> $ r3 = r16 scheduler <NEXT> $ r3 on start <NEXT> $ r5 = info ganglion gmetric4j g monitor log <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r6 = r15 append \ `` set up \ `` <NEXT> r17 = info ganglion gmetric4j g monitor r0 <NEXT> $ r7 = r17 sampler <NEXT> $ i0 = $ r7 size <NEXT> $ r8 = $ r6 append $ i0 <NEXT> $ r9 = $ r8 append \ `` samplers\ `` <NEXT> $ r10 = $ r9 to string <NEXT> $ r5 info $ r10 <NEXT> r18 = info ganglion gmetric4j g monitor r0 <NEXT> $ r11 = r18 sampler <NEXT> r1 = $ r11 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r12 = r1 next <NEXT> r2 = info ganglion gmetric4j g sampler $ r12 <NEXT> r19 = info ganglion gmetric4j g monitor r0 <NEXT> $ r13 = r19 scheduler <NEXT> $ i1 = r2 get initial delay <NEXT> $ l2 = long $ i1 <NEXT> $ i3 = r2 get delay <NEXT> $ l4 = long $ i3 <NEXT> $ r14 = java util concurrent time unit second <NEXT> r20 = java lang runnable r2 <NEXT> $ r13 schedule at fixed rate r20 $ l2 $ l4 $ r14 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = info ganglion gmetric4j g monitor r0 <NEXT> $ r2 = r6 sampler <NEXT> $ r2 add r1 <NEXT> r5 = new info ganglion gmetric4j gmetric g metric publisher <NEXT> r7 = info ganglion gmetric4j g monitor r0 <NEXT> $ r4 = r7 gmetric <NEXT> specialinvoke r5 < init > $ r4 <NEXT> r8 = info ganglion gmetric4j publisher r5 <NEXT> r1 set publisher r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com google common collect immutable set builder <NEXT> r9 = com netflix governator configuration configuration key r0 <NEXT> $ r4 = r9 part <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r6 = r2 next <NEXT> r3 = com netflix governator configuration configuration key part $ r6 <NEXT> $ z1 = r3 be variable <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r7 = r3 get value <NEXT> r1 add $ r7 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r5 = r1 build <NEXT> r10 = java util collection $ r5 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r4 = com netflix governator guice bootstrap binder r0 <NEXT> $ r1 = r4 binder <NEXT> $ r2 = com google inject multibindings multibinder new set binder $ r1 class \ `` lcom netflix governator guice post injector action \ `` <NEXT> $ r3 = $ r2 add bind <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util array a list r1 <NEXT> r4 = com netflix governator guice lifecycle injector r0 <NEXT> $ r3 = r4 create child injector $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com google common collect list new array list <NEXT> r3 = com netflix governator guice lifecycle injector r0 <NEXT> $ r2 = r3 create injector $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new com netflix governator guice serviceloader service loader module $ service binder impl <NEXT> specialinvoke r5 < init > r1 <NEXT> r6 = com netflix governator guice serviceloader service loader module r0 <NEXT> $ r4 = r6 binder <NEXT> $ r4 add r5 <NEXT> r7 = com netflix governator guice serviceloader service loader module $ service binder r5 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r3 = com netflix governator lifecycle lifecycle manager r0 <NEXT> $ r1 = r3 listener <NEXT> $ r2 = java util array a list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r14 = new java util array list <NEXT> specialinvoke r14 < init > <NEXT> $ r8 = com google inject stage tool <NEXT> $ r6 = newarray com google inject module [ 1 ] <NEXT> r15 = com netflix governator injector builder r0 <NEXT> $ r7 = r15 module <NEXT> $ r6 [ 0 ] = $ r7 <NEXT> $ r9 = com google inject spi element get element $ r8 $ r6 <NEXT> r3 = $ r9 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r11 = r3 next <NEXT> r4 = com google inject spi element $ r11 <NEXT> $ r12 = r4 accept visitor r1 <NEXT> $ r13 = java lang boolean $ r12 <NEXT> $ z1 = $ r13 boolean value <NEXT> if $ z1 == 0 goto label2 <NEXT> r14 add r4 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r10 = com google inject spi element get module r14 <NEXT> r16 = com netflix governator injector builder r0 <NEXT> r16 module = $ r10 <NEXT> r17 = com netflix governator injector builder r0 <NEXT> return r17 <END>
<BEG> r0 = @ this <NEXT> r3 = new com netflix governator visitor be not static injection visitor <NEXT> specialinvoke r3 < init > <NEXT> r4 = com netflix governator injector builder r0 <NEXT> r5 = com google inject spi element visitor r3 <NEXT> $ r2 = r4 filter r5 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r10 = com netflix governator internal pre destroy monitor r0 <NEXT> $ r4 = r10 scope cleaner <NEXT> $ z0 = $ r4 be run <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = new com netflix governator internal pre destroy monitor $ manage instance scoping visitor <NEXT> $ r6 = r2 get source <NEXT> r11 = com netflix governator internal pre destroy monitor r0 <NEXT> specialinvoke r9 < init > r11 r1 $ r6 r3 null <NEXT> r12 = com google inject spi bind scoping visitor r9 <NEXT> $ r7 = r2 accept scoping visitor r12 <NEXT> $ r8 = java lang boolean $ r7 <NEXT> $ z1 = $ r8 boolean value <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = ai grakn concept attribute type $ data type supported_types <NEXT> $ r3 = $ r2 key set <NEXT> $ r4 = $ r3 stream <NEXT> $ r5 = java util stream collector join \ <NEXT> $ r6 = $ r4 collect $ r5 <NEXT> r1 = java lang string $ r6 <NEXT> $ r8 = ai grakn util error message invalid_datatype <NEXT> $ r7 = newarray java lang object [ 2 ] <NEXT> $ r9 = r0 get class <NEXT> $ r10 = $ r9 get name <NEXT> $ r7 [ 0 ] = $ r10 <NEXT> $ r7 [ 1 ] = r1 <NEXT> $ r11 = $ r8 get message $ r7 <NEXT> $ r12 = ai grakn exception grakn tx operation exception create $ r11 <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` unknown type of transaction [ \ `` <NEXT> $ r3 = $ r2 append r0 <NEXT> $ r4 = $ r3 append \ `` ] \ `` <NEXT> $ r5 = $ r4 to string <NEXT> $ r6 = ai grakn exception grakn tx operation exception create $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = ai grakn util error message transaction_read_only <NEXT> $ r1 = newarray java lang object [ 1 ] <NEXT> $ r3 = r0 keyspace <NEXT> $ r1 [ 0 ] = $ r3 <NEXT> $ r4 = $ r2 get message $ r1 <NEXT> $ r5 = ai grakn exception grakn tx operation exception create $ r4 <NEXT> return $ r5 <END>
<BEG> $ r1 = ai grakn util error message schema_locked <NEXT> $ r0 = newarray java lang object [ 0 ] <NEXT> $ r2 = $ r1 get message $ r0 <NEXT> $ r3 = ai grakn exception grakn tx operation exception create $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = ai grakn graql graql var r0 <NEXT> $ r2 = ai grakn graql internal query aggregate aggregate median $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = ai grakn graql graql var r0 <NEXT> $ r2 = ai grakn graql internal query aggregate aggregate std $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r6 = new ai grakn graql internal reasoner query reasoner query impl <NEXT> specialinvoke r6 < init > r0 r1 <NEXT> r2 = r6 infer type <NEXT> $ z0 = r2 be atomic <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = new ai grakn graql internal reasoner query reasoner atomic query <NEXT> $ r5 = r7 <NEXT> $ r4 = r2 get atom <NEXT> specialinvoke r7 < init > $ r4 r1 <NEXT> goto label2 <NEXT> label r8 = ai grakn graql internal reasoner query reasoner query impl $ r5 <NEXT> return r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r5 = r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r6 = new ai grakn graql internal reasoner query reasoner query impl <NEXT> specialinvoke r6 < init > r0 r1 <NEXT> r2 = r6 infer type <NEXT> $ z0 = r2 be atomic <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = new ai grakn graql internal reasoner query reasoner atomic query <NEXT> $ r5 = r7 <NEXT> $ r4 = r2 get atom <NEXT> specialinvoke r7 < init > $ r4 r1 <NEXT> goto label2 <NEXT> label r8 = ai grakn graql internal reasoner query reasoner query impl $ r5 <NEXT> return r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r5 = r2 <END>
<BEG> r0 = @ this <NEXT> r2 = ai grakn graql internal reasoner query reasoner query impl r0 <NEXT> r1 = ai grakn graql internal reasoner rule rule utils get dependent rule r2 <NEXT> $ z0 = ai grakn graql internal reasoner rule rule utils sub graph be cyclical r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = ai grakn graql internal reasoner rule rule utils sub graph have rule with head satisfy body r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = ai grakn graql internal template scope r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = ai grakn kb internal cache tx rule cache r0 <NEXT> $ r1 = r3 rule map <NEXT> $ r1 clear <NEXT> r4 = ai grakn kb internal cache tx rule cache r0 <NEXT> $ r2 = r4 rule conversion map <NEXT> $ r2 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 sup <NEXT> $ r2 = ai grakn concept attribute type $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = new ai grakn matcher grakn matcher $ 4 <NEXT> $ r2 = org hamcrest matcher have item r0 <NEXT> specialinvoke r3 < init > $ r2 <NEXT> r4 = org hamcrest matcher r3 <NEXT> return r4 <END>
<BEG> $ r0 = new org apache tinkerpop gremlin jsr223 binding gremlin plugin $ builder <NEXT> specialinvoke $ r0 < init > null <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if null ! = r1 goto label1 <NEXT> r7 = new java lang illegal argument exception <NEXT> specialinvoke r7 < init > \ `` key may not be null\ `` <NEXT> throw r7 <NEXT> if null ! = r1 goto label1 <NEXT> label $ z0 = r1 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> r8 = new java lang illegal argument exception <NEXT> specialinvoke r8 < init > \ `` key may not be empty\ `` <NEXT> throw r8 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r9 = org apache tinkerpop gremlin jsr223 default gremlin script engine manager r0 <NEXT> $ r3 = r9 global scope <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> r14 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0 <NEXT> $ r2 = r14 a admin <NEXT> $ r3 = $ r2 get bytecode <NEXT> $ r4 = newarray java lang object [ 2 ] <NEXT> $ r4 [ 0 ] = r1 <NEXT> $ r5 = java lang long value of l0 <NEXT> $ r4 [ 1 ] = $ r5 <NEXT> $ r3 add step \ `` limit\ <NEXT> r15 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0 <NEXT> $ r6 = r15 a admin <NEXT> $ r7 = org apache tinkerpop gremlin process traversal scope global <NEXT> $ z0 = r1 equal $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> r12 = new org apache tinkerpop gremlin process traversal step filter range global step <NEXT> $ r11 = r12 <NEXT> r16 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0 <NEXT> $ r10 = r16 a admin <NEXT> r17 = org apache tinkerpop gremlin process traversal traversal $ admin $ r10 <NEXT> specialinvoke r12 < init > r17 0l l0 <NEXT> goto label2 <NEXT> label r20 = org apache tinkerpop gremlin process traversal step $ r11 <NEXT> $ r9 = $ r6 add step r20 <NEXT> r21 = org apache tinkerpop gremlin process traversal dsl graph graph traversal $ r9 <NEXT> return r21 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r13 = new org apache tinkerpop gremlin process traversal step map range local step <NEXT> $ r11 = r13 <NEXT> r18 = org apache tinkerpop gremlin process traversal dsl graph graph traversal r0 <NEXT> $ r8 = r18 a admin <NEXT> r19 = org apache tinkerpop gremlin process traversal traversal $ admin $ r8 <NEXT> specialinvoke r13 < init > r19 0l l0 <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = new org apache tinkerpop gremlin process traversal p <NEXT> $ r2 = org apache tinkerpop gremlin process traversal compare lte <NEXT> r4 = java util function bi predicate $ r2 <NEXT> specialinvoke r3 < init > r4 r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tinkerpop gremlin process traversal path r0 <NEXT> $ r1 = r3 object <NEXT> r4 = org apache tinkerpop gremlin process traversal path r0 <NEXT> $ i0 = r4 size <NEXT> $ i1 = $ i0 - 1 <NEXT> $ r2 = $ r1 get $ i1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org apache tinkerpop gremlin process traversal pop mixed <NEXT> if $ r3 ! = r1 goto label1 <NEXT> r15 = org apache tinkerpop gremlin process traversal path r0 <NEXT> $ r11 = r15 get r2 <NEXT> return $ r11 <NEXT> if $ r3 ! = r1 goto label1 <NEXT> label $ r4 = org apache tinkerpop gremlin process traversal pop all <NEXT> if $ r4 ! = r1 goto label4 <NEXT> r16 = org apache tinkerpop gremlin process traversal path r0 <NEXT> $ z1 = r16 have label r2 <NEXT> if $ z1 == 0 goto label3 <NEXT> r17 = org apache tinkerpop gremlin process traversal path r0 <NEXT> r12 = r17 get r2 <NEXT> $ z2 = r12 instanceof java util list <NEXT> if $ z2 == 0 goto label2 <NEXT> return r12 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ r10 = java util collection singleton list r12 <NEXT> return $ r10 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ r9 = java util collection empty list <NEXT> return $ r9 <NEXT> if $ r4 ! = r1 goto label4 <NEXT> label r18 = org apache tinkerpop gremlin process traversal path r0 <NEXT> r13 = r18 get r2 <NEXT> $ z0 = r13 instanceof java util list <NEXT> if $ z0 == 0 goto label7 <NEXT> $ r5 = org apache tinkerpop gremlin process traversal pop last <NEXT> if $ r5 ! = r1 goto label5 <NEXT> $ r8 = java util list r13 <NEXT> $ r7 = java util list r13 <NEXT> $ i0 = $ r7 size <NEXT> $ i1 = $ i0 - 1 <NEXT> $ r14 = $ r8 get $ i1 <NEXT> goto label6 <NEXT> label return $ r14 <NEXT> if $ r5 ! = r1 goto label5 <NEXT> label $ r6 = java util list r13 <NEXT> $ r14 = $ r6 get 0 <NEXT> if $ z0 == 0 goto label7 <NEXT> label return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if z0 == 0 goto label1 <NEXT> if r1 == null goto label2 <NEXT> r4 = org apache tinkerpop gremlin process traversal step r0 <NEXT> $ r2 = r4 get id <NEXT> $ r3 = r1 get id <NEXT> $ z2 = $ r2 equal $ r3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z1 = r0 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = java util collection empty set <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = java util collection empty set <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache tinkerpop gremlin process traversal traverser r0 <NEXT> $ r2 = r4 path <NEXT> $ r3 = $ r2 get r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = org apache tinkerpop gremlin process traversal util mutable metric r0 <NEXT> $ z0 = r5 finalize <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = new java lang illegal state exception <NEXT> specialinvoke r4 < init > \ `` metric have be finalize and can not be modified\ `` <NEXT> throw r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = java util concurrent time unit nanoseconds <NEXT> $ l1 = $ r2 convert l0 r1 <NEXT> r6 = org apache tinkerpop gremlin process traversal util mutable metric r0 <NEXT> r6 duration n = $ l1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache tinkerpop gremlin structure direction out <NEXT> r5 = org apache tinkerpop gremlin structure edge r0 <NEXT> $ r2 = r5 vertex $ r1 <NEXT> $ r3 = $ r2 next <NEXT> $ r4 = org apache tinkerpop gremlin structure vertex $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = org apache tinkerpop gremlin structure io graphson graph s o n version v3_0 <NEXT> $ r1 = org apache tinkerpop gremlin structure io graphson graph s o n io build $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org apache tinkerpop gremlin structure io graphson graph s o n writer r0 <NEXT> r3 write vertex r1 r2 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache tinkerpop gremlin structure io graphson graph s o n writer r0 <NEXT> $ r3 = r4 mapper <NEXT> $ r3 write value r1 r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> z1 = @ parameter2 <NEXT> r1 = @ parameter3 <NEXT> $ r3 = new java util array list <NEXT> specialinvoke $ r3 < init > <NEXT> if z0 == 0 goto label1 <NEXT> $ r10 = org apache tinkerpop gremlin structure t id <NEXT> $ r3 add $ r10 <NEXT> $ r11 = r0 id <NEXT> $ r3 add $ r11 <NEXT> label if z1 == 0 goto label2 <NEXT> $ r8 = org apache tinkerpop gremlin structure t label <NEXT> $ r3 add $ r8 <NEXT> $ r9 = r0 label <NEXT> $ r3 add $ r9 <NEXT> label $ r4 = r0 key <NEXT> $ r5 = element helper $ lambda_get properties_8__10 bootstrap $ r1 $ r3 r0 <NEXT> $ r4 for each $ r5 <NEXT> $ i0 = $ r3 size <NEXT> $ r6 = newarray java lang object [ $ i0 ] <NEXT> $ r7 = $ r3 to array $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache tinkerpop gremlin groovy jsr223 gremlin groovy script engine r0 <NEXT> $ r1 = r2 class map <NEXT> $ l0 = $ r1 estimate size <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache tinkerpop gremlin groovy jsr223 gremlin groovy script engine r0 <NEXT> $ r1 = r3 class map <NEXT> $ r2 = $ r1 stats <NEXT> $ d0 = $ r2 average load penalty <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = groovy jmx builder jmx event emitter r0 <NEXT> $ r1 = r2 event <NEXT> return $ r1 <END>
<BEG> org codehaus groovy runtime metaclass default meta class info set without custom metaclass creation handle 0 <NEXT> groovy lang expando meta class creation handle enable <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r8 = groovy model default table column r0 <NEXT> $ r3 = r8 value model <NEXT> $ z0 = $ r3 instanceof groovy model nest value model <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = groovy model default table column r0 <NEXT> $ r6 = r9 value model <NEXT> r2 = groovy model nest value model $ r6 <NEXT> $ r7 = r2 get source model <NEXT> $ r7 set value r1 <NEXT> label r10 = groovy model default table column r0 <NEXT> $ r4 = r10 value model <NEXT> $ r5 = $ r4 get value <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get init parameter \ `` template engine\ `` <NEXT> if r2 ! = null goto label1 <NEXT> r25 = new groovy text simple template engine <NEXT> specialinvoke r25 < init > <NEXT> r29 = groovy text template engine r25 <NEXT> return r29 <NEXT> if r2 ! = null goto label1 <NEXT> label $ r3 = java lang class for name r2 <NEXT> $ r4 = $ r3 new instance <NEXT> $ r5 = groovy text template engine $ r4 <NEXT> label return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> label r8 = groovy sql groovy result set extension r0 <NEXT> $ r4 = r8 get result set <NEXT> $ r4 update object r1 r2 <NEXT> r9 = groovy sql groovy result set extension r0 <NEXT> r9 update = 1 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = groovy sql groovy result set extension r0 <NEXT> i1 = r3 normalize index i0 <NEXT> r4 = groovy sql groovy result set extension r0 <NEXT> $ r1 = r4 get result set <NEXT> $ r2 = $ r1 get object i1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = groovy sql groovy result set extension r0 <NEXT> i1 = r3 normalize index i0 <NEXT> r4 = groovy sql groovy result set extension r0 <NEXT> $ r2 = r4 get result set <NEXT> $ r2 update object i1 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = groovy sql groovy result set extension r0 <NEXT> $ r4 = r12 get result set <NEXT> $ r4 move to insert row <NEXT> $ r5 = r1 entry set <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r2 next <NEXT> r3 = java util map $ entry $ r7 <NEXT> r13 = groovy sql groovy result set extension r0 <NEXT> $ r8 = r13 get result set <NEXT> $ r9 = r3 get key <NEXT> $ r10 = $ r9 to string <NEXT> $ r11 = r3 get value <NEXT> $ r8 update object $ r10 $ r11 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r14 = groovy sql groovy result set extension r0 <NEXT> $ r6 = r14 get result set <NEXT> $ r6 insert row <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = groovy sql groovy result set extension r0 <NEXT> $ z0 = r3 update <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = groovy sql groovy result set extension r0 <NEXT> $ r2 = r4 get result set <NEXT> $ r2 update row <NEXT> r5 = groovy sql groovy result set extension r0 <NEXT> r5 update = 0 <NEXT> label r6 = groovy sql groovy result set extension r0 <NEXT> $ r1 = r6 get result set <NEXT> $ z1 = $ r1 previous <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = groovy swing impl table layout cell r0 <NEXT> r1 rowspan = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = groovy ui console text editor r0 <NEXT> $ r1 = r2 default family <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = new groovy ui text structure syntax document filter $ lexer node <NEXT> r3 = groovy ui text structure syntax document filter r0 <NEXT> specialinvoke r2 < init > r3 0 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java util array a list r0 <NEXT> $ r2 = groovy util groovy collection min $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = new groovy util node list <NEXT> specialinvoke r4 < init > <NEXT> r5 = java util list r4 <NEXT> r5 add r0 <NEXT> r6 = groovy util node r0 <NEXT> $ r3 = specialinvoke r6 breadth first rest <NEXT> r7 = java util list r4 <NEXT> r7 add all $ r3 <NEXT> r8 = java util list r4 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r2 = groovy util object graph builder r0 <NEXT> $ r1 = r2 bean factory name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org codehaus groovy ant groovy r0 <NEXT> r2 src file = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org codehaus groovy ant groovy r0 <NEXT> $ r3 = r6 log <NEXT> $ r3 debug \ `` print result \ `` <NEXT> r5 = new java lang string buffer <NEXT> specialinvoke r5 < init > <NEXT> r1 println r5 <NEXT> r1 println <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = \ `` 1 4\ `` <NEXT> $ z0 = $ r2 equal r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r3 = \ `` 1 5\ `` <NEXT> $ z1 = $ r3 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r4 = org codehaus groovy ant groovyc r0 <NEXT> r4 target bytecode = r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org codehaus groovy ant groovyc r0 <NEXT> r2 joint compilation = 1 <NEXT> r3 = org codehaus groovy ant groovyc r0 <NEXT> r3 stub dir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus groovy ant groovyc r0 <NEXT> $ r1 = r2 stub dir <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org codehaus groovy ant groovyc r0 <NEXT> r1 keep stub = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> $ r1 = java lang boolean value of z0 <NEXT> r2 = org codehaus groovy ant groovydoc r0 <NEXT> r2 include main for script = $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org codehaus groovy tool groovydoc gstring template groovy doc template info default_package_templates <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org codehaus groovy tool groovydoc gstring template groovy doc template info default_doc_templates <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org codehaus groovy ast a s t node r0 <NEXT> $ r3 = r4 meta data map <NEXT> $ r2 = r1 meta data map <NEXT> r5 = java util map $ r2 <NEXT> $ r3 put all r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r11 = @ parameter0 <NEXT> r14 = org codehaus groovy ast class node r0 <NEXT> $ z0 = r14 be primary node <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = new org codehaus groovy groovy bug error <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r3 = r12 append \ `` tried to set a redirect for a primary class node \ `` <NEXT> r15 = org codehaus groovy ast class node r0 <NEXT> $ r4 = r15 get name <NEXT> $ r5 = $ r3 append $ r4 <NEXT> $ r6 = $ r5 append \ `` - > \ `` <NEXT> $ r7 = r11 get name <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 append \ `` \ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r13 < init > $ r10 <NEXT> r16 = java lang throwable r13 <NEXT> throw r16 <NEXT> if $ z0 == 0 goto label1 <NEXT> label if r11 == null goto label2 <NEXT> r11 = r11 redirect <NEXT> label if r11 ! = r0 goto label3 <NEXT> return <NEXT> label if r11 ! = r0 goto label3 <NEXT> label r17 = org codehaus groovy ast class node r0 <NEXT> r17 redirect = r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org codehaus groovy ast class node r0 <NEXT> $ r2 = r3 redirect <NEXT> $ r2 super class = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus groovy ast class helper float_ t y p e <NEXT> if r0 == $ r1 goto label1 <NEXT> $ r2 = org codehaus groovy ast class helper float_ t y p e <NEXT> if r0 == $ r2 goto label1 <NEXT> $ r3 = org codehaus groovy ast class helper double_ t y p e <NEXT> if r0 == $ r3 goto label1 <NEXT> $ r4 = org codehaus groovy ast class helper double_ t y p e <NEXT> if r0 == $ r4 goto label1 <NEXT> $ z0 = org codehaus groovy ast tool widen category be big dec category r0 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org codehaus groovy classgen asm compile stack r0 <NEXT> r3 push variable scope r1 <NEXT> r4 = org codehaus groovy classgen asm compile stack r0 <NEXT> specialinvoke r4 init loop label r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org codehaus groovy control compiler configuration r0 <NEXT> $ i0 = r1 warn level <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = \ `` 1 4\ `` <NEXT> $ z0 = $ r2 equal r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r3 = \ `` 1 5\ `` <NEXT> $ z1 = $ r3 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r4 = org codehaus groovy control compiler configuration r0 <NEXT> r4 target bytecode = r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org codehaus groovy control error collector r0 <NEXT> r2 add error r1 <NEXT> r3 = org codehaus groovy control error collector r0 <NEXT> r3 fail if error <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = new java sql date <NEXT> $ r2 = org codehaus groovy runtime date groovy method plus r0 i0 <NEXT> $ l1 = $ r2 get time <NEXT> specialinvoke $ r1 < init > $ l1 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java text date format get date instance 3 <NEXT> $ r2 = $ r1 format r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java text date format get date time instance 3 2 <NEXT> $ r2 = $ r1 format r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = r0 get component i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 get component count <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r0 remove all <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = r0 get component i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus groovy tool groovydoc link argument r0 <NEXT> $ r1 = r2 package <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org codehaus groovy control compiler configuration r0 <NEXT> r2 disable global a s t transformation = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = new java text simple date format <NEXT> specialinvoke $ r4 < init > r1 <NEXT> $ r4 set time zone r2 <NEXT> $ r5 = $ r4 format r0 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = r1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if r0 ! = r1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = java util collection singleton list r1 <NEXT> org codehaus groovy runtime default groovy method mixin r0 $ r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r6 = new java util array list <NEXT> specialinvoke $ r6 < init > <NEXT> r2 = r0 iterator <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label6 <NEXT> r3 = r2 next <NEXT> z6 = 0 <NEXT> r4 = $ r6 iterator <NEXT> label $ z3 = r4 have next <NEXT> if $ z3 == 0 goto label4 <NEXT> r5 = r4 next <NEXT> $ z5 = org codehaus groovy runtime default groovy method coerce equal r3 r5 <NEXT> if $ z5 == 0 goto label3 <NEXT> z6 = 1 <NEXT> goto label4 <NEXT> label if z6 ! = 0 goto label5 <NEXT> $ r6 add r3 <NEXT> label goto label1 <NEXT> if $ z5 == 0 goto label3 <NEXT> label goto label2 <NEXT> if $ z1 == 0 goto label6 <NEXT> label if z0 == 0 goto label7 <NEXT> r0 clear <NEXT> r0 add all $ r6 <NEXT> label if z0 == 0 goto label8 <NEXT> $ r7 = r0 <NEXT> goto label9 <NEXT> label return $ r7 <NEXT> label if z0 == 0 goto label8 <NEXT> label $ r7 = $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 iterator <NEXT> org codehaus groovy runtime default groovy method each with index $ r2 r1 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 iterator <NEXT> org codehaus groovy runtime default groovy method each with index $ r2 r1 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 iterator <NEXT> org codehaus groovy runtime default groovy method each with index $ r2 r1 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 iterator <NEXT> org codehaus groovy runtime default groovy method each $ r2 r1 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 iterator <NEXT> org codehaus groovy runtime default groovy method each $ r2 r1 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = new org codehaus groovy runtime reverse list iterator <NEXT> $ r3 = java util array a list r0 <NEXT> specialinvoke r5 < init > $ r3 <NEXT> r6 = java util iterator r5 <NEXT> org codehaus groovy runtime default groovy method each r6 r1 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = new org codehaus groovy runtime callsite boolean return method invoker <NEXT> specialinvoke $ r3 < init > <NEXT> r2 = org codehaus groovy runtime invoker helper a iterator r0 <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = r2 next <NEXT> $ z1 = $ r3 convert to boolean $ r4 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = new org codehaus groovy runtime callsite boolean closure wrapper <NEXT> specialinvoke $ r4 < init > r1 <NEXT> r3 = r0 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = newarray java lang object [ 1 ] <NEXT> $ r6 = r3 next <NEXT> $ r5 [ 0 ] = $ r6 <NEXT> $ z1 = $ r4 call $ r5 <NEXT> if $ z1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = groovy lang closure identity <NEXT> $ r2 = org codehaus groovy runtime default groovy method grep r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org codehaus groovy runtime default groovy method find result r0 r2 <NEXT> if r3 ! = null goto label1 <NEXT> return r1 <NEXT> if r3 ! = null goto label1 <NEXT> label return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = groovy lang closure identity <NEXT> $ r2 = org codehaus groovy runtime default groovy method find all r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r6 = new java util link hash map <NEXT> specialinvoke $ r6 < init > <NEXT> r3 = r0 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> r4 = r3 next <NEXT> r5 = r1 call r4 <NEXT> org codehaus groovy runtime default groovy method group answer $ r6 r4 r5 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r6 = r1 <NEXT> r2 = newarray java lang object [ 1 ] <NEXT> r3 = r0 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> r4 = r3 next <NEXT> r2 [ 0 ] = r4 <NEXT> if z0 == 0 goto label2 <NEXT> r6 = r2 [ 0 ] <NEXT> z0 = 0 <NEXT> goto label1 <NEXT> if z0 == 0 goto label2 <NEXT> label r5 = org codehaus groovy runtime invoker helper get meta class r6 <NEXT> r6 = r5 invoke method r6 \ `` plus\ <NEXT> if $ z1 == 0 goto label3 <NEXT> label return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = groovy util groovy collection max r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = r1 get maximum number of parameter <NEXT> if i0 == 1 goto label1 <NEXT> r9 = new groovy util closure comparator <NEXT> specialinvoke r9 < init > r1 <NEXT> r10 = java util comparator r9 <NEXT> $ r6 = org codehaus groovy runtime default groovy method max r0 r10 <NEXT> return $ r6 <NEXT> if i0 == 1 goto label1 <NEXT> label z2 = 1 <NEXT> r7 = null <NEXT> r8 = null <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> r3 = r2 next <NEXT> r4 = r1 call r3 <NEXT> if z2 == 0 goto label3 <NEXT> z2 = 0 <NEXT> r7 = r3 <NEXT> r8 = r4 <NEXT> goto label4 <NEXT> label goto label2 <NEXT> if z2 == 0 goto label3 <NEXT> label $ z1 = org codehaus groovy runtime script bytecode adapter compare less than r8 r4 <NEXT> if $ z1 == 0 goto label4 <NEXT> if $ z0 == 0 goto label5 <NEXT> label return r7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java util collection unmodifiable collection r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i1 = lengthof r0 <NEXT> if $ i1 > i0 goto label1 <NEXT> $ r1 = org codehaus groovy runtime default groovy method create similar array r0 0 <NEXT> return $ r1 <NEXT> if $ i1 > i0 goto label1 <NEXT> label if i0 > 0 goto label2 <NEXT> $ i6 = lengthof r0 <NEXT> r2 = org codehaus groovy runtime default groovy method create similar array r0 $ i6 <NEXT> $ i7 = lengthof r0 <NEXT> java lang system arraycopy r0 0 r2 0 $ i7 <NEXT> return r2 <NEXT> label if i0 > 0 goto label2 <NEXT> label $ i2 = lengthof r0 <NEXT> $ i3 = $ i2 - i0 <NEXT> r3 = org codehaus groovy runtime default groovy method create similar array r0 $ i3 <NEXT> $ i4 = lengthof r0 <NEXT> $ i5 = $ i4 - i0 <NEXT> java lang system arraycopy r0 0 r3 0 $ i5 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> if null ! = r0 goto label1 <NEXT> return 0 <NEXT> if null ! = r0 goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> if null ! = r0 goto label1 <NEXT> return 0 <NEXT> if null ! = r0 goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> if null ! = r0 goto label1 <NEXT> return 0 <NEXT> if null ! = r0 goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> if null ! = r0 goto label1 <NEXT> return 0 <NEXT> if null ! = r0 goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> if null ! = r0 goto label1 <NEXT> return 0 <NEXT> if null ! = r0 goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r1 be interface <NEXT> if $ z0 == 0 goto label2 <NEXT> $ z1 = r1 be instance r0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ z2 = org codehaus groovy transform trait trait be trait r1 <NEXT> if $ z2 == 0 goto label1 <NEXT> r24 = org codehaus groovy reflection stdclasses cache s a m class get s a m method r1 <NEXT> if r24 == null goto label1 <NEXT> $ r7 = r24 get name <NEXT> r25 = java util collection singleton map $ r7 r0 <NEXT> $ r8 = groovy util proxy generator instance <NEXT> $ r9 = java util collection singleton list r1 <NEXT> $ r10 = $ r8 instantiate aggregate r25 $ r9 <NEXT> return $ r10 <NEXT> if r24 == null goto label1 <NEXT> label $ r3 = r1 get class loader <NEXT> $ r4 = newarray java lang class [ 1 ] <NEXT> $ r4 [ 0 ] = r1 <NEXT> r28 = new org codehaus groovy runtime convert closure <NEXT> specialinvoke r28 < init > r0 <NEXT> r31 = java lang reflect invocation handler r28 <NEXT> $ r6 = java lang reflect proxy new proxy instance $ r3 $ r4 r31 <NEXT> return $ r6 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label $ r2 = org codehaus groovy runtime default groovy method a type r0 r1 <NEXT> label return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if z0 ! = 0 goto label1 <NEXT> r8 = new org codehaus groovy runtime reverse list iterator <NEXT> $ r4 = java util array a list r0 <NEXT> specialinvoke r8 < init > $ r4 <NEXT> r9 = java util iterator r8 <NEXT> $ r5 = org codehaus groovy runtime default groovy method to list r9 <NEXT> $ r6 = $ r5 to array <NEXT> $ r7 = java lang object [ ] $ r6 <NEXT> return $ r7 <NEXT> if z0 ! = 0 goto label1 <NEXT> label r1 = java util array a list r0 <NEXT> java util collection reverse r1 <NEXT> $ r2 = r1 to array <NEXT> $ i0 = r1 size <NEXT> java lang system arraycopy $ r2 0 r0 0 $ i0 <NEXT> return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org codehaus groovy runtime string groovy method plus r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org codehaus groovy runtime string groovy method plus r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org codehaus groovy runtime default groovy method a collection r0 <NEXT> $ r3 = org codehaus groovy runtime default groovy method a collection r1 <NEXT> $ r4 = org codehaus groovy runtime default groovy method intersect $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label3 <NEXT> if r1 ! = null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if r1 ! = null goto label1 <NEXT> label $ z0 = 0 <NEXT> if r0 ! = null goto label3 <NEXT> label if r1 ! = null goto label4 <NEXT> return 0 <NEXT> label if r1 ! = null goto label4 <NEXT> label if r0 ! = r1 goto label5 <NEXT> return 1 <NEXT> label if r0 ! = r1 goto label5 <NEXT> label $ i1 = lengthof r0 <NEXT> $ i0 = lengthof r1 <NEXT> if $ i1 == $ i0 goto label6 <NEXT> label i5 = 0 <NEXT> label $ i2 = lengthof r0 <NEXT> if i5 > = $ i2 goto label9 <NEXT> $ i4 = r0 [ i5 ] <NEXT> $ i3 = r1 [ i5 ] <NEXT> if $ i4 == $ i3 goto label8 <NEXT> label i5 = i5 + 1 <NEXT> goto label7 <NEXT> if i5 > = $ i2 goto label9 <NEXT> label return 1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org codehaus groovy runtime string groovy method minus r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus groovy runtime default groovy method to list r0 <NEXT> $ r2 = new java util array list <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = org codehaus groovy runtime default groovy method flatten $ r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i2 = r0 length <NEXT> i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2 <NEXT> $ z0 = r0 get i1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i2 = r0 length <NEXT> i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2 <NEXT> $ z0 = r0 get i1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i2 = r0 length <NEXT> i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2 <NEXT> $ z0 = r0 get i1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i2 = r0 length <NEXT> i1 = org codehaus groovy runtime default groovy method normalise index i0 $ i2 <NEXT> $ z0 = r0 get i1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i1 = java lang reflect array get length r0 <NEXT> $ i2 = org codehaus groovy runtime default groovy method normalise index i0 $ i1 <NEXT> $ r1 = java lang reflect array get r0 $ i2 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus groovy runtime invoker helper to string r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org codehaus groovy runtime string groovy method plus r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org codehaus groovy runtime string groovy method minus r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org codehaus groovy runtime string groovy method multiply r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = r1 int value <NEXT> if $ i0 < 0 goto label2 <NEXT> $ i2 = r0 int value <NEXT> $ l3 = long $ i2 <NEXT> $ r5 = java math big integer value of $ l3 <NEXT> $ i4 = r1 int value <NEXT> r2 = $ r5 pow $ i4 <NEXT> $ r6 = org codehaus groovy runtime default groovy method bi_int_min <NEXT> $ i5 = r2 compare to $ r6 <NEXT> if $ i5 < 0 goto label1 <NEXT> $ r7 = org codehaus groovy runtime default groovy method bi_int_max <NEXT> $ i6 = r2 compare to $ r7 <NEXT> if $ i6 > 0 goto label1 <NEXT> $ i7 = r2 int value <NEXT> $ r8 = java lang integer value of $ i7 <NEXT> return $ r8 <NEXT> if $ i6 > 0 goto label1 <NEXT> label return r2 <NEXT> if $ i0 < 0 goto label2 <NEXT> label $ i1 = r1 int value <NEXT> $ d0 = double $ i1 <NEXT> $ r3 = java lang double value of $ d0 <NEXT> $ r4 = org codehaus groovy runtime default groovy method power r0 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ c0 = r0 char value <NEXT> $ r2 = java lang integer value of $ c0 <NEXT> $ r3 = org codehaus groovy runtime default groovy method div $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r0 boolean value <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = r1 boolean value <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label $ r2 = java lang boolean value of $ z2 <NEXT> return $ r2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> d0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> d1 = r0 double value <NEXT> $ b0 = d0 cmpg d1 <NEXT> if $ b0 > 0 goto label3 <NEXT> d2 = d0 <NEXT> label $ b1 = d2 cmpg d1 <NEXT> if $ b1 > 0 goto label2 <NEXT> $ r10 = java lang double value of d2 <NEXT> r1 call $ r10 <NEXT> d2 = d2 + 1 0 <NEXT> goto label1 <NEXT> if $ b1 > 0 goto label2 <NEXT> label goto label4 <NEXT> label return <NEXT> if $ b0 > 0 goto label3 <NEXT> label r13 = new groovy lang groovy runtime exception <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r4 = r12 append \ `` the argument \ `` <NEXT> $ r5 = $ r4 append r0 <NEXT> $ r6 = $ r5 append \ `` to upto can not be less than the value \ `` <NEXT> $ r7 = $ r6 append d0 <NEXT> $ r8 = $ r7 append \ `` it\ 's call on \ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r13 < init > $ r9 <NEXT> r14 = java lang throwable r13 <NEXT> throw r14 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org codehaus groovy runtime string groovy method to integer r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r0 boolean value <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = r1 boolean value <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label $ r2 = java lang boolean value of $ z2 <NEXT> return $ r2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r2 instanceof org codehaus groovy runtime handle meta class <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org codehaus groovy runtime handle meta class r2 <NEXT> r2 = $ r1 get adaptee <NEXT> label r0 set meta class r2 <NEXT> org codehaus groovy runtime default groovy method disable primitive optimization r0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new java util array list <NEXT> specialinvoke $ r3 < init > <NEXT> java util collection add all $ r3 r1 <NEXT> $ r4 = groovy util proxy generator instance <NEXT> $ r5 = $ r4 instantiate delegate $ r3 r0 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r0 remove r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new java text simple date format <NEXT> $ r3 = java util locale u <NEXT> specialinvoke $ r2 < init > \ `` eee mmm dd h hmmss zzz yyyy\ <NEXT> $ r4 = $ r2 parse r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = groovy text template execution exception r0 <NEXT> $ i0 = r1 line number <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = io grpc context r0 <NEXT> $ r1 = r3 cancellable ancestor <NEXT> if $ r1 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = io grpc context r0 <NEXT> $ r2 = r4 cancellable ancestor <NEXT> $ z0 = $ r2 be cancel <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = io grpc deadline r0 <NEXT> $ r2 = r4 ticker <NEXT> l0 = $ r2 read <NEXT> r5 = io grpc deadline r0 <NEXT> $ z0 = r5 expire <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = io grpc deadline r0 <NEXT> $ l1 = r6 deadline nanos <NEXT> $ l2 = $ l1 - l0 <NEXT> $ b3 = $ l2 cmp 0l <NEXT> if $ b3 > 0 goto label1 <NEXT> r7 = io grpc deadline r0 <NEXT> r7 expire = 1 <NEXT> label r8 = io grpc deadline r0 <NEXT> $ l4 = r8 deadline nanos <NEXT> $ l5 = $ l4 - l0 <NEXT> $ r3 = java util concurrent time unit nanoseconds <NEXT> $ l6 = r1 convert $ l5 $ r3 <NEXT> return $ l6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new io grpc call option <NEXT> r5 = io grpc call option r0 <NEXT> specialinvoke r4 < init > r5 <NEXT> r4 authority = r1 <NEXT> return r4 <END>
<BEG> $ r0 = io grpc compressor registry default_instance <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = io grpc internal abstract stream r0 <NEXT> $ r1 = r2 transport state <NEXT> io grpc internal abstract stream $ transport state access $ 100 $ r1 i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = io grpc internal channelz r0 <NEXT> $ r3 = r11 per server socket <NEXT> r12 = io grpc internal with log id r1 <NEXT> $ l0 = io grpc internal channelz id r12 <NEXT> $ r4 = java lang long value of $ l0 <NEXT> r9 = new io grpc internal channelz $ server socket map <NEXT> specialinvoke r9 < init > null <NEXT> $ r6 = $ r3 put $ r4 r9 <NEXT> r2 = io grpc internal channelz $ server socket map $ r6 <NEXT> $ z0 = io grpc internal channelz $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> if r2 == null goto label1 <NEXT> r10 = new java lang assertion error <NEXT> specialinvoke r10 < init > <NEXT> throw r10 <NEXT> if r2 == null goto label1 <NEXT> label r13 = io grpc internal channelz r0 <NEXT> $ r7 = r13 server <NEXT> io grpc internal channelz add $ r7 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r5 = io grpc internal channelz r0 <NEXT> $ r1 = r5 subchannels <NEXT> $ r2 = java lang long value of l0 <NEXT> $ r3 = $ r1 get $ r2 <NEXT> $ r4 = io grpc internal instrumented $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> entermonitor r0 <NEXT> label r15 = io grpc internal http2 ping r0 <NEXT> $ z0 = r15 complete <NEXT> if $ z0 == 0 goto label3 <NEXT> exitmonitor r0 <NEXT> label return <NEXT> if $ z0 == 0 goto label3 <NEXT> label r16 = io grpc internal http2 ping r0 <NEXT> r16 complete = 1 <NEXT> r17 = io grpc internal http2 ping r0 <NEXT> r17 failure cause = r1 <NEXT> r18 = io grpc internal http2 ping r0 <NEXT> r2 = r18 callback <NEXT> r19 = io grpc internal http2 ping r0 <NEXT> r19 callback = null <END>
<BEG> r0 = @ this <NEXT> r4 = new java util array list <NEXT> r5 = io grpc internal stats trace context r0 <NEXT> $ r2 = r5 tracer <NEXT> $ r3 = java util array a list $ r2 <NEXT> specialinvoke r4 < init > $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = io grpc internal transport tracer r0 <NEXT> $ l0 = r1 keep alives send <NEXT> $ l1 = $ l0 + 1l <NEXT> r2 = io grpc internal transport tracer r0 <NEXT> r2 keep alives send = $ l1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > \ `` subclass fail to hide static factory\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = io grpc forward channel builder r0 <NEXT> $ r1 = r2 max retry attempt i0 <NEXT> r3 = io grpc manage channel builder $ r1 <NEXT> return r3 <END>
<BEG> $ r0 = io grpc manage channel provider provider <NEXT> if $ r0 ! = null goto label1 <NEXT> r3 = new io grpc manage channel provider $ provider not find exception <NEXT> specialinvoke r3 < init > \ `` no functional channel service provider find try add a dependency on the grpc-okhttp grpc-netty or grpc-netty-shaded artifact\ `` <NEXT> r4 = java lang throwable r3 <NEXT> throw r4 <NEXT> if $ r0 ! = null goto label1 <NEXT> label $ r1 = io grpc manage channel provider provider <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = java util collection empty list <NEXT> return $ r1 <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = io grpc server provider provider <NEXT> $ r1 = $ r0 builder for port i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r2 = io grpc status $ code ok <NEXT> r3 = io grpc status r0 <NEXT> $ r1 = r3 code <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = io grpc status exception r0 <NEXT> $ r1 = r2 trailer <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = io grpc netty grpc http2 connection handler r0 <NEXT> $ r1 = r3 channel unused <NEXT> $ r1 set success null <NEXT> return <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = new io grpc netty netty server builder <NEXT> specialinvoke $ r0 < init > i0 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> com google common base precondition check not null r0 \ `` ssl context\ `` <NEXT> r3 = new io grpc netty protocol negotiator $ 2 <NEXT> specialinvoke r3 < init > r0 <NEXT> r4 = io grpc netty protocol negotiator r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = com google common io char stream a char sink r1 <NEXT> $ r2 write r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com google common io file back output stream r0 <NEXT> $ r1 = r2 supplier <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> com google common base precondition check not null r0 <NEXT> com google common base precondition check not null r1 <NEXT> $ z0 = r0 equal r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z4 = 1 <NEXT> goto label2 <NEXT> label $ r4 = newarray java lang object [ 2 ] <NEXT> $ r4 [ 0 ] = r0 <NEXT> $ r4 [ 1 ] = r1 <NEXT> com google common base precondition check argument $ z4 \ `` source % s and destination % s must be different\ <NEXT> $ z1 = r0 rename to r1 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> com google common io file copy r0 r1 <NEXT> $ z2 = r0 delete <NEXT> if $ z2 ! = 0 goto label4 <NEXT> $ z3 = r1 delete <NEXT> if $ z3 ! = 0 goto label3 <NEXT> $ r10 = new java io i o exception <NEXT> $ r11 = new java lang string builder <NEXT> specialinvoke $ r11 < init > <NEXT> $ r12 = $ r11 append \ `` unable to delete \ `` <NEXT> $ r13 = $ r12 append r1 <NEXT> $ r14 = $ r13 to string <NEXT> specialinvoke $ r10 < init > $ r14 <NEXT> throw $ r10 <NEXT> if $ z3 ! = 0 goto label3 <NEXT> label $ r5 = new java io i o exception <NEXT> $ r6 = new java lang string builder <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = $ r6 append \ `` unable to delete \ `` <NEXT> $ r8 = $ r7 append r0 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r5 < init > $ r9 <NEXT> throw $ r5 <NEXT> if $ z2 ! = 0 goto label4 <NEXT> label return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z4 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google common io file back output stream r0 <NEXT> $ r1 = r2 a byte source <NEXT> r3 = com google common io input supplier $ r1 <NEXT> return r3 <END>
<BEG> $ r0 = new com google common util concurrent async settable future <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r5 = com github rholder retry retryer builder r0 <NEXT> $ r2 = r5 rejection predicate <NEXT> r4 = new com github rholder retry retryer builder $ exception class predicate <NEXT> specialinvoke r4 < init > class \ `` ljava lang exception \ `` <NEXT> r6 = com google common base predicate r4 <NEXT> $ r3 = com google common base predicate or $ r2 r6 <NEXT> r7 = com github rholder retry retryer builder r0 <NEXT> r7 rejection predicate = $ r3 <NEXT> r8 = com github rholder retry retryer builder r0 <NEXT> return r8 <END>
<BEG> $ r0 = com github rholder retry stop strategy never_stop <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util array a list r1 <NEXT> r3 = com google common collect test abstract container tester r0 <NEXT> r3 expect content $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com google common collect test abstract container tester r0 <NEXT> $ r3 = r5 get sample element <NEXT> r2 = com google common collect test helper copy to list $ r3 <NEXT> $ r4 = java util array a list r1 <NEXT> r2 add all $ r4 <NEXT> r6 = com google common collect test abstract container tester r0 <NEXT> r6 expect content r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> label r7 = com google common collect test abstract iterator tester r0 <NEXT> specialinvoke r7 recurse 0 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r5 = com google common collect test feature feature util annotation cache <NEXT> entermonitor $ r5 <NEXT> label $ r6 = com google common collect test feature feature util annotation cache <NEXT> $ r7 = $ r6 get r0 <NEXT> r14 = java util list $ r7 <NEXT> if r14 ! = null goto label5 <NEXT> $ r8 = new java util array list <NEXT> specialinvoke $ r8 < init > <NEXT> r2 = r0 get declare annotation <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r3 = r2 [ i1 ] <NEXT> $ r12 = r3 annotation type <NEXT> $ z0 = $ r12 be annotation present class \ `` lcom google common collect test feature tester annotation \ `` <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r8 add r3 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label4 <NEXT> label r14 = java util collection unmodifiable list $ r8 <NEXT> $ r9 = com google common collect test feature feature util annotation cache <NEXT> $ r9 put r0 r14 <NEXT> label exitmonitor $ r5 <NEXT> label return r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 contain \ `` \ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = new java lang illegal argument exception <NEXT> specialinvoke r4 < init > \ `` eclipse hide all character after \ ' \ ' please use \ ' [ ] \ ' or other character instead of parentheses\ `` <NEXT> throw r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r5 = com google common collect test feature specific test suite builder r0 <NEXT> r5 name = r1 <NEXT> r6 = com google common collect test feature specific test suite builder r0 <NEXT> $ r2 = r6 self <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com google common collect test google test enum multiset generator r0 <NEXT> $ r2 = r3 order r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r11 = com google common collect test tester navigable set navigation tester r0 <NEXT> $ r1 = r11 get subject generator <NEXT> $ r5 = com google common collect test one size test container generator $ r1 <NEXT> $ r2 = newarray java lang object [ 2 ] <NEXT> r12 = com google common collect test tester navigable set navigation tester r0 <NEXT> $ r3 = r12 a <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> r13 = com google common collect test tester navigable set navigation tester r0 <NEXT> $ r4 = r13 c <NEXT> $ r2 [ 1 ] = $ r4 <NEXT> $ r6 = $ r5 create $ r2 <NEXT> $ r7 = java util collection $ r6 <NEXT> specialinvoke r0 reset container $ r7 <NEXT> r14 = com google common collect test tester navigable set navigation tester r0 <NEXT> $ r9 = r14 get set <NEXT> $ r10 = java util navigable set $ r9 <NEXT> r15 = com google common collect test tester navigable set navigation tester r0 <NEXT> r15 navigable set = $ r10 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> c0 = @ parameter2 <NEXT> r2 = com google common escape escapers compute replacement r0 c0 <NEXT> junit framework assert assert not null r2 <NEXT> junit framework assert assert equal r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com google common collect list a list r1 r2 <NEXT> r5 = com google common test equivalence tester r0 <NEXT> r5 add equivalence group $ r3 <NEXT> r6 = com google common test equivalence tester r0 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new com google common test gc finalization $ 2 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = com google common test gc finalization $ finalization predicate r2 <NEXT> com google common test gc finalization await do r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = com google common test platform reserialize r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com google inject internal internal context r0 <NEXT> $ r2 = r3 state <NEXT> $ r2 pop <NEXT> r4 = com google inject internal internal context r0 <NEXT> r4 dependency = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r2 = org h2 util new array list <NEXT> if r1 == null goto label4 <NEXT> r3 = r1 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r5 = r3 next <NEXT> r4 = org h2 table column $ r5 <NEXT> $ z2 = r4 be auto increment <NEXT> if $ z2 == 0 goto label2 <NEXT> r14 = org h2 command ddl command with columns r0 <NEXT> i0 = r14 get object id <NEXT> r15 = org h2 command ddl command with columns r0 <NEXT> $ r6 = r15 session <NEXT> r16 = org h2 command ddl command with columns r0 <NEXT> $ r7 = r16 get schema <NEXT> r4 convert auto increment to sequence $ r6 $ r7 i0 z0 <NEXT> $ r9 = \ `` \'\'\ `` <NEXT> r17 = org h2 command ddl command with columns r0 <NEXT> $ r8 = r17 session <NEXT> $ r10 = $ r8 get database <NEXT> $ r11 = $ r10 get cluster <NEXT> $ z4 = $ r9 equal $ r11 <NEXT> if $ z4 ! = 0 goto label2 <NEXT> $ r12 = org h2 message db exception get unsupported exception \ `` cluster & & auto-increment columns\ `` <NEXT> r18 = java lang throwable $ r12 <NEXT> throw r18 <NEXT> if $ z4 ! = 0 goto label2 <NEXT> label r13 = r4 get sequence <NEXT> if r13 == null goto label3 <NEXT> r2 add r13 <NEXT> label goto label1 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r2 = org h2 driver default_connection <NEXT> $ r2 remove <NEXT> goto label2 <NEXT> label return <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = org h2 driver default_connection <NEXT> $ r1 set r0 <END>
<BEG> r0 = @ this <NEXT> r6 = org h2 fulltext full text setting r0 <NEXT> $ r3 = r6 ignore list <NEXT> entermonitor $ r3 <NEXT> label r7 = org h2 fulltext full text setting r0 <NEXT> $ r4 = r7 ignore list <NEXT> $ r4 clear <NEXT> exitmonitor $ r3 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label $ r3 = org h2 message db exception get unsupported exception r1 <NEXT> r6 = java lang throwable $ r3 <NEXT> throw r6 <END>
<BEG> r0 = @ this <NEXT> label r6 = org h2 mvstore db m v primary index r0 <NEXT> $ r2 = r6 data map <NEXT> $ l0 = $ r2 size a long max <NEXT> label return $ l0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org h2 mvstore db transaction store r0 <NEXT> r1 max transaction id = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> label r7 = org h2 mvstore file store r0 <NEXT> $ r2 = r7 file <NEXT> $ r2 force 1 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r2 = org h2 mvstore file store r0 <NEXT> $ r1 = r2 free space <NEXT> $ r1 free l0 i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 mvstore m v store r0 <NEXT> specialinvoke r2 check open <NEXT> r3 = org h2 mvstore m v store r0 <NEXT> r1 = r3 file store <NEXT> if r1 == null goto label1 <NEXT> r1 sync <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org h2 mvstore m v store r0 <NEXT> r1 version to keep = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 mvstore m v store r0 <NEXT> $ i0 = r1 auto commit delay <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 mvstore m v store r0 <NEXT> $ r1 = r2 cache <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org h2 mvstore m v store r0 <NEXT> $ r1 = r3 file store <NEXT> if $ r1 ! = null goto label1 <NEXT> $ z0 = 0 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org h2 mvstore m v store r0 <NEXT> $ r2 = r4 file store <NEXT> $ z0 = $ r2 be read only <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> r3 = org h2 mvstore write buffer r0 <NEXT> $ r1 = specialinvoke r3 ensure capacity 2 <NEXT> $ r1 put short s0 <NEXT> r4 = org h2 mvstore write buffer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r3 = org h2 mvstore write buffer r0 <NEXT> $ r1 = specialinvoke r3 ensure capacity 8 <NEXT> $ r1 put long l0 <NEXT> r4 = org h2 mvstore write buffer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> r3 = org h2 mvstore write buffer r0 <NEXT> $ r1 = specialinvoke r3 ensure capacity 1 <NEXT> $ r1 put b0 <NEXT> r4 = org h2 mvstore write buffer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 mvstore write buffer r0 <NEXT> $ r1 = r2 buff <NEXT> $ i0 = $ r1 position <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r3 = org h2 mvstore write buffer r0 <NEXT> $ r1 = r3 buff <NEXT> $ r1 put int i0 i1 <NEXT> r4 = org h2 mvstore write buffer r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r8 = org h2 mvstore write buffer r0 <NEXT> $ r1 = r8 buff <NEXT> $ i0 = $ r1 limit <NEXT> if $ i0 < = 4194304 goto label1 <NEXT> r9 = org h2 mvstore write buffer r0 <NEXT> $ r6 = r9 reuse <NEXT> r10 = org h2 mvstore write buffer r0 <NEXT> r10 buff = $ r6 <NEXT> goto label2 <NEXT> label r15 = org h2 mvstore write buffer r0 <NEXT> $ r7 = r15 buff <NEXT> $ r7 clear <NEXT> r16 = org h2 mvstore write buffer r0 <NEXT> return r16 <NEXT> if $ i0 < = 4194304 goto label1 <NEXT> label r11 = org h2 mvstore write buffer r0 <NEXT> $ r3 = r11 buff <NEXT> r12 = org h2 mvstore write buffer r0 <NEXT> $ r2 = r12 reuse <NEXT> if $ r3 == $ r2 goto label2 <NEXT> r13 = org h2 mvstore write buffer r0 <NEXT> $ r5 = r13 buff <NEXT> r14 = org h2 mvstore write buffer r0 <NEXT> r14 reuse = $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org h2 schema schema r0 <NEXT> $ r4 = r9 database <NEXT> entermonitor $ r4 <NEXT> label r10 = org h2 schema schema r0 <NEXT> $ r5 = r10 table and view <NEXT> $ r6 = $ r5 get r1 <NEXT> $ r7 = org h2 table table $ r6 <NEXT> exitmonitor $ r4 <NEXT> label return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org h2 store f file path get r0 <NEXT> $ r3 = org h2 store f file path get r1 <NEXT> $ r2 move to $ r3 0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org h2 store f file path get r0 <NEXT> $ r3 = org h2 store f file path get r1 <NEXT> $ r2 move to $ r3 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org h2 table column r0 <NEXT> $ r2 = r3 convert r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = org h2 table column r0 <NEXT> r2 table = r1 <NEXT> r3 = org h2 table column r0 <NEXT> r3 column id = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r17 = org h2 table column r0 <NEXT> $ r2 = r17 default expression <NEXT> if $ r2 ! = null goto label1 <NEXT> r18 = org h2 table column r0 <NEXT> $ r15 = r18 on update expression <NEXT> if $ r15 == null goto label3 <NEXT> label r16 = new org h2 table table filter <NEXT> r19 = org h2 table column r0 <NEXT> $ r4 = r19 table <NEXT> specialinvoke r16 < init > r1 $ r4 null 0 null 0 null <NEXT> r20 = org h2 table column r0 <NEXT> r20 compute table filter = r16 <NEXT> r21 = org h2 table column r0 <NEXT> $ r5 = r21 default expression <NEXT> if $ r5 == null goto label2 <NEXT> r22 = org h2 table column r0 <NEXT> $ r12 = r22 default expression <NEXT> r23 = org h2 table column r0 <NEXT> $ r11 = r23 compute table filter <NEXT> r24 = org h2 table column resolver $ r11 <NEXT> $ r12 map column r24 0 <NEXT> r25 = org h2 table column r0 <NEXT> $ r13 = r25 default expression <NEXT> $ r14 = $ r13 optimize r1 <NEXT> r26 = org h2 table column r0 <NEXT> r26 default expression = $ r14 <NEXT> label r27 = org h2 table column r0 <NEXT> $ r6 = r27 on update expression <NEXT> if $ r6 == null goto label3 <NEXT> r28 = org h2 table column r0 <NEXT> $ r8 = r28 on update expression <NEXT> r29 = org h2 table column r0 <NEXT> $ r7 = r29 compute table filter <NEXT> r30 = org h2 table column resolver $ r7 <NEXT> $ r8 map column r30 0 <NEXT> r31 = org h2 table column r0 <NEXT> $ r9 = r31 on update expression <NEXT> $ r10 = $ r9 optimize r1 <NEXT> r32 = org h2 table column r0 <NEXT> r32 on update expression = $ r10 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 table column r0 <NEXT> r1 check constraint = null <NEXT> r2 = org h2 table column r0 <NEXT> r2 check constraint s q l = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org h2 table join batch r0 <NEXT> $ r1 = r4 filter <NEXT> $ r2 = $ r1 [ i0 ] <NEXT> $ r3 = $ r2 lookup batch <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r5 = org h2 table join batch r0 <NEXT> r5 current = null <NEXT> r6 = org h2 table join batch r0 <NEXT> r6 start = 0 <NEXT> r7 = org h2 table join batch r0 <NEXT> r7 find = 0 <NEXT> r8 = org h2 table join batch r0 <NEXT> r1 = r8 filter <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r2 = r1 [ i1 ] <NEXT> r2 reset z0 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label if z0 == 0 goto label3 <NEXT> r9 = org h2 table join batch r0 <NEXT> $ r3 = r9 additional filter <NEXT> if $ r3 == null goto label3 <NEXT> r10 = org h2 table join batch r0 <NEXT> $ r4 = r10 additional filter <NEXT> $ r4 reset <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 table table view r0 <NEXT> $ z0 = r1 be recursive query detect <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> r11 = org h2 tool multi dimension r0 <NEXT> $ i4 = r11 get max value i0 <NEXT> l1 = long $ i4 <NEXT> i2 = org h2 tool multi dimension get bit per value i0 <NEXT> l14 = 0l <NEXT> i15 = 0 <NEXT> label if i15 > = i0 goto label6 <NEXT> $ i5 = r1 [ i15 ] <NEXT> l3 = long $ i5 <NEXT> $ b6 = l3 cmp 0l <NEXT> if $ b6 < 0 goto label2 <NEXT> $ b7 = l3 cmp l1 <NEXT> if $ b7 < = 0 goto label3 <NEXT> label r10 = new java lang illegal argument exception <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r4 = r9 append \ `` 0 < \ `` <NEXT> $ r5 = $ r4 append l3 <NEXT> $ r6 = $ r5 append \ `` < \ `` <NEXT> $ r7 = $ r6 append l1 <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke r10 < init > $ r8 <NEXT> throw r10 <NEXT> if $ b7 < = 0 goto label3 <NEXT> label i16 = 0 <NEXT> label if i16 > = i2 goto label5 <NEXT> $ l8 = 1l < < i16 <NEXT> $ l12 = l3 & $ l8 <NEXT> $ i9 = i0 - 1 <NEXT> $ i10 = $ i9 * i16 <NEXT> $ i11 = i15 + $ i10 <NEXT> $ l13 = $ l12 < < $ i11 <NEXT> l14 = l14 | $ l13 <NEXT> i16 = i16 + 1 <NEXT> goto label4 <NEXT> label if i16 > = i2 goto label5 <NEXT> label i15 = i15 + 1 <NEXT> goto label1 <NEXT> label if i15 > = i0 goto label6 <NEXT> label return l14 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r3 = org h2 util local date time utils local_date_parse <NEXT> $ r2 = newarray java lang object [ 1 ] <NEXT> $ r2 [ 0 ] = r0 <NEXT> $ r4 = $ r3 invoke null $ r2 <NEXT> label return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r3 = org h2 util local date time utils offset_date_time_parse <NEXT> $ r2 = newarray java lang object [ 1 ] <NEXT> $ r2 [ 0 ] = r0 <NEXT> $ r4 = $ r3 invoke null $ r2 <NEXT> label return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = r0 convert to 24 <NEXT> r1 = org h2 value value timestamp time zone $ r3 <NEXT> l0 = r1 get date value <NEXT> l1 = r1 get time nanos <NEXT> label r15 = org h2 util local date time utils local date time from date nanos l0 l1 <NEXT> s2 = r1 get time zone offset min <NEXT> $ r4 = java util concurrent time unit minute <NEXT> $ l4 = long s2 <NEXT> $ l5 = $ r4 to second $ l4 <NEXT> i3 = int $ l5 <NEXT> $ r6 = org h2 util local date time utils zone_offset_of_total_seconds <NEXT> $ r5 = newarray java lang object [ 1 ] <NEXT> $ r7 = java lang integer value of i3 <NEXT> $ r5 [ 0 ] = $ r7 <NEXT> r2 = $ r6 invoke null $ r5 <NEXT> $ r9 = org h2 util local date time utils offset_date_time_of_local_date_time_zone_offset <NEXT> $ r8 = newarray java lang object [ 2 ] <NEXT> $ r8 [ 0 ] = r15 <NEXT> $ r8 [ 1 ] = r2 <NEXT> $ r10 = $ r9 invoke null $ r8 <NEXT> label return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> label r3 = java net inet address get by name r0 <NEXT> $ r1 = r3 get host name <NEXT> label return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = new org locationtech jts geom geometry factory <NEXT> specialinvoke r12 < init > <NEXT> r13 = new org locationtech jts geom envelope <NEXT> r14 = org h2 value value geometry r0 <NEXT> $ r6 = r14 get geometry no copy <NEXT> $ r7 = $ r6 get envelope internal <NEXT> specialinvoke r13 < init > $ r7 <NEXT> $ r8 = r1 get geometry no copy <NEXT> $ r9 = $ r8 get envelope internal <NEXT> r13 expand to include $ r9 <NEXT> $ r10 = r12 to geometry r13 <NEXT> $ r11 = org h2 value value geometry get $ r10 <NEXT> r15 = org h2 value value $ r11 <NEXT> return r15 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 api interval r0 <NEXT> $ l0 = r1 remain <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 api interval r0 <NEXT> $ r1 = r2 qualifier <NEXT> r3 = org h2 api interval r0 <NEXT> $ z0 = r3 negative <NEXT> r4 = org h2 api interval r0 <NEXT> $ l1 = r4 lead <NEXT> r5 = org h2 api interval r0 <NEXT> $ l0 = r5 remain <NEXT> $ l2 = org h2 util interval utils month from interval $ r1 $ z0 $ l1 $ l0 <NEXT> return $ l2 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 api interval r0 <NEXT> $ r1 = r2 qualifier <NEXT> r3 = org h2 api interval r0 <NEXT> $ z0 = r3 negative <NEXT> r4 = org h2 api interval r0 <NEXT> $ l1 = r4 lead <NEXT> r5 = org h2 api interval r0 <NEXT> $ l0 = r5 remain <NEXT> $ l2 = org h2 util interval utils hour from interval $ r1 $ z0 $ l1 $ l0 <NEXT> return $ l2 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 api interval r0 <NEXT> $ r1 = r2 qualifier <NEXT> r3 = org h2 api interval r0 <NEXT> $ z0 = r3 negative <NEXT> r4 = org h2 api interval r0 <NEXT> $ l1 = r4 lead <NEXT> r5 = org h2 api interval r0 <NEXT> $ l0 = r5 remain <NEXT> $ l2 = org h2 util interval utils nanos from interval $ r1 $ z0 $ l1 $ l0 <NEXT> return $ l2 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 command dml query r0 <NEXT> $ r1 = r2 expression <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org h2 command dml query r0 <NEXT> r2 order list = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 command dml select group r0 <NEXT> $ r1 = r2 current group by expr data <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org h2 command dml update r0 <NEXT> r2 update key collector = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> if r1 ! = null goto label1 <NEXT> $ r4 = r0 append \ `` \\\ `` \\\ `` \ `` <NEXT> return $ r4 <NEXT> if r1 ! = null goto label1 <NEXT> label if z0 ! = 0 goto label2 <NEXT> $ z1 = org h2 util parser util be simple identifier r1 0 0 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r3 = r0 append r1 <NEXT> return $ r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r2 = org h2 util string utils quote identifier r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r14 = org h2 command parser r0 <NEXT> specialinvoke r14 initialize r1 <NEXT> r15 = org h2 command parser r0 <NEXT> r15 parse index = i0 <NEXT> r16 = org h2 command parser r0 <NEXT> specialinvoke r16 read <NEXT> r17 = org h2 command parser r0 <NEXT> specialinvoke r17 read 75 <NEXT> r18 = org h2 command parser r0 <NEXT> $ z0 = specialinvoke r18 read if 76 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r11 = org h2 util utils empty_int_array <NEXT> return $ r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r19 = org h2 command parser r0 <NEXT> $ i2 = r19 current token type <NEXT> if $ i2 ! = 2 goto label4 <NEXT> r12 = org h2 util utils new small array list <NEXT> label r20 = org h2 command parser r0 <NEXT> $ i6 = r20 current token type <NEXT> if $ i6 == 2 goto label3 <NEXT> r21 = org h2 command parser r0 <NEXT> $ r10 = specialinvoke r21 get syntax error <NEXT> r22 = java lang throwable $ r10 <NEXT> throw r22 <NEXT> if $ i6 == 2 goto label3 <NEXT> label r23 = org h2 command parser r0 <NEXT> $ r7 = r23 current token <NEXT> r12 add $ r7 <NEXT> r24 = org h2 command parser r0 <NEXT> specialinvoke r24 read <NEXT> r25 = org h2 command parser r0 <NEXT> $ z4 = specialinvoke r25 read if more <NEXT> if $ z4 ! = 0 goto label2 <NEXT> $ r8 = newarray java lang string [ 0 ] <NEXT> $ r9 = r12 to array $ r8 <NEXT> return $ r9 <NEXT> if $ i2 ! = 2 goto label4 <NEXT> label r26 = org h2 command parser r0 <NEXT> $ i3 = r26 current token type <NEXT> if $ i3 ! = 64 goto label8 <NEXT> r13 = org h2 util utils new small array list <NEXT> label r27 = org h2 command parser r0 <NEXT> $ i4 = specialinvoke r27 read int <NEXT> $ r4 = java lang integer value of $ i4 <NEXT> r13 add $ r4 <NEXT> r28 = org h2 command parser r0 <NEXT> $ z2 = specialinvoke r28 read if more <NEXT> if $ z2 ! = 0 goto label5 <NEXT> i1 = r13 size <NEXT> r2 = newarray int [ i1 ] <NEXT> i7 = 0 <NEXT> label if i7 > = i1 goto label7 <NEXT> $ r5 = r13 get i7 <NEXT> $ r6 = java lang integer $ r5 <NEXT> $ i5 = $ r6 int value <NEXT> r2 [ i7 ] = $ i5 <NEXT> i7 = i7 + 1 <NEXT> goto label6 <NEXT> label if i7 > = i1 goto label7 <NEXT> label return r2 <NEXT> if $ i3 ! = 64 goto label8 <NEXT> label r29 = org h2 command parser r0 <NEXT> $ r3 = specialinvoke r29 get syntax error <NEXT> r30 = java lang throwable $ r3 <NEXT> throw r30 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org h2 engine connection info r0 <NEXT> r2 network connection info = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r15 = org h2 expression analysis window r0 <NEXT> $ r2 = r15 partition by <NEXT> if $ r2 == null goto label2 <NEXT> r16 = org h2 expression analysis window r0 <NEXT> $ r9 = r16 partition by <NEXT> r11 = $ r9 iterator <NEXT> label $ z1 = r11 have next <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r10 = r11 next <NEXT> r12 = org h2 expression expression $ r10 <NEXT> r12 update aggregate r1 i0 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r17 = org h2 expression analysis window r0 <NEXT> $ r3 = r17 order by <NEXT> if $ r3 == null goto label4 <NEXT> r18 = org h2 expression analysis window r0 <NEXT> $ r6 = r18 order by <NEXT> r13 = $ r6 iterator <NEXT> label $ z0 = r13 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r7 = r13 next <NEXT> r14 = org h2 command dml select order by $ r7 <NEXT> $ r8 = r14 expression <NEXT> $ r8 update aggregate r1 i0 <NEXT> goto label3 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r19 = org h2 expression analysis window r0 <NEXT> $ r4 = r19 frame <NEXT> if $ r4 == null goto label5 <NEXT> r20 = org h2 expression analysis window r0 <NEXT> $ r5 = r20 frame <NEXT> $ r5 update aggregate r1 i0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r17 = new java util array list <NEXT> specialinvoke r17 < init > <NEXT> r18 = org h2 expression subquery r0 <NEXT> $ r7 = r18 query <NEXT> $ r7 set session r1 <NEXT> r19 = org h2 expression subquery r0 <NEXT> $ r8 = r19 query <NEXT> r3 = $ r8 query 2147483647 <NEXT> r14 = null <NEXT> label $ z0 = r3 next <NEXT> if $ z0 == 0 goto label02 <NEXT> $ r9 = org h2 expression subquery read row r3 <NEXT> r17 add $ r9 <NEXT> goto label01 <NEXT> if $ z0 == 0 goto label02 <NEXT> label if r3 == null goto label12 <NEXT> goto label03 <NEXT> label r3 close <NEXT> goto label12 <NEXT> label return r17 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ b1 = l0 cmp 0l <NEXT> if $ b1 < 0 goto label1 <NEXT> $ l5 = 1l <NEXT> goto label2 <NEXT> label l6 = $ l5 <NEXT> if r0 == null goto label3 <NEXT> $ b2 = l0 cmp 0l <NEXT> if $ b2 < 0 goto label3 <NEXT> $ l3 = r0 long value <NEXT> $ b4 = $ l3 cmp $ l5 <NEXT> if $ b4 > = 0 goto label3 <NEXT> l6 = r0 long value <NEXT> label return l6 <NEXT> if $ b1 < 0 goto label1 <NEXT> label $ l5 = -9223372036854775808l <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 security auth authentication info r0 <NEXT> $ r1 = r2 nest identity <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 security auth realm config r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 security auth realm config r0 <NEXT> $ r1 = r2 validator class <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org h2 table table r0 <NEXT> r2 = r4 column <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r2 [ i1 ] <NEXT> r3 set default expression r1 null <NEXT> r3 set on update expression r1 null <NEXT> r3 remove check constraint <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org h2 table table filter r0 <NEXT> $ r1 = r2 common join columns filter <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new org h2 util geometry e w k t utils $ e w k t source <NEXT> specialinvoke $ r2 < init > r0 <NEXT> i0 = $ r2 read dimension system <NEXT> $ z0 = $ r2 have data <NEXT> if $ z0 ! = 0 goto label1 <NEXT> if i0 ! = 0 goto label2 <NEXT> label $ r3 = new java lang illegal argument exception <NEXT> specialinvoke $ r3 < init > <NEXT> throw $ r3 <NEXT> if i0 ! = 0 goto label2 <NEXT> label return i0 <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 ! = 0 goto label1 <NEXT> $ r1 = org h2 util time zone provider utc <NEXT> return $ r1 <NEXT> if i0 ! = 0 goto label1 <NEXT> label r2 = new org h2 util time zone provider $ simple <NEXT> specialinvoke r2 < init > i0 <NEXT> r3 = org h2 util time zone provider r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 value ext type info geometry r0 <NEXT> $ i0 = r1 type <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java math big decimal zero <NEXT> $ z0 = $ r1 equal r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r8 = org h2 value value decimal zero <NEXT> $ r9 = org h2 value value decimal $ r8 <NEXT> return $ r9 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = java math big decimal one <NEXT> $ z1 = $ r2 equal r0 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r6 = org h2 value value decimal one <NEXT> $ r7 = org h2 value value decimal $ r6 <NEXT> return $ r7 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r10 = new org h2 value value decimal <NEXT> specialinvoke r10 < init > r0 <NEXT> r11 = org h2 value value r10 <NEXT> $ r4 = org h2 value value cache r11 <NEXT> $ r5 = org h2 value value decimal $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org h2 value value double r0 <NEXT> $ d0 = r1 value <NEXT> l0 = java lang double double to raw long bit $ d0 <NEXT> $ l1 = l0 > > > 32 <NEXT> $ l2 = l0 ^ $ l1 <NEXT> $ i3 = int $ l2 <NEXT> return $ i3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org h2 value value result set <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r10 = org apache hadoop security authentication client authenticate u r l $ token access $ 000 r1 <NEXT> if r10 == null goto label2 <NEXT> $ z0 = r10 start with \ `` \\\ `` \ `` <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r6 = new java lang string builder <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = $ r6 append \ `` \\\ `` \ `` <NEXT> $ r8 = $ r7 append r10 <NEXT> $ r9 = $ r8 append \ `` \\\ `` \ `` <NEXT> r10 = $ r9 to string <NEXT> label $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` hadoop auth=\ `` <NEXT> $ r4 = $ r3 append r10 <NEXT> $ r5 = $ r4 to string <NEXT> r0 add request property \ `` cookie\ <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r4 = @ parameter0 <NEXT> if r4 ! = null goto label1 <NEXT> return 0 <NEXT> if r4 ! = null goto label1 <NEXT> label $ r3 = java util locale english <NEXT> r5 = r4 to low case $ r3 <NEXT> z1 = 1 <NEXT> r6 = org apache hadoop security authentication server alt kerberos authentication handler r0 <NEXT> r1 = r6 non browser user agent <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r2 = r1 [ i1 ] <NEXT> $ z0 = r5 contain r2 <NEXT> if $ z0 == 0 goto label3 <NEXT> z1 = 0 <NEXT> goto label4 <NEXT> label return z1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <END>
<BEG> r11 = null <NEXT> $ r3 = org apache hadoop security authentication util kerberos name rule <NEXT> if $ r3 == null goto label3 <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = org apache hadoop security authentication util kerberos name rule <NEXT> r1 = $ r5 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r1 next <NEXT> r2 = org apache hadoop security authentication util kerberos name $ rule $ r7 <NEXT> $ r8 = r2 to string <NEXT> $ r9 = $ r4 append $ r8 <NEXT> $ r9 append \ `` \n\ `` <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r6 = $ r4 to string <NEXT> r11 = $ r6 trim <NEXT> label return r11 <END>
<BEG> r0 = @ this <NEXT> $ r10 = org apache hadoop conf configuration deprecation context <NEXT> $ r11 = $ r10 get <NEXT> r1 = org apache hadoop conf configuration $ deprecation context $ r11 <NEXT> r20 = org apache hadoop conf configuration r0 <NEXT> r2 = r20 get prop <NEXT> r21 = org apache hadoop conf configuration r0 <NEXT> r3 = specialinvoke r21 get overlay <NEXT> $ r12 = r1 get deprecate key map <NEXT> $ r13 = $ r12 entry set <NEXT> r4 = $ r13 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r14 = r4 next <NEXT> r5 = java util map $ entry $ r14 <NEXT> $ r15 = r5 get key <NEXT> r6 = java lang string $ r15 <NEXT> $ z1 = r3 contain r6 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> $ r16 = r5 get value <NEXT> $ r17 = org apache hadoop conf configuration $ deprecate key info $ r16 <NEXT> r7 = org apache hadoop conf configuration $ deprecate key info access $ 100 $ r17 <NEXT> i0 = lengthof r7 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r8 = r7 [ i1 ] <NEXT> r9 = r3 get property r8 <NEXT> if r9 == null goto label3 <NEXT> r2 set property r6 r9 <NEXT> r3 set property r6 r9 <NEXT> goto label4 <NEXT> label goto label1 <NEXT> if r9 == null goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new org apache hadoop conf configuration $ resource <NEXT> specialinvoke r3 < init > r1 <NEXT> r4 = org apache hadoop conf configuration r0 <NEXT> specialinvoke r4 add resource object r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache hadoop conf configuration r0 <NEXT> r2 = r4 get r1 <NEXT> if null ! = r2 goto label1 <NEXT> return null <NEXT> if null ! = r2 goto label1 <NEXT> label $ r3 = r2 trim <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> $ r2 = java lang double to string d0 <NEXT> r3 = org apache hadoop conf configuration r0 <NEXT> r3 set r1 $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ z0 = r3 be assignable from r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r13 = new java lang runtime exception <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r7 = r12 append r2 <NEXT> $ r8 = $ r7 append \ `` not \ `` <NEXT> $ r9 = r3 get name <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r13 < init > $ r11 <NEXT> throw r13 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r4 = r2 get name <NEXT> r14 = org apache hadoop conf configuration r0 <NEXT> r14 set r1 $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop conf reconfiguration exception r0 <NEXT> $ r1 = r2 new val <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r12 = org apache hadoop crypto cipher suite r0 <NEXT> $ r5 = r12 name <NEXT> r1 = $ r5 split \ `` \ `` <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r4 = r1 [ i1 ] <NEXT> $ r8 = r11 append \ `` \ `` <NEXT> $ r9 = org apache hadoop util string utils to lower case r4 <NEXT> $ r8 append $ r9 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label $ r7 = r11 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org apache hadoop crypto key key provider $ option <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 last index of 64 <NEXT> if i0 ! = -1 goto label1 <NEXT> $ r2 = new java io i o exception <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` no version in key path \ `` <NEXT> $ r5 = $ r4 append r0 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke $ r2 < init > $ r6 <NEXT> throw $ r2 <NEXT> if i0 ! = -1 goto label1 <NEXT> label $ r1 = r0 substring 0 i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org apache hadoop crypto random openssl secure random native enable <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org apache hadoop crypto random openssl secure random r0 <NEXT> $ z1 = specialinvoke r3 next rand bytes r1 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r4 = org apache hadoop crypto random openssl secure random r0 <NEXT> $ r2 = r4 fallback <NEXT> $ r2 next byte r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache hadoop fs abstract file system r0 <NEXT> $ r1 = r3 get uri <NEXT> r4 = org apache hadoop fs abstract file system r0 <NEXT> $ i0 = r4 get uri default port <NEXT> $ r2 = org apache hadoop security security util build d t service name $ r1 $ i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r5 = org apache hadoop f x attr set flag create <NEXT> $ r4 = org apache hadoop f x attr set flag replace <NEXT> r7 = java lang enum $ r5 <NEXT> r8 = java lang enum $ r4 <NEXT> $ r6 = java util enum set of r7 r8 <NEXT> r9 = org apache hadoop fs abstract file system r0 <NEXT> r9 set x attr r1 r2 r3 $ r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang unsupported operation exception <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = r0 get class <NEXT> $ r5 = $ r4 get simple name <NEXT> $ r6 = $ r3 append $ r5 <NEXT> $ r7 = $ r6 append \ `` doesn\'t support list x attrs\ `` <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke $ r2 < init > $ r8 <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop f block location r0 <NEXT> $ r1 = r2 topology path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache hadoop f block location r0 <NEXT> r1 length = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop f content summary r0 <NEXT> $ r1 = r2 to string 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop f file status r0 <NEXT> $ z0 = r1 isdir <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r2 = org apache hadoop f file status r0 <NEXT> $ z1 = r2 be symlink <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop f file status r0 <NEXT> $ r1 = r2 owner <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get \ `` fs default f s\ <NEXT> $ r2 = org apache hadoop f file system fix name $ r1 <NEXT> $ r3 = java net uri create $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache hadoop f file system fix name r1 <NEXT> $ r3 = java net uri create $ r2 <NEXT> org apache hadoop f file system set default uri r0 $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = new java lang unsupported operation exception <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append \ `` not implement by the \ `` <NEXT> $ r6 = r0 get class <NEXT> $ r7 = $ r6 get simple name <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 append \ `` file system implementation\ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke $ r3 < init > $ r10 <NEXT> throw $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache hadoop f file system r0 <NEXT> $ r4 = r7 delete on exit <NEXT> entermonitor $ r4 <NEXT> label r8 = org apache hadoop f file system r0 <NEXT> $ r5 = r8 delete on exit <NEXT> $ z0 = $ r5 remove r1 <NEXT> exitmonitor $ r4 <NEXT> label return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r15 = org apache hadoop f file system r0 <NEXT> r4 = r15 list status r2 <NEXT> if r4 ! = null goto label1 <NEXT> r14 = new java io i o exception <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r10 = r13 append \ `` error accessing \ `` <NEXT> $ r11 = $ r10 append r2 <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke r14 < init > $ r12 <NEXT> throw r14 <NEXT> if r4 ! = null goto label1 <NEXT> label i1 = 0 <NEXT> label $ i0 = lengthof r4 <NEXT> if i1 > = $ i0 goto label4 <NEXT> $ r5 = r4 [ i1 ] <NEXT> $ r6 = $ r5 get path <NEXT> $ z0 = r3 accept $ r6 <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r4 [ i1 ] <NEXT> r1 add $ r7 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> if i1 > = $ i0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = new java util array list <NEXT> specialinvoke r8 < init > <NEXT> r9 = org apache hadoop f file system r0 <NEXT> specialinvoke r9 list status r8 r1 r2 <NEXT> $ i0 = r8 size <NEXT> $ r5 = newarray org apache hadoop f file status [ $ i0 ] <NEXT> $ r6 = r8 to array $ r5 <NEXT> $ r7 = org apache hadoop f file status [ ] $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> z1 = @ parameter3 <NEXT> r6 = org apache hadoop f file system r0 <NEXT> r3 = r6 get conf <NEXT> if z1 == 0 goto label1 <NEXT> $ r4 = org apache hadoop f file system get local r3 <NEXT> r5 = $ r4 get raw file system <NEXT> goto label2 <NEXT> label r7 = org apache hadoop f file system r0 <NEXT> r8 = org apache hadoop f file system r5 <NEXT> org apache hadoop f file util copy r7 r1 r8 r2 z0 r3 <NEXT> return <NEXT> if z1 == 0 goto label1 <NEXT> label r5 = org apache hadoop f file system get local r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache hadoop f file system statistic table <NEXT> $ r3 = $ r2 get r1 <NEXT> r7 = org apache hadoop f file system $ statistic $ r3 <NEXT> if r7 ! = null goto label1 <NEXT> $ r4 = new org apache hadoop f file system $ statistic <NEXT> specialinvoke $ r4 < init > r0 <NEXT> r7 = $ r4 <NEXT> $ r5 = org apache hadoop f file system statistic table <NEXT> $ r5 put r1 $ r4 <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache hadoop f filter file system r0 <NEXT> $ r1 = r3 f <NEXT> $ r2 = $ r1 get work directory <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop f f s output summer r0 <NEXT> r1 flush buffer 0 1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org apache hadoop f f shell new shell instance <NEXT> r6 = new org apache hadoop conf configuration <NEXT> specialinvoke r6 < init > <NEXT> r6 set quiet mode 0 <NEXT> r1 set conf r6 <NEXT> label r7 = org apache hadoop util tool r1 <NEXT> i0 = org apache hadoop util tool runner run r7 r0 <NEXT> label r1 close <NEXT> goto label5 <NEXT> label java lang system exit i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = newarray java lang string [ 1 ] <NEXT> $ r1 [ 0 ] = \ `` -chmod\ `` <NEXT> r0 add class class \ `` lorg apache hadoop f f shell permission $ chmod \ <NEXT> $ r2 = newarray java lang string [ 1 ] <NEXT> $ r2 [ 0 ] = \ `` -chown\ `` <NEXT> r0 add class class \ `` lorg apache hadoop f f shell permission $ chown \ <NEXT> $ r3 = newarray java lang string [ 1 ] <NEXT> $ r3 [ 0 ] = \ `` -chgrp\ `` <NEXT> r0 add class class \ `` lorg apache hadoop f f shell permission $ chgrp \ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache hadoop fs local dir allocator r0 <NEXT> $ r3 = r4 get local path for write r1 -1l r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache hadoop fs local dir allocator r0 <NEXT> $ r4 = r5 context cfg item name <NEXT> r6 = org apache hadoop fs local dir allocator r0 <NEXT> r3 = specialinvoke r6 obtain context $ r4 <NEXT> $ z0 = r3 if exists r1 r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache hadoop fs path r0 <NEXT> $ z0 = r5 be uri path absolute <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache hadoop fs path r0 <NEXT> $ r1 = r6 uri <NEXT> $ r2 = $ r1 get scheme <NEXT> if $ r2 ! = null goto label1 <NEXT> r7 = org apache hadoop fs path r0 <NEXT> $ r3 = r7 uri <NEXT> $ r4 = $ r3 get authority <NEXT> if $ r4 ! = null goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ r4 ! = null goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop f shell command r0 <NEXT> r2 command factory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache hadoop f shell command r0 <NEXT> $ r3 = r10 err <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> r11 = org apache hadoop f shell command r0 <NEXT> $ r4 = r11 get name <NEXT> $ r5 = r9 append $ r4 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r7 = $ r6 append r1 <NEXT> $ r8 = $ r7 to string <NEXT> $ r3 println $ r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache hadoop f shell command factory r0 <NEXT> $ r2 = r4 get conf <NEXT> r5 = org apache hadoop f shell command factory r0 <NEXT> $ r3 = r5 get instance r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r6 = new java util array list <NEXT> $ r4 = java util array a list r1 <NEXT> specialinvoke r6 < init > $ r4 <NEXT> $ r5 = r6 sub list 0 i0 <NEXT> $ r5 clear <NEXT> r7 = org apache hadoop f shell command format r0 <NEXT> r7 parse r6 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop f shell find find option r0 <NEXT> r2 in = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache hadoop f shell find find option r0 <NEXT> r1 max depth = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop f trash r0 <NEXT> $ r1 = r2 trash policy <NEXT> $ r1 delete checkpoint <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = org apache hadoop f viewfs config util get config view fs prefix r1 <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \ `` <NEXT> $ r6 = $ r5 append \ `` homedir\ `` <NEXT> $ r7 = $ r6 to string <NEXT> $ r8 = r0 get $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache hadoop http http server r0 <NEXT> $ r3 = r4 web app context <NEXT> $ r3 set attribute r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = r0 get class <NEXT> $ r5 = $ r4 get class loader <NEXT> $ r6 = new java lang string builder <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = $ r6 append \ `` webapps \ `` <NEXT> $ r8 = $ r7 append r1 <NEXT> $ r9 = $ r8 to string <NEXT> r2 = $ r5 get resource $ r9 <NEXT> if r2 ! = null goto label1 <NEXT> $ r11 = new java io file not find exception <NEXT> $ r12 = new java lang string builder <NEXT> specialinvoke $ r12 < init > <NEXT> $ r13 = $ r12 append \ `` webapps \ `` <NEXT> $ r14 = $ r13 append r1 <NEXT> $ r15 = $ r14 append \ `` not find in classpath\ `` <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke $ r11 < init > $ r16 <NEXT> throw $ r11 <NEXT> if r2 ! = null goto label1 <NEXT> label r3 = r2 to string <NEXT> $ i0 = r3 last index of 47 <NEXT> $ r10 = r3 substring 0 $ i0 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop io array primitive writable r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r3 = org apache hadoop io binary comparable r0 <NEXT> $ r2 = r3 get bytes <NEXT> r4 = org apache hadoop io binary comparable r0 <NEXT> $ i2 = r4 get length <NEXT> $ i3 = org apache hadoop io writable comparator compare bytes $ r2 0 $ i2 r1 i0 i1 <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache hadoop io compress bzip2 c b zip2 input stream r0 <NEXT> $ l2 = r1 byte read from compress stream <NEXT> $ l1 = long i0 <NEXT> $ l3 = $ l2 + $ l1 <NEXT> r2 = org apache hadoop io compress bzip2 c b zip2 input stream r0 <NEXT> r2 byte read from compress stream = $ l3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop io compress b zip2 codec r0 <NEXT> r2 conf = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r32 = new java lang string builder <NEXT> specialinvoke r32 < init > <NEXT> r33 = org apache hadoop io compress compression codec factory r0 <NEXT> $ r4 = r33 codecs <NEXT> $ r5 = $ r4 entry set <NEXT> r2 = $ r5 iterator <NEXT> r32 append \ `` { \ `` <NEXT> $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r9 = r2 next <NEXT> r30 = java util map $ entry $ r9 <NEXT> $ r10 = r30 get key <NEXT> $ r11 = java lang string $ r10 <NEXT> r32 append $ r11 <NEXT> r32 append \ `` \ `` <NEXT> $ r14 = r30 get value <NEXT> $ r15 = org apache hadoop io compress compression codec $ r14 <NEXT> $ r16 = $ r15 get class <NEXT> $ r17 = $ r16 get name <NEXT> r32 append $ r17 <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r19 = r2 next <NEXT> r31 = java util map $ entry $ r19 <NEXT> r32 append \ <NEXT> $ r21 = r31 get key <NEXT> $ r22 = java lang string $ r21 <NEXT> r32 append $ r22 <NEXT> if $ z1 == 0 goto label2 <NEXT> label r32 append \ `` } \ `` <NEXT> $ r8 = r32 to string <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = null <NEXT> r15 = org apache hadoop io compress compression codec factory r0 <NEXT> $ r6 = r15 codecs <NEXT> if $ r6 == null goto label1 <NEXT> r2 = r1 get name <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > r2 <NEXT> $ r8 = r14 reverse <NEXT> r3 = $ r8 to string <NEXT> r16 = org apache hadoop io compress compression codec factory r0 <NEXT> $ r9 = r16 codecs <NEXT> r4 = $ r9 head map r3 <NEXT> $ z0 = r4 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r10 = r4 last key <NEXT> r5 = java lang string $ r10 <NEXT> $ z1 = r3 start with r5 <NEXT> if $ z1 == 0 goto label1 <NEXT> r17 = org apache hadoop io compress compression codec factory r0 <NEXT> $ r11 = r17 codecs <NEXT> $ r12 = $ r11 get r5 <NEXT> r13 = org apache hadoop io compress compression codec $ r12 <NEXT> label return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop io compress lz4 lz4 compressor r0 <NEXT> r1 finish = 1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> $ z0 = r1 instanceof java io print stream <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = java io print stream r1 <NEXT> goto label2 <NEXT> label r2 = $ r5 <NEXT> r3 = newarray byte [ i0 ] <NEXT> i1 = r0 read r3 <NEXT> label if i1 < 0 goto label5 <NEXT> r1 write r3 0 i1 <NEXT> if r2 == null goto label4 <NEXT> $ z1 = r2 check error <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r4 = new java io i o exception <NEXT> specialinvoke $ r4 < init > \ `` unable to write to output stream \ `` <NEXT> throw $ r4 <NEXT> if $ z1 == 0 goto label4 <NEXT> label i1 = r0 read r3 <NEXT> goto label3 <NEXT> label if i1 < 0 goto label5 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r5 = null <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> $ r1 = org apache hadoop io m d5 hash digest r0 0 $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r3 = org apache hadoop io data output buffer r0 <NEXT> $ r2 = r3 buffer <NEXT> $ r2 write r1 i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ b1 = r0 [ i0 ] <NEXT> $ s2 = $ b1 & 255 <NEXT> $ i6 = $ s2 < < 8 <NEXT> $ i3 = i0 + 1 <NEXT> $ b4 = r0 [ $ i3 ] <NEXT> $ s5 = $ b4 & 255 <NEXT> $ i7 = $ i6 + $ s5 <NEXT> return $ i7 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ l1 = org apache hadoop io writable comparator read v long r0 i0 <NEXT> $ i2 = int $ l1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r8 = org apache hadoop ipc client r0 <NEXT> $ r6 = r8 conf <NEXT> r5 = org apache hadoop ipc client $ connection id get connection id r3 null r4 0 $ r6 <NEXT> r9 = org apache hadoop ipc client r0 <NEXT> $ r7 = r9 call r1 r2 r5 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = javax net socket factory get default <NEXT> r4 = org apache hadoop ipc client cache r0 <NEXT> $ r3 = r4 get client r1 $ r2 class \ `` lorg apache hadoop io object writable \ `` <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop ipc fair call queue r0 <NEXT> $ r1 = r2 peek <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop ipc protocol proxy r0 <NEXT> $ r1 = r2 proxy <NEXT> return $ r1 <END>
<BEG> $ r1 = org apache hadoop ipc server cur call <NEXT> $ r2 = $ r1 get <NEXT> r0 = org apache hadoop ipc server $ call $ r2 <NEXT> if r0 == null goto label1 <NEXT> $ r3 = org apache hadoop ipc server $ call access $ 200 r0 <NEXT> if $ r3 == null goto label1 <NEXT> $ r4 = org apache hadoop ipc server $ call access $ 200 r0 <NEXT> $ r5 = $ r4 user <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if $ r3 == null goto label1 <NEXT> label $ r5 = null <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache hadoop ipc server r0 <NEXT> r1 socket send buffer size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r2 = org apache hadoop ipc server log <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r3 = r16 append \ `` stop server on \ `` <NEXT> r17 = org apache hadoop ipc server r0 <NEXT> $ i0 = r17 port <NEXT> $ r4 = $ r3 append $ i0 <NEXT> $ r5 = $ r4 to string <NEXT> $ r2 info $ r5 <NEXT> r18 = org apache hadoop ipc server r0 <NEXT> r18 run = 0 <NEXT> r19 = org apache hadoop ipc server r0 <NEXT> $ r6 = r19 handler <NEXT> if $ r6 == null goto label3 <NEXT> i2 = 0 <NEXT> label r20 = org apache hadoop ipc server r0 <NEXT> $ i1 = r20 handler count <NEXT> if i2 > = $ i1 goto label3 <NEXT> r21 = org apache hadoop ipc server r0 <NEXT> $ r12 = r21 handler <NEXT> $ r13 = $ r12 [ i2 ] <NEXT> if $ r13 == null goto label2 <NEXT> r22 = org apache hadoop ipc server r0 <NEXT> $ r14 = r22 handler <NEXT> $ r15 = $ r14 [ i2 ] <NEXT> $ r15 interrupt <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label3 <NEXT> label r23 = org apache hadoop ipc server r0 <NEXT> $ r7 = r23 listener <NEXT> $ r7 interrupt <NEXT> r24 = org apache hadoop ipc server r0 <NEXT> $ r8 = r24 listener <NEXT> $ r8 do stop <NEXT> r25 = org apache hadoop ipc server r0 <NEXT> $ r9 = r25 responder <NEXT> $ r9 interrupt <NEXT> r0 notify all <NEXT> r26 = org apache hadoop ipc server r0 <NEXT> $ r10 = r26 rpc metric <NEXT> $ r10 shutdown <NEXT> r27 = org apache hadoop ipc server r0 <NEXT> $ r11 = r27 rpc detail metric <NEXT> $ r11 shutdown <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache hadoop metric context factory r0 <NEXT> $ r2 = r4 attribute map <NEXT> $ r3 = $ r2 get r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop metric spi abstract metric context r0 <NEXT> $ z0 = r1 be monitor <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r2 = org apache hadoop metric spi abstract metric context r0 <NEXT> specialinvoke r2 start timer <NEXT> r3 = org apache hadoop metric spi abstract metric context r0 <NEXT> r3 be monitor = 1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache hadoop metric spi abstract metric context r0 <NEXT> $ r2 = r9 buffer data <NEXT> $ r3 = $ r2 get r1 <NEXT> if $ r3 ! = null goto label1 <NEXT> r10 = org apache hadoop metric spi abstract metric context r0 <NEXT> $ r6 = r10 buffer data <NEXT> r8 = new org apache hadoop metric spi abstract metric context $ record map <NEXT> specialinvoke r8 < init > <NEXT> $ r6 put r1 r8 <NEXT> label r11 = org apache hadoop metric spi abstract metric context r0 <NEXT> $ r4 = r11 new record r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache hadoop metric spi output record r0 <NEXT> $ r2 = r4 tag map <NEXT> $ r3 = $ r2 get r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop metric util metric time vary rate r0 <NEXT> $ r1 = r2 previous interval data <NEXT> $ l0 = $ r1 time <NEXT> return $ l0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache hadoop metrics2 lib intern $ tags instance <NEXT> $ r3 = $ r2 cache <NEXT> $ r4 = $ r3 add r0 r1 <NEXT> $ r5 = org apache hadoop metrics2 metric tag $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> $ r3 = org apache hadoop metrics2 lib intern info r1 r2 <NEXT> r5 = org apache hadoop metrics2 lib metric registry r0 <NEXT> $ r4 = r5 new counter $ r3 i0 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r19 = org apache hadoop metrics2 lib mutable rate r0 <NEXT> $ r6 = r19 protocol cache <NEXT> $ z0 = $ r6 contain r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r20 = org apache hadoop metrics2 lib mutable rate r0 <NEXT> $ r7 = r20 protocol cache <NEXT> $ r7 add r1 <NEXT> r2 = r1 get declare method <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label7 <NEXT> r3 = r2 [ i1 ] <NEXT> r4 = r3 get name <NEXT> $ r8 = org apache hadoop metrics2 lib mutable rate log <NEXT> $ r8 debug r4 <NEXT> label r21 = org apache hadoop metrics2 lib mutable rate r0 <NEXT> $ r9 = r21 registry <NEXT> $ r9 new rate r4 r4 0 1 <NEXT> label goto label6 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label7 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 name <NEXT> r4 = org apache hadoop metrics2 metric filter r0 <NEXT> $ z0 = r4 accept $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = r1 tag <NEXT> r5 = org apache hadoop metrics2 metric filter r0 <NEXT> $ z1 = r5 accept $ r3 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache hadoop metrics2 sink ganglion abstract ganglia sink r0 <NEXT> $ r3 = r6 ganglion conf map <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = org apache hadoop metrics2 sink ganglion ganglia conf $ r4 <NEXT> if r2 == null goto label1 <NEXT> $ r5 = r2 <NEXT> goto label2 <NEXT> label return $ r5 <NEXT> if r2 == null goto label1 <NEXT> label r7 = org apache hadoop metrics2 sink ganglion abstract ganglia sink r0 <NEXT> $ r5 = r7 default_ganglia_conf <END>
<BEG> r0 = @ this <NEXT> r35 = org apache hadoop net abstract d n s to switch map r0 <NEXT> r1 = r35 get switch map <NEXT> r33 = new java lang string builder <NEXT> specialinvoke r33 < init > <NEXT> $ r7 = r33 append \ `` map \ `` <NEXT> $ r8 = r0 to string <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r9 append \ `` \n\ `` <NEXT> if r1 == null goto label3 <NEXT> r33 append \ `` map\n\ `` <NEXT> r34 = new java util hash set <NEXT> specialinvoke r34 < init > <NEXT> $ r15 = r1 entry set <NEXT> r4 = $ r15 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r22 = r4 next <NEXT> r5 = java util map $ entry $ r22 <NEXT> $ r23 = r33 append \ `` \ `` <NEXT> $ r24 = r5 get key <NEXT> $ r25 = java lang string $ r24 <NEXT> $ r26 = $ r23 append $ r25 <NEXT> $ r27 = $ r26 append \ `` - > \ `` <NEXT> $ r28 = r5 get value <NEXT> $ r29 = java lang string $ r28 <NEXT> $ r30 = $ r27 append $ r29 <NEXT> $ r30 append \ `` \n\ `` <NEXT> $ r32 = r5 get value <NEXT> r34 add $ r32 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r16 = r33 append \ `` node \ `` <NEXT> $ i0 = r1 size <NEXT> $ r17 = $ r16 append $ i0 <NEXT> $ r17 append \ `` \n\ `` <NEXT> $ r19 = r33 append \ `` switch \ `` <NEXT> $ i1 = r34 size <NEXT> $ r20 = $ r19 append $ i1 <NEXT> $ r20 append \ `` \n\ `` <NEXT> goto label4 <NEXT> label $ r12 = r33 to string <NEXT> return $ r12 <NEXT> if r1 == null goto label3 <NEXT> label r33 append \ `` no topology information\ `` <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get class \ `` net topology impl\ <NEXT> $ r2 = org apache hadoop util reflection utils new instance $ r1 r0 <NEXT> $ r3 = org apache hadoop net network topology $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = r0 get network location <NEXT> $ r3 = $ r1 append $ r2 <NEXT> $ r4 = $ r3 append \ `` \ `` <NEXT> $ r5 = r0 get name <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache hadoop net socket output stream r0 <NEXT> $ r1 = r4 writer <NEXT> $ r2 = $ r1 channel <NEXT> $ r2 close <NEXT> r5 = org apache hadoop net socket output stream r0 <NEXT> $ r3 = r5 writer <NEXT> $ r3 close <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> $ i0 = 0 <NEXT> goto label2 <NEXT> label r3 = org apache hadoop record buffer r0 <NEXT> r3 count = $ i0 <NEXT> r4 = org apache hadoop record buffer r0 <NEXT> r4 bytes = r1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label $ i0 = lengthof r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache hadoop record buffer r0 <NEXT> $ r1 = r4 bytes <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r3 = newarray byte [ 0 ] <NEXT> r5 = org apache hadoop record buffer r0 <NEXT> r5 bytes = $ r3 <NEXT> label r6 = org apache hadoop record buffer r0 <NEXT> $ r2 = r6 bytes <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = specialinvoke r0 equal r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r2 = org apache hadoop record meta vector type i d r1 <NEXT> r5 = org apache hadoop record meta vector type i d r0 <NEXT> $ r4 = r5 type i d element <NEXT> $ r3 = r2 type i d element <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> r9 = org apache hadoop security authorize default impersonation provider r0 <NEXT> $ r3 = r9 config prefix <NEXT> $ r4 = r8 append $ r3 <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 append \ `` hosts\ `` <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache hadoop security credential r0 <NEXT> $ r2 = r5 secret key map <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = byte [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r6 = org apache hadoop security credential r0 <NEXT> $ r3 = r6 secret key map <NEXT> $ r4 = $ r3 key set <NEXT> r5 add all $ r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = org apache hadoop security credential token_storage_magic <NEXT> $ i1 = lengthof $ r3 <NEXT> r2 = newarray byte [ $ i1 ] <NEXT> r1 read fully r2 <NEXT> $ r4 = org apache hadoop security credential token_storage_magic <NEXT> $ z0 = java util array equal r2 $ r4 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r12 = new java io i o exception <NEXT> specialinvoke r12 < init > \ `` bad header find in token storage \ `` <NEXT> throw r12 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label b0 = r1 read byte <NEXT> if b0 == 0 goto label2 <NEXT> r14 = new java io i o exception <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r7 = r13 append \ `` unknown version \ `` <NEXT> $ r8 = $ r7 append b0 <NEXT> $ r9 = $ r8 append \ `` in token storage \ `` <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r14 < init > $ r10 <NEXT> throw r14 <NEXT> if b0 == 0 goto label2 <NEXT> label r15 = org apache hadoop security credential r0 <NEXT> r15 read field r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get class \ `` hadoop security saslproperties resolver class\ <NEXT> $ r2 = org apache hadoop util reflection utils new instance r1 r0 <NEXT> $ r3 = org apache hadoop security sasl property resolver $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org apache hadoop security user group information be security enable <NEXT> if $ z0 == 0 goto label5 <NEXT> r7 = null <NEXT> label r7 = org apache hadoop security user group information get login user <NEXT> label goto label4 <NEXT> label $ r3 = r7 do a r0 <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label5 <NEXT> label $ r2 = r0 run <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache hadoop security user group information get login user <NEXT> $ r2 = org apache hadoop security security util do a user $ r1 r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop security ssl file base key store factory r0 <NEXT> $ r1 = r2 key manager <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r8 = new org apache hadoop io data output buffer <NEXT> specialinvoke r8 < init > 4096 <NEXT> label r10 = org apache hadoop security token token identifier r0 <NEXT> r11 = java io data output r8 <NEXT> r10 write r11 <NEXT> label goto label4 <NEXT> label $ r4 = r8 get data <NEXT> $ i0 = r8 get length <NEXT> $ r5 = java util array copy of $ r4 $ i0 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop security user group information r0 <NEXT> $ z0 = r1 be keytab <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache hadoop security user group information r0 <NEXT> $ r2 = r4 subject <NEXT> $ r3 = $ r2 get public credential <NEXT> $ z0 = $ r3 add r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r10 = org apache hadoop security user group information r0 <NEXT> $ r3 = r10 subject <NEXT> entermonitor $ r3 <NEXT> label r9 = new java util array list <NEXT> r11 = org apache hadoop security user group information r0 <NEXT> $ r5 = specialinvoke r11 get credential internal <NEXT> $ r6 = $ r5 get all token <NEXT> specialinvoke r9 < init > $ r6 <NEXT> $ r7 = java util collection unmodifiable collection r9 <NEXT> exitmonitor $ r3 <NEXT> label return $ r7 <END>
<BEG> r0 = @ this <NEXT> r8 = org apache hadoop service composite service r0 <NEXT> $ r3 = r8 service list <NEXT> entermonitor $ r3 <NEXT> label r7 = new java util array list <NEXT> r9 = org apache hadoop service composite service r0 <NEXT> $ r5 = r9 service list <NEXT> specialinvoke r7 < init > $ r5 <NEXT> exitmonitor $ r3 <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> r15 = org apache hadoop service service state model r0 <NEXT> $ r2 = r15 name <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r12 = \ `` \ `` <NEXT> goto label2 <NEXT> label $ r7 = r13 append $ r12 <NEXT> r17 = org apache hadoop service service state model r0 <NEXT> $ r8 = r17 state <NEXT> $ r9 = $ r8 to string <NEXT> $ r10 = $ r7 append $ r9 <NEXT> $ r11 = $ r10 to string <NEXT> return $ r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> r16 = org apache hadoop service service state model r0 <NEXT> $ r4 = r16 name <NEXT> $ r5 = r14 append $ r4 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r12 = $ r6 to string <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop util closeable reference count r0 <NEXT> $ r1 = r2 status <NEXT> $ i0 = $ r1 get <NEXT> $ i1 = $ i0 & 1073741824 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r3 = org apache hadoop util line reader r0 <NEXT> $ r2 = r3 record delimiter bytes <NEXT> if $ r2 == null goto label1 <NEXT> r4 = org apache hadoop util line reader r0 <NEXT> $ i3 = specialinvoke r4 read custom line r1 i0 i1 <NEXT> return $ i3 <NEXT> if $ r2 == null goto label1 <NEXT> label r5 = org apache hadoop util line reader r0 <NEXT> $ i2 = specialinvoke r5 read default line r1 i0 i1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r1 set boolean \ `` io native lib available\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> r3 = org apache hadoop util progress r0 <NEXT> r2 = r3 add phase f0 <NEXT> r2 set status r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> label r11 = org apache hadoop util sequential number r0 <NEXT> l1 = r11 get current value <NEXT> $ b2 = l0 cmp l1 <NEXT> if $ b2 > = 0 goto label2 <NEXT> r10 = new java lang illegal state exception <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r4 = r9 append \ `` can not skip to less than the current value =\ `` <NEXT> $ r5 = $ r4 append l1 <NEXT> $ r6 = $ r5 append \ `` where new value=\ `` <NEXT> $ r7 = $ r6 append l0 <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke r10 < init > $ r8 <NEXT> throw r10 <NEXT> if $ b2 > = 0 goto label2 <NEXT> label r12 = org apache hadoop util sequential number r0 <NEXT> $ r1 = r12 current value <NEXT> $ z0 = $ r1 compare and set l1 l0 <NEXT> if $ z0 == 0 goto label3 <NEXT> return <NEXT> if $ z0 == 0 goto label3 <NEXT> label goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop util shell r0 <NEXT> $ i0 = r1 exit code <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> b2 = @ parameter3 <NEXT> i3 = @ parameter4 <NEXT> i4 = -1 <NEXT> i5 = i0 <NEXT> i6 = 0 <NEXT> label if i6 > = i3 goto label3 <NEXT> i4 = org apache hadoop util u t f8 byte array utils find byte r0 i5 i1 b2 <NEXT> if i4 > = 0 goto label2 <NEXT> return i4 <NEXT> if i4 > = 0 goto label2 <NEXT> label i5 = i4 + 1 <NEXT> i6 = i6 + 1 <NEXT> goto label1 <NEXT> label if i6 > = i3 goto label3 <NEXT> label return i4 <END>
<BEG> $ r0 = org apache hadoop util version info common_version_info <NEXT> $ r1 = $ r0 _get build version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache hadoop hdfs client hdfs admin r0 <NEXT> $ r2 = r3 dfs <NEXT> $ r2 set quota r1 9223372036854775807l -1l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache hadoop hdfs client hdfs admin r0 <NEXT> $ r2 = r3 dfs <NEXT> $ r2 allow snapshot r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache hadoop hdfs client hdfs admin r0 <NEXT> $ r3 = r4 dfs <NEXT> $ l0 = $ r3 add cache directive r1 r2 <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache hadoop hdfs client hdfs admin r0 <NEXT> $ r3 = r4 dfs <NEXT> $ r3 modify cache directive r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache hadoop hdfs client hdfs admin r0 <NEXT> $ r2 = r3 dfs <NEXT> $ r2 modify cache pool r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache hadoop hdfs client hdfs admin r0 <NEXT> $ r2 = r3 dfs <NEXT> $ r2 remove cache pool r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs client hdfs data input stream r0 <NEXT> $ r1 = r2 in <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r25 = org apache hadoop hdfs d f s input stream r0 <NEXT> $ r2 = r25 close <NEXT> $ z0 = $ r2 compare and set 0 1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r21 = org apache hadoop hdfs d f s client log <NEXT> $ r21 debug \ `` d f s input stream have be close already\ `` <NEXT> return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r26 = org apache hadoop hdfs d f s input stream r0 <NEXT> $ r3 = r26 dfs client <NEXT> $ r3 check open <NEXT> r27 = org apache hadoop hdfs d f s input stream r0 <NEXT> $ r4 = r27 extend read buffer <NEXT> if $ r4 == null goto label2 <NEXT> r28 = org apache hadoop hdfs d f s input stream r0 <NEXT> $ r5 = r28 extend read buffer <NEXT> $ z1 = $ r5 be empty <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r22 = new java lang string builder <NEXT> specialinvoke r22 < init > <NEXT> r29 = org apache hadoop hdfs d f s input stream r0 <NEXT> $ r8 = r29 extend read buffer <NEXT> r23 = new org apache hadoop hdfs d f s input stream $ 1 <NEXT> r30 = org apache hadoop hdfs d f s input stream r0 <NEXT> specialinvoke r23 < init > r30 r22 <NEXT> r31 = org apache hadoop util identity hash store $ visitor r23 <NEXT> $ r8 visit all r31 <NEXT> $ r10 = org apache hadoop hdfs d f s client log <NEXT> r24 = new java lang string builder <NEXT> specialinvoke r24 < init > <NEXT> $ r11 = r24 append \ `` close file \ `` <NEXT> r32 = org apache hadoop hdfs d f s input stream r0 <NEXT> $ r12 = r32 src <NEXT> $ r13 = $ r11 append $ r12 <NEXT> $ r14 = $ r13 append \ <NEXT> $ r15 = $ r14 append \ `` unreleased byte buffer allocate by read \ `` <NEXT> $ r16 = $ r15 append \ `` please release \ `` <NEXT> $ r17 = r22 to string <NEXT> $ r18 = $ r16 append $ r17 <NEXT> $ r19 = $ r18 append \ `` \ `` <NEXT> $ r20 = $ r19 to string <NEXT> $ r10 warn $ r20 <NEXT> label r33 = org apache hadoop hdfs d f s input stream r0 <NEXT> specialinvoke r33 close current block reader <NEXT> specialinvoke r0 close <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop hdfs d f s output stream r0 <NEXT> $ l0 = r1 initial file size <NEXT> return $ l0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r22 = newarray org apache hadoop f block location [ 0 ] <NEXT> return $ r22 <NEXT> if r0 ! = null goto label1 <NEXT> label i0 = r0 size <NEXT> r1 = newarray org apache hadoop f block location [ i0 ] <NEXT> if i0 ! = 0 goto label2 <NEXT> return r1 <NEXT> if i0 ! = 0 goto label2 <NEXT> label i8 = 0 <NEXT> r2 = r0 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label9 <NEXT> $ r8 = r2 next <NEXT> r3 = org apache hadoop hdfs protocol locate block $ r8 <NEXT> $ z1 = org apache hadoop hdfs d f s util $ assertion disable <NEXT> if $ z1 ! = 0 goto label4 <NEXT> if i8 < i0 goto label4 <NEXT> $ r21 = new java lang assertion error <NEXT> specialinvoke $ r21 < init > \ `` incorrect index\ `` <NEXT> throw $ r21 <NEXT> if i8 < i0 goto label4 <NEXT> label r4 = r3 get location <NEXT> $ i1 = lengthof r4 <NEXT> r5 = newarray java lang string [ $ i1 ] <NEXT> $ i2 = lengthof r4 <NEXT> r6 = newarray java lang string [ $ i2 ] <NEXT> $ i3 = lengthof r4 <NEXT> r7 = newarray java lang string [ $ i3 ] <NEXT> i9 = 0 <NEXT> label $ i10 = lengthof r4 <NEXT> if i9 > = $ i10 goto label6 <NEXT> $ r12 = r4 [ i9 ] <NEXT> $ r13 = $ r12 get host name <NEXT> r5 [ i9 ] = $ r13 <NEXT> $ r14 = r4 [ i9 ] <NEXT> $ r15 = $ r14 get xfer addr <NEXT> r6 [ i9 ] = $ r15 <NEXT> $ r16 = new org apache hadoop net node base <NEXT> $ r18 = r6 [ i9 ] <NEXT> $ r17 = r4 [ i9 ] <NEXT> $ r19 = $ r17 get network location <NEXT> specialinvoke $ r16 < init > $ r18 $ r19 <NEXT> $ r20 = $ r16 to string <NEXT> r7 [ i9 ] = $ r20 <NEXT> i9 = i9 + 1 <NEXT> goto label5 <NEXT> if i9 > = $ i10 goto label6 <NEXT> label r24 = r3 get cache location <NEXT> $ i4 = lengthof r24 <NEXT> r25 = newarray java lang string [ $ i4 ] <NEXT> i11 = 0 <NEXT> label $ i5 = lengthof r24 <NEXT> if i11 > = $ i5 goto label8 <NEXT> $ r10 = r24 [ i11 ] <NEXT> $ r11 = $ r10 get host name <NEXT> r25 [ i11 ] = $ r11 <NEXT> i11 = i11 + 1 <NEXT> goto label7 <NEXT> if i11 > = $ i5 goto label8 <NEXT> label $ r9 = new org apache hadoop f block location <NEXT> $ l6 = r3 get start offset <NEXT> $ l7 = r3 get block size <NEXT> $ z2 = r3 be corrupt <NEXT> specialinvoke $ r9 < init > r6 r5 r25 r7 $ l6 $ l7 $ z2 <NEXT> r1 [ i8 ] = $ r9 <NEXT> i8 = i8 + 1 <NEXT> goto label3 <NEXT> if $ z0 == 0 goto label9 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = newarray java lang string [ 2 ] <NEXT> $ r1 [ 0 ] = \ `` dfs namenode servicerpc-address\ `` <NEXT> $ r1 [ 1 ] = \ `` dfs namenode rpc-address\ `` <NEXT> $ r2 = org apache hadoop hdfs d f s util get name service uris r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> i0 = lengthof r3 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r5 = r3 [ i1 ] <NEXT> $ r6 = newarray java lang string [ 2 ] <NEXT> $ r6 [ 0 ] = r1 <NEXT> $ r6 [ 1 ] = r2 <NEXT> $ r7 = org apache hadoop hdfs d f s util add key suffix r5 $ r6 <NEXT> r10 = r0 get $ r7 <NEXT> if r10 == null goto label2 <NEXT> r0 set r5 r10 <NEXT> goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if r10 == null goto label2 <NEXT> label $ r8 = newarray java lang string [ 1 ] <NEXT> $ r8 [ 0 ] = r1 <NEXT> $ r9 = org apache hadoop hdfs d f s util add key suffix r5 $ r8 <NEXT> r11 = r0 get $ r9 <NEXT> if r11 == null goto label3 <NEXT> r0 set r5 r11 <NEXT> label if i1 > = i0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 get \ `` dfs web authentication kerberos keytab\ `` <NEXT> if r2 == null goto label1 <NEXT> $ z0 = r2 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r3 = r1 <NEXT> goto label3 <NEXT> label return $ r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r3 = \ `` dfs web authentication kerberos keytab\ `` <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new org apache hadoop conf configuration <NEXT> specialinvoke $ r2 < init > 0 <NEXT> $ r3 = r0 get \ `` dfs http server keystore resource\ <NEXT> $ r2 add resource $ r3 <NEXT> z0 = r0 get boolean \ `` dfs client https need-auth\ <NEXT> $ r2 set boolean \ `` dfs client https need-auth\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop hdfs distribute file system r0 <NEXT> $ z0 = r2 set safe mode r1 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache hadoop hdfs distribute file system r0 <NEXT> $ r2 = r3 dfs <NEXT> $ r2 meta save r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs protocol block local path info r0 <NEXT> $ r1 = r2 block <NEXT> $ l0 = $ r1 get num byte <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop hdfs protocol datanode info r0 <NEXT> $ l0 = r1 dfs use <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop hdfs protocol datanode info r0 <NEXT> $ l1 = r1 block pool use <NEXT> r2 = org apache hadoop hdfs protocol datanode info r0 <NEXT> $ l0 = r2 capacity <NEXT> $ f0 = org apache hadoop hdfs d f s util get percent use $ l1 $ l0 <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache hadoop hdfs protocol datanode info r0 <NEXT> r1 xceiver count = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs protocol datanode local info r0 <NEXT> $ r1 = r2 software version <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ b0 = r0 read byte <NEXT> $ r1 = org apache hadoop hdfs protocol datatransfer op value of $ b0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r20 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0 <NEXT> $ r3 = r20 sasl client <NEXT> if $ r3 == null goto label1 <NEXT> r16 = new org apache hadoop hdfs protocol datatransfer i o stream pair <NEXT> r14 = new org apache hadoop security sasl input stream <NEXT> r21 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0 <NEXT> $ r11 = r21 sasl client <NEXT> specialinvoke r14 < init > r2 $ r11 <NEXT> r15 = new org apache hadoop security sasl output stream <NEXT> r22 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0 <NEXT> $ r13 = r22 sasl client <NEXT> specialinvoke r15 < init > r1 $ r13 <NEXT> r23 = java io input stream r14 <NEXT> r24 = java io output stream r15 <NEXT> specialinvoke r16 < init > r23 r24 <NEXT> return r16 <NEXT> if $ r3 == null goto label1 <NEXT> label r19 = new org apache hadoop hdfs protocol datatransfer i o stream pair <NEXT> r17 = new org apache hadoop security sasl input stream <NEXT> r25 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0 <NEXT> $ r6 = r25 sasl server <NEXT> specialinvoke r17 < init > r2 $ r6 <NEXT> r18 = new org apache hadoop security sasl output stream <NEXT> r26 = org apache hadoop hdfs protocol datatransfer sasl sasl participant r0 <NEXT> $ r8 = r26 sasl server <NEXT> specialinvoke r18 < init > r1 $ r8 <NEXT> r27 = java io input stream r17 <NEXT> r28 = java io output stream r18 <NEXT> specialinvoke r19 < init > r27 r28 <NEXT> return r19 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop hdfs protocol directory list r0 <NEXT> $ i0 = r1 remain entry <NEXT> if $ i0 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs protocol hdfs file status r0 <NEXT> $ r1 = r2 path <NEXT> $ i0 = lengthof $ r1 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs protocol locate block r0 <NEXT> $ r1 = r2 locs <NEXT> r3 = org apache hadoop hdfs protocol datanode info [ ] $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r13 = new com google common util concurrent thread factory builder <NEXT> specialinvoke r13 < init > <NEXT> $ r2 = r13 set daemon 1 <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> $ r4 = r14 append \ `` logger channel from single-thread executor to \ `` <NEXT> r15 = org apache hadoop hdfs qjournal client i p c logger channel r0 <NEXT> $ r5 = r15 addr <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> $ r8 = $ r2 set name format $ r7 <NEXT> $ r9 = com google common util concurrent uncaught exception handler system exit <NEXT> $ r10 = $ r8 set uncaught exception handler $ r9 <NEXT> $ r11 = $ r10 build <NEXT> $ r12 = java util concurrent executor new single thread executor $ r11 <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache hadoop hdfs server balancer key manager r0 <NEXT> $ z0 = r10 be block token enable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r8 = org apache hadoop hdfs security token block block token secret manager dummy_token <NEXT> return $ r8 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r11 = org apache hadoop hdfs server balancer key manager r0 <NEXT> $ z1 = r11 should run <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r9 = new java io i o exception <NEXT> specialinvoke r9 < init > \ `` can not get access token since block key updater be not running\ `` <NEXT> throw r9 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label r12 = org apache hadoop hdfs server balancer key manager r0 <NEXT> $ r4 = r12 block token secret manager <NEXT> $ r3 = org apache hadoop hdfs security token block block token secret manager $ access mode replace <NEXT> $ r2 = org apache hadoop hdfs security token block block token secret manager $ access mode copy <NEXT> r13 = java lang enum $ r3 <NEXT> r14 = java lang enum $ r2 <NEXT> $ r5 = java util enum set of r13 r14 <NEXT> $ r6 = $ r4 generate token null r1 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache hadoop hdfs server common hdfs server constant $ block u c state complete <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r2 add r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ b0 = 1 <NEXT> goto label2 <NEXT> label return $ b0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ b0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r2 = r0 [ i1 ] <NEXT> $ r3 = r2 get datanode descriptor <NEXT> $ r4 = r2 get storage type <NEXT> $ r3 increment block schedule $ r4 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r17 = new java lang string builder <NEXT> specialinvoke r17 < init > <NEXT> r19 = org apache hadoop hdfs server common storage r0 <NEXT> $ r5 = r19 storage dirs <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r2 next <NEXT> r3 = org apache hadoop hdfs server common storage $ storage directory $ r7 <NEXT> r18 = new java lang string builder <NEXT> specialinvoke r18 < init > <NEXT> $ r9 = r3 get root <NEXT> $ r10 = r18 append $ r9 <NEXT> $ r11 = $ r10 append \ `` \ `` <NEXT> $ r12 = r3 get storage dir type <NEXT> $ r13 = $ r11 append $ r12 <NEXT> $ r14 = $ r13 append \ `` \ `` <NEXT> $ r15 = $ r14 to string <NEXT> r17 append $ r15 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r6 = r17 to string <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = org apache hadoop hdfs server common storage info r0 <NEXT> r3 set layout version r1 r2 <NEXT> r4 = org apache hadoop hdfs server common storage info r0 <NEXT> r4 set namespace i d r1 r2 <NEXT> r5 = org apache hadoop hdfs server common storage info r0 <NEXT> r5 setc time r1 r2 <NEXT> r6 = org apache hadoop hdfs server common storage info r0 <NEXT> $ i0 = r6 layout version <NEXT> r7 = org apache hadoop hdfs server common storage info r0 <NEXT> r7 set cluster id r1 $ i0 r2 <NEXT> r8 = org apache hadoop hdfs server common storage info r0 <NEXT> r8 check storage type r1 r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ s0 = r0 read short <NEXT> $ r1 = org apache hadoop hdfs server datanode block metadata header read header $ s0 r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ l3 = l0 > > 16 <NEXT> $ l4 = $ l3 & 255l <NEXT> i1 = int $ l4 <NEXT> $ l5 = l0 > > 8 <NEXT> $ l6 = $ l5 & 255l <NEXT> i2 = int $ l6 <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` subdir\ `` <NEXT> $ r4 = $ r3 append i1 <NEXT> $ r5 = org apache hadoop hdfs server datanode datanode util sep <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 append \ `` subdir\ `` <NEXT> $ r8 = $ r7 append i2 <NEXT> r1 = $ r8 to string <NEXT> $ r9 = new java io file <NEXT> specialinvoke $ r9 < init > r0 r1 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs server datanode d n conf r0 <NEXT> $ r1 = r2 trust channel resolver <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs server datanode fsdataset impl volume failure info r0 <NEXT> $ r1 = r2 fail storage location <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache hadoop hdfs server datanode fsdataset replica output stream r0 <NEXT> $ r1 = r5 checksum out <NEXT> $ z0 = $ r1 instanceof java io file output stream <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org apache hadoop hdfs server datanode fsdataset replica output stream r0 <NEXT> $ r2 = r6 checksum out <NEXT> $ r3 = java io file output stream $ r2 <NEXT> $ r4 = $ r3 get channel <NEXT> $ r4 force 1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r4 = new java io file <NEXT> r5 = org apache hadoop hdfs server datanode replica info r0 <NEXT> $ r2 = r5 get dir <NEXT> r6 = org apache hadoop hdfs server datanode replica info r0 <NEXT> $ r3 = r6 get block name <NEXT> specialinvoke r4 < init > $ r2 $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> return 0l <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r30 = org apache hadoop hdfs server datanode replica in pipeline r0 <NEXT> $ r1 = r30 writer <NEXT> if $ r1 == null goto label4 <NEXT> r31 = org apache hadoop hdfs server datanode replica in pipeline r0 <NEXT> $ r2 = r31 writer <NEXT> $ r3 = java lang thread current thread <NEXT> if $ r2 == $ r3 goto label4 <NEXT> r32 = org apache hadoop hdfs server datanode replica in pipeline r0 <NEXT> $ r4 = r32 writer <NEXT> $ z0 = $ r4 be alive <NEXT> if $ z0 == 0 goto label4 <NEXT> r33 = org apache hadoop hdfs server datanode replica in pipeline r0 <NEXT> $ r5 = r33 writer <NEXT> $ r5 interrupt <NEXT> label r34 = org apache hadoop hdfs server datanode replica in pipeline r0 <NEXT> $ r6 = r34 writer <NEXT> $ r6 join l0 <NEXT> r35 = org apache hadoop hdfs server datanode replica in pipeline r0 <NEXT> $ r7 = r35 writer <NEXT> $ z1 = $ r7 be alive <NEXT> if $ z1 == 0 goto label2 <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r9 = r26 append \ `` join on writer thread \ `` <NEXT> r36 = org apache hadoop hdfs server datanode replica in pipeline r0 <NEXT> $ r10 = r36 writer <NEXT> $ r11 = $ r9 append $ r10 <NEXT> $ r12 = $ r11 append \ `` timed out\ `` <NEXT> r24 = $ r12 to string <NEXT> $ r14 = org apache hadoop hdfs server datanode data node log <NEXT> r27 = new java lang string builder <NEXT> specialinvoke r27 < init > <NEXT> $ r15 = r27 append r24 <NEXT> $ r16 = $ r15 append \ `` \n\ `` <NEXT> r37 = org apache hadoop hdfs server datanode replica in pipeline r0 <NEXT> $ r17 = r37 writer <NEXT> $ r18 = org apache hadoop util string utils get stack trace $ r17 <NEXT> $ r19 = $ r16 append $ r18 <NEXT> $ r20 = $ r19 to string <NEXT> $ r14 warn $ r20 <NEXT> r28 = new java io i o exception <NEXT> specialinvoke r28 < init > r24 <NEXT> throw r28 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop hdfs server namenode checkpoint signature r0 <NEXT> r2 blockpool i d = r1 <NEXT> return <END>
<BEG> z0 = @ parameter0 <NEXT> org apache hadoop hdfs server namenode edit log file output stream should skip fsync for test = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = r1 get late snapshot id <NEXT> r2 = r1 get last i node <NEXT> $ r4 = r1 get i node -2 <NEXT> r3 = $ r4 a directory <NEXT> $ z0 = r3 remove child r2 i0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return -1l <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = r2 be in late snapshot i0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ i1 = org apache hadoop hdfs server namenode i node reference try remove reference r2 <NEXT> if $ i1 < = 0 goto label2 <NEXT> $ l2 = 0l <NEXT> goto label3 <NEXT> label return $ l2 <NEXT> if $ i1 < = 0 goto label2 <NEXT> label $ l2 = 1l <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r17 = org apache hadoop hdfs server namenode f s edit log r0 <NEXT> $ r4 = r17 cache <NEXT> $ r5 = $ r4 get <NEXT> $ r6 = org apache hadoop hdfs server namenode f s edit log op $ op instance cache $ r5 <NEXT> $ r7 = org apache hadoop hdfs server namenode f s edit log op $ close op get instance $ r6 <NEXT> $ r8 = $ r7 set path r1 <NEXT> $ s0 = r2 get file replication <NEXT> $ r9 = $ r8 set replication $ s0 <NEXT> $ l1 = r2 get modification time <NEXT> $ r10 = $ r9 set modification time $ l1 <NEXT> $ l2 = r2 get access time <NEXT> $ r11 = $ r10 set access time $ l2 <NEXT> $ l3 = r2 get preferred block size <NEXT> $ r12 = $ r11 set block size $ l3 <NEXT> $ r13 = r2 get block <NEXT> r18 = org apache hadoop hdfs protocol block [ ] $ r13 <NEXT> $ r14 = $ r12 set block r18 <NEXT> $ r15 = r2 get permission status <NEXT> $ r16 = $ r14 set permission status $ r15 <NEXT> r3 = org apache hadoop hdfs server namenode f s edit log op $ close op $ r16 <NEXT> r19 = org apache hadoop hdfs server namenode f s edit log r0 <NEXT> r20 = org apache hadoop hdfs server namenode f s edit log op r3 <NEXT> r19 log edit r20 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache hadoop hdfs server namenode ha h a state r0 <NEXT> r5 prepare to exit state r1 <NEXT> r2 prepare to enter state r1 <NEXT> r1 write lock <NEXT> label r6 = org apache hadoop hdfs server namenode ha h a state r0 <NEXT> r6 exit state r1 <NEXT> r1 set state r2 <NEXT> r2 enter state r1 <NEXT> specialinvoke r2 update last h a transition time <NEXT> label r1 write unlock <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r9 = org apache hadoop hdfs server namenode ha i p failover proxy provider r0 <NEXT> $ r1 = r9 nn proxy info <NEXT> if $ r1 ! = null goto label1 <NEXT> return <NEXT> if $ r1 ! = null goto label1 <NEXT> label r10 = org apache hadoop hdfs server namenode ha i p failover proxy provider r0 <NEXT> $ r2 = r10 nn proxy info <NEXT> $ r3 = $ r2 proxy <NEXT> $ z0 = $ r3 instanceof java io closeable <NEXT> if $ z0 == 0 goto label2 <NEXT> r11 = org apache hadoop hdfs server namenode ha i p failover proxy provider r0 <NEXT> $ r6 = r11 nn proxy info <NEXT> $ r7 = $ r6 proxy <NEXT> $ r8 = java io closeable $ r7 <NEXT> $ r8 close <NEXT> goto label3 <NEXT> label return <NEXT> if $ z0 == 0 goto label2 <NEXT> label r12 = org apache hadoop hdfs server namenode ha i p failover proxy provider r0 <NEXT> $ r4 = r12 nn proxy info <NEXT> $ r5 = $ r4 proxy <NEXT> org apache hadoop ipc rpc stop proxy $ r5 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r2 = org apache hadoop hdfs server namenode i node r0 <NEXT> r2 add space consumed2 parent r1 z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs server namenode i node file r0 <NEXT> $ r1 = r2 get file under construction feature <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ z0 = r0 be snapshot <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ i0 = r0 length <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label com google common base precondition check argument $ z2 <NEXT> $ r6 = r0 get last i node <NEXT> if $ r6 == null goto label3 <NEXT> $ r5 = r0 get last i node <NEXT> $ z1 = $ r5 be directory <NEXT> if $ z1 == 0 goto label3 <NEXT> $ z3 = 1 <NEXT> goto label4 <NEXT> label com google common base precondition check argument $ z3 <NEXT> $ i1 = r0 length <NEXT> $ i2 = $ i1 + 1 <NEXT> r3 = newarray org apache hadoop hdfs server namenode i node [ $ i2 ] <NEXT> $ r7 = r0 inodes <NEXT> $ i3 = lengthof r3 <NEXT> $ i4 = $ i3 - 1 <NEXT> java lang system arraycopy $ r7 0 r3 0 $ i4 <NEXT> $ i5 = lengthof r3 <NEXT> $ i6 = $ i5 - 1 <NEXT> r3 [ $ i6 ] = r1 <NEXT> $ r8 = r0 path <NEXT> $ i7 = lengthof $ r8 <NEXT> $ i8 = $ i7 + 1 <NEXT> r4 = newarray byte [ ] [ $ i8 ] <NEXT> $ r9 = r0 path <NEXT> $ i9 = lengthof r4 <NEXT> $ i10 = $ i9 - 1 <NEXT> java lang system arraycopy $ r9 0 r4 0 $ i10 <NEXT> $ i11 = lengthof r4 <NEXT> $ i12 = $ i11 - 1 <NEXT> r4 [ $ i12 ] = r2 <NEXT> $ r10 = new org apache hadoop hdfs server namenode i node in path <NEXT> $ i13 = r0 snapshot id <NEXT> specialinvoke $ r10 < init > r3 r4 0 $ i13 <NEXT> return $ r10 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ z3 = 0 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs server namenode journal set r0 <NEXT> $ r1 = r2 journal <NEXT> r3 = org apache hadoop hdfs server namenode journal set r0 <NEXT> $ i0 = r3 minimum redundant journal <NEXT> $ z0 = org apache hadoop hdfs server namenode name node resource policy be resource available $ r1 $ i0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache hadoop hdfs server namenode snapshot snapshot id_integer_comparator <NEXT> r4 = org apache hadoop hdfs server namenode snapshot abstract i node diff r0 <NEXT> $ i0 = r4 snapshot id <NEXT> $ r3 = java lang integer value of $ i0 <NEXT> $ i1 = $ r2 compare $ r3 r1 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs server namenode startupprogress phase r0 <NEXT> $ r1 = r2 description <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache hadoop hdfs server namenode startupprogress startup progress r0 <NEXT> $ z0 = specialinvoke r5 be complete <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = org apache hadoop hdfs server namenode startupprogress startup progress r0 <NEXT> $ r2 = r6 phase <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org apache hadoop hdfs server namenode startupprogress phase track $ r3 <NEXT> $ l0 = org apache hadoop util time monotonic now <NEXT> $ r4 end time = $ l0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> r5 = org apache hadoop hdfs server namenode startupprogress startup progress r0 <NEXT> $ z0 = specialinvoke r5 be complete <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = org apache hadoop hdfs server namenode startupprogress startup progress r0 <NEXT> $ r2 = r6 phase <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org apache hadoop hdfs server namenode startupprogress phase track $ r3 <NEXT> $ r4 size = l0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache hadoop hdfs server namenode startupprogress startup progress view r0 <NEXT> $ r3 = r5 get status r1 <NEXT> $ r4 = org apache hadoop hdfs server namenode startupprogress status complete <NEXT> if $ r3 ! = $ r4 goto label1 <NEXT> return 1 0f <NEXT> if $ r3 ! = $ r4 goto label1 <NEXT> label r6 = org apache hadoop hdfs server namenode startupprogress startup progress view r0 <NEXT> l0 = r6 get total r1 r2 <NEXT> r7 = org apache hadoop hdfs server namenode startupprogress startup progress view r0 <NEXT> l1 = r7 get count r1 r2 <NEXT> $ b2 = l0 cmp 0l <NEXT> if $ b2 < = 0 goto label2 <NEXT> $ f0 = float l1 <NEXT> $ f2 = 1 0f * $ f0 <NEXT> $ f1 = float l0 <NEXT> $ f3 = $ f2 $ f1 <NEXT> $ f4 = org apache hadoop hdfs server namenode startupprogress startup progress view get bound percent $ f3 <NEXT> goto label3 <NEXT> label return $ f4 <NEXT> if $ b2 < = 0 goto label2 <NEXT> label $ f4 = 0 0f <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs server namenode startupprogress step r0 <NEXT> $ r1 = r2 file <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = r1 [ i0 ] <NEXT> r33 = org apache hadoop hdfs tool d f s admin r0 <NEXT> r3 = r33 get d f s <NEXT> r4 = r3 get conf <NEXT> r5 = r3 get uri <NEXT> z0 = org apache hadoop hdfs h a util be logical uri r4 r5 <NEXT> if z0 == 0 goto label3 <NEXT> r6 = r5 get host <NEXT> r7 = org apache hadoop hdfs h a util get proxy for all name node in nameservice r4 r6 class \ `` lorg apache hadoop hdfs protocol client protocol \ `` <NEXT> r8 = r7 iterator <NEXT> label $ z1 = r8 have next <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r19 = r8 next <NEXT> r9 = org apache hadoop hdfs name node proxy $ proxy and info $ r19 <NEXT> $ r20 = r9 get proxy <NEXT> $ r21 = org apache hadoop hdfs protocol client protocol $ r20 <NEXT> $ r21 meta save r2 <NEXT> $ r23 = java lang system out <NEXT> r31 = new java lang string builder <NEXT> specialinvoke r31 < init > <NEXT> $ r24 = r31 append \ `` create metasave file \ `` <NEXT> $ r25 = $ r24 append r2 <NEXT> $ r26 = $ r25 append \ `` in the log \ `` <NEXT> $ r27 = $ r26 append \ `` directory of namenode \ `` <NEXT> $ r28 = r9 get address <NEXT> $ r29 = $ r27 append $ r28 <NEXT> $ r30 = $ r29 to string <NEXT> $ r23 println $ r30 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label4 <NEXT> label return 0 <NEXT> if z0 == 0 goto label3 <NEXT> label r3 meta save r2 <NEXT> $ r11 = java lang system out <NEXT> r32 = new java lang string builder <NEXT> specialinvoke r32 < init > <NEXT> $ r12 = r32 append \ `` create metasave file \ `` <NEXT> $ r13 = $ r12 append r2 <NEXT> $ r14 = $ r13 append \ `` in the log \ `` <NEXT> $ r15 = $ r14 append \ `` directory of namenode \ `` <NEXT> $ r16 = r3 get uri <NEXT> $ r17 = $ r15 append $ r16 <NEXT> $ r18 = $ r17 to string <NEXT> $ r11 println $ r18 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop hdfs util canceler r0 <NEXT> r2 cancel reason = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r3 = org apache hadoop hdfs util diff r0 <NEXT> $ r2 = r3 create <NEXT> org apache hadoop hdfs util diff remove $ r2 i0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache hadoop hdfs util diff $ list type delete <NEXT> r7 = org apache hadoop hdfs util diff r0 <NEXT> $ r3 = r7 get list $ r2 <NEXT> $ r4 = org apache hadoop hdfs util diff $ list type create <NEXT> r8 = org apache hadoop hdfs util diff r0 <NEXT> $ r5 = r8 get list $ r4 <NEXT> $ r6 = org apache hadoop hdfs util diff apply2 previous r1 $ r3 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop hdfs util enum counter r0 <NEXT> r1 reset 0l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop hdfs util light weight hash set r0 <NEXT> $ i0 = r1 capacity <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org apache hadoop hdfs util reference count map r0 <NEXT> $ r3 = r7 reference map <NEXT> $ r4 = $ r3 get r1 <NEXT> r2 = org apache hadoop hdfs util reference count map $ reference counter $ r4 <NEXT> if r2 == null goto label1 <NEXT> $ i0 = r2 decrement and get ref count <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r8 = org apache hadoop hdfs util reference count map r0 <NEXT> $ r5 = r8 reference map <NEXT> $ r5 remove r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r6 = new com google common collect immutable list $ builder <NEXT> specialinvoke r6 < init > <NEXT> r7 = org apache hadoop hdfs util reference count map r0 <NEXT> $ r2 = r7 reference map <NEXT> $ r3 = $ r2 key set <NEXT> $ r4 = r6 add all $ r3 <NEXT> $ r5 = $ r4 build <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop hdfs util reference count map r0 <NEXT> $ r1 = r2 reference map <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r17 = org apache hadoop hdfs web web hdfs file system r0 <NEXT> $ r4 = r17 statistic <NEXT> $ r4 increment write ops 1 <NEXT> r3 = org apache hadoop hdfs web resource put op param $ op createsymlink <NEXT> r16 = new org apache hadoop hdfs web web hdfs file system $ fs path runner <NEXT> $ r6 = newarray org apache hadoop hdfs web resource param [ 2 ] <NEXT> r14 = new org apache hadoop hdfs web resource destination param <NEXT> r18 = org apache hadoop hdfs web web hdfs file system r0 <NEXT> $ r8 = r18 make qualify r1 <NEXT> $ r9 = $ r8 to uri <NEXT> $ r10 = $ r9 get path <NEXT> specialinvoke r14 < init > $ r10 <NEXT> $ r6 [ 0 ] = r14 <NEXT> r15 = new org apache hadoop hdfs web resource create parent param <NEXT> $ r12 = java lang boolean value of z0 <NEXT> specialinvoke r15 < init > $ r12 <NEXT> $ r6 [ 1 ] = r15 <NEXT> r19 = org apache hadoop hdfs web web hdfs file system r0 <NEXT> r20 = org apache hadoop hdfs web resource http op param $ op r3 <NEXT> r21 = org apache hadoop hdfs web resource param [ ] $ r6 <NEXT> specialinvoke r16 < init > r19 r20 r2 r21 <NEXT> r16 run <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r8 = new org apache hadoop fs path <NEXT> r9 = org apache hadoop mapred yarn output file r0 <NEXT> $ r3 = specialinvoke r9 get attempt output dir <NEXT> specialinvoke r8 < init > $ r3 \ `` file out\ `` <NEXT> r10 = org apache hadoop mapred yarn output file r0 <NEXT> $ r4 = r10 l dir alloc <NEXT> $ r5 = r8 to string <NEXT> r11 = org apache hadoop mapred yarn output file r0 <NEXT> $ r6 = r11 conf <NEXT> r12 = org apache hadoop conf configuration $ r6 <NEXT> $ r7 = $ r4 get local path for write $ r5 l0 r12 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache hadoop mapreduce v2 app m r app master $ job finish event handler <NEXT> r3 = org apache hadoop mapreduce v2 app m r app master r0 <NEXT> specialinvoke r2 < init > r3 null <NEXT> r4 = org apache hadoop yarn event event handler r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ r7 = r1 task state <NEXT> r2 = $ r7 to string <NEXT> r3 = r1 id <NEXT> r4 = r3 get task id <NEXT> r22 = org apache hadoop mapreduce v2 app speculate default speculator r0 <NEXT> $ r8 = r22 context <NEXT> $ r9 = r4 get job id <NEXT> r5 = $ r8 get job $ r9 <NEXT> if r5 ! = null goto label1 <NEXT> return <NEXT> if r5 ! = null goto label1 <NEXT> label r6 = r5 get task r4 <NEXT> if r6 ! = null goto label2 <NEXT> label r23 = org apache hadoop mapreduce v2 app speculate default speculator r0 <NEXT> $ r10 = r23 estimator <NEXT> $ r10 update attempt r1 l0 <NEXT> $ r11 = org apache hadoop mapreduce v2 api record task attempt state run <NEXT> $ r12 = $ r11 name <NEXT> $ z0 = r2 equal $ r12 <NEXT> if $ z0 == 0 goto label3 <NEXT> r24 = org apache hadoop mapreduce v2 app speculate default speculator r0 <NEXT> $ r20 = r24 run task <NEXT> $ r19 = java lang boolean true <NEXT> $ r20 put if absent r4 $ r19 <NEXT> goto label4 <NEXT> label return <NEXT> if $ z0 == 0 goto label3 <NEXT> label r25 = org apache hadoop mapreduce v2 app speculate default speculator r0 <NEXT> $ r14 = r25 run task <NEXT> $ r13 = java lang boolean true <NEXT> $ r14 remove r4 $ r13 <NEXT> $ r15 = org apache hadoop mapreduce v2 api record task attempt state start <NEXT> $ r16 = $ r15 name <NEXT> $ z2 = r2 equal $ r16 <NEXT> if $ z2 ! = 0 goto label4 <NEXT> r26 = org apache hadoop mapreduce v2 app speculate default speculator r0 <NEXT> $ r17 = r26 run task attempt statistic <NEXT> $ r17 remove r3 <END>
<BEG> r0 = @ this <NEXT> return class \ `` lorg apache hadoop mapreduce v2 app webapp single counter block \ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = org apache hadoop mapred local distribute cache manager r0 <NEXT> $ r3 = r18 local classpaths <NEXT> $ i0 = $ r3 size <NEXT> r2 = newarray java net url [ $ i0 ] <NEXT> i2 = 0 <NEXT> label r19 = org apache hadoop mapred local distribute cache manager r0 <NEXT> $ r4 = r19 local classpaths <NEXT> $ i1 = $ r4 size <NEXT> if i2 > = $ i1 goto label2 <NEXT> r16 = new java io file <NEXT> r20 = org apache hadoop mapred local distribute cache manager r0 <NEXT> $ r9 = r20 local classpaths <NEXT> $ r10 = $ r9 get i2 <NEXT> $ r11 = java lang string $ r10 <NEXT> specialinvoke r16 < init > $ r11 <NEXT> $ r12 = r16 to u r i <NEXT> $ r13 = $ r12 to u r l <NEXT> r2 [ i2 ] = $ r13 <NEXT> $ r15 = org apache hadoop mapred local distribute cache manager log <NEXT> $ r14 = r2 [ i2 ] <NEXT> $ r15 info $ r14 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label r17 = new org apache hadoop mapred local distribute cache manager $ 1 <NEXT> r21 = org apache hadoop mapred local distribute cache manager r0 <NEXT> specialinvoke r17 < init > r21 r2 r1 <NEXT> r22 = java security privilege action r17 <NEXT> $ r6 = java security access controller do privilege r22 <NEXT> $ r7 = java lang class loader $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop mapred cluster status r0 <NEXT> $ l0 = r1 tt expiry interval <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop mapred cluster status r0 <NEXT> $ i0 = r1 max_reduce_tasks <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache hadoop mapred job tracker $ state run <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r24 = new java lang string builder <NEXT> specialinvoke r24 < init > <NEXT> $ r7 = r24 append \ `` counter \ `` <NEXT> r27 = org apache hadoop mapred counter r0 <NEXT> $ i0 = r27 size <NEXT> $ r8 = $ r7 append $ i0 <NEXT> $ r9 = $ r8 to string <NEXT> r1 info $ r9 <NEXT> r28 = org apache hadoop mapred counter r0 <NEXT> r2 = r28 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r10 = r2 next <NEXT> r3 = org apache hadoop mapred counter $ group $ r10 <NEXT> r25 = new java lang string builder <NEXT> specialinvoke r25 < init > <NEXT> $ r12 = r25 append \ `` \ `` <NEXT> $ r13 = r3 get display name <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 to string <NEXT> r1 info $ r15 <NEXT> r4 = r3 iterator <NEXT> label $ z1 = r4 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r16 = r4 next <NEXT> r5 = org apache hadoop mapred counter $ counter $ r16 <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r18 = r26 append \ `` \ `` <NEXT> $ r19 = r5 get display name <NEXT> $ r20 = $ r18 append $ r19 <NEXT> $ r21 = $ r20 append \ `` =\ `` <NEXT> $ l1 = r5 get counter <NEXT> $ r22 = $ r21 append $ l1 <NEXT> $ r23 = $ r22 to string <NEXT> r1 info $ r23 <NEXT> goto label2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r3 = org apache hadoop mapred cumulative periodic stats r0 <NEXT> $ r1 = r3 state <NEXT> if $ r1 ! = null goto label1 <NEXT> return <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = org apache hadoop mapred cumulative periodic stats r0 <NEXT> $ r2 = r4 state <NEXT> $ d2 = $ r2 current accumulation <NEXT> r5 = org apache hadoop mapred cumulative periodic stats r0 <NEXT> $ i1 = r5 previous value <NEXT> $ i2 = i0 - $ i1 <NEXT> $ d1 = double $ i2 <NEXT> $ d3 = $ d2 + $ d1 <NEXT> $ r2 current accumulation = $ d3 <NEXT> r6 = org apache hadoop mapred cumulative periodic stats r0 <NEXT> r6 previous value = i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapred file split r0 <NEXT> $ r1 = r2 f <NEXT> $ l0 = $ r1 get length <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache hadoop mapred job client r0 <NEXT> r6 = org apache hadoop conf configuration r1 <NEXT> r5 set conf r6 <NEXT> r4 = new org apache hadoop mapreduce cluster <NEXT> r7 = org apache hadoop conf configuration r1 <NEXT> specialinvoke r4 < init > r7 <NEXT> r8 = org apache hadoop mapred job client r0 <NEXT> r8 cluster = r4 <NEXT> $ r3 = org apache hadoop security user group information get current user <NEXT> r9 = org apache hadoop mapred job client r0 <NEXT> r9 client ugi = $ r3 <NEXT> $ i0 = r1 get int \ `` yarn app mapreduce client job max-retries\ <NEXT> r10 = org apache hadoop mapred job client r0 <NEXT> r10 max retry = $ i0 <NEXT> $ l1 = r1 get long \ `` yarn app mapreduce client job retry-interval\ <NEXT> r11 = org apache hadoop mapred job client r0 <NEXT> r11 retry interval = $ l1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapred job client r0 <NEXT> $ r1 = r2 cluster <NEXT> $ r1 close <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapred job client r0 <NEXT> $ r1 = r2 task output filter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapred job conf r0 <NEXT> $ r1 = r2 get \ `` mapreduce job jar\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r11 = org apache hadoop mapred job conf r0 <NEXT> r1 = r11 get \ `` mapreduce job work dir\ `` <NEXT> if r1 == null goto label1 <NEXT> r9 = new org apache hadoop fs path <NEXT> specialinvoke r9 < init > r1 <NEXT> return r9 <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = org apache hadoop f file system get r0 <NEXT> r7 = $ r2 get work directory <NEXT> $ r3 = r7 to string <NEXT> r12 = org apache hadoop mapred job conf r0 <NEXT> r12 set \ `` mapreduce job work dir\ <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache hadoop mapred job conf r0 <NEXT> r1 set int \ `` mapreduce job maps\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapred job conf r0 <NEXT> $ r1 = r2 get \ `` session id\ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop mapred job conf r0 <NEXT> $ i0 = r1 get int \ `` mapreduce reduce failure maxpercent\ <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapred job conf r0 <NEXT> $ r1 = r2 get \ `` mapreduce job queuename\ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache hadoop mapred job i d for name r1 <NEXT> r3 = org apache hadoop mapred jobcontrol job r0 <NEXT> r3 set assign job i d $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapred job profile r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org apache hadoop mapred join composite input split r0 <NEXT> $ r2 = r9 split <NEXT> if null ! = $ r2 goto label1 <NEXT> r7 = new java io i o exception <NEXT> specialinvoke r7 < init > \ `` uninitialized input split\ `` <NEXT> throw r7 <NEXT> if null ! = $ r2 goto label1 <NEXT> label r10 = org apache hadoop mapred join composite input split r0 <NEXT> $ i1 = r10 fill <NEXT> r11 = org apache hadoop mapred join composite input split r0 <NEXT> $ r3 = r11 split <NEXT> $ i0 = lengthof $ r3 <NEXT> if $ i1 ! = $ i0 goto label2 <NEXT> r8 = new java io i o exception <NEXT> specialinvoke r8 < init > \ `` too many splits\ `` <NEXT> throw r8 <NEXT> if $ i1 ! = $ i0 goto label2 <NEXT> label r12 = org apache hadoop mapred join composite input split r0 <NEXT> $ r4 = r12 split <NEXT> r13 = org apache hadoop mapred join composite input split r0 <NEXT> $ i2 = r13 fill <NEXT> $ i3 = $ i2 + 1 <NEXT> r14 = org apache hadoop mapred join composite input split r0 <NEXT> r14 fill = $ i3 <NEXT> $ r4 [ $ i2 ] = r1 <NEXT> r15 = org apache hadoop mapred join composite input split r0 <NEXT> $ l4 = r15 totsize <NEXT> $ l5 = r1 get length <NEXT> $ l6 = $ l4 + $ l5 <NEXT> r16 = org apache hadoop mapred join composite input split r0 <NEXT> r16 totsize = $ l6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org apache hadoop mapred join composite input split r0 <NEXT> $ r1 = r4 split <NEXT> $ r2 = $ r1 [ i0 ] <NEXT> $ r3 = $ r2 get location <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r1 = r9 jc <NEXT> $ z0 = $ r1 have next <NEXT> if $ z0 == 0 goto label1 <NEXT> r10 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r7 = r10 jc <NEXT> $ r8 = $ r7 key <NEXT> return $ r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r2 = r11 q <NEXT> $ z1 = $ r2 be empty <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r12 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r3 = r12 q <NEXT> $ r4 = $ r3 peek <NEXT> $ r5 = org apache hadoop mapred join composable record reader $ r4 <NEXT> $ r6 = $ r5 key <NEXT> return $ r6 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r9 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r2 = r9 kid <NEXT> $ i0 = lengthof $ r2 <NEXT> r1 = newarray org apache hadoop io writable [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r10 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r4 = r10 kid <NEXT> $ r5 = $ r4 [ i2 ] <NEXT> $ r6 = $ r5 create value <NEXT> $ r7 = org apache hadoop io writable $ r6 <NEXT> r1 [ i2 ] = $ r7 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label r8 = new org apache hadoop mapred join tuple writable <NEXT> specialinvoke r8 < init > r1 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r3 = r6 kid <NEXT> if $ r3 == null goto label2 <NEXT> r7 = org apache hadoop mapred join composite record reader r0 <NEXT> r1 = r7 kid <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r2 = r1 [ i1 ] <NEXT> r8 = org apache hadoop mapred record reader r2 <NEXT> r8 close <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label r9 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r4 = r9 jc <NEXT> if $ r4 == null goto label3 <NEXT> r10 = org apache hadoop mapred join composite record reader r0 <NEXT> $ r5 = r10 jc <NEXT> $ r5 close <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop mapred join wrap record reader r0 <NEXT> $ z0 = r1 empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapred join wrap record reader r0 <NEXT> $ r1 = r2 create value <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org apache hadoop mapred lib aggregate value aggregator job create value aggregator job r0 <NEXT> org apache hadoop mapred job client run job r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache hadoop mapred lib chain r0 <NEXT> $ r1 = r5 mapper <NEXT> $ i0 = $ r1 size <NEXT> if $ i0 < = 0 goto label1 <NEXT> r6 = org apache hadoop mapred lib chain r0 <NEXT> $ r2 = r6 mapper <NEXT> $ r3 = $ r2 get 0 <NEXT> $ r4 = org apache hadoop mapred mapper $ r3 <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ r4 = null <END>
<BEG> r0 = @ this <NEXT> r6 = org apache hadoop mapred lib multiple output r0 <NEXT> $ r3 = r6 record writer <NEXT> $ r4 = $ r3 value <NEXT> r1 = $ r4 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r1 next <NEXT> r2 = org apache hadoop mapred record writer $ r5 <NEXT> r2 close null <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache hadoop mapred pipe output handler r0 <NEXT> $ r2 = r3 reporter <NEXT> $ r2 set status r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 get boolean \ `` mapreduce pipe isjavarecordreader\ <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache hadoop mapred queue manager r0 <NEXT> $ r1 = r3 leaf queue <NEXT> $ r2 = $ r1 key set <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new org apache hadoop util pure java crc32 <NEXT> specialinvoke r4 < init > <NEXT> r5 = org apache hadoop mapred spill record r0 <NEXT> r6 = java util zip checksum r4 <NEXT> r5 write to file r1 r2 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r2 = org apache hadoop mapred task r0 <NEXT> r2 encrypt spill key = r1 <NEXT> label return <END>
<BEG> r11 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> $ r5 = new java util array list <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = r11 get file system r0 <NEXT> r12 = $ r6 make qualified r11 <NEXT> $ r7 = r12 to uri <NEXT> r2 = $ r7 get scheme <NEXT> $ r8 = org apache hadoop f file system get all statistic <NEXT> r3 = $ r8 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r9 = r3 next <NEXT> r4 = org apache hadoop f file system $ statistic $ r9 <NEXT> $ r10 = r4 get scheme <NEXT> $ z1 = $ r10 equal r2 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 add r4 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java io file <NEXT> $ r2 = org apache hadoop mapred task log get user log dir <NEXT> $ r3 = r0 to string <NEXT> specialinvoke $ r1 < init > $ r2 $ r3 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = specialinvoke r0 get task i d <NEXT> r3 = org apache hadoop mapreduce task i d $ r1 <NEXT> $ r2 = org apache hadoop mapred task i d downgrade r3 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop mapred task status r0 <NEXT> r2 next record range = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0l <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop mapred task status r0 <NEXT> $ l0 = r1 start time <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache hadoop mapred task r0 <NEXT> $ r1 = r3 task status <NEXT> $ r2 = $ r1 get phase <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop mapred task status r0 <NEXT> $ l0 = r1 output size <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org apache hadoop crypto crypto codec get instance r0 <NEXT> $ z0 = org apache hadoop mapreduce crypto utils be encrypt spill enable r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = r1 get cipher suite <NEXT> $ i0 = $ r3 get algorithm block size <NEXT> r2 = newarray byte [ $ i0 ] <NEXT> r1 generate secure random r2 <NEXT> return r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org apache hadoop util string utils uri to string r0 <NEXT> r1 set \ `` mapreduce job cache files\ <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = r0 get string collection \ `` mapreduce job classpath archives\ `` <NEXT> r1 = java util array list $ r3 <NEXT> $ i0 = r1 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ i1 = r1 size <NEXT> r2 = newarray org apache hadoop fs path [ $ i1 ] <NEXT> i3 = 0 <NEXT> label $ i2 = r1 size <NEXT> if i3 > = $ i2 goto label3 <NEXT> $ r4 = new org apache hadoop fs path <NEXT> $ r5 = r1 get i3 <NEXT> $ r6 = java lang string $ r5 <NEXT> specialinvoke $ r4 < init > $ r6 <NEXT> r2 [ i3 ] = $ r4 <NEXT> i3 = i3 + 1 <NEXT> goto label2 <NEXT> if i3 > = $ i2 goto label3 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache hadoop mapreduce job $ job state run <NEXT> r4 = org apache hadoop mapreduce job r0 <NEXT> specialinvoke r4 ensure state $ r1 <NEXT> r5 = org apache hadoop mapreduce job r0 <NEXT> $ r2 = r5 status <NEXT> $ r3 = $ r2 get job file <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache hadoop mapreduce job $ job state run <NEXT> r5 = org apache hadoop mapreduce job r0 <NEXT> specialinvoke r5 ensure state $ r1 <NEXT> r6 = org apache hadoop mapreduce job r0 <NEXT> r6 update status <NEXT> r7 = org apache hadoop mapreduce job r0 <NEXT> $ r2 = r7 status <NEXT> $ r3 = $ r2 get state <NEXT> $ r4 = org apache hadoop mapreduce job status $ state succeed <NEXT> if $ r3 ! = $ r4 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r3 ! = $ r4 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop mapreduce job r0 <NEXT> r2 kill task r1 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r2 = org apache hadoop mapreduce job $ job state run <NEXT> r11 = org apache hadoop mapreduce job r0 <NEXT> specialinvoke r11 ensure state $ r2 <NEXT> label r12 = org apache hadoop mapreduce job r0 <NEXT> $ r4 = r12 ugi <NEXT> r9 = new org apache hadoop mapreduce job $ 7 <NEXT> r13 = org apache hadoop mapreduce job r0 <NEXT> specialinvoke r9 < init > r13 <NEXT> r14 = java security privilege exception action r9 <NEXT> $ r5 = $ r4 do a r14 <NEXT> $ r6 = org apache hadoop mapreduce counter $ r5 <NEXT> label return $ r6 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org apache hadoop mapreduce job $ job state define <NEXT> r3 = org apache hadoop mapreduce job r0 <NEXT> specialinvoke r3 ensure state $ r1 <NEXT> r4 = org apache hadoop mapreduce job r0 <NEXT> $ r2 = r4 conf <NEXT> $ r2 set num reduce task i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 get int \ `` mapreduce client completion pollinterval\ <NEXT> if i0 > = 1 goto label1 <NEXT> $ r1 = org apache hadoop mapreduce job log <NEXT> $ r1 warn \ `` mapreduce client completion pollinterval have be set to an invalid value replace with 5000\ `` <NEXT> i0 = 5000 <NEXT> label return i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapreduce jobhistory job finish event r0 <NEXT> $ r1 = r2 job id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache hadoop mapreduce jobhistory job inited event r0 <NEXT> $ r1 = r4 datum <NEXT> $ r2 = $ r1 job status <NEXT> $ r3 = $ r2 to string <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapreduce jobhistory job inited event r0 <NEXT> $ r1 = r2 datum <NEXT> $ z0 = $ r1 uberized <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r6 = org apache hadoop mapreduce jobhistory job submit event r0 <NEXT> $ r1 = r6 datum <NEXT> $ r2 = $ r1 workflow id <NEXT> if $ r2 == null goto label1 <NEXT> r7 = org apache hadoop mapreduce jobhistory job submit event r0 <NEXT> $ r3 = r7 datum <NEXT> $ r4 = $ r3 workflow id <NEXT> $ r5 = $ r4 to string <NEXT> return $ r5 <NEXT> if $ r2 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop mapreduce jobhistory reduce attempt finish event r0 <NEXT> $ l0 = r1 shuffle finish time <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop mapreduce job status r0 <NEXT> r2 history file = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org apache hadoop fs path <NEXT> specialinvoke $ r1 < init > r0 \ `` job jar\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org apache hadoop fs path <NEXT> specialinvoke $ r1 < init > r0 \ `` files\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache hadoop mapreduce lib input combine file input format r0 <NEXT> r1 min split size node = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 1l <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache hadoop mapreduce lib join tuple writable r0 <NEXT> $ r1 = r2 write <NEXT> $ z0 = $ r1 get i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r10 = org apache hadoop mapreduce lib output file output format r0 <NEXT> $ r4 = r10 get output committer r1 <NEXT> r3 = org apache hadoop mapreduce lib output file output committer $ r4 <NEXT> r9 = new org apache hadoop fs path <NEXT> $ r6 = r3 get work path <NEXT> r11 = org apache hadoop mapreduce job context r1 <NEXT> $ r7 = org apache hadoop mapreduce lib output file output format get output name r11 <NEXT> $ r8 = org apache hadoop mapreduce lib output file output format get unique file r1 $ r7 r2 <NEXT> specialinvoke r9 < init > $ r6 $ r8 <NEXT> return r9 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get configuration <NEXT> $ r2 = $ r1 get \ `` mapreduce output basename\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i1 < i0 goto label1 <NEXT> r4 = new org apache hadoop mapreduce lib partition key field helper $ key description <NEXT> specialinvoke r4 < init > <NEXT> r4 begin field idx = i0 <NEXT> r4 end field idx = i1 <NEXT> r5 = org apache hadoop mapreduce lib partition key field helper r0 <NEXT> r5 key spec see = 1 <NEXT> r6 = org apache hadoop mapreduce lib partition key field helper r0 <NEXT> $ r3 = r6 all key spec <NEXT> $ r3 add r4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r0 unset \ `` mapreduce job credential binary\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapreduce task job context impl r0 <NEXT> $ r1 = r2 job id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache hadoop mapreduce task job context impl r0 <NEXT> $ r1 = r3 conf <NEXT> r4 = org apache hadoop conf configuration $ r1 <NEXT> $ r2 = org apache hadoop mapreduce filecache distribute cache get cache archive r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache hadoop mapreduce task reduce map host r0 <NEXT> $ r1 = r5 map <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = org apache hadoop mapreduce task reduce map host $ state idle <NEXT> r6 = org apache hadoop mapreduce task reduce map host r0 <NEXT> r6 state = $ r4 <NEXT> goto label2 <NEXT> label r8 = org apache hadoop mapreduce task reduce map host r0 <NEXT> $ r3 = r8 state <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = org apache hadoop mapreduce task reduce map host $ state pending <NEXT> r7 = org apache hadoop mapreduce task reduce map host r0 <NEXT> r7 state = $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapreduce task task attempt context impl r0 <NEXT> $ r1 = r2 task id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapreduce task i d r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache hadoop mapreduce task report r0 <NEXT> $ f0 = r1 progress <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop mapreduce task report r0 <NEXT> $ r1 = r2 counter <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> org apache hadoop mapreduce util process tree terminate process r0 <NEXT> org apache hadoop mapreduce util process tree sig kill r0 0 l0 z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r12 = null <NEXT> label $ r1 = newarray java lang string [ 3 ] <NEXT> $ r1 [ 0 ] = \ `` kill\ `` <NEXT> $ r1 [ 1 ] = \ `` -0\ `` <NEXT> $ r1 [ 2 ] = r0 <NEXT> $ r2 = new org apache hadoop util shell $ shell command executor <NEXT> specialinvoke $ r2 < init > $ r1 <NEXT> r12 = $ r2 <NEXT> $ r2 execute <NEXT> label goto label5 <NEXT> label $ i0 = $ r2 get exit code <NEXT> if $ i0 ! = 0 goto label6 <NEXT> $ z0 = 1 <NEXT> goto label7 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label6 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop yarn api record timeline timeline domain r0 <NEXT> $ r1 = r2 reader <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache hadoop yarn api record timeline timeline domain r0 <NEXT> r2 domains = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache hadoop yarn server api container context r0 <NEXT> $ r1 = r2 user <NEXT> return $ r1 <END>
<BEG> r2 = new org apache hadoop yarn client api impl a h s client impl <NEXT> specialinvoke r2 < init > <NEXT> r3 = org apache hadoop yarn client api a h s client r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache hadoop yarn client api n m token cache nm_token_cache <NEXT> $ r2 set token r0 r1 <NEXT> return <END>
<BEG> r2 = new org apache hadoop yarn client api impl timeline client impl <NEXT> specialinvoke r2 < init > <NEXT> r3 = org apache hadoop yarn client api timeline client r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache hadoop yarn client client r m proxy get token service r0 \ `` yarn resourcemanager address\ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = r0 get scheme <NEXT> if $ r2 ! = null goto label1 <NEXT> $ r14 = \ `` \ `` <NEXT> goto label2 <NEXT> label r1 = $ r14 <NEXT> r15 = \ `` \ `` <NEXT> $ r3 = r0 get host <NEXT> if $ r3 == null goto label4 <NEXT> r15 = r0 get host <NEXT> $ r4 = r0 get user info <NEXT> if $ r4 == null goto label3 <NEXT> $ r9 = new java lang string builder <NEXT> specialinvoke $ r9 < init > <NEXT> $ r10 = r0 get user info <NEXT> $ r11 = $ r9 append $ r10 <NEXT> $ r12 = $ r11 append \ `` @ \ `` <NEXT> $ r13 = $ r12 append r15 <NEXT> r15 = $ r13 to string <NEXT> label $ i0 = r0 get port <NEXT> if $ i0 < = 0 goto label4 <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append r15 <NEXT> $ r7 = $ r6 append \ `` \ `` <NEXT> $ i1 = r0 get port <NEXT> $ r8 = $ r7 append $ i1 <NEXT> r15 = $ r8 to string <NEXT> label $ r16 = new org apache hadoop fs path <NEXT> $ r17 = new java net uri <NEXT> $ r18 = r0 get file <NEXT> specialinvoke $ r17 < init > r1 r15 $ r18 null null <NEXT> $ r19 = $ r17 normalize <NEXT> specialinvoke $ r16 < init > $ r19 <NEXT> return $ r16 <NEXT> if $ r2 ! = null goto label1 <NEXT> label $ r14 = r0 get scheme <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache hadoop yarn util string helper csv_joiner <NEXT> $ r2 = $ r1 join r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache hadoop yarn util string helper _splitter <NEXT> $ r2 = $ r1 split r0 <NEXT> return $ r2 <END>
<BEG> $ r0 = org apache hadoop yarn util yarn version info yarn_version_info <NEXT> $ r1 = $ r0 _get date <NEXT> return $ r1 <END>
<BEG> $ r0 = org apache hadoop yarn util yarn version info yarn_version_info <NEXT> $ r1 = $ r0 _get user <NEXT> return $ r1 <END>
<BEG> $ r0 = org apache hadoop yarn util yarn version info yarn_version_info <NEXT> $ r1 = $ r0 _get url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = org hdr histogram abstract histogram r0 <NEXT> r1 clear count <NEXT> r2 = org hdr histogram abstract histogram r0 <NEXT> specialinvoke r2 reset max value 0l <NEXT> r3 = org hdr histogram abstract histogram r0 <NEXT> specialinvoke r3 reset min non zero value 9223372036854775807l <NEXT> r4 = org hdr histogram abstract histogram r0 <NEXT> r4 set normalize index offset 0 <NEXT> r5 = org hdr histogram abstract histogram r0 <NEXT> r5 start time stamp msec = 9223372036854775807l <NEXT> r6 = org hdr histogram abstract histogram r0 <NEXT> r6 end time stamp msec = 0l <NEXT> r7 = org hdr histogram abstract histogram r0 <NEXT> r7 tag = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org hdr histogram abstract histogram r0 <NEXT> $ d0 = r1 integer to double value conversion ratio <NEXT> r2 = org hdr histogram abstract histogram r0 <NEXT> r2 shift value right i0 $ d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org hdr histogram double histogram r0 <NEXT> $ l0 = r1 configure high to lowest value ratio <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org hdr histogram double recorder r0 <NEXT> $ r1 = r2 get interval histogram null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org hdr histogram histogram log reader r0 <NEXT> $ d0 = r1 start time sec <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r2 = org hdr histogram histogram log reader r0 <NEXT> $ r1 = specialinvoke r2 next interval histogram d0 d1 1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hdr histogram histogram log writer r0 <NEXT> $ r1 = r2 log <NEXT> $ r1 println \ `` \\\ `` start timestamp\\\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org hdr histogram packedarray abstract pack long array r0 <NEXT> $ l0 = r1 end time stamp msec <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org hdr histogram packedarray iteration value r0 <NEXT> $ i0 = r1 index <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r7 = org hdr histogram single writer double recorder r0 <NEXT> $ r2 = r7 record phaser <NEXT> l0 = $ r2 writer critical section enter <NEXT> label r8 = org hdr histogram single writer double recorder r0 <NEXT> $ r3 = r8 active histogram <NEXT> $ r3 record value with expect interval d0 d1 <NEXT> label r9 = org hdr histogram single writer double recorder r0 <NEXT> $ r4 = r9 record phaser <NEXT> $ r4 writer critical section exit l0 <NEXT> goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org hibernate boot metadata source r0 <NEXT> $ r2 = r5 xml binding <NEXT> r6 = org hibernate boot metadata source r0 <NEXT> $ r3 = r6 get xml mapping binder access <NEXT> $ r4 = $ r3 bind r1 <NEXT> $ r2 add $ r4 <NEXT> r7 = org hibernate boot metadata source r0 <NEXT> return r7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = jakarta persistence inheritance type value of r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb map spi jaxb basic r0 <NEXT> $ r1 = r2 temporal <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb basic r0 <NEXT> r2 convert = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb cascade type r0 <NEXT> r2 cascade remove = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb cascade type r0 <NEXT> r2 cascade detach = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org hibernate boot jaxb map spi jaxb collection table r0 <NEXT> $ r1 = r5 unique constraint <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r6 = org hibernate boot jaxb map spi jaxb collection table r0 <NEXT> r6 unique constraint = r4 <NEXT> label r7 = org hibernate boot jaxb map spi jaxb collection table r0 <NEXT> $ r2 = r7 unique constraint <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb map spi jaxb column r0 <NEXT> $ r1 = r2 updatable <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb column r0 <NEXT> r2 column definition = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb map spi jaxb convert r0 <NEXT> $ r1 = r2 converter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb convert r0 <NEXT> r2 converter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb element collection r0 <NEXT> r2 map key temporal = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org hibernate boot jaxb map spi jaxb element collection r0 <NEXT> $ r1 = r5 map key attribute override <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r6 = org hibernate boot jaxb map spi jaxb element collection r0 <NEXT> r6 map key attribute override = r4 <NEXT> label r7 = org hibernate boot jaxb map spi jaxb element collection r0 <NEXT> $ r2 = r7 map key attribute override <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb element collection r0 <NEXT> r2 collection table = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb map spi jaxb entity r0 <NEXT> $ r1 = r2 id class <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb entity r0 <NEXT> r2 id class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb entity r0 <NEXT> r2 entity listener = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb generate value r0 <NEXT> r2 strategy = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate boot jaxb map spi jaxb index r0 <NEXT> $ r1 = r2 column list <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb name stored procedure query r0 <NEXT> r2 procedure name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb post load r0 <NEXT> r2 method name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb sequence generator r0 <NEXT> r2 allocation size = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate boot jaxb map spi jaxb table generator r0 <NEXT> r2 pk column name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> r6 = org hibernate boot model name camel case to underscore name strategy r0 <NEXT> $ z1 = r6 be case insensitive r1 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r3 = java util locale root <NEXT> r4 = r4 to low case $ r3 <NEXT> label r5 = new org hibernate boot model name identifier <NEXT> specialinvoke r5 < init > r4 z0 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get sqm function registry <NEXT> $ r2 = $ r1 name descriptor builder \ `` bit_and\ `` <NEXT> $ r3 = $ r2 set exact argument count 2 <NEXT> $ r3 register <NEXT> $ r5 = r0 get sqm function registry <NEXT> $ r5 register alternate key \ `` bitand\ <NEXT> $ r6 = r0 get sqm function registry <NEXT> $ r7 = $ r6 name descriptor builder \ `` bit_or\ `` <NEXT> $ r8 = $ r7 set exact argument count 2 <NEXT> $ r8 register <NEXT> $ r10 = r0 get sqm function registry <NEXT> $ r10 register alternate key \ `` bitor\ <NEXT> $ r11 = r0 get sqm function registry <NEXT> $ r12 = $ r11 name descriptor builder \ `` bit_xor\ `` <NEXT> $ r13 = $ r12 set exact argument count 2 <NEXT> $ r13 register <NEXT> $ r15 = r0 get sqm function registry <NEXT> $ r15 register alternate key \ `` bitxor\ <NEXT> $ r16 = r0 get sqm function registry <NEXT> $ r17 = $ r16 name descriptor builder \ `` bit_not\ `` <NEXT> $ r18 = $ r17 set exact argument count 1 <NEXT> $ r18 register <NEXT> $ r20 = r0 get sqm function registry <NEXT> $ r20 register alternate key \ `` bitnot\ <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get sqm function registry <NEXT> r9 = new org hibernate dialect function s q l server every any emulation <NEXT> $ r3 = r0 get type configuration <NEXT> specialinvoke r9 < init > $ r3 1 <NEXT> r11 = org hibernate query sqm function sqm function descriptor r9 <NEXT> $ r1 register \ `` every\ <NEXT> $ r5 = r0 get sqm function registry <NEXT> r10 = new org hibernate dialect function s q l server every any emulation <NEXT> $ r7 = r0 get type configuration <NEXT> specialinvoke r10 < init > $ r7 0 <NEXT> r12 = org hibernate query sqm function sqm function descriptor r10 <NEXT> $ r5 register \ `` any\ <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get sqm function registry <NEXT> $ r2 = r0 get type configuration <NEXT> $ r3 = $ r2 get basic type registry <NEXT> $ r4 = org hibernate type standard basic type string <NEXT> $ r5 = $ r3 resolve $ r4 <NEXT> $ r6 = $ r1 register ternary quaternary pattern \ `` overlay\ <NEXT> $ r6 set argument list signature \ `` string place replacement from start [ for length ] \ `` <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get sqm function registry <NEXT> $ r2 = $ r1 name descriptor builder \ `` format\ <NEXT> $ r3 = r0 get type configuration <NEXT> $ r4 = $ r3 get basic type registry <NEXT> $ r5 = org hibernate type standard basic type string <NEXT> $ r6 = $ r4 resolve $ r5 <NEXT> $ r7 = $ r2 set invariant type $ r6 <NEXT> $ r8 = $ r7 set exact argument count 2 <NEXT> $ r9 = $ r8 set argument list signature \ `` datetime a pattern \ `` <NEXT> $ r9 register <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org hibernate dialect pagination abstract limit handler for_update_pattern <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label5 <NEXT> r2 = r0 [ i1 ] <NEXT> if r2 == null goto label4 <NEXT> $ z0 = r2 instanceof java lang string <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r3 = java lang string r2 <NEXT> $ z1 = org hibernate internal util string helper be not empty $ r3 <NEXT> if $ z1 == 0 goto label4 <NEXT> return r2 <NEXT> if $ z1 == 0 goto label4 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r2 <NEXT> label if i1 > = i0 goto label5 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org hibernate jpa event internal callback factory jpa call back enable r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = new org hibernate jpa event internal callback registry impl <NEXT> specialinvoke r3 < init > <NEXT> r5 = org hibernate jpa event internal callback registry implementor r3 <NEXT> return r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = new org hibernate jpa event internal empty callback registry impl <NEXT> specialinvoke r4 < init > <NEXT> r6 = org hibernate jpa event internal callback registry implementor r4 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org hibernate metamodel internal inflight runtime metamodel r0 <NEXT> $ r2 = r5 entity persister map <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = org hibernate persister entity entity persister $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = org hibernate query sqm function sqm function registry r0 <NEXT> $ r4 = r9 function map <NEXT> $ r5 = $ r4 put r1 r2 <NEXT> r3 = org hibernate query sqm function sqm function descriptor $ r5 <NEXT> $ r6 = org hibernate query sqm function sqm function registry log <NEXT> $ r6 debugf \ `` registered sqm function template [ % s ] under % s prior registration be % s\ <NEXT> r10 = org hibernate query sqm function sqm function registry r0 <NEXT> $ r7 = r10 alternate key map <NEXT> $ r7 remove r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new org hibernate query sqm produce function pattern function descriptor builder <NEXT> $ r4 = org hibernate query sqm function function kind aggregate <NEXT> r6 = org hibernate query sqm function sqm function registry r0 <NEXT> specialinvoke r5 < init > r6 r1 $ r4 r2 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org hibernate query sqm function sqm function registry r0 <NEXT> $ r3 = r6 name descriptor builder r1 r1 <NEXT> $ r4 = $ r3 set invariant type r2 <NEXT> $ r5 = $ r4 register <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org hibernate query sqm function sqm function registry r0 <NEXT> $ r2 = r3 name descriptor builder r1 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new org hibernate query sqm produce function name function descriptor builder <NEXT> $ r4 = org hibernate query sqm function function kind normal <NEXT> r6 = org hibernate query sqm function sqm function registry r0 <NEXT> specialinvoke r5 < init > r6 r1 $ r4 r2 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r3 = org hibernate query sqm internal domain parameter xref r0 <NEXT> $ r1 = r3 sqm params by query param <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org hibernate query sqm internal domain parameter xref r0 <NEXT> $ r2 = r4 sqm params by query param <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org hibernate jpamodelgen xml jaxb foreign key r0 <NEXT> $ r1 = r2 disable foreign key <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org hibernate jpamodelgen xml jaxb foreign key r0 <NEXT> r2 disable foreign key = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> return 1 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r3 = r1 to string <NEXT> $ r4 = $ r3 trim <NEXT> $ i0 = $ r4 length <NEXT> if $ i0 < = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> label r6 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> $ i0 = r6 current position <NEXT> r7 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> $ r1 = r7 token list <NEXT> $ i1 = $ r1 size <NEXT> if $ i0 > = $ i1 goto label2 <NEXT> r8 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> $ r2 = r8 token list <NEXT> r9 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> $ i2 = r9 current position <NEXT> $ r3 = $ r2 get $ i2 <NEXT> $ r4 = org hibernate validator internal engine messageinterpolation parser token $ r3 <NEXT> r10 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> r10 current token = $ r4 <NEXT> r11 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> $ i3 = r11 current position <NEXT> $ i4 = $ i3 + 1 <NEXT> r12 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> r12 current position = $ i4 <NEXT> r13 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> $ r5 = r13 current token <NEXT> $ z0 = $ r5 be parameter <NEXT> if $ z0 == 0 goto label1 <NEXT> r14 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> r14 current token available = 1 <NEXT> return 1 <NEXT> if $ i0 > = $ i1 goto label2 <NEXT> label r15 = org hibernate validator internal engine messageinterpolation parser token iterator r0 <NEXT> r15 all interpolation term process = 1 <NEXT> return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> org hibernate validator internal util contract assert not null r0 <NEXT> r1 = org hibernate validator internal util collection helper new array list <NEXT> $ r4 = newarray org hibernate validator internal util classhierarchy filter [ 0 ] <NEXT> $ r5 = org hibernate validator internal util classhierarchy class hierarchy helper get hierarchy r0 $ r4 <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r2 next <NEXT> r3 = java lang class $ r6 <NEXT> $ r7 = org hibernate validator internal util privilegedactions get method action r3 <NEXT> r10 = java security privilege action $ r7 <NEXT> $ r8 = org hibernate validator cdi internal inherited method helper run r10 <NEXT> $ r9 = java lang object [ ] $ r8 <NEXT> java util collection add all r1 $ r9 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org hibernate validator cdi internal validation provider helper r0 <NEXT> $ z0 = r1 be hibernate validator <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com boundary high_scale_lib non block hash set long r0 <NEXT> $ r2 = r6 _map <NEXT> $ l0 = r1 long value <NEXT> $ r3 = com boundary high_scale_lib non block hash set long v <NEXT> $ r4 = $ r2 put if absent $ l0 $ r3 <NEXT> $ r5 = com boundary high_scale_lib non block hash set long v <NEXT> if $ r4 == $ r5 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r4 == $ r5 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com boundary high_scale_lib non block hash set long r0 <NEXT> $ r1 = r2 _map <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org cliffc high_scale_lib abstract entry r0 <NEXT> $ r1 = r5 _key <NEXT> if $ r1 ! = null goto label1 <NEXT> $ i2 = 0 <NEXT> goto label2 <NEXT> label r7 = org cliffc high_scale_lib abstract entry r0 <NEXT> $ r3 = r7 _val <NEXT> if $ r3 ! = null goto label3 <NEXT> $ i3 = 0 <NEXT> goto label4 <NEXT> label $ i4 = $ i2 ^ $ i3 <NEXT> return $ i4 <NEXT> if $ r3 ! = null goto label3 <NEXT> label r8 = org cliffc high_scale_lib abstract entry r0 <NEXT> $ r4 = r8 _val <NEXT> $ i3 = $ r4 hash code <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = org cliffc high_scale_lib abstract entry r0 <NEXT> $ r2 = r6 _key <NEXT> $ i2 = $ r2 hash code <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof java lang long <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = java lang long r1 <NEXT> $ l0 = $ r2 long value <NEXT> r3 = org cliffc high_scale_lib non block hash map long r0 <NEXT> $ z1 = r3 contain key $ l0 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com zaxxer hikari hikari config r0 <NEXT> $ r1 = r2 metric registry <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com zaxxer hikari util queue sequence synchronizer r0 <NEXT> $ r1 = r2 sequence <NEXT> $ l0 = $ r1 get <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = com zaxxer hikari hikari config r0 <NEXT> $ z0 = r1 be isolate internal query <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> i1 = @ parameter3 <NEXT> l8 = 0l <NEXT> i9 = i0 <NEXT> i2 = i0 + i1 <NEXT> label if i9 > = i2 goto label2 <NEXT> $ l4 = r0 [ i9 ] <NEXT> $ l3 = r1 [ i9 ] <NEXT> $ l5 = $ l4 & $ l3 <NEXT> $ i6 = java lang long bit count $ l5 <NEXT> $ l7 = long $ i6 <NEXT> l8 = l8 + $ l7 <NEXT> i9 = i9 + 1 <NEXT> goto label1 <NEXT> label if i9 > = i2 goto label2 <NEXT> label return l8 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> b1 = @ parameter1 <NEXT> r3 = com carrotsearch hppc byte stack r0 <NEXT> r3 ensure buffer space 2 <NEXT> r4 = com carrotsearch hppc byte stack r0 <NEXT> $ r1 = r4 buffer <NEXT> r5 = com carrotsearch hppc byte stack r0 <NEXT> $ i2 = r5 element count <NEXT> $ i3 = $ i2 + 1 <NEXT> r6 = com carrotsearch hppc byte stack r0 <NEXT> r6 element count = $ i3 <NEXT> $ r1 [ $ i2 ] = b0 <NEXT> r7 = com carrotsearch hppc byte stack r0 <NEXT> $ r2 = r7 buffer <NEXT> r8 = com carrotsearch hppc byte stack r0 <NEXT> $ i4 = r8 element count <NEXT> $ i5 = $ i4 + 1 <NEXT> r9 = com carrotsearch hppc byte stack r0 <NEXT> r9 element count = $ i5 <NEXT> $ r2 [ $ i4 ] = b1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> b7 = @ parameter1 <NEXT> b1 = @ parameter2 <NEXT> $ z0 = com carrotsearch hppc char byte hash map $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r3 = com carrotsearch hppc char byte hash map r0 <NEXT> $ i6 = r3 assign <NEXT> r4 = com carrotsearch hppc char byte hash map r0 <NEXT> $ i4 = r4 mask <NEXT> $ i5 = $ i4 + 1 <NEXT> if $ i6 < $ i5 goto label1 <NEXT> r2 = new java lang assertion error <NEXT> specialinvoke r2 < init > <NEXT> throw r2 <NEXT> if $ i6 < $ i5 goto label1 <NEXT> label r5 = com carrotsearch hppc char byte hash map r0 <NEXT> $ z1 = r5 contain key c0 <NEXT> if $ z1 == 0 goto label2 <NEXT> r6 = com carrotsearch hppc char byte hash map r0 <NEXT> b8 = r6 get c0 <NEXT> $ i3 = b8 + b1 <NEXT> b7 = byte $ i3 <NEXT> label r7 = com carrotsearch hppc char byte hash map r0 <NEXT> r7 put c0 b7 <NEXT> return b7 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> c1 = @ parameter1 <NEXT> r3 = com carrotsearch hppc char stack r0 <NEXT> r3 ensure buffer space 2 <NEXT> r4 = com carrotsearch hppc char stack r0 <NEXT> $ r1 = r4 buffer <NEXT> r5 = com carrotsearch hppc char stack r0 <NEXT> $ i2 = r5 element count <NEXT> $ i3 = $ i2 + 1 <NEXT> r6 = com carrotsearch hppc char stack r0 <NEXT> r6 element count = $ i3 <NEXT> $ r1 [ $ i2 ] = c0 <NEXT> r7 = com carrotsearch hppc char stack r0 <NEXT> $ r2 = r7 buffer <NEXT> r8 = com carrotsearch hppc char stack r0 <NEXT> $ i4 = r8 element count <NEXT> $ i5 = $ i4 + 1 <NEXT> r9 = com carrotsearch hppc char stack r0 <NEXT> r9 element count = $ i5 <NEXT> $ r2 [ $ i4 ] = c1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> c1 = @ parameter1 <NEXT> c2 = @ parameter2 <NEXT> c3 = @ parameter3 <NEXT> r5 = com carrotsearch hppc char stack r0 <NEXT> r5 ensure buffer space 4 <NEXT> r6 = com carrotsearch hppc char stack r0 <NEXT> $ r1 = r6 buffer <NEXT> r7 = com carrotsearch hppc char stack r0 <NEXT> $ i4 = r7 element count <NEXT> $ i5 = $ i4 + 1 <NEXT> r8 = com carrotsearch hppc char stack r0 <NEXT> r8 element count = $ i5 <NEXT> $ r1 [ $ i4 ] = c0 <NEXT> r9 = com carrotsearch hppc char stack r0 <NEXT> $ r2 = r9 buffer <NEXT> r10 = com carrotsearch hppc char stack r0 <NEXT> $ i6 = r10 element count <NEXT> $ i7 = $ i6 + 1 <NEXT> r11 = com carrotsearch hppc char stack r0 <NEXT> r11 element count = $ i7 <NEXT> $ r2 [ $ i6 ] = c1 <NEXT> r12 = com carrotsearch hppc char stack r0 <NEXT> $ r3 = r12 buffer <NEXT> r13 = com carrotsearch hppc char stack r0 <NEXT> $ i8 = r13 element count <NEXT> $ i9 = $ i8 + 1 <NEXT> r14 = com carrotsearch hppc char stack r0 <NEXT> r14 element count = $ i9 <NEXT> $ r3 [ $ i8 ] = c2 <NEXT> r15 = com carrotsearch hppc char stack r0 <NEXT> $ r4 = r15 buffer <NEXT> r16 = com carrotsearch hppc char stack r0 <NEXT> $ i10 = r16 element count <NEXT> $ i11 = $ i10 + 1 <NEXT> r17 = com carrotsearch hppc char stack r0 <NEXT> r17 element count = $ i11 <NEXT> $ r4 [ $ i10 ] = c3 <NEXT> return <END>
<BEG> d0 = @ parameter0 <NEXT> com carrotsearch hppc hash container check load factor d0 0 0 1 0 <NEXT> $ i0 = com carrotsearch hppc hash container expand at count 1073741824 d0 <NEXT> $ i1 = $ i0 - 1 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = nu validator htmlparser dom html document builder r0 <NEXT> r2 entity resolver = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = nu validator htmlparser impl attribute name r0 <NEXT> $ i0 = r1 flag <NEXT> $ i1 = $ i0 & 16 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> $ r2 = new java lang string <NEXT> specialinvoke $ r2 < init > r0 0 i0 <NEXT> $ r3 = $ r2 intern <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = nu validator htmlparser impl state snapshot r0 <NEXT> $ z0 = r1 need to drop l f <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = nu validator htmlparser io encode r0 <NEXT> $ r1 = r2 actual html encode <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache htrace trace start span r0 r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r2 = r13 append \ `` [ request date=\ `` <NEXT> r14 = org apache http client cache http cache entry r0 <NEXT> $ r3 = r14 request date <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` response date=\ `` <NEXT> r15 = org apache http client cache http cache entry r0 <NEXT> $ r6 = r15 response date <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` status line=\ `` <NEXT> r16 = org apache http client cache http cache entry r0 <NEXT> $ r9 = r16 status line <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 append \ `` ] \ `` <NEXT> $ r12 = $ r11 to string <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http client cache input limit r0 <NEXT> r1 reach = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http impl client cache cache config r0 <NEXT> $ i0 = r1 max cache entry <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache http impl client cache cache config r0 <NEXT> $ z0 = r1 be share cache <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache http impl client cache cache config r0 <NEXT> r1 asynchronous worker idle lifetime sec = i0 <NEXT> return <END>
<BEG> $ r0 = com netflix hystrix collapser request collapser factory global scoped collapsers <NEXT> $ r0 clear <NEXT> $ r1 = com netflix hystrix collapser request collapser factory request scoped collapsers <NEXT> $ r1 clear <NEXT> com netflix hystrix util hystrix timer reset <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = com netflix hystrix hystrix collapser r0 <NEXT> $ r1 = r5 collapser factory <NEXT> $ r2 = $ r1 get scope <NEXT> $ r3 = $ r2 name <NEXT> $ r4 = com netflix hystrix hystrix collapser $ scope value of $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = com netflix hystrix hystrix counter concurrent thread execute <NEXT> $ i0 = $ r0 get <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = com netflix hystrix hystrix thread pool metric r0 <NEXT> $ r2 = r3 cumulative counter stream <NEXT> $ r1 = com netflix hystrix hystrix event type $ thread pool reject <NEXT> $ l0 = $ r2 get late count $ r1 <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = com netflix hystrix hystrix thread pool metric r0 <NEXT> $ r1 = r2 roll thread pool max concurrency stream <NEXT> $ l0 = $ r1 get late roll max <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com netflix hystrix strategy concurrency hystrix request context get context for current thread <NEXT> $ r4 = $ r2 state <NEXT> r6 = new com netflix hystrix strategy concurrency hystrix request variable default $ lazy initializer <NEXT> r7 = com netflix hystrix strategy concurrency hystrix request variable default r0 <NEXT> specialinvoke r6 < init > r7 r1 null <NEXT> $ r4 put r0 r6 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new com netflix hystrix strategy hystrix plugins <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = com netflix hystrix strategy hystrix plugins get instance <NEXT> $ r1 = $ r0 notifier <NEXT> $ r1 set null <NEXT> $ r2 = com netflix hystrix strategy hystrix plugins get instance <NEXT> $ r3 = $ r2 concurrency strategy <NEXT> $ r3 set null <NEXT> $ r4 = com netflix hystrix strategy hystrix plugins get instance <NEXT> $ r5 = $ r4 metric publisher <NEXT> $ r5 set null <NEXT> $ r6 = com netflix hystrix strategy hystrix plugins get instance <NEXT> $ r7 = $ r6 property factory <NEXT> $ r7 set null <NEXT> $ r8 = com netflix hystrix strategy hystrix plugins get instance <NEXT> $ r9 = $ r8 command execution hook <NEXT> $ r9 set null <NEXT> com netflix hystrix strategy metric hystrix metric publisher factory reset <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r9 = com netflix hystrix util long max updater r0 <NEXT> $ r4 = r9 cell <NEXT> if $ r4 ! = null goto label1 <NEXT> r10 = com netflix hystrix util long max updater r0 <NEXT> $ l10 = r10 base <NEXT> $ b11 = $ l10 cmp l0 <NEXT> if $ b11 > = 0 goto label3 <NEXT> r11 = com netflix hystrix util long max updater r0 <NEXT> $ z1 = r11 ca base $ l10 l0 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label z2 = 1 <NEXT> $ r5 = com netflix hystrix util long max updater thread hash code <NEXT> $ r6 = $ r5 get <NEXT> $ r7 = com netflix hystrix util striped64 $ hash code $ r6 <NEXT> i4 = $ r7 code <NEXT> if $ r4 == null goto label2 <NEXT> $ i5 = lengthof $ r4 <NEXT> if $ i5 < 1 goto label2 <NEXT> $ i6 = $ i5 - 1 <NEXT> $ i7 = $ i6 & i4 <NEXT> $ r8 = $ r4 [ $ i7 ] <NEXT> if $ r8 == null goto label2 <NEXT> $ l8 = $ r8 value <NEXT> $ b9 = $ l8 cmp l0 <NEXT> if $ b9 > = 0 goto label3 <NEXT> $ z0 = $ r8 cas $ l8 l0 <NEXT> z2 = $ z0 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> label r12 = com netflix hystrix util long max updater r0 <NEXT> r12 retry update l0 $ r7 z2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new software amazon ion impl bin symbols $ 2 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = java util iterator r2 <NEXT> return r3 <END>
<BEG> $ r0 = software amazon ion system ion text writer builder standard <NEXT> $ r1 = $ r0 with pretty print <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = software amazon ion system ion text writer builder r0 <NEXT> $ r1 = r2 my lst minimize <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = software amazon ion system ion writer builder base r0 <NEXT> $ r1 = r3 my import <NEXT> $ r2 = software amazon ion system ion writer builder base safe copy $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get project <NEXT> r17 = r1 get reference \ `` ivy instance\ `` <NEXT> if r17 == null goto label3 <NEXT> $ r13 = r17 get class <NEXT> $ r14 = $ r13 get class loader <NEXT> $ r15 = org apache ivy ant ivy ant setting class $ org $ apache $ ivy $ ant $ ivy ant setting <NEXT> if $ r15 ! = null goto label1 <NEXT> $ r18 = org apache ivy ant ivy ant setting class $ \ `` org apache ivy ant ivy ant settings\ `` <NEXT> org apache ivy ant ivy ant setting class $ org $ apache $ ivy $ ant $ ivy ant setting = $ r18 <NEXT> goto label2 <NEXT> label $ r16 = $ r18 get class loader <NEXT> if $ r14 == $ r16 goto label3 <NEXT> r0 log \ `` ivy instance reference an ivysettings define in an other classloader an new default one will be use in this project \ <NEXT> r17 = null <NEXT> label if r17 == null goto label4 <NEXT> $ z0 = r17 instanceof org apache ivy ant ivy ant setting <NEXT> if $ z0 ! = 0 goto label4 <NEXT> r20 = new org apache tool ant build exception <NEXT> r19 = new java lang string buffer <NEXT> specialinvoke r19 < init > <NEXT> $ r7 = r19 append \ `` ivy instance reference a \ `` <NEXT> $ r8 = r17 get class <NEXT> $ r9 = $ r8 get name <NEXT> $ r10 = $ r7 append $ r9 <NEXT> $ r11 = $ r10 append \ `` an not an ivy ant setting please don\'t use this reference id \ `` <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke r20 < init > $ r12 <NEXT> r22 = java lang throwable r20 <NEXT> throw r22 <NEXT> if $ z0 ! = 0 goto label4 <NEXT> label if r17 ! = null goto label5 <NEXT> r0 log \ `` no ivysettings find for the default reference \'ivy instance\ ' a default instance will be used\ <NEXT> r21 = new org apache ivy ant ivy ant setting <NEXT> specialinvoke r21 < init > <NEXT> r21 set project r1 <NEXT> r1 add reference \ `` ivy instance\ <NEXT> r21 create ivy engine r0 <NEXT> return r21 <NEXT> label if r17 ! = null goto label5 <NEXT> label $ r3 = org apache ivy ant ivy ant setting r17 <NEXT> return $ r3 <NEXT> if $ r15 ! = null goto label1 <NEXT> label $ r18 = org apache ivy ant ivy ant setting class $ org $ apache $ ivy $ ant $ ivy ant setting <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = org apache ivy ant ivy ant setting r0 <NEXT> $ z0 = r12 auto register <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = org apache ivy ant ivy ant setting r0 <NEXT> $ r4 = r13 get project <NEXT> r14 = org apache ivy ant ivy ant setting r0 <NEXT> $ r5 = r14 id <NEXT> $ r6 = $ r4 get reference $ r5 <NEXT> if $ r6 ! = r0 goto label1 <NEXT> r15 = org apache ivy ant ivy ant setting r0 <NEXT> $ r7 = r15 get project <NEXT> $ r8 = $ r7 get reference <NEXT> r16 = org apache ivy ant ivy ant setting r0 <NEXT> $ r9 = r16 id <NEXT> $ r8 remove $ r9 <NEXT> r17 = org apache ivy ant ivy ant setting r0 <NEXT> r17 auto register = 0 <NEXT> label r18 = org apache ivy ant ivy ant setting r0 <NEXT> r18 id = r1 <NEXT> r19 = org apache ivy ant ivy ant setting r0 <NEXT> $ r11 = r19 get project <NEXT> if $ r11 == null goto label2 <NEXT> r20 = org apache ivy ant ivy ant setting r0 <NEXT> $ r2 = r20 get project <NEXT> r21 = org apache ivy ant ivy ant setting r0 <NEXT> $ r3 = r21 id <NEXT> $ r2 add reference $ r3 r0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache ivy core deliver deliver option r0 <NEXT> r2 confs = r1 <NEXT> r3 = org apache ivy core deliver deliver option r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = new java util hash map <NEXT> r4 = org apache ivy core event ivy event r0 <NEXT> $ r2 = r4 attribute <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache ivy core event retrieve end retrieve event r0 <NEXT> $ l0 = r1 total copied size <NEXT> return $ l0 <END>
<BEG> $ r0 = new org apache ivy core ivy context <NEXT> $ r1 = org apache ivy core ivy context get context <NEXT> specialinvoke $ r0 < init > $ r1 <NEXT> $ r2 = org apache ivy core ivy context push context $ r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r4 = null <NEXT> r1 = org apache ivy core ivy context get current stack <NEXT> $ i0 = r1 size <NEXT> i1 = $ i0 - 1 <NEXT> label if i1 < 0 goto label2 <NEXT> if r4 ! = null goto label2 <NEXT> $ r3 = r1 get i1 <NEXT> r2 = org apache ivy core ivy context $ r3 <NEXT> r4 = r2 peek r0 <NEXT> i1 = i1 + -1 <NEXT> goto label1 <NEXT> if r4 ! = null goto label2 <NEXT> label return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r22 = org apache ivy core ivy context r0 <NEXT> $ r6 = r22 context map <NEXT> entermonitor $ r6 <NEXT> label r23 = org apache ivy core ivy context r0 <NEXT> $ r7 = r23 context map <NEXT> $ z0 = $ r7 contain key r1 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r24 = org apache ivy core ivy context r0 <NEXT> $ r16 = r24 context map <NEXT> r19 = new java util link list <NEXT> specialinvoke r19 < init > <NEXT> $ r16 put r1 r19 <NEXT> label r25 = org apache ivy core ivy context r0 <NEXT> $ r8 = r25 context map <NEXT> r4 = $ r8 get r1 <NEXT> $ z1 = r4 instanceof java util list <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r14 = java util list r4 <NEXT> $ r14 add 0 r2 <NEXT> goto label4 <NEXT> label exitmonitor $ r6 <NEXT> label goto label8 <NEXT> label return <NEXT> if $ z1 == 0 goto label3 <NEXT> label r21 = new java lang runtime exception <NEXT> r20 = new java lang string buffer <NEXT> specialinvoke r20 < init > <NEXT> $ r11 = r20 append \ `` can not push to non list object \ `` <NEXT> $ r12 = $ r11 append r4 <NEXT> $ r13 = $ r12 to string <NEXT> specialinvoke r21 < init > $ r13 <NEXT> throw r21 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache ivy core module descriptor default dependency artifact descriptor r0 <NEXT> $ r2 = r3 confs <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string buffer <NEXT> specialinvoke r8 < init > <NEXT> r9 = org apache ivy core module id module id r0 <NEXT> $ r2 = r9 get organisation <NEXT> $ r3 = r8 append $ r2 <NEXT> $ r4 = $ r3 append \ `` #@ #\ `` <NEXT> r10 = org apache ivy core module id module id r0 <NEXT> $ r5 = r10 get name <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache ivy core module id module id r0 <NEXT> $ r1 = r2 attribute <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r20 = new java util link hash set <NEXT> specialinvoke r20 < init > <NEXT> r19 = null <NEXT> if z0 ! = 0 goto label1 <NEXT> r21 = org apache ivy core report configuration resolve report r0 <NEXT> r19 = specialinvoke r21 get evict mrids <NEXT> label r22 = org apache ivy core report configuration resolve report r0 <NEXT> $ r8 = r22 dependency report <NEXT> $ r9 = $ r8 value <NEXT> r3 = $ r9 iterator <NEXT> label $ z3 = r3 have next <NEXT> if $ z3 == 0 goto label8 <NEXT> $ r14 = r3 next <NEXT> r4 = java util collection $ r14 <NEXT> r5 = r4 iterator <NEXT> label $ z4 = r5 have next <NEXT> if $ z4 == 0 goto label7 <NEXT> $ r15 = r5 next <NEXT> r6 = org apache ivy core report artifact download report $ r15 <NEXT> if r1 == null goto label4 <NEXT> $ r18 = r6 get download status <NEXT> if $ r18 == r1 goto label4 <NEXT> goto label3 <NEXT> if $ r18 == r1 goto label4 <NEXT> label if z0 ! = 0 goto label5 <NEXT> $ r16 = r6 get artifact <NEXT> $ r17 = $ r16 get module revision id <NEXT> $ z2 = r19 contain $ r17 <NEXT> if $ z2 ! = 0 goto label6 <NEXT> label r20 add r6 <NEXT> label goto label3 <NEXT> if $ z4 == 0 goto label7 <NEXT> label goto label2 <NEXT> if $ z3 == 0 goto label8 <NEXT> label $ i0 = r20 size <NEXT> $ r10 = newarray org apache ivy core report artifact download report [ $ i0 ] <NEXT> $ r11 = r20 to array $ r10 <NEXT> $ r12 = org apache ivy core report artifact download report [ ] $ r11 <NEXT> $ r13 = org apache ivy core report artifact download report [ ] $ r12 <NEXT> return $ r13 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache ivy core repository repository management engine r0 <NEXT> specialinvoke r2 ensure load <NEXT> r3 = org apache ivy core repository repository management engine r0 <NEXT> $ r1 = r3 revision <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r16 = new java util link hash set <NEXT> specialinvoke r16 < init > <NEXT> r17 = org apache ivy core resolve ivy node r0 <NEXT> $ r6 = r17 usage <NEXT> $ r7 = $ r6 get configuration r1 <NEXT> r18 = org apache ivy core resolve ivy node r0 <NEXT> specialinvoke r18 add all if not null r16 $ r7 <NEXT> r19 = org apache ivy core resolve ivy node r0 <NEXT> $ r8 = r19 merge usage <NEXT> $ r9 = $ r8 value <NEXT> r3 = $ r9 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r14 = r3 next <NEXT> r4 = org apache ivy core resolve ivy node usage $ r14 <NEXT> $ r15 = r4 get configuration r1 <NEXT> r20 = org apache ivy core resolve ivy node r0 <NEXT> specialinvoke r20 add all if not null r16 $ r15 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i0 = r16 size <NEXT> $ r10 = newarray java lang string [ $ i0 ] <NEXT> $ r11 = r16 to array $ r10 <NEXT> $ r12 = java lang string [ ] $ r11 <NEXT> $ r13 = java lang string [ ] $ r12 <NEXT> return $ r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org apache ivy core resolve resolve engine r0 <NEXT> $ r4 = r8 setting <NEXT> $ r5 = r1 get artifact <NEXT> $ r6 = $ r5 get module revision id <NEXT> r3 = $ r4 get resolver $ r6 <NEXT> $ r7 = r3 download r1 r2 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache ivy core retrieve retrieve report r0 <NEXT> $ r1 = r2 retrieve root <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = new java util array list <NEXT> r4 = org apache ivy core retrieve retrieve report r0 <NEXT> $ r2 = r4 copy file <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r31 = new java util array list <NEXT> specialinvoke r31 < init > <NEXT> r32 = new java util hash map <NEXT> specialinvoke r32 < init > <NEXT> $ r14 = r1 get organisation <NEXT> r33 = org apache ivy core search search engine r0 <NEXT> specialinvoke r33 add matcher r2 $ r14 r32 \ `` organisation\ `` <NEXT> $ r15 = r1 get name <NEXT> r34 = org apache ivy core search search engine r0 <NEXT> specialinvoke r34 add matcher r2 $ r15 r32 \ `` module\ `` <NEXT> $ r16 = newarray java lang string [ 2 ] <NEXT> $ r16 [ 0 ] = \ `` organisation\ `` <NEXT> $ r16 [ 1 ] = \ `` module\ `` <NEXT> r35 = org apache ivy core search search engine r0 <NEXT> $ r17 = r35 setting <NEXT> $ r18 = $ r17 get resolvers <NEXT> r6 = $ r18 iterator <NEXT> label $ z0 = r6 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r23 = r6 next <NEXT> r7 = org apache ivy plugins resolver dependency resolver $ r23 <NEXT> r8 = r7 list token value $ r16 r32 <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r8 <NEXT> if i2 > = $ i1 goto label3 <NEXT> $ r24 = r8 [ i2 ] <NEXT> $ r25 = $ r24 get \ `` organisation\ `` <NEXT> r9 = java lang string $ r25 <NEXT> $ r26 = r8 [ i2 ] <NEXT> $ r27 = $ r26 get \ `` module\ `` <NEXT> r10 = java lang string $ r27 <NEXT> r11 = org apache ivy core module id module id new instance r9 r10 <NEXT> $ r28 = r7 get namespace <NEXT> $ r29 = $ r28 get to system transformer <NEXT> $ r30 = org apache ivy plugins namespace name space helper transform r11 $ r29 <NEXT> r31 add $ r30 <NEXT> i2 = i2 + 1 <NEXT> goto label2 <NEXT> if i2 > = $ i1 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ i0 = r31 size <NEXT> $ r19 = newarray org apache ivy core module id module id [ $ i0 ] <NEXT> $ r20 = r31 to array $ r19 <NEXT> $ r21 = org apache ivy core module id module id [ ] $ r20 <NEXT> $ r22 = org apache ivy core module id module id [ ] $ r21 <NEXT> return $ r22 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache ivy core setting ivy setting r0 <NEXT> $ r2 = r7 list ignore <NEXT> r8 = org apache ivy core setting ivy setting r0 <NEXT> $ r1 = r8 list ignore <NEXT> $ i0 = $ r1 size <NEXT> $ r3 = newarray java lang string [ $ i0 ] <NEXT> $ r4 = $ r2 to array $ r3 <NEXT> $ r5 = java lang string [ ] $ r4 <NEXT> $ r6 = java lang string [ ] $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r19 = org apache ivy core sort module in sort r0 <NEXT> $ r4 = r19 caller <NEXT> if $ r4 == null goto label3 <NEXT> r18 = new java util link list <NEXT> specialinvoke r18 < init > <NEXT> r20 = org apache ivy core sort module in sort r0 <NEXT> $ r6 = r20 module <NEXT> $ r7 = $ r6 get module revision id <NEXT> r18 add $ r7 <NEXT> r16 = r1 <NEXT> label if r16 == r0 goto label2 <NEXT> $ r13 = r16 module <NEXT> $ r14 = $ r13 get module revision id <NEXT> r18 add $ r14 <NEXT> r16 be loop intermediate element = 1 <NEXT> r21 = org apache ivy core sort module in sort r0 <NEXT> $ r15 = r21 loop element <NEXT> $ r15 add r16 <NEXT> r16 = r16 caller <NEXT> goto label1 <NEXT> label if r16 == r0 goto label2 <NEXT> label r22 = org apache ivy core sort module in sort r0 <NEXT> $ r8 = r22 module <NEXT> $ r9 = $ r8 get module revision id <NEXT> r18 add $ r9 <NEXT> $ i0 = r18 size <NEXT> $ r10 = newarray org apache ivy core module id module revision id [ $ i0 ] <NEXT> $ r11 = r18 to array $ r10 <NEXT> $ r12 = org apache ivy core module id module revision id [ ] $ r11 <NEXT> r17 = org apache ivy core module id module revision id [ ] $ r12 <NEXT> r2 handle circular dependency r17 <NEXT> return 1 <NEXT> if $ r4 == null goto label3 <NEXT> label return 0 <END>
<BEG> r22 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> if r22 ! = null goto label01 <NEXT> r22 = \ `` \ `` <NEXT> label $ r3 = new java util array list <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = new java lang string buffer <NEXT> specialinvoke $ r4 < init > <NEXT> b12 = 7 <NEXT> i13 = 0 <NEXT> label $ i14 = r22 length <NEXT> if i13 > = $ i14 goto label12 <NEXT> c3 = r22 char at i13 <NEXT> $ i6 = r0 index of c3 <NEXT> if $ i6 < 0 goto label03 <NEXT> $ z5 = 1 <NEXT> goto label04 <NEXT> label z1 = $ z5 <NEXT> if c3 ! = 34 goto label05 <NEXT> $ z6 = 1 <NEXT> goto label06 <NEXT> label z2 = $ z6 <NEXT> if z1 == 0 goto label07 <NEXT> $ b10 = b12 & 2 <NEXT> if $ b10 < = 0 goto label07 <NEXT> $ r19 = $ r4 to string <NEXT> $ r20 = $ r19 trim <NEXT> $ r3 add $ r20 <NEXT> $ i11 = $ r4 length <NEXT> $ r4 delete 0 $ i11 <NEXT> if $ b10 < = 0 goto label07 <NEXT> label if z2 == 0 goto label08 <NEXT> $ b9 = b12 & 4 <NEXT> if $ b9 < = 0 goto label08 <NEXT> $ r4 append c3 <NEXT> b12 = 9 <NEXT> goto label11 <NEXT> label i13 = i13 + 1 <NEXT> goto label02 <NEXT> if $ b9 < = 0 goto label08 <NEXT> label if z2 == 0 goto label09 <NEXT> $ b8 = b12 & 8 <NEXT> if $ b8 < = 0 goto label09 <NEXT> label $ b7 = b12 & 1 <NEXT> if $ b7 < = 0 goto label10 <NEXT> label $ r11 = new java lang illegal argument exception <NEXT> $ r12 = new java lang string buffer <NEXT> specialinvoke $ r12 < init > <NEXT> $ r13 = $ r12 append \ `` invalid delimit string \ `` <NEXT> $ r14 = $ r13 append r22 <NEXT> $ r15 = $ r14 to string <NEXT> specialinvoke $ r11 < init > $ r15 <NEXT> throw $ r11 <NEXT> if c3 ! = 34 goto label05 <NEXT> label $ z6 = 0 <NEXT> if $ i6 < 0 goto label03 <NEXT> label $ z5 = 0 <NEXT> if i13 > = $ i14 goto label12 <NEXT> label $ i4 = $ r4 length <NEXT> if $ i4 < = 0 goto label13 <NEXT> $ r9 = $ r4 to string <NEXT> $ r10 = $ r9 trim <NEXT> $ r3 add $ r10 <NEXT> label $ i5 = $ r3 size <NEXT> $ r5 = newarray java lang string [ $ i5 ] <NEXT> $ r6 = $ r3 to array $ r5 <NEXT> $ r7 = java lang string [ ] $ r6 <NEXT> $ r8 = java lang string [ ] $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> r2 = specialinvoke r18 parse u r i r1 <NEXT> r19 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> r7 = r19 get host <NEXT> r20 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> i5 = r20 get port <NEXT> r21 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> r8 = r21 get user <NEXT> r22 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> r9 = r22 get user password <NEXT> if r2 == null goto label4 <NEXT> $ r4 = r2 get scheme <NEXT> if $ r4 == null goto label4 <NEXT> $ r5 = r2 get host <NEXT> if $ r5 == null goto label1 <NEXT> r7 = r2 get host <NEXT> label $ i0 = r2 get port <NEXT> if $ i0 == -1 goto label2 <NEXT> i5 = r2 get port <NEXT> label $ r6 = r2 get user info <NEXT> if $ r6 == null goto label4 <NEXT> r10 = r2 get user info <NEXT> $ i1 = r10 index of \ `` \ `` <NEXT> if $ i1 ! = -1 goto label3 <NEXT> r8 = r10 <NEXT> goto label4 <NEXT> label if r7 ! = null goto label5 <NEXT> r17 = new java lang illegal argument exception <NEXT> specialinvoke r17 < init > \ `` miss host information host should be provide either directly on the repository or in the connection uri\ `` <NEXT> throw r17 <NEXT> label if r7 ! = null goto label5 <NEXT> label if r8 ! = null goto label7 <NEXT> r23 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> r11 = specialinvoke r23 request credential r7 <NEXT> if r11 == null goto label6 <NEXT> r8 = r11 get user name <NEXT> r9 = r11 get passwd <NEXT> goto label7 <NEXT> label $ r12 = org apache ivy plugins repository ssh ssh cache get instance <NEXT> r24 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> $ r13 = r24 get key file <NEXT> r25 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> $ r14 = r25 get key file password <NEXT> r26 = org apache ivy plugins repository ssh abstract ssh base repository r0 <NEXT> $ r15 = r26 get pas file <NEXT> $ r16 = $ r12 get session r7 i5 r8 r9 $ r13 $ r14 $ r15 <NEXT> return $ r16 <NEXT> if r11 == null goto label6 <NEXT> label org apache ivy util message error \ `` username be not set\ `` <NEXT> if $ i1 ! = -1 goto label3 <NEXT> label $ i2 = r10 index of \ `` \ `` <NEXT> r8 = r10 substring 0 $ i2 <NEXT> $ i3 = r10 index of \ `` \ `` <NEXT> $ i4 = $ i3 + 1 <NEXT> r9 = r10 substring $ i4 <END>
<BEG> r0 = @ this <NEXT> r18 = org apache ivy plugins repository vfs vfs resource r0 <NEXT> specialinvoke r18 init <NEXT> r17 = new java util array list <NEXT> specialinvoke r17 < init > <NEXT> label r19 = org apache ivy plugins repository vfs vfs resource r0 <NEXT> $ r4 = r19 resource impl <NEXT> if $ r4 == null goto label3 <NEXT> r20 = org apache ivy plugins repository vfs vfs resource r0 <NEXT> $ r5 = r20 resource impl <NEXT> $ z0 = $ r5 exist <NEXT> if $ z0 == 0 goto label3 <NEXT> r21 = org apache ivy plugins repository vfs vfs resource r0 <NEXT> $ r6 = r21 resource impl <NEXT> $ r7 = $ r6 get type <NEXT> $ r8 = org apache common vfs file type folder <NEXT> if $ r7 ! = $ r8 goto label3 <NEXT> r22 = org apache ivy plugins repository vfs vfs resource r0 <NEXT> $ r9 = r22 resource impl <NEXT> r15 = $ r9 get child <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r15 <NEXT> if i1 > = $ i0 goto label3 <NEXT> r2 = r15 [ i1 ] <NEXT> $ r10 = r2 get name <NEXT> $ r11 = $ r10 get u r i <NEXT> $ r12 = org apache ivy plugins repository vfs vfs resource normalize $ r11 <NEXT> r17 add $ r12 <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label goto label5 <NEXT> label return r17 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache ivy plugins resolver abstract ssh base resolver r0 <NEXT> $ r2 = specialinvoke r3 get ssh base repository <NEXT> $ r2 set key file password r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org apache ivy plugins resolver abstract ssh base resolver r0 <NEXT> $ r1 = specialinvoke r2 get ssh base repository <NEXT> $ r1 set port i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache ivy plugins resolver basic resolver r0 <NEXT> $ r2 = r3 get setting <NEXT> $ r2 filter ignore r1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache ivy plugins resolver packager packager cache entry r0 <NEXT> $ z0 = r1 build <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache ivy plugins resolver packager packager resolver r0 <NEXT> r2 resource u r l = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache ivy plugins resolver packager packager resolver r0 <NEXT> r1 restrict = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 == 1 goto label2 <NEXT> label r11 = new java lang illegal argument exception <NEXT> r10 = new java lang string buffer <NEXT> specialinvoke r10 < init > <NEXT> $ r4 = r10 append \ `` file separator have to be a single character and not \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke r11 < init > $ r6 <NEXT> throw r11 <NEXT> if $ i0 == 1 goto label2 <NEXT> label r12 = org apache ivy plugins resolver ssh resolver r0 <NEXT> $ r7 = r12 get repository <NEXT> $ r8 = org apache ivy plugins repository ssh ssh repository $ r7 <NEXT> $ r9 = r1 trim <NEXT> $ c1 = $ r9 char at 0 <NEXT> $ r8 set file separator $ c1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 exist <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = r0 be directory <NEXT> if $ z1 == 0 goto label4 <NEXT> r1 = r0 list file <NEXT> if r1 == null goto label4 <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 > = $ i0 goto label4 <NEXT> $ r2 = r1 [ i1 ] <NEXT> $ z2 = org apache ivy util file util force delete $ r2 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> return 0 <NEXT> if $ z2 ! = 0 goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> if i1 > = $ i0 goto label4 <NEXT> label $ z3 = r0 delete <NEXT> return $ z3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org codehaus jackson json node r0 <NEXT> $ r1 = r2 get i0 <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r10 = com fasterxml jackson databind introspect p o j o property builder r0 <NEXT> $ r1 = r10 _fields <NEXT> r11 = com fasterxml jackson databind introspect p o j o property builder r0 <NEXT> r6 = specialinvoke r11 _find explicit names $ r1 null <NEXT> r12 = com fasterxml jackson databind introspect p o j o property builder r0 <NEXT> $ r2 = r12 _getters <NEXT> r13 = com fasterxml jackson databind introspect p o j o property builder r0 <NEXT> r7 = specialinvoke r13 _find explicit names $ r2 r6 <NEXT> r14 = com fasterxml jackson databind introspect p o j o property builder r0 <NEXT> $ r3 = r14 _setters <NEXT> r15 = com fasterxml jackson databind introspect p o j o property builder r0 <NEXT> r8 = specialinvoke r15 _find explicit names $ r3 r7 <NEXT> r16 = com fasterxml jackson databind introspect p o j o property builder r0 <NEXT> $ r4 = r16 _ctor parameter <NEXT> r17 = com fasterxml jackson databind introspect p o j o property builder r0 <NEXT> r9 = specialinvoke r17 _find explicit names $ r4 r8 <NEXT> if r9 ! = null goto label1 <NEXT> $ r5 = java util collection empty set <NEXT> return $ r5 <NEXT> if r9 ! = null goto label1 <NEXT> label return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = com fasterxml jackson databind jsontype type serializer r0 <NEXT> r4 write type prefix for object r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com fasterxml jackson core json generator r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r3 = com fasterxml jackson dataformat cbor c b o r generator r0 <NEXT> r3 _verify value write \ `` start an array\ `` <NEXT> r4 = com fasterxml jackson dataformat cbor c b o r generator r0 <NEXT> $ r1 = r4 _write context <NEXT> $ r2 = $ r1 create child array context <NEXT> r5 = com fasterxml jackson dataformat cbor c b o r generator r0 <NEXT> r5 _write context = $ r2 <NEXT> r6 = com fasterxml jackson dataformat cbor c b o r generator r0 <NEXT> specialinvoke r6 _write byte -97 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org codehaus jackson map introspect annotate with params r0 <NEXT> $ r2 = r3 _annotations <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org codehaus jackson map introspect p o j o property builder r0 <NEXT> $ r1 = r5 _fields <NEXT> r6 = org codehaus jackson map introspect p o j o property builder r0 <NEXT> $ z0 = specialinvoke r6 _any explicit names $ r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r7 = org codehaus jackson map introspect p o j o property builder r0 <NEXT> $ r2 = r7 _getters <NEXT> r8 = org codehaus jackson map introspect p o j o property builder r0 <NEXT> $ z1 = specialinvoke r8 _any explicit names $ r2 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r9 = org codehaus jackson map introspect p o j o property builder r0 <NEXT> $ r3 = r9 _setters <NEXT> r10 = org codehaus jackson map introspect p o j o property builder r0 <NEXT> $ z2 = specialinvoke r10 _any explicit names $ r3 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> r11 = org codehaus jackson map introspect p o j o property builder r0 <NEXT> $ r4 = r11 _ctor parameter <NEXT> r12 = org codehaus jackson map introspect p o j o property builder r0 <NEXT> $ z3 = specialinvoke r12 _any explicit names $ r4 <NEXT> if $ z3 == 0 goto label2 <NEXT> label $ z4 = 1 <NEXT> goto label3 <NEXT> label return $ z4 <NEXT> if $ z3 == 0 goto label2 <NEXT> label $ z4 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org codehaus jackson map serializer factory r0 <NEXT> $ r2 = r5 get config <NEXT> $ r3 = $ r2 with serializer modifier r1 <NEXT> r6 = org codehaus jackson map serializer factory r0 <NEXT> $ r4 = r6 with config $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org codehaus jackson json token start_array <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = r1 get key <NEXT> r9 = org janusgraph diskstorage cassandra thrift cassandra thrift key column value store r0 <NEXT> r10 = org janusgraph diskstorage keycolumnvalue slice query r1 <NEXT> r3 = r9 get names slice $ r4 r10 r2 <NEXT> $ r5 = r3 value <NEXT> $ r6 = org janusgraph diskstorage entry list empty_list <NEXT> $ r7 = com google common collect iterables get only element $ r5 $ r6 <NEXT> $ r8 = org janusgraph diskstorage entry list $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> $ r2 = org janusgraph core attribute geoshape helper <NEXT> r3 = org janusgraph core attribute geoshape r0 <NEXT> $ r1 = r3 shape <NEXT> $ i0 = $ r2 size $ r1 <NEXT> return $ i0 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ z0 = org janusgraph core attribute geoshape be valid coordinate d0 d1 <NEXT> com google common base precondition check argument $ z0 \ `` invalid coordinate provided\ `` <NEXT> r3 = new org janusgraph core attribute geoshape <NEXT> $ r1 = org janusgraph core attribute geoshape get shape factory <NEXT> $ r2 = $ r1 point x y d1 d0 <NEXT> r4 = org locationtech spatial4j shape shape $ r2 <NEXT> specialinvoke r3 < init > r4 <NEXT> return r3 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ b0 = d0 cmpl -90 0 <NEXT> if $ b0 < 0 goto label1 <NEXT> $ b1 = d0 cmpg 90 0 <NEXT> if $ b1 > 0 goto label1 <NEXT> $ b2 = d1 cmpl -180 0 <NEXT> if $ b2 < 0 goto label1 <NEXT> $ b3 = d1 cmpg 180 0 <NEXT> if $ b3 > 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b3 > 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org janusgraph diskstorage common distribute store manager r0 <NEXT> $ r3 = r5 hostnames <NEXT> $ r2 = org janusgraph diskstorage common distribute store manager random <NEXT> r6 = org janusgraph diskstorage common distribute store manager r0 <NEXT> $ r1 = r6 hostnames <NEXT> $ i0 = lengthof $ r1 <NEXT> $ i1 = $ r2 next int $ i0 <NEXT> $ r4 = $ r3 [ $ i1 ] <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org janusgraph diskstorage mutation r0 <NEXT> $ r2 = r6 deletion <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util array list <NEXT> specialinvoke r5 < init > <NEXT> r7 = org janusgraph diskstorage mutation r0 <NEXT> r7 deletion = r5 <NEXT> label r8 = org janusgraph diskstorage mutation r0 <NEXT> $ r3 = r8 deletion <NEXT> $ r3 add r1 <NEXT> return <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = java nio byte buffer allocate 4 <NEXT> r0 put int i0 <NEXT> r1 = r0 array <NEXT> $ i1 = lengthof r1 <NEXT> if $ i1 ! = 4 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label com google common base precondition check argument $ z0 <NEXT> $ r3 = org janusgraph diskstorage util static array buffer of r1 <NEXT> r4 = org janusgraph diskstorage static buffer $ r3 <NEXT> return r4 <NEXT> if $ i1 ! = 4 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org janusgraph graphdb query vertex basic vertex centric query builder r0 <NEXT> r2 restrict2 partition = 0 <NEXT> r3 = org janusgraph graphdb query vertex basic vertex centric query builder r0 <NEXT> $ r1 = r3 get this <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org janusgraph graphdb query vertex basic vertex centric query builder r0 <NEXT> r2 query only load = 1 <NEXT> r3 = org janusgraph graphdb query vertex basic vertex centric query builder r0 <NEXT> $ r1 = r3 get this <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org janusgraph graphdb util priority queue r0 <NEXT> specialinvoke r3 down heap <NEXT> r4 = org janusgraph graphdb util priority queue r0 <NEXT> $ r1 = r4 heap <NEXT> $ r2 = $ r1 [ 1 ] <NEXT> return $ r2 <END>
<BEG> l0 = @ parameter0 <NEXT> $ l1 = l0 > > 63 <NEXT> $ l2 = $ l1 & 9223372036854775807l <NEXT> $ l3 = l0 ^ $ l2 <NEXT> return $ l3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = com jamesmurty utils x m l builder r0 <NEXT> $ r3 = r9 xml node <NEXT> r10 = com jamesmurty utils x m l builder r0 <NEXT> r10 assert element contain no or whitespace only text node $ r3 <NEXT> r11 = com jamesmurty utils x m l builder r0 <NEXT> $ r4 = r11 get document <NEXT> $ r5 = r1 root <NEXT> $ r6 = $ r5 get element <NEXT> r2 = $ r4 import node $ r6 1 <NEXT> r12 = com jamesmurty utils x m l builder r0 <NEXT> $ r7 = r12 xml node <NEXT> $ r7 append child r2 <NEXT> r13 = com jamesmurty utils x m l builder r0 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = com jamesmurty utils x m l builder r0 <NEXT> $ r2 = r7 xml node <NEXT> r8 = com jamesmurty utils x m l builder r0 <NEXT> $ r3 = r8 get document <NEXT> $ r4 = net iharder base64 encode bytes r1 <NEXT> $ r5 = $ r3 create c d a t a section $ r4 <NEXT> $ r2 append child $ r5 <NEXT> r9 = com jamesmurty utils x m l builder r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 abstract lat lon box r0 <NEXT> $ r2 = r3 get abstract lat lon box simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 abstract lat lon box r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 abstract view r0 <NEXT> $ r2 = r3 get abstract view simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 abstract view r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = de micromata opengis kml v_2_2_0 abstract view r0 <NEXT> r2 abstract view object extension = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 abstract view r0 <NEXT> $ r2 = r3 get abstract view object extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 abstract view r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = de micromata opengis kml v_2_2_0 basic link r0 <NEXT> r2 basic link simple extension = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 camera r0 <NEXT> $ r2 = r3 get camera object extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 camera r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 document r0 <NEXT> $ r2 = r3 get document simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 document r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 document r0 <NEXT> $ r2 = r3 get document object extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 document r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 ground overlay r0 <NEXT> $ r2 = r3 get ground overlay simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 ground overlay r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 ground overlay r0 <NEXT> $ r2 = r3 get ground overlay object extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 ground overlay r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r4 = de micromata opengis kml v_2_2_0 gx lat lon quad r0 <NEXT> $ r1 = r4 get coordinate <NEXT> r3 = new de micromata opengis kml v_2_2_0 coordinate <NEXT> specialinvoke r3 < init > d0 d1 <NEXT> $ r1 add r3 <NEXT> r5 = de micromata opengis kml v_2_2_0 gx lat lon quad r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 icon style r0 <NEXT> $ r2 = r3 get icon style object extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 icon style r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 look at r0 <NEXT> $ r2 = r3 get look at simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 look at r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 point r0 <NEXT> $ r2 = r3 get point simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 point r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 schema r0 <NEXT> $ r2 = r3 get schema extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 schema r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 style map r0 <NEXT> $ r2 = r3 get style map simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 style map r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 style map r0 <NEXT> $ r2 = r3 get style map object extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 style map r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 time stamp r0 <NEXT> $ r2 = r3 get time stamp simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 time stamp r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 update r0 <NEXT> $ r2 = r3 get create or delete or change <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 update r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 view volume r0 <NEXT> $ r2 = r3 get view volume simple extension <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 view volume r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = de micromata opengis kml v_2_2_0 xal dependent locality r0 <NEXT> r2 dependent locality name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = de micromata opengis kml v_2_2_0 xal large mail user r0 <NEXT> r2 large mail user name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 xal postal route r0 <NEXT> $ r2 = r3 get postal route name <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 xal postal route r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = de micromata opengis kml v_2_2_0 xal premise r0 <NEXT> r2 premise name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 xal premise r0 <NEXT> $ r2 = r3 get premise name <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 xal premise r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = de micromata opengis kml v_2_2_0 xal premise r0 <NEXT> $ r2 = r3 get premise number suffix <NEXT> $ r2 add r1 <NEXT> r4 = de micromata opengis kml v_2_2_0 xal premise r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = com googlecode javaewah bit counter r0 <NEXT> $ i1 = r1 one bits <NEXT> $ i2 = java lang long bit count l0 <NEXT> $ i3 = $ i1 + $ i2 <NEXT> r2 = com googlecode javaewah bit counter r0 <NEXT> r2 one bits = $ i3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 ! = i1 goto label1 <NEXT> return <NEXT> if i0 ! = i1 goto label1 <NEXT> label i2 = i0 64 <NEXT> $ i4 = i1 - 1 <NEXT> i3 = $ i4 64 <NEXT> if i2 ! = i3 goto label2 <NEXT> r5 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r4 = r5 data <NEXT> $ l19 = $ r4 [ i2 ] <NEXT> $ l16 = -1l < < i0 <NEXT> $ i14 = neg i1 <NEXT> $ l15 = -1l > > > $ i14 <NEXT> $ l17 = $ l16 & $ l15 <NEXT> $ l18 = $ l17 ^ -1l <NEXT> $ l20 = $ l19 & $ l18 <NEXT> $ r4 [ i2 ] = $ l20 <NEXT> if i2 ! = i3 goto label2 <NEXT> label r6 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r1 = r6 data <NEXT> $ l7 = $ r1 [ i2 ] <NEXT> $ l5 = -1l < < i0 <NEXT> $ l6 = $ l5 ^ -1l <NEXT> $ l8 = $ l7 & $ l6 <NEXT> $ r1 [ i2 ] = $ l8 <NEXT> i21 = i2 + 1 <NEXT> label if i21 > = i3 goto label4 <NEXT> r7 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r3 = r7 data <NEXT> $ r3 [ i21 ] = 0l <NEXT> i21 = i21 + 1 <NEXT> goto label3 <NEXT> label if i21 > = i3 goto label4 <NEXT> label r8 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r2 = r8 data <NEXT> $ l12 = $ r2 [ i3 ] <NEXT> $ i9 = neg i1 <NEXT> $ l10 = -1l > > > $ i9 <NEXT> $ l11 = $ l10 ^ -1l <NEXT> $ l13 = $ l12 & $ l11 <NEXT> $ r2 [ i3 ] = $ l13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i7 = 0 <NEXT> label r2 = com googlecode javaewah datastructure bit set r0 <NEXT> $ i0 = r2 get number of word <NEXT> $ i1 = r1 get number of word <NEXT> $ i2 = java lang math min $ i0 $ i1 <NEXT> if i7 > = $ i2 goto label3 <NEXT> r3 = com googlecode javaewah datastructure bit set r0 <NEXT> $ l3 = r3 get word i7 <NEXT> $ l4 = r1 get word i7 <NEXT> $ l5 = $ l3 & $ l4 <NEXT> $ b6 = $ l5 cmp 0l <NEXT> if $ b6 == 0 goto label2 <NEXT> return 1 <NEXT> if $ b6 == 0 goto label2 <NEXT> label i7 = i7 + 1 <NEXT> goto label1 <NEXT> if i7 > = $ i2 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i14 = i0 64 <NEXT> r4 = com googlecode javaewah datastructure bit set r0 <NEXT> $ i1 = r4 get number of word <NEXT> if i14 < $ i1 goto label1 <NEXT> return -1 <NEXT> if i14 < $ i1 goto label1 <NEXT> label r5 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r1 = r5 data <NEXT> $ l2 = $ r1 [ i14 ] <NEXT> l15 = $ l2 ^ -1l <NEXT> l16 = l15 > > > i0 <NEXT> $ b3 = l16 cmp 0l <NEXT> if $ b3 == 0 goto label2 <NEXT> $ i12 = java lang long number of trail zero l16 <NEXT> $ i13 = i0 + $ i12 <NEXT> return $ i13 <NEXT> if $ b3 == 0 goto label2 <NEXT> label i17 = i14 + 1 <NEXT> label r6 = com googlecode javaewah datastructure bit set r0 <NEXT> $ i4 = r6 get number of word <NEXT> if i17 > = $ i4 goto label5 <NEXT> r7 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r2 = r7 data <NEXT> $ l5 = $ r2 [ i17 ] <NEXT> $ b6 = $ l5 cmp -1l <NEXT> if $ b6 == 0 goto label4 <NEXT> $ i9 = i17 * 64 <NEXT> r8 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r3 = r8 data <NEXT> $ l7 = $ r3 [ i17 ] <NEXT> $ l8 = $ l7 ^ -1l <NEXT> $ i10 = java lang long number of trail zeros $ l8 <NEXT> $ i11 = $ i9 + $ i10 <NEXT> return $ i11 <NEXT> if $ b6 == 0 goto label4 <NEXT> label i17 = i17 + 1 <NEXT> goto label3 <NEXT> if i17 > = $ i4 goto label5 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i13 = 0 <NEXT> i14 = 0 <NEXT> label r4 = com googlecode javaewah datastructure bit set r0 <NEXT> $ i0 = r4 get number of word <NEXT> $ i1 = r1 get number of word <NEXT> $ i2 = java lang math min $ i0 $ i1 <NEXT> if i14 > = $ i2 goto label2 <NEXT> r5 = com googlecode javaewah datastructure bit set r0 <NEXT> $ l9 = r5 get word i14 <NEXT> $ l10 = r1 get word i14 <NEXT> $ l11 = $ l9 | $ l10 <NEXT> $ i12 = java lang long bit count $ l11 <NEXT> i13 = i13 + $ i12 <NEXT> i14 = i14 + 1 <NEXT> goto label1 <NEXT> if i14 > = $ i2 goto label2 <NEXT> label $ i3 = r1 get number of word <NEXT> r6 = com googlecode javaewah datastructure bit set r0 <NEXT> $ i4 = r6 get number of word <NEXT> if $ i3 > = $ i4 goto label3 <NEXT> $ r2 = r0 <NEXT> goto label4 <NEXT> label r3 = $ r2 <NEXT> r7 = com googlecode javaewah datastructure bit set r0 <NEXT> $ i5 = r7 get number of word <NEXT> $ i6 = r1 get number of word <NEXT> i15 = java lang math min $ i5 $ i6 <NEXT> label r8 = com googlecode javaewah datastructure bit set r0 <NEXT> $ i16 = r8 get number of word <NEXT> $ i17 = r1 get number of word <NEXT> $ i18 = java lang math max $ i16 $ i17 <NEXT> if i15 > = $ i18 goto label6 <NEXT> r9 = com googlecode javaewah datastructure word array r3 <NEXT> $ l7 = r9 get word i15 <NEXT> $ i8 = java lang long bit count $ l7 <NEXT> i13 = i13 + $ i8 <NEXT> i15 = i15 + 1 <NEXT> goto label5 <NEXT> if i15 > = $ i18 goto label6 <NEXT> label return i13 <NEXT> if $ i3 > = $ i4 goto label3 <NEXT> label $ r2 = r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r1 = r3 data <NEXT> $ i1 = i0 + 63 <NEXT> $ i2 = $ i1 64 <NEXT> $ r2 = java util array copy of $ r1 $ i2 <NEXT> r4 = com googlecode javaewah datastructure bit set r0 <NEXT> r4 data = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if z0 == 0 goto label1 <NEXT> r1 = com googlecode javaewah datastructure bit set r0 <NEXT> r1 set i0 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r2 = com googlecode javaewah datastructure bit set r0 <NEXT> r2 unset i0 <END>
<BEG> r0 = @ this <NEXT> r1 = com googlecode javaewah datastructure bit set r0 <NEXT> $ i0 = r1 get number of word <NEXT> $ i1 = $ i0 * 64 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = com googlecode javaewah datastructure bit set r0 <NEXT> $ r1 = r2 data <NEXT> $ i1 = i0 64 <NEXT> $ l5 = $ r1 [ $ i1 ] <NEXT> $ i2 = i0 % 64 <NEXT> $ l3 = 1l < < $ i2 <NEXT> $ l4 = $ l3 ^ -1l <NEXT> $ l6 = $ l5 & $ l4 <NEXT> $ r1 [ $ i1 ] = $ l6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com googlecode javaewah datastructure priority q r0 <NEXT> specialinvoke r1 percolate down 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r2 clear <NEXT> r3 = r1 get e w a h iterator <NEXT> r17 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> r4 = r17 get e w a h iterator <NEXT> r15 = new com googlecode javaewah iterate buffer run length word <NEXT> specialinvoke r15 < init > r3 <NEXT> r16 = new com googlecode javaewah iterate buffer run length word <NEXT> specialinvoke r16 < init > r4 <NEXT> label $ l1 = r15 size <NEXT> $ b2 = $ l1 cmp 0l <NEXT> if $ b2 < = 0 goto label16 <NEXT> $ l8 = r16 size <NEXT> $ b9 = $ l8 cmp 0l <NEXT> if $ b9 < = 0 goto label16 <NEXT> label $ l10 = r15 get run length <NEXT> $ b11 = $ l10 cmp 0l <NEXT> if $ b11 > 0 goto label03 <NEXT> $ l20 = r16 get run length <NEXT> $ b21 = $ l20 cmp 0l <NEXT> if $ b21 < = 0 goto label12 <NEXT> label $ l12 = r15 get run length <NEXT> $ l13 = r16 get run length <NEXT> $ b14 = $ l12 cmp $ l13 <NEXT> if $ b14 > = 0 goto label04 <NEXT> $ z1 = 1 <NEXT> goto label05 <NEXT> label z2 = $ z1 <NEXT> if $ z1 == 0 goto label06 <NEXT> $ r10 = r15 <NEXT> goto label07 <NEXT> label r11 = $ r10 <NEXT> if z2 == 0 goto label08 <NEXT> $ r12 = r16 <NEXT> goto label09 <NEXT> label r7 = $ r12 <NEXT> $ z0 = $ r12 get run bit <NEXT> if $ z0 == 0 goto label10 <NEXT> $ l18 = $ r12 get run length <NEXT> r2 add stream of empty word 1 $ l18 <NEXT> $ l19 = $ r12 get run length <NEXT> r11 discard first word $ l19 <NEXT> goto label11 <NEXT> label r7 discard run word <NEXT> goto label02 <NEXT> if $ z0 == 0 goto label10 <NEXT> label $ l15 = $ r12 get run length <NEXT> l0 = r11 discharge r2 $ l15 <NEXT> $ l16 = $ r12 get run length <NEXT> $ l17 = $ l16 - l0 <NEXT> r2 add stream of empty word 0 $ l17 <NEXT> if z2 == 0 goto label08 <NEXT> label $ r12 = r15 <NEXT> if $ z1 == 0 goto label06 <NEXT> label $ r10 = r16 <NEXT> if $ b14 > = 0 goto label04 <NEXT> label $ z1 = 0 <NEXT> if $ b21 < = 0 goto label12 <NEXT> label $ i22 = r15 get number of literal word <NEXT> $ i23 = r16 get number of literal word <NEXT> i29 = java lang math min $ i22 $ i23 <NEXT> if i29 < = 0 goto label15 <NEXT> i30 = 0 <NEXT> label if i30 > = i29 goto label14 <NEXT> $ l26 = r15 get literal word at i30 <NEXT> $ l27 = r16 get literal word at i30 <NEXT> $ l28 = $ l26 | $ l27 <NEXT> r2 add word $ l28 <NEXT> i30 = i30 + 1 <NEXT> goto label13 <NEXT> label if i30 > = i29 goto label14 <NEXT> label $ l24 = long i29 <NEXT> r15 discard first word $ l24 <NEXT> $ l25 = long i29 <NEXT> r16 discard first word $ l25 <NEXT> label goto label01 <NEXT> if $ b9 < = 0 goto label16 <NEXT> label $ l3 = r15 size <NEXT> $ b4 = $ l3 cmp 0l <NEXT> if $ b4 < = 0 goto label17 <NEXT> $ z3 = 1 <NEXT> goto label18 <NEXT> label if $ z3 == 0 goto label19 <NEXT> $ r13 = r15 <NEXT> goto label20 <NEXT> label $ r13 discharge r2 <NEXT> r18 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i5 = r18 size in bit <NEXT> $ i6 = r1 size in bit <NEXT> $ i7 = java lang math max $ i5 $ i6 <NEXT> r2 set size in bit within last word $ i7 <NEXT> return <NEXT> label if $ z3 == 0 goto label19 <NEXT> label $ r13 = r16 <NEXT> if $ b4 < = 0 goto label17 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ z0 = specialinvoke r1 set i0 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r16 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i2 = r16 size in bit <NEXT> if i0 > $ i2 goto label01 <NEXT> return 0 <NEXT> if i0 > $ i2 goto label01 <NEXT> label r17 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i3 = r17 size in bit <NEXT> $ i4 = $ i3 % 64 <NEXT> if $ i4 == 0 goto label07 <NEXT> if z0 ! = 0 goto label04 <NEXT> r18 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r11 = r18 rlw <NEXT> $ i28 = $ r11 get number of literal word <NEXT> if $ i28 < = 0 goto label07 <NEXT> r19 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i29 = r19 size in bit <NEXT> i41 = i0 - $ i29 <NEXT> r20 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i30 = r20 size in bit <NEXT> i42 = $ i30 % 64 <NEXT> i43 = 64 - i42 <NEXT> r21 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r12 = r21 buffer <NEXT> $ l31 = $ r12 get last word <NEXT> $ b32 = $ l31 cmp 0l <NEXT> if $ b32 ! = 0 goto label02 <NEXT> r22 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r14 = r22 rlw <NEXT> r23 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r13 = r23 rlw <NEXT> $ i36 = $ r13 get number of literal word <NEXT> $ i37 = $ i36 - 1 <NEXT> $ l38 = long $ i37 <NEXT> $ r14 set number of literal word $ l38 <NEXT> r24 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r15 = r24 buffer <NEXT> $ r15 remove last word <NEXT> r25 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i39 = r25 size in bit <NEXT> $ i40 = $ i39 - i42 <NEXT> r26 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> r26 size in bit = $ i40 <NEXT> goto label03 <NEXT> label goto label07 <NEXT> label $ i47 = i0 64 <NEXT> r44 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i48 = r44 size in bit <NEXT> $ i49 = $ i48 64 <NEXT> $ i50 = $ i47 - $ i49 <NEXT> $ l51 = long $ i50 <NEXT> r45 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> r45 add stream of empty word z0 $ l51 <NEXT> r46 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i52 = r46 size in bit <NEXT> if $ i52 > = i0 goto label10 <NEXT> $ i5 = i0 - 1 <NEXT> r47 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> i53 = specialinvoke r47 distance in word $ i5 <NEXT> if i53 < = 0 goto label08 <NEXT> r48 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> specialinvoke r48 insert literal word 0l <NEXT> label if z0 == 0 goto label09 <NEXT> r49 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i6 = r49 size in bit <NEXT> i54 = i0 - $ i6 <NEXT> r50 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i7 = r50 size in bit <NEXT> i55 = $ i7 % 64 <NEXT> $ i8 = 64 - i54 <NEXT> $ l9 = -1l > > > $ i8 <NEXT> l1 = $ l9 < < i55 <NEXT> r51 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r1 = r51 buffer <NEXT> $ r1 or last word l1 <NEXT> label r52 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> r52 size in bit = i0 <NEXT> label return 1 <NEXT> if $ b32 ! = 0 goto label02 <NEXT> label if i42 < = 0 goto label03 <NEXT> r27 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i33 = r27 size in bit <NEXT> $ i34 = java lang math min i41 i43 <NEXT> $ i35 = $ i33 + $ i34 <NEXT> r28 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> r28 size in bit = $ i35 <NEXT> if z0 ! = 0 goto label04 <NEXT> label r29 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r2 = r29 rlw <NEXT> $ i10 = $ r2 get number of literal word <NEXT> if $ i10 ! = 0 goto label05 <NEXT> r30 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r10 = r30 rlw <NEXT> r31 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r9 = r31 rlw <NEXT> $ l26 = $ r9 get run length <NEXT> $ l27 = $ l26 - 1l <NEXT> $ r10 set run length $ l27 <NEXT> r32 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> specialinvoke r32 insert literal word 0l <NEXT> label r33 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i11 = r33 size in bit <NEXT> $ i12 = $ i11 % 64 <NEXT> $ i15 = 64 - $ i12 <NEXT> r34 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i13 = r34 size in bit <NEXT> $ i14 = i0 - $ i13 <NEXT> i44 = java lang math min $ i15 $ i14 <NEXT> r35 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i16 = r35 size in bit <NEXT> i45 = $ i16 % 64 <NEXT> $ i17 = 64 - i44 <NEXT> $ l18 = -1l > > > $ i17 <NEXT> l46 = $ l18 < < i45 <NEXT> r36 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r3 = r36 buffer <NEXT> $ r3 or last word l46 <NEXT> r37 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r4 = r37 buffer <NEXT> $ l19 = $ r4 get last word <NEXT> $ b20 = $ l19 cmp -1l <NEXT> if $ b20 ! = 0 goto label06 <NEXT> r38 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r5 = r38 buffer <NEXT> $ r5 remove last word <NEXT> r39 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r7 = r39 rlw <NEXT> r40 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ r6 = r40 rlw <NEXT> $ i23 = $ r6 get number of literal word <NEXT> $ i24 = $ i23 - 1 <NEXT> $ l25 = long $ i24 <NEXT> $ r7 set number of literal word $ l25 <NEXT> r41 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> specialinvoke r41 insert empty word 1 <NEXT> label r42 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> $ i21 = r42 size in bit <NEXT> $ i22 = $ i21 + i44 <NEXT> r43 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> r43 size in bit = $ i22 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> r3 = new com googlecode javaewah e w a h compress bitmap <NEXT> specialinvoke r3 < init > <NEXT> r4 = com googlecode javaewah bitmap storage r3 <NEXT> com googlecode javaewah e w a h compress bitmap threshold with container r4 i0 r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new com googlecode javaewah bit counter <NEXT> specialinvoke r4 < init > <NEXT> r5 = com googlecode javaewah e w a h compress bitmap r0 <NEXT> r6 = com googlecode javaewah bitmap storage r4 <NEXT> r5 xor to container r1 r6 <NEXT> $ i0 = r4 get count <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = new com googlecode javaewah e w a h compress bitmap <NEXT> specialinvoke $ r3 < init > <NEXT> i0 = lengthof r0 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label2 <NEXT> i1 = r0 [ i2 ] <NEXT> $ r3 set i1 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label2 <NEXT> label return $ r3 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> r3 = new com googlecode javaewah e w a h compress bitmap <NEXT> specialinvoke r3 < init > <NEXT> r4 = com googlecode javaewah bitmap storage r3 <NEXT> com googlecode javaewah fast aggregation bufferedand with container r4 i0 r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r2 = com googlecode javaewah iterate buffer run length word r0 <NEXT> $ l0 = r2 size <NEXT> $ b1 = $ l0 cmp 0l <NEXT> if $ b1 < = 0 goto label2 <NEXT> r3 = com googlecode javaewah iterate buffer run length word r0 <NEXT> $ l2 = r3 size <NEXT> r1 add stream of empty word 0 $ l2 <NEXT> r4 = com googlecode javaewah iterate buffer run length word r0 <NEXT> $ l3 = r4 size <NEXT> r5 = com googlecode javaewah iterate buffer run length word r0 <NEXT> r5 discard first word $ l3 <NEXT> goto label1 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com googlecode javaewah iterate buffer run length word r0 <NEXT> $ r3 = r6 brlw <NEXT> r7 = com googlecode javaewah iterate buffer run length word r0 <NEXT> $ i0 = r7 literal word start position <NEXT> r8 = com googlecode javaewah iterate buffer run length word r0 <NEXT> $ r2 = r8 iterator <NEXT> $ i1 = $ r2 literal word <NEXT> $ i2 = $ i0 - $ i1 <NEXT> $ r3 literal word offset = $ i2 <NEXT> r9 = com googlecode javaewah iterate buffer run length word r0 <NEXT> $ r5 = r9 brlw <NEXT> r10 = com googlecode javaewah iterate buffer run length word r0 <NEXT> $ r4 = r10 iterator <NEXT> com googlecode javaewah iterate buffer run length word discharge $ r5 $ r4 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com googlecode javaewah symmetric updateable bitmap function r0 <NEXT> $ r2 = r6 litwlist <NEXT> i1 = $ r2 next set bit 0 <NEXT> label if i1 < 0 goto label2 <NEXT> r7 = com googlecode javaewah symmetric updateable bitmap function r0 <NEXT> $ r3 = r7 rw <NEXT> $ r4 = $ r3 [ i1 ] <NEXT> r1 add $ r4 <NEXT> r8 = com googlecode javaewah symmetric updateable bitmap function r0 <NEXT> $ r5 = r8 litwlist <NEXT> $ i0 = i1 + 1 <NEXT> i1 = $ r5 next set bit $ i0 <NEXT> goto label1 <NEXT> label if i1 < 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i5 = @ parameter2 <NEXT> i0 = i5 <NEXT> label $ i1 = r0 get run length <NEXT> if $ i1 < = 0 goto label3 <NEXT> i6 = r0 get run length <NEXT> if i6 < = i5 goto label2 <NEXT> i6 = i5 <NEXT> label $ z1 = r0 get run bit <NEXT> r1 add stream of empty word $ z1 i6 <NEXT> i5 = i5 - i6 <NEXT> label $ i7 = r0 get number of literal word <NEXT> l8 = long $ i7 <NEXT> i9 = 0 <NEXT> label $ l10 = long i9 <NEXT> $ b11 = $ l10 cmp l8 <NEXT> if $ b11 > = 0 goto label5 <NEXT> $ i4 = r0 get literal word at i9 <NEXT> r1 add word $ i4 <NEXT> i9 = i9 + 1 <NEXT> goto label4 <NEXT> if $ b11 > = 0 goto label5 <NEXT> label if i5 < = 0 goto label7 <NEXT> $ z0 = r0 next <NEXT> if $ z0 ! = 0 goto label6 <NEXT> goto label7 <NEXT> label $ i2 = i0 - i5 <NEXT> $ l3 = long $ i2 <NEXT> return $ l3 <NEXT> if $ z0 ! = 0 goto label6 <NEXT> label goto label1 <END>
<BEG> r0 = @ this <NEXT> r2 = org javaruntype type type r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org javaruntype typedef inner wildcard type def variable r0 <NEXT> $ r1 = r2 upper bound <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = javassist bytecode signature attribute r0 <NEXT> $ r1 = r4 get const pool <NEXT> r5 = javassist bytecode signature attribute r0 <NEXT> $ r2 = r5 get <NEXT> $ i0 = javassist bytecode byte array read u16bit $ r2 0 <NEXT> $ r3 = $ r1 get utf8 info $ i0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = javassist bytecode stackmap tracer r0 <NEXT> specialinvoke r2 throw bad bytecode i0 \ `` jsr\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = javassist ct behavior r0 <NEXT> $ r1 = r3 declare class <NEXT> $ r1 check modify <NEXT> r4 = javassist ct behavior r0 <NEXT> $ r2 = r4 method info <NEXT> return $ r2 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & 2 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & 4 <NEXT> if $ i1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = javax el e l manager r0 <NEXT> $ r2 = r5 get e l context <NEXT> r4 = new javax el bean name e l resolver <NEXT> specialinvoke r4 < init > r1 <NEXT> r6 = javax el e l resolver r4 <NEXT> $ r2 add e l resolver r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javax el e l manager r0 <NEXT> $ r2 = r3 get e l context <NEXT> $ r2 add e l resolver r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = javax el e l processor r0 <NEXT> $ r2 = r3 get value r1 class \ `` ljava lang object \ `` <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r2 instanceof java util resource bundle <NEXT> if $ z0 == 0 goto label1 <NEXT> return class \ `` ljava lang string \ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> $ r0 = javax json spi json provider provider <NEXT> $ r1 = $ r0 create object builder <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com sun mail auth md4 r0 <NEXT> specialinvoke r3 impl reset <NEXT> $ i0 = lengthof r1 <NEXT> r4 = com sun mail auth md4 r0 <NEXT> specialinvoke r4 engine update r1 0 $ i0 <NEXT> r2 = newarray byte [ 16 ] <NEXT> r5 = com sun mail auth md4 r0 <NEXT> specialinvoke r5 impl digest r2 0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r9 = com sun mail iap argument r0 <NEXT> $ r6 = r9 item <NEXT> r7 = new com sun mail iap n string <NEXT> specialinvoke r7 < init > null <NEXT> $ r6 add r7 <NEXT> goto label2 <NEXT> label r11 = com sun mail iap argument r0 <NEXT> return r11 <NEXT> if r1 ! = null goto label1 <NEXT> label r10 = com sun mail iap argument r0 <NEXT> $ r3 = r10 item <NEXT> r8 = new com sun mail iap n string <NEXT> $ r4 = com sun mail util a s c i i utility get byte r1 <NEXT> specialinvoke r8 < init > $ r4 <NEXT> $ r3 add r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com sun mail iap protocol r0 <NEXT> $ r2 = r3 handler <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = com sun mail imap idle manager r0 <NEXT> r4 die = 1 <NEXT> r5 = com sun mail imap idle manager r0 <NEXT> $ r1 = r5 logger <NEXT> $ r1 fine \ `` idle manager stopping\ `` <NEXT> r6 = com sun mail imap idle manager r0 <NEXT> $ r2 = r6 selector <NEXT> $ r2 wakeup <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = com sun mail imap i m a p folder r0 <NEXT> $ z0 = r3 open <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = new java lang illegal state exception <NEXT> specialinvoke r2 < init > \ `` this operation be not allow on an open folder\ `` <NEXT> throw r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r5 = new com sun mail imap i m a p folder $ 12 <NEXT> r6 = com sun mail imap i m a p folder r0 <NEXT> specialinvoke r5 < init > r6 <NEXT> r7 = com sun mail imap i m a p folder r0 <NEXT> r8 = com sun mail imap i m a p folder $ protocol command r5 <NEXT> $ r2 = r7 do optional command \ `` quota not supported\ <NEXT> $ r3 = javax mail quota [ ] $ r2 <NEXT> $ r4 = javax mail quota [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com sun mail imap i m a p folder r0 <NEXT> specialinvoke r2 set a c l r1 43 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new com sun mail imap i m a p folder $ 16 <NEXT> r7 = com sun mail imap i m a p folder r0 <NEXT> specialinvoke r6 < init > r7 r1 <NEXT> r8 = com sun mail imap i m a p folder r0 <NEXT> r9 = com sun mail imap i m a p folder $ protocol command r6 <NEXT> $ r3 = r8 do optional command \ `` acl not supported\ <NEXT> $ r4 = com sun mail imap right [ ] $ r3 <NEXT> $ r5 = com sun mail imap right [ ] $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r8 = com sun mail imap i m a p message r0 <NEXT> r8 check expunge <NEXT> r9 = com sun mail imap i m a p message r0 <NEXT> $ z0 = r9 body load <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r7 = specialinvoke r0 get content language <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r10 = com sun mail imap i m a p message r0 <NEXT> specialinvoke r10 load b o d y s t r u c t u r e <NEXT> r11 = com sun mail imap i m a p message r0 <NEXT> $ r1 = r11 b <NEXT> $ r2 = $ r1 language <NEXT> if $ r2 == null goto label2 <NEXT> r12 = com sun mail imap i m a p message r0 <NEXT> $ r3 = r12 b <NEXT> $ r4 = $ r3 language <NEXT> $ r5 = $ r4 clone <NEXT> $ r6 = java lang string [ ] $ r5 <NEXT> return $ r6 <NEXT> if $ r2 == null goto label2 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r4 = com sun mail imap i m a p message r0 <NEXT> r4 check expunge <NEXT> r5 = com sun mail imap i m a p message r0 <NEXT> $ z0 = r5 body load <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = specialinvoke r0 get header \ `` in- reply- to\ <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = com sun mail imap i m a p message r0 <NEXT> specialinvoke r6 load envelope <NEXT> r7 = com sun mail imap i m a p message r0 <NEXT> $ r1 = r7 envelope <NEXT> $ r2 = $ r1 in reply to <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun mail imap i m a p store r0 <NEXT> $ r1 = r2 proxy auth user <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> c0 = @ parameter1 <NEXT> r3 = com sun mail imap i m a p store r0 <NEXT> $ r2 = r3 new i m a p folder r1 c0 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r14 = com sun mail imap message cache r0 <NEXT> $ r1 = r14 seqnums <NEXT> if $ r1 ! = null goto label1 <NEXT> return i0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r15 = com sun mail imap message cache r0 <NEXT> $ r3 = r15 logger <NEXT> $ r2 = java util log level fine <NEXT> $ z0 = $ r3 be loggable $ r2 <NEXT> if $ z0 == 0 goto label2 <NEXT> r16 = com sun mail imap message cache r0 <NEXT> $ r6 = r16 logger <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r7 = r13 append \ `` msgnum \ `` <NEXT> $ r8 = $ r7 append i0 <NEXT> $ r9 = $ r8 append \ `` be seqnum \ `` <NEXT> r17 = com sun mail imap message cache r0 <NEXT> $ r10 = r17 seqnums <NEXT> $ i3 = i0 - 1 <NEXT> $ i4 = $ r10 [ $ i3 ] <NEXT> $ r11 = $ r9 append $ i4 <NEXT> $ r12 = $ r11 to string <NEXT> $ r6 fine $ r12 <NEXT> label r18 = com sun mail imap message cache r0 <NEXT> $ r4 = r18 seqnums <NEXT> $ i1 = i0 - 1 <NEXT> $ i2 = $ r4 [ $ i1 ] <NEXT> return $ i2 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r1 = @ parameter2 <NEXT> $ r4 = new java util array list <NEXT> specialinvoke $ r4 < init > <NEXT> if r0 ! = null goto label1 <NEXT> return $ r4 <NEXT> if r0 ! = null goto label1 <NEXT> label i4 = 0 <NEXT> label $ i1 = lengthof r0 <NEXT> if i4 > = $ i1 goto label7 <NEXT> $ r5 = r0 [ i4 ] <NEXT> if $ r5 == null goto label6 <NEXT> $ r6 = r0 [ i4 ] <NEXT> $ z0 = $ r6 instanceof com sun mail imap protocol fetch response <NEXT> if $ z0 == 0 goto label6 <NEXT> $ r7 = r0 [ i4 ] <NEXT> $ r8 = com sun mail imap protocol fetch response $ r7 <NEXT> $ i2 = $ r8 get number <NEXT> if $ i2 == i0 goto label3 <NEXT> goto label6 <NEXT> label i4 = i4 + 1 <NEXT> goto label2 <NEXT> if $ i2 == i0 goto label3 <NEXT> label $ r9 = r0 [ i4 ] <NEXT> r3 = com sun mail imap protocol fetch response $ r9 <NEXT> i5 = 0 <NEXT> label $ r10 = r3 item <NEXT> $ i3 = lengthof $ r10 <NEXT> if i5 > = $ i3 goto label6 <NEXT> $ r11 = r3 item <NEXT> $ r12 = $ r11 [ i5 ] <NEXT> $ z1 = r1 be instance $ r12 <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r13 = r3 item <NEXT> $ r14 = $ r13 [ i5 ] <NEXT> $ r15 = r1 cast $ r14 <NEXT> $ r4 add $ r15 <NEXT> label i5 = i5 + 1 <NEXT> goto label4 <NEXT> if i4 > = $ i1 goto label7 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = com sun mail imap protocol i m a p protocol r0 <NEXT> $ z0 = r1 rev1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun mail imap protocol i m a p protocol r0 <NEXT> $ r1 = r2 proxy auth user <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i2 = @ parameter3 <NEXT> r3 = com sun mail imap protocol i m a p protocol r0 <NEXT> $ r2 = r3 fetch body i0 r1 i1 i2 0 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = new java lang string buffer <NEXT> specialinvoke r10 < init > <NEXT> i4 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i4 > = $ i0 goto label3 <NEXT> if i4 < = 0 goto label2 <NEXT> r10 append \ <NEXT> label $ l3 = r1 [ i4 ] <NEXT> $ r6 = java lang string value of $ l3 <NEXT> r10 append $ r6 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i0 goto label3 <NEXT> label $ r4 = r10 to string <NEXT> r11 = com sun mail imap protocol i m a p protocol r0 <NEXT> r9 = specialinvoke r11 fetch $ r4 \ `` uid\ <NEXT> r12 = com sun mail imap protocol i m a p protocol r0 <NEXT> r12 notify response handler r9 <NEXT> $ i1 = lengthof r9 <NEXT> $ i2 = $ i1 - 1 <NEXT> $ r5 = r9 [ $ i2 ] <NEXT> r13 = com sun mail imap protocol i m a p protocol r0 <NEXT> r13 handle result $ r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com sun mail imap referral exception r0 <NEXT> $ r1 = r2 text <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com sun mail imap right r0 <NEXT> $ r2 = r3 right <NEXT> $ c0 = r1 right <NEXT> $ r2 [ $ c0 ] = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com sun mail pop3 p o p3 folder r0 <NEXT> $ z0 = r1 open <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return -1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r2 = com sun mail pop3 p o p3 folder r0 <NEXT> specialinvoke r2 check readable <NEXT> r3 = com sun mail pop3 p o p3 folder r0 <NEXT> $ i0 = r3 total <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r5 = com sun mail pop3 p o p3 folder r0 <NEXT> $ r2 = r5 store <NEXT> $ z0 = $ r2 finalize clean close <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label r6 = com sun mail pop3 p o p3 folder r0 <NEXT> r6 force close = $ z2 <NEXT> label r7 = com sun mail pop3 p o p3 folder r0 <NEXT> $ z1 = r7 open <NEXT> if $ z1 == 0 goto label4 <NEXT> r8 = com sun mail pop3 p o p3 folder r0 <NEXT> r8 close 0 <NEXT> label specialinvoke r0 finalize <NEXT> r9 = com sun mail pop3 p o p3 folder r0 <NEXT> r9 force close = 0 <NEXT> goto label6 <NEXT> label return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com sun mail pop3 p o p3 store r0 <NEXT> specialinvoke r4 check connect <NEXT> r3 = new com sun mail pop3 p o p3 folder <NEXT> r5 = com sun mail pop3 p o p3 store r0 <NEXT> specialinvoke r3 < init > r5 r1 <NEXT> r6 = javax mail folder r3 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = com sun mail smtp s m t p address fail exception r0 <NEXT> $ i0 = r1 rc <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com sun mail smtp s m t p message r0 <NEXT> r2 extension = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i6 = @ parameter2 <NEXT> r3 = com sun mail smtp s m t p output stream r0 <NEXT> $ i1 = r3 lastb <NEXT> if $ i1 ! = -1 goto label1 <NEXT> $ i7 = 10 <NEXT> goto label2 <NEXT> label i8 = $ i7 <NEXT> i9 = i0 <NEXT> i10 = i6 + i0 <NEXT> i11 = i0 <NEXT> label if i11 > = i10 goto label6 <NEXT> if i8 == 10 goto label4 <NEXT> if i8 ! = 13 goto label5 <NEXT> label $ b4 = r1 [ i11 ] <NEXT> if $ b4 ! = 46 goto label5 <NEXT> $ i5 = i11 - i9 <NEXT> specialinvoke r0 write r1 i9 $ i5 <NEXT> r5 = com sun mail smtp s m t p output stream r0 <NEXT> $ r2 = r5 out <NEXT> $ r2 write 46 <NEXT> i9 = i11 <NEXT> label i8 = r1 [ i11 ] <NEXT> i11 = i11 + 1 <NEXT> goto label3 <NEXT> label if i11 > = i10 goto label6 <NEXT> label $ i2 = i10 - i9 <NEXT> if $ i2 < = 0 goto label7 <NEXT> $ i3 = i10 - i9 <NEXT> specialinvoke r0 write r1 i9 $ i3 <NEXT> label return <NEXT> if $ i1 ! = -1 goto label1 <NEXT> label r4 = com sun mail smtp s m t p output stream r0 <NEXT> $ i7 = r4 lastb <END>
<BEG> r0 = @ this <NEXT> r2 = com sun mail util log mail handler r0 <NEXT> $ r1 = r2 push level <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun mail util log mail handler r0 <NEXT> $ r1 = r2 comparator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r3 = com sun mail util log mail handler $ tail name formatter of r1 <NEXT> r5 = com sun mail util log mail handler r0 <NEXT> r5 set subject $ r3 <NEXT> goto label2 <NEXT> label return <NEXT> if r1 == null goto label1 <NEXT> label r6 = com sun mail util log mail handler r0 <NEXT> specialinvoke r6 check access <NEXT> r4 = new java lang null pointer exception <NEXT> specialinvoke r4 < init > <NEXT> throw r4 <END>
<BEG> r0 = @ this <NEXT> r1 = com sun mail util mail connect exception r0 <NEXT> $ i0 = r1 port <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new com sun mail util mail logger <NEXT> r6 = com sun mail util mail logger r0 <NEXT> $ z0 = r6 debug <NEXT> r7 = com sun mail util mail logger r0 <NEXT> $ r4 = r7 out <NEXT> specialinvoke r5 < init > r1 r2 $ z0 $ r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util log level fine <NEXT> r3 = com sun mail util mail logger r0 <NEXT> r3 log $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = com sun mail util trace input stream r0 <NEXT> r1 trace = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com sun mail util u u decoder stream r0 <NEXT> specialinvoke r1 read prefix <NEXT> r2 = com sun mail util u u decoder stream r0 <NEXT> $ i0 = r2 mode <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = com sun mail util u u encoder stream r0 <NEXT> r2 name = r1 <NEXT> r3 = com sun mail util u u encoder stream r0 <NEXT> r3 mode = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javax mail event message change event r0 <NEXT> $ r1 = r2 msg <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = javax mail event message count event r0 <NEXT> $ r1 = r2 msg <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = javax mail fetch profile r0 <NEXT> $ r2 = r6 special <NEXT> if $ r2 ! = null goto label1 <NEXT> $ r5 = newarray javax mail fetch profile $ item [ 0 ] <NEXT> return $ r5 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r7 = javax mail fetch profile r0 <NEXT> $ r3 = r7 special <NEXT> $ i0 = $ r3 size <NEXT> r1 = newarray javax mail fetch profile $ item [ $ i0 ] <NEXT> r8 = javax mail fetch profile r0 <NEXT> $ r4 = r8 special <NEXT> $ r4 copy into r1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = javax mail flag r0 <NEXT> $ r2 = r6 user_flags <NEXT> if $ r2 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r2 ! = null goto label1 <NEXT> label r7 = javax mail flag r0 <NEXT> $ r4 = r7 user_flags <NEXT> $ r3 = java util locale english <NEXT> $ r5 = r1 to low case $ r3 <NEXT> $ z0 = $ r4 contain key $ r5 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = javax mail folder r0 <NEXT> $ r3 = r8 folder listener <NEXT> if $ r3 == null goto label1 <NEXT> r7 = new javax mail event folder event <NEXT> r9 = javax mail folder r0 <NEXT> specialinvoke r7 < init > r0 r9 r1 3 <NEXT> r10 = javax mail folder r0 <NEXT> $ r6 = r10 folder listener <NEXT> r11 = javax mail folder r0 <NEXT> r12 = javax mail event mail event r7 <NEXT> specialinvoke r11 queue event r12 $ r6 <NEXT> label r13 = javax mail folder r0 <NEXT> $ r4 = r13 store <NEXT> r14 = javax mail folder r0 <NEXT> $ r4 notify folder rename listener r14 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = javax mail internet content disposition r0 <NEXT> $ r1 = r2 list <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r11 = javax mail internet content type r0 <NEXT> $ r1 = r11 primary type <NEXT> if $ r1 == null goto label1 <NEXT> r12 = javax mail internet content type r0 <NEXT> $ r2 = r12 sub type <NEXT> if $ r2 ! = null goto label2 <NEXT> label return \ `` \ `` <NEXT> if $ r2 ! = null goto label2 <NEXT> label r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> r13 = javax mail internet content type r0 <NEXT> $ r4 = r13 primary type <NEXT> $ r5 = r10 append $ r4 <NEXT> $ r6 = $ r5 append 47 <NEXT> r14 = javax mail internet content type r0 <NEXT> $ r7 = r14 sub type <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r13 = javax mail internet internet header r0 <NEXT> r3 = r13 get header r1 <NEXT> if r3 ! = null goto label1 <NEXT> return null <NEXT> if r3 ! = null goto label1 <NEXT> label $ i0 = lengthof r3 <NEXT> if $ i0 == 1 goto label2 <NEXT> if r2 ! = null goto label3 <NEXT> label $ r5 = r3 [ 0 ] <NEXT> return $ r5 <NEXT> if r2 ! = null goto label3 <NEXT> label r12 = new java lang string buffer <NEXT> $ r7 = r3 [ 0 ] <NEXT> specialinvoke r12 < init > $ r7 <NEXT> i2 = 1 <NEXT> label $ i1 = lengthof r3 <NEXT> if i2 > = $ i1 goto label5 <NEXT> r12 append r2 <NEXT> $ r10 = r3 [ i2 ] <NEXT> r12 append $ r10 <NEXT> i2 = i2 + 1 <NEXT> goto label4 <NEXT> if i2 > = $ i1 goto label5 <NEXT> label $ r8 = r12 to string <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new javax mail internet internet header $ match string enum <NEXT> r5 = javax mail internet internet header r0 <NEXT> $ r3 = r5 header <NEXT> specialinvoke r4 < init > $ r3 r1 0 <NEXT> r6 = java util enumeration r4 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r4 = javax mail internet mime message r0 <NEXT> $ r1 = r4 flag <NEXT> $ r2 = $ r1 clone <NEXT> $ r3 = javax mail flag $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = javax mail internet parameter list r0 <NEXT> $ r1 = r2 to string 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = javax mail internet preencoded mime body part r0 <NEXT> $ r1 = r2 encode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = javax mail message r0 <NEXT> $ z0 = r1 expunge <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = javax mail provider r0 <NEXT> $ r1 = r2 class name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = javax mail search address term r0 <NEXT> $ r1 = r2 address <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = javax mail service r0 <NEXT> r4 connect r1 -1 r2 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = javax mail session r0 <NEXT> $ r1 = r3 get property \ `` mail store protocol\ `` <NEXT> r4 = javax mail session r0 <NEXT> $ r2 = r4 get store $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = javax mail session r0 <NEXT> $ r2 = r5 auth table <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = javax mail password authentication $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray javax mail folder [ 1 ] <NEXT> r3 = javax mail store r0 <NEXT> $ r2 = r3 get default folder <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = javax mail store r0 <NEXT> $ r4 = r8 folder listener <NEXT> if $ r4 ! = null goto label1 <NEXT> return <NEXT> if $ r4 ! = null goto label1 <NEXT> label r7 = new javax mail event folder event <NEXT> specialinvoke r7 < init > r0 r1 r2 3 <NEXT> r9 = javax mail store r0 <NEXT> $ r6 = r9 folder listener <NEXT> r10 = javax mail store r0 <NEXT> r11 = javax mail event mail event r7 <NEXT> r10 queue event r11 $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = javax mail transport r0 <NEXT> $ r2 = r6 transport listener <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new java util vector <NEXT> specialinvoke r5 < init > <NEXT> r7 = javax mail transport r0 <NEXT> r7 transport listener = r5 <NEXT> label r8 = javax mail transport r0 <NEXT> $ r3 = r8 transport listener <NEXT> $ r3 add element r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r5 = com sun tool xjc runtime default j a x b context impl r0 <NEXT> $ r1 = r5 grammar <NEXT> if $ r1 ! = null goto label1 <NEXT> r6 = com sun tool xjc runtime default j a x b context impl r0 <NEXT> $ r3 = r6 gi <NEXT> $ r4 = $ r3 get grammar <NEXT> r7 = com sun tool xjc runtime default j a x b context impl r0 <NEXT> r7 grammar = $ r4 <NEXT> label r8 = com sun tool xjc runtime default j a x b context impl r0 <NEXT> $ r2 = r8 grammar <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new com sun codemodel j assignment <NEXT> specialinvoke r5 < init > r1 r2 <NEXT> r6 = com sun codemodel j block r0 <NEXT> specialinvoke r6 insert r5 <NEXT> r7 = com sun codemodel j block r0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new com sun codemodel j switch <NEXT> specialinvoke r5 < init > r1 <NEXT> r6 = com sun codemodel j block r0 <NEXT> $ r3 = specialinvoke r6 insert r5 <NEXT> $ r4 = com sun codemodel j switch $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r3 = new com sun codemodel j return <NEXT> specialinvoke r3 < init > null <NEXT> r4 = com sun codemodel j block r0 <NEXT> specialinvoke r4 insert r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com sun codemodel class type class <NEXT> r4 = com sun codemodel j code model r0 <NEXT> $ r3 = r4 _class r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com sun codemodel j code model r0 <NEXT> r2 build r1 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = com sun codemodel j conditional r0 <NEXT> $ r1 = r5 _else <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new com sun codemodel j block <NEXT> specialinvoke r4 < init > <NEXT> r6 = com sun codemodel j conditional r0 <NEXT> r6 _else = r4 <NEXT> label r7 = com sun codemodel j conditional r0 <NEXT> $ r2 = r7 _else <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun codemodel j define class r0 <NEXT> $ r1 = r2 method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = com sun codemodel j define class r0 <NEXT> $ r1 = r6 jdoc <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = new com sun codemodel j doc comment <NEXT> r7 = com sun codemodel j define class r0 <NEXT> $ r4 = r7 owner <NEXT> specialinvoke r5 < init > $ r4 <NEXT> r8 = com sun codemodel j define class r0 <NEXT> r8 jdoc = r5 <NEXT> label r9 = com sun codemodel j define class r0 <NEXT> $ r2 = r9 jdoc <NEXT> return $ r2 <END>
<BEG> $ r0 = com sun codemodel j expr __super <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun codemodel j method r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = com sun codemodel j package r0 <NEXT> $ r1 = r3 resource <NEXT> $ r2 = $ r1 iterator <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun codemodel j package r0 <NEXT> $ r1 = r2 name <NEXT> $ i0 = $ r1 length <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun codemodel j class r0 <NEXT> $ r1 = r2 erasure <NEXT> r3 = com sun codemodel j type $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = com sun codemodel j type var r0 <NEXT> $ r2 = r11 bound <NEXT> if $ r2 == null goto label1 <NEXT> r10 = new java lang illegal argument exception <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r5 = r9 append \ `` type variable have an exist class bound \ `` <NEXT> r12 = com sun codemodel j type var r0 <NEXT> $ r6 = r12 bound <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke r10 < init > $ r8 <NEXT> throw r10 <NEXT> if $ r2 == null goto label1 <NEXT> label r13 = com sun codemodel j type var r0 <NEXT> r13 bound = r1 <NEXT> r14 = com sun codemodel j type var r0 <NEXT> return r14 <END>
<BEG> r0 = @ this <NEXT> $ r2 = r0 get class <NEXT> r1 = $ r2 get name <NEXT> label $ r3 = java lang class for name r1 <NEXT> $ r4 = $ r3 new instance <NEXT> $ r5 = com sun org apache xml internal resolver catalog $ r4 <NEXT> r42 = com sun org apache xml internal resolver catalog $ r5 <NEXT> r57 = com sun org apache xml internal resolver catalog r0 <NEXT> $ r6 = r57 catalog manager <NEXT> r42 set catalog manager $ r6 <NEXT> r58 = com sun org apache xml internal resolver catalog r0 <NEXT> r58 copy reader r42 <NEXT> label return r42 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 start with \ `` \ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r16 = new java net url <NEXT> $ r17 = new java lang string builder <NEXT> specialinvoke $ r17 < init > <NEXT> $ r18 = $ r17 append \ `` file \ `` <NEXT> $ r19 = $ r18 append r0 <NEXT> $ r20 = $ r19 to string <NEXT> specialinvoke $ r16 < init > $ r20 <NEXT> return $ r16 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r1 = java lang system get property \ `` user dir\ `` <NEXT> r1 replace 92 47 <NEXT> $ z1 = r1 end with \ `` \ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r10 = new java net url <NEXT> $ r11 = new java lang string builder <NEXT> specialinvoke $ r11 < init > <NEXT> $ r12 = $ r11 append \ `` file \ `` <NEXT> $ r13 = $ r12 append r1 <NEXT> $ r14 = $ r13 append r0 <NEXT> $ r15 = $ r14 to string <NEXT> specialinvoke $ r10 < init > $ r15 <NEXT> return $ r10 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r3 = new java net url <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append \ `` file \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 append \ `` \ `` <NEXT> $ r8 = $ r7 append r0 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r3 < init > $ r9 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r3 = com sun org apache xml internal resolver tool resolve parser r0 <NEXT> $ r1 = r3 catalog resolver <NEXT> $ r2 = $ r1 get catalog <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = com sun org apache xml internal resolver tool resolve x m l filter r0 <NEXT> $ r1 = r3 catalog resolver <NEXT> $ r2 = $ r1 get catalog <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> r14 = com sun tool jxc gen config n g c c runtime r0 <NEXT> $ r6 = r14 att stack <NEXT> r12 = new com sun tool jxc gen config attribute impl <NEXT> specialinvoke r12 < init > r4 <NEXT> r15 = com sun tool jxc gen config n g c c runtime r0 <NEXT> r15 current atts = r12 <NEXT> $ r6 push r12 <NEXT> r16 = com sun tool jxc gen config n g c c runtime r0 <NEXT> $ r9 = r16 ns effective stack <NEXT> r13 = new java lang integer <NEXT> r17 = com sun tool jxc gen config n g c c runtime r0 <NEXT> $ i0 = r17 ns effective ptr <NEXT> specialinvoke r13 < init > $ i0 <NEXT> $ r9 push r13 <NEXT> r18 = com sun tool jxc gen config n g c c runtime r0 <NEXT> $ r11 = r18 namespaces <NEXT> $ i1 = $ r11 size <NEXT> r19 = com sun tool jxc gen config n g c c runtime r0 <NEXT> r19 ns effective ptr = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com sun tool xjc model c element info r0 <NEXT> $ r1 = r2 class name <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if z0 == 0 goto label1 <NEXT> r2 = com sun tool xjc model c property info r0 <NEXT> r2 public name = r1 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r3 = com sun tool xjc model c property info r0 <NEXT> r3 private name = r1 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com sun tool xjc option r0 <NEXT> $ r2 = specialinvoke r3 file to input source r1 <NEXT> r4 = com sun tool xjc option r0 <NEXT> r4 add grammar $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = com sun tool xjc outline class outline r0 <NEXT> $ r2 = r5 target <NEXT> r1 = $ r2 get base class <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label r6 = com sun tool xjc outline class outline r0 <NEXT> $ r3 = r6 parent <NEXT> $ r4 = $ r3 get clazz r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 equal \ `` http java sun com xml n jaxb xjc\ `` <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r4 = com sun tool xjc reader abstract extension bind checker r0 <NEXT> $ r2 = r4 option <NEXT> $ r3 = $ r2 plugin u r be <NEXT> $ z1 = $ r3 contain r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r1 get system id <NEXT> r0 set attribute n s \ `` http www sun com xmlns jaxb dom-location\ <NEXT> $ i0 = r1 get line number <NEXT> $ r3 = java lang integer to string $ i0 <END>
<BEG> r0 = @ this <NEXT> r11 = com sun tool xjc reader gbind connect component r0 <NEXT> $ r1 = r11 element <NEXT> r8 = $ r1 to string <NEXT> r12 = com sun tool xjc reader gbind connect component r0 <NEXT> $ z0 = r12 be require <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = new java lang string builder <NEXT> specialinvoke r9 < init > <NEXT> $ r6 = r9 append r8 <NEXT> $ r7 = $ r6 append 33 <NEXT> r8 = $ r7 to string <NEXT> label r13 = com sun tool xjc reader gbind connect component r0 <NEXT> $ z1 = r13 be collection <NEXT> if $ z1 == 0 goto label2 <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r3 = r10 append r8 <NEXT> $ r4 = $ r3 append 42 <NEXT> r8 = $ r4 to string <NEXT> label return r8 <END>
<BEG> r0 = @ this <NEXT> return \ `` #sink\ `` <END>
<BEG> r0 = @ this <NEXT> r7 = com sun tool xjc reader internalizer d o m forest r0 <NEXT> $ r1 = r7 core <NEXT> $ r2 = $ r1 value <NEXT> r8 = com sun tool xjc reader internalizer d o m forest r0 <NEXT> $ r3 = r8 core <NEXT> $ i0 = $ r3 size <NEXT> $ r4 = newarray org w3c dom document [ $ i0 ] <NEXT> $ r5 = $ r2 to array $ r4 <NEXT> $ r6 = org w3c dom document [ ] $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang illegal state exception <NEXT> specialinvoke $ r2 < init > <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun tool xjc reader xmlschema bindinfo bind info r0 <NEXT> $ r1 = r2 builder <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = com sun tool xjc reader xmlschema class selector r0 <NEXT> r6 = com sun xml xsom x s component r1 <NEXT> $ r3 = r5 _bind to class r6 r2 0 <NEXT> $ r4 = com sun tool xjc model c element $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label $ l0 = java lang long parse long r1 <NEXT> r17 = com sun tool xjc x j c2 task r0 <NEXT> r17 stack size = $ l0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = com sun tool xjc x j c2 task r0 <NEXT> $ r1 = r2 option <NEXT> $ r1 read only = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r2 = com sun xml dtdparser d t d parser message <NEXT> $ r3 = r1 to string <NEXT> $ z0 = $ r2 be locale supported $ r3 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r9 = new org xml sax s a x exception <NEXT> $ r7 = com sun xml dtdparser d t d parser message <NEXT> r10 = com sun xml dtdparser d t d parser r0 <NEXT> $ r6 = r10 locale <NEXT> $ r5 = newarray java lang object [ 1 ] <NEXT> $ r5 [ 0 ] = r1 <NEXT> $ r8 = $ r7 get message $ r6 \ `` p-078\ <NEXT> specialinvoke r9 < init > $ r8 <NEXT> throw r9 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r11 = com sun xml dtdparser d t d parser r0 <NEXT> r11 locale = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com sun xml dtdparser d t d parser r0 <NEXT> r4 dtd handler = r1 <NEXT> if r1 == null goto label1 <NEXT> r3 = new com sun xml dtdparser d t d parser $ 1 <NEXT> r5 = com sun xml dtdparser d t d parser r0 <NEXT> specialinvoke r3 < init > r5 <NEXT> r6 = org xml sax locator r3 <NEXT> r1 set document locator r6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r5 = @ parameter0 <NEXT> r7 = com sun xml dtdparser message catalog r0 <NEXT> $ r1 = specialinvoke r7 canonicalize r5 <NEXT> if $ r1 == null goto label3 <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof $ r1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r2 = $ r1 [ i1 ] <NEXT> r8 = com sun xml dtdparser message catalog r0 <NEXT> $ z0 = r8 be locale supported $ r2 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r3 = $ r1 [ i1 ] <NEXT> r9 = com sun xml dtdparser message catalog r0 <NEXT> $ r4 = specialinvoke r9 get locale $ r3 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = com sun xml dtdparser simple hashtable r0 <NEXT> $ i0 = r1 count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r6 = com sun xml dtdparser simple hashtable r0 <NEXT> $ r1 = r6 current <NEXT> if $ r1 == null goto label1 <NEXT> return 1 <NEXT> if $ r1 == null goto label1 <NEXT> label r7 = com sun xml dtdparser simple hashtable r0 <NEXT> $ i1 = r7 current bucket <NEXT> r8 = com sun xml dtdparser simple hashtable r0 <NEXT> $ r2 = r8 table <NEXT> $ i0 = lengthof $ r2 <NEXT> if $ i1 > = $ i0 goto label2 <NEXT> r9 = com sun xml dtdparser simple hashtable r0 <NEXT> $ r3 = r9 table <NEXT> r10 = com sun xml dtdparser simple hashtable r0 <NEXT> $ i2 = r10 current bucket <NEXT> $ i3 = $ i2 + 1 <NEXT> r11 = com sun xml dtdparser simple hashtable r0 <NEXT> r11 current bucket = $ i3 <NEXT> $ r4 = $ r3 [ $ i2 ] <NEXT> r12 = com sun xml dtdparser simple hashtable r0 <NEXT> r12 current = $ r4 <NEXT> r13 = com sun xml dtdparser simple hashtable r0 <NEXT> $ r5 = r13 current <NEXT> if $ r5 == null goto label1 <NEXT> if $ i1 > = $ i0 goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = com sun xml xsom impl attribute holder r0 <NEXT> $ r3 = r5 attribute <NEXT> $ r3 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com sun xml xsom impl parser n g c c runtime ex r0 <NEXT> $ r2 = r4 parser <NEXT> $ r3 = $ r2 patcher manager <NEXT> $ r3 add patcher r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r11 = com sun xml xsom impl schema set impl r0 <NEXT> $ r3 = r11 schema <NEXT> $ r4 = $ r3 get r1 <NEXT> r9 = com sun xml xsom impl schema impl $ r4 <NEXT> if r9 ! = null goto label1 <NEXT> r10 = new com sun xml xsom impl schema impl <NEXT> r12 = com sun xml xsom impl schema set impl r0 <NEXT> specialinvoke r10 < init > r12 r2 r1 <NEXT> r9 = r10 <NEXT> r13 = com sun xml xsom impl schema set impl r0 <NEXT> $ r6 = r13 schema <NEXT> $ r6 put r1 r10 <NEXT> r14 = com sun xml xsom impl schema set impl r0 <NEXT> $ r8 = r14 schemas2 <NEXT> $ r8 add r10 <NEXT> label return r9 <END>
<BEG> r0 = @ this <NEXT> r3 = com sun xml xsom parser x s o m parser r0 <NEXT> $ r1 = r3 context <NEXT> $ r2 = $ r1 get result <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = com sun xml xsom impl scd iterators singleton r1 <NEXT> r6 = com sun xml xsom scd r0 <NEXT> r2 = r6 select $ r3 <NEXT> $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = r2 next <NEXT> $ r5 = com sun xml xsom x s component $ r4 <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i1 = r1 get modifier <NEXT> $ i2 = $ i1 & -1025 <NEXT> $ i3 = $ i2 & -257 <NEXT> $ r6 = r1 get name <NEXT> $ r7 = r1 get return type <NEXT> $ r8 = org jboss classfilewriter util descriptor utils make descriptor $ r7 <NEXT> $ r9 = r1 get parameter type <NEXT> $ r10 = org jboss classfilewriter util descriptor utils parameter descriptor $ r9 <NEXT> r23 = org jboss classfilewriter class file r0 <NEXT> r2 = r23 add method $ i3 $ r6 $ r8 $ r10 <NEXT> r18 = r1 get exception type <NEXT> i4 = lengthof r18 <NEXT> i5 = 0 <NEXT> label if i5 > = i4 goto label2 <NEXT> r19 = r18 [ i5 ] <NEXT> $ r17 = newarray java lang class [ 1 ] <NEXT> $ r17 [ 0 ] = r19 <NEXT> r2 add check exception $ r17 <NEXT> i5 = i5 + 1 <NEXT> goto label1 <NEXT> label if i5 > = i4 goto label2 <NEXT> label r20 = r1 get declare annotation <NEXT> i6 = lengthof r20 <NEXT> i7 = 0 <NEXT> label if i7 > = i6 goto label4 <NEXT> r21 = r20 [ i7 ] <NEXT> $ r14 = r2 get runtime visible annotation attribute <NEXT> r24 = org jboss classfilewriter class file r0 <NEXT> $ r15 = r24 const pool <NEXT> $ r16 = org jboss classfilewriter annotation annotation builder create annotation $ r15 r21 <NEXT> $ r14 add annotation $ r16 <NEXT> i7 = i7 + 1 <NEXT> goto label3 <NEXT> label if i7 > = i6 goto label4 <NEXT> label i8 = 0 <NEXT> r22 = r1 get parameter annotation <NEXT> i9 = lengthof r22 <NEXT> i10 = 0 <NEXT> label if i10 > = i9 goto label8 <NEXT> r3 = r22 [ i10 ] <NEXT> i0 = lengthof r3 <NEXT> i11 = 0 <NEXT> label if i11 > = i0 goto label7 <NEXT> r5 = r3 [ i11 ] <NEXT> $ r11 = r2 get runtime visible parameter annotation attribute <NEXT> r25 = org jboss classfilewriter class file r0 <NEXT> $ r12 = r25 const pool <NEXT> $ r13 = org jboss classfilewriter annotation annotation builder create annotation $ r12 r5 <NEXT> $ r11 add annotation i8 $ r13 <NEXT> i11 = i11 + 1 <NEXT> goto label6 <NEXT> label if i11 > = i0 goto label7 <NEXT> label i8 = i8 + 1 <NEXT> i10 = i10 + 1 <NEXT> goto label5 <NEXT> label if i10 > = i9 goto label8 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org jboss classfilewriter class file r0 <NEXT> $ r3 = specialinvoke r4 define internal r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org jboss classfilewriter code stack frame r0 <NEXT> $ r3 = r8 stack state <NEXT> r2 = $ r3 push r1 <NEXT> r7 = new org jboss classfilewriter code stack frame <NEXT> r9 = org jboss classfilewriter code stack frame r0 <NEXT> $ r5 = r9 local variable state <NEXT> r10 = org jboss classfilewriter code stack frame r0 <NEXT> $ r6 = specialinvoke r10 type no local change r2 <NEXT> specialinvoke r7 < init > r2 $ r5 $ r6 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org jboss classfilewriter code stack frame r0 <NEXT> $ r3 = r8 stack state <NEXT> r2 = $ r3 push r1 <NEXT> r7 = new org jboss classfilewriter code stack frame <NEXT> r9 = org jboss classfilewriter code stack frame r0 <NEXT> $ r5 = r9 local variable state <NEXT> r10 = org jboss classfilewriter code stack frame r0 <NEXT> $ r6 = specialinvoke r10 type no local change r2 <NEXT> specialinvoke r7 < init > r2 $ r5 $ r6 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r7 = org jboss classfilewriter code stack frame r0 <NEXT> $ r2 = r7 stack state <NEXT> r1 = $ r2 pop 1 <NEXT> r6 = new org jboss classfilewriter code stack frame <NEXT> r8 = org jboss classfilewriter code stack frame r0 <NEXT> $ r4 = r8 local variable state <NEXT> r9 = org jboss classfilewriter code stack frame r0 <NEXT> $ r5 = specialinvoke r9 type no local change r1 <NEXT> specialinvoke r6 < init > r1 $ r4 $ r5 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = org jboss classfilewriter constpool const pool entry type r0 <NEXT> $ i0 = r1 slot <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = com machinepublishers glass ui monocle monocle window r0 <NEXT> $ i0 = r1 id <NEXT> $ l1 = long $ i0 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> label r9 = com machinepublishers jbrowserdriver j browser driver r0 <NEXT> $ r2 = r9 lock <NEXT> $ r3 = $ r2 validate <NEXT> entermonitor $ r3 <NEXT> label r10 = com machinepublishers jbrowserdriver j browser driver r0 <NEXT> $ r4 = r10 remote <NEXT> $ r4 page wait <NEXT> exitmonitor $ r3 <NEXT> label goto label6 <NEXT> label goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 split \ <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r2 [ i1 ] <NEXT> r4 = r3 split \ `` \ `` <NEXT> r11 = com jcabi log multicolor layout r0 <NEXT> $ r9 = r11 color <NEXT> $ r8 = r4 [ 0 ] <NEXT> $ r7 = r4 [ 1 ] <NEXT> $ r9 put $ r8 $ r7 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label r12 = com jcabi log multicolor layout r0 <NEXT> $ r5 = r12 base <NEXT> if $ r5 == null goto label3 <NEXT> r13 = com jcabi log multicolor layout r0 <NEXT> $ r6 = r13 base <NEXT> r14 = com jcabi log multicolor layout r0 <NEXT> r14 set conversion pattern $ r6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r3 = org jdom2 element r0 <NEXT> $ r1 = r3 attribute <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org jdom2 element r0 <NEXT> $ r2 = r4 attribute <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org jdom2 element r0 <NEXT> $ r1 = r3 additional namespaces <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org jdom2 element r0 <NEXT> $ r2 = r4 additional namespaces <NEXT> $ z0 = $ r2 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org jdom2 element r0 <NEXT> $ r2 = r4 attribute <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org jdom2 element r0 <NEXT> $ r3 = r5 attribute <NEXT> $ r3 sort r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> throw r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org jdom2 input s a x builder r0 <NEXT> r1 ignore white = z0 <NEXT> r2 = org jdom2 input s a x builder r0 <NEXT> r2 engine = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org jdom2 output d o m outputter r0 <NEXT> $ r3 = r7 processor <NEXT> r8 = org jdom2 output d o m outputter r0 <NEXT> $ r2 = r8 adapter <NEXT> $ r4 = $ r2 create document <NEXT> r9 = org jdom2 output d o m outputter r0 <NEXT> $ r5 = r9 format <NEXT> $ r6 = $ r3 process $ r4 $ r5 r1 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r8 = org jdom2 util namespace stack r0 <NEXT> $ r1 = r8 add <NEXT> r9 = org jdom2 util namespace stack r0 <NEXT> $ i0 = r9 depth <NEXT> $ r2 = $ r1 [ $ i0 ] <NEXT> $ i1 = lengthof $ r2 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> $ r6 = org jdom2 util namespace stack emptyiter <NEXT> return $ r6 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label r7 = new org jdom2 util namespace stack $ namespace iterable <NEXT> r10 = org jdom2 util namespace stack r0 <NEXT> $ r4 = r10 add <NEXT> r11 = org jdom2 util namespace stack r0 <NEXT> $ i2 = r11 depth <NEXT> $ r5 = $ r4 [ $ i2 ] <NEXT> specialinvoke r7 < init > $ r5 1 <NEXT> r12 = java lang iterable r7 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r8 = org jdom2 util namespace stack r0 <NEXT> $ r1 = r8 add <NEXT> r9 = org jdom2 util namespace stack r0 <NEXT> $ i0 = r9 depth <NEXT> $ r2 = $ r1 [ $ i0 ] <NEXT> $ i1 = lengthof $ r2 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> $ r6 = org jdom2 util namespace stack emptyiter <NEXT> return $ r6 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label r7 = new org jdom2 util namespace stack $ namespace iterable <NEXT> r10 = org jdom2 util namespace stack r0 <NEXT> $ r4 = r10 add <NEXT> r11 = org jdom2 util namespace stack r0 <NEXT> $ i2 = r11 depth <NEXT> $ r5 = $ r4 [ $ i2 ] <NEXT> specialinvoke r7 < init > $ r5 0 <NEXT> r12 = java lang iterable r7 <NEXT> return r12 <END>
<BEG> c0 = @ parameter0 <NEXT> $ r0 = org jdom2 verifier charflags <NEXT> $ b1 = $ r0 [ c0 ] <NEXT> $ b2 = $ b1 & 2 <NEXT> $ b3 = byte $ b2 <NEXT> if 0 == $ b3 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if 0 == $ b3 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r6 = new java lang null pointer exception <NEXT> specialinvoke r6 < init > \ `` null qname\ `` <NEXT> throw r6 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = org jdom2 xpath x path builder r0 <NEXT> $ r2 = r7 variable <NEXT> if $ r2 ! = null goto label2 <NEXT> return null <NEXT> if $ r2 ! = null goto label2 <NEXT> label r8 = org jdom2 xpath x path builder r0 <NEXT> $ r3 = r8 variable <NEXT> $ r4 = $ r3 get r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey api client abstract client request adapter r0 <NEXT> $ r1 = r2 cra <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey api client async view resource r0 <NEXT> $ r1 = r2 u <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang illegal state exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey api client filter client filter r0 <NEXT> $ r1 = r2 next <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey servlet init internal localization message localizer <NEXT> $ r3 = org glassfish jersey servlet init internal localization message localizable j e r s e y_ a p p_ n o_ m a p p i n g_ o r_ a n n o t a t i o n r0 r1 <NEXT> $ r4 = $ r2 localize $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey servlet internal localization message localizer <NEXT> $ r3 = org glassfish jersey servlet internal localization message localizable s e r v l e t_ p a t h_ m i s m a t c h r0 r1 <NEXT> $ r4 = $ r2 localize $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = org glassfish jersey servlet servlet container r0 <NEXT> $ r1 = r5 filter config <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org glassfish jersey servlet servlet container r0 <NEXT> $ r3 = r6 filter config <NEXT> $ r4 = $ r3 get servlet context <NEXT> return $ r4 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r2 = specialinvoke r0 get servlet context <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = r1 length <NEXT> jersey repackaged com google common base precondition check position index i0 i1 <NEXT> i4 = i0 <NEXT> label if i4 > = i1 goto label3 <NEXT> $ c3 = r1 char at i4 <NEXT> r2 = jersey repackaged com google common base char matcher r0 <NEXT> $ z0 = r2 match $ c3 <NEXT> if $ z0 == 0 goto label2 <NEXT> return i4 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> label if i4 > = i1 goto label3 <NEXT> label return -1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey jaxb internal localization message localizer <NEXT> $ r2 = org glassfish jersey jaxb internal localization message localizable s a x_ c a n n o t_ d i s a b l e_ p a r a m e t e r_ e n t i t y_ p r o c e s s i n g_ f e a t u r e r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey jaxb internal localization message localizer <NEXT> $ r2 = org glassfish jersey jaxb internal localization message localizable e r r o r_ u n m a r s h a l l i n g_ j a x b r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> $ r0 = org glassfish jersey jaxb internal localization message localizer <NEXT> $ r1 = org glassfish jersey jaxb internal localization message localizable u n a b l e_ t o_ s e c u r e_ x m l_ t r a n s f o r m e r_ p r o c e s s i n g <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey api j response r0 <NEXT> $ r1 = r2 status type <NEXT> $ i0 = $ r1 get status code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey api j response r0 <NEXT> $ r1 = r2 entity <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey api param exception r0 <NEXT> $ r1 = r2 parameter type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = com sun jersey server impl model method resource method r0 <NEXT> $ r4 = r7 consume mime <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r5 = r2 next <NEXT> r3 = javax w r core medium type $ r5 <NEXT> $ r6 = r3 get type <NEXT> $ z1 = $ r6 equal \ `` * \ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r1 be compatible r3 <NEXT> if $ z2 == 0 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i8 = @ parameter1 <NEXT> r6 = com sun jersey server impl uri rule automata trie arc r0 <NEXT> $ r2 = r6 code <NEXT> $ i0 = lengthof $ r2 <NEXT> $ i1 = i8 + $ i0 <NEXT> $ i2 = r1 length <NEXT> if $ i1 < = $ i2 goto label1 <NEXT> return 0 <NEXT> if $ i1 < = $ i2 goto label1 <NEXT> label i9 = 0 <NEXT> label r7 = com sun jersey server impl uri rule automata trie arc r0 <NEXT> $ r3 = r7 code <NEXT> $ i3 = lengthof $ r3 <NEXT> if i9 > = $ i3 goto label4 <NEXT> r8 = com sun jersey server impl uri rule automata trie arc r0 <NEXT> $ r5 = r8 code <NEXT> $ c6 = $ r5 [ i9 ] <NEXT> $ i5 = i8 <NEXT> i8 = i8 + 1 <NEXT> $ c7 = r1 char at $ i5 <NEXT> if $ c6 == $ c7 goto label3 <NEXT> label i9 = i9 + 1 <NEXT> goto label2 <NEXT> if i9 > = $ i3 goto label4 <NEXT> label r9 = com sun jersey server impl uri rule automata trie arc r0 <NEXT> $ r4 = r9 code <NEXT> $ i4 = lengthof $ r4 <NEXT> return $ i4 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey server impl uri rule base rule r0 <NEXT> $ r1 = r2 template <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r2 = r0 get raw path <NEXT> $ z1 = $ r2 contain \ `` \ `` <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ r9 = r0 normalize <NEXT> return $ r9 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label $ r3 = r0 get raw path <NEXT> r1 = com sun jersey server impl uri uri helper remove dot segment $ r3 z0 <NEXT> $ r4 = r0 get raw path <NEXT> $ z2 = r1 equal $ r4 <NEXT> if $ z2 == 0 goto label2 <NEXT> return r0 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ r5 = javax w r core uri builder from uri r0 <NEXT> $ r6 = $ r5 replace path r1 <NEXT> $ r7 = newarray java lang object [ 0 ] <NEXT> $ r8 = $ r6 build $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun jersey server wadl generator resourcedoc model method doc type r0 <NEXT> $ r1 = r2 comment text <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com sun jersey server wadl generator resourcedoc model method doc type r0 <NEXT> r2 comment text = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com sun jersey spi container adapt container response r0 <NEXT> $ r2 = r3 acr <NEXT> $ r2 map mappable container exception r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = com sun research w wadl application r0 <NEXT> $ r1 = r5 doc <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r6 = com sun research w wadl application r0 <NEXT> r6 doc = r4 <NEXT> label r7 = com sun research w wadl application r0 <NEXT> $ r2 = r7 doc <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun research w wadl doc r0 <NEXT> $ r1 = r2 title <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com sun research w wadl link r0 <NEXT> r2 resource type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com sun research w wadl link r0 <NEXT> $ r1 = r2 rel <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun research w wadl param r0 <NEXT> $ r1 = r2 style <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com sun research w wadl param r0 <NEXT> $ r1 = r2 fix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = com sun research w wadl resource r0 <NEXT> $ r1 = r5 method or resource <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java util array list <NEXT> specialinvoke r4 < init > <NEXT> r6 = com sun research w wadl resource r0 <NEXT> r6 method or resource = r4 <NEXT> label r7 = com sun research w wadl resource r0 <NEXT> $ r2 = r7 method or resource <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org glassfish jersey server chunk output r0 <NEXT> $ z0 = r1 close <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r5 = org glassfish jersey server container request r0 <NEXT> r1 = specialinvoke r5 get inflector <NEXT> $ z0 = r1 instanceof org glassfish jersey server model resource method invoker <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org glassfish jersey server model resource method invoker r1 <NEXT> $ r4 = $ r3 get reader interceptor <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r6 = org glassfish jersey server container request r0 <NEXT> $ r2 = r6 processing provider <NEXT> $ r4 = $ r2 get sort global reader interceptor <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey server container request r0 <NEXT> $ r1 = r2 vary value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org glassfish jersey server container response r0 <NEXT> r1 map from exception = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org glassfish jersey server container response r0 <NEXT> $ z0 = r4 close <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = org glassfish jersey server container response r0 <NEXT> r5 close = 1 <NEXT> r6 = org glassfish jersey server container response r0 <NEXT> $ r1 = r6 message context <NEXT> $ r1 close <NEXT> r7 = org glassfish jersey server container response r0 <NEXT> $ r2 = r7 request context <NEXT> $ r3 = $ r2 get response writer <NEXT> $ r3 commit <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i1 = r0 length <NEXT> if $ i1 ! = 0 goto label2 <NEXT> label return r0 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> label i4 = 0 <NEXT> label if i4 == $ i1 goto label4 <NEXT> $ r3 = \ `` \ `` <NEXT> $ c2 = r0 char at i4 <NEXT> $ i3 = $ r3 index of $ c2 <NEXT> if $ i3 == -1 goto label4 <NEXT> i4 = i4 + 1 <NEXT> goto label3 <NEXT> if $ i3 == -1 goto label4 <NEXT> label if i4 < = 0 goto label5 <NEXT> $ i5 = i4 - 1 <NEXT> goto label6 <NEXT> label $ r1 = r0 substring $ i5 <NEXT> return $ r1 <NEXT> label if i4 < = 0 goto label5 <NEXT> label $ i5 = 0 <END>
<BEG> $ r0 = org glassfish jersey server internal localization message localizer <NEXT> $ r1 = org glassfish jersey server internal localization message localizable r e s o u r c e_ c o n f i g_ e r r o r_ n u l l_ a p p l i c a t i o n c l a s s <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = org glassfish jersey server internal localization message localizer <NEXT> $ r1 = org glassfish jersey server internal localization message localizable e x c e p t i o n_ m a p p e r_ f a i l e d_ f o r_ e x c e p t i o n <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = org glassfish jersey server internal localization message localizer <NEXT> $ r1 = org glassfish jersey server internal localization message localizable e r r o r_ m o n i t o r i n g_ m b e a n s_ u n r e g i s t r a t i o n_ d e s t r o y <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = org glassfish jersey server internal localization message localizer <NEXT> $ r1 = org glassfish jersey server internal localization message localizable e r r o r_ p r i m i t i v e_ t y p e_ n u l l <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> $ r0 = org glassfish jersey server internal localization message localizer <NEXT> $ r1 = org glassfish jersey server internal localization message localizable e r r o r_ r e q u e s t_ s e t_ e n t i t y_ s t r e a m_ i n_ r e s p o n s e_ p h a s e <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org glassfish jersey server internal localization message localizer <NEXT> $ r4 = org glassfish jersey server internal localization message localizable r e s o u r c e_ a m b i g u o u s r0 r1 r2 <NEXT> $ r5 = $ r3 localize $ r4 <NEXT> return $ r5 <END>
<BEG> $ r0 = org glassfish jersey server internal localization message localizer <NEXT> $ r1 = org glassfish jersey server internal localization message localizable e r r o r_ c o m m i t t i n g_ o u t p u t_ s t r e a m <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey server internal localization message localizer <NEXT> $ r2 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ g e n e r a t o r_ c o n f i g_ l o a d e r r0 <NEXT> $ r3 = $ r1 localize $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey server internal localization message localizer <NEXT> $ r3 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ b u i l d e r_ g e n e r a t i o n_ m e t h o d r0 r1 <NEXT> $ r4 = $ r2 localize $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = org glassfish jersey server internal localization message localizer <NEXT> $ r1 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ g r a m m a r_ a l r e a d y_ c o n t a i n s <NEXT> $ r2 = $ r0 localize $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey server internal localization message localizer <NEXT> $ r3 = org glassfish jersey server internal localization message localizable m e t h o d_ e m p t y_ p a t h_ a n n o t a t i o n r0 r1 <NEXT> $ r4 = $ r2 localize $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org glassfish jersey server internal localization message localizer <NEXT> $ r4 = org glassfish jersey server internal localization message localizable e r r o r_ w a d l_ b u i l d e r_ g e n e r a t i o n_ p a r a m r0 r1 r2 <NEXT> $ r5 = $ r3 localize $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey server internal localization message localizer <NEXT> $ r3 = org glassfish jersey server internal localization message localizable w a d l_ d o c_ s i m p l e_ w a d l r0 r1 <NEXT> $ r4 = $ r2 localize $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org glassfish jersey server internal monitoring jmx execution statistic dynamic bean r0 <NEXT> r2 execution statistic = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey server internal process request processing context r0 <NEXT> $ r1 = r2 rout context <NEXT> r3 = org glassfish jersey server internal routing rout context $ r1 <NEXT> return r3 <END>
<BEG> $ r0 = new org glassfish jersey server internal scanning annotation accept listener <NEXT> $ r1 = newarray java lang class [ 2 ] <NEXT> $ r1 [ 0 ] = class \ `` ljavax w rs path \ `` <NEXT> $ r1 [ 1 ] = class \ `` ljavax w r ext provider \ `` <NEXT> specialinvoke $ r0 < init > $ r1 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org glassfish jersey server model invocable create r0 r1 0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org glassfish jersey server model method handler create r0 <NEXT> $ r2 = org glassfish jersey server model invocable apply_inflector_method <NEXT> $ r3 = org glassfish jersey server model invocable create $ r1 $ r2 0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new org glassfish jersey server model method list $ 3 <NEXT> r5 = org glassfish jersey server model method list r0 <NEXT> specialinvoke r4 < init > r5 r1 <NEXT> r6 = org glassfish jersey server model method list r0 <NEXT> r7 = org glassfish jersey server model method list $ filter r4 <NEXT> $ r3 = r6 filter r7 <NEXT> return $ r3 <END>
<BEG> $ r0 = new org glassfish jersey server model resource $ builder <NEXT> specialinvoke $ r0 < init > null <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r2 = org glassfish jersey server model resource r0 <NEXT> $ r1 = r2 child resource <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r4 = org glassfish jersey server resource config r0 <NEXT> return r4 <NEXT> if r1 ! = null goto label1 <NEXT> label $ r2 = jersey repackaged com google common collect set new hash set r1 <NEXT> r5 = org glassfish jersey server resource config r0 <NEXT> $ r3 = r5 register instance $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 get value be adjust <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = r1 get source <NEXT> r8 = org jets3t apps cockpit cockpit r0 <NEXT> $ r3 = r8 bucket table <NEXT> $ r4 = $ r3 get selection model <NEXT> $ z1 = $ r2 equal $ r4 <NEXT> if $ z1 == 0 goto label2 <NEXT> r9 = org jets3t apps cockpit cockpit r0 <NEXT> specialinvoke r9 bucket select action <NEXT> goto label3 <NEXT> label return <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ r5 = r1 get source <NEXT> r10 = org jets3t apps cockpit cockpit r0 <NEXT> $ r6 = r10 object table <NEXT> $ r7 = $ r6 get selection model <NEXT> $ z2 = $ r5 equal $ r7 <NEXT> if $ z2 == 0 goto label3 <NEXT> r11 = org jets3t apps cockpit cockpit r0 <NEXT> specialinvoke r11 object select action <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org jets3t apps cockpit cockpit r0 <NEXT> $ z0 = r6 be stand alone application <NEXT> if $ z0 ! = 0 goto label2 <NEXT> if r2 ! = null goto label1 <NEXT> r7 = org jets3t apps cockpit cockpit r0 <NEXT> $ r5 = r7 get applet context <NEXT> $ r5 show document r1 <NEXT> goto label3 <NEXT> label return <NEXT> if r2 ! = null goto label1 <NEXT> label r8 = org jets3t apps cockpit cockpit r0 <NEXT> $ r4 = r8 get applet context <NEXT> $ r4 show document r1 r2 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r3 = r1 to string <NEXT> contribs com centerkey utils bare bone browser launch open u r l $ r3 <END>
<BEG> r0 = java lang class loader get system resource a stream \ `` sample properties\ `` <NEXT> if r0 ! = null goto label1 <NEXT> $ r9 = new java lang runtime exception <NEXT> specialinvoke $ r9 < init > \ `` unable to load test property file from classpath sample properties\ `` <NEXT> throw $ r9 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r3 = new java util property <NEXT> specialinvoke $ r3 < init > <NEXT> $ r3 load r0 <NEXT> $ z0 = $ r3 contain key \ `` aws access key\ `` <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ r8 = new java lang runtime exception <NEXT> specialinvoke $ r8 < init > \ `` property file \'samples properties\ ' do not contain required property aws access key\ `` <NEXT> throw $ r8 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ z1 = $ r3 contain key \ `` aws secret key\ `` <NEXT> if $ z1 ! = 0 goto label3 <NEXT> $ r7 = new java lang runtime exception <NEXT> specialinvoke $ r7 < init > \ `` property file \'samples properties\ ' do not contain required property aws secret key\ `` <NEXT> throw $ r7 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label $ r4 = new org jets3t service security a w s credential <NEXT> $ r5 = $ r3 get property \ `` aws access key\ `` <NEXT> $ r6 = $ r3 get property \ `` aws secret key\ `` <NEXT> specialinvoke $ r4 < init > $ r5 $ r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r3 = r1 [ i1 ] <NEXT> $ r4 = r3 get grantee <NEXT> $ r5 = r3 get permission <NEXT> r6 = org jets3t service acl access control list r0 <NEXT> r6 grant permission $ r4 $ r5 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jets3t service acl group grantee r0 <NEXT> r2 id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jets3t service cloud front service r0 <NEXT> $ r1 = r2 list distribution 100 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jets3t service cloud front service r0 <NEXT> $ r1 = r2 list stream distribution 100 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jets3t service impl rest httpclient google storage service r0 <NEXT> $ r1 = r2 list all bucket null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org jets3t service impl rest httpclient rest storage service r0 <NEXT> $ r1 = r5 get jet s3t property <NEXT> r6 = org jets3t service impl rest httpclient rest storage service r0 <NEXT> $ r2 = r6 get invoke application description <NEXT> r7 = org jets3t service impl rest httpclient rest storage service r0 <NEXT> $ r3 = r7 get credential provider <NEXT> $ r4 = org jets3t service utils rest utils init http connection r0 $ r1 $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org jets3t service model a w s dev pay product r0 <NEXT> $ r2 = r5 get product name <NEXT> $ r3 = org jets3t service model a w s dev pay product r1 <NEXT> $ r4 = $ r3 get product name <NEXT> $ i0 = $ r2 compare to $ r4 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jets3t service model g s object r0 <NEXT> r2 acl = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org jets3t service model storage object r0 <NEXT> $ r1 = r3 data input stream <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org jets3t service model storage object r0 <NEXT> $ r2 = r4 data input stream <NEXT> $ r2 close <NEXT> r5 = org jets3t service model storage object r0 <NEXT> r5 data input stream = null <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jets3t service model storage object r0 <NEXT> r2 add metadata \ `` last- modified\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> $ r1 = java lang string value of l0 <NEXT> r2 = org jets3t service model storage object r0 <NEXT> r2 add metadata \ `` content- length\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set name r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append \ `` { \\\ `` \ `` <NEXT> $ r4 = $ r3 append r0 <NEXT> $ r5 = $ r4 append \ `` \\\ `` \\\ `` \ `` <NEXT> $ r6 = $ r5 append r1 <NEXT> $ r7 = $ r6 append \ `` \\\ `` } \ `` <NEXT> $ r8 = $ r7 to string <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get upload id <NEXT> $ r3 = r1 get bucket name <NEXT> $ r4 = r1 get object key <NEXT> r5 = org jets3t service s3 service r0 <NEXT> r5 multipart abort upload impl $ r2 $ r3 $ r4 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r1 = new org jets3t service security encryption util <NEXT> specialinvoke $ r1 < init > \ `` sample key\ <NEXT> $ r1 encrypt \ `` test encryption \ `` <NEXT> label goto label6 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jets3t service service exception r0 <NEXT> r2 request path = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> $ r3 = r1 get name <NEXT> if $ r3 == null goto label1 <NEXT> $ r4 = r1 get name <NEXT> $ i0 = $ r4 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label r13 = new org jets3t service service exception <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r7 = r12 append \ `` the action \ `` <NEXT> $ r8 = $ r7 append r2 <NEXT> $ r9 = $ r8 append \ `` can not be perform with an invalid bucket \ `` <NEXT> $ r10 = $ r9 append r1 <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r13 < init > $ r11 <NEXT> r14 = java lang throwable r13 <NEXT> throw r14 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jets3t service storage service r0 <NEXT> r2 delete bucket impl r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = new java util date <NEXT> $ l0 = java lang system current time millis <NEXT> r3 = org jets3t service storage service r0 <NEXT> $ l1 = r3 time offset <NEXT> $ l2 = $ l0 + $ l1 <NEXT> specialinvoke r2 < init > $ l2 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> $ r2 = r3 message property <NEXT> $ r2 put all r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r6 = org jets3t service utils gatekeeper gatekeeper message log <NEXT> $ z0 = $ r6 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r68 = org jets3t service utils gatekeeper gatekeeper message log <NEXT> $ r68 debug \ `` encode gatekeeper message to properties\ `` <NEXT> label r82 = new java util property <NEXT> specialinvoke r82 < init > <NEXT> r93 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> $ r8 = r93 application property <NEXT> $ r9 = $ r8 entry set <NEXT> r69 = $ r9 iterator <NEXT> label $ z3 = r69 have next <NEXT> if $ z3 == 0 goto label3 <NEXT> $ r60 = r69 next <NEXT> r70 = java util map $ entry $ r60 <NEXT> $ r61 = r70 get key <NEXT> r71 = java lang string $ r61 <NEXT> $ r62 = r70 get value <NEXT> r72 = java lang string $ r62 <NEXT> r83 = new java lang string builder <NEXT> specialinvoke r83 < init > <NEXT> $ r64 = r83 append \ `` application\ `` <NEXT> $ r65 = $ r64 append \ `` |\ `` <NEXT> $ r66 = $ r65 append r71 <NEXT> $ r67 = $ r66 to string <NEXT> r94 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> specialinvoke r94 encode property r82 $ r67 r72 <NEXT> goto label2 <NEXT> if $ z3 == 0 goto label3 <NEXT> label r95 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> $ r10 = r95 message property <NEXT> $ r11 = $ r10 entry set <NEXT> r73 = $ r11 iterator <NEXT> label $ z1 = r73 have next <NEXT> if $ z1 == 0 goto label5 <NEXT> $ r52 = r73 next <NEXT> r74 = java util map $ entry $ r52 <NEXT> $ r53 = r74 get key <NEXT> r75 = java lang string $ r53 <NEXT> $ r54 = r74 get value <NEXT> r76 = java lang string $ r54 <NEXT> r84 = new java lang string builder <NEXT> specialinvoke r84 < init > <NEXT> $ r56 = r84 append \ `` message\ `` <NEXT> $ r57 = $ r56 append \ `` |\ `` <NEXT> $ r58 = $ r57 append r75 <NEXT> $ r59 = $ r58 to string <NEXT> r96 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> specialinvoke r96 encode property r82 $ r59 r76 <NEXT> goto label4 <NEXT> if $ z1 == 0 goto label5 <NEXT> label r97 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> r77 = r97 get signature request <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r77 <NEXT> if i1 > = $ i0 goto label9 <NEXT> r78 = r77 [ i1 ] <NEXT> r85 = new java lang string builder <NEXT> specialinvoke r85 < init > <NEXT> $ r13 = r85 append \ `` request\ `` <NEXT> $ r14 = $ r13 append \ `` |\ `` <NEXT> $ r15 = $ r14 append i1 <NEXT> $ r16 = $ r15 append \ `` |\ `` <NEXT> r79 = $ r16 to string <NEXT> r86 = new java lang string builder <NEXT> specialinvoke r86 < init > <NEXT> $ r18 = r86 append r79 <NEXT> $ r19 = $ r18 append \ `` signature type\ `` <NEXT> $ r20 = $ r19 to string <NEXT> $ r21 = r78 get signature type <NEXT> r98 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> specialinvoke r98 encode property r82 $ r20 $ r21 <NEXT> r87 = new java lang string builder <NEXT> specialinvoke r87 < init > <NEXT> $ r23 = r87 append r79 <NEXT> $ r24 = $ r23 append \ `` object key\ `` <NEXT> $ r25 = $ r24 to string <NEXT> $ r26 = r78 get object key <NEXT> r99 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> specialinvoke r99 encode property r82 $ r25 $ r26 <NEXT> r88 = new java lang string builder <NEXT> specialinvoke r88 < init > <NEXT> $ r28 = r88 append r79 <NEXT> $ r29 = $ r28 append \ `` bucket name\ `` <NEXT> $ r30 = $ r29 to string <NEXT> $ r31 = r78 get bucket name <NEXT> r100 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> specialinvoke r100 encode property r82 $ r30 $ r31 <NEXT> r89 = new java lang string builder <NEXT> specialinvoke r89 < init > <NEXT> $ r33 = r89 append r79 <NEXT> $ r34 = $ r33 append \ `` sign url\ `` <NEXT> $ r35 = $ r34 to string <NEXT> $ r36 = r78 get sign url <NEXT> r101 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> specialinvoke r101 encode property r82 $ r35 $ r36 <NEXT> r90 = new java lang string builder <NEXT> specialinvoke r90 < init > <NEXT> $ r38 = r90 append r79 <NEXT> $ r39 = $ r38 append \ `` decline reason\ `` <NEXT> $ r40 = $ r39 to string <NEXT> $ r41 = r78 get decline reason <NEXT> r102 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> specialinvoke r102 encode property r82 $ r40 $ r41 <NEXT> r91 = new java lang string builder <NEXT> specialinvoke r91 < init > <NEXT> $ r43 = r91 append r79 <NEXT> $ r44 = $ r43 append \ `` metadata|\ `` <NEXT> r80 = $ r44 to string <NEXT> r2 = r78 get object metadata <NEXT> $ r45 = r2 entry set <NEXT> r81 = $ r45 iterator <NEXT> label $ z2 = r81 have next <NEXT> if $ z2 == 0 goto label8 <NEXT> $ r46 = r81 next <NEXT> r3 = java util map $ entry $ r46 <NEXT> $ r47 = r3 get key <NEXT> r4 = java lang string $ r47 <NEXT> r5 = r3 get value <NEXT> r92 = new java lang string builder <NEXT> specialinvoke r92 < init > <NEXT> $ r49 = r92 append r80 <NEXT> $ r50 = $ r49 append r4 <NEXT> $ r51 = $ r50 to string <NEXT> r103 = org jets3t service utils gatekeeper gatekeeper message r0 <NEXT> specialinvoke r103 encode property r82 $ r51 r5 <NEXT> goto label7 <NEXT> if $ z2 == 0 goto label8 <NEXT> label i1 = i1 + 1 <NEXT> goto label6 <NEXT> if i1 > = $ i0 goto label9 <NEXT> label return r82 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jets3t service utils gatekeeper signature request r0 <NEXT> r2 sign url = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jets3t service utils gatekeeper signature request r0 <NEXT> r2 decline reason = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r29 = org jets3t service utils oauth o auth utils r0 <NEXT> $ r4 = r29 implementation <NEXT> $ r3 = org jets3t service utils oauth o auth utils $ o auth implementation google_storage_oauth2_10 <NEXT> if $ r4 ! = $ r3 goto label1 <NEXT> r25 = new java lang string builder <NEXT> specialinvoke r25 < init > <NEXT> $ r12 = r25 append \ `` https account google com o oauth2 auth ? response_type=code & redirect_uri=urnietfwgoauth2 oob & client_id=\ `` <NEXT> r30 = org jets3t service utils oauth o auth utils r0 <NEXT> $ r13 = r30 client id <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 append \ `` & scope=\ `` <NEXT> $ r16 = $ r15 append r1 <NEXT> r2 = $ r16 to string <NEXT> $ r18 = org jets3t service utils oauth o auth utils log <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r19 = r26 append \ `` generated authorization url for o auth implementation \ `` <NEXT> r31 = org jets3t service utils oauth o auth utils r0 <NEXT> $ r20 = r31 implementation <NEXT> $ r21 = $ r19 append $ r20 <NEXT> $ r22 = $ r21 append \ `` \ `` <NEXT> $ r23 = $ r22 append r2 <NEXT> $ r24 = $ r23 to string <NEXT> $ r18 debug $ r24 <NEXT> return r2 <NEXT> if $ r4 ! = $ r3 goto label1 <NEXT> label r28 = new java lang illegal state exception <NEXT> r27 = new java lang string builder <NEXT> specialinvoke r27 < init > <NEXT> $ r7 = r27 append \ `` unsupported implementation \ `` <NEXT> r32 = org jets3t service utils oauth o auth utils r0 <NEXT> $ r8 = r32 implementation <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r28 < init > $ r10 <NEXT> throw r28 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> org jets3t service utils rest utils init http proxy r0 r1 1 null -1 null null null r2 <NEXT> return <END>
<BEG> r3 = new org apache http params sync basic http params <NEXT> specialinvoke r3 < init > <NEXT> $ r2 = org apache http http version http_1_1 <NEXT> r4 = org apache http params http params r3 <NEXT> r5 = org apache http protocol version $ r2 <NEXT> org apache http params http protocol params set version r4 r5 <NEXT> r6 = org apache http params http params r3 <NEXT> org apache http params http protocol params set content charset r6 \ `` iso-8859-1\ `` <NEXT> r7 = org apache http params http params r3 <NEXT> org apache http params http connection params set tcp no delay r7 1 <NEXT> r8 = org apache http params http params r3 <NEXT> org apache http params http connection params set socket buffer size r8 8192 <NEXT> r9 = org apache http params http params r3 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = lengthof r1 <NEXT> r2 = newarray org jets3t service model s3 object [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> $ r3 = new org jets3t service model s3 object <NEXT> $ r4 = r1 [ i2 ] <NEXT> $ r5 = $ r4 get object key <NEXT> specialinvoke $ r3 < init > $ r5 <NEXT> r2 [ i2 ] = $ r3 <NEXT> $ r7 = r2 [ i2 ] <NEXT> $ r6 = r1 [ i2 ] <NEXT> $ r8 = $ r6 get object metadata <NEXT> $ r7 add all metadata $ r8 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r2 <END>
<BEG> i0 = @ parameter0 <NEXT> if 300 > i0 goto label1 <NEXT> if i0 > 399 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if i0 > 399 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org eclipse jetty io abstract connection log <NEXT> $ z0 = $ r1 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = org eclipse jetty io abstract connection log <NEXT> $ r4 = newarray java lang object [ 1 ] <NEXT> $ r4 [ 0 ] = r0 <NEXT> $ r5 debug \ `` fill interested { } \ <NEXT> label r6 = org eclipse jetty io abstract connection r0 <NEXT> $ r2 = r6 get end point <NEXT> r7 = org eclipse jetty io abstract connection r0 <NEXT> $ r3 = r7 _read callback <NEXT> $ r2 fill interested $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org eclipse jetty io abstract connection log <NEXT> $ z0 = $ r2 be debug enabled <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r8 = org eclipse jetty io abstract connection log <NEXT> $ r7 = newarray java lang object [ 2 ] <NEXT> $ r7 [ 0 ] = r0 <NEXT> $ r7 [ 1 ] = r1 <NEXT> $ r8 debug \ `` { } on fill interested fail { } \ <NEXT> label r9 = org eclipse jetty io abstract connection r0 <NEXT> $ r3 = r9 _end point <NEXT> $ z1 = $ r3 be open <NEXT> if $ z1 == 0 goto label4 <NEXT> z4 = 1 <NEXT> $ z2 = r1 instanceof java util concurrent timeout exception <NEXT> if $ z2 == 0 goto label2 <NEXT> r10 = org eclipse jetty io abstract connection r0 <NEXT> z4 = r10 on read timeout <NEXT> label if z4 == 0 goto label4 <NEXT> r11 = org eclipse jetty io abstract connection r0 <NEXT> $ r4 = r11 _end point <NEXT> $ z3 = $ r4 be output shutdown <NEXT> if $ z3 == 0 goto label3 <NEXT> r12 = org eclipse jetty io abstract connection r0 <NEXT> $ r6 = r12 _end point <NEXT> $ r6 close <NEXT> goto label4 <NEXT> label return <NEXT> if $ z3 == 0 goto label3 <NEXT> label r13 = org eclipse jetty io abstract connection r0 <NEXT> $ r5 = r13 _end point <NEXT> $ r5 shutdown output <NEXT> r14 = org eclipse jetty io abstract connection r0 <NEXT> r14 fill interested <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jetty security hash login service r0 <NEXT> r2 _config = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org eclipse jetty server handler handler collection r0 <NEXT> $ r2 = r5 get handler <NEXT> $ r3 = org eclipse jetty util array util add to array $ r2 r1 class \ `` lorg eclipse jetty server handler \ `` <NEXT> $ r4 = org eclipse jetty server handler [ ] $ r3 <NEXT> r6 = org eclipse jetty server handler handler collection r0 <NEXT> r6 set handler $ r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = java lang boolean true <NEXT> r5 = org eclipse jetty server http configuration r0 <NEXT> $ r2 = r5 _form encode method <NEXT> $ r4 = $ r2 get r1 <NEXT> $ z0 = $ r3 equal $ r4 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jetty server session abstract session manager r0 <NEXT> r1 _secure request only = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = org eclipse jetty servlet error page error handler r0 <NEXT> $ r2 = r5 _error page <NEXT> $ r3 = java lang integer to string i0 <NEXT> $ r2 put $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jetty util ssl ssl context factory r0 <NEXT> $ i0 = r1 _ssl session cache size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse jetty util ssl ssl context factory r0 <NEXT> r1 _ssl session cache size = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com kenai jffi array r0 <NEXT> $ r1 = r2 element type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com kenai jffi page manager r0 <NEXT> $ i0 = r1 page size <NEXT> if $ i0 == 0 goto label1 <NEXT> r2 = com kenai jffi page manager r0 <NEXT> $ i1 = r2 page size <NEXT> $ l2 = long $ i1 <NEXT> goto label2 <NEXT> label return $ l2 <NEXT> if $ i0 == 0 goto label1 <NEXT> label r3 = com kenai jffi page manager r0 <NEXT> $ l2 = specialinvoke r3 calculate page size <END>
<BEG> r0 = @ this <NEXT> return \ `` lib * \\ so * $ \ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = java_cup runtime lr_parser r0 <NEXT> r2 _scanner = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = java_cup runtime virtual_parse_stack r0 <NEXT> $ r1 = r7 vstack <NEXT> $ z0 = $ r1 empty <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = new java lang exception <NEXT> specialinvoke r6 < init > \ `` internal parser error top call on empty virtual stack\ `` <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = java_cup runtime virtual_parse_stack r0 <NEXT> $ r2 = r8 vstack <NEXT> $ r3 = $ r2 peek <NEXT> $ r4 = java lang integer $ r3 <NEXT> $ i0 = $ r4 int value <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new jflex int char set <NEXT> specialinvoke r4 < init > r1 <NEXT> r5 = jflex char class r0 <NEXT> $ r3 = specialinvoke r5 get class code r4 0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r12 = jflex char class r0 <NEXT> $ r4 = r12 class <NEXT> i0 = $ r4 size <NEXT> i7 = 0 <NEXT> i8 = 0 <NEXT> label if i8 > = i0 goto label2 <NEXT> r13 = jflex char class r0 <NEXT> $ r8 = r13 class <NEXT> $ r9 = $ r8 get i8 <NEXT> $ r10 = jflex int char set $ r9 <NEXT> $ i6 = $ r10 num interval <NEXT> i7 = i7 + $ i6 <NEXT> i8 = i8 + 1 <NEXT> goto label1 <NEXT> label if i8 > = i0 goto label2 <NEXT> label r1 = newarray jflex char class interval [ i7 ] <NEXT> i9 = 0 <NEXT> i10 = 0 <NEXT> label if i9 > = i7 goto label4 <NEXT> r14 = jflex char class r0 <NEXT> i1 = r14 get class code i10 <NEXT> r15 = jflex char class r0 <NEXT> $ r5 = r15 class <NEXT> $ r6 = $ r5 get i1 <NEXT> r2 = jflex int char set $ r6 <NEXT> r3 = r2 get next <NEXT> $ i2 = i9 <NEXT> i9 = i9 + 1 <NEXT> r11 = new jflex char class interval <NEXT> $ i4 = r3 start <NEXT> $ i3 = r3 end <NEXT> specialinvoke r11 < init > $ i4 $ i3 i1 <NEXT> r1 [ $ i2 ] = r11 <NEXT> $ i5 = r3 end <NEXT> i10 = $ i5 + 1 <NEXT> goto label3 <NEXT> label if i9 > = i7 goto label4 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = jflex lex parse _production_table <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> label jflex main generate r0 <NEXT> label goto label5 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 be file <NEXT> if $ z0 == 0 goto label1 <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r8 = r13 append \ `` error \\\ `` \ `` <NEXT> $ r9 = $ r8 append r0 <NEXT> $ r10 = $ r9 append \ `` \\\ `` be not a directory \ `` <NEXT> $ r11 = $ r10 to string <NEXT> jflex out error $ r11 <NEXT> r14 = new jflex generator exception <NEXT> specialinvoke r14 < init > <NEXT> r17 = java lang throwable r14 <NEXT> throw r17 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 be directory <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ z2 = r0 mkdirs <NEXT> if $ z2 ! = 0 goto label2 <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r2 = r15 append \ `` error couldn\'t create directory \\\ `` \ `` <NEXT> $ r3 = $ r2 append r0 <NEXT> $ r4 = $ r3 append \ `` \\\ `` \ `` <NEXT> $ r5 = $ r4 to string <NEXT> jflex out error $ r5 <NEXT> r16 = new jflex generator exception <NEXT> specialinvoke r16 < init > <NEXT> r18 = java lang throwable r16 <NEXT> throw r18 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label jflex option directory = r0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = jflex option time <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = r1 to string <NEXT> r2 = jflex error message get r0 $ r3 <NEXT> $ r4 = jflex out out <NEXT> $ r4 println r2 <NEXT> label return <END>
<BEG> $ i0 = jflex out error <NEXT> if $ i0 < = 0 goto label1 <NEXT> r1 = new jflex generator exception <NEXT> specialinvoke r1 < init > <NEXT> r2 = java lang throwable r1 <NEXT> throw r2 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r12 = jline console kill ring r0 <NEXT> r12 last yank = 0 <NEXT> r13 = jline console kill ring r0 <NEXT> $ z0 = r13 last kill <NEXT> if $ z0 == 0 goto label1 <NEXT> r14 = jline console kill ring r0 <NEXT> $ r3 = r14 slot <NEXT> r15 = jline console kill ring r0 <NEXT> $ i1 = r15 head <NEXT> $ r4 = $ r3 [ $ i1 ] <NEXT> if $ r4 == null goto label1 <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> r16 = jline console kill ring r0 <NEXT> $ r6 = r16 slot <NEXT> r17 = jline console kill ring r0 <NEXT> $ i2 = r17 head <NEXT> $ r7 = $ r6 [ $ i2 ] <NEXT> $ r8 = r11 append $ r7 <NEXT> $ r9 = $ r8 append r1 <NEXT> $ r10 = $ r9 to string <NEXT> $ r6 [ $ i2 ] = $ r10 <NEXT> return <NEXT> if $ r4 == null goto label1 <NEXT> label r18 = jline console kill ring r0 <NEXT> r18 last kill = 1 <NEXT> r19 = jline console kill ring r0 <NEXT> specialinvoke r19 next <NEXT> r20 = jline console kill ring r0 <NEXT> $ r2 = r20 slot <NEXT> r21 = jline console kill ring r0 <NEXT> $ i0 = r21 head <NEXT> $ r2 [ $ i0 ] = r1 <END>
<BEG> r0 = @ this <NEXT> r8 = jline internal input stream reader r0 <NEXT> $ r4 = r8 lock <NEXT> entermonitor $ r4 <NEXT> label r9 = jline internal input stream reader r0 <NEXT> $ z0 = specialinvoke r9 be open <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r7 = new java io i o exception <NEXT> specialinvoke r7 < init > \ `` input stream reader be close \ `` <NEXT> throw r7 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r2 = newarray char [ 4 ] <NEXT> r10 = jline internal input stream reader r0 <NEXT> $ i0 = r10 read r2 0 4 <NEXT> if $ i0 == -1 goto label3 <NEXT> $ i1 = java lang character code point at r2 0 <NEXT> goto label4 <NEXT> label exitmonitor $ r4 <NEXT> label return $ i1 <NEXT> if $ i0 == -1 goto label3 <NEXT> label $ i1 = -1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = jline unix terminal r0 <NEXT> $ r1 = r2 setting <NEXT> $ r1 restore <NEXT> specialinvoke r0 restore <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r5 = r1 get lhs expr <NEXT> $ r6 = $ r5 accept r0 r2 <NEXT> r3 = com fasterxml jackson databind json node $ r6 <NEXT> $ r7 = r1 get rhs expr <NEXT> $ r8 = $ r7 accept r0 r2 <NEXT> r4 = com fasterxml jackson databind json node $ r8 <NEXT> $ z0 = r1 match r3 r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = com fasterxml jackson databind node boolean node true <NEXT> r11 = com fasterxml jackson databind json node $ r10 <NEXT> return r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r9 = com fasterxml jackson databind node boolean node false <NEXT> r12 = com fasterxml jackson databind json node $ r9 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r5 = r1 get lhs expr <NEXT> $ r6 = $ r5 accept r0 r2 <NEXT> r3 = com fasterxml jackson databind json node $ r6 <NEXT> $ r7 = r1 get rhs expr <NEXT> $ r8 = $ r7 accept r0 r2 <NEXT> r4 = com fasterxml jackson databind json node $ r8 <NEXT> $ z0 = r1 match r3 r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = com fasterxml jackson databind node boolean node true <NEXT> r11 = com fasterxml jackson databind json node $ r10 <NEXT> return r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r9 = com fasterxml jackson databind node boolean node false <NEXT> r12 = com fasterxml jackson databind json node $ r9 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r5 = r1 get lhs expr <NEXT> $ r6 = $ r5 accept r0 r2 <NEXT> r3 = com fasterxml jackson databind json node $ r6 <NEXT> $ r7 = r1 get rhs expr <NEXT> $ r8 = $ r7 accept r0 r2 <NEXT> r4 = com fasterxml jackson databind json node $ r8 <NEXT> $ z0 = r1 match r3 r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r10 = com fasterxml jackson databind node boolean node true <NEXT> r11 = com fasterxml jackson databind json node $ r10 <NEXT> return r11 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r9 = com fasterxml jackson databind node boolean node false <NEXT> r12 = com fasterxml jackson databind json node $ r9 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = r1 get 0 <NEXT> r2 = com fasterxml jackson databind json node $ r3 <NEXT> $ z0 = r2 be textual <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = com amazonaws jmespath jmes path length function get string length r2 <NEXT> r9 = com fasterxml jackson databind json node $ r6 <NEXT> return r9 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r2 be array <NEXT> if $ z1 ! = 0 goto label2 <NEXT> $ z2 = r2 be object <NEXT> if $ z2 == 0 goto label3 <NEXT> label r7 = new com fasterxml jackson databind node int node <NEXT> $ i0 = r2 size <NEXT> specialinvoke r7 < init > $ i0 <NEXT> r10 = com fasterxml jackson databind json node r7 <NEXT> return r10 <NEXT> if $ z2 == 0 goto label3 <NEXT> label r8 = new com amazonaws jmespath invalid type exception <NEXT> specialinvoke r8 < init > \ `` type mismatch expect a string or an array or an object \ `` <NEXT> r11 = java lang throwable r8 <NEXT> throw r11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r1 equal r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ i0 = r1 compare to r2 <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org openjdk jmh infra thread params r0 <NEXT> $ i0 = r1 group thread count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org openjdk jmh infra thread params r0 <NEXT> $ i0 = r1 subgroup thread count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r31 = org openjdk jmh result run result r0 <NEXT> $ r5 = r31 benchmark result <NEXT> $ z0 = $ r5 be empty <NEXT> if $ z0 == 0 goto label01 <NEXT> return null <NEXT> if $ z0 == 0 goto label01 <NEXT> label r29 = new java util array list <NEXT> specialinvoke r29 < init > <NEXT> r32 = org openjdk jmh result run result r0 <NEXT> $ r7 = r32 benchmark result <NEXT> r21 = $ r7 iterator <NEXT> label $ z1 = r21 have next <NEXT> if $ z1 == 0 goto label05 <NEXT> $ r18 = r21 next <NEXT> r22 = org openjdk jmh result benchmark result $ r18 <NEXT> $ r19 = r22 get iteration result <NEXT> r23 = $ r19 iterator <NEXT> label $ z5 = r23 have next <NEXT> if $ z5 == 0 goto label04 <NEXT> $ r20 = r23 next <NEXT> r24 = org openjdk jmh result iteration result $ r20 <NEXT> r29 add r24 <NEXT> goto label03 <NEXT> if $ z5 == 0 goto label04 <NEXT> label goto label02 <NEXT> if $ z1 == 0 goto label05 <NEXT> label r30 = new org openjdk jmh result benchmark result <NEXT> r33 = org openjdk jmh result run result r0 <NEXT> $ r9 = r33 params <NEXT> specialinvoke r30 < init > $ r9 r29 <NEXT> r34 = org openjdk jmh result run result r0 <NEXT> $ r10 = r34 benchmark result <NEXT> r26 = $ r10 iterator <NEXT> label $ z2 = r26 have next <NEXT> if $ z2 == 0 goto label11 <NEXT> $ r11 = r26 next <NEXT> r27 = org openjdk jmh result benchmark result $ r11 <NEXT> $ r12 = r27 get benchmark result <NEXT> $ r13 = $ r12 key <NEXT> r28 = $ r13 iterator <NEXT> label $ z3 = r28 have next <NEXT> if $ z3 == 0 goto label10 <NEXT> $ r14 = r28 next <NEXT> r2 = java lang string $ r14 <NEXT> $ r15 = r27 get benchmark result <NEXT> $ r16 = $ r15 get r2 <NEXT> r3 = $ r16 iterator <NEXT> label $ z4 = r3 have next <NEXT> if $ z4 == 0 goto label09 <NEXT> $ r17 = r3 next <NEXT> r4 = org openjdk jmh result result $ r17 <NEXT> r30 add benchmark result r4 <NEXT> goto label08 <NEXT> if $ z4 == 0 goto label09 <NEXT> label goto label07 <NEXT> if $ z3 == 0 goto label10 <NEXT> label goto label06 <NEXT> if $ z2 == 0 goto label11 <NEXT> label return r30 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = newarray double [ 2 ] <NEXT> r5 = org openjdk jmh util abstract statistic r0 <NEXT> $ l0 = r5 get n <NEXT> $ b1 = $ l0 cmp 2l <NEXT> if $ b1 > 0 goto label1 <NEXT> r1 [ 1 ] = #na n <NEXT> r1 [ 0 ] = #na n <NEXT> return r1 <NEXT> if $ b1 > 0 goto label1 <NEXT> label r4 = new org apache common math3 distribution t distribution <NEXT> r6 = org openjdk jmh util abstract statistic r0 <NEXT> $ l2 = r6 get n <NEXT> $ l3 = $ l2 - 1l <NEXT> $ d2 = double $ l3 <NEXT> specialinvoke r4 < init > $ d2 <NEXT> $ d3 = 1 0 - d0 <NEXT> $ d4 = $ d3 2 0 <NEXT> $ d5 = 1 0 - $ d4 <NEXT> d1 = r4 inverse cumulative probability $ d5 <NEXT> r7 = org openjdk jmh util abstract statistic r0 <NEXT> $ d6 = r7 get mean <NEXT> r8 = org openjdk jmh util abstract statistic r0 <NEXT> $ d7 = r8 get standard deviation <NEXT> $ d8 = d1 * $ d7 <NEXT> r9 = org openjdk jmh util abstract statistic r0 <NEXT> $ l4 = r9 get n <NEXT> $ d9 = double $ l4 <NEXT> $ d10 = java lang math sqrt $ d9 <NEXT> $ d11 = $ d8 $ d10 <NEXT> $ d12 = $ d6 - $ d11 <NEXT> r1 [ 0 ] = $ d12 <NEXT> r10 = org openjdk jmh util abstract statistic r0 <NEXT> $ d13 = r10 get mean <NEXT> r11 = org openjdk jmh util abstract statistic r0 <NEXT> $ d14 = r11 get standard deviation <NEXT> $ d15 = d1 * $ d14 <NEXT> r12 = org openjdk jmh util abstract statistic r0 <NEXT> $ l5 = r12 get n <NEXT> $ d16 = double $ l5 <NEXT> $ d17 = java lang math sqrt $ d16 <NEXT> $ d18 = $ d15 $ d17 <NEXT> $ d19 = $ d13 + $ d18 <NEXT> r1 [ 1 ] = $ d19 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = mockit internal util field reflection get field r0 r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = mockit internal util constructor reflection new instance r0 r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = mockit internal util constructor reflection new instance r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = mockit internal startup startup activate code coverage if request r0 r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r2 = mockit internal startup mock bridge field create synthetic field in j r e class to hold mock bridge r1 <NEXT> r3 = mockit internal startup instrumentation holder set r1 r2 <NEXT> mockit internal startup startup initialize r3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r2 = com sun jna pointer r0 <NEXT> $ r1 = r2 get string array l0 -1 z0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com sun jna structure r0 <NEXT> $ z0 = r1 auto read <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = jnr constant constant set r0 <NEXT> $ r2 = r5 name to constant <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = jnr constant constant $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = jnr constant constant set r0 <NEXT> $ r1 = r4 max value <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = jnr constant constant set r0 <NEXT> $ r3 = specialinvoke r5 get long field \ `` max_value\ <NEXT> r6 = jnr constant constant set r0 <NEXT> r6 max value = $ r3 <NEXT> label r7 = jnr constant constant set r0 <NEXT> $ r2 = r7 max value <NEXT> $ i0 = $ r2 int value <NEXT> $ l1 = long $ i0 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 address size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> l0 = @ parameter2 <NEXT> $ b1 = r2 get byte l0 <NEXT> $ r3 = java lang byte value of $ b1 <NEXT> r4 = jnr ffi byref byte by reference r0 <NEXT> r4 value = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> l0 = @ parameter2 <NEXT> $ d0 = r2 get double l0 <NEXT> $ r3 = java lang double value of $ d0 <NEXT> r4 = jnr ffi byref double by reference r0 <NEXT> r4 value = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> l0 = @ parameter2 <NEXT> r5 = jnr ffi byref long long by reference r0 <NEXT> $ r3 = r5 value <NEXT> $ r4 = java lang long $ r3 <NEXT> $ l1 = $ r4 long value <NEXT> r2 put long long l0 $ l1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = jnr ffi object reference manager r0 <NEXT> $ r2 = r3 add r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = jnr ffi pointer r0 <NEXT> $ l0 = r1 address <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = jnr ffi struct r0 <NEXT> r4 array begin <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> r3 = new jnr ffi struct $ address <NEXT> r5 = jnr ffi struct r0 <NEXT> specialinvoke r3 < init > r5 <NEXT> r1 [ i1 ] = r3 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label r6 = jnr ffi struct r0 <NEXT> r6 array end <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = jnr ffi struct r0 <NEXT> r4 array begin <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> r3 = new jnr ffi struct $ address <NEXT> r5 = jnr ffi struct r0 <NEXT> specialinvoke r3 < init > r5 <NEXT> r1 [ i1 ] = r3 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label r6 = jnr ffi struct r0 <NEXT> r6 array end <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = jnr ffi struct r0 <NEXT> r4 array begin <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> r3 = new jnr ffi struct $ address <NEXT> r5 = jnr ffi struct r0 <NEXT> specialinvoke r3 < init > r5 <NEXT> r1 [ i1 ] = r3 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label r6 = jnr ffi struct r0 <NEXT> r6 array end <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 ! = null goto label1 <NEXT> r19 = new java lang illegal argument exception <NEXT> specialinvoke r19 < init > \ `` parameter \'name\ ' must be not null\ `` <NEXT> throw r19 <NEXT> if r1 ! = null goto label1 <NEXT> label if r2 ! = null goto label2 <NEXT> r20 = new java lang illegal argument exception <NEXT> specialinvoke r20 < init > \ `` parameter \'value\ ' must be not null\ `` <NEXT> throw r20 <NEXT> label if r2 ! = null goto label2 <NEXT> label r23 = jnr ffi util annotation proxy r0 <NEXT> $ r3 = r23 property <NEXT> $ z0 = $ r3 contain key r1 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r22 = new java lang illegal argument exception <NEXT> r21 = new java lang string builder <NEXT> specialinvoke r21 < init > <NEXT> $ r9 = r21 append \ `` annotation \'\ `` <NEXT> r24 = jnr ffi util annotation proxy r0 <NEXT> $ r10 = r24 annotation type <NEXT> $ r11 = $ r10 get name <NEXT> $ r12 = $ r9 append $ r11 <NEXT> $ r13 = $ r12 append \ `` \ ' do not contain a property name \'\ `` <NEXT> $ r14 = $ r13 append r1 <NEXT> $ r15 = $ r14 append \ `` \'\ `` <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke r22 < init > $ r16 <NEXT> throw r22 <NEXT> if $ z0 ! = 0 goto label3 <NEXT> label r25 = jnr ffi util annotation proxy r0 <NEXT> $ r4 = r25 property <NEXT> $ r5 = $ r4 get r1 <NEXT> $ r6 = jnr ffi util annotation property $ r5 <NEXT> $ r6 set value r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = new java lang runtime exception <NEXT> $ r4 = new java lang string builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append \ `` native error \ `` <NEXT> $ r6 = r1 description <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` \ `` <NEXT> $ r9 = $ r8 append r2 <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke $ r3 < init > $ r10 <NEXT> throw $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ r1 = com kenai jnr x86asm asm _ptr_build r0 l0 16 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com kenai jnr x86asm inst_code inst_cpuid <NEXT> r2 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r2 emit x86 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_enter <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_mov <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com kenai jnr x86asm inst_code inst_not <NEXT> r3 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r4 = com kenai jnr x86asm operand r1 <NEXT> r3 emit x86 $ r2 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = com kenai jnr x86asm inst_code inst_ud2 <NEXT> r2 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r2 emit x86 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = com kenai jnr x86asm serializer intrinsics $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ i0 = r1 size <NEXT> if $ i0 == 2 goto label1 <NEXT> $ i1 = r1 size <NEXT> if $ i1 == 4 goto label1 <NEXT> r4 = new java lang assertion error <NEXT> specialinvoke r4 < init > <NEXT> throw r4 <NEXT> if $ i1 == 4 goto label1 <NEXT> label $ r3 = com kenai jnr x86asm inst_code inst_ficom <NEXT> r5 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r6 = com kenai jnr x86asm operand r1 <NEXT> r5 emit x86 $ r3 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = com kenai jnr x86asm inst_code inst_fldl2e <NEXT> r2 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r2 emit x86 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_psrld <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pfmax <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pfmul <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pfsub <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = com kenai jnr x86asm inst_code inst_cmpss <NEXT> r5 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r6 = com kenai jnr x86asm operand r1 <NEXT> r7 = com kenai jnr x86asm operand r2 <NEXT> r8 = com kenai jnr x86asm operand r3 <NEXT> r5 emit x86 $ r4 r6 r7 r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com kenai jnr x86asm inst_code inst_ldmxcsr <NEXT> r3 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r4 = com kenai jnr x86asm operand r1 <NEXT> r3 emit x86 $ r2 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_movhps <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_movups <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_mulps <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_psadbw <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_cvtpd2ps <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_cvtps2dq <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_cvtss2sd <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_cvttps2dq <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = com kenai jnr x86asm inst_code inst_mfence <NEXT> r2 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r2 emit x86 $ r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_movapd <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_movdq2q <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pavgb <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pcmpgtw <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pcmpgtd <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_psrld <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_haddps <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pmulhrsw <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> $ r4 = com kenai jnr x86asm inst_code inst_pextrb <NEXT> r5 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r6 = com kenai jnr x86asm operand r1 <NEXT> r7 = com kenai jnr x86asm operand r2 <NEXT> r8 = com kenai jnr x86asm operand r3 <NEXT> r5 emit x86 $ r4 r6 r7 r8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pmovsxbw <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = com kenai jnr x86asm inst_code inst_pmovzxbw <NEXT> r4 = com kenai jnr x86asm serializer intrinsics r0 <NEXT> r5 = com kenai jnr x86asm operand r1 <NEXT> r6 = com kenai jnr x86asm operand r2 <NEXT> r4 emit x86 $ r3 r5 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq chart format r0 <NEXT> $ z0 = r1 category a text <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq chart format r0 <NEXT> $ z0 = r1 show horizontal legend <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq comparator r0 <NEXT> $ r1 = r2 sql <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq comparator r0 <NEXT> $ z0 = r1 support subselect <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq conf render format r0 <NEXT> r2 indentation = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 render schema <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq conf setting r0 <NEXT> r2 render format = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 render scalar subqueries for stored function <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 backslash escape <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 execute with optimistic lock exclude unversioned <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 fetch warning <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 query timeout <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 max row <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq conf setting r0 <NEXT> r2 max row = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 fetch size <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq conf setting r0 <NEXT> r2 parse with meta lookup = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> r1 = r0 get statement type <NEXT> if r1 == null goto label1 <NEXT> return r1 <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = org jooq conf statement type prepared_statement <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new org jooq c s v format <NEXT> r9 = org jooq c s v format r0 <NEXT> $ r7 = r9 delimiter <NEXT> r10 = org jooq c s v format r0 <NEXT> $ r6 = r10 null string <NEXT> r11 = org jooq c s v format r0 <NEXT> $ r5 = r11 empty string <NEXT> r12 = org jooq c s v format r0 <NEXT> $ r4 = r12 newline <NEXT> r13 = org jooq c s v format r0 <NEXT> $ r3 = r13 quote string <NEXT> r14 = org jooq c s v format r0 <NEXT> $ z0 = r14 header <NEXT> specialinvoke r8 < init > $ r7 $ r6 $ r5 $ r4 $ r3 r1 $ z0 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r3 = org jooq impl abstract store r0 <NEXT> $ r1 = r3 configuration <NEXT> $ r2 = org jooq impl dsl use $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> r1 = newarray org jooq diagnostics listener provider [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r0 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r4 = new org jooq impl default diagnostics listener provider <NEXT> $ r3 = r0 [ i2 ] <NEXT> specialinvoke r4 < init > $ r3 <NEXT> r1 [ i2 ] = r4 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label r5 = org jooq diagnostics listener provider [ ] r1 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq impl dsl dsl <NEXT> $ r3 = $ r2 create view if not exist r0 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl dsl dsl <NEXT> $ r2 = $ r1 create sequence if not exist r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl dsl dsl <NEXT> $ r2 = $ r1 drop view r0 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl dsl val r0 <NEXT> r3 = org jooq field $ r1 <NEXT> $ r2 = org jooq impl dsl any r3 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl dsl dsl <NEXT> $ r2 = $ r1 grant r0 <NEXT> return $ r2 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> $ r0 = org jooq impl dsl val i0 <NEXT> $ r1 = org jooq impl dsl val i1 <NEXT> $ r2 = org jooq impl dsl val i2 <NEXT> r4 = org jooq field $ r0 <NEXT> r5 = org jooq field $ r1 <NEXT> r6 = org jooq field $ r2 <NEXT> $ r3 = org jooq impl dsl generate series r4 r5 r6 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = newarray java lang object [ 0 ] <NEXT> $ r2 = org jooq impl dsl field r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq impl dsl nvl r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> c1 = @ parameter2 <NEXT> $ r1 = java lang character to string c1 <NEXT> $ r2 = org jooq impl dsl lpad r0 i0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq impl tool field r0 <NEXT> $ r3 = org jooq impl tool field r1 <NEXT> r5 = org jooq field $ r2 <NEXT> r6 = org jooq field $ r3 <NEXT> $ r4 = org jooq impl dsl position r5 r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl tool field r0 <NEXT> $ r2 = org jooq impl tool empty_field <NEXT> $ r3 = $ r1 to array $ r2 <NEXT> $ r4 = org jooq field [ ] $ r3 <NEXT> $ r5 = org jooq impl dsl concat $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq impl tool field r0 <NEXT> $ r3 = org jooq impl tool field r1 <NEXT> r5 = org jooq field $ r2 <NEXT> r6 = org jooq field $ r3 <NEXT> $ r4 = org jooq impl dsl date diff r5 r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl tool field r0 <NEXT> $ r2 = org jooq impl dsl inline 0 <NEXT> r4 = org jooq field $ r2 <NEXT> $ r3 = org jooq impl dsl trunc $ r1 r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq tool convert convert r0 class \ `` ljava sql date \ `` <NEXT> $ r2 = java sql date $ r1 <NEXT> $ r3 = org jooq impl tool field $ r2 <NEXT> r4 = org jooq field $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq impl tool field r0 <NEXT> $ r3 = org jooq impl tool field r1 <NEXT> r5 = org jooq field $ r2 <NEXT> r6 = org jooq field $ r3 <NEXT> $ r4 = org jooq impl dsl to timestamp r5 r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> r1 = newarray org jooq impl wrap list [ $ i0 ] <NEXT> i2 = 0 <NEXT> label $ i1 = lengthof r0 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r8 = new org jooq impl wrap list <NEXT> r7 = new org jooq impl query part list <NEXT> $ r6 = r0 [ i2 ] <NEXT> specialinvoke r7 < init > $ r6 <NEXT> specialinvoke r8 < init > r7 <NEXT> r1 [ i2 ] = r8 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label r9 = new org jooq impl function <NEXT> $ r3 = org jooq impl s q l data type other <NEXT> r10 = org jooq query part [ ] r1 <NEXT> specialinvoke r9 < init > \ `` group sets\ <NEXT> r11 = org jooq group field r9 <NEXT> return r11 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl tool field r0 <NEXT> $ r2 = org jooq impl dsl bit not $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl tool field r0 <NEXT> $ r2 = org jooq impl dsl round $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq impl tool field r0 <NEXT> $ r2 = org jooq impl dsl ln $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq impl tool field r0 <NEXT> $ r3 = org jooq impl tool field r1 <NEXT> $ r4 = org jooq impl dsl atan2 $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = org jooq impl function asterisk <NEXT> $ r1 = org jooq impl dsl count $ r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r7 = new org jooq impl function <NEXT> $ r2 = org jooq impl term array_agg <NEXT> $ r3 = r0 get data type <NEXT> $ r4 = $ r3 get array data type <NEXT> $ r5 = newarray org jooq query part [ 1 ] <NEXT> $ r6 = org jooq impl dsl null safe r0 <NEXT> $ r5 [ 0 ] = $ r6 <NEXT> r8 = org jooq query part [ ] $ r5 <NEXT> specialinvoke r7 < init > $ r2 $ r4 r8 <NEXT> r9 = org jooq array agg order by step r7 <NEXT> return r9 <END>
<BEG> r0 = @ parameter0 <NEXT> r6 = new org jooq impl function <NEXT> $ r3 = org jooq impl s q l data type numeric <NEXT> $ r2 = org jooq impl tool empty_querypart <NEXT> $ r4 = r0 to array $ r2 <NEXT> $ r5 = org jooq query part [ ] $ r4 <NEXT> specialinvoke r6 < init > \ `` cume_dist\ <NEXT> r7 = org jooq order aggregate function r6 <NEXT> return r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq impl default data type get data type null r1 <NEXT> $ r3 = org jooq impl dsl param r0 $ r2 <NEXT> return $ r3 <END>
<BEG> $ r0 = org jooq impl dsl inline 2 <NEXT> return $ r0 <END>
<BEG> r1 = new org jooq impl current user <NEXT> specialinvoke r1 < init > <NEXT> r2 = org jooq field r1 <NEXT> return r2 <END>
<BEG> r1 = new org jooq impl current schema <NEXT> specialinvoke r1 < init > <NEXT> r2 = org jooq field r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq impl parser exception r0 <NEXT> $ r1 = r2 sql <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq tool jdbc mock execute context r0 <NEXT> $ r1 = r2 binding <NEXT> $ i0 = lengthof $ r1 <NEXT> if $ i0 < = 1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < = 1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq tool jdbc mock execute context r0 <NEXT> $ i0 = r1 auto generate key <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org jooq tool reflect reflect <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = org jooq tool string utils be blank r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = r1 <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = r0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = org jooq tool string utils abbreviate r0 0 i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = r1 goto label01 <NEXT> return 1 <NEXT> if r0 ! = r1 goto label01 <NEXT> label if r0 == null goto label02 <NEXT> if r1 ! = null goto label03 <NEXT> label return 0 <NEXT> if r1 ! = null goto label03 <NEXT> label $ r2 = r0 get class <NEXT> $ z0 = $ r2 be array <NEXT> if $ z0 == 0 goto label13 <NEXT> $ z2 = r0 instanceof java lang object [ ] <NEXT> if $ z2 == 0 goto label04 <NEXT> $ z27 = r1 instanceof java lang object [ ] <NEXT> if $ z27 == 0 goto label04 <NEXT> $ r35 = java lang object [ ] r0 <NEXT> $ r38 = java lang object [ ] $ r35 <NEXT> $ r36 = java lang object [ ] r1 <NEXT> $ r37 = java lang object [ ] $ r36 <NEXT> $ z28 = java util array deep equal $ r38 $ r37 <NEXT> return $ z28 <NEXT> if $ z27 == 0 goto label04 <NEXT> label $ z3 = r0 instanceof byte [ ] <NEXT> if $ z3 == 0 goto label05 <NEXT> $ z25 = r1 instanceof byte [ ] <NEXT> if $ z25 == 0 goto label05 <NEXT> $ r31 = byte [ ] r0 <NEXT> $ r34 = byte [ ] $ r31 <NEXT> $ r32 = byte [ ] r1 <NEXT> $ r33 = byte [ ] $ r32 <NEXT> $ z26 = java util array equal $ r34 $ r33 <NEXT> return $ z26 <NEXT> if $ z25 == 0 goto label05 <NEXT> label $ z4 = r0 instanceof short [ ] <NEXT> if $ z4 == 0 goto label06 <NEXT> $ z23 = r1 instanceof short [ ] <NEXT> if $ z23 == 0 goto label06 <NEXT> $ r27 = short [ ] r0 <NEXT> $ r30 = short [ ] $ r27 <NEXT> $ r28 = short [ ] r1 <NEXT> $ r29 = short [ ] $ r28 <NEXT> $ z24 = java util array equal $ r30 $ r29 <NEXT> return $ z24 <NEXT> if $ z23 == 0 goto label06 <NEXT> label $ z5 = r0 instanceof int [ ] <NEXT> if $ z5 == 0 goto label07 <NEXT> $ z21 = r1 instanceof int [ ] <NEXT> if $ z21 == 0 goto label07 <NEXT> $ r23 = int [ ] r0 <NEXT> $ r26 = int [ ] $ r23 <NEXT> $ r24 = int [ ] r1 <NEXT> $ r25 = int [ ] $ r24 <NEXT> $ z22 = java util array equal $ r26 $ r25 <NEXT> return $ z22 <NEXT> if $ z21 == 0 goto label07 <NEXT> label $ z6 = r0 instanceof long [ ] <NEXT> if $ z6 == 0 goto label08 <NEXT> $ z19 = r1 instanceof long [ ] <NEXT> if $ z19 == 0 goto label08 <NEXT> $ r19 = long [ ] r0 <NEXT> $ r22 = long [ ] $ r19 <NEXT> $ r20 = long [ ] r1 <NEXT> $ r21 = long [ ] $ r20 <NEXT> $ z20 = java util array equal $ r22 $ r21 <NEXT> return $ z20 <NEXT> if $ z19 == 0 goto label08 <NEXT> label $ z7 = r0 instanceof float [ ] <NEXT> if $ z7 == 0 goto label09 <NEXT> $ z17 = r1 instanceof float [ ] <NEXT> if $ z17 == 0 goto label09 <NEXT> $ r15 = float [ ] r0 <NEXT> $ r18 = float [ ] $ r15 <NEXT> $ r16 = float [ ] r1 <NEXT> $ r17 = float [ ] $ r16 <NEXT> $ z18 = java util array equal $ r18 $ r17 <NEXT> return $ z18 <NEXT> if $ z17 == 0 goto label09 <NEXT> label $ z8 = r0 instanceof double [ ] <NEXT> if $ z8 == 0 goto label10 <NEXT> $ z15 = r1 instanceof double [ ] <NEXT> if $ z15 == 0 goto label10 <NEXT> $ r11 = double [ ] r0 <NEXT> $ r14 = double [ ] $ r11 <NEXT> $ r12 = double [ ] r1 <NEXT> $ r13 = double [ ] $ r12 <NEXT> $ z16 = java util array equal $ r14 $ r13 <NEXT> return $ z16 <NEXT> if $ z15 == 0 goto label10 <NEXT> label $ z9 = r0 instanceof char [ ] <NEXT> if $ z9 == 0 goto label11 <NEXT> $ z13 = r1 instanceof char [ ] <NEXT> if $ z13 == 0 goto label11 <NEXT> $ r7 = char [ ] r0 <NEXT> $ r10 = char [ ] $ r7 <NEXT> $ r8 = char [ ] r1 <NEXT> $ r9 = char [ ] $ r8 <NEXT> $ z14 = java util array equal $ r10 $ r9 <NEXT> return $ z14 <NEXT> if $ z13 == 0 goto label11 <NEXT> label $ z10 = r0 instanceof boolean [ ] <NEXT> if $ z10 == 0 goto label12 <NEXT> $ z11 = r1 instanceof boolean [ ] <NEXT> if $ z11 == 0 goto label12 <NEXT> $ r3 = boolean [ ] r0 <NEXT> $ r6 = boolean [ ] $ r3 <NEXT> $ r4 = boolean [ ] r1 <NEXT> $ r5 = boolean [ ] $ r4 <NEXT> $ z12 = java util array equal $ r6 $ r5 <NEXT> return $ z12 <NEXT> if $ z11 == 0 goto label12 <NEXT> label return 0 <NEXT> if $ z0 == 0 goto label13 <NEXT> label $ z1 = r0 equal r1 <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq t x t format r0 <NEXT> $ i0 = r1 max col width <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq t x t format r0 <NEXT> $ z0 = r1 horizontal header border <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq t x t format r0 <NEXT> $ z0 = r1 intersect line <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq type day to second r0 <NEXT> $ i0 = r1 minute <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq util mariadb maria d b d s l val r0 <NEXT> $ r3 = org jooq util mariadb maria d b d s l val r1 <NEXT> r5 = org jooq field $ r2 <NEXT> r6 = org jooq field $ r3 <NEXT> $ r4 = org jooq util mariadb maria d b d s l decode r5 r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq util mariadb maria d b d s l val r0 <NEXT> r3 = org jooq field $ r1 <NEXT> $ r2 = org jooq util mariadb maria d b d s l uncompress r3 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq util mysql my s q l d s l val r0 <NEXT> $ r3 = org jooq util mysql my s q l d s l val r1 <NEXT> r5 = org jooq field $ r2 <NEXT> r6 = org jooq field $ r3 <NEXT> $ r4 = org jooq util mysql my s q l d s l encode r5 r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq util mysql my s q l d s l val r0 <NEXT> r3 = org jooq field $ r1 <NEXT> $ r2 = org jooq util mysql my s q l d s l compress r3 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq util mysql my s q l d s l val r0 <NEXT> r3 = org jooq field $ r1 <NEXT> $ r2 = org jooq util mysql my s q l d s l uncompress r3 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org jooq util postgres postgres d s l val r0 <NEXT> $ r3 = org jooq util postgres postgres d s l val r1 <NEXT> r5 = org jooq field $ r2 <NEXT> r6 = org jooq field $ r3 <NEXT> $ r4 = org jooq util postgres postgres d s l array remove0 r5 r6 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = newarray org jooq query part [ 1 ] <NEXT> $ r1 [ 0 ] = r0 <NEXT> r3 = org jooq query part [ ] $ r1 <NEXT> $ r2 = org jooq util postgres postgres d s l field \ `` { 0 } oid\ <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org jooq tool reflect reflect on \ `` org postgresql util p g interval\ `` <NEXT> $ r2 = newarray java lang object [ 6 ] <NEXT> $ r3 = java lang integer value of 0 <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> $ r4 = java lang integer value of 0 <NEXT> $ r2 [ 1 ] = $ r4 <NEXT> $ i0 = r0 get sign <NEXT> $ i1 = r0 get day <NEXT> $ i2 = $ i0 * $ i1 <NEXT> $ r5 = java lang integer value of $ i2 <NEXT> $ r2 [ 2 ] = $ r5 <NEXT> $ i3 = r0 get sign <NEXT> $ i4 = r0 get hour <NEXT> $ i5 = $ i3 * $ i4 <NEXT> $ r6 = java lang integer value of $ i5 <NEXT> $ r2 [ 3 ] = $ r6 <NEXT> $ i6 = r0 get sign <NEXT> $ i7 = r0 get minute <NEXT> $ i8 = $ i6 * $ i7 <NEXT> $ r7 = java lang integer value of $ i8 <NEXT> $ r2 [ 4 ] = $ r7 <NEXT> $ i9 = r0 get sign <NEXT> $ i10 = r0 get second <NEXT> $ i11 = $ i9 * $ i10 <NEXT> $ d0 = double $ i11 <NEXT> $ i12 = r0 get sign <NEXT> $ i13 = r0 get nano <NEXT> $ i14 = $ i12 * $ i13 <NEXT> $ d1 = double $ i14 <NEXT> $ d2 = $ d1 1 0e9 <NEXT> $ d3 = $ d0 + $ d2 <NEXT> $ r8 = java lang double value of $ d3 <NEXT> $ r2 [ 5 ] = $ r8 <NEXT> $ r9 = $ r1 create $ r2 <NEXT> $ r10 = $ r9 get <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq util xml jaxb column r0 <NEXT> $ r1 = r2 data type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq util xml jaxb column r0 <NEXT> $ r1 = r2 numeric precision <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq util xml jaxb column r0 <NEXT> r2 ordinal position = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq util xml jaxb index r0 <NEXT> $ r1 = r2 index catalog <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq util xml jaxb index r0 <NEXT> r2 index catalog = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq util xml jaxb index column usage r0 <NEXT> $ r1 = r2 be descend <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq util xml jaxb key column usage r0 <NEXT> r2 constraint catalog = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq util xml jaxb parameter r0 <NEXT> r2 specific catalog = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq util xml jaxb referential constraint r0 <NEXT> $ r1 = r2 unique constraint name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq util xml jaxb routine r0 <NEXT> $ r1 = r2 routine schema <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq util xml jaxb routine r0 <NEXT> r2 routine package = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq util xml jaxb table constraint r0 <NEXT> r2 constraint type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq x m l format r0 <NEXT> $ z0 = r1 header <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf interpreter search schema r0 <NEXT> $ r1 = r2 schema <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 render optional outer keyword <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq conf setting r0 <NEXT> $ r1 = r2 render parenthesis around set operation query <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq conf setting r0 <NEXT> r2 interpreter delay foreign key declaration = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq conf setting r0 <NEXT> r2 parse meta default expression = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org jooq migration configuration r0 <NEXT> $ z0 = r1 drop schema cascade <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq util xml jaxb table constraint r0 <NEXT> $ r1 = r2 enforce <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> r2 include = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> $ r1 = r2 include package routine <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> r2 include package constant = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> r2 include u d t = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> $ r1 = r2 include sequence <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> $ r1 = r2 include foreign key <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> $ r1 = r2 override primary key <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> r2 unsigned type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> $ r1 = r2 input schema <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> $ r1 = r2 output schema to default <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 relation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> r2 deprecate = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> r2 key = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 immutable interface <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 serializable interface <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> r2 jpa annotation = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 global object reference <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 comment on catalog <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> r2 comment on catalog = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 comment on column <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> r2 comment on attribute = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 comment on sequence <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 vararg setter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 fully qualify type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb jdbc r0 <NEXT> $ r1 = r2 driver <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb jdbc r0 <NEXT> r2 username = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb jdbc r0 <NEXT> r2 password = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb matcher enum type r0 <NEXT> r2 enum class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb matcher routine type r0 <NEXT> r2 routine class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb matcher table type r0 <NEXT> r2 table class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb matcher table type r0 <NEXT> $ r1 = r2 pojo class <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org jooq meta postgres pg_catalog routine format type _2 <NEXT> r3 = org jooq meta postgres pg_catalog routine format type r0 <NEXT> r3 set value $ r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> r2 include system index = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> $ r1 = r2 synthetic object <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb database r0 <NEXT> r2 integer display width = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb embeddable definition type r0 <NEXT> $ r1 = r2 comment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 sequence flag <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> r2 nullable annotation = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> r2 pojos a kotlin data class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> $ r1 = r2 kotlin setter jvm name annotation on be prefix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jooq meta jaxb generate r0 <NEXT> r2 comment on embeddables = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb matcher enum type r0 <NEXT> $ r1 = r2 expression <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb synthetic primary key type r0 <NEXT> $ r1 = r2 table <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jooq meta jaxb synthetic view type r0 <NEXT> $ r1 = r2 comment <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jose4j jca provider context r0 <NEXT> $ r1 = r2 general provider context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org jose4j jwt consumer jwt consumer builder r0 <NEXT> r1 skip all validators = 1 <NEXT> r2 = org jose4j jwt consumer jwt consumer builder r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org jose4j jwt consumer i validator <NEXT> specialinvoke r3 < init > z0 r1 <NEXT> r4 = org jose4j jwt consumer jwt consumer builder r0 <NEXT> r4 iss validator = r3 <NEXT> r5 = org jose4j jwt consumer jwt consumer builder r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com jcraft jsch channel session r0 <NEXT> r2 terminal_mode = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com jcraft jsch identity file r0 <NEXT> $ r1 = r2 identity <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = com jcraft jsch j sch r0 <NEXT> $ r3 = r4 get session r1 r2 22 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> if r2 ! = null goto label1 <NEXT> r6 = new com jcraft jsch j sch exception <NEXT> specialinvoke r6 < init > \ `` host must not be null \ `` <NEXT> r8 = java lang throwable r6 <NEXT> throw r8 <NEXT> if r2 ! = null goto label1 <NEXT> label r7 = new com jcraft jsch session <NEXT> r9 = com jcraft jsch j sch r0 <NEXT> specialinvoke r7 < init > r9 r1 r2 i0 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = javax servlet jsp tagext tag extra info r0 <NEXT> $ r1 = r2 tag info <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = javax servlet jsp tagext tag library validator r0 <NEXT> r1 init parameter = null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = javax servlet jsp tagext tag support r0 <NEXT> $ r3 = r8 value <NEXT> if $ r3 ! = null goto label1 <NEXT> r7 = new java util hashtable <NEXT> specialinvoke r7 < init > <NEXT> r9 = javax servlet jsp tagext tag support r0 <NEXT> r9 value = r7 <NEXT> label r10 = javax servlet jsp tagext tag support r0 <NEXT> $ r4 = r10 value <NEXT> $ r4 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = fr bmartel speedtest speed test socket r0 <NEXT> $ r2 = r3 m listener list <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = fr bmartel speedtest speed test socket r0 <NEXT> $ i0 = r1 m socket timeout <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = fr bmartel speedtest speed test socket r0 <NEXT> $ r1 = r2 m computation method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = fr bmartel speedtest speed test socket r0 <NEXT> $ l0 = r1 m download setup time <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = fr bmartel speedtest speed test socket r0 <NEXT> $ r1 = r2 m upload storage type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = newarray byte [ i0 ] <NEXT> i1 = i0 64000 <NEXT> i2 = i0 % 64000 <NEXT> i5 = 0 <NEXT> label if i5 > = i1 goto label2 <NEXT> r2 = newarray byte [ 64000 ] <NEXT> r6 = fr bmartel speedtest utils random gen r0 <NEXT> $ r4 = r6 m random <NEXT> $ r4 next byte r2 <NEXT> $ i4 = i5 * 64000 <NEXT> java lang system arraycopy r2 0 r1 $ i4 64000 <NEXT> i5 = i5 + 1 <NEXT> goto label1 <NEXT> label if i5 > = i1 goto label2 <NEXT> label if i2 < = 0 goto label3 <NEXT> r5 = newarray byte [ i2 ] <NEXT> r7 = fr bmartel speedtest utils random gen r0 <NEXT> $ r3 = r7 m random <NEXT> $ r3 next byte r5 <NEXT> $ i3 = i1 * 64000 <NEXT> java lang system arraycopy r5 0 r1 $ i3 i2 <NEXT> label return r1 <END>
<BEG> $ r0 = new java math big integer <NEXT> $ r1 = fr bmartel speedtest utils speed test utils random <NEXT> specialinvoke $ r0 < init > 130 $ r1 <NEXT> $ r2 = $ r0 to string 32 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> d0 = org locationtech jts algorithm angle angle r1 r0 <NEXT> d1 = org locationtech jts algorithm angle angle r1 r2 <NEXT> $ d2 = org locationtech jts algorithm angle diff d0 d1 <NEXT> return $ d2 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ d3 = d1 - d0 <NEXT> d2 = java lang math sin $ d3 <NEXT> $ b0 = d2 cmpl 0 0 <NEXT> if $ b0 < = 0 goto label1 <NEXT> return 1 <NEXT> if $ b0 < = 0 goto label1 <NEXT> label $ b1 = d2 cmpg 0 0 <NEXT> if $ b1 > = 0 goto label2 <NEXT> return -1 <NEXT> if $ b1 > = 0 goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = org locationtech jts algorithm ray cross counter locate point in ring r0 r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts algorithm line intersector r0 <NEXT> $ z0 = r1 have intersection <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org locationtech jts algorithm line intersector r0 <NEXT> $ z1 = r2 be proper <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts algorithm minimum diameter r0 <NEXT> specialinvoke r1 compute minimum diameter <NEXT> r2 = org locationtech jts algorithm minimum diameter r0 <NEXT> $ d0 = r2 min width <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = r2 next <NEXT> r3 = org locationtech jts geom geometry $ r4 <NEXT> r5 = org locationtech jts dissolve line dissolver r0 <NEXT> r5 add r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = org locationtech jts edgegraph edge graph be valid edge r1 r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r8 = org locationtech jts edgegraph edge graph r0 <NEXT> $ r5 = r8 vertex map <NEXT> $ r6 = $ r5 get r1 <NEXT> r3 = org locationtech jts edgegraph half edge $ r6 <NEXT> r7 = null <NEXT> if r3 == null goto label2 <NEXT> r7 = r3 find r2 <NEXT> label if r7 == null goto label3 <NEXT> return r7 <NEXT> label if r7 == null goto label3 <NEXT> label r9 = org locationtech jts edgegraph edge graph r0 <NEXT> r4 = specialinvoke r9 insert r1 r2 r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org locationtech jts geom coordinate list coord array type <NEXT> r5 = org locationtech jts geom coordinate list r0 <NEXT> $ r2 = r5 to array $ r1 <NEXT> $ r3 = org locationtech jts geom coordinate [ ] $ r2 <NEXT> $ r4 = org locationtech jts geom coordinate [ ] $ r3 <NEXT> return $ r4 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ b0 = d0 cmpg d1 <NEXT> if $ b0 > = 0 goto label1 <NEXT> return -1 <NEXT> if $ b0 > = 0 goto label1 <NEXT> label $ b1 = d0 cmpl d1 <NEXT> if $ b1 < = 0 goto label2 <NEXT> return 1 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label $ z0 = java lang double be na n d0 <NEXT> if $ z0 == 0 goto label4 <NEXT> $ z2 = java lang double be na n d1 <NEXT> if $ z2 == 0 goto label3 <NEXT> return 0 <NEXT> if $ z2 == 0 goto label3 <NEXT> label return -1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label $ z1 = java lang double be na n d1 <NEXT> if $ z1 == 0 goto label5 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts geom envelope r0 <NEXT> $ d0 = r1 miny <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ d1 = r1 x <NEXT> $ d0 = r1 y <NEXT> r2 = org locationtech jts geom envelope r0 <NEXT> r2 expand to include $ d1 $ d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r1 = org locationtech jts geom envelope r0 <NEXT> $ z0 = r1 be null <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = org locationtech jts geom envelope r0 <NEXT> $ d2 = r2 get min x <NEXT> $ d3 = $ d2 + d0 <NEXT> r3 = org locationtech jts geom envelope r0 <NEXT> $ d4 = r3 get max x <NEXT> $ d5 = $ d4 + d0 <NEXT> r4 = org locationtech jts geom envelope r0 <NEXT> $ d6 = r4 get min y <NEXT> $ d7 = $ d6 + d1 <NEXT> r5 = org locationtech jts geom envelope r0 <NEXT> $ d8 = r5 get max y <NEXT> $ d9 = $ d8 + d1 <NEXT> r6 = org locationtech jts geom envelope r0 <NEXT> r6 init $ d3 $ d5 $ d7 $ d9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ d1 = r1 x <NEXT> $ d0 = r1 y <NEXT> r2 = org locationtech jts geom envelope r0 <NEXT> $ z0 = r2 intersect $ d1 $ d0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts geom geometry r0 <NEXT> $ r1 = r2 get envelope internal <NEXT> $ i0 = $ r1 hash code <NEXT> return $ i0 <END>
<BEG> i0 = @ parameter0 <NEXT> c1 = @ parameter1 <NEXT> if c1 ! = 42 goto label1 <NEXT> return 1 <NEXT> if c1 ! = 42 goto label1 <NEXT> label if c1 ! = 84 goto label3 <NEXT> if i0 > = 0 goto label2 <NEXT> if i0 ! = -2 goto label3 <NEXT> label return 1 <NEXT> if i0 ! = -2 goto label3 <NEXT> label if c1 ! = 70 goto label4 <NEXT> if i0 ! = -1 goto label4 <NEXT> label if c1 ! = 48 goto label5 <NEXT> if i0 ! = 0 goto label5 <NEXT> label if c1 ! = 49 goto label6 <NEXT> if i0 ! = 1 goto label6 <NEXT> label if c1 ! = 50 goto label7 <NEXT> if i0 ! = 2 goto label7 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r13 = org locationtech jts geom intersection matrix r0 <NEXT> $ r1 = r13 matrix <NEXT> $ r2 = $ r1 [ 0 ] <NEXT> $ i0 = $ r2 [ 0 ] <NEXT> $ z1 = org locationtech jts geom intersection matrix be true $ i0 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r14 = org locationtech jts geom intersection matrix r0 <NEXT> $ r7 = r14 matrix <NEXT> $ r8 = $ r7 [ 0 ] <NEXT> $ i3 = $ r8 [ 1 ] <NEXT> $ z2 = org locationtech jts geom intersection matrix be true $ i3 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> r15 = org locationtech jts geom intersection matrix r0 <NEXT> $ r9 = r15 matrix <NEXT> $ r10 = $ r9 [ 1 ] <NEXT> $ i4 = $ r10 [ 0 ] <NEXT> $ z3 = org locationtech jts geom intersection matrix be true $ i4 <NEXT> if $ z3 ! = 0 goto label1 <NEXT> r16 = org locationtech jts geom intersection matrix r0 <NEXT> $ r11 = r16 matrix <NEXT> $ r12 = $ r11 [ 1 ] <NEXT> $ i5 = $ r12 [ 1 ] <NEXT> $ z4 = org locationtech jts geom intersection matrix be true $ i5 <NEXT> if $ z4 == 0 goto label2 <NEXT> label $ z5 = 1 <NEXT> goto label3 <NEXT> label if $ z5 == 0 goto label4 <NEXT> r17 = org locationtech jts geom intersection matrix r0 <NEXT> $ r3 = r17 matrix <NEXT> $ r4 = $ r3 [ 2 ] <NEXT> $ i1 = $ r4 [ 0 ] <NEXT> if $ i1 ! = -1 goto label4 <NEXT> r18 = org locationtech jts geom intersection matrix r0 <NEXT> $ r5 = r18 matrix <NEXT> $ r6 = $ r5 [ 2 ] <NEXT> $ i2 = $ r6 [ 1 ] <NEXT> if $ i2 ! = -1 goto label4 <NEXT> $ z6 = 1 <NEXT> goto label5 <NEXT> label return $ z6 <NEXT> if $ i2 ! = -1 goto label4 <NEXT> label $ z6 = 0 <NEXT> if $ z4 == 0 goto label2 <NEXT> label $ z5 = 0 <END>
<BEG> r0 = @ this <NEXT> r25 = org locationtech jts geom intersection matrix r0 <NEXT> $ r1 = r25 matrix <NEXT> $ r2 = $ r1 [ 1 ] <NEXT> i3 = $ r2 [ 0 ] <NEXT> r26 = org locationtech jts geom intersection matrix r0 <NEXT> $ r3 = r26 matrix <NEXT> $ r6 = $ r3 [ 1 ] <NEXT> r27 = org locationtech jts geom intersection matrix r0 <NEXT> $ r4 = r27 matrix <NEXT> $ r5 = $ r4 [ 0 ] <NEXT> $ i0 = $ r5 [ 1 ] <NEXT> $ r6 [ 0 ] = $ i0 <NEXT> r28 = org locationtech jts geom intersection matrix r0 <NEXT> $ r7 = r28 matrix <NEXT> $ r8 = $ r7 [ 0 ] <NEXT> $ r8 [ 1 ] = i3 <NEXT> r29 = org locationtech jts geom intersection matrix r0 <NEXT> $ r9 = r29 matrix <NEXT> $ r10 = $ r9 [ 2 ] <NEXT> i4 = $ r10 [ 0 ] <NEXT> r30 = org locationtech jts geom intersection matrix r0 <NEXT> $ r11 = r30 matrix <NEXT> $ r14 = $ r11 [ 2 ] <NEXT> r31 = org locationtech jts geom intersection matrix r0 <NEXT> $ r12 = r31 matrix <NEXT> $ r13 = $ r12 [ 0 ] <NEXT> $ i1 = $ r13 [ 2 ] <NEXT> $ r14 [ 0 ] = $ i1 <NEXT> r32 = org locationtech jts geom intersection matrix r0 <NEXT> $ r15 = r32 matrix <NEXT> $ r16 = $ r15 [ 0 ] <NEXT> $ r16 [ 2 ] = i4 <NEXT> r33 = org locationtech jts geom intersection matrix r0 <NEXT> $ r17 = r33 matrix <NEXT> $ r18 = $ r17 [ 2 ] <NEXT> i5 = $ r18 [ 1 ] <NEXT> r34 = org locationtech jts geom intersection matrix r0 <NEXT> $ r19 = r34 matrix <NEXT> $ r22 = $ r19 [ 2 ] <NEXT> r35 = org locationtech jts geom intersection matrix r0 <NEXT> $ r20 = r35 matrix <NEXT> $ r21 = $ r20 [ 1 ] <NEXT> $ i2 = $ r21 [ 2 ] <NEXT> $ r22 [ 1 ] = $ i2 <NEXT> r36 = org locationtech jts geom intersection matrix r0 <NEXT> $ r23 = r36 matrix <NEXT> $ r24 = $ r23 [ 1 ] <NEXT> $ r24 [ 2 ] = i5 <NEXT> r37 = org locationtech jts geom intersection matrix r0 <NEXT> return r37 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org locationtech jts geom line segment r0 <NEXT> $ r3 = r4 p0 <NEXT> r5 = org locationtech jts geom line segment r0 <NEXT> $ r2 = r5 p1 <NEXT> $ d0 = org locationtech jts algorithm distance point to line perpendicular r1 $ r3 $ r2 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts geom precision model r0 <NEXT> $ r1 = r2 model type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = new org locationtech jts geom coordinate <NEXT> specialinvoke $ r3 < init > r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new org locationtech jts algorithm point locator <NEXT> specialinvoke r8 < init > <NEXT> r9 = org locationtech jts geom prep basic prepared geometry r0 <NEXT> $ r6 = r9 representative pt <NEXT> r3 = $ r6 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r3 next <NEXT> r4 = org locationtech jts geom coordinate $ r7 <NEXT> $ z1 = r8 intersects r4 r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org locationtech jts geom prep prepare polygon cover r0 <NEXT> $ z0 = r2 eval r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ d3 = r0 x <NEXT> $ d2 = r1 x <NEXT> $ d5 = $ d3 + $ d2 <NEXT> $ d4 = r2 x <NEXT> $ d6 = $ d5 + $ d4 <NEXT> d0 = $ d6 3 0 <NEXT> $ d8 = r0 y <NEXT> $ d7 = r1 y <NEXT> $ d10 = $ d8 + $ d7 <NEXT> $ d9 = r2 y <NEXT> $ d11 = $ d10 + $ d9 <NEXT> d1 = $ d11 3 0 <NEXT> $ r3 = new org locationtech jts geom coordinate <NEXT> specialinvoke $ r3 < init > d0 d1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r4 = org locationtech jts geom triangle r0 <NEXT> $ r3 = r4 p0 <NEXT> r5 = org locationtech jts geom triangle r0 <NEXT> $ r2 = r5 p1 <NEXT> r6 = org locationtech jts geom triangle r0 <NEXT> $ r1 = r6 p2 <NEXT> $ d0 = org locationtech jts geom triangle sign area $ r3 $ r2 $ r1 <NEXT> return $ d0 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ r1 = new org locationtech jts geom util affine transformation <NEXT> specialinvoke $ r1 < init > <NEXT> $ r1 set to scale d0 d1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray double [ 6 ] <NEXT> r2 = org locationtech jts geom util affine transformation r0 <NEXT> $ d0 = r2 m00 <NEXT> $ r1 [ 0 ] = $ d0 <NEXT> r3 = org locationtech jts geom util affine transformation r0 <NEXT> $ d1 = r3 m01 <NEXT> $ r1 [ 1 ] = $ d1 <NEXT> r4 = org locationtech jts geom util affine transformation r0 <NEXT> $ d2 = r4 m02 <NEXT> $ r1 [ 2 ] = $ d2 <NEXT> r5 = org locationtech jts geom util affine transformation r0 <NEXT> $ d3 = r5 m10 <NEXT> $ r1 [ 3 ] = $ d3 <NEXT> r6 = org locationtech jts geom util affine transformation r0 <NEXT> $ d4 = r6 m11 <NEXT> $ r1 [ 4 ] = $ d4 <NEXT> r7 = org locationtech jts geom util affine transformation r0 <NEXT> $ d5 = r7 m12 <NEXT> $ r1 [ 5 ] = $ d5 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> d3 = @ parameter3 <NEXT> $ r1 = org locationtech jts geom util affine transformation rotation instance d0 d1 <NEXT> r3 = org locationtech jts geom util affine transformation r0 <NEXT> r3 compose $ r1 <NEXT> r4 = org locationtech jts geom util affine transformation r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org locationtech jts geomgraph edge <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r2 = org locationtech jts geomgraph edge r1 <NEXT> r15 = org locationtech jts geomgraph edge r0 <NEXT> $ r3 = r15 pt <NEXT> $ i1 = lengthof $ r3 <NEXT> $ r4 = r2 pt <NEXT> $ i0 = lengthof $ r4 <NEXT> if $ i1 == $ i0 goto label2 <NEXT> label z3 = 1 <NEXT> z4 = 1 <NEXT> r16 = org locationtech jts geomgraph edge r0 <NEXT> $ r5 = r16 pt <NEXT> i3 = lengthof $ r5 <NEXT> i4 = 0 <NEXT> label r17 = org locationtech jts geomgraph edge r0 <NEXT> $ r6 = r17 pt <NEXT> $ i2 = lengthof $ r6 <NEXT> if i4 > = $ i2 goto label7 <NEXT> r18 = org locationtech jts geomgraph edge r0 <NEXT> $ r7 = r18 pt <NEXT> $ r10 = $ r7 [ i4 ] <NEXT> $ r8 = r2 pt <NEXT> $ r9 = $ r8 [ i4 ] <NEXT> $ z1 = $ r10 equals2 d $ r9 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> z3 = 0 <NEXT> label r19 = org locationtech jts geomgraph edge r0 <NEXT> $ r11 = r19 pt <NEXT> $ r14 = $ r11 [ i4 ] <NEXT> $ r12 = r2 pt <NEXT> i3 = i3 + -1 <NEXT> $ r13 = $ r12 [ i3 ] <NEXT> $ z2 = $ r14 equals2 d $ r13 <NEXT> if $ z2 ! = 0 goto label5 <NEXT> z4 = 0 <NEXT> label if z3 ! = 0 goto label6 <NEXT> if z4 ! = 0 goto label6 <NEXT> label i4 = i4 + 1 <NEXT> goto label3 <NEXT> if i4 > = $ i2 goto label7 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts geomgraph edge ring r0 <NEXT> $ r1 = r2 edge <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org locationtech jts geomgraph index sweep line event r1 <NEXT> r3 = org locationtech jts geomgraph index sweep line event r0 <NEXT> $ d1 = r3 x value <NEXT> $ d0 = r2 x value <NEXT> $ b0 = $ d1 cmpg $ d0 <NEXT> if $ b0 > = 0 goto label1 <NEXT> return -1 <NEXT> if $ b0 > = 0 goto label1 <NEXT> label r4 = org locationtech jts geomgraph index sweep line event r0 <NEXT> $ d3 = r4 x value <NEXT> $ d2 = r2 x value <NEXT> $ b1 = $ d3 cmpl $ d2 <NEXT> if $ b1 < = 0 goto label2 <NEXT> return 1 <NEXT> if $ b1 < = 0 goto label2 <NEXT> label r5 = org locationtech jts geomgraph index sweep line event r0 <NEXT> $ i3 = r5 event type <NEXT> $ i2 = r2 event type <NEXT> if $ i3 > = $ i2 goto label3 <NEXT> label r6 = org locationtech jts geomgraph index sweep line event r0 <NEXT> $ i5 = r6 event type <NEXT> $ i4 = r2 event type <NEXT> if $ i5 < = $ i4 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org locationtech jts geomgraph planar graph r0 <NEXT> $ r4 = r7 get edge end <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = org locationtech jts geomgraph edge end $ r5 <NEXT> $ r6 = r3 get edge <NEXT> if $ r6 ! = r1 goto label2 <NEXT> return r3 <NEXT> if $ r6 ! = r1 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i5 = 0 <NEXT> label r12 = org locationtech jts geomgraph planar graph r0 <NEXT> $ r5 = r12 edge <NEXT> $ i0 = $ r5 size <NEXT> if i5 > = $ i0 goto label4 <NEXT> r13 = org locationtech jts geomgraph planar graph r0 <NEXT> $ r6 = r13 edge <NEXT> $ r7 = $ r6 get i5 <NEXT> r3 = org locationtech jts geomgraph edge $ r7 <NEXT> r4 = r3 get coordinate <NEXT> $ r9 = r4 [ 0 ] <NEXT> $ r8 = r4 [ 1 ] <NEXT> r14 = org locationtech jts geomgraph planar graph r0 <NEXT> $ z0 = specialinvoke r14 match in same direction r1 r2 $ r9 $ r8 <NEXT> if $ z0 == 0 goto label2 <NEXT> return r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i1 = lengthof r4 <NEXT> $ i2 = $ i1 - 1 <NEXT> $ r11 = r4 [ $ i2 ] <NEXT> $ i3 = lengthof r4 <NEXT> $ i4 = $ i3 - 2 <NEXT> $ r10 = r4 [ $ i4 ] <NEXT> r15 = org locationtech jts geomgraph planar graph r0 <NEXT> $ z1 = specialinvoke r15 match in same direction r1 r2 $ r11 $ r10 <NEXT> if $ z1 == 0 goto label3 <NEXT> label i5 = i5 + 1 <NEXT> goto label1 <NEXT> if i5 > = $ i0 goto label4 <NEXT> label return null <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ b0 = d0 cmpl 0 0 <NEXT> if $ b0 ! = 0 goto label1 <NEXT> $ b4 = d1 cmpl 0 0 <NEXT> if $ b4 ! = 0 goto label1 <NEXT> $ r0 = new java lang illegal argument exception <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` can not compute the quadrant for point \ `` <NEXT> $ r3 = $ r2 append d0 <NEXT> $ r4 = $ r3 append \ <NEXT> $ r5 = $ r4 append d1 <NEXT> $ r6 = $ r5 append \ `` \ `` <NEXT> $ r7 = $ r6 to string <NEXT> specialinvoke $ r0 < init > $ r7 <NEXT> throw $ r0 <NEXT> if $ b4 ! = 0 goto label1 <NEXT> label $ b1 = d0 cmpl 0 0 <NEXT> if $ b1 < 0 goto label3 <NEXT> $ b3 = d1 cmpl 0 0 <NEXT> if $ b3 < 0 goto label2 <NEXT> return 0 <NEXT> if $ b3 < 0 goto label2 <NEXT> label return 3 <NEXT> if $ b1 < 0 goto label3 <NEXT> label $ b2 = d1 cmpl 0 0 <NEXT> if $ b2 < 0 goto label4 <NEXT> return 1 <NEXT> if $ b2 < 0 goto label4 <NEXT> label return 2 <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 == 0 goto label1 <NEXT> if i0 ! = 1 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if i0 ! = 1 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts index kdtree kd node r0 <NEXT> $ r1 = r2 right <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts index kdtree kd node r0 <NEXT> $ i0 = r1 count <NEXT> if $ i0 < = 1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < = 1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r6 = org locationtech jts index kdtree kd tree r0 <NEXT> $ r4 = r6 root <NEXT> r5 = new org locationtech jts index kdtree kd tree $ 1 <NEXT> r7 = org locationtech jts index kdtree kd tree r0 <NEXT> specialinvoke r5 < init > r7 r2 <NEXT> r8 = org locationtech jts index kdtree kd tree r0 <NEXT> r9 = org locationtech jts index kdtree kd node visitor r5 <NEXT> specialinvoke r8 query node $ r4 r1 1 r9 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org locationtech jts index strtree s t rtree r0 <NEXT> $ r2 = specialinvoke r3 near neighbour r1 #infinity <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r26 = org locationtech jts io gml2 g m l handler r0 <NEXT> $ r2 = r26 stack <NEXT> $ i0 = $ r2 size <NEXT> if $ i0 ! = 1 goto label2 <NEXT> r27 = org locationtech jts io gml2 g m l handler r0 <NEXT> $ r10 = r27 stack <NEXT> $ r11 = $ r10 peek <NEXT> r1 = org locationtech jts io gml2 g m l handler $ handler $ r11 <NEXT> $ r12 = r1 child <NEXT> $ i2 = $ r12 size <NEXT> if $ i2 ! = 1 goto label1 <NEXT> $ r21 = r1 child <NEXT> $ r22 = $ r21 get 0 <NEXT> $ r23 = org locationtech jts geom geometry $ r22 <NEXT> return $ r23 <NEXT> if $ i2 ! = 1 goto label1 <NEXT> label r28 = org locationtech jts io gml2 g m l handler r0 <NEXT> $ r14 = r28 gf <NEXT> $ r15 = r1 child <NEXT> r29 = org locationtech jts io gml2 g m l handler r0 <NEXT> $ r13 = r29 stack <NEXT> $ i3 = $ r13 size <NEXT> $ r16 = newarray org locationtech jts geom geometry [ $ i3 ] <NEXT> $ r17 = $ r15 to array $ r16 <NEXT> $ r18 = org locationtech jts geom geometry [ ] $ r17 <NEXT> $ r19 = org locationtech jts geom geometry [ ] $ r18 <NEXT> $ r20 = $ r14 create geometry collection $ r19 <NEXT> r30 = org locationtech jts geom geometry $ r20 <NEXT> return r30 <NEXT> if $ i0 ! = 1 goto label2 <NEXT> label r25 = new java lang illegal state exception <NEXT> r24 = new java lang string builder <NEXT> specialinvoke r24 < init > <NEXT> $ r5 = r24 append \ `` parse do not complete a expect there be \ `` <NEXT> r31 = org locationtech jts io gml2 g m l handler r0 <NEXT> $ r6 = r31 stack <NEXT> $ i1 = $ r6 size <NEXT> $ r7 = $ r5 append $ i1 <NEXT> $ r8 = $ r7 append \ `` element on the stack\ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r25 < init > $ r9 <NEXT> throw r25 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org locationtech jts io kml k m l writer r0 <NEXT> r2 line prefix = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i5 = r0 length <NEXT> i0 = $ i5 2 <NEXT> r1 = newarray byte [ i0 ] <NEXT> i16 = 0 <NEXT> label $ i6 = r0 length <NEXT> $ i7 = $ i6 2 <NEXT> if i16 > = $ i7 goto label3 <NEXT> i1 = 2 * i16 <NEXT> $ i8 = i1 + 1 <NEXT> $ i9 = r0 length <NEXT> if $ i8 < = $ i9 goto label2 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> specialinvoke $ r2 < init > \ `` hex string have odd length\ `` <NEXT> throw $ r2 <NEXT> if $ i8 < = $ i9 goto label2 <NEXT> label $ c10 = r0 char at i1 <NEXT> i2 = org locationtech jts io w k b reader hex to int $ c10 <NEXT> $ i11 = i1 + 1 <NEXT> $ c12 = r0 char at $ i11 <NEXT> i3 = org locationtech jts io w k b reader hex to int $ c12 <NEXT> $ i14 = i2 < < 4 <NEXT> $ b13 = byte i3 <NEXT> $ i15 = $ i14 + $ b13 <NEXT> b4 = byte $ i15 <NEXT> r1 [ i16 ] = b4 <NEXT> i16 = i16 + 1 <NEXT> goto label1 <NEXT> if i16 > = $ i7 goto label3 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r2 = org locationtech jts linearref linear location r0 <NEXT> $ d4 = r2 segment fraction <NEXT> $ b0 = $ d4 cmpg 0 0 <NEXT> if $ b0 < = 0 goto label1 <NEXT> r3 = org locationtech jts linearref linear location r0 <NEXT> $ d5 = r3 segment fraction <NEXT> $ b1 = $ d5 cmpl 1 0 <NEXT> if $ b1 < 0 goto label2 <NEXT> label return <NEXT> if $ b1 < 0 goto label2 <NEXT> label r4 = org locationtech jts linearref linear location r0 <NEXT> d1 = r4 get segment length r1 <NEXT> r5 = org locationtech jts linearref linear location r0 <NEXT> $ d6 = r5 segment fraction <NEXT> d2 = $ d6 * d1 <NEXT> d3 = d1 - d2 <NEXT> $ b2 = d2 cmpg d3 <NEXT> if $ b2 > 0 goto label3 <NEXT> $ b5 = d2 cmpg d0 <NEXT> if $ b5 > = 0 goto label3 <NEXT> r6 = org locationtech jts linearref linear location r0 <NEXT> r6 segment fraction = 0 0 <NEXT> goto label4 <NEXT> label return <NEXT> if $ b5 > = 0 goto label3 <NEXT> label $ b3 = d3 cmpg d2 <NEXT> if $ b3 > 0 goto label4 <NEXT> $ b4 = d3 cmpg d0 <NEXT> if $ b4 > = 0 goto label4 <NEXT> r7 = org locationtech jts linearref linear location r0 <NEXT> r7 segment fraction = 1 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts linearref linear location r0 <NEXT> $ d0 = r1 segment fraction <NEXT> return $ d0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new org locationtech jts linearref location index of line <NEXT> specialinvoke $ r3 < init > r0 <NEXT> $ r4 = $ r3 index of r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org locationtech jts math dd r0 <NEXT> $ d1 = r2 hi <NEXT> $ d0 = r1 hi <NEXT> $ b0 = $ d1 cmpl $ d0 <NEXT> if $ b0 > 0 goto label1 <NEXT> r3 = org locationtech jts math dd r0 <NEXT> $ d3 = r3 hi <NEXT> $ d2 = r1 hi <NEXT> $ b1 = $ d3 cmpl $ d2 <NEXT> if $ b1 ! = 0 goto label2 <NEXT> r4 = org locationtech jts math dd r0 <NEXT> $ d5 = r4 lo <NEXT> $ d4 = r1 lo <NEXT> $ b2 = $ d5 cmpl $ d4 <NEXT> if $ b2 < = 0 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ b2 < = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org locationtech jts math dd r0 <NEXT> $ d1 = r2 hi <NEXT> $ d0 = r1 hi <NEXT> $ b0 = $ d1 cmpl $ d0 <NEXT> if $ b0 > 0 goto label1 <NEXT> r3 = org locationtech jts math dd r0 <NEXT> $ d3 = r3 hi <NEXT> $ d2 = r1 hi <NEXT> $ b1 = $ d3 cmpl $ d2 <NEXT> if $ b1 ! = 0 goto label2 <NEXT> r4 = org locationtech jts math dd r0 <NEXT> $ d5 = r4 lo <NEXT> $ d4 = r1 lo <NEXT> $ b2 = $ d5 cmpl $ d4 <NEXT> if $ b2 < 0 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ b2 < 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = org locationtech jts nod fast nod validator r0 <NEXT> $ r1 = r3 seg int <NEXT> $ r2 = $ r1 get intersection <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org locationtech jts nod interior intersection finder r0 <NEXT> r1 keep intersection = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org locationtech jts nod interior intersection finder r0 <NEXT> r1 be check end segment only = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts nod intersection adder r0 <NEXT> $ z0 = r1 have interior <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org locationtech jts nod iterated noder r0 <NEXT> r1 max iter = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts nod segment intersection detector r0 <NEXT> $ z0 = r1 have non proper intersection <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org locationtech jts nod single pas noder r0 <NEXT> r2 seg int = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org locationtech jts operation buffer buffer parameter r0 <NEXT> r1 quadrant segment = i0 <NEXT> r2 = org locationtech jts operation buffer buffer parameter r0 <NEXT> $ i1 = r2 quadrant segment <NEXT> if $ i1 ! = 0 goto label1 <NEXT> r3 = org locationtech jts operation buffer buffer parameter r0 <NEXT> r3 join style = 3 <NEXT> label r4 = org locationtech jts operation buffer buffer parameter r0 <NEXT> $ i2 = r4 quadrant segment <NEXT> if $ i2 > = 0 goto label2 <NEXT> r5 = org locationtech jts operation buffer buffer parameter r0 <NEXT> r5 join style = 2 <NEXT> r6 = org locationtech jts operation buffer buffer parameter r0 <NEXT> $ i4 = r6 quadrant segment <NEXT> $ i5 = java lang math ab $ i4 <NEXT> $ d0 = double $ i5 <NEXT> r7 = org locationtech jts operation buffer buffer parameter r0 <NEXT> r7 mitre limit = $ d0 <NEXT> label if i0 > 0 goto label3 <NEXT> r8 = org locationtech jts operation buffer buffer parameter r0 <NEXT> r8 quadrant segment = 1 <NEXT> label r9 = org locationtech jts operation buffer buffer parameter r0 <NEXT> $ i3 = r9 join style <NEXT> if $ i3 == 1 goto label4 <NEXT> r10 = org locationtech jts operation buffer buffer parameter r0 <NEXT> r10 quadrant segment = 8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org locationtech jts operation buffer buffer subgraph r0 <NEXT> specialinvoke r6 add reachable r1 <NEXT> r7 = org locationtech jts operation buffer buffer subgraph r0 <NEXT> $ r3 = r7 finder <NEXT> r8 = org locationtech jts operation buffer buffer subgraph r0 <NEXT> $ r2 = r8 dir edge list <NEXT> $ r3 find edge $ r2 <NEXT> r9 = org locationtech jts operation buffer buffer subgraph r0 <NEXT> $ r4 = r9 finder <NEXT> $ r5 = $ r4 get coordinate <NEXT> r10 = org locationtech jts operation buffer buffer subgraph r0 <NEXT> r10 right most coord = $ r5 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new org locationtech jts operation distance distance op <NEXT> specialinvoke $ r3 < init > r0 r1 <NEXT> $ d0 = $ r3 distance <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r6 = org locationtech jts operation overlay maximal edge ring r0 <NEXT> r5 = r6 start de <NEXT> label r1 = r5 get node <NEXT> $ r2 = r1 get edge <NEXT> $ r3 = org locationtech jts geomgraph direct edge star $ r2 <NEXT> $ r3 link minimal direct edge r0 <NEXT> r5 = r5 get next <NEXT> r7 = org locationtech jts operation overlay maximal edge ring r0 <NEXT> $ r4 = r7 start de <NEXT> if r5 ! = $ r4 goto label1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts operation polygonize edge ring r0 <NEXT> $ z0 = r2 be hole <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = org locationtech jts operation polygonize edge ring r0 <NEXT> $ r1 = r3 shell <NEXT> return $ r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = org locationtech jts operation polygonize edge ring r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts operation polygonize polygonizer r0 <NEXT> specialinvoke r2 polygonize <NEXT> r3 = org locationtech jts operation polygonize polygonizer r0 <NEXT> $ r1 = r3 poly list <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts operation polygonize polygonizer r0 <NEXT> specialinvoke r2 polygonize <NEXT> r3 = org locationtech jts operation polygonize polygonizer r0 <NEXT> $ r1 = r3 invalid ring line <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org locationtech jts operation valid be valid op r0 <NEXT> $ r1 = r3 parent geometry <NEXT> r4 = org locationtech jts operation valid be valid op r0 <NEXT> specialinvoke r4 check valid $ r1 <NEXT> r5 = org locationtech jts operation valid be valid op r0 <NEXT> $ r2 = r5 valid err <NEXT> if $ r2 ! = null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r2 ! = null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts planargraph graph component r0 <NEXT> $ r1 = r2 data <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org locationtech jts planargraph node map r0 <NEXT> $ r1 = r3 node map <NEXT> $ r2 = $ r1 value <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org locationtech jts precision geometry precision reducer r0 <NEXT> r1 remove collapse = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org locationtech jts precision geometry precision reducer r0 <NEXT> r1 be pointwise = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org locationtech jts shape random random point in grid builder r0 <NEXT> r1 gutter fraction = d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org locationtech jts simplify douglas peucker simplifier r0 <NEXT> r1 be ensure valid topology = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts triangulate conform delaunay triangulator r0 <NEXT> $ r1 = r2 vertex factory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts triangulate conform delaunay triangulator r0 <NEXT> $ r1 = r2 convex hull <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org locationtech jts triangulate quadedge quad edge r0 <NEXT> $ r1 = r4 rot <NEXT> $ r2 = $ r1 next <NEXT> $ r3 = $ r2 rot <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r5 = org locationtech jts triangulate quadedge quad edge r0 <NEXT> $ r1 = r5 orig <NEXT> $ r2 = $ r1 get coordinate <NEXT> r6 = org locationtech jts triangulate quadedge quad edge r0 <NEXT> $ r3 = r6 d <NEXT> $ r4 = $ r3 get coordinate <NEXT> $ d0 = $ r2 distance $ r4 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 orig <NEXT> r4 = org locationtech jts triangulate quadedge quad edge subdivision r0 <NEXT> $ z0 = r4 be frame vertex $ r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r3 = r1 d <NEXT> r5 = org locationtech jts triangulate quadedge quad edge subdivision r0 <NEXT> $ z1 = r5 be frame vertex $ r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return 1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = newarray org locationtech jts triangulate quadedge vertex [ 3 ] <NEXT> i0 = 0 <NEXT> label if i0 > = 3 goto label2 <NEXT> r3 = org locationtech jts triangulate quadedge quad edge triangle r0 <NEXT> $ r2 = r3 get vertex i0 <NEXT> r1 [ i0 ] = $ r2 <NEXT> i0 = i0 + 1 <NEXT> goto label1 <NEXT> label if i0 > = 3 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org locationtech jts triangulate quadedge vertex r0 <NEXT> r3 = r4 circle center r1 r2 <NEXT> r5 = org locationtech jts triangulate quadedge vertex r0 <NEXT> d0 = specialinvoke r5 distance r3 r1 <NEXT> r6 = org locationtech jts triangulate quadedge vertex r0 <NEXT> r7 = org locationtech jts triangulate quadedge vertex r0 <NEXT> d2 = specialinvoke r6 distance r7 r1 <NEXT> r8 = org locationtech jts triangulate quadedge vertex r0 <NEXT> d3 = specialinvoke r8 distance r1 r2 <NEXT> $ b0 = d3 cmpg d2 <NEXT> if $ b0 > = 0 goto label1 <NEXT> d2 = d3 <NEXT> label r9 = org locationtech jts triangulate quadedge vertex r0 <NEXT> r10 = org locationtech jts triangulate quadedge vertex r0 <NEXT> d4 = specialinvoke r9 distance r2 r10 <NEXT> $ b1 = d4 cmpg d2 <NEXT> if $ b1 > = 0 goto label2 <NEXT> d2 = d4 <NEXT> label $ d1 = d0 d2 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r2 = org locationtech jts triangulate segment r0 <NEXT> $ r1 = r2 data <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org locationtech jts triangulate segment r0 <NEXT> $ r2 = r4 l <NEXT> $ r3 = r1 get line segment <NEXT> $ z0 = $ r2 equal topo $ r3 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org locationtech jts triangulate segment r0 <NEXT> $ r2 = r5 l <NEXT> $ r3 = r1 get line segment <NEXT> $ r4 = $ r2 intersection $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts util coordinate count filter r0 <NEXT> $ i0 = r1 n <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org locationtech jts util debug debug on <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r1 = org locationtech jts util debug debug <NEXT> $ r1 instance print r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org locationtech jts util geometric shape factory r0 <NEXT> $ r2 = r3 dim <NEXT> $ r2 set centre r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts util priority queue r0 <NEXT> $ i0 = r1 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = new java io byte array output stream <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = new java io print stream <NEXT> specialinvoke $ r4 < init > $ r3 <NEXT> r0 print stack trace $ r4 <NEXT> $ r5 = $ r3 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i3 = -1 <NEXT> r2 = null <NEXT> i4 = i0 <NEXT> label if i4 > i1 goto label4 <NEXT> r1 = r0 get coordinate i4 <NEXT> if r2 == null goto label2 <NEXT> $ i2 = r2 compare to r1 <NEXT> if $ i2 < = 0 goto label3 <NEXT> label r2 = r1 <NEXT> i3 = i4 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> label if i4 > i1 goto label4 <NEXT> label return i3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 ! = 0 goto label1 <NEXT> if i1 == 0 goto label2 <NEXT> label if i0 ! = 2 goto label5 <NEXT> if i1 ! = 2 goto label5 <NEXT> label r13 = org locationtech jts geom intersection matrix r0 <NEXT> $ r7 = r13 matrix <NEXT> $ r8 = $ r7 [ 0 ] <NEXT> $ i5 = $ r8 [ 0 ] <NEXT> $ z2 = org locationtech jts geom intersection matrix be true $ i5 <NEXT> if $ z2 == 0 goto label3 <NEXT> r14 = org locationtech jts geom intersection matrix r0 <NEXT> $ r9 = r14 matrix <NEXT> $ r10 = $ r9 [ 0 ] <NEXT> $ i6 = $ r10 [ 2 ] <NEXT> $ z3 = org locationtech jts geom intersection matrix be true $ i6 <NEXT> if $ z3 == 0 goto label3 <NEXT> r15 = org locationtech jts geom intersection matrix r0 <NEXT> $ r11 = r15 matrix <NEXT> $ r12 = $ r11 [ 2 ] <NEXT> $ i7 = $ r12 [ 0 ] <NEXT> $ z4 = org locationtech jts geom intersection matrix be true $ i7 <NEXT> if $ z4 == 0 goto label3 <NEXT> $ z5 = 1 <NEXT> goto label4 <NEXT> label return $ z5 <NEXT> if $ z4 == 0 goto label3 <NEXT> label $ z5 = 0 <NEXT> if i1 ! = 2 goto label5 <NEXT> label if i0 ! = 1 goto label8 <NEXT> if i1 ! = 1 goto label8 <NEXT> r16 = org locationtech jts geom intersection matrix r0 <NEXT> $ r1 = r16 matrix <NEXT> $ r2 = $ r1 [ 0 ] <NEXT> $ i2 = $ r2 [ 0 ] <NEXT> if $ i2 ! = 1 goto label6 <NEXT> r17 = org locationtech jts geom intersection matrix r0 <NEXT> $ r3 = r17 matrix <NEXT> $ r4 = $ r3 [ 0 ] <NEXT> $ i3 = $ r4 [ 2 ] <NEXT> $ z0 = org locationtech jts geom intersection matrix be true $ i3 <NEXT> if $ z0 == 0 goto label6 <NEXT> r18 = org locationtech jts geom intersection matrix r0 <NEXT> $ r5 = r18 matrix <NEXT> $ r6 = $ r5 [ 2 ] <NEXT> $ i4 = $ r6 [ 0 ] <NEXT> $ z1 = org locationtech jts geom intersection matrix be true $ i4 <NEXT> if $ z1 == 0 goto label6 <NEXT> $ z6 = 1 <NEXT> goto label7 <NEXT> label return $ z6 <NEXT> if $ z1 == 0 goto label6 <NEXT> label $ z6 = 0 <NEXT> if i1 ! = 1 goto label8 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org locationtech jts index array list visitor r0 <NEXT> $ r2 = r3 item <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = org locationtech jts index strtree boundable pair r0 <NEXT> $ r1 = r7 boundable1 <NEXT> $ r2 = $ r1 get bound <NEXT> $ r4 = org locationtech jts geom envelope $ r2 <NEXT> r8 = org locationtech jts index strtree boundable pair r0 <NEXT> $ r3 = r8 boundable2 <NEXT> $ r5 = $ r3 get bound <NEXT> $ r6 = org locationtech jts geom envelope $ r5 <NEXT> $ d0 = org locationtech jts index strtree envelope distance maximum distance $ r4 $ r6 <NEXT> return $ d0 <END>
<BEG> r0 = @ parameter0 <NEXT> d0 = org locationtech jts math vector3 d length r0 <NEXT> $ r1 = new org locationtech jts geom coordinate <NEXT> $ d1 = r0 x <NEXT> $ d3 = $ d1 d0 <NEXT> $ d2 = r0 y <NEXT> $ d4 = $ d2 d0 <NEXT> $ d5 = r0 get z <NEXT> $ d6 = $ d5 d0 <NEXT> specialinvoke $ r1 < init > $ d3 $ d4 $ d6 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts nod snapround hot pixel r0 <NEXT> $ d0 = r1 scale factor <NEXT> $ d1 = 1 0 $ d0 <NEXT> return $ d1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r4 = r0 get envelope internal <NEXT> r2 = $ r4 copy <NEXT> if r1 == null goto label1 <NEXT> $ r6 = r1 get envelope internal <NEXT> r2 expand to include $ r6 <NEXT> label $ r5 = new org locationtech jts operation overlayng elevation model <NEXT> specialinvoke $ r5 < init > r2 3 3 <NEXT> if r0 == null goto label2 <NEXT> $ r5 add r0 <NEXT> label if r1 == null goto label3 <NEXT> $ r5 add r1 <NEXT> label return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts operation overlayng input geometry r0 <NEXT> $ i0 = r1 get dimension 0 <NEXT> if $ i0 ! = 2 goto label1 <NEXT> return 0 <NEXT> if $ i0 ! = 2 goto label1 <NEXT> label r2 = org locationtech jts operation overlayng input geometry r0 <NEXT> $ i1 = r2 get dimension 1 <NEXT> if $ i1 ! = 2 goto label2 <NEXT> return 1 <NEXT> if $ i1 ! = 2 goto label2 <NEXT> label return -1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new org locationtech jts operation overlayng overlay n g <NEXT> specialinvoke $ r3 < init > r0 r1 <NEXT> $ i0 = r0 get dimension <NEXT> if $ i0 ! = 2 goto label1 <NEXT> $ r3 set area result only 1 <NEXT> label r7 = $ r3 get result <NEXT> label return r7 <END>
<BEG> r0 = @ this <NEXT> r8 = org locationtech jts operation polygonize edge ring r0 <NEXT> $ z0 = r8 be hole <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label i1 = 0 <NEXT> label r9 = org locationtech jts operation polygonize edge ring r0 <NEXT> $ r3 = r9 de list <NEXT> $ i0 = $ r3 size <NEXT> if i1 > = $ i0 goto label4 <NEXT> r10 = org locationtech jts operation polygonize edge ring r0 <NEXT> $ r4 = r10 de list <NEXT> $ r5 = $ r4 get i1 <NEXT> r1 = org locationtech jts operation polygonize polygonize direct edge $ r5 <NEXT> $ r6 = r1 get sym <NEXT> $ r7 = org locationtech jts operation polygonize polygonize direct edge $ r6 <NEXT> r2 = $ r7 get ring <NEXT> $ z1 = r2 be out hole <NEXT> if $ z1 == 0 goto label3 <NEXT> return r2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> if i1 > = $ i0 goto label4 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = org locationtech jts operation valid be simple op r0 <NEXT> specialinvoke r1 compute <NEXT> r2 = org locationtech jts operation valid be simple op r0 <NEXT> $ z0 = r2 be simple <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org locationtech jts util int array list r0 <NEXT> $ i0 = r3 size <NEXT> r1 = newarray int [ $ i0 ] <NEXT> r4 = org locationtech jts util int array list r0 <NEXT> $ r2 = r4 data <NEXT> r5 = org locationtech jts util int array list r0 <NEXT> $ i1 = r5 size <NEXT> java lang system arraycopy $ r2 0 r1 0 $ i1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com pholser junit quickcheck internal generator array generator r0 <NEXT> r5 length range = r1 <NEXT> $ r2 = com pholser junit quickcheck internal range $ type integral <NEXT> $ i0 = r1 min <NEXT> $ r3 = java lang integer value of $ i0 <NEXT> $ i1 = r1 max <NEXT> $ r4 = java lang integer value of $ i1 <NEXT> com pholser junit quickcheck internal range check range $ r2 $ r3 $ r4 <NEXT> return <END>
<BEG> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> $ r1 = com esotericsoftware kryo util unsafe util direct byte buffer constr <NEXT> if $ r1 ! = null goto label1 <NEXT> return null <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ r3 = com esotericsoftware kryo util unsafe util direct byte buffer constr <NEXT> $ r2 = newarray java lang object [ 3 ] <NEXT> $ r4 = java lang long value of l0 <NEXT> $ r2 [ 0 ] = $ r4 <NEXT> $ r5 = java lang integer value of i1 <NEXT> $ r2 [ 1 ] = $ r5 <NEXT> $ r2 [ 2 ] = null <NEXT> $ r6 = $ r3 new instance $ r2 <NEXT> $ r7 = java nio byte buffer $ r6 <NEXT> label return $ r7 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 & 255 <NEXT> $ i4 = $ i1 < < 24 <NEXT> $ i2 = i0 & 65280 <NEXT> $ i3 = $ i2 < < 8 <NEXT> $ i7 = $ i4 | $ i3 <NEXT> $ i5 = i0 & 16711680 <NEXT> $ i6 = $ i5 > > 8 <NEXT> $ i10 = $ i7 | $ i6 <NEXT> $ i8 = i0 > > 24 <NEXT> $ i9 = $ i8 & 255 <NEXT> $ i11 = $ i10 | $ i9 <NEXT> return $ i11 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> label r9 = org latency utils latency stats r0 <NEXT> $ r3 = r9 record phaser <NEXT> $ r3 reader lock <NEXT> r10 = org latency utils latency stats r0 <NEXT> specialinvoke r10 update histogram <NEXT> r11 = org latency utils latency stats r0 <NEXT> $ r4 = r11 inactive raw data histogram <NEXT> r12 = org hdr histogram abstract histogram r1 <NEXT> $ r4 copy into r12 <NEXT> r13 = org latency utils latency stats r0 <NEXT> $ r5 = r13 inactive pause correction histogram <NEXT> r14 = org hdr histogram abstract histogram $ r5 <NEXT> r1 add r14 <NEXT> label r15 = org latency utils latency stats r0 <NEXT> $ r6 = r15 record phaser <NEXT> $ r6 reader unlock <NEXT> goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> l1 = @ parameter1 <NEXT> r4 = org latency utils pause detector r0 <NEXT> $ r2 = r4 message <NEXT> r3 = new org latency utils pause detector $ pause notification <NEXT> specialinvoke r3 < init > l0 l1 <NEXT> $ r2 add r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = org fusesource leveldbjni internal util $ util j n i on_windows <NEXT> if $ i0 ! = 1 goto label1 <NEXT> $ r10 = r1 get canonical path <NEXT> $ r11 = r0 get canonical path <NEXT> $ i2 = org fusesource leveldbjni internal util $ util j n i create hard link w $ r10 $ r11 0l <NEXT> if $ i2 ! = 0 goto label2 <NEXT> $ r12 = new java io i o exception <NEXT> specialinvoke $ r12 < init > \ `` link failed\ `` <NEXT> throw $ r12 <NEXT> if $ i2 ! = 0 goto label2 <NEXT> label return <NEXT> if $ i0 ! = 1 goto label1 <NEXT> label $ r2 = r0 get canonical path <NEXT> $ r3 = r1 get canonical path <NEXT> $ i1 = org fusesource leveldbjni internal util $ util j n i link $ r2 $ r3 <NEXT> if $ i1 == 0 goto label2 <NEXT> $ r4 = new java io i o exception <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append \ `` link fail \ `` <NEXT> $ r7 = org fusesource leveldbjni internal util strerror <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r4 < init > $ r9 <NEXT> throw $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r5 = r0 graph <NEXT> $ r6 = r0 make op name \ `` abort\ `` <NEXT> r2 = $ r5 op builder \ `` abort\ <NEXT> if r1 == null goto label4 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r4 = r1 [ i1 ] <NEXT> $ r9 = org tensorflow op core abort $ option access $ 000 r4 <NEXT> if $ r9 == null goto label2 <NEXT> $ r13 = org tensorflow op core abort $ option access $ 000 r4 <NEXT> r2 set attr \ `` error_msg\ <NEXT> label $ r10 = org tensorflow op core abort $ option access $ 100 r4 <NEXT> if $ r10 == null goto label3 <NEXT> $ r11 = org tensorflow op core abort $ option access $ 100 r4 <NEXT> $ z0 = $ r11 boolean value <NEXT> r2 set attr \ `` exit_without_error\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label4 <NEXT> label $ r7 = new org tensorflow op core abort <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` accumulator num accumulated\ `` <NEXT> r2 = $ r3 op builder \ `` accumulator num accumulated\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core accumulator num accumulate <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r9 = r0 graph <NEXT> $ r10 = r0 make op name \ `` all candidate sampler\ `` <NEXT> r6 = $ r9 op builder \ `` all candidate sampler\ <NEXT> $ r11 = r1 a output <NEXT> r6 add input $ r11 <NEXT> $ l1 = r2 long value <NEXT> r6 set attr \ `` num_true\ <NEXT> $ l2 = r3 long value <NEXT> r6 set attr \ `` num_sampled\ <NEXT> $ z0 = r4 boolean value <NEXT> r6 set attr \ `` unique\ <NEXT> if r5 == null goto label4 <NEXT> i0 = lengthof r5 <NEXT> i5 = 0 <NEXT> label if i5 > = i0 goto label4 <NEXT> r8 = r5 [ i5 ] <NEXT> $ r18 = org tensorflow op core all candidate sampler $ option access $ 000 r8 <NEXT> if $ r18 == null goto label2 <NEXT> $ r22 = org tensorflow op core all candidate sampler $ option access $ 000 r8 <NEXT> $ l4 = $ r22 long value <NEXT> r6 set attr \ `` seed\ <NEXT> label $ r19 = org tensorflow op core all candidate sampler $ option access $ 100 r8 <NEXT> if $ r19 == null goto label3 <NEXT> $ r20 = org tensorflow op core all candidate sampler $ option access $ 100 r8 <NEXT> $ l3 = $ r20 long value <NEXT> r6 set attr \ `` seed2\ <NEXT> label i5 = i5 + 1 <NEXT> goto label1 <NEXT> label if i5 > = i0 goto label4 <NEXT> label $ r16 = new org tensorflow op core all candidate sampler <NEXT> $ r17 = r6 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core all candidate sampler r0 <NEXT> $ r1 = r2 true expect count <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` any\ `` <NEXT> r4 = $ r7 op builder \ `` any\ <NEXT> $ r9 = r1 a output <NEXT> r4 add input $ r9 <NEXT> $ r11 = r2 a output <NEXT> r4 add input $ r11 <NEXT> if r3 == null goto label3 <NEXT> i0 = lengthof r3 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r6 = r3 [ i1 ] <NEXT> $ r15 = org tensorflow op core any $ option access $ 000 r6 <NEXT> if $ r15 == null goto label2 <NEXT> $ r16 = org tensorflow op core any $ option access $ 000 r6 <NEXT> $ z0 = $ r16 boolean value <NEXT> r4 set attr \ `` keep_dims\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r13 = new org tensorflow op core any <NEXT> $ r14 = r4 build <NEXT> specialinvoke $ r13 < init > $ r14 <NEXT> return $ r13 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core assign r0 <NEXT> $ r1 = r2 output ref <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 graph <NEXT> $ r5 = r0 make op name \ `` atan2\ `` <NEXT> r3 = $ r4 op builder \ `` atan2\ <NEXT> $ r6 = r1 a output <NEXT> r3 add input $ r6 <NEXT> $ r8 = r2 a output <NEXT> r3 add input $ r8 <NEXT> $ r10 = new org tensorflow op core atan2 <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` audio summary\ `` <NEXT> r5 = $ r8 op builder \ `` audio summary v2\ <NEXT> $ r10 = r1 a output <NEXT> r5 add input $ r10 <NEXT> $ r12 = r2 a output <NEXT> r5 add input $ r12 <NEXT> $ r14 = r3 a output <NEXT> r5 add input $ r14 <NEXT> if r4 == null goto label3 <NEXT> i0 = lengthof r4 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label3 <NEXT> r7 = r4 [ i2 ] <NEXT> $ r18 = org tensorflow op core audio summary $ option access $ 000 r7 <NEXT> if $ r18 == null goto label2 <NEXT> $ r19 = org tensorflow op core audio summary $ option access $ 000 r7 <NEXT> $ l1 = $ r19 long value <NEXT> r5 set attr \ `` max_outputs\ <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label3 <NEXT> label $ r16 = new org tensorflow op core audio summary <NEXT> $ r17 = r5 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core avg pool grad r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core barrier incomplete size r0 <NEXT> $ r1 = r2 size <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 graph <NEXT> $ r5 = r0 make op name \ `` batch matrix set diag\ `` <NEXT> r3 = $ r4 op builder \ `` batch matrix set diag\ <NEXT> $ r6 = r1 a output <NEXT> r3 add input $ r6 <NEXT> $ r8 = r2 a output <NEXT> r3 add input $ r8 <NEXT> $ r10 = new org tensorflow op core batch matrix set diag <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` batch matrix solve ls\ `` <NEXT> r5 = $ r8 op builder \ `` batch matrix solve ls\ <NEXT> $ r10 = r1 a output <NEXT> r5 add input $ r10 <NEXT> $ r12 = r2 a output <NEXT> r5 add input $ r12 <NEXT> $ r14 = r3 a output <NEXT> r5 add input $ r14 <NEXT> if r4 == null goto label3 <NEXT> i0 = lengthof r4 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r7 = r4 [ i1 ] <NEXT> $ r18 = org tensorflow op core batch matrix solve ls $ option access $ 000 r7 <NEXT> if $ r18 == null goto label2 <NEXT> $ r19 = org tensorflow op core batch matrix solve ls $ option access $ 000 r7 <NEXT> $ z0 = $ r19 boolean value <NEXT> r5 set attr \ `` fast\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r16 = new org tensorflow op core batch matrix solve l <NEXT> $ r17 = r5 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core batch to space r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core boost tree calculate best gain per feature r0 <NEXT> $ r1 = r2 leave node contribs list <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core boost tree predict r0 <NEXT> $ r1 = r2 logits <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core bucketize r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` batch cholesky\ `` <NEXT> r2 = $ r3 op builder \ `` batch cholesky\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core batch cholesky <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` collective bcast send\ `` <NEXT> r6 = $ r7 op builder \ `` collective bcast send\ <NEXT> $ r9 = r1 a output <NEXT> r6 add input $ r9 <NEXT> $ l0 = r2 long value <NEXT> r6 set attr \ `` group_size\ <NEXT> $ l1 = r3 long value <NEXT> r6 set attr \ `` group_key\ <NEXT> $ l2 = r4 long value <NEXT> r6 set attr \ `` instance_key\ <NEXT> r6 set attr \ `` shape\ <NEXT> $ r15 = new org tensorflow op core collective bcast send <NEXT> $ r16 = r6 build <NEXT> specialinvoke $ r15 < init > $ r16 <NEXT> return $ r15 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = @ parameter6 <NEXT> $ r11 = r0 graph <NEXT> $ r12 = r0 make op name \ `` conv3 d backprop input\ `` <NEXT> r7 = $ r11 op builder \ `` conv3 d backprop input\ <NEXT> $ r13 = r1 a output <NEXT> r7 add input $ r13 <NEXT> $ r15 = r2 a output <NEXT> r7 add input $ r15 <NEXT> $ r17 = r3 a output <NEXT> r7 add input $ r17 <NEXT> $ i1 = r4 size <NEXT> r8 = newarray long [ $ i1 ] <NEXT> i7 = 0 <NEXT> label $ i2 = lengthof r8 <NEXT> if i7 > = $ i2 goto label2 <NEXT> $ r29 = r4 get i7 <NEXT> $ r30 = java lang long $ r29 <NEXT> $ l6 = $ r30 long value <NEXT> r8 [ i7 ] = $ l6 <NEXT> i7 = i7 + 1 <NEXT> goto label1 <NEXT> if i7 > = $ i2 goto label2 <NEXT> label r7 set attr \ `` strides\ <NEXT> r7 set attr \ `` padding\ <NEXT> if r6 == null goto label7 <NEXT> i0 = lengthof r6 <NEXT> i8 = 0 <NEXT> label if i8 > = i0 goto label7 <NEXT> r9 = r6 [ i8 ] <NEXT> $ r23 = org tensorflow op core conv3 d backprop input $ option access $ 000 r9 <NEXT> if $ r23 == null goto label6 <NEXT> $ r24 = org tensorflow op core conv3 d backprop input $ option access $ 000 r9 <NEXT> $ i3 = $ r24 size <NEXT> r10 = newarray long [ $ i3 ] <NEXT> i9 = 0 <NEXT> label $ i4 = lengthof r10 <NEXT> if i9 > = $ i4 goto label5 <NEXT> $ r26 = org tensorflow op core conv3 d backprop input $ option access $ 000 r9 <NEXT> $ r27 = $ r26 get i9 <NEXT> $ r28 = java lang long $ r27 <NEXT> $ l5 = $ r28 long value <NEXT> r10 [ i9 ] = $ l5 <NEXT> i9 = i9 + 1 <NEXT> goto label4 <NEXT> if i9 > = $ i4 goto label5 <NEXT> label r7 set attr \ `` dilations\ <NEXT> label i8 = i8 + 1 <NEXT> goto label3 <NEXT> label if i8 > = i0 goto label7 <NEXT> label $ r21 = new org tensorflow op core conv3 d backprop input <NEXT> $ r22 = r7 build <NEXT> specialinvoke $ r21 < init > $ r22 <NEXT> return $ r21 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` cos\ `` <NEXT> r2 = $ r3 op builder \ `` cos\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core co <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r9 = r0 graph <NEXT> $ r10 = r0 make op name \ `` crop and resize grad boxes\ `` <NEXT> r6 = $ r9 op builder \ `` crop and resize grad boxes\ <NEXT> $ r11 = r1 a output <NEXT> r6 add input $ r11 <NEXT> $ r13 = r2 a output <NEXT> r6 add input $ r13 <NEXT> $ r15 = r3 a output <NEXT> r6 add input $ r15 <NEXT> $ r17 = r4 a output <NEXT> r6 add input $ r17 <NEXT> if r5 == null goto label3 <NEXT> i0 = lengthof r5 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r8 = r5 [ i1 ] <NEXT> $ r21 = org tensorflow op core crop and resize grad box $ option access $ 000 r8 <NEXT> if $ r21 == null goto label2 <NEXT> $ r22 = org tensorflow op core crop and resize grad box $ option access $ 000 r8 <NEXT> r6 set attr \ `` method\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r19 = new org tensorflow op core crop and resize grad box <NEXT> $ r20 = r6 build <NEXT> specialinvoke $ r19 < init > $ r20 <NEXT> return $ r19 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core crop and resize grad box r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core crop and resize grad image r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r9 = r0 graph <NEXT> $ r10 = r0 make op name \ `` c t c loss\ `` <NEXT> r6 = $ r9 op builder \ `` c t c loss\ <NEXT> $ r11 = r1 a output <NEXT> r6 add input $ r11 <NEXT> $ r13 = r2 a output <NEXT> r6 add input $ r13 <NEXT> $ r15 = r3 a output <NEXT> r6 add input $ r15 <NEXT> $ r17 = r4 a output <NEXT> r6 add input $ r17 <NEXT> if r5 == null goto label5 <NEXT> i0 = lengthof r5 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label5 <NEXT> r8 = r5 [ i1 ] <NEXT> $ r21 = org tensorflow op core c t c loss $ option access $ 000 r8 <NEXT> if $ r21 == null goto label2 <NEXT> $ r28 = org tensorflow op core c t c loss $ option access $ 000 r8 <NEXT> $ z2 = $ r28 boolean value <NEXT> r6 set attr \ `` preprocess_collapse_repeated\ <NEXT> label $ r22 = org tensorflow op core c t c loss $ option access $ 100 r8 <NEXT> if $ r22 == null goto label3 <NEXT> $ r26 = org tensorflow op core c t c loss $ option access $ 100 r8 <NEXT> $ z1 = $ r26 boolean value <NEXT> r6 set attr \ `` ctc_merge_repeated\ <NEXT> label $ r23 = org tensorflow op core c t c loss $ option access $ 200 r8 <NEXT> if $ r23 == null goto label4 <NEXT> $ r24 = org tensorflow op core c t c loss $ option access $ 200 r8 <NEXT> $ z0 = $ r24 boolean value <NEXT> r6 set attr \ `` ignore_longer_outputs_than_inputs\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label5 <NEXT> label $ r19 = new org tensorflow op core c t c loss <NEXT> $ r20 = r6 build <NEXT> specialinvoke $ r19 < init > $ r20 <NEXT> return $ r19 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r9 = r0 graph <NEXT> $ r10 = r0 make op name \ `` cudnn r n n\ `` <NEXT> r6 = $ r9 op builder \ `` cudnn r n n\ <NEXT> $ r11 = r1 a output <NEXT> r6 add input $ r11 <NEXT> $ r13 = r2 a output <NEXT> r6 add input $ r13 <NEXT> $ r15 = r3 a output <NEXT> r6 add input $ r15 <NEXT> $ r17 = r4 a output <NEXT> r6 add input $ r17 <NEXT> if r5 == null goto label9 <NEXT> i0 = lengthof r5 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label9 <NEXT> r8 = r5 [ i3 ] <NEXT> $ r21 = org tensorflow op core cudnn r n n $ option access $ 000 r8 <NEXT> if $ r21 == null goto label2 <NEXT> $ r40 = org tensorflow op core cudnn r n n $ option access $ 000 r8 <NEXT> r6 set attr \ `` rnn_mode\ <NEXT> label $ r22 = org tensorflow op core cudnn r n n $ option access $ 100 r8 <NEXT> if $ r22 == null goto label3 <NEXT> $ r38 = org tensorflow op core cudnn r n n $ option access $ 100 r8 <NEXT> r6 set attr \ `` input_mode\ <NEXT> label $ r23 = org tensorflow op core cudnn r n n $ option access $ 200 r8 <NEXT> if $ r23 == null goto label4 <NEXT> $ r36 = org tensorflow op core cudnn r n n $ option access $ 200 r8 <NEXT> r6 set attr \ `` direction\ <NEXT> label $ r24 = org tensorflow op core cudnn r n n $ option access $ 300 r8 <NEXT> if $ r24 == null goto label5 <NEXT> $ r34 = org tensorflow op core cudnn r n n $ option access $ 300 r8 <NEXT> $ f0 = $ r34 float value <NEXT> r6 set attr \ `` dropout\ <NEXT> label $ r25 = org tensorflow op core cudnn r n n $ option access $ 400 r8 <NEXT> if $ r25 == null goto label6 <NEXT> $ r32 = org tensorflow op core cudnn r n n $ option access $ 400 r8 <NEXT> $ l2 = $ r32 long value <NEXT> r6 set attr \ `` seed\ <NEXT> label $ r26 = org tensorflow op core cudnn r n n $ option access $ 500 r8 <NEXT> if $ r26 == null goto label7 <NEXT> $ r30 = org tensorflow op core cudnn r n n $ option access $ 500 r8 <NEXT> $ l1 = $ r30 long value <NEXT> r6 set attr \ `` seed2\ <NEXT> label $ r27 = org tensorflow op core cudnn r n n $ option access $ 600 r8 <NEXT> if $ r27 == null goto label8 <NEXT> $ r28 = org tensorflow op core cudnn r n n $ option access $ 600 r8 <NEXT> $ z0 = $ r28 boolean value <NEXT> r6 set attr \ `` is_training\ <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label9 <NEXT> label $ r19 = new org tensorflow op core cudnn r n n <NEXT> $ r20 = r6 build <NEXT> specialinvoke $ r19 < init > $ r20 <NEXT> return $ r19 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r9 = r0 graph <NEXT> $ r10 = r0 make op name \ `` cudnn r n n v2\ `` <NEXT> r6 = $ r9 op builder \ `` cudnn r n n v2\ <NEXT> $ r11 = r1 a output <NEXT> r6 add input $ r11 <NEXT> $ r13 = r2 a output <NEXT> r6 add input $ r13 <NEXT> $ r15 = r3 a output <NEXT> r6 add input $ r15 <NEXT> $ r17 = r4 a output <NEXT> r6 add input $ r17 <NEXT> if r5 == null goto label9 <NEXT> i0 = lengthof r5 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label9 <NEXT> r8 = r5 [ i3 ] <NEXT> $ r21 = org tensorflow op core cudnn r n n v2 $ option access $ 000 r8 <NEXT> if $ r21 == null goto label2 <NEXT> $ r40 = org tensorflow op core cudnn r n n v2 $ option access $ 000 r8 <NEXT> r6 set attr \ `` rnn_mode\ <NEXT> label $ r22 = org tensorflow op core cudnn r n n v2 $ option access $ 100 r8 <NEXT> if $ r22 == null goto label3 <NEXT> $ r38 = org tensorflow op core cudnn r n n v2 $ option access $ 100 r8 <NEXT> r6 set attr \ `` input_mode\ <NEXT> label $ r23 = org tensorflow op core cudnn r n n v2 $ option access $ 200 r8 <NEXT> if $ r23 == null goto label4 <NEXT> $ r36 = org tensorflow op core cudnn r n n v2 $ option access $ 200 r8 <NEXT> r6 set attr \ `` direction\ <NEXT> label $ r24 = org tensorflow op core cudnn r n n v2 $ option access $ 300 r8 <NEXT> if $ r24 == null goto label5 <NEXT> $ r34 = org tensorflow op core cudnn r n n v2 $ option access $ 300 r8 <NEXT> $ f0 = $ r34 float value <NEXT> r6 set attr \ `` dropout\ <NEXT> label $ r25 = org tensorflow op core cudnn r n n v2 $ option access $ 400 r8 <NEXT> if $ r25 == null goto label6 <NEXT> $ r32 = org tensorflow op core cudnn r n n v2 $ option access $ 400 r8 <NEXT> $ l2 = $ r32 long value <NEXT> r6 set attr \ `` seed\ <NEXT> label $ r26 = org tensorflow op core cudnn r n n v2 $ option access $ 500 r8 <NEXT> if $ r26 == null goto label7 <NEXT> $ r30 = org tensorflow op core cudnn r n n v2 $ option access $ 500 r8 <NEXT> $ l1 = $ r30 long value <NEXT> r6 set attr \ `` seed2\ <NEXT> label $ r27 = org tensorflow op core cudnn r n n v2 $ option access $ 600 r8 <NEXT> if $ r27 == null goto label8 <NEXT> $ r28 = org tensorflow op core cudnn r n n v2 $ option access $ 600 r8 <NEXT> $ z0 = $ r28 boolean value <NEXT> r6 set attr \ `` is_training\ <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label9 <NEXT> label $ r19 = new org tensorflow op core cudnn r n n v2 <NEXT> $ r20 = r6 build <NEXT> specialinvoke $ r19 < init > $ r20 <NEXT> return $ r19 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` data format dim map\ `` <NEXT> r3 = $ r6 op builder \ `` data format dim map\ <NEXT> $ r8 = r1 a output <NEXT> r3 add input $ r8 <NEXT> if r2 == null goto label4 <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r5 = r2 [ i1 ] <NEXT> $ r12 = org tensorflow op core data format dim map $ option access $ 000 r5 <NEXT> if $ r12 == null goto label2 <NEXT> $ r16 = org tensorflow op core data format dim map $ option access $ 000 r5 <NEXT> r3 set attr \ `` src_format\ <NEXT> label $ r13 = org tensorflow op core data format dim map $ option access $ 100 r5 <NEXT> if $ r13 == null goto label3 <NEXT> $ r14 = org tensorflow op core data format dim map $ option access $ 100 r5 <NEXT> r3 set attr \ `` dst_format\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label4 <NEXT> label $ r10 = new org tensorflow op core data format dim map <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` decode compressed\ `` <NEXT> r3 = $ r6 op builder \ `` decode compressed\ <NEXT> $ r8 = r1 a output <NEXT> r3 add input $ r8 <NEXT> if r2 == null goto label3 <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r5 = r2 [ i1 ] <NEXT> $ r12 = org tensorflow op core decode compress $ option access $ 000 r5 <NEXT> if $ r12 == null goto label2 <NEXT> $ r13 = org tensorflow op core decode compress $ option access $ 000 r5 <NEXT> r3 set attr \ `` compression_type\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r10 = new org tensorflow op core decode compress <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core decode j s o n example r0 <NEXT> $ r1 = r2 binary example <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core decode proto v2 r0 <NEXT> $ r1 = r2 size <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core decode wav r0 <NEXT> $ r1 = r2 audio <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core depthwise conv2d native backprop input r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` destroy resource op\ `` <NEXT> r3 = $ r6 op builder \ `` destroy resource op\ <NEXT> $ r8 = r1 a output <NEXT> r3 add input $ r8 <NEXT> if r2 == null goto label3 <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r5 = r2 [ i1 ] <NEXT> $ r12 = org tensorflow op core destroy resource op $ option access $ 000 r5 <NEXT> if $ r12 == null goto label2 <NEXT> $ r13 = org tensorflow op core destroy resource op $ option access $ 000 r5 <NEXT> $ z0 = $ r13 boolean value <NEXT> r3 set attr \ `` ignore_lookup_error\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r10 = new org tensorflow op core destroy resource op <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 graph <NEXT> $ r5 = r0 make op name \ `` div no nan\ `` <NEXT> r3 = $ r4 op builder \ `` div no nan\ <NEXT> $ r6 = r1 a output <NEXT> r3 add input $ r6 <NEXT> $ r8 = r2 a output <NEXT> r3 add input $ r8 <NEXT> $ r10 = new org tensorflow op core div no nan <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core draw bound box r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core elu grad r0 <NEXT> $ r1 = r2 backprops <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` encode base64\ `` <NEXT> r3 = $ r6 op builder \ `` encode base64\ <NEXT> $ r8 = r1 a output <NEXT> r3 add input $ r8 <NEXT> if r2 == null goto label3 <NEXT> i0 = lengthof r2 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r5 = r2 [ i1 ] <NEXT> $ r12 = org tensorflow op core encode base64 $ option access $ 000 r5 <NEXT> if $ r12 == null goto label2 <NEXT> $ r13 = org tensorflow op core encode base64 $ option access $ 000 r5 <NEXT> $ z0 = $ r13 boolean value <NEXT> r3 set attr \ `` pad\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r10 = new org tensorflow op core encode base64 <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` encode jpeg\ `` <NEXT> r3 = $ r6 op builder \ `` encode jpeg\ <NEXT> $ r8 = r1 a output <NEXT> r3 add input $ r8 <NEXT> if r2 == null goto label11 <NEXT> i0 = lengthof r2 <NEXT> i4 = 0 <NEXT> label if i4 > = i0 goto label11 <NEXT> r5 = r2 [ i4 ] <NEXT> $ r12 = org tensorflow op core encode jpeg $ option access $ 000 r5 <NEXT> if $ r12 == null goto label02 <NEXT> $ r37 = org tensorflow op core encode jpeg $ option access $ 000 r5 <NEXT> r3 set attr \ `` format\ <NEXT> label $ r13 = org tensorflow op core encode jpeg $ option access $ 100 r5 <NEXT> if $ r13 == null goto label03 <NEXT> $ r35 = org tensorflow op core encode jpeg $ option access $ 100 r5 <NEXT> $ l3 = $ r35 long value <NEXT> r3 set attr \ `` quality\ <NEXT> label $ r14 = org tensorflow op core encode jpeg $ option access $ 200 r5 <NEXT> if $ r14 == null goto label04 <NEXT> $ r33 = org tensorflow op core encode jpeg $ option access $ 200 r5 <NEXT> $ z2 = $ r33 boolean value <NEXT> r3 set attr \ `` progressive\ <NEXT> label $ r15 = org tensorflow op core encode jpeg $ option access $ 300 r5 <NEXT> if $ r15 == null goto label05 <NEXT> $ r31 = org tensorflow op core encode jpeg $ option access $ 300 r5 <NEXT> $ z1 = $ r31 boolean value <NEXT> r3 set attr \ `` optimize_size\ <NEXT> label $ r16 = org tensorflow op core encode jpeg $ option access $ 400 r5 <NEXT> if $ r16 == null goto label06 <NEXT> $ r29 = org tensorflow op core encode jpeg $ option access $ 400 r5 <NEXT> $ z0 = $ r29 boolean value <NEXT> r3 set attr \ `` chroma_downsampling\ <NEXT> label $ r17 = org tensorflow op core encode jpeg $ option access $ 500 r5 <NEXT> if $ r17 == null goto label07 <NEXT> $ r27 = org tensorflow op core encode jpeg $ option access $ 500 r5 <NEXT> r3 set attr \ `` density_unit\ <NEXT> label $ r18 = org tensorflow op core encode jpeg $ option access $ 600 r5 <NEXT> if $ r18 == null goto label08 <NEXT> $ r25 = org tensorflow op core encode jpeg $ option access $ 600 r5 <NEXT> $ l2 = $ r25 long value <NEXT> r3 set attr \ `` x_density\ <NEXT> label $ r19 = org tensorflow op core encode jpeg $ option access $ 700 r5 <NEXT> if $ r19 == null goto label09 <NEXT> $ r23 = org tensorflow op core encode jpeg $ option access $ 700 r5 <NEXT> $ l1 = $ r23 long value <NEXT> r3 set attr \ `` y_density\ <NEXT> label $ r20 = org tensorflow op core encode jpeg $ option access $ 800 r5 <NEXT> if $ r20 == null goto label10 <NEXT> $ r21 = org tensorflow op core encode jpeg $ option access $ 800 r5 <NEXT> r3 set attr \ `` xmp_metadata\ <NEXT> label i4 = i4 + 1 <NEXT> goto label01 <NEXT> label if i4 > = i0 goto label11 <NEXT> label $ r10 = new org tensorflow op core encode jpeg <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core expand dim r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` experimental iterator get device\ `` <NEXT> r2 = $ r3 op builder \ `` experimental iterator get device\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core experimental iterator get device <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` experimental unbatch dataset\ `` <NEXT> r4 = $ r6 op builder \ `` experimental unbatch dataset\ <NEXT> $ r8 = r1 a output <NEXT> r4 add input $ r8 <NEXT> $ i0 = r2 size <NEXT> r5 = newarray org tensorflow data type [ $ i0 ] <NEXT> i4 = 0 <NEXT> label $ i1 = lengthof r5 <NEXT> if i4 > = $ i1 goto label2 <NEXT> $ r16 = r2 get i4 <NEXT> $ r17 = java lang class $ r16 <NEXT> $ r18 = org tensorflow data type from class $ r17 <NEXT> r5 [ i4 ] = $ r18 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i1 goto label2 <NEXT> label r4 set attr \ `` output_types\ <NEXT> $ i2 = r3 size <NEXT> r19 = newarray org tensorflow shape [ $ i2 ] <NEXT> i5 = 0 <NEXT> label $ i3 = lengthof r19 <NEXT> if i5 > = $ i3 goto label4 <NEXT> $ r14 = r3 get i5 <NEXT> $ r15 = org tensorflow shape $ r14 <NEXT> r19 [ i5 ] = $ r15 <NEXT> i5 = i5 + 1 <NEXT> goto label3 <NEXT> if i5 > = $ i3 goto label4 <NEXT> label r4 set attr \ `` output_shapes\ <NEXT> $ r12 = new org tensorflow op core experimental unbatch dataset <NEXT> $ r13 = r4 build <NEXT> specialinvoke $ r12 < init > $ r13 <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core extract jpeg shape r0 <NEXT> $ r1 = r2 image shape <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core fake quant with min max var per channel gradient r0 <NEXT> $ r1 = r2 backprop wrt min <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core fake quant with min max var per channel gradient r0 <NEXT> $ r1 = r2 backprop wrt max <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` flush summary writer\ `` <NEXT> r2 = $ r3 op builder \ `` flush summary writer\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core flush summary writer <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core fuse batch norm grad r0 <NEXT> $ r1 = r2 reserve space4 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core get session tensor r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r4 = org tensorflow op core histogram fix width create r0 r1 r2 r3 class \ `` ljava lang integer \ `` <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 graph <NEXT> $ r5 = r0 make op name \ `` import event\ `` <NEXT> r3 = $ r4 op builder \ `` import event\ <NEXT> $ r6 = r1 a output <NEXT> r3 add input $ r6 <NEXT> $ r8 = r2 a output <NEXT> r3 add input $ r8 <NEXT> $ r10 = new org tensorflow op core import event <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 graph <NEXT> $ r5 = r0 make op name \ `` irfft\ `` <NEXT> r3 = $ r4 op builder \ `` irfft\ <NEXT> $ r6 = r1 a output <NEXT> r3 add input $ r6 <NEXT> $ r8 = r2 a output <NEXT> r3 add input $ r8 <NEXT> $ r10 = new org tensorflow op core irfft <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` be boosted tree ensemble initialized\ `` <NEXT> r2 = $ r3 op builder \ `` be boosted tree ensemble initialized\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core be boost tree ensemble initialized <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` iterator from string handle\ `` <NEXT> r4 = $ r8 op builder \ `` iterator from string handle\ <NEXT> $ r10 = r1 a output <NEXT> r4 add input $ r10 <NEXT> $ i1 = r2 size <NEXT> r5 = newarray org tensorflow data type [ $ i1 ] <NEXT> i5 = 0 <NEXT> label $ i2 = lengthof r5 <NEXT> if i5 > = $ i2 goto label2 <NEXT> $ r21 = r2 get i5 <NEXT> $ r22 = java lang class $ r21 <NEXT> $ r23 = org tensorflow data type from class $ r22 <NEXT> r5 [ i5 ] = $ r23 <NEXT> i5 = i5 + 1 <NEXT> goto label1 <NEXT> if i5 > = $ i2 goto label2 <NEXT> label r4 set attr \ `` output_types\ <NEXT> if r3 == null goto label7 <NEXT> i0 = lengthof r3 <NEXT> i6 = 0 <NEXT> label if i6 > = i0 goto label7 <NEXT> r6 = r3 [ i6 ] <NEXT> $ r15 = org tensorflow op core iterator from string handle $ option access $ 000 r6 <NEXT> if $ r15 == null goto label6 <NEXT> $ r16 = org tensorflow op core iterator from string handle $ option access $ 000 r6 <NEXT> $ i3 = $ r16 size <NEXT> r7 = newarray org tensorflow shape [ $ i3 ] <NEXT> i7 = 0 <NEXT> label $ i4 = lengthof r7 <NEXT> if i7 > = $ i4 goto label5 <NEXT> $ r18 = org tensorflow op core iterator from string handle $ option access $ 000 r6 <NEXT> $ r19 = $ r18 get i7 <NEXT> $ r20 = org tensorflow shape $ r19 <NEXT> r7 [ i7 ] = $ r20 <NEXT> i7 = i7 + 1 <NEXT> goto label4 <NEXT> if i7 > = $ i4 goto label5 <NEXT> label r4 set attr \ `` output_shapes\ <NEXT> label i6 = i6 + 1 <NEXT> goto label3 <NEXT> label if i6 > = i0 goto label7 <NEXT> label $ r13 = new org tensorflow op core iterator from string handle <NEXT> $ r14 = r4 build <NEXT> specialinvoke $ r13 < init > $ r14 <NEXT> return $ r13 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` iterator get next\ `` <NEXT> r4 = $ r6 op builder \ `` iterator get next\ <NEXT> $ r8 = r1 a output <NEXT> r4 add input $ r8 <NEXT> $ i0 = r2 size <NEXT> r5 = newarray org tensorflow data type [ $ i0 ] <NEXT> i4 = 0 <NEXT> label $ i1 = lengthof r5 <NEXT> if i4 > = $ i1 goto label2 <NEXT> $ r16 = r2 get i4 <NEXT> $ r17 = java lang class $ r16 <NEXT> $ r18 = org tensorflow data type from class $ r17 <NEXT> r5 [ i4 ] = $ r18 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i1 goto label2 <NEXT> label r4 set attr \ `` output_types\ <NEXT> $ i2 = r3 size <NEXT> r19 = newarray org tensorflow shape [ $ i2 ] <NEXT> i5 = 0 <NEXT> label $ i3 = lengthof r19 <NEXT> if i5 > = $ i3 goto label4 <NEXT> $ r14 = r3 get i5 <NEXT> $ r15 = org tensorflow shape $ r14 <NEXT> r19 [ i5 ] = $ r15 <NEXT> i5 = i5 + 1 <NEXT> goto label3 <NEXT> if i5 > = $ i3 goto label4 <NEXT> label r4 set attr \ `` output_shapes\ <NEXT> $ r12 = new org tensorflow op core iterator get next <NEXT> $ r13 = r4 build <NEXT> specialinvoke $ r12 < init > $ r13 <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` iterator v2\ `` <NEXT> r5 = $ r7 op builder \ `` iterator v2\ <NEXT> r5 set attr \ `` shared_name\ <NEXT> r5 set attr \ `` container\ <NEXT> $ i0 = r3 size <NEXT> r6 = newarray org tensorflow data type [ $ i0 ] <NEXT> i4 = 0 <NEXT> label $ i1 = lengthof r6 <NEXT> if i4 > = $ i1 goto label2 <NEXT> $ r17 = r3 get i4 <NEXT> $ r18 = java lang class $ r17 <NEXT> $ r19 = org tensorflow data type from class $ r18 <NEXT> r6 [ i4 ] = $ r19 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i1 goto label2 <NEXT> label r5 set attr \ `` output_types\ <NEXT> $ i2 = r4 size <NEXT> r20 = newarray org tensorflow shape [ $ i2 ] <NEXT> i5 = 0 <NEXT> label $ i3 = lengthof r20 <NEXT> if i5 > = $ i3 goto label4 <NEXT> $ r15 = r4 get i5 <NEXT> $ r16 = org tensorflow shape $ r15 <NEXT> r20 [ i5 ] = $ r16 <NEXT> i5 = i5 + 1 <NEXT> goto label3 <NEXT> if i5 > = $ i3 goto label4 <NEXT> label r5 set attr \ `` output_shapes\ <NEXT> $ r13 = new org tensorflow op core iterator v2 <NEXT> $ r14 = r5 build <NEXT> specialinvoke $ r13 < init > $ r14 <NEXT> return $ r13 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core leaky relu grad r0 <NEXT> $ r1 = r2 backprops <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 graph <NEXT> $ r5 = r0 make op name \ `` less equal\ `` <NEXT> r3 = $ r4 op builder \ `` less equal\ <NEXT> $ r6 = r1 a output <NEXT> r3 add input $ r6 <NEXT> $ r8 = r2 a output <NEXT> r3 add input $ r8 <NEXT> $ r10 = new org tensorflow op core less equal <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` log matrix determinant\ `` <NEXT> r2 = $ r3 op builder \ `` log matrix determinant\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core log matrix determinant <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core low bound r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` map clear\ `` <NEXT> r3 = $ r6 op builder \ `` map clear\ <NEXT> $ i1 = r1 size <NEXT> r4 = newarray org tensorflow data type [ $ i1 ] <NEXT> i5 = 0 <NEXT> label $ i2 = lengthof r4 <NEXT> if i5 > = $ i2 goto label2 <NEXT> $ r23 = r1 get i5 <NEXT> $ r24 = java lang class $ r23 <NEXT> $ r25 = org tensorflow data type from class $ r24 <NEXT> r4 [ i5 ] = $ r25 <NEXT> i5 = i5 + 1 <NEXT> goto label1 <NEXT> if i5 > = $ i2 goto label2 <NEXT> label r3 set attr \ `` dtypes\ <NEXT> if r2 == null goto label8 <NEXT> i0 = lengthof r2 <NEXT> i6 = 0 <NEXT> label if i6 > = i0 goto label8 <NEXT> r5 = r2 [ i6 ] <NEXT> $ r11 = org tensorflow op core map clear $ option access $ 000 r5 <NEXT> if $ r11 == null goto label4 <NEXT> $ r21 = org tensorflow op core map clear $ option access $ 000 r5 <NEXT> $ l4 = $ r21 long value <NEXT> r3 set attr \ `` capacity\ <NEXT> label $ r12 = org tensorflow op core map clear $ option access $ 100 r5 <NEXT> if $ r12 == null goto label5 <NEXT> $ r19 = org tensorflow op core map clear $ option access $ 100 r5 <NEXT> $ l3 = $ r19 long value <NEXT> r3 set attr \ `` memory_limit\ <NEXT> label $ r13 = org tensorflow op core map clear $ option access $ 200 r5 <NEXT> if $ r13 == null goto label6 <NEXT> $ r17 = org tensorflow op core map clear $ option access $ 200 r5 <NEXT> r3 set attr \ `` container\ <NEXT> label $ r14 = org tensorflow op core map clear $ option access $ 300 r5 <NEXT> if $ r14 == null goto label7 <NEXT> $ r15 = org tensorflow op core map clear $ option access $ 300 r5 <NEXT> r3 set attr \ `` shared_name\ <NEXT> label i6 = i6 + 1 <NEXT> goto label3 <NEXT> label if i6 > = i0 goto label8 <NEXT> label $ r9 = new org tensorflow op core map clear <NEXT> $ r10 = r3 build <NEXT> specialinvoke $ r9 < init > $ r10 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core batch matrix determinant r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core batch matrix set diag r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 graph <NEXT> $ r5 = r0 make op name \ `` maximum\ `` <NEXT> r3 = $ r4 op builder \ `` maximum\ <NEXT> $ r6 = r1 a output <NEXT> r3 add input $ r6 <NEXT> $ r8 = r2 a output <NEXT> r3 add input $ r8 <NEXT> $ r10 = new org tensorflow op core maximum <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core max pool grad with argmax r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r9 = r0 graph <NEXT> $ r10 = r0 make op name \ `` max pool v2\ `` <NEXT> r6 = $ r9 op builder \ `` max pool v2\ <NEXT> $ r11 = r1 a output <NEXT> r6 add input $ r11 <NEXT> $ r13 = r2 a output <NEXT> r6 add input $ r13 <NEXT> $ r15 = r3 a output <NEXT> r6 add input $ r15 <NEXT> r6 set attr \ `` padding\ <NEXT> if r5 == null goto label3 <NEXT> i0 = lengthof r5 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r8 = r5 [ i1 ] <NEXT> $ r20 = org tensorflow op core max pool v2 $ option access $ 000 r8 <NEXT> if $ r20 == null goto label2 <NEXT> $ r21 = org tensorflow op core max pool v2 $ option access $ 000 r8 <NEXT> r6 set attr \ `` data_format\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r18 = new org tensorflow op core max pool v2 <NEXT> $ r19 = r6 build <NEXT> specialinvoke $ r18 < init > $ r19 <NEXT> return $ r18 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` merge\ `` <NEXT> r2 = $ r3 op builder \ `` merge\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core merge <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` merge summary\ `` <NEXT> r2 = $ r3 op builder \ `` merge summary\ <NEXT> $ r5 = org tensorflow op operands a output r1 <NEXT> r2 add input list $ r5 <NEXT> $ r7 = new org tensorflow op core merge summary <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` model dataset\ `` <NEXT> r4 = $ r6 op builder \ `` model dataset\ <NEXT> $ r8 = r1 a output <NEXT> r4 add input $ r8 <NEXT> $ i0 = r2 size <NEXT> r5 = newarray org tensorflow data type [ $ i0 ] <NEXT> i4 = 0 <NEXT> label $ i1 = lengthof r5 <NEXT> if i4 > = $ i1 goto label2 <NEXT> $ r16 = r2 get i4 <NEXT> $ r17 = java lang class $ r16 <NEXT> $ r18 = org tensorflow data type from class $ r17 <NEXT> r5 [ i4 ] = $ r18 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i1 goto label2 <NEXT> label r4 set attr \ `` output_types\ <NEXT> $ i2 = r3 size <NEXT> r19 = newarray org tensorflow shape [ $ i2 ] <NEXT> i5 = 0 <NEXT> label $ i3 = lengthof r19 <NEXT> if i5 > = $ i3 goto label4 <NEXT> $ r14 = r3 get i5 <NEXT> $ r15 = org tensorflow shape $ r14 <NEXT> r19 [ i5 ] = $ r15 <NEXT> i5 = i5 + 1 <NEXT> goto label3 <NEXT> if i5 > = $ i3 goto label4 <NEXT> label r4 set attr \ `` output_shapes\ <NEXT> $ r12 = new org tensorflow op core model dataset <NEXT> $ r13 = r4 build <NEXT> specialinvoke $ r12 < init > $ r13 <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` multi device iterator get next from shard\ `` <NEXT> r6 = $ r8 op builder \ `` multi device iterator get next from shard\ <NEXT> $ r10 = r1 a output <NEXT> r6 add input $ r10 <NEXT> $ r12 = r2 a output <NEXT> r6 add input $ r12 <NEXT> $ r14 = r3 a output <NEXT> r6 add input $ r14 <NEXT> $ i0 = r4 size <NEXT> r7 = newarray org tensorflow data type [ $ i0 ] <NEXT> i4 = 0 <NEXT> label $ i1 = lengthof r7 <NEXT> if i4 > = $ i1 goto label2 <NEXT> $ r22 = r4 get i4 <NEXT> $ r23 = java lang class $ r22 <NEXT> $ r24 = org tensorflow data type from class $ r23 <NEXT> r7 [ i4 ] = $ r24 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i1 goto label2 <NEXT> label r6 set attr \ `` output_types\ <NEXT> $ i2 = r5 size <NEXT> r25 = newarray org tensorflow shape [ $ i2 ] <NEXT> i5 = 0 <NEXT> label $ i3 = lengthof r25 <NEXT> if i5 > = $ i3 goto label4 <NEXT> $ r20 = r5 get i5 <NEXT> $ r21 = org tensorflow shape $ r20 <NEXT> r25 [ i5 ] = $ r21 <NEXT> i5 = i5 + 1 <NEXT> goto label3 <NEXT> if i5 > = $ i3 goto label4 <NEXT> label r6 set attr \ `` output_shapes\ <NEXT> $ r18 = new org tensorflow op core multi device iterator get next from shard <NEXT> $ r19 = r6 build <NEXT> specialinvoke $ r18 < init > $ r19 <NEXT> return $ r18 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` non max suppression\ `` <NEXT> r5 = $ r8 op builder \ `` non max suppression\ <NEXT> $ r10 = r1 a output <NEXT> r5 add input $ r10 <NEXT> $ r12 = r2 a output <NEXT> r5 add input $ r12 <NEXT> $ r14 = r3 a output <NEXT> r5 add input $ r14 <NEXT> if r4 == null goto label3 <NEXT> i0 = lengthof r4 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r7 = r4 [ i1 ] <NEXT> $ r18 = org tensorflow op core non max suppression $ option access $ 000 r7 <NEXT> if $ r18 == null goto label2 <NEXT> $ r19 = org tensorflow op core non max suppression $ option access $ 000 r7 <NEXT> $ f0 = $ r19 float value <NEXT> r5 set attr \ `` iou_threshold\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r16 = new org tensorflow op core non max suppression <NEXT> $ r17 = r5 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core non max suppression v4 r0 <NEXT> $ r1 = r2 valid output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` non max suppression with overlaps\ `` <NEXT> r6 = $ r7 op builder \ `` non max suppression with overlaps\ <NEXT> $ r9 = r1 a output <NEXT> r6 add input $ r9 <NEXT> $ r11 = r2 a output <NEXT> r6 add input $ r11 <NEXT> $ r13 = r3 a output <NEXT> r6 add input $ r13 <NEXT> $ r15 = r4 a output <NEXT> r6 add input $ r15 <NEXT> $ r17 = r5 a output <NEXT> r6 add input $ r17 <NEXT> $ r19 = new org tensorflow op core non max suppression with overlap <NEXT> $ r20 = r6 build <NEXT> specialinvoke $ r19 < init > $ r20 <NEXT> return $ r19 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` pad f i f o queue\ `` <NEXT> r3 = $ r7 op builder \ `` pad f i f o queue v2\ <NEXT> $ i1 = r1 size <NEXT> r4 = newarray org tensorflow data type [ $ i1 ] <NEXT> i6 = 0 <NEXT> label $ i2 = lengthof r4 <NEXT> if i6 > = $ i2 goto label02 <NEXT> $ r27 = r1 get i6 <NEXT> $ r28 = java lang class $ r27 <NEXT> $ r29 = org tensorflow data type from class $ r28 <NEXT> r4 [ i6 ] = $ r29 <NEXT> i6 = i6 + 1 <NEXT> goto label01 <NEXT> if i6 > = $ i2 goto label02 <NEXT> label r3 set attr \ `` component_types\ <NEXT> if r2 == null goto label10 <NEXT> i0 = lengthof r2 <NEXT> i7 = 0 <NEXT> label if i7 > = i0 goto label10 <NEXT> r5 = r2 [ i7 ] <NEXT> $ r12 = org tensorflow op core pad f i f o queue $ option access $ 000 r5 <NEXT> if $ r12 == null goto label06 <NEXT> $ r22 = org tensorflow op core pad f i f o queue $ option access $ 000 r5 <NEXT> $ i4 = $ r22 size <NEXT> r6 = newarray org tensorflow shape [ $ i4 ] <NEXT> i8 = 0 <NEXT> label $ i5 = lengthof r6 <NEXT> if i8 > = $ i5 goto label05 <NEXT> $ r24 = org tensorflow op core pad f i f o queue $ option access $ 000 r5 <NEXT> $ r25 = $ r24 get i8 <NEXT> $ r26 = org tensorflow shape $ r25 <NEXT> r6 [ i8 ] = $ r26 <NEXT> i8 = i8 + 1 <NEXT> goto label04 <NEXT> if i8 > = $ i5 goto label05 <NEXT> label r3 set attr \ `` shapes\ <NEXT> label $ r13 = org tensorflow op core pad f i f o queue $ option access $ 100 r5 <NEXT> if $ r13 == null goto label07 <NEXT> $ r20 = org tensorflow op core pad f i f o queue $ option access $ 100 r5 <NEXT> $ l3 = $ r20 long value <NEXT> r3 set attr \ `` capacity\ <NEXT> label $ r14 = org tensorflow op core pad f i f o queue $ option access $ 200 r5 <NEXT> if $ r14 == null goto label08 <NEXT> $ r18 = org tensorflow op core pad f i f o queue $ option access $ 200 r5 <NEXT> r3 set attr \ `` container\ <NEXT> label $ r15 = org tensorflow op core pad f i f o queue $ option access $ 300 r5 <NEXT> if $ r15 == null goto label09 <NEXT> $ r16 = org tensorflow op core pad f i f o queue $ option access $ 300 r5 <NEXT> r3 set attr \ `` shared_name\ <NEXT> label i7 = i7 + 1 <NEXT> goto label03 <NEXT> label if i7 > = i0 goto label10 <NEXT> label $ r10 = new org tensorflow op core pad f i f o queue <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = @ parameter6 <NEXT> r7 = @ parameter7 <NEXT> $ r10 = r0 graph <NEXT> $ r11 = r0 make op name \ `` parse example\ `` <NEXT> r8 = $ r10 op builder \ `` parse example\ <NEXT> $ r12 = r1 a output <NEXT> r8 add input $ r12 <NEXT> $ r14 = r2 a output <NEXT> r8 add input $ r14 <NEXT> $ r16 = org tensorflow op operands a output r3 <NEXT> r8 add input list $ r16 <NEXT> $ r18 = org tensorflow op operands a output r4 <NEXT> r8 add input list $ r18 <NEXT> $ r20 = org tensorflow op operands a output r5 <NEXT> r8 add input list $ r20 <NEXT> $ i0 = r6 size <NEXT> r9 = newarray org tensorflow data type [ $ i0 ] <NEXT> i4 = 0 <NEXT> label $ i1 = lengthof r9 <NEXT> if i4 > = $ i1 goto label2 <NEXT> $ r28 = r6 get i4 <NEXT> $ r29 = java lang class $ r28 <NEXT> $ r30 = org tensorflow data type from class $ r29 <NEXT> r9 [ i4 ] = $ r30 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i1 goto label2 <NEXT> label r8 set attr \ `` sparse_types\ <NEXT> $ i2 = r7 size <NEXT> r31 = newarray org tensorflow shape [ $ i2 ] <NEXT> i5 = 0 <NEXT> label $ i3 = lengthof r31 <NEXT> if i5 > = $ i3 goto label4 <NEXT> $ r26 = r7 get i5 <NEXT> $ r27 = org tensorflow shape $ r26 <NEXT> r31 [ i5 ] = $ r27 <NEXT> i5 = i5 + 1 <NEXT> goto label3 <NEXT> if i5 > = $ i3 goto label4 <NEXT> label r8 set attr \ `` dense_shapes\ <NEXT> $ r24 = new org tensorflow op core parse example <NEXT> $ r25 = r8 build <NEXT> specialinvoke $ r24 < init > $ r25 <NEXT> return $ r24 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` priority queue\ `` <NEXT> r4 = $ r7 op builder \ `` priority queue v2\ <NEXT> $ i1 = r1 size <NEXT> r5 = newarray org tensorflow data type [ $ i1 ] <NEXT> i6 = 0 <NEXT> label $ i2 = lengthof r5 <NEXT> if i6 > = $ i2 goto label2 <NEXT> $ r24 = r1 get i6 <NEXT> $ r25 = java lang class $ r24 <NEXT> $ r26 = org tensorflow data type from class $ r25 <NEXT> r5 [ i6 ] = $ r26 <NEXT> i6 = i6 + 1 <NEXT> goto label1 <NEXT> if i6 > = $ i2 goto label2 <NEXT> label r4 set attr \ `` component_types\ <NEXT> $ i3 = r2 size <NEXT> r27 = newarray org tensorflow shape [ $ i3 ] <NEXT> i7 = 0 <NEXT> label $ i4 = lengthof r27 <NEXT> if i7 > = $ i4 goto label4 <NEXT> $ r22 = r2 get i7 <NEXT> $ r23 = org tensorflow shape $ r22 <NEXT> r27 [ i7 ] = $ r23 <NEXT> i7 = i7 + 1 <NEXT> goto label3 <NEXT> if i7 > = $ i4 goto label4 <NEXT> label r4 set attr \ `` shapes\ <NEXT> if r3 == null goto label9 <NEXT> i0 = lengthof r3 <NEXT> i8 = 0 <NEXT> label if i8 > = i0 goto label9 <NEXT> r6 = r3 [ i8 ] <NEXT> $ r13 = org tensorflow op core priority queue $ option access $ 000 r6 <NEXT> if $ r13 == null goto label6 <NEXT> $ r20 = org tensorflow op core priority queue $ option access $ 000 r6 <NEXT> $ l5 = $ r20 long value <NEXT> r4 set attr \ `` capacity\ <NEXT> label $ r14 = org tensorflow op core priority queue $ option access $ 100 r6 <NEXT> if $ r14 == null goto label7 <NEXT> $ r18 = org tensorflow op core priority queue $ option access $ 100 r6 <NEXT> r4 set attr \ `` container\ <NEXT> label $ r15 = org tensorflow op core priority queue $ option access $ 200 r6 <NEXT> if $ r15 == null goto label8 <NEXT> $ r16 = org tensorflow op core priority queue $ option access $ 200 r6 <NEXT> r4 set attr \ `` shared_name\ <NEXT> label i8 = i8 + 1 <NEXT> goto label5 <NEXT> label if i8 > = i0 goto label9 <NEXT> label $ r11 = new org tensorflow op core priority queue <NEXT> $ r12 = r4 build <NEXT> specialinvoke $ r11 < init > $ r12 <NEXT> return $ r11 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` quantize and dequantize v2\ `` <NEXT> r5 = $ r8 op builder \ `` quantize and dequantize v2\ <NEXT> $ r10 = r1 a output <NEXT> r5 add input $ r10 <NEXT> $ r12 = r2 a output <NEXT> r5 add input $ r12 <NEXT> $ r14 = r3 a output <NEXT> r5 add input $ r14 <NEXT> if r4 == null goto label6 <NEXT> i0 = lengthof r4 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label6 <NEXT> r7 = r4 [ i2 ] <NEXT> $ r18 = org tensorflow op core quantize and dequantize v2 $ option access $ 000 r7 <NEXT> if $ r18 == null goto label2 <NEXT> $ r28 = org tensorflow op core quantize and dequantize v2 $ option access $ 000 r7 <NEXT> $ z1 = $ r28 boolean value <NEXT> r5 set attr \ `` signed_input\ <NEXT> label $ r19 = org tensorflow op core quantize and dequantize v2 $ option access $ 100 r7 <NEXT> if $ r19 == null goto label3 <NEXT> $ r26 = org tensorflow op core quantize and dequantize v2 $ option access $ 100 r7 <NEXT> $ l1 = $ r26 long value <NEXT> r5 set attr \ `` num_bits\ <NEXT> label $ r20 = org tensorflow op core quantize and dequantize v2 $ option access $ 200 r7 <NEXT> if $ r20 == null goto label4 <NEXT> $ r24 = org tensorflow op core quantize and dequantize v2 $ option access $ 200 r7 <NEXT> $ z0 = $ r24 boolean value <NEXT> r5 set attr \ `` range_given\ <NEXT> label $ r21 = org tensorflow op core quantize and dequantize v2 $ option access $ 300 r7 <NEXT> if $ r21 == null goto label5 <NEXT> $ r22 = org tensorflow op core quantize and dequantize v2 $ option access $ 300 r7 <NEXT> r5 set attr \ `` round_mode\ <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label6 <NEXT> label $ r16 = new org tensorflow op core quantize and dequantize v2 <NEXT> $ r17 = r5 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` quantize concat\ `` <NEXT> r5 = $ r6 op builder \ `` quantize concat\ <NEXT> $ r8 = r1 a output <NEXT> r5 add input $ r8 <NEXT> $ r10 = r2 a output <NEXT> r5 add input $ r10 <NEXT> $ r12 = org tensorflow op operands a output r3 <NEXT> r5 add input list $ r12 <NEXT> $ r14 = org tensorflow op operands a output r4 <NEXT> r5 add input list $ r14 <NEXT> $ r16 = new org tensorflow op core quantize concat <NEXT> $ r17 = r5 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core quantize relu r0 <NEXT> $ r1 = r2 min activation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core quantize reshape r0 <NEXT> $ r1 = r2 output max <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core quantize v2 r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` random crop\ `` <NEXT> r4 = $ r7 op builder \ `` random crop\ <NEXT> $ r9 = r1 a output <NEXT> r4 add input $ r9 <NEXT> $ r11 = r2 a output <NEXT> r4 add input $ r11 <NEXT> if r3 == null goto label4 <NEXT> i0 = lengthof r3 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label4 <NEXT> r6 = r3 [ i3 ] <NEXT> $ r15 = org tensorflow op core random crop $ option access $ 000 r6 <NEXT> if $ r15 == null goto label2 <NEXT> $ r19 = org tensorflow op core random crop $ option access $ 000 r6 <NEXT> $ l2 = $ r19 long value <NEXT> r4 set attr \ `` seed\ <NEXT> label $ r16 = org tensorflow op core random crop $ option access $ 100 r6 <NEXT> if $ r16 == null goto label3 <NEXT> $ r17 = org tensorflow op core random crop $ option access $ 100 r6 <NEXT> $ l1 = $ r17 long value <NEXT> r4 set attr \ `` seed2\ <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label4 <NEXT> label $ r13 = new org tensorflow op core random crop <NEXT> $ r14 = r4 build <NEXT> specialinvoke $ r13 < init > $ r14 <NEXT> return $ r13 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` reader serialize state\ `` <NEXT> r2 = $ r3 op builder \ `` reader serialize state v2\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core reader serialize state <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` read file\ `` <NEXT> r2 = $ r3 op builder \ `` read file\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core read file <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` reciprocal\ `` <NEXT> r2 = $ r3 op builder \ `` reciprocal\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core reciprocal <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` ref merge\ `` <NEXT> r2 = $ r3 op builder \ `` ref merge\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core ref merge <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` resize area\ `` <NEXT> r4 = $ r7 op builder \ `` resize area\ <NEXT> $ r9 = r1 a output <NEXT> r4 add input $ r9 <NEXT> $ r11 = r2 a output <NEXT> r4 add input $ r11 <NEXT> if r3 == null goto label3 <NEXT> i0 = lengthof r3 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r6 = r3 [ i1 ] <NEXT> $ r15 = org tensorflow op core resize area $ option access $ 000 r6 <NEXT> if $ r15 == null goto label2 <NEXT> $ r16 = org tensorflow op core resize area $ option access $ 000 r6 <NEXT> $ z0 = $ r16 boolean value <NEXT> r4 set attr \ `` align_corners\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r13 = new org tensorflow op core resize area <NEXT> $ r14 = r4 build <NEXT> specialinvoke $ r13 < init > $ r14 <NEXT> return $ r13 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core irfft3d r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` rint\ `` <NEXT> r2 = $ r3 op builder \ `` rint\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core rint <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core sample distort bound box r0 <NEXT> $ r1 = r2 begin <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core scalar summary r0 <NEXT> $ r1 = r2 summary <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core batch self adjoint eig v2 r0 <NEXT> $ r1 = r2 e <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` sigmoid\ `` <NEXT> r2 = $ r3 op builder \ `` sigmoid\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core sigmoid <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r0 graph <NEXT> $ r5 = r0 make op name \ `` sigmoid grad\ `` <NEXT> r3 = $ r4 op builder \ `` sigmoid grad\ <NEXT> $ r6 = r1 a output <NEXT> r3 add input $ r6 <NEXT> $ r8 = r2 a output <NEXT> r3 add input $ r8 <NEXT> $ r10 = new org tensorflow op core sigmoid grad <NEXT> $ r11 = r3 build <NEXT> specialinvoke $ r10 < init > $ r11 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core skipgram r0 <NEXT> $ r1 = r2 vocab freq <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = @ parameter6 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` sparse accumulator apply gradient\ `` <NEXT> r7 = $ r8 op builder \ `` sparse accumulator apply gradient\ <NEXT> $ r10 = r1 a output <NEXT> r7 add input $ r10 <NEXT> $ r12 = r2 a output <NEXT> r7 add input $ r12 <NEXT> $ r14 = r3 a output <NEXT> r7 add input $ r14 <NEXT> $ r16 = r4 a output <NEXT> r7 add input $ r16 <NEXT> $ r18 = r5 a output <NEXT> r7 add input $ r18 <NEXT> $ z0 = r6 boolean value <NEXT> r7 set attr \ `` has_known_shape\ <NEXT> $ r21 = new org tensorflow op core sparse accumulator apply gradient <NEXT> $ r22 = r7 build <NEXT> specialinvoke $ r21 < init > $ r22 <NEXT> return $ r21 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core sparse accumulator take gradient r0 <NEXT> $ r1 = r2 shape <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r6 = r0 graph <NEXT> $ r7 = r0 make op name \ `` sparse dense cwise div\ `` <NEXT> r5 = $ r6 op builder \ `` sparse dense cwise div\ <NEXT> $ r8 = r1 a output <NEXT> r5 add input $ r8 <NEXT> $ r10 = r2 a output <NEXT> r5 add input $ r10 <NEXT> $ r12 = r3 a output <NEXT> r5 add input $ r12 <NEXT> $ r14 = r4 a output <NEXT> r5 add input $ r14 <NEXT> $ r16 = new org tensorflow op core sparse dense cwise div <NEXT> $ r17 = r5 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> $ r9 = r0 graph <NEXT> $ r10 = r0 make op name \ `` sparse reduce max\ `` <NEXT> r6 = $ r9 op builder \ `` sparse reduce max\ <NEXT> $ r11 = r1 a output <NEXT> r6 add input $ r11 <NEXT> $ r13 = r2 a output <NEXT> r6 add input $ r13 <NEXT> $ r15 = r3 a output <NEXT> r6 add input $ r15 <NEXT> $ r17 = r4 a output <NEXT> r6 add input $ r17 <NEXT> if r5 == null goto label3 <NEXT> i0 = lengthof r5 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r8 = r5 [ i1 ] <NEXT> $ r21 = org tensorflow op core sparse reduce max $ option access $ 000 r8 <NEXT> if $ r21 == null goto label2 <NEXT> $ r22 = org tensorflow op core sparse reduce max $ option access $ 000 r8 <NEXT> $ z0 = $ r22 boolean value <NEXT> r6 set attr \ `` keep_dims\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r19 = new org tensorflow op core sparse reduce max <NEXT> $ r20 = r6 build <NEXT> specialinvoke $ r19 < init > $ r20 <NEXT> return $ r19 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core split v r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core take many sparse from tensor map r0 <NEXT> $ r1 = r2 sparse shape <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r7 = r0 graph <NEXT> $ r8 = r0 make op name \ `` temporary variable\ `` <NEXT> r4 = $ r7 op builder \ `` temporary variable\ <NEXT> r4 set attr \ `` shape\ <NEXT> $ r10 = org tensorflow data type from class r2 <NEXT> r4 set attr \ `` dtype\ <NEXT> if r3 == null goto label3 <NEXT> i0 = lengthof r3 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r6 = r3 [ i1 ] <NEXT> $ r14 = org tensorflow op core temporary variable $ option access $ 000 r6 <NEXT> if $ r14 == null goto label2 <NEXT> $ r15 = org tensorflow op core temporary variable $ option access $ 000 r6 <NEXT> r4 set attr \ `` var_name\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r12 = new org tensorflow op core temporary variable <NEXT> $ r13 = r4 build <NEXT> specialinvoke $ r12 < init > $ r13 <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core tensor array concat r0 <NEXT> $ r1 = r2 lengths <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` tensor array pack\ `` <NEXT> r5 = $ r8 op builder \ `` tensor array pack\ <NEXT> $ r10 = r1 a output <NEXT> r5 add input $ r10 <NEXT> $ r12 = r2 a output <NEXT> r5 add input $ r12 <NEXT> $ r14 = org tensorflow data type from class r3 <NEXT> r5 set attr \ `` dtype\ <NEXT> if r4 == null goto label3 <NEXT> i0 = lengthof r4 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r7 = r4 [ i1 ] <NEXT> $ r18 = org tensorflow op core tensor array pack $ option access $ 000 r7 <NEXT> if $ r18 == null goto label2 <NEXT> $ r19 = org tensorflow op core tensor array pack $ option access $ 000 r7 <NEXT> r5 set attr \ `` element_shape\ <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label $ r16 = new org tensorflow op core tensor array pack <NEXT> $ r17 = r5 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r5 = r0 graph <NEXT> $ r6 = r0 make op name \ `` tensor array unpack\ `` <NEXT> r4 = $ r5 op builder \ `` tensor array unpack\ <NEXT> $ r7 = r1 a output <NEXT> r4 add input $ r7 <NEXT> $ r9 = r2 a output <NEXT> r4 add input $ r9 <NEXT> $ r11 = r3 a output <NEXT> r4 add input $ r11 <NEXT> $ r13 = new org tensorflow op core tensor array unpack <NEXT> $ r14 = r4 build <NEXT> specialinvoke $ r13 < init > $ r14 <NEXT> return $ r13 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r5 = r0 graph <NEXT> $ r6 = r0 make op name \ `` tensor forest tree predict\ `` <NEXT> r4 = $ r5 op builder \ `` tensor forest tree predict\ <NEXT> $ r7 = r1 a output <NEXT> r4 add input $ r7 <NEXT> $ r9 = r2 a output <NEXT> r4 add input $ r9 <NEXT> $ l0 = r3 long value <NEXT> r4 set attr \ `` logits_dimension\ <NEXT> $ r12 = new org tensorflow op core tensor forest tree predict <NEXT> $ r13 = r4 build <NEXT> specialinvoke $ r12 < init > $ r13 <NEXT> return $ r12 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core top k r0 <NEXT> $ r1 = r2 index <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> $ r8 = r0 graph <NEXT> $ r9 = r0 make op name \ `` try rpc\ `` <NEXT> r5 = $ r8 op builder \ `` try rpc\ <NEXT> $ r10 = r1 a output <NEXT> r5 add input $ r10 <NEXT> $ r12 = r2 a output <NEXT> r5 add input $ r12 <NEXT> $ r14 = r3 a output <NEXT> r5 add input $ r14 <NEXT> if r4 == null goto label5 <NEXT> i0 = lengthof r4 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label5 <NEXT> r7 = r4 [ i2 ] <NEXT> $ r18 = org tensorflow op core try rpc $ option access $ 000 r7 <NEXT> if $ r18 == null goto label2 <NEXT> $ r25 = org tensorflow op core try rpc $ option access $ 000 r7 <NEXT> r5 set attr \ `` protocol\ <NEXT> label $ r19 = org tensorflow op core try rpc $ option access $ 100 r7 <NEXT> if $ r19 == null goto label3 <NEXT> $ r23 = org tensorflow op core try rpc $ option access $ 100 r7 <NEXT> $ z0 = $ r23 boolean value <NEXT> r5 set attr \ `` fail_fast\ <NEXT> label $ r20 = org tensorflow op core try rpc $ option access $ 200 r7 <NEXT> if $ r20 == null goto label4 <NEXT> $ r21 = org tensorflow op core try rpc $ option access $ 200 r7 <NEXT> $ l1 = $ r21 long value <NEXT> r5 set attr \ `` timeout_in_ms\ <NEXT> label i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label5 <NEXT> label $ r16 = new org tensorflow op core try rpc <NEXT> $ r17 = r5 build <NEXT> specialinvoke $ r16 < init > $ r17 <NEXT> return $ r16 <END>
<BEG> r0 = @ this <NEXT> r2 = org tensorflow op core unicode encode r0 <NEXT> $ r1 = r2 output <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = r0 graph <NEXT> $ r4 = r0 make op name \ `` unwrap dataset variant\ `` <NEXT> r2 = $ r3 op builder \ `` unwrap dataset variant\ <NEXT> $ r5 = r1 a output <NEXT> r2 add input $ r5 <NEXT> $ r7 = new org tensorflow op core unwrap dataset variant <NEXT> $ r8 = r2 build <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r6 = org tensorflow operation r0 <NEXT> $ r4 = r6 graph <NEXT> r1 = $ r4 ref <NEXT> label r7 = org tensorflow operation r0 <NEXT> $ l0 = r7 unsafe native handle <NEXT> r2 = org tensorflow operation name $ l0 <NEXT> label r1 close <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org tensorflow server r0 <NEXT> $ l0 = r1 native handle <NEXT> org tensorflow server stop $ l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org tensorflow tensor r0 <NEXT> r2 = specialinvoke r4 buffer <NEXT> r1 put r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = org apache log log4j level fatal <NEXT> r3 = org apache log log4j spi abstract logger r0 <NEXT> $ r2 = r3 at level $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r6 = lombok core annotation value r0 <NEXT> $ r4 = r6 value <NEXT> $ r5 = $ r4 get r1 <NEXT> r3 = lombok core annotation value $ annotation value $ r5 <NEXT> if r3 ! = null goto label1 <NEXT> return <NEXT> if r3 ! = null goto label1 <NEXT> label r3 set warn r2 i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = lombok core ast r0 <NEXT> r2 top = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = new java util array list <NEXT> specialinvoke r6 < init > <NEXT> r7 = lombok core ast r0 <NEXT> specialinvoke r7 build with field0 r1 r2 r3 r6 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = lombok core lombok node r0 <NEXT> $ r4 = r8 ast <NEXT> $ r4 set change <NEXT> r9 = lombok core lombok node r0 <NEXT> $ r5 = r9 ast <NEXT> r3 = $ r5 build tree r1 r2 <NEXT> if r3 ! = null goto label1 <NEXT> return null <NEXT> if r3 ! = null goto label1 <NEXT> label r10 = lombok core lombok node r0 <NEXT> r3 parent = r10 <NEXT> r11 = lombok core lombok node r0 <NEXT> $ r6 = r11 child <NEXT> $ r7 = $ r6 append r3 <NEXT> r12 = lombok core lombok node r0 <NEXT> r12 child = $ r7 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = java lang thread current thread <NEXT> $ r2 = $ r1 get context class loader <NEXT> $ r3 = lombok core spi load util find service r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r12 = @ parameter1 <NEXT> if r12 ! = null goto label1 <NEXT> r12 = java lang class loader get system class loader <NEXT> label r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r5 = r15 append \ `` meta-inf service \ `` <NEXT> $ r6 = r0 get name <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 to string <NEXT> r1 = r12 get resource $ r8 <NEXT> r16 = new java util link hash set <NEXT> specialinvoke r16 < init > <NEXT> label $ z0 = r1 have more element <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r11 = r1 next element <NEXT> r13 = java net url $ r11 <NEXT> lombok core spi load util read service from url r16 r13 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r14 = r16 iterator <NEXT> r17 = new lombok core spi load util $ 1 <NEXT> specialinvoke r17 < init > r14 r0 r12 <NEXT> r18 = java lang iterable r17 <NEXT> return r18 <END>
<BEG> return \ `` 1 14 8\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = lombok delombok pretty comment printer r0 <NEXT> r3 print \ `` { \ `` <NEXT> r4 = lombok delombok pretty comment printer r0 <NEXT> r4 println <NEXT> r5 = lombok delombok pretty comment printer r0 <NEXT> r5 indent <NEXT> r6 = lombok delombok pretty comment printer r0 <NEXT> r6 print stats r1 <NEXT> r7 = lombok delombok pretty comment printer r0 <NEXT> $ i0 = specialinvoke r7 end po r2 <NEXT> r8 = lombok delombok pretty comment printer r0 <NEXT> specialinvoke r8 consume comment $ i0 <NEXT> r9 = lombok delombok pretty comment printer r0 <NEXT> r9 undent <NEXT> r10 = lombok delombok pretty comment printer r0 <NEXT> r10 align <NEXT> r11 = lombok delombok pretty comment printer r0 <NEXT> r11 print \ `` } \ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = r0 get class <NEXT> $ r2 = lombok core spi load util find annotation class $ r1 class \ `` llombok eclipse eclipse annotation handler \ `` <NEXT> return $ r2 <END>
<BEG> $ r1 = new lombok eclipse handler library <NEXT> specialinvoke $ r1 < init > <NEXT> lombok eclipse handler library load annotation handler $ r1 <NEXT> lombok eclipse handler library load visitor handler $ r1 <NEXT> specialinvoke $ r1 calculate priority <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = lombok installer eclipse eclipse location r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i4 = 0 <NEXT> label $ r2 = org apache lucene analysis ar arabic stemmer prefix <NEXT> $ i1 = lengthof $ r2 <NEXT> if i4 > = $ i1 goto label3 <NEXT> $ r3 = org apache lucene analysis ar arabic stemmer prefix <NEXT> $ r4 = $ r3 [ i4 ] <NEXT> r7 = org apache lucene analysis ar arabic stemmer r0 <NEXT> $ z0 = r7 start with check length r1 i0 $ r4 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = org apache lucene analysis ar arabic stemmer prefix <NEXT> $ r6 = $ r5 [ i4 ] <NEXT> $ i2 = lengthof $ r6 <NEXT> $ i3 = org apache lucene analysis util stemmer util delete n r1 0 i0 $ i2 <NEXT> return $ i3 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i1 goto label3 <NEXT> label return i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org apache lucene analysis compound hyphenation hyphenation tree r0 <NEXT> $ r3 = r5 ivalues <NEXT> i2 = $ r3 find r2 <NEXT> if i2 > 0 goto label1 <NEXT> r6 = org apache lucene analysis compound hyphenation hyphenation tree r0 <NEXT> i2 = r6 pack value r2 <NEXT> r7 = org apache lucene analysis compound hyphenation hyphenation tree r0 <NEXT> $ r4 = r7 ivalues <NEXT> $ c1 = char i2 <NEXT> $ r4 insert r2 $ c1 <NEXT> label $ c0 = char i2 <NEXT> r8 = org apache lucene analysis compound hyphenation hyphenation tree r0 <NEXT> r8 insert r1 $ c0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> $ r3 = new org apache lucene analysis util char array set <NEXT> $ i0 = lengthof r1 <NEXT> specialinvoke $ r3 < init > r0 $ i0 z0 <NEXT> $ r4 = java util array a list r1 <NEXT> $ r3 add all $ r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r5 = org apache lucene analysis hunspell hunspell dictionary r0 <NEXT> $ r2 = r5 suffix <NEXT> $ r3 = $ r2 get r1 i0 i1 <NEXT> $ r4 = java util list $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene analysis hunspell hunspell word r0 <NEXT> $ r1 = r2 flag <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache lucene analysis miscellaneous pattern analyzer r0 <NEXT> $ r3 = r4 create component r1 r2 null <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = new org apache lucene analysis pattern pattern tokenizer <NEXT> r6 = org apache lucene analysis pattern pattern tokenizer factory r0 <NEXT> $ r4 = r6 pattern <NEXT> r7 = org apache lucene analysis pattern pattern tokenizer factory r0 <NEXT> $ i0 = r7 group <NEXT> specialinvoke r5 < init > r1 r2 $ r4 $ i0 <NEXT> return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r1 to char array <NEXT> $ i0 = lengthof r2 <NEXT> org apache lucene analysis reverse reverse string filter reverse r0 r2 0 $ i0 <NEXT> $ r3 = new java lang string <NEXT> specialinvoke $ r3 < init > r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if null ! = r1 goto label1 <NEXT> $ r3 = \ `` \ `` <NEXT> goto label2 <NEXT> label r4 = org apache lucene analysis shingle shingle filter r0 <NEXT> r4 token separator = $ r3 <NEXT> return <NEXT> if null ! = r1 goto label1 <NEXT> label $ r3 = r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r2 = @ parameter3 <NEXT> i2 = @ parameter4 <NEXT> if i1 > = 0 goto label1 <NEXT> r4 = new java lang illegal argument exception <NEXT> specialinvoke r4 < init > \ `` src len must be > = 0\ `` <NEXT> throw r4 <NEXT> if i1 > = 0 goto label1 <NEXT> label i9 = 0 <NEXT> i10 = 0 <NEXT> label if i10 > = i1 goto label3 <NEXT> $ i6 = i0 + i10 <NEXT> $ i5 = i0 + i1 <NEXT> r5 = org apache lucene analysis util character utils r0 <NEXT> i3 = r5 code point at r1 $ i6 $ i5 <NEXT> i4 = java lang character char count i3 <NEXT> $ i7 = i9 <NEXT> i9 = i9 + 1 <NEXT> $ i8 = i2 + $ i7 <NEXT> r2 [ $ i8 ] = i3 <NEXT> i10 = i10 + i4 <NEXT> goto label2 <NEXT> label if i10 > = i1 goto label3 <NEXT> label return i9 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene analysis util stopword analyzer base r0 <NEXT> $ r1 = r2 stopwords <NEXT> return $ r1 <END>
<BEG> r4 = new org apache lucene analysis util classpath resource loader <NEXT> $ r1 = class \ `` lorg apache lucene analysis custom custom analyzer \ `` <NEXT> $ r2 = $ r1 get class loader <NEXT> specialinvoke r4 < init > $ r2 <NEXT> r5 = org apache lucene analysis util resource loader r4 <NEXT> $ r3 = org apache lucene analysis custom custom analyzer builder r5 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache lucene analysis custom custom analyzer r0 <NEXT> $ r1 = r4 char filter <NEXT> $ r2 = java util array a list $ r1 <NEXT> $ r3 = java util collection unmodifiable list $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> label r1 = org apache lucene analysis sink tee sink token filter r0 <NEXT> $ z0 = r1 increment token <NEXT> if $ z0 == 0 goto label2 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org apache lucene analysis analyzer r0 <NEXT> $ r4 = r8 reuse strategy <NEXT> r9 = org apache lucene analysis analyzer r0 <NEXT> r7 = $ r4 get reusable component r9 r1 <NEXT> r10 = org apache lucene analysis analyzer r0 <NEXT> r3 = r10 init reader r1 r2 <NEXT> if r7 ! = null goto label1 <NEXT> r11 = org apache lucene analysis analyzer r0 <NEXT> r7 = r11 create component r1 r3 <NEXT> r12 = org apache lucene analysis analyzer r0 <NEXT> $ r6 = r12 reuse strategy <NEXT> r13 = org apache lucene analysis analyzer r0 <NEXT> $ r6 set reusable component r13 r1 r7 <NEXT> goto label2 <NEXT> label $ r5 = r7 get token stream <NEXT> return $ r5 <NEXT> if r7 ! = null goto label1 <NEXT> label r7 set reader r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r7 = new java lang null pointer exception <NEXT> specialinvoke r7 < init > \ `` input must not be null\ `` <NEXT> throw r7 <NEXT> if r1 ! = null goto label1 <NEXT> label r10 = org apache lucene analysis tokenizer r0 <NEXT> $ r3 = r10 input <NEXT> $ r2 = org apache lucene analysis tokenizer illegal_state_reader <NEXT> if $ r3 == $ r2 goto label2 <NEXT> r8 = new java lang illegal state exception <NEXT> specialinvoke r8 < init > \ `` token stream contract violation close call missing\ `` <NEXT> throw r8 <NEXT> if $ r3 == $ r2 goto label2 <NEXT> label r11 = org apache lucene analysis tokenizer r0 <NEXT> r11 input pending = r1 <NEXT> $ z0 = org apache lucene analysis tokenizer $ assertion disable <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r12 = org apache lucene analysis tokenizer r0 <NEXT> $ z1 = r12 set reader test point <NEXT> if $ z1 ! = 0 goto label3 <NEXT> r9 = new java lang assertion error <NEXT> specialinvoke r9 < init > <NEXT> throw r9 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache lucene store data input r1 <NEXT> i0 = org apache lucene codecs codec util check header r2 \ `` block_tree_terms_index\ <NEXT> if i0 > = 1 goto label1 <NEXT> $ l1 = r1 read long <NEXT> r3 = org apache lucene codecs block tree term reader r0 <NEXT> r3 index dir offset = $ l1 <NEXT> label return i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> r1 write long l0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> $ r3 = new org apache lucene util byte ref <NEXT> specialinvoke $ r3 < init > r1 <NEXT> $ i1 = $ r3 length <NEXT> $ i2 = r1 length <NEXT> if $ i1 ! = $ i2 goto label1 <NEXT> $ i3 = $ r3 length <NEXT> if $ i3 < 128 goto label2 <NEXT> label $ r4 = new java lang illegal argument exception <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append \ `` codec must be simple ascii less than 128 character in length [ get \ `` <NEXT> $ r7 = $ r6 append r1 <NEXT> $ r8 = $ r7 append \ `` ] \ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r4 < init > $ r9 <NEXT> throw $ r4 <NEXT> if $ i3 < 128 goto label2 <NEXT> label r0 write int 1071082519 <NEXT> r0 write string r1 <NEXT> r0 write int i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene codecs lucene3x lucene3x skip list reader r0 <NEXT> $ i0 = r1 last payload length <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r14 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i4 = r14 size <NEXT> if i0 < $ i4 goto label1 <NEXT> r12 = new java lang array index out of bound exception <NEXT> r11 = new java lang string builder <NEXT> specialinvoke r11 < init > <NEXT> $ r6 = r11 append \ `` bit=\ `` <NEXT> $ r7 = $ r6 append i0 <NEXT> $ r8 = $ r7 append \ `` size=\ `` <NEXT> r15 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i14 = r15 size <NEXT> $ r9 = $ r8 append $ i14 <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r12 < init > $ r10 <NEXT> throw r12 <NEXT> if i0 < $ i4 goto label1 <NEXT> label i1 = i0 > > 3 <NEXT> r16 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ r1 = r16 bit <NEXT> b2 = $ r1 [ i1 ] <NEXT> $ i5 = i0 & 7 <NEXT> i3 = 1 < < $ i5 <NEXT> $ i6 = i3 & b2 <NEXT> if $ i6 == 0 goto label2 <NEXT> return 1 <NEXT> if $ i6 == 0 goto label2 <NEXT> label r17 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ r2 = r17 bit <NEXT> $ i7 = b2 | i3 <NEXT> $ b8 = byte $ i7 <NEXT> $ r2 [ i1 ] = $ b8 <NEXT> r18 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i9 = r18 count <NEXT> if $ i9 == -1 goto label3 <NEXT> r19 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i10 = r19 count <NEXT> $ i11 = $ i10 + 1 <NEXT> r20 = org apache lucene codecs lucene40 bit vector r0 <NEXT> r20 count = $ i11 <NEXT> $ z0 = org apache lucene codecs lucene40 bit vector $ assertion disable <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r21 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i13 = r21 count <NEXT> r22 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i12 = r22 size <NEXT> if $ i13 < = $ i12 goto label3 <NEXT> r13 = new java lang assertion error <NEXT> specialinvoke r13 < init > <NEXT> throw r13 <NEXT> if $ i13 < = $ i12 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i0 = r5 count <NEXT> if $ i0 == -1 goto label1 <NEXT> r6 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i7 = r6 size <NEXT> r7 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ i6 = r7 count <NEXT> $ i8 = $ i7 - $ i6 <NEXT> r8 = org apache lucene codecs lucene40 bit vector r0 <NEXT> r8 count = $ i8 <NEXT> label r9 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ r1 = r9 bit <NEXT> $ i1 = lengthof $ r1 <NEXT> if $ i1 < = 0 goto label4 <NEXT> i9 = 0 <NEXT> label r10 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ r2 = r10 bit <NEXT> $ i2 = lengthof $ r2 <NEXT> if i9 > = $ i2 goto label3 <NEXT> r11 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ r4 = r11 bit <NEXT> r12 = org apache lucene codecs lucene40 bit vector r0 <NEXT> $ r3 = r12 bit <NEXT> $ b3 = $ r3 [ i9 ] <NEXT> $ b4 = $ b3 ^ -1 <NEXT> $ b5 = byte $ b4 <NEXT> $ r4 [ i9 ] = $ b5 <NEXT> i9 = i9 + 1 <NEXT> goto label2 <NEXT> if i9 > = $ i2 goto label3 <NEXT> label r13 = org apache lucene codecs lucene40 bit vector r0 <NEXT> specialinvoke r13 clear unused bit <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene codecs map multi doc and position enum r0 <NEXT> $ i0 = r1 num sub <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = @ parameter3 <NEXT> i6 = 0 <NEXT> l7 = 0l <NEXT> $ r5 = org apache lucene index field info $ index option docs_only <NEXT> if r2 ! = $ r5 goto label04 <NEXT> label i8 = r3 next doc <NEXT> if i8 ! = 2147483647 goto label02 <NEXT> goto label03 <NEXT> label l7 = -1l <NEXT> goto label19 <NEXT> label r17 = new org apache lucene codecs term stats <NEXT> $ i3 = i6 <NEXT> $ r15 = org apache lucene index field info $ index option docs_only <NEXT> if r2 ! = $ r15 goto label20 <NEXT> $ l19 = -1l <NEXT> goto label21 <NEXT> label specialinvoke r17 < init > $ i3 $ l19 <NEXT> return r17 <NEXT> if r2 ! = $ r15 goto label20 <NEXT> label $ l19 = l7 <NEXT> if i8 ! = 2147483647 goto label02 <NEXT> label r4 set i8 <NEXT> r18 = org apache lucene codecs posting consumer r0 <NEXT> r18 start doc i8 -1 <NEXT> r19 = org apache lucene codecs posting consumer r0 <NEXT> r19 finish doc <NEXT> i6 = i6 + 1 <NEXT> goto label01 <NEXT> if r2 ! = $ r5 goto label04 <NEXT> label $ r6 = org apache lucene index field info $ index option docs_and_freqs <NEXT> if r2 ! = $ r6 goto label07 <NEXT> label i9 = r3 next doc <NEXT> if i9 ! = 2147483647 goto label06 <NEXT> label r4 set i9 <NEXT> i10 = r3 freq <NEXT> r20 = org apache lucene codecs posting consumer r0 <NEXT> r20 start doc i9 i10 <NEXT> r21 = org apache lucene codecs posting consumer r0 <NEXT> r21 finish doc <NEXT> if r2 ! = $ r6 goto label07 <NEXT> label $ r7 = org apache lucene index field info $ index option docs_and_freqs_and_positions <NEXT> if r2 ! = $ r7 goto label13 <NEXT> r11 = org apache lucene index doc and position enum r3 <NEXT> label i11 = r11 next doc <NEXT> if i11 ! = 2147483647 goto label09 <NEXT> goto label12 <NEXT> label goto label19 <NEXT> if i11 ! = 2147483647 goto label09 <NEXT> label r4 set i11 <NEXT> i12 = r11 freq <NEXT> r22 = org apache lucene codecs posting consumer r0 <NEXT> r22 start doc i11 i12 <NEXT> $ l4 = long i12 <NEXT> l7 = l7 + $ l4 <NEXT> i13 = 0 <NEXT> label if i13 > = i12 goto label11 <NEXT> i14 = r11 next position <NEXT> r12 = r11 get payload <NEXT> r23 = org apache lucene codecs posting consumer r0 <NEXT> r23 add position i14 r12 -1 -1 <NEXT> i13 = i13 + 1 <NEXT> goto label10 <NEXT> label if i13 > = i12 goto label11 <NEXT> label r24 = org apache lucene codecs posting consumer r0 <NEXT> r24 finish doc <NEXT> if r2 ! = $ r7 goto label13 <NEXT> label $ z0 = org apache lucene codecs posting consumer $ assertion disable <NEXT> if $ z0 ! = 0 goto label14 <NEXT> $ r9 = org apache lucene index field info $ index option docs_and_freqs_and_positions_and_offsets <NEXT> if r2 == $ r9 goto label14 <NEXT> r16 = new java lang assertion error <NEXT> specialinvoke r16 < init > <NEXT> throw r16 <NEXT> if r2 == $ r9 goto label14 <NEXT> label r13 = org apache lucene index doc and position enum r3 <NEXT> label i15 = r13 next doc <NEXT> if i15 ! = 2147483647 goto label16 <NEXT> label r4 set i15 <NEXT> i16 = r13 freq <NEXT> r25 = org apache lucene codecs posting consumer r0 <NEXT> r25 start doc i15 i16 <NEXT> $ l0 = long i16 <NEXT> l7 = l7 + $ l0 <NEXT> i17 = 0 <NEXT> label if i17 > = i16 goto label18 <NEXT> i18 = r13 next position <NEXT> r14 = r13 get payload <NEXT> $ i1 = r13 start offset <NEXT> $ i2 = r13 end offset <NEXT> r26 = org apache lucene codecs posting consumer r0 <NEXT> r26 add position i18 r14 $ i1 $ i2 <NEXT> i17 = i17 + 1 <NEXT> goto label17 <NEXT> label if i17 > = i16 goto label18 <NEXT> label r27 = org apache lucene codecs posting consumer r0 <NEXT> r27 finish doc <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> $ r1 = org apache lucene document compression tool decompress r0 0 $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> $ r1 = org apache lucene document compression tool decompress string r0 0 $ i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache lucene document field type r0 <NEXT> specialinvoke r1 check if frozen <NEXT> r2 = org apache lucene document field type r0 <NEXT> r2 store term vector = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache lucene document field type r0 <NEXT> specialinvoke r2 check if frozen <NEXT> r3 = org apache lucene document field type r0 <NEXT> r3 index option = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene document field type r0 <NEXT> $ r1 = r2 numeric type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene document field type r0 <NEXT> $ i0 = r1 numeric precision step <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index concurrent merge scheduler r0 <NEXT> specialinvoke r1 init merge thread priority <NEXT> r2 = org apache lucene index concurrent merge scheduler r0 <NEXT> $ i0 = r2 merge thread priority <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get directory <NEXT> $ r2 = org apache lucene index standard directory reader open $ r1 r0 1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 do open if change r1 <NEXT> $ z0 = org apache lucene index directory reader $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> if r2 ! = r0 goto label1 <NEXT> $ r3 = new java lang assertion error <NEXT> specialinvoke $ r3 < init > <NEXT> throw $ r3 <NEXT> if r2 ! = r0 goto label1 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org apache lucene index doc term ords r0 <NEXT> $ z0 = r5 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = org apache lucene index sort set doc value empty <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = new org apache lucene index doc term ords $ iterator <NEXT> r6 = org apache lucene index doc term ords r0 <NEXT> specialinvoke r4 < init > r6 r1 <NEXT> r7 = org apache lucene index sort set doc value r4 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index field info r0 <NEXT> $ z0 = r1 omit norm <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene index field info r0 <NEXT> $ r1 = r2 norm type <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index field info r0 <NEXT> $ z0 = r1 have doc value <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index field invert state r0 <NEXT> $ i0 = r1 offset <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index field invert state r0 <NEXT> $ f0 = r1 boost <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache lucene index index writer r0 <NEXT> r3 ensure open <NEXT> r4 = org apache lucene index index writer r0 <NEXT> $ r1 = r4 doc writer <NEXT> $ i0 = $ r1 get num doc <NEXT> r5 = org apache lucene index index writer r0 <NEXT> $ r2 = r5 segment info <NEXT> $ i1 = $ r2 total doc count <NEXT> $ i2 = $ i0 + $ i1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache lucene index index writer r0 <NEXT> r7 ensure open <NEXT> r8 = org apache lucene index index writer r0 <NEXT> $ r3 = r8 doc writer <NEXT> i3 = $ r3 get num doc <NEXT> r9 = org apache lucene index index writer r0 <NEXT> $ r4 = r9 segment info <NEXT> r1 = $ r4 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r1 next <NEXT> r2 = org apache lucene index segment commit info $ r5 <NEXT> $ r6 = r2 info <NEXT> $ i0 = $ r6 get doc count <NEXT> r10 = org apache lucene index index writer r0 <NEXT> $ i1 = r10 num delete docs r2 <NEXT> $ i2 = $ i0 - $ i1 <NEXT> i3 = i3 + $ i2 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return i3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index index writer r0 <NEXT> r1 ensure open <NEXT> r2 = org apache lucene index index writer r0 <NEXT> specialinvoke r2 commit internal <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene index index writer r0 <NEXT> r2 ensure open <NEXT> r3 = org apache lucene index index writer r0 <NEXT> $ r1 = r3 doc writer <NEXT> $ i0 = $ r1 get num doc <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = new org apache lucene index thread affinity document writer thread pool <NEXT> specialinvoke r2 < init > i0 <NEXT> r3 = org apache lucene index index writer config r0 <NEXT> r4 = org apache lucene index document writer per thread pool r2 <NEXT> r3 indexer thread pool = r4 <NEXT> r5 = org apache lucene index index writer config r0 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache lucene index index writer config r0 <NEXT> r1 reader pool = z0 <NEXT> r2 = org apache lucene index index writer config r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index log byte size merge policy r0 <NEXT> $ l0 = r1 max merge size for force merge <NEXT> $ d0 = double $ l0 <NEXT> $ d1 = $ d0 1024 0 <NEXT> $ d2 = $ d1 1024 0 <NEXT> return $ d2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 leave <NEXT> i0 = r2 size <NEXT> if i0 ! = 0 goto label1 <NEXT> return null <NEXT> if i0 ! = 0 goto label1 <NEXT> label if i0 ! = 1 goto label2 <NEXT> $ r12 = r2 get 0 <NEXT> $ r13 = org apache lucene index atomic reader context $ r12 <NEXT> $ r14 = $ r13 reader <NEXT> $ r15 = $ r14 get norm value r1 <NEXT> return $ r15 <NEXT> label if i0 ! = 1 goto label2 <NEXT> label $ r7 = org apache lucene index multi field get merge field info r0 <NEXT> r3 = $ r7 field info r1 <NEXT> if r3 == null goto label3 <NEXT> $ z0 = r3 have norm <NEXT> if $ z0 ! = 0 goto label4 <NEXT> label return null <NEXT> if $ z0 ! = 0 goto label4 <NEXT> label z2 = 0 <NEXT> r4 = newarray org apache lucene index numeric doc value [ i0 ] <NEXT> $ i1 = i0 + 1 <NEXT> r5 = newarray int [ $ i1 ] <NEXT> i4 = 0 <NEXT> label if i4 > = i0 goto label8 <NEXT> $ r10 = r2 get i4 <NEXT> r6 = org apache lucene index atomic reader context $ r10 <NEXT> $ r11 = r6 reader <NEXT> r16 = $ r11 get norm value r1 <NEXT> if r16 ! = null goto label6 <NEXT> r16 = org apache lucene index numeric doc value empty <NEXT> goto label7 <NEXT> label r4 [ i4 ] = r16 <NEXT> $ i3 = r6 doc base <NEXT> r5 [ i4 ] = $ i3 <NEXT> i4 = i4 + 1 <NEXT> goto label5 <NEXT> if r16 ! = null goto label6 <NEXT> label z2 = 1 <NEXT> label if i4 > = i0 goto label8 <NEXT> label $ i2 = r0 max doc <NEXT> r5 [ i0 ] = $ i2 <NEXT> $ z1 = org apache lucene index multi doc value $ assertion disable <NEXT> if $ z1 ! = 0 goto label9 <NEXT> if z2 ! = 0 goto label9 <NEXT> r17 = new java lang assertion error <NEXT> specialinvoke r17 < init > <NEXT> throw r17 <NEXT> if z2 ! = 0 goto label9 <NEXT> label r18 = new org apache lucene index multi doc value $ 1 <NEXT> specialinvoke r18 < init > r5 r4 <NEXT> r19 = org apache lucene index numeric doc value r18 <NEXT> return r19 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 leave <NEXT> i0 = r2 size <NEXT> if i0 ! = 0 goto label1 <NEXT> return null <NEXT> if i0 ! = 0 goto label1 <NEXT> label if i0 ! = 1 goto label2 <NEXT> $ r12 = r2 get 0 <NEXT> $ r13 = org apache lucene index atomic reader context $ r12 <NEXT> $ r14 = $ r13 reader <NEXT> $ r15 = $ r14 get sort set doc value r1 <NEXT> return $ r15 <NEXT> label if i0 ! = 1 goto label2 <NEXT> label z0 = 0 <NEXT> r3 = newarray org apache lucene index sort set doc value [ i0 ] <NEXT> $ i1 = i0 + 1 <NEXT> r4 = newarray int [ $ i1 ] <NEXT> i6 = 0 <NEXT> label if i6 > = i0 goto label6 <NEXT> $ r10 = r2 get i6 <NEXT> r16 = org apache lucene index atomic reader context $ r10 <NEXT> $ r11 = r16 reader <NEXT> r17 = $ r11 get sort set doc value r1 <NEXT> if r17 ! = null goto label4 <NEXT> r17 = org apache lucene index sort set doc value empty <NEXT> goto label5 <NEXT> label r3 [ i6 ] = r17 <NEXT> $ i5 = r16 doc base <NEXT> r4 [ i6 ] = $ i5 <NEXT> i6 = i6 + 1 <NEXT> goto label3 <NEXT> if r17 ! = null goto label4 <NEXT> label z0 = 1 <NEXT> label if i6 > = i0 goto label6 <NEXT> label $ i2 = r0 max doc <NEXT> r4 [ i0 ] = $ i2 <NEXT> if z0 ! = 0 goto label7 <NEXT> label $ i3 = lengthof r3 <NEXT> r18 = newarray org apache lucene index term enum [ $ i3 ] <NEXT> i7 = 0 <NEXT> label $ i4 = lengthof r3 <NEXT> if i7 > = $ i4 goto label9 <NEXT> $ r8 = r3 [ i7 ] <NEXT> $ r9 = $ r8 term enum <NEXT> r18 [ i7 ] = $ r9 <NEXT> i7 = i7 + 1 <NEXT> goto label8 <NEXT> if i7 > = $ i4 goto label9 <NEXT> label r20 = new org apache lucene index multi doc value $ ordinal map <NEXT> $ r6 = r0 get core cache key <NEXT> specialinvoke r20 < init > $ r6 r18 <NEXT> r21 = new org apache lucene index multi doc value $ multi sort set doc value <NEXT> specialinvoke r21 < init > r3 r4 r20 <NEXT> r22 = org apache lucene index sort set doc value r21 <NEXT> return r22 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index segment commit info r0 <NEXT> $ l0 = r1 field info gen <NEXT> $ b1 = $ l0 cmp -1l <NEXT> if $ b1 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b1 == 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index segment commit info r0 <NEXT> $ i0 = r1 del count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache lucene index segment info r0 <NEXT> specialinvoke r3 check file name r1 <NEXT> r4 = org apache lucene index segment info r0 <NEXT> $ r2 = r4 set file <NEXT> $ r2 add all r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org apache lucene index term r1 <NEXT> r3 = org apache lucene index term r0 <NEXT> $ i0 = r3 compare to $ r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r30 = org apache lucene index multi term enum r0 <NEXT> $ r3 = r30 queue <NEXT> $ r3 clear <NEXT> r31 = org apache lucene index multi term enum r0 <NEXT> r31 num top = 0 <NEXT> z2 = 0 <NEXT> r32 = org apache lucene index multi term enum r0 <NEXT> $ r4 = r32 last seek <NEXT> if $ r4 == null goto label01 <NEXT> r33 = org apache lucene index multi term enum r0 <NEXT> $ r28 = r33 term comp <NEXT> r34 = org apache lucene index multi term enum r0 <NEXT> $ r27 = r34 last seek <NEXT> $ i4 = $ r28 compare $ r27 r1 <NEXT> if $ i4 > 0 goto label01 <NEXT> z2 = 1 <NEXT> label r35 = org apache lucene index multi term enum r0 <NEXT> r35 last seek = null <NEXT> r36 = org apache lucene index multi term enum r0 <NEXT> r36 last seek exact = 1 <NEXT> i5 = 0 <NEXT> label r37 = org apache lucene index multi term enum r0 <NEXT> $ i6 = r37 num sub <NEXT> if i5 > = $ i6 goto label11 <NEXT> if z2 == 0 goto label08 <NEXT> r38 = org apache lucene index multi term enum r0 <NEXT> $ r21 = r38 current sub <NEXT> $ r22 = $ r21 [ i5 ] <NEXT> r2 = $ r22 current <NEXT> if r2 == null goto label06 <NEXT> r39 = org apache lucene index multi term enum r0 <NEXT> $ r23 = r39 term comp <NEXT> i0 = $ r23 compare r1 r2 <NEXT> if i0 ! = 0 goto label03 <NEXT> z3 = 1 <NEXT> goto label05 <NEXT> label goto label07 <NEXT> label goto label09 <NEXT> label if z3 == 0 goto label10 <NEXT> r42 = org apache lucene index multi term enum r0 <NEXT> $ r8 = r42 top <NEXT> r43 = org apache lucene index multi term enum r0 <NEXT> $ i2 = r43 num top <NEXT> $ i3 = $ i2 + 1 <NEXT> r44 = org apache lucene index multi term enum r0 <NEXT> r44 num top = $ i3 <NEXT> r45 = org apache lucene index multi term enum r0 <NEXT> $ r9 = r45 current sub <NEXT> $ r10 = $ r9 [ i5 ] <NEXT> $ r8 [ $ i2 ] = $ r10 <NEXT> r46 = org apache lucene index multi term enum r0 <NEXT> $ r11 = r46 current sub <NEXT> $ r15 = $ r11 [ i5 ] <NEXT> r47 = org apache lucene index multi term enum r0 <NEXT> $ r12 = r47 current sub <NEXT> $ r13 = $ r12 [ i5 ] <NEXT> $ r14 = $ r13 term <NEXT> $ r16 = $ r14 term <NEXT> $ r15 current = $ r16 <NEXT> r48 = org apache lucene index multi term enum r0 <NEXT> r48 current = $ r16 <NEXT> $ z0 = org apache lucene index multi term enum $ assertion disable <NEXT> if $ z0 ! = 0 goto label10 <NEXT> r49 = org apache lucene index multi term enum r0 <NEXT> $ r17 = r49 current sub <NEXT> $ r18 = $ r17 [ i5 ] <NEXT> $ r19 = $ r18 current <NEXT> $ z1 = r1 equal $ r19 <NEXT> if $ z1 ! = 0 goto label10 <NEXT> r29 = new java lang assertion error <NEXT> specialinvoke r29 < init > <NEXT> throw r29 <NEXT> if $ z1 ! = 0 goto label10 <NEXT> label i5 = i5 + 1 <NEXT> goto label02 <NEXT> if i0 ! = 0 goto label03 <NEXT> label if i0 > = 0 goto label04 <NEXT> z3 = 0 <NEXT> label if i0 > = 0 goto label04 <NEXT> label r40 = org apache lucene index multi term enum r0 <NEXT> $ r24 = r40 current sub <NEXT> $ r25 = $ r24 [ i5 ] <NEXT> $ r26 = $ r25 term <NEXT> z3 = $ r26 seek exact r1 <NEXT> if r2 == null goto label06 <NEXT> label z3 = 0 <NEXT> if z2 == 0 goto label08 <NEXT> label r41 = org apache lucene index multi term enum r0 <NEXT> $ r5 = r41 current sub <NEXT> $ r6 = $ r5 [ i5 ] <NEXT> $ r7 = $ r6 term <NEXT> z3 = $ r7 seek exact r1 <NEXT> if i5 > = $ i6 goto label11 <NEXT> label r50 = org apache lucene index multi term enum r0 <NEXT> $ i1 = r50 num top <NEXT> if $ i1 < = 0 goto label12 <NEXT> $ z4 = 1 <NEXT> goto label13 <NEXT> label return $ z4 <NEXT> if $ i1 < = 0 goto label12 <NEXT> label $ z4 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index tiered merge policy r0 <NEXT> $ i0 = r1 max merge at once explicit <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r3 = org apache lucene util constant lucene_main_version <NEXT> $ r2 = r1 info <NEXT> $ r4 = $ r2 get version <NEXT> $ z0 = $ r3 equal $ r4 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache lucene search boolean query r0 <NEXT> r1 min nr should match = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene search boolean query r0 <NEXT> $ i0 = r1 min nr should match <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search doc term ords range filter r0 <NEXT> $ r1 = r2 field <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene search fuzzy query r0 <NEXT> $ i0 = r1 prefix length <NEXT> return $ i0 <END>
<BEG> $ r0 = org apache lucene search index searcher default similarity <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org apache lucene search index searcher r0 <NEXT> $ r1 = r3 reader <NEXT> $ r2 = $ r1 document i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r4 = org apache lucene search index searcher r0 <NEXT> $ r2 = r4 create normalized weight r1 <NEXT> r5 = org apache lucene search index searcher r0 <NEXT> $ r3 = r5 explain $ r2 i0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search query wrapper filter r0 <NEXT> $ r1 = r2 query <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r4 = new java lang null pointer exception <NEXT> specialinvoke r4 < init > \ `` listener can not be null\ `` <NEXT> throw r4 <NEXT> if r1 ! = null goto label1 <NEXT> label r5 = org apache lucene search reference manager r0 <NEXT> $ r2 = r5 refresh listener <NEXT> $ r2 add r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> r13 = new org apache lucene search explanation <NEXT> specialinvoke r13 < init > <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> $ r5 = r0 get class <NEXT> $ r6 = $ r5 get simple name <NEXT> $ r7 = r14 append $ r6 <NEXT> $ r8 = $ r7 append \ <NEXT> $ r9 = $ r8 to string <NEXT> r13 set description $ r9 <NEXT> r18 = org apache lucene search similarity basic model r0 <NEXT> $ f1 = r18 score r1 f0 <NEXT> r13 set value $ f1 <NEXT> r15 = new org apache lucene search explanation <NEXT> specialinvoke r15 < init > f0 \ `` tfn\ `` <NEXT> r13 add detail r15 <NEXT> r16 = new org apache lucene search explanation <NEXT> $ l0 = r1 get number of document <NEXT> $ f2 = float $ l0 <NEXT> specialinvoke r16 < init > $ f2 \ `` number of documents\ `` <NEXT> r13 add detail r16 <NEXT> r17 = new org apache lucene search explanation <NEXT> $ l1 = r1 get total term freq <NEXT> $ f3 = float $ l1 <NEXT> specialinvoke r17 < init > $ f3 \ `` total term freq\ `` <NEXT> r13 add detail r17 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org apache lucene search similarity basic stats r0 <NEXT> r1 doc freq = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene search similarity basic stats r0 <NEXT> $ f0 = r1 query boost <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> f1 = @ parameter2 <NEXT> r5 = new org apache lucene search explanation <NEXT> r6 = org apache lucene search similarity distribution r0 <NEXT> $ f2 = r6 score r1 f0 f1 <NEXT> $ r3 = r0 get class <NEXT> $ r4 = $ r3 get simple name <NEXT> specialinvoke r5 < init > $ f2 $ r4 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> f1 = @ parameter2 <NEXT> r13 = new org apache lucene search explanation <NEXT> specialinvoke r13 < init > <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> $ r5 = r0 get class <NEXT> $ r6 = $ r5 get simple name <NEXT> $ r7 = r14 append $ r6 <NEXT> $ r8 = $ r7 append \ <NEXT> $ r9 = $ r8 to string <NEXT> r13 set description $ r9 <NEXT> r18 = org apache lucene search similarity normalization r0 <NEXT> $ f2 = r18 tfn r1 f0 f1 <NEXT> r13 set value $ f2 <NEXT> r15 = new org apache lucene search explanation <NEXT> specialinvoke r15 < init > f0 \ `` tf\ `` <NEXT> r13 add detail r15 <NEXT> r16 = new org apache lucene search explanation <NEXT> $ f3 = r1 get avg field length <NEXT> specialinvoke r16 < init > $ f3 \ `` avg field length\ `` <NEXT> r13 add detail r16 <NEXT> r17 = new org apache lucene search explanation <NEXT> specialinvoke r17 < init > f1 \ `` len\ `` <NEXT> r13 add detail r17 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> $ r2 = new org apache lucene search similarity basic stats <NEXT> specialinvoke $ r2 < init > r1 f0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> f1 = @ parameter1 <NEXT> $ d0 = double f1 <NEXT> $ d1 = java lang math sqrt $ d0 <NEXT> $ f2 = float $ d1 <NEXT> $ f3 = f0 $ f2 <NEXT> $ b0 = org apache lucene util small float float to byte315 $ f3 <NEXT> return $ b0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search span span not query r0 <NEXT> $ r1 = r2 include <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene store file switch directory r0 <NEXT> $ r1 = r2 secondary dir <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r32 = org apache lucene store lock r0 <NEXT> r32 failure reason = null <NEXT> r33 = org apache lucene store lock r0 <NEXT> z0 = r33 obtain <NEXT> $ b2 = l0 cmp 0l <NEXT> if $ b2 > = 0 goto label1 <NEXT> $ b8 = l0 cmp -1l <NEXT> if $ b8 == 0 goto label1 <NEXT> r27 = new java lang illegal argument exception <NEXT> r26 = new java lang string builder <NEXT> specialinvoke r26 < init > <NEXT> $ r18 = r26 append \ `` lock wait timeout should be lock_obtain_wait_forever or a non-negative number get \ `` <NEXT> $ r19 = $ r18 append l0 <NEXT> $ r20 = $ r19 append \ `` \ `` <NEXT> $ r21 = $ r20 to string <NEXT> specialinvoke r27 < init > $ r21 <NEXT> throw r27 <NEXT> if $ b8 == 0 goto label1 <NEXT> label $ l3 = org apache lucene store lock lock_poll_interval <NEXT> l1 = l0 $ l3 <NEXT> l9 = 0l <NEXT> label if z0 ! = 0 goto label9 <NEXT> $ b4 = l0 cmp -1l <NEXT> if $ b4 == 0 goto label5 <NEXT> $ l6 = l9 <NEXT> l9 = l9 + 1l <NEXT> $ b7 = $ l6 cmp l1 <NEXT> if $ b7 < 0 goto label5 <NEXT> r28 = new java lang string builder <NEXT> specialinvoke r28 < init > <NEXT> $ r3 = r28 append \ `` lock obtain time out \ `` <NEXT> $ r4 = r0 to string <NEXT> $ r5 = $ r3 append $ r4 <NEXT> r24 = $ r5 to string <NEXT> r34 = org apache lucene store lock r0 <NEXT> $ r6 = r34 failure reason <NEXT> if $ r6 == null goto label3 <NEXT> r29 = new java lang string builder <NEXT> specialinvoke r29 < init > <NEXT> $ r12 = r29 append r24 <NEXT> $ r13 = $ r12 append \ `` \ `` <NEXT> r35 = org apache lucene store lock r0 <NEXT> $ r14 = r35 failure reason <NEXT> $ r15 = $ r13 append $ r14 <NEXT> r24 = $ r15 to string <NEXT> label r30 = new org apache lucene store lock obtain failed exception <NEXT> specialinvoke r30 < init > r24 <NEXT> r36 = org apache lucene store lock r0 <NEXT> $ r8 = r36 failure reason <NEXT> if $ r8 == null goto label4 <NEXT> r37 = org apache lucene store lock r0 <NEXT> $ r9 = r37 failure reason <NEXT> r30 init cause $ r9 <NEXT> label r38 = java lang throwable r30 <NEXT> throw r38 <NEXT> if $ b7 < 0 goto label5 <NEXT> label $ l5 = org apache lucene store lock lock_poll_interval <NEXT> java lang thread sleep $ l5 <NEXT> label goto label8 <NEXT> label r40 = org apache lucene store lock r0 <NEXT> z0 = r40 obtain <NEXT> goto label2 <NEXT> label if z0 ! = 0 goto label9 <NEXT> label return z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene store lock factory r0 <NEXT> $ r1 = r2 lock prefix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r21 = org apache lucene store m map directory r0 <NEXT> r21 ensure open <NEXT> r17 = new java io file <NEXT> r22 = org apache lucene store m map directory r0 <NEXT> $ r8 = r22 get directory <NEXT> specialinvoke r17 < init > $ r8 r1 <NEXT> r18 = new java io random access file <NEXT> specialinvoke r18 < init > r17 \ `` r\ `` <NEXT> label r20 = new org apache lucene store m map directory $ m map index input <NEXT> r19 = new java lang string builder <NEXT> specialinvoke r19 < init > <NEXT> $ r12 = r19 append \ `` m map index input path=\\\ `` \ `` <NEXT> $ r13 = $ r12 append r17 <NEXT> $ r14 = $ r13 append \ `` \\\ `` \ `` <NEXT> $ r15 = $ r14 to string <NEXT> r23 = org apache lucene store m map directory r0 <NEXT> specialinvoke r20 < init > r23 $ r15 r18 <NEXT> label r18 close <NEXT> r24 = org apache lucene store index input r20 <NEXT> return r24 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = newarray byte [ i0 ] <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r16 = @ parameter0 <NEXT> if r16 ! = null goto label1 <NEXT> return <NEXT> if r16 ! = null goto label1 <NEXT> label r19 = org apache lucene util attribute source r0 <NEXT> $ r3 = r19 attribute impls <NEXT> $ r2 = r16 attribute <NEXT> $ r4 = $ r2 get class <NEXT> $ r5 = $ r3 get $ r4 <NEXT> r1 = org apache lucene util attribute impl $ r5 <NEXT> if r1 ! = null goto label2 <NEXT> r18 = new java lang illegal argument exception <NEXT> r17 = new java lang string builder <NEXT> specialinvoke r17 < init > <NEXT> $ r9 = r17 append \ `` state contains attribute impl of type \ `` <NEXT> $ r10 = r16 attribute <NEXT> $ r11 = $ r10 get class <NEXT> $ r12 = $ r11 get name <NEXT> $ r13 = $ r9 append $ r12 <NEXT> $ r14 = $ r13 append \ `` that be not in in this attribute source\ `` <NEXT> $ r15 = $ r14 to string <NEXT> specialinvoke r18 < init > $ r15 <NEXT> throw r18 <NEXT> if r1 ! = null goto label2 <NEXT> label $ r6 = r16 attribute <NEXT> $ r6 copy to r1 <NEXT> r16 = r16 next <END>
<BEG> r0 = @ this <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r2 = r0 get class <NEXT> $ r3 = $ r2 get simple name <NEXT> $ r4 = r12 append $ r3 <NEXT> $ r5 = $ r4 append 64 <NEXT> $ i0 = java lang system identity hash code r0 <NEXT> $ r6 = java lang integer to hex string $ i0 <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` \ `` <NEXT> r13 = org apache lucene util attribute source r0 <NEXT> $ r9 = r13 reflect a string 0 <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 to string <NEXT> return $ r11 <END>
<BEG> r0 = @ this <NEXT> r4 = org apache lucene util automaton automaton r0 <NEXT> r1 = r4 get number state <NEXT> r5 = org apache lucene util automaton automaton r0 <NEXT> $ z0 = r5 be singleton <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r3 = r1 [ i1 ] <NEXT> r3 reduce <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r10 = org apache lucene util automaton automaton r0 <NEXT> r1 = r10 get number state <NEXT> $ i1 = lengthof r1 <NEXT> r2 = newarray org apache lucene util automaton transition [ ] [ $ i1 ] <NEXT> i0 = lengthof r1 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label3 <NEXT> r4 = r1 [ i3 ] <NEXT> $ r5 = org apache lucene util automaton transition compare by min max then d <NEXT> r4 sort transition $ r5 <NEXT> r4 trim transition array <NEXT> $ i2 = r4 number <NEXT> $ r6 = r4 transition array <NEXT> r2 [ $ i2 ] = $ r6 <NEXT> $ z0 = org apache lucene util automaton automaton $ assertion disable <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ r7 = r4 transition array <NEXT> if $ r7 ! = null goto label2 <NEXT> r9 = new java lang assertion error <NEXT> specialinvoke r9 < init > <NEXT> throw r9 <NEXT> if $ r7 ! = null goto label2 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label3 <NEXT> label return r2 <END>
<BEG> r0 = @ this <NEXT> r24 = new java lang string builder <NEXT> specialinvoke r24 < init > \ `` digraph automaton { \n\ `` <NEXT> r24 append \ `` rankdir = lr \n\ `` <NEXT> r25 = org apache lucene util automaton automaton r0 <NEXT> r2 = r25 get number state <NEXT> i0 = lengthof r2 <NEXT> i4 = 0 <NEXT> label if i4 > = i0 goto label7 <NEXT> r4 = r2 [ i4 ] <NEXT> $ r11 = r24 append \ `` \ `` <NEXT> $ i1 = r4 number <NEXT> $ r11 append $ i1 <NEXT> $ z0 = r4 accept <NEXT> if $ z0 == 0 goto label2 <NEXT> r24 append \ `` [ shape=doublecircle label=\\\ `` \\\ `` ] \n\ `` <NEXT> goto label3 <NEXT> label r26 = org apache lucene util automaton automaton r0 <NEXT> $ r14 = r26 initial <NEXT> if r4 ! = $ r14 goto label4 <NEXT> r24 append \ `` initial [ shape=plaintext label=\\\ `` \\\ `` ] \n\ `` <NEXT> $ r20 = r24 append \ `` initial - > \ `` <NEXT> $ i3 = r4 number <NEXT> $ r21 = $ r20 append $ i3 <NEXT> $ r21 append \ `` \n\ `` <NEXT> label $ r15 = r4 get transition <NEXT> r5 = $ r15 iterator <NEXT> label $ z1 = r5 have next <NEXT> if $ z1 == 0 goto label6 <NEXT> $ r16 = r5 next <NEXT> r6 = org apache lucene util automaton transition $ r16 <NEXT> $ r17 = r24 append \ `` \ `` <NEXT> $ i2 = r4 number <NEXT> $ r17 append $ i2 <NEXT> r6 append dot r24 <NEXT> goto label5 <NEXT> if $ z1 == 0 goto label6 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r24 append \ `` [ shape=circle label=\\\ `` \\\ `` ] \n\ `` <NEXT> label if i4 > = i0 goto label7 <NEXT> label $ r9 = r24 append \ `` } \n\ `` <NEXT> $ r10 = $ r9 to string <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r3 = org apache lucene util automaton character run automaton r0 <NEXT> i5 = r3 initial <NEXT> i2 = i0 + i1 <NEXT> i6 = i0 <NEXT> label if i6 > = i2 goto label3 <NEXT> $ i3 = java lang character code point at r1 i6 i2 <NEXT> r4 = org apache lucene util automaton character run automaton r0 <NEXT> i5 = r4 step i5 $ i3 <NEXT> if i5 ! = -1 goto label2 <NEXT> return 0 <NEXT> if i5 ! = -1 goto label2 <NEXT> label $ i4 = java lang character char count $ i3 <NEXT> i6 = i6 + $ i4 <NEXT> goto label1 <NEXT> label if i6 > = i2 goto label3 <NEXT> label r5 = org apache lucene util automaton character run automaton r0 <NEXT> $ r2 = r5 accept <NEXT> $ z0 = $ r2 [ i5 ] <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene util automaton state r0 <NEXT> $ z0 = r1 accept <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i2 = @ parameter3 <NEXT> if i2 ! = 0 goto label1 <NEXT> return <NEXT> if i2 ! = 0 goto label1 <NEXT> label i7 = i1 <NEXT> i8 = i2 <NEXT> $ l4 = l0 > > 15 <NEXT> i9 = int $ l4 <NEXT> r5 = org apache lucene util byte block pool r0 <NEXT> $ r2 = r5 buffer <NEXT> r4 = $ r2 [ i9 ] <NEXT> $ l5 = l0 & 32767l <NEXT> i10 = int $ l5 <NEXT> $ i6 = i10 + i2 <NEXT> i11 = $ i6 - 32768 <NEXT> label if i11 > 0 goto label3 <NEXT> java lang system arraycopy r4 i10 r1 i7 i8 <NEXT> goto label4 <NEXT> label return <NEXT> label if i11 > 0 goto label3 <NEXT> label i3 = i2 - i11 <NEXT> java lang system arraycopy r4 i10 r1 i7 i3 <NEXT> i10 = 0 <NEXT> i8 = i8 - i3 <NEXT> i7 = i7 + i3 <NEXT> r6 = org apache lucene util byte block pool r0 <NEXT> $ r3 = r6 buffer <NEXT> i9 = i9 + 1 <NEXT> r4 = $ r3 [ i9 ] <NEXT> i11 = i11 - 32768 <NEXT> goto label2 <END>
<BEG> r0 = @ this <NEXT> i5 = 0 <NEXT> r2 = org apache lucene util byte ref r0 <NEXT> $ i2 = r2 offset <NEXT> r3 = org apache lucene util byte ref r0 <NEXT> $ i1 = r3 length <NEXT> i0 = $ i2 + $ i1 <NEXT> r4 = org apache lucene util byte ref r0 <NEXT> i6 = r4 offset <NEXT> label if i6 > = i0 goto label2 <NEXT> $ i4 = 31 * i5 <NEXT> r5 = org apache lucene util byte ref r0 <NEXT> $ r1 = r5 bytes <NEXT> $ b3 = $ r1 [ i6 ] <NEXT> i5 = $ i4 + $ b3 <NEXT> i6 = i6 + 1 <NEXT> goto label1 <NEXT> label if i6 > = i0 goto label2 <NEXT> label return i5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r5 = org apache lucene util char ref r0 <NEXT> $ r2 = r5 char <NEXT> $ i3 = lengthof $ r2 <NEXT> r6 = org apache lucene util char ref r0 <NEXT> $ i2 = r6 offset <NEXT> $ i4 = $ i3 - $ i2 <NEXT> if $ i4 > = i1 goto label1 <NEXT> $ r4 = newarray char [ i1 ] <NEXT> r7 = org apache lucene util char ref r0 <NEXT> r7 char = $ r4 <NEXT> r8 = org apache lucene util char ref r0 <NEXT> r8 offset = 0 <NEXT> label r9 = org apache lucene util char ref r0 <NEXT> $ r3 = r9 char <NEXT> r10 = org apache lucene util char ref r0 <NEXT> $ i5 = r10 offset <NEXT> java lang system arraycopy r1 i0 $ r3 $ i5 i1 <NEXT> r11 = org apache lucene util char ref r0 <NEXT> r11 length = i1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache lucene util command line util adjust directory class name r0 <NEXT> $ r2 = java lang class for name $ r1 <NEXT> $ r3 = $ r2 a subclass class \ `` lorg apache lucene store directory \ `` <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new org apache lucene util field cache sanity checker <NEXT> specialinvoke $ r2 < init > <NEXT> $ r2 set ram usage estimator 1 <NEXT> $ r3 = $ r2 check r0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org apache lucene util open bit set iterator <NEXT> if $ z0 == 0 goto label1 <NEXT> $ i0 = r1 doc i d <NEXT> if $ i0 ! = -1 goto label1 <NEXT> r3 = org apache lucene util open bit set iterator r1 <NEXT> $ r2 = r3 arr <NEXT> $ i1 = r3 word <NEXT> r4 = org apache lucene util fixed bit set r0 <NEXT> specialinvoke r4 and not $ r2 $ i1 <NEXT> r5 = org apache lucene util fixed bit set r0 <NEXT> $ i2 = r5 num bit <NEXT> r3 advance $ i2 <NEXT> goto label2 <NEXT> label return <NEXT> if $ i0 ! = -1 goto label1 <NEXT> label $ i4 = r1 next doc <NEXT> r6 = org apache lucene util fixed bit set r0 <NEXT> $ i6 = r6 num bit <NEXT> if $ i4 > = $ i6 goto label2 <NEXT> r7 = org apache lucene util fixed bit set r0 <NEXT> r7 clear $ i4 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i16 = @ parameter3 <NEXT> $ z0 = org apache lucene util fst byte store $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ l11 = long i16 <NEXT> $ l12 = l0 + $ l11 <NEXT> r18 = org apache lucene util fst byte store r0 <NEXT> $ l13 = r18 get position <NEXT> $ b14 = $ l12 cmp $ l13 <NEXT> if $ b14 < = 0 goto label1 <NEXT> r17 = new java lang assertion error <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r8 = r16 append \ `` dest=\ `` <NEXT> $ r9 = $ r8 append l0 <NEXT> $ r10 = $ r9 append \ `` pos=\ `` <NEXT> r19 = org apache lucene util fst byte store r0 <NEXT> $ l15 = r19 get position <NEXT> $ r11 = $ r10 append $ l15 <NEXT> $ r12 = $ r11 append \ `` len=\ `` <NEXT> $ r13 = $ r12 append i16 <NEXT> $ r14 = $ r13 to string <NEXT> specialinvoke r17 < init > $ r14 <NEXT> throw r17 <NEXT> if $ b14 < = 0 goto label1 <NEXT> label $ l3 = long i16 <NEXT> l2 = l0 + $ l3 <NEXT> r20 = org apache lucene util fst byte store r0 <NEXT> $ i4 = r20 block bit <NEXT> $ l5 = l2 > > $ i4 <NEXT> i17 = int $ l5 <NEXT> r21 = org apache lucene util fst byte store r0 <NEXT> $ i6 = r21 block mask <NEXT> $ l7 = long $ i6 <NEXT> $ l8 = l2 & $ l7 <NEXT> i18 = int $ l8 <NEXT> if i18 ! = 0 goto label2 <NEXT> i17 = i17 + -1 <NEXT> r22 = org apache lucene util fst byte store r0 <NEXT> i18 = r22 block size <NEXT> label r23 = org apache lucene util fst byte store r0 <NEXT> $ r2 = r23 block <NEXT> $ r3 = $ r2 get i17 <NEXT> r15 = byte [ ] $ r3 <NEXT> label if i16 < = 0 goto label5 <NEXT> if i16 > i18 goto label4 <NEXT> $ i10 = i18 - i16 <NEXT> java lang system arraycopy r1 i1 r15 $ i10 i16 <NEXT> goto label5 <NEXT> label return <NEXT> if i16 > i18 goto label4 <NEXT> label i16 = i16 - i18 <NEXT> $ i9 = i1 + i16 <NEXT> java lang system arraycopy r1 $ i9 r15 0 i18 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r9 = null <NEXT> r10 = null <NEXT> label $ r4 = new java io file input stream <NEXT> specialinvoke $ r4 < init > r0 <NEXT> r9 = $ r4 <NEXT> $ r5 = new java io file output stream <NEXT> specialinvoke $ r5 < init > r1 <NEXT> r10 = $ r5 <NEXT> r2 = newarray byte [ 8192 ] <NEXT> label $ i1 = $ r4 read r2 <NEXT> if $ i1 < = 0 goto label3 <NEXT> $ r5 write r2 0 $ i1 <NEXT> goto label2 <NEXT> if $ i1 < = 0 goto label3 <NEXT> label $ r6 = newarray java io closeable [ 2 ] <NEXT> $ r6 [ 0 ] = $ r4 <NEXT> $ r6 [ 1 ] = $ r5 <NEXT> org apache lucene util i o utils close $ r6 <NEXT> goto label6 <NEXT> label return <END>
<BEG> l0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r0 = @ parameter2 <NEXT> org apache lucene util numeric utils long to prefix coded byte l0 i1 r0 <NEXT> $ i2 = r0 hash code <NEXT> return $ i2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 bit <NEXT> $ r3 = r1 bit <NEXT> $ i1 = r0 wlen <NEXT> $ i0 = r1 wlen <NEXT> $ i2 = java lang math min $ i1 $ i0 <NEXT> l10 = org apache lucene util bit util pop_andnot $ r2 $ r3 0 $ i2 <NEXT> $ i4 = r0 wlen <NEXT> $ i3 = r1 wlen <NEXT> if $ i4 < = $ i3 goto label1 <NEXT> $ r4 = r0 bit <NEXT> $ i8 = r1 wlen <NEXT> $ i6 = r0 wlen <NEXT> $ i5 = r1 wlen <NEXT> $ i7 = $ i6 - $ i5 <NEXT> $ l9 = org apache lucene util bit util pop_array $ r4 $ i8 $ i7 <NEXT> l10 = l10 + $ l9 <NEXT> label return l10 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache lucene util pack abstract append long buffer $ iterator <NEXT> r3 = org apache lucene util pack abstract append long buffer r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene util pack elias fano decoder r0 <NEXT> $ l0 = specialinvoke r1 current high value <NEXT> r2 = org apache lucene util pack elias fano decoder r0 <NEXT> $ l1 = specialinvoke r2 current low value <NEXT> r3 = org apache lucene util pack elias fano decoder r0 <NEXT> $ l2 = specialinvoke r3 combine high low value $ l0 $ l1 <NEXT> return $ l2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l14 = @ parameter1 <NEXT> label $ b0 = l14 cmp 0l <NEXT> if $ b0 < = 0 goto label6 <NEXT> r10 = org apache lucene util page byte r0 <NEXT> $ i2 = r10 block size <NEXT> r11 = org apache lucene util page byte r0 <NEXT> $ i1 = r11 upto <NEXT> i15 = $ i2 - $ i1 <NEXT> if i15 ! = 0 goto label3 <NEXT> r12 = org apache lucene util page byte r0 <NEXT> $ r4 = r12 current block <NEXT> if $ r4 == null goto label2 <NEXT> r13 = org apache lucene util page byte r0 <NEXT> $ r7 = r13 block <NEXT> r14 = org apache lucene util page byte r0 <NEXT> $ r6 = r14 current block <NEXT> $ r7 add $ r6 <NEXT> r15 = org apache lucene util page byte r0 <NEXT> $ r8 = r15 block end <NEXT> r16 = org apache lucene util page byte r0 <NEXT> $ i13 = r16 upto <NEXT> $ r9 = java lang integer value of $ i13 <NEXT> $ r8 add $ r9 <NEXT> label r17 = org apache lucene util page byte r0 <NEXT> $ i12 = r17 block size <NEXT> $ r5 = newarray byte [ $ i12 ] <NEXT> r18 = org apache lucene util page byte r0 <NEXT> r18 current block = $ r5 <NEXT> r19 = org apache lucene util page byte r0 <NEXT> r19 upto = 0 <NEXT> r20 = org apache lucene util page byte r0 <NEXT> i15 = r20 block size <NEXT> label $ l16 = long i15 <NEXT> $ b17 = $ l16 cmp l14 <NEXT> if $ b17 > = 0 goto label4 <NEXT> r21 = org apache lucene util page byte r0 <NEXT> $ r3 = r21 current block <NEXT> r22 = org apache lucene util page byte r0 <NEXT> $ i9 = r22 upto <NEXT> r1 read bytes $ r3 $ i9 i15 0 <NEXT> r23 = org apache lucene util page byte r0 <NEXT> $ i10 = r23 block size <NEXT> r24 = org apache lucene util page byte r0 <NEXT> r24 upto = $ i10 <NEXT> $ l11 = long i15 <NEXT> l14 = l14 - $ l11 <NEXT> goto label5 <NEXT> label goto label1 <NEXT> if $ b17 > = 0 goto label4 <NEXT> label r25 = org apache lucene util page byte r0 <NEXT> $ r2 = r25 current block <NEXT> r26 = org apache lucene util page byte r0 <NEXT> $ i4 = r26 upto <NEXT> $ i3 = int l14 <NEXT> r1 read bytes $ r2 $ i4 $ i3 0 <NEXT> r27 = org apache lucene util page byte r0 <NEXT> $ i5 = r27 upto <NEXT> $ l6 = long $ i5 <NEXT> $ l7 = $ l6 + l14 <NEXT> $ i8 = int $ l7 <NEXT> r28 = org apache lucene util page byte r0 <NEXT> r28 upto = $ i8 <NEXT> goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = org apache lucene search boolean clause $ occur should <NEXT> r5 = org apache lucene util query builder r0 <NEXT> $ r4 = r5 create boolean query r1 r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene util query builder r0 <NEXT> $ z0 = r1 enable position increment <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = org apache lucene util ram usage estimator num_bytes_array_header <NEXT> $ l3 = long $ i0 <NEXT> $ i1 = lengthof r0 <NEXT> $ l2 = long $ i1 <NEXT> $ l4 = $ l3 + $ l2 <NEXT> $ l5 = org apache lucene util ram usage estimator align object size $ l4 <NEXT> return $ l5 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache lucene util weak identity map r0 <NEXT> $ r1 = r3 back store <NEXT> $ z0 = $ r1 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = org apache lucene util weak identity map r0 <NEXT> $ z1 = r4 reap on read <NEXT> if $ z1 == 0 goto label2 <NEXT> r5 = org apache lucene util weak identity map r0 <NEXT> r5 reap <NEXT> label r6 = org apache lucene util weak identity map r0 <NEXT> $ r2 = r6 back store <NEXT> $ i0 = $ r2 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene analysis cache token filter r0 <NEXT> $ r1 = r2 cache <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 clear <NEXT> r1 = org apache lucene analysis tokenattributes pack token attribute impl r0 <NEXT> r1 position length = 1 <NEXT> r2 = org apache lucene analysis tokenattributes pack token attribute impl r0 <NEXT> r2 position increment = 1 <NEXT> r3 = org apache lucene analysis tokenattributes pack token attribute impl r0 <NEXT> r3 term frequency = 1 <NEXT> r4 = org apache lucene analysis tokenattributes pack token attribute impl r0 <NEXT> r4 end offset = 0 <NEXT> r5 = org apache lucene analysis tokenattributes pack token attribute impl r0 <NEXT> r5 start offset = 0 <NEXT> r6 = org apache lucene analysis tokenattributes pack token attribute impl r0 <NEXT> r6 type = \ `` word\ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache lucene analysis token stream to automaton r0 <NEXT> r1 final offset gap a hole = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r2 = @ parameter3 <NEXT> r3 = @ parameter4 <NEXT> $ i1 = lengthof r2 <NEXT> if $ i1 == 16 goto label1 <NEXT> $ r13 = new java lang illegal argument exception <NEXT> $ r14 = new java lang string builder <NEXT> specialinvoke $ r14 < init > <NEXT> $ r15 = $ r14 append \ `` invalid id \ `` <NEXT> $ r16 = org apache lucene util string helper id to string r2 <NEXT> $ r17 = $ r15 append $ r16 <NEXT> $ r18 = $ r17 to string <NEXT> specialinvoke $ r13 < init > $ r18 <NEXT> throw $ r13 <NEXT> if $ i1 == 16 goto label1 <NEXT> label org apache lucene codecs codec util write header r0 r1 i0 <NEXT> $ i2 = lengthof r2 <NEXT> r0 write byte r2 0 $ i2 <NEXT> $ r5 = new org apache lucene util byte ref <NEXT> specialinvoke $ r5 < init > r3 <NEXT> $ i3 = $ r5 length <NEXT> $ i4 = r3 length <NEXT> if $ i3 ! = $ i4 goto label2 <NEXT> $ i5 = $ r5 length <NEXT> if $ i5 < 256 goto label3 <NEXT> label $ r6 = new java lang illegal argument exception <NEXT> $ r7 = new java lang string builder <NEXT> specialinvoke $ r7 < init > <NEXT> $ r8 = $ r7 append \ `` suffix must be simple ascii less than 256 character in length [ get \ `` <NEXT> $ r9 = $ r8 append r3 <NEXT> $ r10 = $ r9 append \ `` ] \ `` <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke $ r6 < init > $ r11 <NEXT> throw $ r6 <NEXT> if $ i5 < 256 goto label3 <NEXT> label $ i6 = $ r5 length <NEXT> $ b7 = byte $ i6 <NEXT> r0 write byte $ b7 <NEXT> $ r12 = $ r5 bytes <NEXT> $ i9 = $ r5 offset <NEXT> $ i8 = $ r5 length <NEXT> r0 write bytes $ r12 $ i9 $ i8 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache lucene codecs competitive impact accumulator r0 <NEXT> $ r1 = r5 max freqs <NEXT> java util array fill $ r1 0 <NEXT> r6 = org apache lucene codecs competitive impact accumulator r0 <NEXT> $ r2 = r6 other freq norm pair <NEXT> $ r2 clear <NEXT> $ z0 = org apache lucene codecs competitive impact accumulator $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r7 = org apache lucene codecs competitive impact accumulator r0 <NEXT> $ z1 = specialinvoke r7 assert consistent <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r4 = new java lang assertion error <NEXT> specialinvoke r4 < init > <NEXT> throw r4 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r4 = new java lang illegal argument exception <NEXT> specialinvoke $ r4 < init > \ `` point must not be null\ `` <NEXT> throw $ r4 <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> $ r3 = new java lang illegal argument exception <NEXT> specialinvoke $ r3 < init > \ `` point must not be 0 dimensions\ `` <NEXT> throw $ r3 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ i1 = lengthof r0 <NEXT> $ i2 = $ i1 * 4 <NEXT> r1 = newarray byte [ $ i2 ] <NEXT> i5 = 0 <NEXT> label $ i3 = lengthof r0 <NEXT> if i5 > = $ i3 goto label4 <NEXT> $ f0 = r0 [ i5 ] <NEXT> $ i4 = i5 * 4 <NEXT> org apache lucene document float point encode dimension $ f0 r1 $ i4 <NEXT> i5 = i5 + 1 <NEXT> goto label3 <NEXT> if i5 > = $ i3 goto label4 <NEXT> label $ r2 = new org apache lucene util byte ref <NEXT> specialinvoke $ r2 < init > r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> $ r1 = org apache lucene document float point new range query r0 f0 f0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> f0 = @ parameter1 <NEXT> f1 = @ parameter2 <NEXT> f2 = @ parameter3 <NEXT> f3 = @ parameter4 <NEXT> r5 = new org apache lucene geo x y rectangle <NEXT> specialinvoke r5 < init > f0 f1 f2 f3 <NEXT> r6 = new org apache lucene document x y point in geometry query <NEXT> $ r4 = newarray org apache lucene geo x y geometry [ 1 ] <NEXT> $ r4 [ 0 ] = r5 <NEXT> r7 = org apache lucene geo x y geometry [ ] $ r4 <NEXT> specialinvoke r6 < init > r0 r7 <NEXT> r8 = org apache lucene search query r6 <NEXT> return r8 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r4 = org apache lucene geo x y geometry [ ] r2 <NEXT> $ r3 = org apache lucene document x y shape new geometry query r0 r1 r4 <NEXT> return $ r3 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> d3 = @ parameter3 <NEXT> d4 = @ parameter4 <NEXT> d5 = @ parameter5 <NEXT> d6 = @ parameter6 <NEXT> d7 = @ parameter7 <NEXT> $ i0 = org apache lucene geo geo utils orient d4 d5 d6 d7 d0 d1 <NEXT> $ i1 = org apache lucene geo geo utils orient d4 d5 d6 d7 d2 d3 <NEXT> $ i2 = $ i0 * $ i1 <NEXT> if $ i2 > 0 goto label1 <NEXT> $ i3 = org apache lucene geo geo utils orient d0 d1 d2 d3 d4 d5 <NEXT> $ i4 = org apache lucene geo geo utils orient d0 d1 d2 d3 d6 d7 <NEXT> $ i5 = $ i3 * $ i4 <NEXT> if $ i5 > 0 goto label1 <NEXT> return 1 <NEXT> if $ i5 > 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r4 = org apache lucene geo polygon2 d r0 <NEXT> $ d5 = r4 min x <NEXT> r5 = org apache lucene geo polygon2 d r0 <NEXT> $ d4 = r5 max x <NEXT> r6 = org apache lucene geo polygon2 d r0 <NEXT> $ d3 = r6 min y <NEXT> r7 = org apache lucene geo polygon2 d r0 <NEXT> $ d2 = r7 max y <NEXT> $ z0 = org apache lucene geo component2 d contain point d0 d1 $ d5 $ d4 $ d3 $ d2 <NEXT> if $ z0 == 0 goto label4 <NEXT> r8 = org apache lucene geo polygon2 d r0 <NEXT> $ r1 = r8 tree <NEXT> $ z1 = $ r1 contain d0 d1 <NEXT> if $ z1 == 0 goto label4 <NEXT> r9 = org apache lucene geo polygon2 d r0 <NEXT> $ r2 = r9 hole <NEXT> if $ r2 == null goto label1 <NEXT> r10 = org apache lucene geo polygon2 d r0 <NEXT> $ r3 = r10 hole <NEXT> $ z2 = $ r3 contain d0 d1 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label $ z3 = 0 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return 0 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> d3 = @ parameter3 <NEXT> d4 = @ parameter4 <NEXT> d5 = @ parameter5 <NEXT> d6 = @ parameter6 <NEXT> d7 = @ parameter7 <NEXT> $ d8 = org apache lucene geo tessellator area d0 d1 d2 d3 d4 d5 <NEXT> $ b0 = $ d8 cmpl 0 0 <NEXT> if $ b0 < = 0 goto label01 <NEXT> $ z3 = 1 <NEXT> goto label02 <NEXT> label $ d9 = org apache lucene geo tessellator area d0 d1 d2 d3 d6 d7 <NEXT> $ b1 = $ d9 cmpl 0 0 <NEXT> if $ b1 < = 0 goto label03 <NEXT> $ z4 = 1 <NEXT> goto label04 <NEXT> label if $ z3 == $ z4 goto label09 <NEXT> $ d10 = org apache lucene geo tessellator area d4 d5 d6 d7 d0 d1 <NEXT> $ b2 = $ d10 cmpl 0 0 <NEXT> if $ b2 < = 0 goto label05 <NEXT> $ z6 = 1 <NEXT> goto label06 <NEXT> label $ d11 = org apache lucene geo tessellator area d4 d5 d6 d7 d2 d3 <NEXT> $ b3 = $ d11 cmpl 0 0 <NEXT> if $ b3 < = 0 goto label07 <NEXT> $ z7 = 1 <NEXT> goto label08 <NEXT> label if $ z6 == $ z7 goto label09 <NEXT> $ z8 = 1 <NEXT> goto label10 <NEXT> label return $ z8 <NEXT> label if $ z6 == $ z7 goto label09 <NEXT> label $ z8 = 0 <NEXT> if $ b3 < = 0 goto label07 <NEXT> label $ z7 = 0 <NEXT> if $ b2 < = 0 goto label05 <NEXT> label $ z6 = 0 <NEXT> if $ b1 < = 0 goto label03 <NEXT> label $ z4 = 0 <NEXT> if $ b0 < = 0 goto label01 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index concurrent merge scheduler r0 <NEXT> $ d0 = r1 force merge m b per sec <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene index corrupt index exception r0 <NEXT> $ r1 = r2 resource description <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> if z0 == 0 goto label1 <NEXT> if i0 < = 1 goto label1 <NEXT> r3 = new org apache lucene index doc i d merger $ sort doc i d merger <NEXT> specialinvoke r3 < init > r0 i0 null <NEXT> r5 = org apache lucene index doc i d merger r3 <NEXT> return r5 <NEXT> if i0 < = 1 goto label1 <NEXT> label r4 = new org apache lucene index doc i d merger $ sequential doc i d merger <NEXT> specialinvoke r4 < init > r0 null <NEXT> r6 = org apache lucene index doc i d merger r4 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org apache lucene index singleton sort numeric doc value <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org apache lucene index singleton sort numeric doc value r0 <NEXT> $ r2 = $ r1 get numeric doc value <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof org apache lucene index singleton sort numeric doc value <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = org apache lucene index singleton sort numeric doc value r0 <NEXT> $ r2 = $ r1 get numeric doc value <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index field info r0 <NEXT> $ i0 = r1 point dimension count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene index field info r0 <NEXT> $ r1 = r2 index option <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene index index format too old exception r0 <NEXT> $ r1 = r2 resource description <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r8 = org apache lucene index index writer r0 <NEXT> r8 ensure open <NEXT> r9 = org apache lucene index index writer r0 <NEXT> $ r3 = r9 buffer update stream <NEXT> $ z0 = $ r3 any <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r10 = org apache lucene index index writer r0 <NEXT> $ r4 = r10 doc writer <NEXT> $ z1 = $ r4 any deletion <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r11 = org apache lucene index index writer r0 <NEXT> $ r5 = r11 reader pool <NEXT> $ z2 = $ r5 any deletion <NEXT> if $ z2 == 0 goto label2 <NEXT> label return 1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label r12 = org apache lucene index index writer r0 <NEXT> $ r6 = r12 segment info <NEXT> r1 = $ r6 iterator <NEXT> label $ z3 = r1 have next <NEXT> if $ z3 == 0 goto label5 <NEXT> $ r7 = r1 next <NEXT> r2 = org apache lucene index segment commit info $ r7 <NEXT> $ z4 = r2 have deletion <NEXT> if $ z4 == 0 goto label4 <NEXT> return 1 <NEXT> if $ z4 == 0 goto label4 <NEXT> label goto label3 <NEXT> if $ z3 == 0 goto label5 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene index index writer r0 <NEXT> $ r1 = r2 change count <NEXT> $ l0 = $ r1 get <NEXT> r3 = org apache lucene index index writer r0 <NEXT> $ l1 = r3 last commit change count <NEXT> $ b2 = $ l0 cmp $ l1 <NEXT> if $ b2 ! = 0 goto label1 <NEXT> r4 = org apache lucene index index writer r0 <NEXT> $ z0 = r4 have change in ram <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index live index writer config r0 <NEXT> $ i0 = r1 create version major <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = r2 spliterator <NEXT> $ r4 = java util stream stream support stream $ r3 0 <NEXT> $ r5 = merge policy $ lambda_seg string_0__1 bootstrap $ r1 <NEXT> $ r6 = $ r4 map $ r5 <NEXT> $ r7 = java util stream collector join \ `` \ `` <NEXT> $ r8 = $ r6 collect $ r7 <NEXT> $ r9 = java lang string $ r8 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r10 = org apache lucene index multi posting enum r0 <NEXT> r10 num sub = i0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r11 = org apache lucene index multi posting enum r0 <NEXT> $ r2 = r11 sub <NEXT> $ r5 = $ r2 [ i1 ] <NEXT> $ r3 = r1 [ i1 ] <NEXT> $ r4 = $ r3 posting enum <NEXT> $ r5 posting enum = $ r4 <NEXT> r12 = org apache lucene index multi posting enum r0 <NEXT> $ r6 = r12 sub <NEXT> $ r9 = $ r6 [ i1 ] <NEXT> $ r7 = r1 [ i1 ] <NEXT> $ r8 = $ r7 slice <NEXT> $ r9 slice = $ r8 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label r13 = org apache lucene index multi posting enum r0 <NEXT> r13 upto = -1 <NEXT> r14 = org apache lucene index multi posting enum r0 <NEXT> r14 doc = -1 <NEXT> r15 = org apache lucene index multi posting enum r0 <NEXT> r15 current = null <NEXT> r16 = org apache lucene index multi posting enum r0 <NEXT> return r16 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene index pending deletes r0 <NEXT> $ i0 = r1 pending delete count <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i1 = 0 <NEXT> $ r5 = r0 leave <NEXT> r2 = $ r5 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r6 = r2 next <NEXT> r3 = org apache lucene index leaf reader context $ r6 <NEXT> $ r7 = r3 reader <NEXT> r4 = $ r7 get point value r1 <NEXT> if r4 == null goto label2 <NEXT> $ i0 = r4 get doc count <NEXT> i1 = i1 + $ i0 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return i1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r10 = null <NEXT> $ r6 = r0 leave <NEXT> r2 = $ r6 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label8 <NEXT> $ r7 = r2 next <NEXT> r3 = org apache lucene index leaf reader context $ r7 <NEXT> $ r8 = r3 reader <NEXT> r4 = $ r8 get point value r1 <NEXT> if r4 ! = null goto label2 <NEXT> goto label1 <NEXT> if r4 ! = null goto label2 <NEXT> label r5 = r4 get min pack value <NEXT> if r5 ! = null goto label3 <NEXT> label if r10 ! = null goto label4 <NEXT> $ r9 = r5 clone <NEXT> r10 = byte [ ] $ r9 <NEXT> goto label7 <NEXT> label goto label1 <NEXT> label if r10 ! = null goto label4 <NEXT> label i0 = r4 get num index dimension <NEXT> i1 = r4 get bytes per dimension <NEXT> i6 = 0 <NEXT> label if i6 > = i0 goto label7 <NEXT> i2 = i6 * i1 <NEXT> $ i4 = i2 + i1 <NEXT> $ i3 = i2 + i1 <NEXT> $ i5 = org apache lucene util future array compare unsigned r5 i2 $ i4 r10 i2 $ i3 <NEXT> if $ i5 > = 0 goto label6 <NEXT> java lang system arraycopy r5 i2 r10 i2 i1 <NEXT> label i6 = i6 + 1 <NEXT> goto label5 <NEXT> if $ z0 == 0 goto label8 <NEXT> label return r10 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache lucene index reader and update r0 <NEXT> $ r1 = r3 pending deletes <NEXT> $ r2 = $ r1 get live doc <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene index segment info r0 <NEXT> $ r1 = r2 index sort <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 size <NEXT> if $ i0 > = 2 goto label1 <NEXT> $ r9 = new java lang illegal argument exception <NEXT> specialinvoke $ r9 < init > \ `` can not make a conjunction d i s i of less than 2 iterators\ `` <NEXT> throw $ r9 <NEXT> if $ i0 > = 2 goto label1 <NEXT> label $ r5 = new java util array list <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = new java util array list <NEXT> specialinvoke $ r6 < init > <NEXT> r3 = r0 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r8 = r3 next <NEXT> r4 = org apache lucene search doc id set iterator $ r8 <NEXT> org apache lucene search conjunction d i s i add iterator r4 $ r5 $ r6 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r7 = org apache lucene search conjunction d i s i create conjunction $ r5 $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r4 = r2 get value <NEXT> $ d0 = $ r4 double value <NEXT> $ r5 = org apache lucene search double value source constant $ d0 <NEXT> $ r6 = $ r5 get value r1 null <NEXT> r14 = org apache lucene search double value source r0 <NEXT> r3 = r14 get value r1 $ r6 <NEXT> $ z0 = r3 advance exact i0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ d1 = r3 double value <NEXT> $ r10 = java lang double value of $ d1 <NEXT> r15 = org apache lucene search double value source r0 <NEXT> $ r11 = r15 to string <NEXT> $ r12 = newarray org apache lucene search explanation [ 0 ] <NEXT> $ r13 = org apache lucene search explanation match $ r10 $ r11 $ r12 <NEXT> return $ r13 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r16 = org apache lucene search double value source r0 <NEXT> $ r7 = r16 to string <NEXT> $ r8 = newarray org apache lucene search explanation [ 0 ] <NEXT> $ r9 = org apache lucene search explanation no match $ r7 $ r8 <NEXT> return $ r9 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = double value source $ lambda_from float field_0__2 bootstrap $ <NEXT> $ r2 = org apache lucene search double value source from field r0 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org apache lucene search double value source $ query double value source <NEXT> specialinvoke r2 < init > r0 null <NEXT> r3 = org apache lucene search double value source r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene search explanation r0 <NEXT> $ z0 = r1 match <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search fuzzy term enum r0 <NEXT> $ r1 = r2 boost att <NEXT> $ f0 = $ r1 get boost <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> l0 = @ parameter1 <NEXT> $ z0 = org apache lucene search l r u query cache $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r6 = org apache lucene search l r u query cache r0 <NEXT> $ r2 = r6 lock <NEXT> $ z1 = $ r2 be hold by current thread <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r5 = new java lang assertion error <NEXT> specialinvoke r5 < init > <NEXT> throw r5 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label r7 = org apache lucene search l r u query cache r0 <NEXT> $ l1 = r7 ram byte use <NEXT> $ l2 = $ l1 + l0 <NEXT> r8 = org apache lucene search l r u query cache r0 <NEXT> r8 ram byte use = $ l2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search phrase query r0 <NEXT> $ r1 = r2 field <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache lucene search n gram phrase query r0 <NEXT> $ r1 = r3 phrase query <NEXT> $ r2 = $ r1 get term <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene search term statistic r0 <NEXT> $ l0 = r1 doc freq <NEXT> return $ l0 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> $ r1 = org apache lucene search top doc merge 0 i0 r0 1 <NEXT> return $ r1 <END>
<BEG> $ r1 = new org apache lucene util automaton automaton <NEXT> specialinvoke $ r1 < init > <NEXT> i0 = $ r1 create state <NEXT> $ r1 set accept i0 1 <NEXT> $ r1 add transition i0 i0 0 255 <NEXT> $ r1 finish state <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> i2 = r0 create state <NEXT> r0 add transition i0 i2 i1 i1 <NEXT> return i2 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene util automaton automaton r0 <NEXT> $ i0 = r1 next transition <NEXT> $ i1 = $ i0 3 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = org apache lucene util automaton automaton $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r12 = org apache lucene util automaton automaton r0 <NEXT> $ i4 = r12 next state <NEXT> $ i5 = $ i4 2 <NEXT> if i0 < $ i5 goto label1 <NEXT> r11 = new java lang assertion error <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r5 = r10 append \ `` state=\ `` <NEXT> $ r6 = $ r5 append i0 <NEXT> $ r7 = $ r6 append \ `` next state=\ `` <NEXT> r13 = org apache lucene util automaton automaton r0 <NEXT> $ i6 = r13 next state <NEXT> $ r8 = $ r7 append $ i6 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> throw r11 <NEXT> if i0 < $ i5 goto label1 <NEXT> label r1 source = i0 <NEXT> r14 = org apache lucene util automaton automaton r0 <NEXT> $ r2 = r14 state <NEXT> $ i1 = 2 * i0 <NEXT> $ i2 = $ r2 [ $ i1 ] <NEXT> r1 transition upto = $ i2 <NEXT> r15 = org apache lucene util automaton automaton r0 <NEXT> $ i3 = r15 get num transition i0 <NEXT> return $ i3 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ z0 = r0 be accept 0 <NEXT> if $ z0 == 0 goto label3 <NEXT> $ i2 = r0 get num transition 0 <NEXT> if $ i2 ! = 1 goto label3 <NEXT> $ r2 = new org apache lucene util automaton transition <NEXT> specialinvoke $ r2 < init > <NEXT> r0 get transition 0 0 $ r2 <NEXT> $ i3 = $ r2 d <NEXT> if $ i3 ! = 0 goto label1 <NEXT> $ i4 = $ r2 min <NEXT> if $ i4 ! = i0 goto label1 <NEXT> $ i5 = $ r2 max <NEXT> if $ i5 ! = i1 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ i5 ! = i1 goto label1 <NEXT> label $ z1 = 0 <NEXT> if $ i2 ! = 1 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene util bit set r0 <NEXT> $ i0 = r1 cardinality <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 doc i d <NEXT> if $ i0 == -1 goto label1 <NEXT> $ r2 = new java lang illegal state exception <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append \ `` this operation only work with an unpositioned iterator get current position = \ `` <NEXT> $ i1 = r1 doc i d <NEXT> $ r5 = $ r4 append $ i1 <NEXT> $ r6 = $ r5 to string <NEXT> specialinvoke $ r2 < init > $ r6 <NEXT> throw $ r2 <NEXT> if $ i0 == -1 goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache lucene util bit set r0 <NEXT> r2 check unpositioned r1 <NEXT> i0 = r1 next doc <NEXT> label if i0 == 2147483647 goto label2 <NEXT> r3 = org apache lucene util bit set r0 <NEXT> r3 set i0 <NEXT> label if i0 == 2147483647 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 length <NEXT> r2 = org apache lucene util bytes ref builder r0 <NEXT> r2 copy char r1 0 $ i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache lucene store f s lock factory get default <NEXT> r4 = org apache lucene store lock factory $ r2 <NEXT> $ r3 = org apache lucene util command line util new f s directory r0 r1 r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache lucene util query builder r0 <NEXT> r1 enable graph query = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = org apache lucene util ram usage estimator num_bytes_array_header <NEXT> $ l3 = long $ i0 <NEXT> $ i1 = lengthof r0 <NEXT> $ l2 = long $ i1 <NEXT> $ l4 = $ l3 + $ l2 <NEXT> $ l5 = org apache lucene util ram usage estimator align object size $ l4 <NEXT> return $ l5 <END>
<BEG> r0 = @ this <NEXT> $ i0 = org apache lucene util ram usage estimator num_bytes_object_ref <NEXT> $ i1 = 12 + $ i0 <NEXT> $ l2 = long $ i1 <NEXT> $ l3 = org apache lucene util ram usage estimator align object size $ l2 <NEXT> r2 = org apache lucene util sentinel int set r0 <NEXT> $ r1 = r2 key <NEXT> $ l4 = org apache lucene util ram usage estimator size of $ r1 <NEXT> $ l5 = $ l3 + $ l4 <NEXT> return $ l5 <END>
<BEG> d0 = @ parameter0 <NEXT> $ d1 = d0 * 0 5 <NEXT> $ d2 = java lang math sqrt $ d1 <NEXT> $ d3 = java lang math min 1 0 $ d2 <NEXT> $ d4 = org apache lucene util sloppy math asin $ d3 <NEXT> $ d5 = 1 27420175428e7 * $ d4 <NEXT> return $ d5 <END>
<BEG> d0 = @ parameter0 <NEXT> $ d1 = d0 * 0 017453292519943295 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache lucene search group group search r0 <NEXT> r2 group sort = r1 <NEXT> r3 = org apache lucene search group group search r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache lucene search group group search r0 <NEXT> r1 group docs offset = i0 <NEXT> r2 = org apache lucene search group group search r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache lucene search group group search r0 <NEXT> r1 group docs limit = i0 <NEXT> r2 = org apache lucene search group group search r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache lucene search highlight query scorer r0 <NEXT> r1 expand multi term query = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache lucene search highlight weight span term extractor r0 <NEXT> r1 max doc char to analyze = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene search uhighlight passage r0 <NEXT> $ i0 = r1 end offset <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search vectorhighlight field phrase list r0 <NEXT> $ r1 = r2 phrase list <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r7 = r0 leave <NEXT> r2 = $ r7 iterator <NEXT> label $ z3 = r2 have next <NEXT> if $ z3 == 0 goto label12 <NEXT> $ r8 = r2 next <NEXT> r3 = org apache lucene index leaf reader context $ r8 <NEXT> $ r9 = r3 reader <NEXT> $ i0 = $ r9 max doc <NEXT> if $ i0 ! = 0 goto label02 <NEXT> goto label01 <NEXT> if $ i0 ! = 0 goto label02 <NEXT> label r4 = r1 get bit set r3 <NEXT> if r4 == null goto label03 <NEXT> $ i1 = r4 cardinality <NEXT> if $ i1 ! = 0 goto label04 <NEXT> label r48 = new java lang illegal state exception <NEXT> r47 = new java lang string builder <NEXT> specialinvoke r47 < init > <NEXT> $ r12 = r47 append \ `` every segment should have at least one parent but \ `` <NEXT> $ r13 = r3 reader <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 append \ `` do not have any\ `` <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke r48 < init > $ r16 <NEXT> throw r48 <NEXT> if $ i1 ! = 0 goto label04 <NEXT> label $ r17 = r3 reader <NEXT> $ i2 = $ r17 max doc <NEXT> $ i3 = $ i2 - 1 <NEXT> $ z2 = r4 get $ i3 <NEXT> if $ z2 ! = 0 goto label05 <NEXT> r50 = new java lang illegal state exception <NEXT> r49 = new java lang string builder <NEXT> specialinvoke r49 < init > <NEXT> $ r42 = r49 append \ `` the last document of a segment must always be a parent but \ `` <NEXT> $ r43 = r3 reader <NEXT> $ r44 = $ r42 append $ r43 <NEXT> $ r45 = $ r44 append \ `` have a child a a last doc\ `` <NEXT> $ r46 = $ r45 to string <NEXT> specialinvoke r50 < init > $ r46 <NEXT> throw r50 <NEXT> if $ z2 ! = 0 goto label05 <NEXT> label $ r18 = r3 reader <NEXT> r5 = $ r18 get live doc <NEXT> if r5 == null goto label11 <NEXT> i4 = -1 <NEXT> r51 = new org apache lucene util bit set iterator <NEXT> specialinvoke r51 < init > r4 0l <NEXT> r56 = org apache lucene search doc id set iterator r51 <NEXT> i5 = r56 next doc <NEXT> label if i5 == 2147483647 goto label11 <NEXT> z0 = r5 get i5 <NEXT> i6 = i4 + 1 <NEXT> label if i6 == i5 goto label10 <NEXT> z1 = r5 get i6 <NEXT> if z0 == z1 goto label09 <NEXT> if z1 == 0 goto label08 <NEXT> r53 = new java lang illegal state exception <NEXT> r52 = new java lang string builder <NEXT> specialinvoke r52 < init > <NEXT> $ r32 = r52 append \ `` parent doc \ `` <NEXT> $ r33 = $ r32 append i5 <NEXT> $ r34 = $ r33 append \ `` of segment \ `` <NEXT> $ r35 = r3 reader <NEXT> $ r36 = $ r34 append $ r35 <NEXT> $ r37 = $ r36 append \ `` be live but have a delete child document \ `` <NEXT> $ r38 = $ r37 append i6 <NEXT> $ r39 = $ r38 to string <NEXT> specialinvoke r53 < init > $ r39 <NEXT> throw r53 <NEXT> if z1 == 0 goto label08 <NEXT> label r55 = new java lang illegal state exception <NEXT> r54 = new java lang string builder <NEXT> specialinvoke r54 < init > <NEXT> $ r22 = r54 append \ `` parent doc \ `` <NEXT> $ r23 = $ r22 append i5 <NEXT> $ r24 = $ r23 append \ `` of segment \ `` <NEXT> $ r25 = r3 reader <NEXT> $ r26 = $ r24 append $ r25 <NEXT> $ r27 = $ r26 append \ `` be delete but have a live child document \ `` <NEXT> $ r28 = $ r27 append i6 <NEXT> $ r29 = $ r28 to string <NEXT> specialinvoke r55 < init > $ r29 <NEXT> throw r55 <NEXT> if z0 == z1 goto label09 <NEXT> label i6 = i6 + 1 <NEXT> goto label07 <NEXT> label if i6 == i5 goto label10 <NEXT> label i4 = i5 <NEXT> r57 = org apache lucene search doc id set iterator r51 <NEXT> i5 = r57 next doc <NEXT> goto label06 <NEXT> label if i5 == 2147483647 goto label11 <NEXT> label goto label01 <NEXT> if $ z3 == 0 goto label12 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> f0 = @ parameter2 <NEXT> z0 = @ parameter3 <NEXT> r1 = org apache lucene misc sweet spot similarity r0 <NEXT> r1 ln_min = i0 <NEXT> r2 = org apache lucene misc sweet spot similarity r0 <NEXT> r2 ln_max = i1 <NEXT> r3 = org apache lucene misc sweet spot similarity r0 <NEXT> r3 ln_steep = f0 <NEXT> r4 = org apache lucene misc sweet spot similarity r0 <NEXT> r4 discount overlap = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache lucene misc sweet spot similarity r0 <NEXT> i1 = r1 ln_min <NEXT> r2 = org apache lucene misc sweet spot similarity r0 <NEXT> i2 = r2 ln_max <NEXT> r3 = org apache lucene misc sweet spot similarity r0 <NEXT> f0 = r3 ln_steep <NEXT> $ i3 = i0 - i1 <NEXT> $ i4 = java lang math ab $ i3 <NEXT> $ i5 = i0 - i2 <NEXT> $ i6 = java lang math ab $ i5 <NEXT> $ i8 = $ i4 + $ i6 <NEXT> $ i7 = i2 - i1 <NEXT> $ i9 = $ i8 - $ i7 <NEXT> $ f1 = float $ i9 <NEXT> $ f2 = f0 * $ f1 <NEXT> $ f3 = $ f2 + 1 0f <NEXT> $ d0 = double $ f3 <NEXT> $ d1 = java lang math sqrt $ d0 <NEXT> $ d2 = 1 0 $ d1 <NEXT> $ f4 = float $ d2 <NEXT> return $ f4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search doc value stats r0 <NEXT> $ r1 = r2 field <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene queryparser classic query parser base r0 <NEXT> $ f0 = r1 fuzzy min sim <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new org apache lucene search prefix query <NEXT> specialinvoke r5 < init > r1 <NEXT> r6 = org apache lucene queryparser classic query parser base r0 <NEXT> $ r4 = r6 multi term rewrite method <NEXT> r5 set rewrite method $ r4 <NEXT> r7 = org apache lucene search query r5 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache lucene queryparser flexible core builder query tree builder r0 <NEXT> specialinvoke r4 process r1 <NEXT> $ r2 = org apache lucene queryparser flexible core builder query tree builder query_tree_builder_tagid <NEXT> $ r3 = r1 get tag $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene queryparser flexible core node path query node r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get child <NEXT> if r2 == null goto label8 <NEXT> $ i0 = r2 size <NEXT> if $ i0 < = 0 goto label8 <NEXT> r13 = org apache lucene queryparser flexible core processor query node processor impl r0 <NEXT> r3 = specialinvoke r13 allocate child list <NEXT> label r8 = r2 iterator <NEXT> label $ z0 = r8 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r5 = r8 next <NEXT> r9 = org apache lucene queryparser flexible core node query node $ r5 <NEXT> r14 = org apache lucene queryparser flexible core processor query node processor impl r0 <NEXT> r10 = specialinvoke r14 process iteration r9 <NEXT> if r10 ! = null goto label3 <NEXT> r12 = new java lang null pointer exception <NEXT> specialinvoke r12 < init > <NEXT> throw r12 <NEXT> if r10 ! = null goto label3 <NEXT> label r3 add r10 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r15 = org apache lucene queryparser flexible core processor query node processor impl r0 <NEXT> r16 = java util list r3 <NEXT> r11 = r15 set child order r16 <NEXT> r1 set r11 <NEXT> label r3 be use = 0 <NEXT> goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` text parser should not be null ! \ `` <NEXT> throw r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = org apache lucene queryparser flexible core query parser helper r0 <NEXT> r4 syntax parser = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene queryparser flexible core query parser helper r0 <NEXT> $ r1 = r2 builder <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene queryparser flexible core query parser helper r0 <NEXT> $ r1 = r2 syntax parser <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache lucene queryparser flexible standard node abstract range query node r0 <NEXT> r2 = r4 get low bound <NEXT> r5 = org apache lucene queryparser flexible standard node abstract range query node r0 <NEXT> r3 = r5 get upper bound <NEXT> if r2 == null goto label1 <NEXT> r2 set field r1 <NEXT> label if r3 == null goto label2 <NEXT> r3 set field r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache lucene queryparser flexible standard standard query parser r0 <NEXT> $ r2 = r4 get query config handler <NEXT> $ r3 = org apache lucene queryparser flexible standard config standard query config handler $ configuration key default_operator <NEXT> $ r2 set $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache lucene queryparser flexible standard standard query parser r0 <NEXT> $ r2 = r4 get query config handler <NEXT> $ r3 = org apache lucene queryparser flexible standard config standard query config handler $ configuration key multi_term_rewrite_method <NEXT> $ r2 set $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org apache lucene queryparser surround query srnd query r0 <NEXT> $ z0 = r6 be weight <NEXT> if $ z0 == 0 goto label1 <NEXT> r7 = org apache lucene queryparser surround query srnd query r0 <NEXT> $ r2 = r7 get weight operator <NEXT> r1 append $ r2 <NEXT> r8 = org apache lucene queryparser surround query srnd query r0 <NEXT> $ r4 = r8 get weight string <NEXT> r1 append $ r4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> d3 = @ parameter3 <NEXT> org apache lucene document lat lon bound box check args d0 d1 d2 d3 <NEXT> r7 = org apache lucene document lat lon bound box r0 <NEXT> $ r1 = r7 field data <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = newarray byte [ 16 ] <NEXT> r6 = new org apache lucene util byte ref <NEXT> specialinvoke r6 < init > r5 <NEXT> r8 = org apache lucene document lat lon bound box r0 <NEXT> r8 field data = r6 <NEXT> goto label2 <NEXT> label org apache lucene document lat lon bound box encode d0 d1 r5 0 <NEXT> org apache lucene document lat lon bound box encode d2 d3 r5 8 <NEXT> return <NEXT> if $ r1 ! = null goto label1 <NEXT> label r9 = org apache lucene document lat lon bound box r0 <NEXT> $ r2 = r9 field data <NEXT> $ r3 = org apache lucene util bytes ref $ r2 <NEXT> r5 = $ r3 byte <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache lucene spatial composite composite spatial strategy r0 <NEXT> r1 optimize predicate = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = org apache lucene spatial prefix tree date range prefix tree r0 <NEXT> $ r2 = r10 max l v <NEXT> i7 = org apache lucene spatial prefix tree date range prefix tree compare prefix r1 $ r2 <NEXT> $ z0 = org apache lucene spatial prefix tree date range prefix tree $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> if i7 < = 0 goto label1 <NEXT> r8 = new java lang assertion error <NEXT> specialinvoke r8 < init > <NEXT> throw r8 <NEXT> if i7 < = 0 goto label1 <NEXT> label if i7 ! = 0 goto label2 <NEXT> r11 = org apache lucene spatial prefix tree date range prefix tree r0 <NEXT> $ r6 = r11 max l v <NEXT> $ i3 = r1 get level <NEXT> $ i4 = $ i3 + 1 <NEXT> $ i5 = $ r6 get val at level $ i4 <NEXT> $ i6 = $ i5 + 1 <NEXT> return $ i6 <NEXT> label if i7 ! = 0 goto label2 <NEXT> label r12 = org apache lucene spatial prefix tree date range prefix tree r0 <NEXT> $ r3 = r12 gregorian change date l v <NEXT> if $ r3 == null goto label3 <NEXT> r13 = org apache lucene spatial prefix tree date range prefix tree r0 <NEXT> $ r5 = r13 gregorian change date l v <NEXT> $ i8 = org apache lucene spatial prefix tree date range prefix tree compare prefix r1 $ r5 <NEXT> goto label4 <NEXT> label if $ i8 < 0 goto label6 <NEXT> r14 = org apache lucene spatial prefix tree date range prefix tree r0 <NEXT> i0 = specialinvoke r14 fast sub cell r1 <NEXT> $ z1 = org apache lucene spatial prefix tree date range prefix tree $ assertion disable <NEXT> if $ z1 ! = 0 goto label5 <NEXT> r15 = org apache lucene spatial prefix tree date range prefix tree r0 <NEXT> $ i2 = specialinvoke r15 slow sub cell r1 <NEXT> if i0 == $ i2 goto label5 <NEXT> r9 = new java lang assertion error <NEXT> specialinvoke r9 < init > \ `` fast slow num sub cell inconsistency\ `` <NEXT> throw r9 <NEXT> if i0 == $ i2 goto label5 <NEXT> label return i0 <NEXT> label if $ i8 < 0 goto label6 <NEXT> label r16 = org apache lucene spatial prefix tree date range prefix tree r0 <NEXT> $ i1 = specialinvoke r16 slow sub cell r1 <NEXT> return $ i1 <NEXT> if $ r3 == null goto label3 <NEXT> label $ i8 = -1 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = 30 i0 <NEXT> $ i2 = $ i1 + 1 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r7 = org apache lucene spatial query spatial args r0 <NEXT> $ r2 = r7 dist err <NEXT> if $ r2 == null goto label1 <NEXT> r8 = org apache lucene spatial query spatial args r0 <NEXT> $ r6 = r8 dist err <NEXT> $ d3 = $ r6 double value <NEXT> return $ d3 <NEXT> if $ r2 == null goto label1 <NEXT> label r9 = org apache lucene spatial query spatial args r0 <NEXT> $ r3 = r9 dist err pct <NEXT> if $ r3 == null goto label2 <NEXT> r10 = org apache lucene spatial query spatial args r0 <NEXT> $ r5 = r10 dist err pct <NEXT> $ d4 = $ r5 double value <NEXT> goto label3 <NEXT> label r11 = org apache lucene spatial query spatial args r0 <NEXT> $ r4 = r11 shape <NEXT> $ d2 = org apache lucene spatial query spatial args calc distance from err pct $ r4 $ d4 r1 <NEXT> return $ d2 <NEXT> if $ r3 == null goto label2 <NEXT> label $ d4 = d0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache lucene spatial query spatial args r0 <NEXT> $ r1 = r5 dist err <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org apache lucene spatial query spatial args r0 <NEXT> $ r2 = r6 dist err pct <NEXT> if $ r2 == null goto label1 <NEXT> r4 = new java lang illegal argument exception <NEXT> specialinvoke r4 < init > \ `` only dist err or dist err pct can be specify \ `` <NEXT> throw r4 <NEXT> if $ r2 == null goto label1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene spatial query spatial args r0 <NEXT> $ r1 = r2 dist err pct <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> d0 = @ parameter2 <NEXT> d1 = @ parameter3 <NEXT> d2 = @ parameter4 <NEXT> d3 = @ parameter5 <NEXT> r2 = org apache lucene spatial3d geo3 d util from box r1 d0 d1 d2 d3 <NEXT> r4 = org apache lucene spatial3d geom geo shape r2 <NEXT> $ r3 = org apache lucene spatial3d geo3 d point new shape query r0 r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 get edge point <NEXT> $ i1 = lengthof r2 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> return 3 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label z1 = 0 <NEXT> z2 = 0 <NEXT> i0 = lengthof r2 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label6 <NEXT> r4 = r2 [ i2 ] <NEXT> r5 = org apache lucene spatial3d geom base x y z solid r0 <NEXT> r6 = org apache lucene spatial3d geom vector r4 <NEXT> $ z0 = r5 be within r6 <NEXT> if $ z0 == 0 goto label3 <NEXT> z2 = 1 <NEXT> goto label4 <NEXT> label if z2 == 0 goto label5 <NEXT> if z1 == 0 goto label5 <NEXT> return 1 <NEXT> if z1 == 0 goto label5 <NEXT> label i2 = i2 + 1 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label z1 = 1 <NEXT> label if i2 > = i0 goto label6 <NEXT> label if z2 ! = 0 goto label7 <NEXT> if z1 ! = 0 goto label7 <NEXT> return 2 <NEXT> if z1 ! = 0 goto label7 <NEXT> label if z2 == 0 goto label8 <NEXT> if z1 ! = 0 goto label8 <NEXT> return 0 <NEXT> if z1 ! = 0 goto label8 <NEXT> label if z1 == 0 goto label9 <NEXT> if z2 ! = 0 goto label9 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r7 = org apache lucene spatial3d geom geo degenerate path r0 <NEXT> $ z0 = r7 be do <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = new java lang illegal state exception <NEXT> specialinvoke r5 < init > \ `` can\'t call add point if do already called\ `` <NEXT> throw r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r8 = org apache lucene spatial3d geom geo degenerate path r0 <NEXT> $ r3 = r8 point <NEXT> r6 = new org apache lucene spatial3d geom geo point <NEXT> r9 = org apache lucene spatial3d geom geo degenerate path r0 <NEXT> $ r2 = r9 planet model <NEXT> specialinvoke r6 < init > $ r2 d0 d1 <NEXT> $ r3 add r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ d2 = r2 x <NEXT> $ d1 = r2 y <NEXT> $ d0 = r2 z <NEXT> r3 = org apache lucene spatial3d geom geo distance r0 <NEXT> $ d3 = r3 compute delta distance r1 $ d2 $ d1 $ d0 <NEXT> return $ d3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache lucene spatial3d geom geo point r0 <NEXT> $ d0 = r2 dot product r1 <NEXT> r3 = org apache lucene spatial3d geom geo point r0 <NEXT> $ d1 = r3 magnitude <NEXT> $ d2 = r1 magnitude <NEXT> $ d3 = $ d1 * $ d2 <NEXT> $ d4 = $ d0 $ d3 <NEXT> $ d5 = org apache lucene spatial3d geom tool safe acos $ d4 <NEXT> return $ d5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org apache lucene spatial3d geom geo convex polygon <NEXT> specialinvoke r3 < init > r0 r1 <NEXT> r4 = org apache lucene spatial3d geom geo polygon r3 <NEXT> return r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org apache lucene spatial3d geom geo polygon factory make geo polygon r0 r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ d2 = r1 x <NEXT> $ d1 = r1 y <NEXT> $ d0 = r1 z <NEXT> r3 = org apache lucene spatial3d geom plane r0 <NEXT> $ d3 = r3 normal distance $ d2 $ d1 $ d0 r2 <NEXT> return $ d3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene spatial3d geom planet model r0 <NEXT> $ d1 = r1 xy scale <NEXT> r2 = org apache lucene spatial3d geom planet model r0 <NEXT> $ d0 = r2 z scale <NEXT> $ b0 = $ d1 cmpl $ d0 <NEXT> if $ b0 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b0 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ d2 = r1 x <NEXT> $ d1 = r1 y <NEXT> $ d0 = r1 z <NEXT> r2 = org apache lucene spatial3d geom planet model r0 <NEXT> $ z0 = r2 point outside $ d2 $ d1 $ d0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache lucene spatial3d geom vector r0 <NEXT> $ d1 = r2 x <NEXT> $ d0 = r1 x <NEXT> $ d5 = $ d1 * $ d0 <NEXT> r3 = org apache lucene spatial3d geom vector r0 <NEXT> $ d3 = r3 y <NEXT> $ d2 = r1 y <NEXT> $ d4 = $ d3 * $ d2 <NEXT> $ d9 = $ d5 + $ d4 <NEXT> r4 = org apache lucene spatial3d geom vector r0 <NEXT> $ d7 = r4 z <NEXT> $ d6 = r1 z <NEXT> $ d8 = $ d7 * $ d6 <NEXT> $ d10 = $ d9 + $ d8 <NEXT> return $ d10 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> r2 = new org apache lucene spatial3d geom vector <NEXT> r3 = org apache lucene spatial3d geom vector r0 <NEXT> $ d2 = r3 x <NEXT> $ d5 = $ d2 * d1 <NEXT> r4 = org apache lucene spatial3d geom vector r0 <NEXT> $ d3 = r4 z <NEXT> $ d4 = $ d3 * d0 <NEXT> $ d12 = $ d5 - $ d4 <NEXT> r5 = org apache lucene spatial3d geom vector r0 <NEXT> $ d11 = r5 y <NEXT> r6 = org apache lucene spatial3d geom vector r0 <NEXT> $ d6 = r6 x <NEXT> $ d9 = $ d6 * d0 <NEXT> r7 = org apache lucene spatial3d geom vector r0 <NEXT> $ d7 = r7 z <NEXT> $ d8 = $ d7 * d1 <NEXT> $ d10 = $ d9 + $ d8 <NEXT> specialinvoke r2 < init > $ d12 $ d11 $ d10 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache lucene spatial3d geom vector r0 <NEXT> $ d0 = r2 normal distance square r1 <NEXT> $ d1 = java lang math sqrt $ d0 <NEXT> return $ d1 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> d2 = @ parameter2 <NEXT> r1 = org apache lucene spatial3d geom vector r0 <NEXT> $ d6 = r1 y <NEXT> $ d9 = $ d6 * d2 <NEXT> r2 = org apache lucene spatial3d geom vector r0 <NEXT> $ d7 = r2 z <NEXT> $ d8 = $ d7 * d1 <NEXT> d3 = $ d9 - $ d8 <NEXT> r3 = org apache lucene spatial3d geom vector r0 <NEXT> $ d10 = r3 z <NEXT> $ d13 = $ d10 * d0 <NEXT> r4 = org apache lucene spatial3d geom vector r0 <NEXT> $ d11 = r4 x <NEXT> $ d12 = $ d11 * d2 <NEXT> d4 = $ d13 - $ d12 <NEXT> r5 = org apache lucene spatial3d geom vector r0 <NEXT> $ d14 = r5 x <NEXT> $ d17 = $ d14 * d1 <NEXT> r6 = org apache lucene spatial3d geom vector r0 <NEXT> $ d15 = r6 y <NEXT> $ d16 = $ d15 * d0 <NEXT> d5 = $ d17 - $ d16 <NEXT> $ d19 = d3 * d3 <NEXT> $ d18 = d4 * d4 <NEXT> $ d21 = $ d19 + $ d18 <NEXT> $ d20 = d5 * d5 <NEXT> $ d22 = $ d21 + $ d20 <NEXT> $ b0 = $ d22 cmpg 1 0e-24 <NEXT> if $ b0 > = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ b0 > = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache lucene spatial3d geom x y z bound r0 <NEXT> $ r2 = r4 max z <NEXT> if $ r2 ! = null goto label1 <NEXT> return 0 <NEXT> if $ r2 ! = null goto label1 <NEXT> label $ d0 = r1 get maximum z value <NEXT> r5 = org apache lucene spatial3d geom x y z bound r0 <NEXT> $ r3 = r5 max z <NEXT> $ d1 = $ r3 double value <NEXT> $ d2 = $ d0 - $ d1 <NEXT> $ b0 = $ d2 cmpg 1 0e-12 <NEXT> if $ b0 > = 0 goto label2 <NEXT> $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ b0 > = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> d1 = @ parameter2 <NEXT> d2 = @ parameter3 <NEXT> d3 = @ parameter4 <NEXT> d4 = @ parameter5 <NEXT> d5 = @ parameter6 <NEXT> $ d6 = d1 - d0 <NEXT> $ d7 = java lang math ab $ d6 <NEXT> $ b0 = $ d7 cmpg 1 0e-12 <NEXT> if $ b0 > = 0 goto label4 <NEXT> $ d22 = d3 - d2 <NEXT> $ d23 = java lang math ab $ d22 <NEXT> $ b4 = $ d23 cmpg 1 0e-12 <NEXT> if $ b4 > = 0 goto label2 <NEXT> $ d32 = d5 - d4 <NEXT> $ d33 = java lang math ab $ d32 <NEXT> $ b6 = $ d33 cmpg 1 0e-12 <NEXT> if $ b6 > = 0 goto label1 <NEXT> r9 = new org apache lucene spatial3d geom d xd yd z solid <NEXT> $ d38 = d0 + d1 <NEXT> $ d41 = $ d38 * 0 5 <NEXT> $ d39 = d2 + d3 <NEXT> $ d40 = $ d39 * 0 5 <NEXT> specialinvoke r9 < init > r0 $ d41 $ d40 d4 <NEXT> r17 = org apache lucene spatial3d geom x y z solid r9 <NEXT> return r17 <NEXT> if $ b6 > = 0 goto label1 <NEXT> label r10 = new org apache lucene spatial3d geom d xd y z solid <NEXT> $ d34 = d0 + d1 <NEXT> $ d37 = $ d34 * 0 5 <NEXT> $ d35 = d2 + d3 <NEXT> $ d36 = $ d35 * 0 5 <NEXT> specialinvoke r10 < init > r0 $ d37 $ d36 d4 d5 <NEXT> r18 = org apache lucene spatial3d geom x y z solid r10 <NEXT> return r18 <NEXT> if $ b4 > = 0 goto label2 <NEXT> label $ d24 = d5 - d4 <NEXT> $ d25 = java lang math ab $ d24 <NEXT> $ b5 = $ d25 cmpg 1 0e-12 <NEXT> if $ b5 > = 0 goto label3 <NEXT> r11 = new org apache lucene spatial3d geom d x yd z solid <NEXT> $ d28 = d0 + d1 <NEXT> $ d31 = $ d28 * 0 5 <NEXT> $ d29 = d4 + d5 <NEXT> $ d30 = $ d29 * 0 5 <NEXT> specialinvoke r11 < init > r0 $ d31 d2 d3 $ d30 <NEXT> r19 = org apache lucene spatial3d geom x y z solid r11 <NEXT> return r19 <NEXT> if $ b5 > = 0 goto label3 <NEXT> label r12 = new org apache lucene spatial3d geom d x y z solid <NEXT> $ d26 = d0 + d1 <NEXT> $ d27 = $ d26 * 0 5 <NEXT> specialinvoke r12 < init > r0 $ d27 d2 d3 d4 d5 <NEXT> r20 = org apache lucene spatial3d geom x y z solid r12 <NEXT> return r20 <NEXT> if $ b0 > = 0 goto label4 <NEXT> label $ d8 = d3 - d2 <NEXT> $ d9 = java lang math ab $ d8 <NEXT> $ b1 = $ d9 cmpg 1 0e-12 <NEXT> if $ b1 > = 0 goto label6 <NEXT> $ d14 = d5 - d4 <NEXT> $ d15 = java lang math ab $ d14 <NEXT> $ b3 = $ d15 cmpg 1 0e-12 <NEXT> if $ b3 > = 0 goto label5 <NEXT> r13 = new org apache lucene spatial3d geom xd yd z solid <NEXT> $ d18 = d2 + d3 <NEXT> $ d21 = $ d18 * 0 5 <NEXT> $ d19 = d4 + d5 <NEXT> $ d20 = $ d19 * 0 5 <NEXT> specialinvoke r13 < init > r0 d0 d1 $ d21 $ d20 <NEXT> r21 = org apache lucene spatial3d geom x y z solid r13 <NEXT> return r21 <NEXT> if $ b3 > = 0 goto label5 <NEXT> label r14 = new org apache lucene spatial3d geom xd y z solid <NEXT> $ d16 = d2 + d3 <NEXT> $ d17 = $ d16 * 0 5 <NEXT> specialinvoke r14 < init > r0 d0 d1 $ d17 d4 d5 <NEXT> r22 = org apache lucene spatial3d geom x y z solid r14 <NEXT> return r22 <NEXT> if $ b1 > = 0 goto label6 <NEXT> label $ d10 = d5 - d4 <NEXT> $ d11 = java lang math ab $ d10 <NEXT> $ b2 = $ d11 cmpg 1 0e-12 <NEXT> if $ b2 > = 0 goto label7 <NEXT> r15 = new org apache lucene spatial3d geom x yd z solid <NEXT> $ d12 = d4 + d5 <NEXT> $ d13 = $ d12 * 0 5 <NEXT> specialinvoke r15 < init > r0 d0 d1 d2 d3 $ d13 <NEXT> r23 = org apache lucene spatial3d geom x y z solid r15 <NEXT> return r23 <NEXT> if $ b2 > = 0 goto label7 <NEXT> label r16 = new org apache lucene spatial3d geom standard x y z solid <NEXT> specialinvoke r16 < init > r0 d0 d1 d2 d3 d4 d5 <NEXT> r24 = org apache lucene spatial3d geom x y z solid r16 <NEXT> return r24 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> r1 = org apache lucene search spell direct spell checker r0 <NEXT> r1 accuracy = f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search spell direct spell checker r0 <NEXT> $ r1 = r2 comparator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache lucene search suggest analyze suggest stop filter factory r0 <NEXT> $ z0 = r1 ignore case <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = org apache lucene search suggest document completion scorer r0 <NEXT> $ r2 = r4 filter doc <NEXT> if $ r2 == null goto label1 <NEXT> r5 = org apache lucene search suggest document completion scorer r0 <NEXT> $ r3 = r5 filter doc <NEXT> $ z1 = $ r3 get i0 <NEXT> if $ z1 == 0 goto label3 <NEXT> label if r1 == null goto label2 <NEXT> $ z0 = r1 get i0 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ z2 = 1 <NEXT> goto label4 <NEXT> label return $ z2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache lucene search suggest fst f s t completion r0 <NEXT> $ r1 = r2 root arc <NEXT> $ i0 = lengthof $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r6 = new org apache mahout math map open int long hash map <NEXT> specialinvoke $ r6 < init > <NEXT> $ r7 = new org apache hadoop fs path <NEXT> specialinvoke $ r7 < init > r0 <NEXT> $ r8 = new org apache mahout common iterator sequencefile sequence file dir iterable <NEXT> $ r9 = org apache mahout common iterator sequencefile path type list <NEXT> $ r10 = org apache mahout common iterator sequencefile path filter part filter <NEXT> specialinvoke $ r8 < init > $ r7 $ r9 $ r10 null 1 r1 <NEXT> r4 = $ r8 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r11 = r4 next <NEXT> r5 = org apache mahout common pair $ r11 <NEXT> $ r12 = r5 get first <NEXT> $ r13 = org apache mahout math var int writable $ r12 <NEXT> $ i0 = $ r13 get <NEXT> $ r14 = r5 get second <NEXT> $ r15 = org apache mahout math var long writable $ r14 <NEXT> $ l1 = $ r15 get <NEXT> $ r6 put $ i0 $ l1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return $ r6 <END>
<BEG> r0 = @ this <NEXT> d10 = 0 0 <NEXT> d11 = 0 0 <NEXT> i10 = 0 <NEXT> label r9 = org apache mahout classifier confusion matrix r0 <NEXT> $ r3 = r9 confusion matrix <NEXT> $ i1 = lengthof $ r3 <NEXT> if i10 > = $ i1 goto label6 <NEXT> r10 = org apache mahout classifier confusion matrix r0 <NEXT> $ r4 = r10 confusion matrix <NEXT> $ r5 = $ r4 [ i10 ] <NEXT> $ i6 = $ r5 [ i10 ] <NEXT> $ d6 = double $ i6 <NEXT> d10 = d10 + $ d6 <NEXT> d12 = 0 0 <NEXT> i11 = 0 <NEXT> label r11 = org apache mahout classifier confusion matrix r0 <NEXT> $ r6 = r11 confusion matrix <NEXT> $ i7 = lengthof $ r6 <NEXT> if i11 > = $ i7 goto label3 <NEXT> r12 = org apache mahout classifier confusion matrix r0 <NEXT> $ r7 = r12 confusion matrix <NEXT> $ r8 = $ r7 [ i10 ] <NEXT> $ i9 = $ r8 [ i11 ] <NEXT> $ d9 = double $ i9 <NEXT> d12 = d12 + $ d9 <NEXT> i11 = i11 + 1 <NEXT> goto label2 <NEXT> if i11 > = $ i7 goto label3 <NEXT> label d13 = 0 0 <NEXT> r13 = org apache mahout classifier confusion matrix r0 <NEXT> r1 = r13 confusion matrix <NEXT> i0 = lengthof r1 <NEXT> i12 = 0 <NEXT> label if i12 > = i0 goto label5 <NEXT> r2 = r1 [ i12 ] <NEXT> $ i8 = r2 [ i10 ] <NEXT> $ d8 = double $ i8 <NEXT> d13 = d13 + $ d8 <NEXT> i12 = i12 + 1 <NEXT> goto label4 <NEXT> label if i12 > = i0 goto label5 <NEXT> label $ d7 = d12 * d13 <NEXT> d11 = d11 + $ d7 <NEXT> i10 = i10 + 1 <NEXT> goto label1 <NEXT> if i10 > = $ i1 goto label6 <NEXT> label r14 = org apache mahout classifier confusion matrix r0 <NEXT> $ i2 = r14 sample <NEXT> $ d0 = double $ i2 <NEXT> $ d1 = $ d0 * d10 <NEXT> $ d4 = $ d1 - d11 <NEXT> r15 = org apache mahout classifier confusion matrix r0 <NEXT> $ i4 = r15 sample <NEXT> r16 = org apache mahout classifier confusion matrix r0 <NEXT> $ i3 = r16 sample <NEXT> $ i5 = $ i4 * $ i3 <NEXT> $ d2 = double $ i5 <NEXT> $ d3 = $ d2 - d11 <NEXT> $ d5 = $ d4 $ d3 <NEXT> return $ d5 <END>
<BEG> r0 = @ this <NEXT> r9 = new org apache mahout cf taste impl common full running average and std dev <NEXT> specialinvoke r9 < init > <NEXT> i4 = 0 <NEXT> label r10 = org apache mahout classifier confusion matrix r0 <NEXT> $ r3 = r10 confusion matrix <NEXT> $ i0 = lengthof $ r3 <NEXT> if i4 > = $ i0 goto label4 <NEXT> d4 = 0 0 <NEXT> i5 = 0 <NEXT> label r11 = org apache mahout classifier confusion matrix r0 <NEXT> $ r4 = r11 confusion matrix <NEXT> $ i1 = lengthof $ r4 <NEXT> if i5 > = $ i1 goto label3 <NEXT> r12 = org apache mahout classifier confusion matrix r0 <NEXT> $ r7 = r12 confusion matrix <NEXT> $ r8 = $ r7 [ i4 ] <NEXT> $ i3 = $ r8 [ i5 ] <NEXT> $ d3 = double $ i3 <NEXT> d4 = d4 + $ d3 <NEXT> i5 = i5 + 1 <NEXT> goto label2 <NEXT> if i5 > = $ i1 goto label3 <NEXT> label r13 = org apache mahout classifier confusion matrix r0 <NEXT> $ r5 = r13 confusion matrix <NEXT> $ r6 = $ r5 [ i4 ] <NEXT> $ i2 = $ r6 [ i4 ] <NEXT> $ d1 = double $ i2 <NEXT> $ d0 = d4 + 1 0e-6 <NEXT> $ d2 = $ d1 $ d0 <NEXT> r14 = org apache mahout cf taste impl common running average and std dev r9 <NEXT> r14 add datum $ d2 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> if i4 > = $ i0 goto label4 <NEXT> label r15 = org apache mahout cf taste impl common running average and std dev r9 <NEXT> return r15 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com google common collect set new hash set <NEXT> r11 = org apache mahout classifier df data data r0 <NEXT> $ r4 = r11 instance <NEXT> r8 = $ r4 iterator <NEXT> label $ z0 = r8 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r8 next <NEXT> r9 = org apache mahout classifier df data instance $ r6 <NEXT> $ d1 = r9 get i0 <NEXT> $ r7 = java lang double value of $ d1 <NEXT> r1 add $ r7 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i1 = r1 size <NEXT> r10 = newarray double [ $ i1 ] <NEXT> i3 = 0 <NEXT> r2 = r1 iterator <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r5 = r2 next <NEXT> r3 = java lang double $ r5 <NEXT> $ i2 = i3 <NEXT> i3 = i3 + 1 <NEXT> $ d0 = r3 double value <NEXT> r10 [ $ i2 ] = $ d0 <NEXT> goto label3 <NEXT> if $ z1 == 0 goto label4 <NEXT> label return r10 <END>
<BEG> r0 = @ parameter0 <NEXT> i2 = 0 <NEXT> i0 = lengthof r0 <NEXT> i3 = 0 <NEXT> label if i3 > = i0 goto label2 <NEXT> i1 = r0 [ i3 ] <NEXT> i2 = i2 + i1 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i0 goto label2 <NEXT> label return i2 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = r0 read int <NEXT> r1 = newarray org apache mahout classifier df node node [ i0 ] <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> $ r2 = org apache mahout classifier df node node read r0 <NEXT> r1 [ i1 ] = $ r2 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = org apache mahout classifier df tool tree visualizer get reflect map <NEXT> $ r4 = org apache mahout classifier df tool tree visualizer to string node r0 r1 r2 $ r3 0 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache mahout classifier mlp neural network r0 <NEXT> r2 training method = r1 <NEXT> r3 = org apache mahout classifier mlp neural network r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r4 = org apache mahout classifier mlp neural network r0 <NEXT> $ r1 = r4 weight matrix list <NEXT> $ r2 = $ r1 get i0 <NEXT> $ r3 = org apache mahout math matrix $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i1 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> r9 = org apache mahout classifier mlp neural network r0 <NEXT> $ r3 = r9 weight matrix list <NEXT> $ r4 = $ r3 get i1 <NEXT> r2 = org apache mahout math matrix $ r4 <NEXT> r10 = org apache mahout classifier mlp neural network r0 <NEXT> $ r6 = r10 weight matrix list <NEXT> $ r5 = r1 [ i1 ] <NEXT> $ r7 = r2 plus $ r5 <NEXT> $ r6 set i1 $ r7 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com google common collect list new array list <NEXT> r4 = org apache mahout classifier mlp neural network r0 <NEXT> r4 weight matrix list = $ r2 <NEXT> r5 = org apache mahout classifier mlp neural network r0 <NEXT> $ r3 = r5 weight matrix list <NEXT> java util collection add all $ r3 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache mahout classifier mlp neural network r0 <NEXT> r2 = r3 train by instance r1 <NEXT> r4 = org apache mahout classifier mlp neural network r0 <NEXT> r4 update weight matrix r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = new org apache mahout math dense vector <NEXT> r16 = org apache mahout classifier sgd gradient machine r0 <NEXT> $ i0 = r16 num hidden <NEXT> specialinvoke r15 < init > $ i0 <NEXT> i2 = 0 <NEXT> label r17 = org apache mahout classifier sgd gradient machine r0 <NEXT> $ i1 = r17 num hidden <NEXT> if i2 > = $ i1 goto label2 <NEXT> r18 = org apache mahout classifier sgd gradient machine r0 <NEXT> $ r13 = r18 hidden weight <NEXT> $ r14 = $ r13 [ i2 ] <NEXT> $ d0 = $ r14 dot r1 <NEXT> r15 set quick i2 $ d0 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label r19 = org apache mahout classifier sgd gradient machine r0 <NEXT> $ r5 = r19 hidden bias <NEXT> $ r4 = org apache mahout math function function plus <NEXT> r15 assign $ r5 $ r4 <NEXT> $ r7 = org apache mahout math function function min 40 0 <NEXT> $ r8 = r15 assign $ r7 <NEXT> $ r9 = org apache mahout math function function max -40 0 <NEXT> $ r8 assign $ r9 <NEXT> $ r11 = org apache mahout math function function sigmoid <NEXT> r15 assign $ r11 <NEXT> return r15 <END>
<BEG> r0 = @ parameter0 <NEXT> d1 = 0 0 <NEXT> r1 = r0 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r3 = r1 next <NEXT> r2 = org apache mahout math vector $ r3 <NEXT> com google common base precondition check not null r2 <NEXT> $ z1 = r2 instanceof org apache mahout math weight vector <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r5 = org apache mahout math weight vector r2 <NEXT> $ d0 = $ r5 get weight <NEXT> d1 = d1 + $ d0 <NEXT> goto label3 <NEXT> label goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label d1 = d1 + 1 0 <NEXT> if $ z0 == 0 goto label4 <NEXT> label return d1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache mahout cluster lda cvb in memory collapse variational bayes0 r0 <NEXT> r1 train document 0 0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r3 = new org apache mahout cluster stream mapreduce stream k mean utils m r $ 1 <NEXT> specialinvoke r3 < init > <NEXT> r4 = com google common base function r3 <NEXT> $ r2 = com google common collect iterables transform r0 r4 <NEXT> return $ r2 <END>
<BEG> $ r0 = new org apache common cli2 builder default option builder <NEXT> specialinvoke $ r0 < init > <NEXT> $ r1 = $ r0 with long name \ `` analyzer name\ `` <NEXT> $ r2 = $ r1 with required 0 <NEXT> $ r3 = $ r2 with description \ `` if present the name of a lucene analyzer class to use\ `` <NEXT> $ r4 = new org apache common cli2 builder argument builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 with name \ `` analyzer name\ `` <NEXT> $ r6 = class \ `` lorg apache lucene analysis standard standard analyzer \ `` <NEXT> $ r7 = $ r6 get name <NEXT> $ r8 = $ r5 with default $ r7 <NEXT> $ r9 = $ r8 with minimum 1 <NEXT> $ r10 = $ r9 with maximum 1 <NEXT> $ r11 = $ r10 create <NEXT> $ r12 = $ r3 with argument $ r11 <NEXT> $ r13 = $ r12 with short name \ `` an\ `` <NEXT> return $ r13 <END>
<BEG> $ r0 = new org apache common cli2 builder default option builder <NEXT> specialinvoke $ r0 < init > <NEXT> $ r1 = $ r0 with long name \ `` threshold\ `` <NEXT> $ r2 = $ r1 with required 0 <NEXT> $ r3 = $ r2 with short name \ `` t\ `` <NEXT> $ r4 = new org apache common cli2 builder argument builder <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 with name \ `` threshold\ `` <NEXT> $ r6 = $ r5 with default \ `` 0\ `` <NEXT> $ r7 = $ r6 with minimum 1 <NEXT> $ r8 = $ r7 with maximum 1 <NEXT> $ r9 = $ r8 create <NEXT> $ r10 = $ r3 with argument $ r9 <NEXT> $ r11 = $ r10 with description \ `` the pdf threshold use for cluster determination default be 0\ `` <NEXT> return $ r11 <END>
<BEG> $ r0 = new org apache common cli2 builder default option builder <NEXT> specialinvoke $ r0 < init > <NEXT> $ r1 = $ r0 with long name \ `` outlier threshold\ `` <NEXT> $ r2 = $ r1 with required 0 <NEXT> $ r3 = new org apache common cli2 builder argument builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 with name \ `` outlier threshold\ `` <NEXT> $ r5 = $ r4 with minimum 1 <NEXT> $ r6 = $ r5 with maximum 1 <NEXT> $ r7 = $ r6 create <NEXT> $ r8 = $ r2 with argument $ r7 <NEXT> $ r9 = $ r8 with description \ `` outlier threshold value\ `` <NEXT> $ r10 = $ r9 with short name \ `` outlier threshold\ `` <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache mahout ep state r0 <NEXT> $ r3 = r5 params <NEXT> r6 = org apache mahout ep state r0 <NEXT> $ r2 = r6 params <NEXT> $ i0 = lengthof $ r2 <NEXT> r1 = java util array copy of $ r3 $ i0 <NEXT> i2 = 0 <NEXT> label r7 = org apache mahout ep state r0 <NEXT> $ r4 = r7 params <NEXT> $ i1 = lengthof $ r4 <NEXT> if i2 > = $ i1 goto label2 <NEXT> r8 = org apache mahout ep state r0 <NEXT> $ d0 = r8 get i2 <NEXT> r1 [ i2 ] = $ d0 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com google common collect list new array list <NEXT> i3 = 0 <NEXT> label r7 = org apache mahout fpm pfpgrowth fpgrowth2 f p tree r0 <NEXT> $ r2 = r7 attr count list <NEXT> $ i0 = $ r2 size <NEXT> if i3 > = $ i0 goto label3 <NEXT> r8 = org apache mahout fpm pfpgrowth fpgrowth2 f p tree r0 <NEXT> $ r5 = r8 attr count list <NEXT> $ l1 = $ r5 get i3 <NEXT> $ b2 = $ l1 cmp 0l <NEXT> if $ b2 < = 0 goto label2 <NEXT> $ r6 = java lang integer value of i3 <NEXT> r1 add $ r6 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label3 <NEXT> label r9 = org apache mahout fpm pfpgrowth fpgrowth2 f p tree r0 <NEXT> $ r3 = r9 attr comparator <NEXT> r10 = java util comparator $ r3 <NEXT> $ r4 = java util collection reverse order r10 <NEXT> java util collection sort r1 $ r4 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache mahout math hadoop stochasticsvd s s v d solver r0 <NEXT> r1 compute v = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache mahout math hadoop stochasticsvd s s v d solver r0 <NEXT> r1 min split size = i0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> $ l2 = org apache mahout math murmur hash hash64 a r0 i0 <NEXT> $ l3 = long i1 <NEXT> l7 = $ l2 % $ l3 <NEXT> $ b4 = l7 cmp 0l <NEXT> if $ b4 > = 0 goto label1 <NEXT> $ l6 = long i1 <NEXT> l7 = l7 + $ l6 <NEXT> label $ i5 = int l7 <NEXT> return $ i5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = new java lang unsupported operation exception <NEXT> specialinvoke $ r3 < init > \ `` add to vector be not support for interaction vector encoder\ `` <NEXT> throw $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new org apache mahout math dense vector <NEXT> r6 = org apache mahout math abstract matrix r0 <NEXT> $ i1 = r6 num row <NEXT> specialinvoke r5 < init > $ i1 <NEXT> r7 = org apache mahout math abstract matrix r0 <NEXT> i0 = r7 num row <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label2 <NEXT> r8 = org apache mahout math abstract matrix r0 <NEXT> $ r4 = r8 view row i2 <NEXT> $ d0 = r1 apply $ r4 <NEXT> r9 = org apache mahout math vector r5 <NEXT> r9 set i2 $ d0 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label2 <NEXT> label r10 = org apache mahout math vector r5 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache mahout math matrix vector view <NEXT> specialinvoke r2 < init > r0 0 0 1 1 <NEXT> r3 = org apache mahout math vector r2 <NEXT> return r3 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ d2 = java lang math ab d0 <NEXT> $ d3 = java lang math ab d1 <NEXT> $ b0 = $ d2 cmpl $ d3 <NEXT> if $ b0 < = 0 goto label1 <NEXT> d12 = d1 d0 <NEXT> $ d8 = java lang math ab d0 <NEXT> $ d9 = d12 * d12 <NEXT> $ d10 = 1 0 + $ d9 <NEXT> $ d11 = java lang math sqrt $ d10 <NEXT> d13 = $ d8 * $ d11 <NEXT> goto label3 <NEXT> label return d13 <NEXT> if $ b0 < = 0 goto label1 <NEXT> label $ b1 = d1 cmpl 0 0 <NEXT> if $ b1 == 0 goto label2 <NEXT> d14 = d0 d1 <NEXT> $ d4 = java lang math ab d1 <NEXT> $ d5 = d14 * d14 <NEXT> $ d6 = 1 0 + $ d5 <NEXT> $ d7 = java lang math sqrt $ d6 <NEXT> d13 = $ d4 * $ d7 <NEXT> if $ b1 == 0 goto label2 <NEXT> label d13 = 0 0 <END>
<BEG> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i1 = lengthof r1 <NEXT> if $ i1 < = i0 goto label1 <NEXT> r0 = r1 <NEXT> r1 = newarray boolean [ i0 ] <NEXT> java lang system arraycopy r0 0 r1 0 i0 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new java lang unsupported operation exception <NEXT> specialinvoke $ r2 < init > \ `` default operation\ `` <NEXT> throw $ r2 <END>
<BEG> d0 = @ parameter0 <NEXT> $ d1 = 1 0 d0 <NEXT> $ r0 = org apache mahout math function function mult $ d1 <NEXT> return $ r0 <END>
<BEG> d0 = @ parameter0 <NEXT> r1 = new org apache mahout math function function $ 61 <NEXT> specialinvoke r1 < init > d0 <NEXT> r2 = org apache mahout math function double procedure r1 <NEXT> return r2 <END>
<BEG> d0 = @ parameter0 <NEXT> r1 = new org apache mahout math function function $ 70 <NEXT> specialinvoke r1 < init > d0 <NEXT> r2 = org apache mahout math function double function r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r1 = org apache mahout math jet random uniform r0 <NEXT> $ d1 = r1 min <NEXT> $ b0 = d0 cmpg $ d1 <NEXT> if $ b0 > 0 goto label1 <NEXT> return 0 0 <NEXT> if $ b0 > 0 goto label1 <NEXT> label r2 = org apache mahout math jet random uniform r0 <NEXT> $ d2 = r2 max <NEXT> $ b1 = d0 cmpl $ d2 <NEXT> if $ b1 < 0 goto label2 <NEXT> return 1 0 <NEXT> if $ b1 < 0 goto label2 <NEXT> label r3 = org apache mahout math jet random uniform r0 <NEXT> $ d3 = r3 min <NEXT> $ d7 = d0 - $ d3 <NEXT> r4 = org apache mahout math jet random uniform r0 <NEXT> $ d5 = r4 max <NEXT> r5 = org apache mahout math jet random uniform r0 <NEXT> $ d4 = r5 min <NEXT> $ d6 = $ d5 - $ d4 <NEXT> $ d8 = $ d7 $ d6 <NEXT> return $ d8 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ b0 = d1 cmpg d0 <NEXT> if $ b0 > = 0 goto label1 <NEXT> r1 = org apache mahout math jet random uniform r0 <NEXT> r1 set state d1 d0 <NEXT> return <NEXT> if $ b0 > = 0 goto label1 <NEXT> label r2 = org apache mahout math jet random uniform r0 <NEXT> r2 min = d0 <NEXT> r3 = org apache mahout math jet random uniform r0 <NEXT> r3 max = d1 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ b0 = d1 cmpg 0 0 <NEXT> if $ b0 < = 0 goto label1 <NEXT> $ b1 = d0 cmpg 0 0 <NEXT> if $ b1 > 0 goto label2 <NEXT> label return 0 0 <NEXT> if $ b1 > 0 goto label2 <NEXT> label $ b2 = d1 cmpl 1 0 <NEXT> if $ b2 < = 0 goto label3 <NEXT> $ b5 = d1 cmpl d0 <NEXT> if $ b5 < = 0 goto label3 <NEXT> $ d10 = org apache mahout math jet stat gamma incomplete gamma complement d0 d1 <NEXT> $ d11 = 1 0 - $ d10 <NEXT> return $ d11 <NEXT> if $ b5 < = 0 goto label3 <NEXT> label $ d2 = java lang math log d1 <NEXT> $ d3 = d0 * $ d2 <NEXT> $ d4 = $ d3 - d1 <NEXT> $ d5 = org apache mahout math jet stat gamma log gamma d0 <NEXT> d12 = $ d4 - $ d5 <NEXT> $ b3 = d12 cmpg -709 782712893384 <NEXT> if $ b3 > = 0 goto label4 <NEXT> return 0 0 <NEXT> if $ b3 > = 0 goto label4 <NEXT> label d13 = java lang math exp d12 <NEXT> d14 = d0 <NEXT> d15 = 1 0 <NEXT> d16 = 1 0 <NEXT> label d14 = d14 + 1 0 <NEXT> $ d6 = d1 d14 <NEXT> d15 = d15 * $ d6 <NEXT> d16 = d16 + d15 <NEXT> $ d7 = d15 d16 <NEXT> $ b4 = $ d7 cmpl 1 1102230246251565e-16 <NEXT> if $ b4 > 0 goto label5 <NEXT> $ d8 = d16 * d13 <NEXT> $ d9 = $ d8 d0 <NEXT> return $ d9 <END>
<BEG> d0 = @ parameter0 <NEXT> d1 = @ parameter1 <NEXT> $ b0 = d1 cmpg 0 0 <NEXT> if $ b0 < = 0 goto label1 <NEXT> $ b1 = d0 cmpg 0 0 <NEXT> if $ b1 > 0 goto label2 <NEXT> label return 1 0 <NEXT> if $ b1 > 0 goto label2 <NEXT> label $ b2 = d1 cmpg 1 0 <NEXT> if $ b2 < 0 goto label3 <NEXT> $ b3 = d1 cmpg d0 <NEXT> if $ b3 > = 0 goto label4 <NEXT> label $ d6 = org apache mahout math jet stat gamma incomplete gamma d0 d1 <NEXT> $ d7 = 1 0 - $ d6 <NEXT> return $ d7 <NEXT> if $ b3 > = 0 goto label4 <NEXT> label $ d8 = java lang math log d1 <NEXT> $ d9 = d0 * $ d8 <NEXT> $ d10 = $ d9 - d1 <NEXT> $ d11 = org apache mahout math jet stat gamma log gamma d0 <NEXT> d21 = $ d10 - $ d11 <NEXT> $ b4 = d21 cmpg -709 782712893384 <NEXT> if $ b4 > = 0 goto label5 <NEXT> return 0 0 <NEXT> if $ b4 > = 0 goto label5 <NEXT> label d22 = java lang math exp d21 <NEXT> d23 = 1 0 - d0 <NEXT> $ d12 = d1 + d23 <NEXT> d24 = $ d12 + 1 0 <NEXT> d25 = 0 0 <NEXT> d26 = 1 0 <NEXT> d27 = d1 <NEXT> d28 = d1 + 1 0 <NEXT> d29 = d24 * d1 <NEXT> d30 = d28 d29 <NEXT> label d25 = d25 + 1 0 <NEXT> d23 = d23 + 1 0 <NEXT> d24 = d24 + 2 0 <NEXT> d2 = d23 * d25 <NEXT> $ d14 = d28 * d24 <NEXT> $ d13 = d26 * d2 <NEXT> d3 = $ d14 - $ d13 <NEXT> $ d16 = d29 * d24 <NEXT> $ d15 = d27 * d2 <NEXT> d4 = $ d16 - $ d15 <NEXT> $ b5 = d4 cmpl 0 0 <NEXT> if $ b5 == 0 goto label7 <NEXT> d5 = d3 d4 <NEXT> $ d19 = d30 - d5 <NEXT> $ d20 = $ d19 d5 <NEXT> d31 = java lang math ab $ d20 <NEXT> d30 = d5 <NEXT> goto label8 <NEXT> label d26 = d28 <NEXT> d28 = d3 <NEXT> d27 = d29 <NEXT> d29 = d4 <NEXT> $ d17 = java lang math ab d3 <NEXT> $ b6 = $ d17 cmpl 4 503599627370496e15 <NEXT> if $ b6 < = 0 goto label9 <NEXT> d26 = d26 * 2 220446049250313e-16 <NEXT> d28 = d3 * 2 220446049250313e-16 <NEXT> d27 = d27 * 2 220446049250313e-16 <NEXT> d29 = d4 * 2 220446049250313e-16 <NEXT> label $ b7 = d31 cmpl 1 1102230246251565e-16 <NEXT> if $ b7 > 0 goto label6 <NEXT> $ d18 = d30 * d22 <NEXT> return $ d18 <NEXT> if $ b5 == 0 goto label7 <NEXT> label d31 = 1 0 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> d0 = @ parameter2 <NEXT> $ b2 = d0 cmpg 0 0 <NEXT> if $ b2 < 0 goto label1 <NEXT> $ b3 = d0 cmpl 1 0 <NEXT> if $ b3 < = 0 goto label2 <NEXT> label $ r0 = new java lang illegal argument exception <NEXT> specialinvoke $ r0 < init > <NEXT> throw $ r0 <NEXT> if $ b3 < = 0 goto label2 <NEXT> label if i0 > = 0 goto label3 <NEXT> return 0 0 <NEXT> label if i0 > = 0 goto label3 <NEXT> label $ d2 = double i1 <NEXT> $ i4 = i0 + 1 <NEXT> $ d1 = double $ i4 <NEXT> $ d3 = org apache mahout math jet stat gamma incomplete beta $ d2 $ d1 d0 <NEXT> return $ d3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 size <NEXT> $ i1 = $ i0 - 1 <NEXT> r2 = org apache mahout math list abstract byte list r0 <NEXT> r2 add all of from to r1 0 $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> b1 = @ parameter1 <NEXT> r1 = org apache mahout math list abstract byte list r0 <NEXT> r1 before insert dummy i0 1 <NEXT> r2 = org apache mahout math list abstract byte list r0 <NEXT> r2 set i0 b1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> r1 = org apache mahout math list abstract byte list r0 <NEXT> $ i1 = r1 size <NEXT> $ i2 = $ i1 - 1 <NEXT> r2 = org apache mahout math list abstract byte list r0 <NEXT> $ i3 = r2 index of from to b0 0 $ i2 <NEXT> if $ i3 < 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i3 < 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r4 = org apache mahout math list abstract byte list r0 <NEXT> $ i3 = r4 size <NEXT> org apache mahout math list abstract byte list check range from to i0 i1 $ i3 <NEXT> $ i4 = i1 - i0 <NEXT> i2 = $ i4 + 1 <NEXT> r3 = new org apache mahout math list byte array list <NEXT> specialinvoke r3 < init > i2 <NEXT> r5 = org apache mahout math list abstract byte list r0 <NEXT> r3 add all of from to r5 i0 i1 <NEXT> r6 = org apache mahout math list abstract byte list r3 <NEXT> return r6 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> i2 = @ parameter2 <NEXT> $ i3 = i0 - 1 <NEXT> if i1 ! = $ i3 goto label1 <NEXT> return <NEXT> if i1 ! = $ i3 goto label1 <NEXT> label if i0 < 0 goto label2 <NEXT> if i0 > i1 goto label2 <NEXT> if i1 < i2 goto label3 <NEXT> label $ r0 = new java lang index out of bound exception <NEXT> $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > <NEXT> $ r2 = $ r1 append \ `` from \ `` <NEXT> $ r3 = $ r2 append i0 <NEXT> $ r4 = $ r3 append \ <NEXT> $ r5 = $ r4 append i1 <NEXT> $ r6 = $ r5 append \ <NEXT> $ r7 = $ r6 append i2 <NEXT> $ r8 = $ r7 to string <NEXT> specialinvoke $ r0 < init > $ r8 <NEXT> throw $ r0 <NEXT> if i1 < i2 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i1 = r1 size <NEXT> r2 = org apache mahout math list abstract object list r0 <NEXT> r2 before insert dummy i0 $ i1 <NEXT> r3 = org apache mahout math list abstract object list r0 <NEXT> r3 replace from with i0 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache mahout math list byte array list r0 <NEXT> $ r1 = r2 element <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = new org apache mahout math list byte array list <NEXT> r4 = org apache mahout math map abstract byte byte map r0 <NEXT> $ i0 = r4 size <NEXT> specialinvoke r3 < init > $ i0 <NEXT> r5 = org apache mahout math map abstract byte byte map r0 <NEXT> r5 value r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> b0 = @ parameter0 <NEXT> b4 = @ parameter1 <NEXT> b1 = @ parameter2 <NEXT> r1 = org apache mahout math map abstract byte byte map r0 <NEXT> z0 = r1 contain key b0 <NEXT> if z0 == 0 goto label1 <NEXT> r2 = org apache mahout math map abstract byte byte map r0 <NEXT> $ b2 = r2 get b0 <NEXT> $ i3 = $ b2 + b1 <NEXT> b4 = byte $ i3 <NEXT> r3 = org apache mahout math map abstract byte byte map r0 <NEXT> r3 put b0 b4 <NEXT> goto label2 <NEXT> label return b4 <NEXT> if z0 == 0 goto label1 <NEXT> label r4 = org apache mahout math map abstract byte byte map r0 <NEXT> r4 put b0 b4 <END>
<BEG> i0 = @ parameter0 <NEXT> r3 = new org apache mahout math matrix $ 3 <NEXT> specialinvoke r3 < init > <NEXT> $ r1 = org apache mahout math matrix uniform symmetric generator i0 <NEXT> r4 = org apache mahout math function double function r3 <NEXT> $ r2 = org apache mahout math function function chain r4 $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = new org apache mahout math random access sparse vector $ non zero iterator <NEXT> r3 = org apache mahout math random access sparse vector r0 <NEXT> specialinvoke r2 < init > r3 null <NEXT> r4 = java util iterator r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> d0 = @ parameter1 <NEXT> d1 = @ parameter2 <NEXT> $ i3 = i0 + 1 <NEXT> $ i1 = 2 * i0 <NEXT> $ d3 = double $ i1 <NEXT> $ d2 = d0 + d1 <NEXT> $ d4 = $ d3 $ d2 <NEXT> $ i2 = int $ d4 <NEXT> $ i4 = java lang math max $ i3 $ i2 <NEXT> r1 = org apache mahout math set abstract set r0 <NEXT> $ i5 = r1 next prime $ i4 <NEXT> return $ i5 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache mahout math solver eigen decomposition r0 <NEXT> $ r1 = r5 v <NEXT> $ r2 = $ r1 like <NEXT> r6 = org apache mahout math solver eigen decomposition r0 <NEXT> $ r3 = r6 v <NEXT> $ r4 = $ r2 assign $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache mahout math solver eigen decomposition r0 <NEXT> $ r1 = r2 d <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r1 = @ parameter3 <NEXT> com google common base precondition check not null r0 <NEXT> $ i2 = lengthof r0 <NEXT> org apache mahout math sort check bound $ i2 i0 i1 <NEXT> org apache mahout math sort quick sort0 i0 i1 r0 r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> i2 = -1 <NEXT> d1 = #infinity <NEXT> i3 = 0 <NEXT> label $ r4 = org apache mahout math vector binary aggregate operation <NEXT> $ i0 = lengthof $ r4 <NEXT> if i3 > = $ i0 goto label3 <NEXT> $ r7 = org apache mahout math vector binary aggregate operation <NEXT> $ r8 = $ r7 [ i3 ] <NEXT> $ z0 = $ r8 be valid r0 r1 r2 r3 <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r9 = org apache mahout math vector binary aggregate operation <NEXT> $ r10 = $ r9 [ i3 ] <NEXT> d0 = $ r10 estimate cost r0 r1 r2 r3 <NEXT> $ b1 = d0 cmpg d1 <NEXT> if $ b1 > = 0 goto label2 <NEXT> d1 = d0 <NEXT> i2 = i3 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i0 goto label3 <NEXT> label $ r5 = org apache mahout math vector binary aggregate operation <NEXT> $ r6 = $ r5 [ i2 ] <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache mahout utils vector arff a r f f vector iterable r0 <NEXT> $ r1 = r2 model <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com sun mail imap i m a p message r0 <NEXT> r3 check expunge <NEXT> r4 = com sun mail imap i m a p message r0 <NEXT> specialinvoke r4 load header <NEXT> $ r2 = specialinvoke r0 get match header r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = com sun mail imap i m a p store r0 <NEXT> r2 = specialinvoke r7 get namespaces <NEXT> if r2 == null goto label1 <NEXT> $ r4 = r2 other user <NEXT> if $ r4 ! = null goto label2 <NEXT> label $ r3 = specialinvoke r0 get user namespaces r1 <NEXT> return $ r3 <NEXT> if $ r4 ! = null goto label2 <NEXT> label $ r5 = r2 other user <NEXT> r8 = com sun mail imap i m a p store r0 <NEXT> $ r6 = specialinvoke r8 namespace to folders $ r5 r1 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r20 = com sun mail imap i m a p store r0 <NEXT> specialinvoke r20 check connect <NEXT> r12 = null <NEXT> label r21 = com sun mail imap i m a p store r0 <NEXT> r12 = specialinvoke r21 get store protocol <NEXT> r13 = r12 get quota root r1 <NEXT> label goto label10 <NEXT> label r29 = com sun mail imap i m a p store r0 <NEXT> specialinvoke r29 release store protocol r12 <NEXT> goto label03 <NEXT> label goto label09 <NEXT> label return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = com sun mail imap protocol i m a p protocol r0 <NEXT> $ z0 = r1 rev1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ z0 = com sun mail util log log manager property $ assertion disable <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r3 = new java lang assertion error <NEXT> r4 = com sun mail util log log manager property r0 <NEXT> $ r2 = r4 prefix <NEXT> $ i1 = $ r2 hash code <NEXT> specialinvoke r3 < init > $ i1 <NEXT> throw r3 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ i0 = specialinvoke r0 hash code <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r16 = new org apache lucene search boolean query $ builder <NEXT> specialinvoke r16 < init > <NEXT> r2 = r0 get term array <NEXT> i0 = lengthof r2 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label4 <NEXT> r3 = r2 [ i2 ] <NEXT> r17 = new org apache lucene search boolean query $ builder <NEXT> specialinvoke r17 < init > <NEXT> i1 = lengthof r3 <NEXT> i3 = 0 <NEXT> label if i3 > = i1 goto label3 <NEXT> r6 = r3 [ i3 ] <NEXT> r18 = new org apache lucene search term query <NEXT> specialinvoke r18 < init > r6 <NEXT> $ r14 = org apache lucene search boolean clause $ occur should <NEXT> r19 = org apache lucene search query r18 <NEXT> r17 add r19 $ r14 <NEXT> i3 = i3 + 1 <NEXT> goto label2 <NEXT> label if i3 > = i1 goto label3 <NEXT> label $ r10 = r17 build <NEXT> $ r11 = org apache lucene search boolean clause $ occur filter <NEXT> r20 = org apache lucene search query $ r10 <NEXT> r16 add r20 $ r11 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> label if i2 > = i0 goto label4 <NEXT> label $ r8 = r16 build <NEXT> r21 = org apache lucene search query $ r8 <NEXT> return r21 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model activation o s r0 <NEXT> $ r1 = r2 family <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model activation o s r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model build base r0 <NEXT> r2 filter = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model build base r0 <NEXT> r2 test resource = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model ci management r0 <NEXT> r2 url = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model contributor r0 <NEXT> $ r1 = r2 email <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model dependency r0 <NEXT> r2 type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model distribution management r0 <NEXT> $ r1 = r2 relocation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model distribution management r0 <NEXT> $ r1 = r2 snapshot repository <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model issue management r0 <NEXT> r2 url = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model model r0 <NEXT> $ r1 = r2 group id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model model r0 <NEXT> $ r1 = r2 model version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model model r0 <NEXT> $ r1 = r2 organization <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model model r0 <NEXT> $ r1 = r2 packaging <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model model r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model model r0 <NEXT> r2 group id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model model r0 <NEXT> r2 license = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model model base r0 <NEXT> $ r1 = r2 distribution management <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model plugin r0 <NEXT> r2 goal = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model report plugin r0 <NEXT> $ r1 = r2 configuration <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven model report plugin r0 <NEXT> r2 report set = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org apache maven model repository policy r0 <NEXT> $ z0 = r1 enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model resource r0 <NEXT> $ r1 = r2 target path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache maven model resource r0 <NEXT> $ z0 = r1 filter <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven model site r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven profile activation r0 <NEXT> r2 property = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven profile activation file r0 <NEXT> $ r1 = r2 miss <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven profile activation o s r0 <NEXT> $ r1 = r2 family <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven profile profile r0 <NEXT> r2 plugin repository = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven profile profile r0 <NEXT> r2 repository = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven profile repository base r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven profile repository base r0 <NEXT> r2 layout = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven artifact repository metadata metadata r0 <NEXT> r2 group id = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven artifact repository metadata plugin r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven setting mirror r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting mirror r0 <NEXT> r2 mirror of = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven setting proxy r0 <NEXT> $ r1 = r2 protocol <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting proxy r0 <NEXT> r2 username = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven setting server r0 <NEXT> $ r1 = r2 configuration <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache maven setting server r0 <NEXT> $ r1 = r2 password <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache maven setting server r0 <NEXT> r2 directory permission = r1 <NEXT> return <END>
<BEG> $ r0 = com codahale metric clock default <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com codahale metric ewma r0 <NEXT> $ d0 = r2 rate <NEXT> $ l0 = r1 to nanos 1l <NEXT> $ d1 = double $ l0 <NEXT> $ d2 = $ d0 * $ d1 <NEXT> return $ d2 <END>
<BEG> r0 = @ this <NEXT> r3 = com codahale metric jmx reporter r0 <NEXT> $ r2 = r3 registry <NEXT> r4 = com codahale metric jmx reporter r0 <NEXT> $ r1 = r4 listener <NEXT> r5 = com codahale metric metric registry listener $ r1 <NEXT> $ r2 add listener r5 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 get name <NEXT> $ r3 = com codahale metric metric registry name $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = com codahale metric snapshot r0 <NEXT> $ d0 = r1 get value 0 95 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r2 = io micrometer core instrument distribution distribution statistic config r0 <NEXT> $ r1 = r2 percentile <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io micrometer core instrument meter registry r0 <NEXT> $ r1 = r2 close <NEXT> $ z0 = $ r1 get <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ i1 = r0 length <NEXT> if $ i1 < = i0 goto label1 <NEXT> $ r1 = r0 substring 0 i0 <NEXT> return $ r1 <NEXT> if $ i1 < = i0 goto label1 <NEXT> label return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io micrometer core instrument abstract timer builder r0 <NEXT> $ r2 = r3 service level objective r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = java time zone date time from r1 <NEXT> $ r4 = $ r3 with nano 0 <NEXT> $ r5 = $ r4 plus second 1l <NEXT> r33 = $ r5 with nano 0 <NEXT> label r35 = io micronaut schedule cron cron expression r0 <NEXT> $ r34 = r35 second field <NEXT> $ i3 = r33 get second <NEXT> $ z5 = $ r34 match $ i3 <NEXT> if $ z5 == 0 goto label02 <NEXT> goto label03 <NEXT> label r36 = io micronaut schedule cron cron expression r0 <NEXT> $ r7 = r36 minute field <NEXT> $ i0 = r33 get minute <NEXT> $ z0 = $ r7 match $ i0 <NEXT> if $ z0 == 0 goto label04 <NEXT> goto label05 <NEXT> label r37 = io micronaut schedule cron cron expression r0 <NEXT> $ r10 = r37 hour field <NEXT> $ i1 = r33 get hour <NEXT> $ z1 = $ r10 match $ i1 <NEXT> if $ z1 == 0 goto label06 <NEXT> goto label07 <NEXT> label r38 = io micronaut schedule cron cron expression r0 <NEXT> $ r14 = r38 day of month field <NEXT> $ r15 = r33 to local date <NEXT> $ z2 = $ r14 match $ r15 <NEXT> if $ z2 == 0 goto label08 <NEXT> goto label09 <NEXT> label r39 = io micronaut schedule cron cron expression r0 <NEXT> $ r20 = r39 month field <NEXT> $ r21 = r33 get month <NEXT> $ i2 = $ r21 get value <NEXT> $ z3 = $ r20 match $ i2 <NEXT> if $ z3 == 0 goto label10 <NEXT> goto label11 <NEXT> label r40 = io micronaut schedule cron cron expression r0 <NEXT> $ r27 = r40 day of week field <NEXT> $ r28 = r33 to local date <NEXT> $ z4 = $ r27 match $ r28 <NEXT> if $ z4 == 0 goto label12 <NEXT> goto label13 <NEXT> label return r33 <NEXT> if $ z4 == 0 goto label12 <NEXT> label $ r29 = r33 plus day 1l <NEXT> $ r30 = $ r29 with hour 0 <NEXT> $ r31 = $ r30 with minute 0 <NEXT> $ r32 = $ r31 with second 0 <NEXT> r33 = $ r32 with nano 0 <NEXT> io micronaut schedule cron cron expression check if date time barrier be reach r33 r2 <NEXT> goto label01 <NEXT> if $ z3 == 0 goto label10 <NEXT> label $ r22 = r33 plus month 1l <NEXT> $ r23 = $ r22 with day of month 1 <NEXT> $ r24 = $ r23 with hour 0 <NEXT> $ r25 = $ r24 with minute 0 <NEXT> $ r26 = $ r25 with second 0 <NEXT> r33 = $ r26 with nano 0 <NEXT> if $ z2 == 0 goto label08 <NEXT> label $ r16 = r33 plus day 1l <NEXT> $ r17 = $ r16 with hour 0 <NEXT> $ r18 = $ r17 with minute 0 <NEXT> $ r19 = $ r18 with second 0 <NEXT> r33 = $ r19 with nano 0 <NEXT> if $ z1 == 0 goto label06 <NEXT> label $ r11 = r33 plus hour 1l <NEXT> $ r12 = $ r11 with minute 0 <NEXT> $ r13 = $ r12 with second 0 <NEXT> r33 = $ r13 with nano 0 <NEXT> if $ z0 == 0 goto label04 <NEXT> label $ r8 = r33 plus minute 1l <NEXT> $ r9 = $ r8 with second 0 <NEXT> r33 = $ r9 with nano 0 <NEXT> if $ z5 == 0 goto label02 <NEXT> label $ r6 = r33 plus second 1l <NEXT> r33 = $ r6 with nano 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = io micronaut schedule io watch default watch thread r0 <NEXT> $ r6 = r8 watch service <NEXT> $ r2 = newarray java nio file watch event $ kind [ 3 ] <NEXT> $ r3 = java nio file standard watch event kind entry_create <NEXT> $ r2 [ 0 ] = $ r3 <NEXT> $ r4 = java nio file standard watch event kinds entry_delete <NEXT> $ r2 [ 1 ] = $ r4 <NEXT> $ r5 = java nio file standard watch event kinds entry_modify <NEXT> $ r2 [ 2 ] = $ r5 <NEXT> $ r7 = r1 register $ r6 $ r2 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r2 = io micronaut schedule io watch file watch configuration r0 <NEXT> $ r1 = r2 check interval <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io micronaut core annotation annotation value r0 <NEXT> $ r1 = r2 string value \ `` value\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> io micronaut core util argument utils require non null \ `` annotation\ <NEXT> $ r3 = new io micronaut core annotation annotation value builder <NEXT> specialinvoke $ r3 < init > r0 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = io micronaut core annotation annotation value builder r0 <NEXT> $ r2 = r3 member \ `` value\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = io micronaut core annotation annotation value builder r0 <NEXT> $ r1 = r2 member \ `` value\ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r5 = io micronaut core annotation annotation value builder r0 <NEXT> $ r2 = r5 value <NEXT> $ r3 = java lang boolean value of z0 <NEXT> $ r2 put r1 $ r3 <NEXT> r6 = io micronaut core annotation annotation value builder r0 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = io micronaut core graal automatic feature utils find class r0 r1 <NEXT> $ r3 = automatic feature utils $ register for reflective instantiation__7 bootstrap $ <NEXT> $ r2 if present $ r3 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = io micronaut core graal automatic feature utils find class r0 r1 <NEXT> $ r3 = automatic feature utils $ register all for runtime reflection__11 bootstrap $ <NEXT> $ r2 if present $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> io micronaut core util argument utils require non null \ `` path\ <NEXT> r8 = io micronaut core io resource resolver r0 <NEXT> r2 = r8 get support loader r1 <NEXT> $ z0 = r2 be present <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r5 = r2 get <NEXT> $ r6 = io micronaut core io resource loader $ r5 <NEXT> $ r7 = $ r6 get resource r1 <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r4 = java util optional empty <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = io micronaut core order order util comparator <NEXT> $ r2 = r0 sort $ r1 <NEXT> return $ r2 <END>
<BEG> r1 = @ parameter0 <NEXT> r2 = r1 replace 47 46 <NEXT> $ z0 = r2 end with \ `` class\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> $ i0 = r2 length <NEXT> $ r0 = \ `` class\ `` <NEXT> $ i1 = $ r0 length <NEXT> $ i2 = $ i0 - $ i1 <NEXT> r2 = r2 substring 0 $ i2 <NEXT> label return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new io micronaut core util argument utils $ argument check <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> i0 = lengthof r1 <NEXT> if i0 ! = 0 goto label1 <NEXT> return r0 <NEXT> if i0 ! = 0 goto label1 <NEXT> label i1 = lengthof r0 <NEXT> if i1 ! = 0 goto label2 <NEXT> return r1 <NEXT> if i1 ! = 0 goto label2 <NEXT> label $ i2 = i1 + i0 <NEXT> r2 = newarray byte [ $ i2 ] <NEXT> java lang system arraycopy r0 0 r2 0 i1 <NEXT> java lang system arraycopy r1 0 r2 i1 i0 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = io micronaut core util array utils to string \ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get previous <NEXT> if $ r2 ! = null goto label1 <NEXT> $ r3 = r1 get next <NEXT> if $ r3 ! = null goto label1 <NEXT> r5 = io micronaut core util clhm link deque r0 <NEXT> $ r4 = r5 first <NEXT> if r1 ! = $ r4 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if r1 ! = $ r4 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 instanceof java util list <NEXT> if $ z0 == 0 goto label2 <NEXT> r7 = java util list r0 <NEXT> i1 = r7 size <NEXT> if i1 < = 0 goto label1 <NEXT> $ i0 = i1 - 1 <NEXT> $ r6 = r7 get $ i0 <NEXT> return $ r6 <NEXT> if i1 < = 0 goto label1 <NEXT> label return null <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = r0 instanceof java util deque <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r4 = java util deque r0 <NEXT> r8 = $ r4 descend iterator <NEXT> $ z5 = r8 have next <NEXT> if $ z5 == 0 goto label3 <NEXT> $ r5 = r8 next <NEXT> return $ r5 <NEXT> if $ z5 == 0 goto label3 <NEXT> label return null <NEXT> if $ z1 == 0 goto label4 <NEXT> label $ z2 = r0 instanceof java util navigable set <NEXT> if $ z2 == 0 goto label6 <NEXT> $ r2 = java util navigable set r0 <NEXT> r9 = $ r2 descend iterator <NEXT> $ z4 = r9 have next <NEXT> if $ z4 == 0 goto label5 <NEXT> $ r3 = r9 next <NEXT> return $ r3 <NEXT> if $ z4 == 0 goto label5 <NEXT> label return null <NEXT> if $ z2 == 0 goto label6 <NEXT> label r10 = null <NEXT> r11 = r0 iterator <NEXT> label $ z3 = r11 have next <NEXT> if $ z3 == 0 goto label8 <NEXT> r1 = r11 next <NEXT> r10 = r1 <NEXT> goto label7 <NEXT> if $ z3 == 0 goto label8 <NEXT> label return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io micronaut http codec codec configuration r0 <NEXT> r2 additional type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = io micronaut http simple simple http response r0 <NEXT> $ r1 = r2 cooky <NEXT> r3 = io micronaut http cookie cookies $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io micronaut http client http client configuration r0 <NEXT> r2 proxy address = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = new io netty channel nio nio event loop group <NEXT> specialinvoke r4 < init > i0 <NEXT> $ r3 = io micronaut http netty channel nio event loop group factory with io ratio r4 r1 <NEXT> r5 = io netty channel event loop group $ r3 <NEXT> return r5 <END>
<BEG> r0 = @ this <NEXT> r2 = io micronaut http netty netty mutable http response r0 <NEXT> $ r1 = r2 http response status <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = io micronaut core async publisher publisher convert publisher r2 class \ `` lio reactivex flowable \ `` <NEXT> r3 = io reactivex flowable $ r4 <NEXT> $ r5 = r1 channel <NEXT> $ r6 = $ r5 event loop <NEXT> r9 = java util concurrent executor $ r6 <NEXT> $ r7 = io reactivex scheduler scheduler from r9 <NEXT> $ r8 = r3 subscribe on $ r7 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r2 = io micronaut http server cors cors origin configuration r0 <NEXT> r2 allow header = r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io micronaut http server http server configuration r0 <NEXT> r2 cors = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io micronaut http server type file stream file r0 <NEXT> r2 attachment name = r1 <NEXT> r3 = io micronaut http server type file stream file r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io micronaut http server netty configuration netty http server configuration r0 <NEXT> r2 access logger = r1 <NEXT> return <END>
<BEG> $ r0 = io micronaut http server netty handler accesslog element cooky element response_cookies_element <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = r1 pipeline <NEXT> $ r4 = $ r3 get class \ `` lio netty handler ssl ssl handler \ `` <NEXT> if $ r4 == null goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r15 = \ `` wss \ `` <NEXT> goto label4 <NEXT> label $ r6 = r16 append $ r15 <NEXT> $ r7 = r2 get header <NEXT> $ r8 = io netty handler codec http http header name host <NEXT> r17 = java lang char sequence $ r8 <NEXT> $ r9 = $ r7 get r17 <NEXT> $ r10 = java lang string $ r9 <NEXT> $ r11 = $ r6 append $ r10 <NEXT> $ r12 = r2 get uri <NEXT> $ r13 = $ r11 append $ r12 <NEXT> $ r14 = $ r13 to string <NEXT> return $ r14 <NEXT> if $ z1 == 0 goto label3 <NEXT> label $ r15 = \ `` ws \ `` <NEXT> if $ r4 == null goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = io micronaut context default bean context r0 <NEXT> $ r4 = r8 get bean registration r1 r2 r3 <NEXT> $ r5 = $ r4 stream <NEXT> $ r6 = default bean context $ get bean__13 bootstrap $ <NEXT> $ r7 = $ r5 map $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> io micronaut core util argument utils require non null \ `` bean type\ <NEXT> r17 = io micronaut context default bean context r0 <NEXT> $ r5 = r17 this interfaces <NEXT> $ z0 = $ r5 contain r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r8 = java util optional of r0 <NEXT> return $ r8 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r18 = io micronaut context default bean context r0 <NEXT> r15 = specialinvoke r18 get bean internal r1 r2 r3 1 0 <NEXT> if r15 ! = null goto label3 <NEXT> $ r7 = java util optional empty <NEXT> label return $ r7 <NEXT> if r15 ! = null goto label3 <NEXT> label $ r6 = java util optional of r15 <NEXT> label return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new io micronaut context provider utils $ memoizing provider <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = javax inject provider r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = io micronaut core util string utils be not empty r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = io micronaut core util string utils be not empty r2 <NEXT> if $ z1 == 0 goto label1 <NEXT> r8 = io micronaut context static message source r0 <NEXT> $ r4 = r8 message map <NEXT> r7 = new io micronaut context abstract message source $ message key <NEXT> $ r5 = java util locale get default <NEXT> specialinvoke r7 < init > r0 $ r5 r1 <NEXT> $ r4 put r7 r2 <NEXT> label r9 = io micronaut context static message source r0 <NEXT> return r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = io micronaut inject annotation abstract annotation metadata builder annotation_mappers <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java util list $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r9 = @ parameter1 <NEXT> $ z0 = r9 instanceof io micronaut inject annotation annotation metadata hierarchy <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r8 = io micronaut inject annotation annotation metadata hierarchy r9 <NEXT> r9 = $ r8 get declare metadata <NEXT> label $ z1 = r0 instanceof io micronaut inject annotation default annotation metadata <NEXT> if $ z1 == 0 goto label4 <NEXT> $ z2 = r9 instanceof io micronaut inject annotation default annotation metadata <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r2 = io micronaut inject annotation default annotation metadata r0 <NEXT> r1 = $ r2 annotation default value <NEXT> if r1 == null goto label3 <NEXT> $ r7 = io micronaut inject annotation default annotation metadata r9 <NEXT> r10 = $ r7 annotation default value <NEXT> if r10 == null goto label2 <NEXT> r1 put all r10 <NEXT> label goto label4 <NEXT> label return <NEXT> if r1 == null goto label3 <NEXT> label $ r3 = io micronaut inject annotation default annotation metadata r9 <NEXT> r11 = $ r3 annotation default value <NEXT> if r11 == null goto label4 <NEXT> $ r4 = io micronaut inject annotation default annotation metadata r0 <NEXT> $ r4 get class <NEXT> $ r6 = default annotation metadata $ add default annotation values__6 bootstrap $ $ r4 <NEXT> r11 for each $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io micronaut web router version resolution header version resolver configuration r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io micronaut discovery registration registration configuration r0 <NEXT> r1 prefer ip address = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> label $ r3 = class \ `` ljava lang char sequence \ `` <NEXT> $ r4 = r1 get type <NEXT> $ z0 = $ r3 be assignable from $ r4 <NEXT> if $ z0 == 0 goto label3 <NEXT> r25 = new java lang string <NEXT> r28 = io micronaut jackson codec jackson medium type codec r0 <NEXT> $ r11 = r28 application configuration <NEXT> $ r12 = $ r11 get default charset <NEXT> specialinvoke r25 < init > r2 $ r12 <NEXT> label return r25 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ z1 = r1 have type variable <NEXT> if $ z1 == 0 goto label5 <NEXT> r29 = io micronaut jackson codec jackson medium type codec r0 <NEXT> r23 = specialinvoke r29 construct java type r1 <NEXT> r30 = io micronaut jackson codec jackson medium type codec r0 <NEXT> $ r8 = r30 get object mapper <NEXT> $ r9 = $ r8 read value r2 r23 <NEXT> label return $ r9 <NEXT> if $ z1 == 0 goto label5 <NEXT> label r31 = io micronaut jackson codec jackson medium type codec r0 <NEXT> $ r5 = r31 get object mapper <NEXT> $ r6 = r1 get type <NEXT> $ r7 = $ r5 read value r2 $ r6 <NEXT> label return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = io micronaut jackson jackson configuration r0 <NEXT> $ z0 = r1 always serialize error a list <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = io micronaut jackson jackson configuration r0 <NEXT> $ z0 = r1 trim string <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io micronaut jackson jackson configuration r0 <NEXT> r1 always serialize error a list = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = io micronaut jackson jackson configuration r0 <NEXT> r1 trim string = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label r7 = io micronaut retry intercept simple retry r0 <NEXT> $ r2 = r7 predicate <NEXT> $ z0 = $ r2 test r1 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r8 = io micronaut retry intercept simple retry r0 <NEXT> $ r3 = r8 attempt number <NEXT> $ i0 = $ r3 increment and get <NEXT> r9 = io micronaut retry intercept simple retry r0 <NEXT> $ i1 = r9 max attempt <NEXT> $ i2 = $ i1 + 1 <NEXT> if $ i0 > = $ i2 goto label4 <NEXT> r10 = io micronaut retry intercept simple retry r0 <NEXT> $ r4 = r10 max delay <NEXT> if $ r4 == null goto label3 <NEXT> r11 = io micronaut retry intercept simple retry r0 <NEXT> $ r5 = r11 overall delay <NEXT> $ l3 = $ r5 get <NEXT> r12 = io micronaut retry intercept simple retry r0 <NEXT> $ r6 = r12 max delay <NEXT> $ l4 = $ r6 to millis <NEXT> $ b5 = $ l3 cmp $ l4 <NEXT> if $ b5 > = 0 goto label4 <NEXT> label $ z1 = 1 <NEXT> goto label5 <NEXT> label return $ z1 <NEXT> if $ b5 > = 0 goto label4 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = io micronaut test extension abstract micronaut extension r0 <NEXT> $ r3 = r13 refresh scope <NEXT> if $ r3 == null goto label1 <NEXT> r14 = io micronaut test extension abstract micronaut extension r0 <NEXT> $ r4 = r14 old value <NEXT> $ z0 = $ r4 be empty <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r15 = io micronaut test extension abstract micronaut extension r0 <NEXT> $ r6 = r15 test property <NEXT> r16 = io micronaut test extension abstract micronaut extension r0 <NEXT> $ r5 = r16 old value <NEXT> $ r6 put all $ r5 <NEXT> r17 = io micronaut test extension abstract micronaut extension r0 <NEXT> $ r7 = r17 application context <NEXT> $ r8 = $ r7 get environment <NEXT> r2 = $ r8 refresh and diff <NEXT> r18 = io micronaut test extension abstract micronaut extension r0 <NEXT> $ r10 = r18 refresh scope <NEXT> r12 = new io micronaut runtime context scope refresh refresh event <NEXT> specialinvoke r12 < init > r2 <NEXT> $ r10 on refresh event r12 <NEXT> label r19 = io micronaut test extension abstract micronaut extension r0 <NEXT> $ r11 = r19 old value <NEXT> $ r11 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = io micronaut validation validator extractor default value extractor r0 <NEXT> $ r1 = r2 optional value extractor <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 length <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = $ r2 append r1 <NEXT> $ r4 = $ r3 append \ `` \ `` <NEXT> $ r5 = r0 to string <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 append \ `` \ `` <NEXT> $ r8 = $ r7 to string <NEXT> goto label2 <NEXT> label return $ r8 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ r8 = r0 to string <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org mockito internal stubbing defaultanswers forward invocation <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org mockito stub answer r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new java util array list <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = r0 get class <NEXT> $ r4 = $ r3 get declare field <NEXT> $ r5 = org mockito internal util reflection field instance field in r0 $ r4 <NEXT> $ r2 add all $ r5 <NEXT> $ r6 = new org mockito internal util reflection field $ instance field <NEXT> specialinvoke $ r6 < init > r0 $ r2 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mockito internal invocation finder all invocation finder find stubbings r1 <NEXT> r6 = new org mockito internal junit unused stubbings finder $ 1 <NEXT> r8 = org mockito internal junit unused stubbings finder r0 <NEXT> specialinvoke r6 < init > r8 <NEXT> r9 = org mockito internal util collection list util $ filter r6 <NEXT> r3 = org mockito internal util collection list util filter r2 r9 <NEXT> r7 = new org mockito internal junit unused stubbings <NEXT> specialinvoke r7 < init > r3 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org apache ibatis datasource pool pool data source r0 <NEXT> r1 pool maximum checkout time = i0 <NEXT> r2 = org apache ibatis datasource pool pool data source r0 <NEXT> r2 force close all <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache ibatis io class loader wrapper r0 <NEXT> $ r2 = r4 get class loader null <NEXT> r5 = org apache ibatis io class loader wrapper r0 <NEXT> $ r3 = r5 get resource a stream r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache ibatis io resource charset <NEXT> if $ r1 ! = null goto label1 <NEXT> $ r5 = new java io input stream reader <NEXT> $ r6 = org apache ibatis io resource get url a stream r0 <NEXT> specialinvoke $ r5 < init > $ r6 <NEXT> r7 = $ r5 <NEXT> goto label2 <NEXT> label return r7 <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ r2 = new java io input stream reader <NEXT> $ r3 = org apache ibatis io resource get url a stream r0 <NEXT> $ r4 = org apache ibatis io resource charset <NEXT> specialinvoke $ r2 < init > $ r3 $ r4 <NEXT> r7 = $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache ibatis session configuration r0 <NEXT> r2 default fetch size = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r22 = org apache ibatis session configuration r0 <NEXT> specialinvoke r22 parse pending result map <NEXT> r23 = org apache ibatis session configuration r0 <NEXT> $ r4 = r23 incomplete cache ref <NEXT> $ z0 = $ r4 be empty <NEXT> if $ z0 ! = 0 goto label05 <NEXT> r24 = org apache ibatis session configuration r0 <NEXT> $ r13 = r24 incomplete cache ref <NEXT> entermonitor $ r13 <NEXT> label r25 = org apache ibatis session configuration r0 <NEXT> $ r14 = r25 incomplete cache ref <NEXT> $ r15 = configuration $ lambda_build all statements_1__4 bootstrap $ <NEXT> $ r14 remove if $ r15 <NEXT> exitmonitor $ r13 <NEXT> label goto label05 <NEXT> label r26 = org apache ibatis session configuration r0 <NEXT> $ r5 = r26 incomplete statement <NEXT> $ z1 = $ r5 be empty <NEXT> if $ z1 ! = 0 goto label10 <NEXT> r27 = org apache ibatis session configuration r0 <NEXT> $ r10 = r27 incomplete statement <NEXT> entermonitor $ r10 <NEXT> label r28 = org apache ibatis session configuration r0 <NEXT> $ r11 = r28 incomplete statement <NEXT> $ r12 = configuration $ lambda_build all statements_2__3 bootstrap $ <NEXT> $ r11 remove if $ r12 <NEXT> exitmonitor $ r10 <NEXT> label goto label10 <NEXT> label r29 = org apache ibatis session configuration r0 <NEXT> $ r6 = r29 incomplete method <NEXT> $ z2 = $ r6 be empty <NEXT> if $ z2 ! = 0 goto label15 <NEXT> r30 = org apache ibatis session configuration r0 <NEXT> $ r7 = r30 incomplete method <NEXT> entermonitor $ r7 <NEXT> label r31 = org apache ibatis session configuration r0 <NEXT> $ r8 = r31 incomplete method <NEXT> $ r9 = configuration $ lambda_build all statements_3__2 bootstrap $ <NEXT> $ r8 remove if $ r9 <NEXT> exitmonitor $ r7 <NEXT> label goto label15 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache ibatis type base type handler r0 <NEXT> r2 configuration = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = java lang integer value of i0 <NEXT> r2 = org mybatis spring batch builder my batis cursor item reader builder r0 <NEXT> r2 max item count = $ r1 <NEXT> r3 = org mybatis spring batch builder my batis cursor item reader builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r3 = org mybatis spring batch my batis cursor item reader r0 <NEXT> $ r1 = r3 sql session factory <NEXT> org springframework util assert not null $ r1 \ `` a sql session factory be require \ `` <NEXT> r4 = org mybatis spring batch my batis cursor item reader r0 <NEXT> $ r2 = r4 query id <NEXT> org springframework util assert not null $ r2 \ `` a query id be require \ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org mybatis spring mapper class path mapper scanner r0 <NEXT> r1 lazy initialization = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mybatis spring sql session factory bean r0 <NEXT> r2 object factory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mybatis spring sql session factory bean r0 <NEXT> r2 plugins = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org mybatis spring sql session factory bean r0 <NEXT> r2 type aliases package = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r8 = io netty channel epoll epoll server channel config r0 <NEXT> $ i1 = r8 pending fast open request threshold <NEXT> if $ i1 > = 0 goto label1 <NEXT> r7 = new java lang illegal argument exception <NEXT> r6 = new java lang string builder <NEXT> specialinvoke r6 < init > <NEXT> $ r3 = r6 append \ `` pending fast open request threshold \ `` <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke r7 < init > $ r5 <NEXT> throw r7 <NEXT> if $ i1 > = 0 goto label1 <NEXT> label r9 = io netty channel epoll epoll server channel config r0 <NEXT> r9 pending fast open request threshold = i0 <NEXT> r10 = io netty channel epoll epoll server channel config r0 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r1 = io netty handler codec haproxy h a proxy s s l t l v r0 <NEXT> $ i0 = r1 verify <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = io netty handler codec xml xml document start r0 <NEXT> $ r1 = r2 version <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io netty handler codec xml xml document start r0 <NEXT> $ r1 = r2 encode scheme <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ i1 = io netty util internal object util check positive i0 \ `` max message per write\ `` <NEXT> r1 = io netty channel default channel config r0 <NEXT> r1 max message per write = $ i1 <NEXT> return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org noggit j s o n writer r0 <NEXT> $ r2 = r4 out <NEXT> $ r3 = $ r2 to string <NEXT> r5 = org noggit j s o n writer r0 <NEXT> r5 write string $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = ognl evaluation r0 <NEXT> $ r1 = r4 last child <NEXT> if $ r1 == null goto label1 <NEXT> r5 = ognl evaluation r0 <NEXT> $ r2 = r5 last child <NEXT> $ r3 = $ r2 get last descendant <NEXT> return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label r6 = ognl evaluation r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = ognl evaluation r0 <NEXT> $ r2 = r10 first child <NEXT> if $ r2 ! = null goto label1 <NEXT> r11 = ognl evaluation r0 <NEXT> r11 last child = r1 <NEXT> r12 = ognl evaluation r0 <NEXT> r12 first child = r1 <NEXT> goto label3 <NEXT> label r22 = ognl evaluation r0 <NEXT> r1 parent = r22 <NEXT> return <NEXT> if $ r2 ! = null goto label1 <NEXT> label r13 = ognl evaluation r0 <NEXT> $ r4 = r13 first child <NEXT> r14 = ognl evaluation r0 <NEXT> $ r3 = r14 last child <NEXT> if $ r4 ! = $ r3 goto label2 <NEXT> r15 = ognl evaluation r0 <NEXT> $ r7 = r15 first child <NEXT> $ r7 next = r1 <NEXT> r16 = ognl evaluation r0 <NEXT> r16 last child = r1 <NEXT> r17 = ognl evaluation r0 <NEXT> $ r9 = r17 last child <NEXT> r18 = ognl evaluation r0 <NEXT> $ r8 = r18 first child <NEXT> $ r9 previous = $ r8 <NEXT> if $ r4 ! = $ r3 goto label2 <NEXT> label r19 = ognl evaluation r0 <NEXT> $ r5 = r19 last child <NEXT> r1 previous = $ r5 <NEXT> r20 = ognl evaluation r0 <NEXT> $ r6 = r20 last child <NEXT> $ r6 next = r1 <NEXT> r21 = ognl evaluation r0 <NEXT> r21 last child = r1 <END>
<BEG> r15 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r2 = new java lang string buffer <NEXT> specialinvoke $ r2 < init > <NEXT> if r15 == null goto label2 <NEXT> $ z1 = r15 instanceof java lang reflect proxy <NEXT> if $ z1 == 0 goto label1 <NEXT> $ r10 = r15 get class <NEXT> $ r11 = $ r10 get interface <NEXT> r1 = $ r11 [ 0 ] <NEXT> $ r12 = ognl ognl runtime get class name r1 z0 <NEXT> $ r2 append $ r12 <NEXT> $ r2 append 94 <NEXT> r15 = java lang reflect proxy get invocation handler r15 <NEXT> label $ r5 = ognl ognl runtime get class name r15 z0 <NEXT> $ r2 append $ r5 <NEXT> $ r2 append 64 <NEXT> $ r8 = ognl ognl runtime get pointer string r15 <NEXT> $ r2 append $ r8 <NEXT> goto label3 <NEXT> label $ r4 = new java lang string <NEXT> specialinvoke $ r4 < init > $ r2 <NEXT> return $ r4 <NEXT> if r15 == null goto label2 <NEXT> label $ r2 append \ `` < null > \ `` <END>
<BEG> r0 = @ parameter0 <NEXT> ognl ognl runtime _security manager = r0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> label $ r3 = r0 a subclass r1 <NEXT> $ r4 = newarray java lang class [ 0 ] <NEXT> $ r5 = $ r3 get constructor $ r4 <NEXT> $ r6 = newarray java lang object [ 0 ] <NEXT> $ r7 = $ r5 new instance $ r6 <NEXT> label return $ r7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get iterator <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> l5 = 0l <NEXT> i6 = 0 <NEXT> label if i6 > = 8 goto label2 <NEXT> l7 = l5 < < 8 <NEXT> r2 = io opencensus trace trace id r0 <NEXT> $ r1 = r2 bytes <NEXT> $ b2 = $ r1 [ i6 ] <NEXT> $ s3 = $ b2 & 255 <NEXT> $ l4 = long $ s3 <NEXT> l5 = l7 | $ l4 <NEXT> i6 = i6 + 1 <NEXT> goto label1 <NEXT> label if i6 > = 8 goto label2 <NEXT> label $ b0 = l5 cmp 0l <NEXT> if $ b0 > = 0 goto label3 <NEXT> $ l1 = neg l5 <NEXT> return $ l1 <NEXT> if $ b0 > = 0 goto label3 <NEXT> label return l5 <END>
<BEG> $ r0 = io opencensus stats stats get view manager <NEXT> io opencensus contrib grpc metric rpc view register all cumulative view $ r0 <NEXT> return <END>
<BEG> $ r0 = io opencensus stats stats get view manager <NEXT> io opencensus contrib grpc metric rpc view register all interval view $ r0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r2 = new java lang null pointer exception <NEXT> specialinvoke $ r2 < init > <NEXT> throw $ r2 <NEXT> if r0 ! = null goto label1 <NEXT> label $ z0 = r0 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r1 = new java lang illegal argument exception <NEXT> specialinvoke $ r1 < init > <NEXT> throw $ r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit api add command r0 <NEXT> r2 work tree iterator = r1 <NEXT> r3 = org eclipse jgit api add command r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit api checkout result r0 <NEXT> $ r1 = r2 modify list <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> r4 = org eclipse jgit api cherry pick command r0 <NEXT> $ r3 = r4 include $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> r4 = org eclipse jgit api cherry pick command r0 <NEXT> $ r3 = r4 include $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r1 = \ `` origin\ `` <NEXT> label r2 = org eclipse jgit api clone command r0 <NEXT> r2 remote = r1 <NEXT> r3 = org eclipse jgit api clone command r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r1 = \ `` head\ `` <NEXT> label r2 = org eclipse jgit api clone command r0 <NEXT> r2 branch = r1 <NEXT> r3 = org eclipse jgit api clone command r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit api error abort by hook exception r0 <NEXT> $ i0 = r1 return code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit api fetch command r0 <NEXT> $ z0 = r1 be force update <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = new org eclipse jgit api stash apply command <NEXT> r4 = org eclipse jgit api git r0 <NEXT> $ r2 = r4 repo <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org eclipse jgit api log command r0 <NEXT> r4 check callable <NEXT> r5 = org eclipse jgit api log command r0 <NEXT> $ r2 = r5 path filter <NEXT> $ r3 = org eclipse jgit treewalk filter path filter create r1 <NEXT> $ r2 add $ r3 <NEXT> r6 = org eclipse jgit api log command r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit api log command r0 <NEXT> r2 check callable <NEXT> r3 = org eclipse jgit api log command r0 <NEXT> r3 rev filter = r1 <NEXT> r4 = org eclipse jgit api log command r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> r4 = org eclipse jgit api merge command r0 <NEXT> $ r3 = r4 include $ r2 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit api push command r0 <NEXT> r2 check callable <NEXT> r3 = org eclipse jgit api push command r0 <NEXT> r3 remote = r1 <NEXT> r4 = org eclipse jgit api push command r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit api push command r0 <NEXT> r2 check callable <NEXT> r3 = org eclipse jgit api push command r0 <NEXT> r3 receive pack = r1 <NEXT> r4 = org eclipse jgit api push command r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit api remote remove command r0 <NEXT> r2 name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jgit api stash apply command r0 <NEXT> r1 apply index = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit api stash create command r0 <NEXT> r2 ref = r1 <NEXT> r3 = org eclipse jgit api stash create command r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit api status command r0 <NEXT> r2 ignore submodule mode = r1 <NEXT> r3 = org eclipse jgit api status command r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jgit api submodule init command r0 <NEXT> $ r2 = r3 path <NEXT> $ r2 add r1 <NEXT> r4 = org eclipse jgit api submodule init command r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jgit api submodule status command r0 <NEXT> $ r2 = r3 path <NEXT> $ r2 add r1 <NEXT> r4 = org eclipse jgit api submodule status command r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jgit api submodule update command r0 <NEXT> r1 fetch = z0 <NEXT> r2 = org eclipse jgit api submodule update command r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit api submodule update command r0 <NEXT> r2 callback = r1 <NEXT> r3 = org eclipse jgit api submodule update command r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit api tag command r0 <NEXT> $ z0 = r1 force update <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jgit api tag command r0 <NEXT> r1 force update = z0 <NEXT> r2 = org eclipse jgit api tag command r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r4 = new java util array list <NEXT> r5 = org eclipse jgit attribute attribute r0 <NEXT> $ r2 = r5 map <NEXT> $ r3 = $ r2 value <NEXT> specialinvoke r4 < init > $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> label r5 = org eclipse jgit blame blame generator r0 <NEXT> r1 = org eclipse jgit blame blame result create r5 <NEXT> if r1 == null goto label2 <NEXT> r1 compute all <NEXT> label r6 = org eclipse jgit blame blame generator r0 <NEXT> r6 close <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit blame blame generator r0 <NEXT> $ r1 = r2 out region <NEXT> $ i0 = $ r1 source start <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org eclipse jgit blame blame result r0 <NEXT> $ r1 = r3 source author <NEXT> $ r2 = $ r1 [ i0 ] <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit diff diff config r0 <NEXT> $ r2 = r3 rename detection type <NEXT> $ r1 = org eclipse jgit diff diff config $ rename detection type false <NEXT> if $ r2 == $ r1 goto label1 <NEXT> return 1 <NEXT> if $ r2 == $ r1 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit diff diff formatter r0 <NEXT> r2 diff algorithm = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit diff diff formatter r0 <NEXT> $ r1 = r2 rename detector <NEXT> if $ r1 == null goto label1 <NEXT> return 1 <NEXT> if $ r1 == null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse jgit diff patch id diff formatter r0 <NEXT> $ r1 = r4 digest <NEXT> $ r2 = $ r1 digest <NEXT> $ r3 = org eclipse jgit lib object id from raw $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> r3 = org eclipse jgit diff raw text r0 <NEXT> $ r1 = r3 content <NEXT> $ r2 = org eclipse jgit util raw parse utils decode $ r1 i0 i1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> $ z0 = org eclipse jgit diff raw text be binary r0 $ i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = new org eclipse jgit dircache dir cache builder <NEXT> r3 = org eclipse jgit dircache dir cache r0 <NEXT> $ i0 = r3 entry cnt <NEXT> $ i1 = $ i0 + 16 <NEXT> r4 = org eclipse jgit dircache dir cache r0 <NEXT> specialinvoke r2 < init > r4 $ i1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit lib constant encode r1 <NEXT> $ i0 = lengthof r2 <NEXT> r3 = org eclipse jgit dircache dir cache r0 <NEXT> $ i1 = r3 find entry r2 $ i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = org eclipse jgit dircache dir cache r0 <NEXT> $ i1 = r2 find entry 0 r1 i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r5 = org eclipse jgit dircache dir cache r0 <NEXT> $ r2 = r5 sort entry <NEXT> r4 = $ r2 [ i0 ] <NEXT> i3 = i0 + 1 <NEXT> goto label3 <NEXT> label r7 = org eclipse jgit dircache dir cache r0 <NEXT> $ i1 = r7 entry cnt <NEXT> if i3 < $ i1 goto label1 <NEXT> label r6 = org eclipse jgit dircache dir cache r0 <NEXT> $ r3 = r6 sort entry <NEXT> r1 = $ r3 [ i3 ] <NEXT> $ i2 = org eclipse jgit dircache dir cache cmp r4 r1 <NEXT> if $ i2 == 0 goto label2 <NEXT> goto label4 <NEXT> label return i3 <NEXT> if $ i2 == 0 goto label2 <NEXT> label r4 = r1 <NEXT> i3 = i3 + 1 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit dircache dir cache iterator r0 <NEXT> $ r1 = r3 current subtree <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = org eclipse jgit dircache dir cache iterator r0 <NEXT> $ r2 = r4 current entry <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ r2 = null <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit dircache dir cache tree r0 <NEXT> $ r1 = r2 id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r6 = org eclipse jgit dircache dir cache tree r0 <NEXT> $ r2 = r6 encode name <NEXT> r1 = java nio byte buffer wrap $ r2 <NEXT> $ r3 = java nio charset standard charsets utf_8 <NEXT> $ r4 = $ r3 decode r1 <NEXT> $ r5 = $ r4 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit error ambiguous object exception r0 <NEXT> $ r1 = r2 candidate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit error checkout conflict exception r0 <NEXT> $ r1 = r2 conflict <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jgit event repository event r0 <NEXT> $ r2 = r3 repository <NEXT> if $ r2 ! = null goto label1 <NEXT> r4 = org eclipse jgit event repository event r0 <NEXT> r4 repository = r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit gitrepo repo project r0 <NEXT> $ r1 = r2 remote <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit gitrepo repo project r0 <NEXT> $ r1 = r2 recommend shallow <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org eclipse jgit util f detect <NEXT> r5 = org eclipse jgit hook git hook r0 <NEXT> $ r2 = r5 get repository <NEXT> r6 = org eclipse jgit hook git hook r0 <NEXT> $ r3 = r6 get hook name <NEXT> $ r4 = $ r1 find hook $ r2 $ r3 <NEXT> if $ r4 == null goto label1 <NEXT> return 1 <NEXT> if $ r4 == null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit internal ketch ketch replica r0 <NEXT> $ r1 = r2 participation <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit internal ketch ketch system r0 <NEXT> $ r1 = r2 txn commit <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit internal ketch proposal r0 <NEXT> r2 push cert = r1 <NEXT> r3 = org eclipse jgit internal ketch proposal r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit internal ketch remote git replica r0 <NEXT> $ r1 = r2 uri <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jgit internal ketch replica config r0 <NEXT> $ l0 = r3 min retry <NEXT> $ r2 = java util concurrent time unit milliseconds <NEXT> $ l1 = r1 convert $ l0 $ r2 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jgit internal ketch replica config r0 <NEXT> $ l0 = r3 max retry <NEXT> $ r2 = java util concurrent time unit milliseconds <NEXT> $ l1 = r1 convert $ l0 $ r2 <NEXT> return $ l1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit internal ketch replica snapshot r0 <NEXT> $ r1 = r2 state <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org eclipse jgit internal storage dfs dfs block cache r0 <NEXT> $ r4 = r7 table <NEXT> r8 = org eclipse jgit internal storage dfs dfs block cache r0 <NEXT> $ i0 = specialinvoke r8 slot r1 0l <NEXT> $ r5 = $ r4 get $ i0 <NEXT> r2 = org eclipse jgit internal storage dfs dfs block cache $ hash entry $ r5 <NEXT> r9 = org eclipse jgit internal storage dfs dfs block cache r0 <NEXT> $ r6 = specialinvoke r9 scan r2 r1 0l <NEXT> r3 = org eclipse jgit internal storage dfs dfs block $ r6 <NEXT> if r3 == null goto label1 <NEXT> $ z0 = r3 contain r1 0l <NEXT> if $ z0 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jgit internal storage dfs dfs pack compactor r0 <NEXT> $ r2 = r3 src pack <NEXT> $ r2 add r1 <NEXT> r4 = org eclipse jgit internal storage dfs dfs pack compactor r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r3 = new org eclipse jgit internal storage dfs dfs reader io stats <NEXT> r4 = org eclipse jgit internal storage dfs dfs reader r0 <NEXT> $ r2 = r4 stats <NEXT> specialinvoke r3 < init > $ r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r7 = org eclipse jgit internal storage file lock file r0 <NEXT> $ r2 = r7 ref <NEXT> r1 = org eclipse jgit internal storage file file snapshot save $ r2 <NEXT> r8 = org eclipse jgit internal storage file lock file r0 <NEXT> $ r3 = r8 lck <NEXT> r6 = org eclipse jgit internal storage file file snapshot save $ r3 <NEXT> goto label2 <NEXT> label $ z0 = r1 equal r6 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label java lang thread sleep 25l <NEXT> r9 = org eclipse jgit internal storage file lock file r0 <NEXT> $ r4 = r9 lck <NEXT> $ l0 = java lang system current time millis <NEXT> $ r4 set last modified $ l0 <NEXT> r10 = org eclipse jgit internal storage file lock file r0 <NEXT> $ r5 = r10 lck <NEXT> r6 = org eclipse jgit internal storage file file snapshot save $ r5 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jgit internal storage file object directory pack parser r0 <NEXT> r1 keep empty = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new java lang string builder <NEXT> $ r2 = java lang string value of r0 <NEXT> specialinvoke $ r1 < init > $ r2 <NEXT> $ r3 = $ r1 append \ `` lock\ `` <NEXT> $ r4 = $ r3 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit internal storage file simple data input r0 <NEXT> $ r1 = r3 buf <NEXT> r4 = org eclipse jgit internal storage file simple data input r0 <NEXT> r4 read fully $ r1 0 4 <NEXT> r5 = org eclipse jgit internal storage file simple data input r0 <NEXT> $ r2 = r5 buf <NEXT> $ l0 = org eclipse jgit util nb decode u int32 $ r2 0 <NEXT> return $ l0 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 * 3 <NEXT> $ i2 = $ i1 4 <NEXT> $ i3 = i0 + $ i2 <NEXT> $ l4 = long $ i3 <NEXT> return $ l4 <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse jgit internal storage pack object to pack r0 <NEXT> $ r1 = r4 delta base <NEXT> $ z0 = $ r1 instanceof org eclipse jgit internal storage pack object to pack <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org eclipse jgit internal storage pack object to pack r0 <NEXT> $ r2 = r5 delta base <NEXT> $ r3 = org eclipse jgit internal storage pack object to pack $ r2 <NEXT> return $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit internal storage pack pack writer r0 <NEXT> $ z0 = r1 thin <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org eclipse jgit internal storage pack pack writer r0 <NEXT> $ r3 = r7 exclude in pack <NEXT> if $ r3 ! = null goto label1 <NEXT> $ r6 = newarray org eclipse jgit lib object id set [ 1 ] <NEXT> $ r6 [ 0 ] = r1 <NEXT> r8 = org eclipse jgit internal storage pack pack writer r0 <NEXT> r8 exclude in pack = $ r6 <NEXT> r9 = org eclipse jgit internal storage pack pack writer r0 <NEXT> r9 exclude in pack last = r1 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r3 ! = null goto label1 <NEXT> label r10 = org eclipse jgit internal storage pack pack writer r0 <NEXT> $ r4 = r10 exclude in pack <NEXT> i0 = lengthof $ r4 <NEXT> $ i1 = i0 + 1 <NEXT> r2 = newarray org eclipse jgit lib object id set [ $ i1 ] <NEXT> r11 = org eclipse jgit internal storage pack pack writer r0 <NEXT> $ r5 = r11 exclude in pack <NEXT> java lang system arraycopy $ r5 0 r2 0 i0 <NEXT> r2 [ i0 ] = r1 <NEXT> r12 = org eclipse jgit internal storage pack pack writer r0 <NEXT> r12 exclude in pack = r2 <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse jgit internal storage reftable ref cursor r0 <NEXT> r1 = r5 get ref <NEXT> $ r2 = r1 get storage <NEXT> $ r3 = org eclipse jgit lib ref $ storage new <NEXT> if $ r2 ! = $ r3 goto label1 <NEXT> $ r4 = r1 get object id <NEXT> if $ r4 ! = null goto label1 <NEXT> return 1 <NEXT> if $ r4 ! = null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = org eclipse jgit internal storage reftable reftable compactor r0 <NEXT> r1 max update index = l0 <NEXT> r2 = org eclipse jgit internal storage reftable reftable compactor r0 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = org eclipse jgit internal storage reftable reftable compactor r0 <NEXT> $ r4 = r7 table <NEXT> $ r4 add all r1 <NEXT> r3 = r1 iterator <NEXT> goto label2 <NEXT> label $ z2 = r3 have next <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label $ r5 = r3 next <NEXT> r2 = org eclipse jgit internal storage reftable reftable $ r5 <NEXT> $ z1 = r2 instanceof org eclipse jgit internal storage reftable reftable reader <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r6 = org eclipse jgit internal storage reftable reftable reader r2 <NEXT> r8 = org eclipse jgit internal storage reftable reftable compactor r0 <NEXT> specialinvoke r8 adjust update index $ r6 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit internal storage reftable reftable reader r0 <NEXT> $ i0 = r1 block size <NEXT> if $ i0 ! = -1 goto label1 <NEXT> r2 = org eclipse jgit internal storage reftable reftable reader r0 <NEXT> specialinvoke r2 read file header <NEXT> label r3 = org eclipse jgit internal storage reftable reftable reader r0 <NEXT> $ i1 = r3 block size <NEXT> return $ i1 <END>
<BEG> r0 = @ parameter0 <NEXT> r9 = @ parameter1 <NEXT> if r9 == null goto label1 <NEXT> $ z0 = r9 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r3 = org eclipse jgit internal j git text get <NEXT> r9 = $ r3 transaction abort <NEXT> label r2 = r0 iterator <NEXT> goto label4 <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label $ r4 = r2 next <NEXT> r1 = org eclipse jgit internal storage reftree command $ r4 <NEXT> $ r5 = r1 get result <NEXT> $ r6 = org eclipse jgit transport receive command $ result not_attempted <NEXT> if $ r5 ! = $ r6 goto label4 <NEXT> $ r7 = org eclipse jgit transport receive command $ result rejected_other_reason <NEXT> r1 set result $ r7 r9 <NEXT> $ r8 = org eclipse jgit internal j git text get <NEXT> r9 = $ r8 transaction abort <NEXT> if $ z1 ! = 0 goto label3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org eclipse jgit internal storage reftree command r0 <NEXT> $ r1 = r4 cmd <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org eclipse jgit internal storage reftree command r0 <NEXT> $ r2 = r5 cmd <NEXT> $ r3 = $ r2 get message <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r3 = null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ z0 = r0 instanceof org eclipse jgit internal storage reftree ref tree database <NEXT> if $ z0 == 0 goto label2 <NEXT> r2 = org eclipse jgit internal storage reftree ref tree database r0 <NEXT> $ r4 = r2 get txn commit <NEXT> $ z1 = r1 equal $ r4 <NEXT> if $ z1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z1 == 0 goto label1 <NEXT> label r3 = r2 get txn namespace <NEXT> if r3 == null goto label2 <NEXT> $ z2 = r1 start with r3 <NEXT> if $ z2 == 0 goto label2 <NEXT> $ r5 = new java lang string builder <NEXT> $ r6 = java lang string value of r3 <NEXT> specialinvoke $ r5 < init > $ r6 <NEXT> $ r7 = $ r5 append \ `` stage \ `` <NEXT> $ r8 = $ r7 to string <NEXT> $ z3 = r1 start with $ r8 <NEXT> if $ z3 ! = 0 goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jgit lib base repository builder r0 <NEXT> r3 index file = r1 <NEXT> r4 = org eclipse jgit lib base repository builder r0 <NEXT> $ r2 = r4 self <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = org eclipse jgit util system reader get instance <NEXT> r3 = org eclipse jgit lib base repository builder r0 <NEXT> $ r2 = r3 read environment $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label3 <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> goto label2 <NEXT> label if i1 < i0 goto label1 <NEXT> label r2 = r1 [ i1 ] <NEXT> r6 = org eclipse jgit lib base repository builder r0 <NEXT> r6 add ceiling directory r2 <NEXT> i1 = i1 + 1 <NEXT> label if i1 < i0 goto label1 <NEXT> label r7 = org eclipse jgit lib base repository builder r0 <NEXT> $ r4 = r7 self <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r7 = new org eclipse jgit internal storage file file repository <NEXT> r9 = org eclipse jgit lib base repository builder r0 <NEXT> $ r3 = r9 setup <NEXT> specialinvoke r7 < init > $ r3 <NEXT> r10 = org eclipse jgit lib base repository builder r0 <NEXT> $ z0 = r10 be must exist <NEXT> if $ z0 == 0 goto label1 <NEXT> r11 = org eclipse jgit lib repository r7 <NEXT> $ r4 = r11 get object database <NEXT> $ z1 = $ r4 exist <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r8 = new org eclipse jgit error repository not find exception <NEXT> r12 = org eclipse jgit lib base repository builder r0 <NEXT> $ r6 = r12 get git dir <NEXT> specialinvoke r8 < init > $ r6 <NEXT> r13 = java lang throwable r8 <NEXT> throw r13 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> label r14 = org eclipse jgit lib repository r7 <NEXT> return r14 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org eclipse jgit lib batch progress monitor r0 <NEXT> r2 delay start time = l0 <NEXT> r3 = org eclipse jgit lib batch progress monitor r0 <NEXT> r3 delay start unit = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = org eclipse jgit lib commit builder r0 <NEXT> $ r3 = r9 parent id <NEXT> $ i0 = lengthof $ r3 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> r10 = org eclipse jgit lib commit builder r0 <NEXT> r10 set parent id r1 <NEXT> goto label2 <NEXT> label return <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r11 = org eclipse jgit lib commit builder r0 <NEXT> $ r4 = r11 parent id <NEXT> $ i1 = lengthof $ r4 <NEXT> $ i2 = $ i1 + 1 <NEXT> r2 = newarray org eclipse jgit lib object id [ $ i2 ] <NEXT> r12 = org eclipse jgit lib commit builder r0 <NEXT> $ r6 = r12 parent id <NEXT> r13 = org eclipse jgit lib commit builder r0 <NEXT> $ r5 = r13 parent id <NEXT> $ i3 = lengthof $ r5 <NEXT> java lang system arraycopy $ r6 0 r2 0 $ i3 <NEXT> r14 = org eclipse jgit lib commit builder r0 <NEXT> $ r7 = r14 parent id <NEXT> $ i4 = lengthof $ r7 <NEXT> $ r8 = r1 copy <NEXT> r2 [ $ i4 ] = $ r8 <NEXT> r15 = org eclipse jgit lib commit builder r0 <NEXT> r15 parent id = r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit lib core config r0 <NEXT> $ r1 = r2 attributesfile <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit lib gpg config r0 <NEXT> $ r1 = r3 config <NEXT> $ r2 = $ r1 get string \ `` user\ <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit lib gpg config r0 <NEXT> $ r1 = r2 config <NEXT> $ z0 = $ r1 get boolean \ `` commit\ <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit lib index diff r0 <NEXT> $ r1 = r3 conflict <NEXT> $ r2 = $ r1 key set <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r6 = new java lang string builder <NEXT> specialinvoke r6 < init > \ `` abbreviate object id [ \ `` <NEXT> r7 = org eclipse jgit lib abbreviate object id r0 <NEXT> $ r2 = r7 name <NEXT> $ r3 = r6 append $ r2 <NEXT> $ r4 = $ r3 append \ `` ] \ `` <NEXT> $ r5 = $ r4 to string <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit lib object inserter r0 <NEXT> $ r1 = r3 hasher <NEXT> $ r2 = $ r1 reset <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i1 = lengthof r1 <NEXT> r3 = org eclipse jgit lib object inserter r0 <NEXT> $ r2 = r3 id for i0 r1 0 $ i1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit lib object reader r0 <NEXT> $ z0 = r2 have r1 -1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit lib rebase todo line r0 <NEXT> $ r1 = r2 short message <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = r0 get name <NEXT> $ i0 = $ r2 compare to r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new java util hash map <NEXT> $ i1 = lengthof r1 <NEXT> specialinvoke r8 < init > $ i1 <NEXT> i0 = lengthof r1 <NEXT> i2 = 0 <NEXT> goto label3 <NEXT> label if i2 < i0 goto label1 <NEXT> label r3 = r1 [ i2 ] <NEXT> r9 = org eclipse jgit lib ref database r0 <NEXT> r5 = r9 exact ref r3 <NEXT> if r5 == null goto label2 <NEXT> r8 put r3 r5 <NEXT> label i2 = i2 + 1 <NEXT> label if i2 < i0 goto label1 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 copy <NEXT> r3 = org eclipse jgit lib ref update r0 <NEXT> r3 new value = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit lib ref update r0 <NEXT> $ r1 = r2 exp value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit lib ref update r0 <NEXT> $ r1 = r2 old value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit lib ref rename r0 <NEXT> $ r1 = r2 result <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r1 = org eclipse jgit lib repository cache cache <NEXT> $ r2 = specialinvoke $ r1 open repository r0 z0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit lib tag builder r0 <NEXT> $ r1 = r2 tagger <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit lib tag builder r0 <NEXT> r2 tagger = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit merge merger r0 <NEXT> $ r1 = r2 db <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit merge merger r0 <NEXT> $ z0 = r2 merge 1 r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit merge resolve merger r0 <NEXT> $ r1 = r2 fail path <NEXT> $ i0 = $ r1 size <NEXT> if $ i0 < = 0 goto label1 <NEXT> return 1 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit patch combine file header r0 <NEXT> $ r1 = r2 get old id 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = org eclipse jgit patch file header r0 <NEXT> $ r2 = r5 change type <NEXT> $ r1 = org eclipse jgit diff diff entry $ change type modify <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> r6 = org eclipse jgit patch file header r0 <NEXT> $ r4 = r6 new mode <NEXT> r7 = org eclipse jgit patch file header r0 <NEXT> $ r3 = r7 old mode <NEXT> if $ r4 ! = $ r3 goto label1 <NEXT> return 0 <NEXT> if $ r4 ! = $ r3 goto label1 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit revplot plot commit r0 <NEXT> $ r1 = r2 ref <NEXT> $ i0 = lengthof $ r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org eclipse jgit revwalk filter or rev filter all <NEXT> if r0 == $ r2 goto label1 <NEXT> $ r4 = org eclipse jgit revwalk filter or rev filter all <NEXT> if r1 ! = $ r4 goto label2 <NEXT> label $ r3 = org eclipse jgit revwalk filter or rev filter all <NEXT> return $ r3 <NEXT> if r1 ! = $ r4 goto label2 <NEXT> label r6 = new org eclipse jgit revwalk filter or rev filter $ binary <NEXT> specialinvoke r6 < init > r0 r1 <NEXT> r7 = org eclipse jgit revwalk filter rev filter r6 <NEXT> return r7 <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = r0 size <NEXT> if $ i0 > = 2 goto label1 <NEXT> r10 = new java lang illegal argument exception <NEXT> $ r8 = org eclipse jgit internal j git text get <NEXT> $ r9 = $ r8 at least two filter need <NEXT> specialinvoke r10 < init > $ r9 <NEXT> throw r10 <NEXT> if $ i0 > = 2 goto label1 <NEXT> label $ i1 = r0 size <NEXT> r1 = newarray org eclipse jgit revwalk filter rev filter [ $ i1 ] <NEXT> r0 to array r1 <NEXT> $ i2 = lengthof r1 <NEXT> if $ i2 ! = 2 goto label2 <NEXT> $ r5 = r1 [ 0 ] <NEXT> $ r4 = r1 [ 1 ] <NEXT> $ r6 = org eclipse jgit revwalk filter or rev filter create $ r5 $ r4 <NEXT> return $ r6 <NEXT> if $ i2 ! = 2 goto label2 <NEXT> label r11 = new org eclipse jgit revwalk filter or rev filter $ list <NEXT> specialinvoke r11 < init > r1 <NEXT> r12 = org eclipse jgit revwalk filter rev filter r11 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit revwalk filter pattern match rev filter r0 <NEXT> $ r1 = r2 pattern text <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit revwalk rev tag r0 <NEXT> r1 = r3 buffer <NEXT> i0 = org eclipse jgit util raw parse utils tagger r1 0 <NEXT> if i0 > = 0 goto label1 <NEXT> return null <NEXT> if i0 > = 0 goto label1 <NEXT> label $ r2 = org eclipse jgit util raw parse utils parse person ident r1 i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit storage pack pack config r0 <NEXT> $ z0 = r1 preserve old pack <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit storage pack pack config r0 <NEXT> $ z0 = r1 delta base a offset <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit storage pack pack config r0 <NEXT> $ i0 = r1 delta search window size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 > 2 goto label1 <NEXT> r1 = org eclipse jgit storage pack pack config r0 <NEXT> r1 set delta compress 0 <NEXT> goto label2 <NEXT> label return <NEXT> if i0 > 2 goto label1 <NEXT> label r2 = org eclipse jgit storage pack pack config r0 <NEXT> r2 delta search window size = i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit storage pack pack config r0 <NEXT> $ i0 = r1 index version <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit storage pack pack config r0 <NEXT> $ i0 = r1 bitmap contiguous commit count <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit storage pack pack statistic r0 <NEXT> $ r1 = r3 statistic <NEXT> $ r2 = $ r1 root commits <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit storage pack pack statistic r0 <NEXT> $ r1 = r2 statistic <NEXT> $ l0 = $ r1 total object <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit storage pack pack statistic r0 <NEXT> $ r1 = r2 statistic <NEXT> $ l0 = $ r1 reuse delta <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit storage pack pack statistic r0 <NEXT> $ r1 = r2 statistic <NEXT> $ i0 = $ r1 depth <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit submodule submodule status r0 <NEXT> $ r1 = r2 index id <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org eclipse jgit util f detect <NEXT> $ r3 = org eclipse jgit submodule submodule walk get submodule repository r0 r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 be bare <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = new java io file <NEXT> $ r3 = r0 get work tree <NEXT> specialinvoke $ r2 < init > $ r3 \ `` gitmodules\ `` <NEXT> $ z1 = $ r2 exist <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit submodule submodule walk r0 <NEXT> $ r1 = r2 path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit submodule submodule walk r0 <NEXT> $ r1 = r3 path <NEXT> r4 = org eclipse jgit submodule submodule walk r0 <NEXT> $ r2 = specialinvoke r4 get module name $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r7 = null <NEXT> label r10 = org eclipse jgit submodule submodule walk r0 <NEXT> r1 = r10 get repository <NEXT> label if r1 ! = null goto label05 <NEXT> label if r1 == null goto label04 <NEXT> r1 close <NEXT> label return null <NEXT> label if r1 ! = null goto label05 <NEXT> label r2 = r1 exact ref \ `` head\ `` <NEXT> if r2 == null goto label06 <NEXT> $ r3 = r2 get leaf <NEXT> $ r4 = $ r3 get name <NEXT> $ r8 = $ r4 <NEXT> goto label07 <NEXT> label if r1 == null goto label08 <NEXT> label return $ r8 <NEXT> if r2 == null goto label06 <NEXT> label $ r8 = null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org eclipse jgit transport base pack connection r0 <NEXT> $ r2 = r3 remote capablities <NEXT> $ z0 = $ r2 contain r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit transport user agent get <NEXT> if r2 == null goto label1 <NEXT> r8 = org eclipse jgit transport base pack connection r0 <NEXT> $ r3 = r8 remote capablities <NEXT> $ z0 = org eclipse jgit transport user agent have agent $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = r1 append 32 <NEXT> $ r5 = $ r4 append \ `` agent\ `` <NEXT> $ r6 = $ r5 append 61 <NEXT> $ r6 append r2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = org eclipse jgit transport bundle writer r0 <NEXT> $ r2 = r3 assume <NEXT> $ r2 add r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> r3 = org eclipse jgit transport daemon r0 <NEXT> r3 upload pack factory = r1 <NEXT> goto label2 <NEXT> label return <NEXT> if r1 == null goto label1 <NEXT> label $ r2 = org eclipse jgit transport resolver upload pack factory disable <NEXT> r4 = org eclipse jgit transport daemon r0 <NEXT> r4 upload pack factory = $ r2 <END>
<BEG> r0 = @ this <NEXT> entermonitor r0 <NEXT> label r5 = org eclipse jgit transport daemon r0 <NEXT> r4 = r5 accept thread <NEXT> r6 = org eclipse jgit transport daemon r0 <NEXT> r6 stop <NEXT> exitmonitor r0 <NEXT> label goto label5 <NEXT> label if r4 == null goto label6 <NEXT> r7 = java lang thread r4 <NEXT> r7 join <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit transport operation result r0 <NEXT> $ r1 = r2 peer user agent <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit transport pack object info r0 <NEXT> $ l0 = r1 offset <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org eclipse jgit lib constant encode r1 <NEXT> r3 = org eclipse jgit transport packet line out r0 <NEXT> r3 write packet $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit transport packet line out r0 <NEXT> $ r1 = r2 out <NEXT> $ r1 flush <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org eclipse jgit transport push certificate parser r0 <NEXT> r1 = specialinvoke r6 sent nonce <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label r5 = new java lang string builder <NEXT> specialinvoke r5 < init > \ `` push-cert=\ `` <NEXT> $ r3 = r5 append r1 <NEXT> $ r4 = $ r3 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit transport receive pack statistic r0 <NEXT> $ l0 = r1 num ref delta <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit transport receive pack statistic r0 <NEXT> $ l0 = r1 num delta blob <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 == null goto label1 <NEXT> $ r3 = r1 <NEXT> goto label2 <NEXT> label r4 = org eclipse jgit transport receive pack r0 <NEXT> r4 post receive = $ r3 <NEXT> return <NEXT> if r1 == null goto label1 <NEXT> label $ r3 = org eclipse jgit transport post receive hook null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r15 = new org eclipse jgit transport ref spec <NEXT> r18 = org eclipse jgit transport ref spec r0 <NEXT> specialinvoke r15 < init > r18 <NEXT> $ r4 = org eclipse jgit transport ref spec check valid r1 <NEXT> r15 src name = $ r4 <NEXT> $ r5 = r15 src name <NEXT> $ z0 = org eclipse jgit transport ref spec be wildcard $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r11 = r15 dst name <NEXT> if $ r11 ! = null goto label1 <NEXT> r16 = new java lang illegal state exception <NEXT> $ r13 = org eclipse jgit internal j git text get <NEXT> $ r14 = $ r13 destination be not a wildcard <NEXT> specialinvoke r16 < init > $ r14 <NEXT> throw r16 <NEXT> if $ r11 ! = null goto label1 <NEXT> label $ r6 = r15 src name <NEXT> $ z1 = org eclipse jgit transport ref spec be wildcard $ r6 <NEXT> $ r7 = r15 dst name <NEXT> $ z2 = org eclipse jgit transport ref spec be wildcard $ r7 <NEXT> if $ z1 == $ z2 goto label2 <NEXT> r17 = new java lang illegal state exception <NEXT> $ r9 = org eclipse jgit internal j git text get <NEXT> $ r10 = $ r9 source destination must match <NEXT> specialinvoke r17 < init > $ r10 <NEXT> throw r17 <NEXT> if $ z1 == $ z2 goto label2 <NEXT> label return r15 <END>
<BEG> r0 = @ this <NEXT> r3 = org eclipse jgit transport remote config r0 <NEXT> $ r1 = r3 uris <NEXT> $ r2 = java util collection unmodifiable list $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org eclipse jgit transport remote config r0 <NEXT> $ r2 = r4 fetch <NEXT> $ z0 = $ r2 contain r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r5 = org eclipse jgit transport remote config r0 <NEXT> $ r3 = r5 fetch <NEXT> $ z1 = $ r3 add r1 <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit transport remote ref update r0 <NEXT> $ r1 = r2 new object id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit transport remote ref update r0 <NEXT> $ r1 = r2 track ref update <NEXT> if $ r1 == null goto label1 <NEXT> return 1 <NEXT> if $ r1 == null goto label1 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org eclipse jgit transport resolver file resolver r0 <NEXT> r1 export all = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org eclipse jgit transport sign push config r0 <NEXT> r2 cert nonce seed = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org eclipse jgit transport sign push config r0 <NEXT> r1 cert nonce slop limit = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit transport transport r0 <NEXT> $ r1 = r2 object checker <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit transport transport r0 <NEXT> $ z0 = r1 remove delete refs <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit transport u r iish r0 <NEXT> $ r1 = r2 user <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org eclipse jgit util string utils be empty or null r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r1 = null <NEXT> goto label2 <NEXT> label org eclipse jgit transport user agent user agent = $ r1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r1 = org eclipse jgit transport user agent clean r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 mode <NEXT> r2 = org eclipse jgit treewalk abstract tree iterator r0 <NEXT> $ i1 = r2 path compare r1 $ i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> goto label4 <NEXT> label r5 = org eclipse jgit treewalk abstract tree iterator r0 <NEXT> $ z0 = r5 eof <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ i2 = lengthof r1 <NEXT> r2 = org eclipse jgit treewalk abstract tree iterator r0 <NEXT> $ i1 = r2 path offset <NEXT> r3 = org eclipse jgit treewalk abstract tree iterator r0 <NEXT> i0 = specialinvoke r3 path compare r1 0 $ i2 0 $ i1 <NEXT> if i0 ! = 0 goto label2 <NEXT> return 1 <NEXT> if i0 ! = 0 goto label2 <NEXT> label if i0 < = 0 goto label3 <NEXT> return 0 <NEXT> label if i0 < = 0 goto label3 <NEXT> label r4 = org eclipse jgit treewalk abstract tree iterator r0 <NEXT> r4 next 1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit treewalk file tree iterator r0 <NEXT> $ r1 = r2 directory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jgit treewalk work tree option r0 <NEXT> $ r1 = r2 eol <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> org eclipse jgit util file utils delete r0 0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> org eclipse jgit util file utils mkdir r0 0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = org eclipse jgit util system reader get instance <NEXT> $ z0 = $ r2 be mac o s <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = r0 get path <NEXT> $ r4 = java text normalizer $ form nfc <NEXT> r1 = java text normalizer normalize $ r3 $ r4 <NEXT> $ r5 = new java io file <NEXT> specialinvoke $ r5 < init > r1 <NEXT> return $ r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ l0 = org eclipse jgit util file utils get length r1 <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org eclipse jgit util file utils delete r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = new java io file <NEXT> specialinvoke $ r4 < init > r2 <NEXT> $ z0 = $ r4 be absolute <NEXT> if $ z0 == 0 goto label1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r5 = new java io file <NEXT> specialinvoke $ r5 < init > r1 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r7 = java io file path separator <NEXT> $ r8 = r0 split $ r7 <NEXT> i0 = lengthof $ r8 <NEXT> i2 = 0 <NEXT> goto label6 <NEXT> label if i2 < i0 goto label2 <NEXT> label r2 = $ r8 [ i2 ] <NEXT> i1 = lengthof r1 <NEXT> i3 = 0 <NEXT> goto label5 <NEXT> label if i3 < i1 goto label3 <NEXT> label r4 = r1 [ i3 ] <NEXT> $ r9 = new java io file <NEXT> specialinvoke $ r9 < init > r2 r4 <NEXT> $ z0 = $ r9 be file <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r10 = $ r9 get absolute file <NEXT> return $ r10 <NEXT> if $ z0 == 0 goto label4 <NEXT> label i3 = i3 + 1 <NEXT> label if i3 < i1 goto label3 <NEXT> i2 = i2 + 1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r1 list file <NEXT> if r3 ! = null goto label1 <NEXT> $ r7 = org eclipse jgit util fs no_entries <NEXT> return $ r7 <NEXT> if r3 ! = null goto label1 <NEXT> label $ i0 = lengthof r3 <NEXT> r4 = newarray org eclipse jgit treewalk work tree iterator $ entry [ $ i0 ] <NEXT> i2 = 0 <NEXT> goto label3 <NEXT> label $ i1 = lengthof r4 <NEXT> if i2 < $ i1 goto label2 <NEXT> label r8 = new org eclipse jgit treewalk file tree iterator $ file entry <NEXT> $ r6 = r3 [ i2 ] <NEXT> r9 = org eclipse jgit util fs r0 <NEXT> specialinvoke r8 < init > $ r6 r9 r2 <NEXT> r4 [ i2 ] = r8 <NEXT> i2 = i2 + 1 <NEXT> if i2 < $ i1 goto label2 <NEXT> r10 = org eclipse jgit treewalk work tree iterator $ entry [ ] r4 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i3 = 0 <NEXT> goto label3 <NEXT> label r3 = org eclipse jgit util int list r0 <NEXT> $ i1 = r3 count <NEXT> if i3 < $ i1 goto label1 <NEXT> label r2 = org eclipse jgit util int list r0 <NEXT> $ r1 = r2 entry <NEXT> $ i2 = $ r1 [ i3 ] <NEXT> if $ i2 ! = i0 goto label2 <NEXT> return 1 <NEXT> if $ i2 ! = i0 goto label2 <NEXT> label i3 = i3 + 1 <NEXT> if i3 < $ i1 goto label1 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> $ r1 = java lang string value of c0 <NEXT> r2 = org eclipse jgit util io throw print writer r0 <NEXT> r2 print $ r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ b1 = r0 [ i0 ] <NEXT> $ s2 = $ b1 & 255 <NEXT> i11 = $ s2 < < 8 <NEXT> $ i3 = i0 + 1 <NEXT> $ b4 = r0 [ $ i3 ] <NEXT> $ s5 = $ b4 & 255 <NEXT> i12 = i11 | $ s5 <NEXT> $ i9 = i12 < < 8 <NEXT> $ i6 = i0 + 2 <NEXT> $ b7 = r0 [ $ i6 ] <NEXT> $ s8 = $ b7 & 255 <NEXT> $ i10 = $ i9 | $ s8 <NEXT> return $ i10 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit util process result r0 <NEXT> $ i0 = r1 exit code <NEXT> return $ i0 <END>
<BEG> b0 = @ parameter0 <NEXT> $ r0 = org eclipse jgit util raw char util whitespace <NEXT> $ s1 = b0 & 255 <NEXT> $ z0 = $ r0 [ $ s1 ] <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = org eclipse jgit util ref list r0 <NEXT> $ r1 = r3 list <NEXT> $ r2 = $ r1 [ i0 ] <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r7 = new java lang null pointer exception <NEXT> $ r8 = org eclipse jgit internal j git text get <NEXT> $ r9 = $ r8 expect boolean string value <NEXT> specialinvoke $ r7 < init > $ r9 <NEXT> throw $ r7 <NEXT> if r0 ! = null goto label1 <NEXT> label r1 = org eclipse jgit util string utils to boolean or null r0 <NEXT> if r1 ! = null goto label2 <NEXT> $ r2 = new java lang illegal argument exception <NEXT> $ r3 = org eclipse jgit internal j git text get <NEXT> $ r5 = $ r3 not a boolean <NEXT> $ r4 = newarray java lang object [ 1 ] <NEXT> $ r4 [ 0 ] = r0 <NEXT> $ r6 = java text message format format $ r5 $ r4 <NEXT> specialinvoke $ r2 < init > $ r6 <NEXT> throw $ r2 <NEXT> if r1 ! = null goto label2 <NEXT> label $ z0 = r1 boolean value <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> org eclipse jgit util system reader be mac o s = null <NEXT> org eclipse jgit util system reader be windows = null <NEXT> if r0 ! = null goto label1 <NEXT> $ r1 = org eclipse jgit util system reader default <NEXT> org eclipse jgit util system reader instance = $ r1 <NEXT> goto label2 <NEXT> label return <NEXT> if r0 ! = null goto label1 <NEXT> label specialinvoke r0 init <NEXT> org eclipse jgit util system reader instance = r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = org eclipse jgit util temporary buffer r0 <NEXT> $ r2 = r11 block <NEXT> if $ r2 == null goto label5 <NEXT> label r12 = org eclipse jgit util temporary buffer r0 <NEXT> r8 = specialinvoke r12 last <NEXT> $ z0 = r8 be full <NEXT> if $ z0 == 0 goto label3 <NEXT> r13 = org eclipse jgit util temporary buffer r0 <NEXT> $ z1 = specialinvoke r13 reach in core limit <NEXT> if $ z1 == 0 goto label2 <NEXT> goto label5 <NEXT> label r9 = newarray byte [ 8192 ] <NEXT> goto label7 <NEXT> label $ i0 = r1 read r9 <NEXT> if $ i0 > 0 goto label6 <NEXT> label r15 = org eclipse jgit util temporary buffer r0 <NEXT> $ r3 = r15 overflow <NEXT> $ r3 write r9 0 $ i0 <NEXT> if $ i0 > 0 goto label6 <NEXT> return <NEXT> if $ z1 == 0 goto label2 <NEXT> label r10 = new org eclipse jgit util temporary buffer $ block <NEXT> specialinvoke r10 < init > <NEXT> r8 = r10 <NEXT> r14 = org eclipse jgit util temporary buffer r0 <NEXT> $ r7 = r14 block <NEXT> $ r7 add r10 <NEXT> label $ r5 = r8 buffer <NEXT> $ i4 = r8 count <NEXT> $ r4 = r8 buffer <NEXT> $ i2 = lengthof $ r4 <NEXT> $ i1 = r8 count <NEXT> $ i3 = $ i2 - $ i1 <NEXT> i7 = r1 read $ r5 $ i4 $ i3 <NEXT> if i7 > = 1 goto label4 <NEXT> label $ i5 = r8 count <NEXT> $ i6 = $ i5 + i7 <NEXT> r8 count = $ i6 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = org eclipse jgit util temporary buffer r0 <NEXT> $ l0 = specialinvoke r1 in core length <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r11 = org eclipse jgit util temporary buffer r0 <NEXT> l0 = r11 length <NEXT> $ b1 = 2147483647l cmp l0 <NEXT> if $ b1 > = 0 goto label1 <NEXT> r10 = new java lang out of memory error <NEXT> $ r8 = org eclipse jgit internal j git text get <NEXT> $ r9 = $ r8 length exceed maximum array size <NEXT> specialinvoke r10 < init > $ r9 <NEXT> throw r10 <NEXT> if $ b1 > = 0 goto label1 <NEXT> label $ i2 = int l0 <NEXT> r1 = newarray byte [ $ i2 ] <NEXT> i5 = 0 <NEXT> r12 = org eclipse jgit util temporary buffer r0 <NEXT> $ r4 = r12 block <NEXT> r3 = $ r4 iterator <NEXT> goto label3 <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r5 = r3 next <NEXT> r2 = org eclipse jgit util temporary buffer $ block $ r5 <NEXT> $ r6 = r2 buffer <NEXT> $ i3 = r2 count <NEXT> java lang system arraycopy $ r6 0 r1 i5 $ i3 <NEXT> $ i4 = r2 count <NEXT> i5 = i5 + $ i4 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r11 = org eclipse jgit util temporary buffer r0 <NEXT> l0 = r11 length <NEXT> $ b1 = 2147483647l cmp l0 <NEXT> if $ b1 > = 0 goto label1 <NEXT> r10 = new java lang out of memory error <NEXT> $ r8 = org eclipse jgit internal j git text get <NEXT> $ r9 = $ r8 length exceed maximum array size <NEXT> specialinvoke r10 < init > $ r9 <NEXT> throw r10 <NEXT> if $ b1 > = 0 goto label1 <NEXT> label $ i2 = int l0 <NEXT> r1 = newarray byte [ $ i2 ] <NEXT> i5 = 0 <NEXT> r12 = org eclipse jgit util temporary buffer r0 <NEXT> $ r4 = r12 block <NEXT> r3 = $ r4 iterator <NEXT> goto label3 <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r5 = r3 next <NEXT> r2 = org eclipse jgit util temporary buffer $ block $ r5 <NEXT> $ r6 = r2 buffer <NEXT> $ i3 = r2 count <NEXT> java lang system arraycopy $ r6 0 r1 i5 $ i3 <NEXT> $ i4 = r2 count <NEXT> i5 = i5 + $ i4 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 > = 0 goto label1 <NEXT> r8 = new java lang illegal argument exception <NEXT> specialinvoke r8 < init > \ `` [ has_child ] require non-negative \'min_children\ ' field\ `` <NEXT> throw r8 <NEXT> if i0 > = 0 goto label1 <NEXT> label if i0 ! = 0 goto label2 <NEXT> $ r5 = org elasticsearch join query have child query builder deprecation logger <NEXT> $ r4 = org elasticsearch common log deprecation category query <NEXT> $ r3 = newarray java lang object [ 0 ] <NEXT> $ r5 deprecate $ r4 \ `` min_children\ <NEXT> label if i1 > = 0 goto label3 <NEXT> r9 = new java lang illegal argument exception <NEXT> specialinvoke r9 < init > \ `` [ has_child ] require non-negative \'max_children\ ' field\ `` <NEXT> throw r9 <NEXT> label if i1 > = 0 goto label3 <NEXT> label if i1 > = i0 goto label4 <NEXT> r10 = new java lang illegal argument exception <NEXT> specialinvoke r10 < init > \ `` [ has_child ] \'max_children\ ' be less than \'min_children\'\ `` <NEXT> throw r10 <NEXT> label if i1 > = i0 goto label4 <NEXT> label r11 = org elasticsearch join query have child query builder r0 <NEXT> r11 min child = i0 <NEXT> r12 = org elasticsearch join query have child query builder r0 <NEXT> r12 max child = i1 <NEXT> r13 = org elasticsearch join query have child query builder r0 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r2 = org elasticsearch join query have parent query builder r0 <NEXT> $ r1 = r2 query <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = new org elasticsearch join query have child query builder <NEXT> specialinvoke $ r3 < init > r0 r1 r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = new org elasticsearch join query parent id query builder <NEXT> specialinvoke $ r2 < init > r0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org passay abstract dictionary rule r0 <NEXT> $ r1 = r2 dictionary <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org passay abstract dictionary rule r0 <NEXT> $ z0 = r1 match backwards <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org passay allow character rule r0 <NEXT> $ r1 = r2 match behavior <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org passay character characteristic rule r0 <NEXT> r1 report rule failure = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org passay character rule r0 <NEXT> $ r1 = r3 character data <NEXT> $ r2 = $ r1 get character <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r1 = org passay dictionary ternary node r0 <NEXT> r1 splitchar = c0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org passay dictionary ternary node r0 <NEXT> $ r1 = r2 lokid <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org passay dictionary ternary node r0 <NEXT> r2 eqkid = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org passay dictionary ternary tree r0 <NEXT> $ r2 = r3 root <NEXT> r4 = org passay dictionary ternary tree r0 <NEXT> $ z0 = specialinvoke r4 search node $ r2 r1 0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org passay length rule r0 <NEXT> $ i0 = r1 minimum length <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org passay rule result r0 <NEXT> $ z0 = r1 valid <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org passay rule result metadata r0 <NEXT> $ r2 = r3 count <NEXT> $ z0 = $ r2 contain key r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r2 get salt <NEXT> if r3 ! = null goto label1 <NEXT> $ r10 = r1 <NEXT> goto label2 <NEXT> label r11 = org passay digest source rule r0 <NEXT> $ r5 = r11 hash bean <NEXT> $ r6 = r2 get password <NEXT> $ r7 = newarray java lang object [ 1 ] <NEXT> r12 = org passay digest source rule r0 <NEXT> $ r8 = r12 charset <NEXT> $ r9 = $ r10 get bytes $ r8 <NEXT> $ r7 [ 0 ] = $ r9 <NEXT> $ z0 = $ r5 compare $ r6 $ r7 <NEXT> return $ z0 <NEXT> if r3 ! = null goto label1 <NEXT> label $ r10 = r3 apply to r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org passay username rule r0 <NEXT> $ z0 = r1 match backwards <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdfwriter c o s writer r0 <NEXT> $ r1 = r3 compress parameter <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org apache pdfbox pdfwriter c o s writer r0 <NEXT> $ r2 = r4 compress parameter <NEXT> $ z0 = $ r2 be compress <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = org apache pdfbox pdmodel common filespecification p d complex file specification r0 <NEXT> r6 = specialinvoke r8 get e f dictionary <NEXT> if r6 ! = null goto label1 <NEXT> if r1 == null goto label1 <NEXT> r7 = new org apache pdfbox co c o s dictionary <NEXT> specialinvoke r7 < init > <NEXT> r6 = r7 <NEXT> r9 = org apache pdfbox pdmodel common filespecification p d complex file specification r0 <NEXT> $ r5 = r9 f <NEXT> $ r4 = org apache pdfbox co c o s name ef <NEXT> r10 = org apache pdfbox co c o s base r7 <NEXT> $ r5 set item $ r4 r10 <NEXT> label if r6 == null goto label2 <NEXT> $ r2 = org apache pdfbox co c o s name uf <NEXT> r11 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> r6 set item $ r2 r11 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org apache pdfbox pdmodel encryption security handler r0 <NEXT> r1 decrypt metadata = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache pdfbox pdmodel encryption security handler r0 <NEXT> $ r1 = r2 protection policy <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache pdfbox pdmodel fdf f d f annotation polyline r0 <NEXT> $ r3 = r5 annot <NEXT> $ r2 = org apache pdfbox co c o s name vertex <NEXT> r1 = $ r3 get c o s array $ r2 <NEXT> if r1 == null goto label1 <NEXT> $ r4 = r1 to float array <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if r1 == null goto label1 <NEXT> label $ r4 = null <END>
<BEG> r0 = @ this <NEXT> r3 = org apache pdfbox pdmodel graphic form p d form x object r0 <NEXT> $ r1 = r3 get c o s object <NEXT> $ r2 = org apache pdfbox co c o s name struct_parents <NEXT> $ i0 = $ r1 get int $ r2 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> f1 = @ parameter1 <NEXT> f2 = @ parameter2 <NEXT> f3 = @ parameter3 <NEXT> r9 = new org apache pdfbox co c o s array <NEXT> specialinvoke r9 < init > <NEXT> r10 = new org apache pdfbox co c o s float <NEXT> specialinvoke r10 < init > f0 <NEXT> r14 = org apache pdfbox co c o s base r10 <NEXT> r9 add r14 <NEXT> r11 = new org apache pdfbox co c o s float <NEXT> specialinvoke r11 < init > f1 <NEXT> r15 = org apache pdfbox co c o s base r11 <NEXT> r9 add r15 <NEXT> r12 = new org apache pdfbox co c o s float <NEXT> specialinvoke r12 < init > f2 <NEXT> r16 = org apache pdfbox co c o s base r12 <NEXT> r9 add r16 <NEXT> r13 = new org apache pdfbox co c o s float <NEXT> specialinvoke r13 < init > f3 <NEXT> r17 = org apache pdfbox co c o s base r13 <NEXT> r9 add r17 <NEXT> r18 = org apache pdfbox pdmodel interactive annotation p d annotation caret r0 <NEXT> $ r7 = r18 get c o s object <NEXT> $ r8 = org apache pdfbox co c o s name rd <NEXT> r19 = org apache pdfbox co c o s base r9 <NEXT> $ r7 set item $ r8 r19 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache pdfbox pdmodel interactive annotation p d annotation free text r0 <NEXT> $ r2 = r4 get c o s object <NEXT> $ r3 = org apache pdfbox co c o s name be <NEXT> r5 = org apache pdfbox pdmodel common c o s objectable r1 <NEXT> $ r2 set item $ r3 r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r14 = org apache pdfbox pdmodel interactive annotation p d annotation ink r0 <NEXT> $ r10 = r14 get c o s object <NEXT> $ r11 = org apache pdfbox co c o s name inklist <NEXT> $ r10 remove item $ r11 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label r12 = new org apache pdfbox co c o s array <NEXT> specialinvoke r12 < init > <NEXT> i0 = lengthof r1 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r4 = r1 [ i1 ] <NEXT> r13 = new org apache pdfbox co c o s array <NEXT> specialinvoke r13 < init > <NEXT> r13 set float array r4 <NEXT> r15 = org apache pdfbox co c o s base r13 <NEXT> r12 add r15 <NEXT> i1 = i1 + 1 <NEXT> goto label2 <NEXT> label if i1 > = i0 goto label3 <NEXT> label r16 = org apache pdfbox pdmodel interactive annotation p d annotation ink r0 <NEXT> $ r7 = r16 get c o s object <NEXT> $ r8 = org apache pdfbox co c o s name inklist <NEXT> r17 = org apache pdfbox co c o s base r12 <NEXT> $ r7 set item $ r8 r17 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> $ z0 = java lang float be finite f0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r14 = new java lang illegal argument exception <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r10 = r13 append f0 <NEXT> $ r11 = $ r10 append \ `` be not a finite number\ `` <NEXT> $ r12 = $ r11 to string <NEXT> specialinvoke r14 < init > $ r12 <NEXT> throw r14 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r15 = org apache pdfbox pdmodel p d abstract content stream r0 <NEXT> $ r1 = r15 format decimal <NEXT> $ i1 = $ r1 get maximum fraction digit <NEXT> r16 = org apache pdfbox pdmodel p d abstract content stream r0 <NEXT> $ r2 = r16 format buffer <NEXT> i0 = org apache pdfbox util number format util format float fast f0 $ i1 $ r2 <NEXT> if i0 ! = -1 goto label2 <NEXT> r17 = org apache pdfbox pdmodel p d abstract content stream r0 <NEXT> $ r6 = r17 format decimal <NEXT> $ d0 = double f0 <NEXT> $ r7 = $ r6 format $ d0 <NEXT> r18 = org apache pdfbox pdmodel p d abstract content stream r0 <NEXT> r18 write $ r7 <NEXT> goto label3 <NEXT> label r21 = org apache pdfbox pdmodel p d abstract content stream r0 <NEXT> $ r5 = r21 output stream <NEXT> $ r5 write 32 <NEXT> return <NEXT> if i0 ! = -1 goto label2 <NEXT> label r19 = org apache pdfbox pdmodel p d abstract content stream r0 <NEXT> $ r4 = r19 output stream <NEXT> r20 = org apache pdfbox pdmodel p d abstract content stream r0 <NEXT> $ r3 = r20 format buffer <NEXT> $ r4 write $ r3 0 i0 <END>
<BEG> r0 = @ this <NEXT> r9 = org apache pdfbox pdmodel p d page r0 <NEXT> $ r3 = r9 page <NEXT> $ r2 = org apache pdfbox co c o s name crop_box <NEXT> r1 = org apache pdfbox pdmodel p d page tree get inheritable attribute $ r3 $ r2 <NEXT> $ z0 = r1 instanceof org apache pdfbox co c o s array <NEXT> if $ z0 == 0 goto label1 <NEXT> r8 = new org apache pdfbox pdmodel common p d rectangle <NEXT> $ r6 = org apache pdfbox co c o s array r1 <NEXT> specialinvoke r8 < init > $ r6 <NEXT> r10 = org apache pdfbox pdmodel p d page r0 <NEXT> $ r7 = specialinvoke r10 clip to medium box r8 <NEXT> return $ r7 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r11 = org apache pdfbox pdmodel p d page r0 <NEXT> $ r4 = r11 get medium box <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = new org apache pdfbox util matrix <NEXT> r8 = org apache pdfbox util matrix r0 <NEXT> $ r4 = r8 single <NEXT> $ r3 = r1 single <NEXT> r9 = org apache pdfbox util matrix r0 <NEXT> $ r5 = specialinvoke r9 multiply array $ r4 $ r3 <NEXT> r10 = org apache pdfbox util matrix r0 <NEXT> $ r6 = specialinvoke r10 check float value $ r5 <NEXT> specialinvoke r7 < init > $ r6 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r5 = org apache pdfbox util matrix r0 <NEXT> $ r1 = r5 single <NEXT> $ f0 = $ r1 [ 1 ] <NEXT> $ i0 = java lang float compare $ f0 0 0f <NEXT> if $ i0 == 0 goto label1 <NEXT> r6 = org apache pdfbox util matrix r0 <NEXT> $ r3 = r6 single <NEXT> $ f2 = $ r3 [ 0 ] <NEXT> $ d0 = double $ f2 <NEXT> $ d1 = java lang math pow $ d0 2 0 <NEXT> r7 = org apache pdfbox util matrix r0 <NEXT> $ r4 = r7 single <NEXT> $ f3 = $ r4 [ 1 ] <NEXT> $ d2 = double $ f3 <NEXT> $ d3 = java lang math pow $ d2 2 0 <NEXT> $ d4 = $ d1 + $ d3 <NEXT> $ d5 = java lang math sqrt $ d4 <NEXT> $ f4 = float $ d5 <NEXT> return $ f4 <NEXT> if $ i0 == 0 goto label1 <NEXT> label r8 = org apache pdfbox util matrix r0 <NEXT> $ r2 = r8 single <NEXT> $ f1 = $ r2 [ 0 ] <NEXT> return $ f1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org codehaus plexus util cache map r0 <NEXT> $ r2 = r3 _backing map <NEXT> $ r2 put all r1 <NEXT> r4 = org codehaus plexus util cache map r0 <NEXT> r4 flush <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org codehaus plexus util directory scanner r0 <NEXT> r2 basedir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r46 = org codehaus plexus util directory scanner r0 <NEXT> $ r1 = r46 basedir <NEXT> if $ r1 ! = null goto label1 <NEXT> r33 = new java lang illegal state exception <NEXT> specialinvoke r33 < init > \ `` no basedir set\ `` <NEXT> throw r33 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r47 = org codehaus plexus util directory scanner r0 <NEXT> $ r2 = r47 basedir <NEXT> $ z0 = $ r2 exist <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r35 = new java lang illegal state exception <NEXT> r34 = new java lang string buffer <NEXT> specialinvoke r34 < init > <NEXT> $ r26 = r34 append \ `` basedir \ `` <NEXT> r48 = org codehaus plexus util directory scanner r0 <NEXT> $ r27 = r48 basedir <NEXT> $ r28 = $ r26 append $ r27 <NEXT> $ r29 = $ r28 append \ `` do not exist\ `` <NEXT> $ r30 = $ r29 to string <NEXT> specialinvoke r35 < init > $ r30 <NEXT> throw r35 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r49 = org codehaus plexus util directory scanner r0 <NEXT> $ r3 = r49 basedir <NEXT> $ z1 = $ r3 be directory <NEXT> if $ z1 ! = 0 goto label3 <NEXT> r37 = new java lang illegal state exception <NEXT> r36 = new java lang string buffer <NEXT> specialinvoke r36 < init > <NEXT> $ r19 = r36 append \ `` basedir \ `` <NEXT> r50 = org codehaus plexus util directory scanner r0 <NEXT> $ r20 = r50 basedir <NEXT> $ r21 = $ r19 append $ r20 <NEXT> $ r22 = $ r21 append \ `` be not a directory\ `` <NEXT> $ r23 = $ r22 to string <NEXT> specialinvoke r37 < init > $ r23 <NEXT> throw r37 <NEXT> if $ z1 ! = 0 goto label3 <NEXT> label r51 = org codehaus plexus util directory scanner r0 <NEXT> r51 setup default filter <NEXT> r38 = new java util vector <NEXT> specialinvoke r38 < init > <NEXT> r52 = org codehaus plexus util directory scanner r0 <NEXT> r52 file include = r38 <NEXT> r39 = new java util vector <NEXT> specialinvoke r39 < init > <NEXT> r53 = org codehaus plexus util directory scanner r0 <NEXT> r53 file not include = r39 <NEXT> r40 = new java util vector <NEXT> specialinvoke r40 < init > <NEXT> r54 = org codehaus plexus util directory scanner r0 <NEXT> r54 file exclude = r40 <NEXT> r41 = new java util vector <NEXT> specialinvoke r41 < init > <NEXT> r55 = org codehaus plexus util directory scanner r0 <NEXT> r55 file deselected = r41 <NEXT> r42 = new java util vector <NEXT> specialinvoke r42 < init > <NEXT> r56 = org codehaus plexus util directory scanner r0 <NEXT> r56 dirs include = r42 <NEXT> r43 = new java util vector <NEXT> specialinvoke r43 < init > <NEXT> r57 = org codehaus plexus util directory scanner r0 <NEXT> r57 dirs not include = r43 <NEXT> r44 = new java util vector <NEXT> specialinvoke r44 < init > <NEXT> r58 = org codehaus plexus util directory scanner r0 <NEXT> r58 dirs exclude = r44 <NEXT> r45 = new java util vector <NEXT> specialinvoke r45 < init > <NEXT> r59 = org codehaus plexus util directory scanner r0 <NEXT> r59 dirs deselected = r45 <NEXT> r60 = org codehaus plexus util directory scanner r0 <NEXT> $ z2 = r60 be include \ `` \ `` <NEXT> if $ z2 == 0 goto label6 <NEXT> r61 = org codehaus plexus util directory scanner r0 <NEXT> $ z3 = r61 be exclude \ `` \ `` <NEXT> if $ z3 ! = 0 goto label5 <NEXT> r62 = org codehaus plexus util directory scanner r0 <NEXT> $ r14 = r62 basedir <NEXT> r63 = org codehaus plexus util directory scanner r0 <NEXT> $ z4 = r63 be select \ `` \ <NEXT> if $ z4 == 0 goto label4 <NEXT> r64 = org codehaus plexus util directory scanner r0 <NEXT> $ r16 = r64 dirs include <NEXT> $ r16 add element \ `` \ `` <NEXT> goto label7 <NEXT> label r68 = org codehaus plexus util directory scanner r0 <NEXT> $ r32 = r68 basedir <NEXT> r69 = org codehaus plexus util directory scanner r0 <NEXT> r69 scandir $ r32 \ `` \ <NEXT> return <NEXT> if $ z4 == 0 goto label4 <NEXT> label r65 = org codehaus plexus util directory scanner r0 <NEXT> $ r15 = r65 dirs deselected <NEXT> $ r15 add element \ `` \ `` <NEXT> if $ z3 ! = 0 goto label5 <NEXT> label r66 = org codehaus plexus util directory scanner r0 <NEXT> $ r13 = r66 dirs exclude <NEXT> $ r13 add element \ `` \ `` <NEXT> if $ z2 == 0 goto label6 <NEXT> label r67 = org codehaus plexus util directory scanner r0 <NEXT> $ r12 = r67 dirs not include <NEXT> $ r12 add element \ `` \ `` <END>
<BEG> r0 = @ this <NEXT> r4 = org codehaus plexus util directory scanner r0 <NEXT> r4 slow scan <NEXT> r5 = org codehaus plexus util directory scanner r0 <NEXT> $ r2 = r5 dirs not include <NEXT> $ i0 = $ r2 size <NEXT> r1 = newarray java lang string [ $ i0 ] <NEXT> r6 = org codehaus plexus util directory scanner r0 <NEXT> $ r3 = r6 dirs not include <NEXT> $ r3 copy into r1 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org codehaus plexus util fast map r0 <NEXT> $ r1 = r2 _values <NEXT> r3 = java util collection $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r8 = net sourceforge pmd cache cache rule mapper r0 <NEXT> $ r4 = r8 cache rule instance <NEXT> r9 = net sourceforge pmd cache cache rule mapper r0 <NEXT> $ r5 = specialinvoke r9 get rule key r1 r2 r3 <NEXT> $ r6 = $ r4 get $ r5 <NEXT> $ r7 = net sourceforge pmd rule $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r4 = r1 get all rule <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r5 = r2 next <NEXT> r3 = net sourceforge pmd rule $ r5 <NEXT> r13 = net sourceforge pmd cache cache rule mapper r0 <NEXT> $ r6 = r13 cache rule instance <NEXT> $ r7 = r3 get rule class <NEXT> $ r8 = r3 get name <NEXT> $ r9 = r3 get language <NEXT> $ r10 = $ r9 get terse name <NEXT> r14 = net sourceforge pmd cache cache rule mapper r0 <NEXT> $ r11 = specialinvoke r14 get rule key $ r7 $ r8 $ r10 <NEXT> $ r6 put $ r11 r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new net sourceforge pmd lang ast xpath document navigator $ 3 <NEXT> $ r3 = net sourceforge pmd lang ast node r1 <NEXT> r5 = net sourceforge pmd lang ast xpath document navigator r0 <NEXT> specialinvoke r4 < init > r5 $ r3 <NEXT> r6 = java util iterator r4 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang unsupported operation exception <NEXT> $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = $ r3 append r1 <NEXT> $ r5 = $ r4 append \ `` be not implement by \ `` <NEXT> $ r6 = r0 get class <NEXT> $ r7 = $ r6 get name <NEXT> $ r8 = $ r5 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r2 < init > $ r9 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = net sourceforge pmd lang document internal language discoverer r0 <NEXT> $ r3 = r7 force language <NEXT> if $ r3 == null goto label1 <NEXT> r8 = net sourceforge pmd lang document internal language discoverer r0 <NEXT> $ r5 = r8 force language <NEXT> $ r6 = java util collection singleton list $ r5 <NEXT> return $ r6 <NEXT> if $ r3 == null goto label1 <NEXT> label r9 = net sourceforge pmd lang document internal language discoverer r0 <NEXT> r2 = specialinvoke r9 get extension r1 <NEXT> $ r4 = net sourceforge pmd lang language registry find by extension r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> r4 = net sourceforge pmd lang language version discoverer r0 <NEXT> $ r3 = r4 get default language version for file $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new net sourceforge pmd lang metric metric option $ metric option builder <NEXT> specialinvoke $ r2 < init > null <NEXT> $ r2 add all r0 <NEXT> $ r3 = $ r2 build <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = net sourceforge pmd lang rule abstract rule chain visitor r0 <NEXT> $ r3 = r6 node name to node <NEXT> $ r4 = r1 get x path node name <NEXT> $ r5 = $ r3 get $ r4 <NEXT> r2 = java util list $ r5 <NEXT> if r2 == null goto label1 <NEXT> r2 add r1 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r12 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r1 = r12 deprecate <NEXT> if $ r1 ! = null goto label1 <NEXT> r13 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r2 = r13 description <NEXT> if $ r2 ! = null goto label1 <NEXT> r14 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r3 = r14 example <NEXT> if $ r3 ! = null goto label1 <NEXT> r15 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r4 = r15 external info url <NEXT> if $ r4 ! = null goto label1 <NEXT> r16 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r5 = r16 maximum language version <NEXT> if $ r5 ! = null goto label1 <NEXT> r17 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r6 = r17 minimum language version <NEXT> if $ r6 ! = null goto label1 <NEXT> r18 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r7 = r18 message <NEXT> if $ r7 ! = null goto label1 <NEXT> r19 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r8 = r19 name <NEXT> if $ r8 ! = null goto label1 <NEXT> r20 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r9 = r20 priority <NEXT> if $ r9 ! = null goto label1 <NEXT> r21 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r10 = r21 property descriptor <NEXT> if $ r10 ! = null goto label1 <NEXT> r22 = net sourceforge pmd lang rule rule reference r0 <NEXT> $ r11 = r22 property value <NEXT> if $ r11 == null goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ r11 == null goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = new net sourceforge pmd lang rule xpath internal split union <NEXT> specialinvoke $ r2 < init > <NEXT> $ r2 visit r0 <NEXT> $ r4 = $ r2 get expression <NEXT> $ z0 = $ r4 be empty <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = java util collection singleton list r0 <NEXT> return $ r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r5 = $ r2 get expression <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd p m d configuration r0 <NEXT> $ r1 = r2 suppress marker <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd p m d configuration r0 <NEXT> $ r1 = r2 input path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sourceforge pmd p m d configuration r0 <NEXT> r1 show suppress violation = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util array a list r1 <NEXT> r3 = net sourceforge pmd property builder multi value property builder r0 <NEXT> r3 default value = $ r2 <NEXT> r4 = net sourceforge pmd property builder multi value property builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java util array a list r1 <NEXT> r3 = net sourceforge pmd property builder multi value property builder r0 <NEXT> r3 default value = $ r2 <NEXT> r4 = net sourceforge pmd property builder multi value property builder r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd property builders property descriptor builder r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = net sourceforge pmd property value parser constant character_parser <NEXT> $ r2 = $ r1 value of r0 <NEXT> $ r3 = java lang character $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new net sourceforge pmd property property builder $ generic property builder <NEXT> $ r2 = net sourceforge pmd property value parser constant long_parser <NEXT> specialinvoke $ r1 < init > r0 $ r2 class \ `` ljava lang long \ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new net sourceforge pmd property property builder $ regex property builder <NEXT> specialinvoke $ r1 < init > r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd property property type id r0 <NEXT> $ r1 = r2 string id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd property property type id r0 <NEXT> $ r1 = r2 factory <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> c0 = @ parameter1 <NEXT> r2 = new net sourceforge pmd property value parser constant $ 13 <NEXT> specialinvoke r2 < init > c0 r0 <NEXT> r3 = net sourceforge pmd property value parser r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sourceforge pmd renderers internal sarif sarif log r0 <NEXT> r2 schema = r1 <NEXT> r3 = net sourceforge pmd renderers internal sarif sarif log r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = net sourceforge pmd report r0 <NEXT> $ r4 = r7 metric <NEXT> $ r4 add r1 <NEXT> r8 = net sourceforge pmd report r0 <NEXT> $ r5 = r8 listener <NEXT> r2 = $ r5 iterator <NEXT> label $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r6 = r2 next <NEXT> r3 = net sourceforge pmd thread safe report listener $ r6 <NEXT> r3 metric add r1 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = net sourceforge pmd rule context r0 <NEXT> $ r2 = specialinvoke r4 get default message <NEXT> $ r3 = net sourceforge pmd rule context no_args <NEXT> r5 = net sourceforge pmd rule context r0 <NEXT> r5 add violation with message r1 $ r2 $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = net sourceforge pmd rule context r0 <NEXT> $ r2 = r4 attribute <NEXT> $ r3 = $ r2 remove r1 <NEXT> return $ r3 <END>
<BEG> i0 = @ parameter0 <NEXT> label $ r1 = net sourceforge pmd rule priority value <NEXT> $ i1 = i0 - 1 <NEXT> $ r2 = $ r1 [ $ i1 ] <NEXT> label return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = net sourceforge pmd rule set r0 <NEXT> $ r4 = r7 rule <NEXT> r2 = $ r4 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = net sourceforge pmd rule $ r5 <NEXT> $ r6 = r3 get language <NEXT> $ z1 = $ r6 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> $ z2 = r3 be multifile <NEXT> if $ z2 == 0 goto label2 <NEXT> return 1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = new java util array list <NEXT> $ i0 = r1 size <NEXT> specialinvoke r8 < init > $ i0 <NEXT> r3 = r1 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r3 next <NEXT> r4 = java lang string $ r6 <NEXT> r9 = net sourceforge pmd rule set loader r0 <NEXT> $ r7 = r9 load from resource r4 <NEXT> r8 add $ r7 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = net sourceforge pmd rule set reference id r0 <NEXT> $ z0 = r1 external <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = net sourceforge pmd rule set reference id r0 <NEXT> $ z0 = r1 all rule <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd rule set reference id r0 <NEXT> $ r1 = r2 rule set file name <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = net sourceforge pmd util class util types_by_name <NEXT> r4 = $ r1 type for r0 <NEXT> if r4 == null goto label1 <NEXT> return r4 <NEXT> if r4 == null goto label1 <NEXT> label $ r2 = net sourceforge pmd util class util primitive_type_names <NEXT> r5 = $ r2 type for r0 <NEXT> if r5 == null goto label2 <NEXT> return r5 <NEXT> if r5 == null goto label2 <NEXT> label $ r3 = net sourceforge pmd util collection util get collection type for r0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray java lang object [ 4 ] <NEXT> r7 = net sourceforge pmd util database source object r0 <NEXT> $ r2 = r7 get schema <NEXT> $ r1 [ 0 ] = $ r2 <NEXT> r8 = net sourceforge pmd util database source object r0 <NEXT> $ r3 = r8 get type <NEXT> $ r1 [ 1 ] = $ r3 <NEXT> r9 = net sourceforge pmd util database source object r0 <NEXT> $ r4 = r9 get name <NEXT> $ r1 [ 2 ] = $ r4 <NEXT> r10 = net sourceforge pmd util database source object r0 <NEXT> $ r5 = r10 get suffix from type <NEXT> $ r1 [ 3 ] = $ r5 <NEXT> $ r6 = java lang string format \ `` database % s % s % s % s\ <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 <NEXT> i0 = r0 last index of 46 <NEXT> if i0 == -1 goto label1 <NEXT> r1 = r0 substring 0 i0 <NEXT> label return r1 <END>
<BEG> $ r0 = net sourceforge pmd util filter directory filter instance <NEXT> r1 = net sourceforge pmd util filter filter $ r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sourceforge pmd util log internal message reporter base r0 <NEXT> r2 min level = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = net sourceforge pmd util treeexport tree renderers registry <NEXT> entermonitor $ r3 <NEXT> label $ r4 = net sourceforge pmd util treeexport tree renderers registry <NEXT> $ r5 = $ r4 get r0 <NEXT> $ r6 = net sourceforge pmd util treeexport tree renderer descriptor $ r5 <NEXT> exitmonitor $ r3 <NEXT> label return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r3 = net sourceforge pmd util treeexport tree renderers registry <NEXT> entermonitor $ r3 <NEXT> label $ r4 = net sourceforge pmd util treeexport tree renderers registry <NEXT> $ r5 = r0 id <NEXT> $ z0 = $ r4 contain key $ r5 <NEXT> if $ z0 == 0 goto label3 <NEXT> exitmonitor $ r3 <NEXT> label return 0 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r6 = net sourceforge pmd util treeexport tree renderers registry <NEXT> $ r7 = r0 id <NEXT> $ r6 put $ r7 r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = net sourceforge pmd util type map r0 <NEXT> $ r2 = r3 type by name <NEXT> $ z0 = $ r2 contain value r1 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = net sourceforge pmd util type map r0 <NEXT> $ r2 = r5 type by name <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = java lang class $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd lang java ast a s t allocation expression r0 <NEXT> $ r1 = r2 get qualify name <NEXT> r3 = net sourceforge pmd lang ast qualified name $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd lang java ast a s t switch statement r0 <NEXT> $ r1 = r2 get first child of type class \ `` lnet sourceforge pmd lang java ast a s t switch label \ `` <NEXT> if $ r1 == null goto label1 <NEXT> r3 = net sourceforge pmd lang java ast a s t switch statement r0 <NEXT> $ i0 = r3 get num child <NEXT> if $ i0 == 1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 == 1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd lang java ast a s t try statement r0 <NEXT> $ r1 = r2 find child of type class \ `` lnet sourceforge pmd lang java ast a s t catch statement \ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd lang java ast a s t type argument r0 <NEXT> $ r1 = r2 get type node <NEXT> if $ r1 ! = null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd lang java ast a s t type parameter r0 <NEXT> $ r1 = r2 get type bound node <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = net sourceforge pmd lang java ast a s t type pattern r0 <NEXT> $ r1 = r3 get first child of type class \ `` lnet sourceforge pmd lang java ast a s t variable declarator id \ `` <NEXT> $ r2 = net sourceforge pmd lang java ast a s t variable declarator id $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = net sourceforge pmd lang java ast a s t variable declarator r0 <NEXT> $ r1 = r3 get child 0 <NEXT> $ r2 = net sourceforge pmd lang java ast a s t variable declarator id $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = net sourceforge pmd lang java ast a s t variable declarator id r0 <NEXT> $ r1 = r2 get parent <NEXT> $ z0 = $ r1 instanceof net sourceforge pmd lang java ast a s t pattern <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = net sourceforge pmd lang java ast a s t wildcard bound r0 <NEXT> $ z0 = r1 be upper bound <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = net sourceforge pmd lang java ast a s t wildcard bound r0 <NEXT> $ r1 = r3 get first child of type class \ `` lnet sourceforge pmd lang java ast a s t reference type \ `` <NEXT> $ r2 = net sourceforge pmd lang java ast a s t reference type $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = net sourceforge pmd lang java ast a s t yield statement r0 <NEXT> $ r1 = r3 get child 0 <NEXT> $ r2 = net sourceforge pmd lang java ast a s t expression $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> $ i2 = r0 length <NEXT> if i0 < $ i2 goto label2 <NEXT> label return null <NEXT> if i0 < $ i2 goto label2 <NEXT> label i1 = i0 + 1 <NEXT> i4 = i1 <NEXT> c5 = r0 char at i1 <NEXT> label $ z0 = java lang character be letter or digit c5 <NEXT> if $ z0 == 0 goto label4 <NEXT> $ i3 = r0 length <NEXT> if i4 > = $ i3 goto label4 <NEXT> i4 = i4 + 1 <NEXT> c5 = r0 char at i4 <NEXT> goto label3 <NEXT> if i4 > = $ i3 goto label4 <NEXT> label $ r1 = r0 substring i1 i4 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = net sourceforge pmd lang java ast a s t any type declaration r1 <NEXT> r3 = net sourceforge pmd lang java metric impl abstract java class metric r0 <NEXT> $ z0 = r3 support $ r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = net sourceforge pmd lang ast node r1 <NEXT> $ d0 = net sourceforge pmd lang metric metric util compute metric or na n r0 r3 r2 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = net sourceforge pmd lang java multifile signature java field sig mask r0 <NEXT> r1 cover static = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = net sourceforge pmd lang java multifile signature java operation sig mask r0 <NEXT> $ r2 = r4 role mask <NEXT> $ r3 = java util array a list r1 <NEXT> $ r2 remove all $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = net sourceforge pmd lang java qname java operation qualify name r0 <NEXT> $ z0 = r1 be lambda <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = r1 find descendant of type class \ `` lnet sourceforge pmd lang java ast a s t primary expression \ `` <NEXT> r4 = r3 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r4 next <NEXT> r5 = net sourceforge pmd lang java ast a s t primary expression $ r7 <NEXT> r6 = net sourceforge pmd lang java rule design law of demeter rule $ method call create method call r5 <NEXT> $ r8 = net sourceforge pmd rule context r2 <NEXT> r9 = net sourceforge pmd lang java rule design law of demeter rule r0 <NEXT> specialinvoke r9 add violation r6 $ r8 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = net sourceforge pmd lang java typeresolution p m d a s m class loader r0 <NEXT> $ r3 = r9 dont bother <NEXT> $ z0 = $ r3 contain key r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r4 = specialinvoke r0 load class r1 <NEXT> label return $ r4 <END>
<BEG> r0 = @ this <NEXT> r5 = org postgresql core encode r0 <NEXT> $ r1 = r5 encode <NEXT> $ z0 = java nio charset charset be support $ r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = org postgresql core encode r0 <NEXT> $ r2 = r6 encode <NEXT> $ r3 = java nio charset charset for name $ r2 <NEXT> $ r4 = $ r3 name <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r7 = org postgresql core encode r0 <NEXT> $ r4 = r7 encode <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r4 = new java lang string <NEXT> r5 = org postgresql core encode r0 <NEXT> $ r3 = r5 encode <NEXT> specialinvoke r4 < init > r1 i0 i1 $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r7 = org postgresql core p g stream r0 <NEXT> $ r2 = r7 pg_input <NEXT> r8 = org postgresql core p g stream r0 <NEXT> $ r1 = r8 _int2buf <NEXT> $ i0 = $ r2 read $ r1 <NEXT> if $ i0 == 2 goto label1 <NEXT> r6 = new java io e o f exception <NEXT> specialinvoke r6 < init > <NEXT> throw r6 <NEXT> if $ i0 == 2 goto label1 <NEXT> label r9 = org postgresql core p g stream r0 <NEXT> $ r3 = r9 _int2buf <NEXT> $ b1 = $ r3 [ 0 ] <NEXT> $ s2 = $ b1 & 255 <NEXT> $ i5 = $ s2 < < 8 <NEXT> r10 = org postgresql core p g stream r0 <NEXT> $ r4 = r10 _int2buf <NEXT> $ b3 = $ r4 [ 1 ] <NEXT> $ s4 = $ b3 & 255 <NEXT> $ i6 = $ i5 | $ s4 <NEXT> return $ i6 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = newarray byte [ i0 ] <NEXT> r2 = org postgresql core p g stream r0 <NEXT> r2 receive r1 0 i0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r4 = org postgresql core p g stream r0 <NEXT> $ r1 = r4 encode writer <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org postgresql core p g stream r0 <NEXT> $ r3 = r5 encode writer <NEXT> $ r3 flush <NEXT> label r6 = org postgresql core p g stream r0 <NEXT> $ r2 = r6 pg_output <NEXT> $ r2 flush <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org postgresql core server version r0 <NEXT> $ i0 = r1 version <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = org postgresql core visible buffer input stream r0 <NEXT> $ i1 = r1 end index <NEXT> $ i3 = i0 - $ i1 <NEXT> r2 = org postgresql core visible buffer input stream r0 <NEXT> $ i2 = r2 index <NEXT> i7 = $ i3 + $ i2 <NEXT> label if i7 < = 0 goto label3 <NEXT> r3 = org postgresql core visible buffer input stream r0 <NEXT> $ z0 = specialinvoke r3 read more i7 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label r4 = org postgresql core visible buffer input stream r0 <NEXT> $ i4 = r4 end index <NEXT> $ i6 = i0 - $ i4 <NEXT> r5 = org postgresql core visible buffer input stream r0 <NEXT> $ i5 = r5 index <NEXT> i7 = $ i6 + $ i5 <NEXT> goto label1 <NEXT> label if i7 < = 0 goto label3 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r18 = org postgresql d p g pool data source r0 <NEXT> $ r3 = r18 lock <NEXT> entermonitor $ r3 <NEXT> label r19 = org postgresql d p g pool data source r0 <NEXT> $ r4 = r19 available <NEXT> $ z0 = $ r4 be empty <NEXT> if $ z0 ! = 0 goto label06 <NEXT> r20 = org postgresql d p g pool data source r0 <NEXT> $ r9 = r20 available <NEXT> $ r10 = $ r9 pop <NEXT> r14 = javax sql pool connection $ r10 <NEXT> label r14 close <NEXT> label goto label05 <NEXT> label goto label01 <NEXT> if $ z0 ! = 0 goto label06 <NEXT> label r21 = org postgresql d p g pool data source r0 <NEXT> r21 available = null <NEXT> label r22 = org postgresql d p g pool data source r0 <NEXT> $ r5 = r22 use <NEXT> $ z1 = $ r5 be empty <NEXT> if $ z1 ! = 0 goto label12 <NEXT> r23 = org postgresql d p g pool data source r0 <NEXT> $ r6 = r23 use <NEXT> $ r7 = $ r6 pop <NEXT> r16 = javax sql pool connection $ r7 <NEXT> r24 = org postgresql d p g pool data source r0 <NEXT> $ r8 = r24 connection event listener <NEXT> r16 remove connection event listener $ r8 <NEXT> label r16 close <NEXT> label goto label11 <NEXT> label goto label07 <NEXT> if $ z1 ! = 0 goto label12 <NEXT> label r25 = org postgresql d p g pool data source r0 <NEXT> r25 use = null <NEXT> exitmonitor $ r3 <NEXT> label goto label16 <NEXT> label r26 = org postgresql d p g pool data source r0 <NEXT> r26 remove store data source <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org postgresql jdbc escape function two argument function call \ `` trunc \ <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = r1 size <NEXT> if $ i0 == 3 goto label1 <NEXT> r21 = new org postgresql util p s q l exception <NEXT> $ r18 = newarray java lang object [ 1 ] <NEXT> $ r18 [ 0 ] = \ `` timestampdiff\ `` <NEXT> $ r19 = org postgresql util gt tr \ `` { 0 } function take three and only three argument \ <NEXT> $ r20 = org postgresql util p s q l state syntax_error <NEXT> specialinvoke r21 < init > $ r19 $ r20 <NEXT> r22 = java lang throwable r21 <NEXT> throw r22 <NEXT> if $ i0 == 3 goto label1 <NEXT> label $ r2 = r0 append \ `` extract \ `` <NEXT> $ r3 = r1 get 0 <NEXT> $ r4 = java lang char sequence $ r3 <NEXT> $ r5 = $ r4 to string <NEXT> $ r6 = org postgresql jdbc escape functions2 constant to date part r0 $ r5 <NEXT> $ r7 = $ r2 append $ r6 <NEXT> $ r8 = $ r7 append \ `` from \ `` <NEXT> $ r9 = r1 get 2 <NEXT> $ r10 = java lang char sequence $ r9 <NEXT> $ r11 = $ r8 append $ r10 <NEXT> $ r12 = $ r11 append \ `` -\ `` <NEXT> $ r13 = r1 get 1 <NEXT> $ r14 = java lang char sequence $ r13 <NEXT> $ r15 = $ r12 append $ r14 <NEXT> $ r15 append \ `` \ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org postgresql largeobject blob input stream r0 <NEXT> specialinvoke r8 check close <NEXT> label r9 = org postgresql largeobject blob input stream r0 <NEXT> $ l0 = r9 mpos <NEXT> $ b1 = $ l0 cmp 2147483647l <NEXT> if $ b1 > 0 goto label2 <NEXT> r10 = org postgresql largeobject blob input stream r0 <NEXT> $ r3 = r10 lo <NEXT> r11 = org postgresql largeobject blob input stream r0 <NEXT> $ l4 = r11 mpos <NEXT> $ i5 = int $ l4 <NEXT> $ r3 seek $ i5 <NEXT> goto label3 <NEXT> label r14 = org postgresql largeobject blob input stream r0 <NEXT> r14 buffer = null <NEXT> r15 = org postgresql largeobject blob input stream r0 <NEXT> $ l3 = r15 mpos <NEXT> r16 = org postgresql largeobject blob input stream r0 <NEXT> r16 apos = $ l3 <NEXT> label goto label6 <NEXT> label return <NEXT> if $ b1 > 0 goto label2 <NEXT> label r12 = org postgresql largeobject blob input stream r0 <NEXT> $ r2 = r12 lo <NEXT> r13 = org postgresql largeobject blob input stream r0 <NEXT> $ l2 = r13 mpos <NEXT> $ r2 seek64 $ l2 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org postgresql largeobject large object r0 <NEXT> i0 = r1 tell <NEXT> r2 = org postgresql largeobject large object r0 <NEXT> r2 seek 0 2 <NEXT> r3 = org postgresql largeobject large object r0 <NEXT> i1 = r3 tell <NEXT> r4 = org postgresql largeobject large object r0 <NEXT> r4 seek i0 0 <NEXT> return i1 <END>
<BEG> r0 = @ this <NEXT> r5 = org postgresql sspi s s p i client r0 <NEXT> $ r1 = r5 sspi context <NEXT> if $ r1 == null goto label1 <NEXT> r6 = org postgresql sspi s s p i client r0 <NEXT> $ r4 = r6 sspi context <NEXT> $ r4 dispose <NEXT> r7 = org postgresql sspi s s p i client r0 <NEXT> r7 sspi context = null <NEXT> label r8 = org postgresql sspi s s p i client r0 <NEXT> $ r2 = r8 client credential <NEXT> if $ r2 == null goto label2 <NEXT> r9 = org postgresql sspi s s p i client r0 <NEXT> $ r3 = r9 client credential <NEXT> $ r3 dispose <NEXT> r10 = org postgresql sspi s s p i client r0 <NEXT> r10 client credential = null <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> $ i0 = lengthof r0 <NEXT> $ r1 = org postgresql util base64 encode bytes r0 0 $ i0 0 <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ b1 = r0 [ i0 ] <NEXT> $ s2 = $ b1 & 255 <NEXT> $ i6 = $ s2 < < 8 <NEXT> $ i3 = i0 + 1 <NEXT> $ b4 = r0 [ $ i3 ] <NEXT> $ s5 = $ b4 & 255 <NEXT> $ i7 = $ i6 + $ s5 <NEXT> $ s8 = short $ i7 <NEXT> return $ s8 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ l1 = org postgresql util byte converter int8 r0 i0 <NEXT> $ d0 = java lang double long bit to double $ l1 <NEXT> return $ d0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org postgresql util lru cache r0 <NEXT> $ r2 = r3 get r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org postgresql util p gobject r0 <NEXT> r2 value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org postgresql util p g timestamp r0 <NEXT> $ r1 = r2 calendar <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org postgresql util p gtokenizer remove r0 \ `` { \ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 equal \ `` \ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> label r6 = new java lang illegal state exception <NEXT> specialinvoke r6 < init > \ `` attempt to set guc_report parameter with null or empty-string name\ `` <NEXT> throw r6 <NEXT> if $ z0 == 0 goto label2 <NEXT> label r7 = org postgresql core query executor base r0 <NEXT> $ r4 = r7 parameter statuses <NEXT> $ r4 put r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if z0 == 0 goto label2 <NEXT> r11 = org postgresql core v3 adaptivefetch adaptive fetch cache r0 <NEXT> $ l0 = r11 maximum result buffer size <NEXT> $ b1 = $ l0 cmp -1l <NEXT> if $ b1 == 0 goto label2 <NEXT> $ r3 = r1 get native sql <NEXT> r2 = $ r3 trim <NEXT> r12 = org postgresql core v3 adaptivefetch adaptive fetch cache r0 <NEXT> $ r4 = r12 adaptive fetch info map <NEXT> $ r5 = $ r4 get r2 <NEXT> r9 = org postgresql core v3 adaptivefetch adaptive fetch cache entry $ r5 <NEXT> if r9 ! = null goto label1 <NEXT> r10 = new org postgresql core v3 adaptivefetch adaptive fetch cache entry <NEXT> specialinvoke r10 < init > <NEXT> r9 = r10 <NEXT> label r9 increment counter <NEXT> r13 = org postgresql core v3 adaptivefetch adaptive fetch cache r0 <NEXT> $ r6 = r13 adaptive fetch info map <NEXT> $ r6 put r2 r9 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if z0 == 0 goto label2 <NEXT> r11 = org postgresql core v3 adaptivefetch adaptive fetch cache r0 <NEXT> $ l0 = r11 maximum result buffer size <NEXT> $ b1 = $ l0 cmp -1l <NEXT> if $ b1 == 0 goto label2 <NEXT> $ r4 = r1 get native sql <NEXT> r2 = $ r4 trim <NEXT> r12 = org postgresql core v3 adaptivefetch adaptive fetch cache r0 <NEXT> $ r5 = r12 adaptive fetch info map <NEXT> $ r6 = $ r5 get r2 <NEXT> r3 = org postgresql core v3 adaptivefetch adaptive fetch cache entry $ r6 <NEXT> if r3 == null goto label2 <NEXT> r3 decrement counter <NEXT> $ i2 = r3 get counter <NEXT> if $ i2 > = 1 goto label1 <NEXT> r13 = org postgresql core v3 adaptivefetch adaptive fetch cache r0 <NEXT> $ r9 = r13 adaptive fetch info map <NEXT> $ r9 remove r2 <NEXT> goto label2 <NEXT> label return <NEXT> if $ i2 > = 1 goto label1 <NEXT> label r14 = org postgresql core v3 adaptivefetch adaptive fetch cache r0 <NEXT> $ r7 = r14 adaptive fetch info map <NEXT> $ r7 put r2 r3 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = class \ `` lorg powermock api support class loader util \ `` <NEXT> $ r2 = $ r1 get class loader <NEXT> $ r3 = org powermock api support class loader util load class r0 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> $ r13 = new java lang illegal argument exception <NEXT> specialinvoke $ r13 < init > \ `` you need to supply at least one class \ `` <NEXT> throw $ r13 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r5 = new java util hash set <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = org powermock reflect internal whitebox impl get all constructor r0 <NEXT> $ r7 = java util array a list $ r6 <NEXT> $ r5 add all $ r7 <NEXT> i0 = lengthof r1 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label3 <NEXT> r4 = r1 [ i2 ] <NEXT> $ r11 = org powermock reflect internal whitebox impl get all constructor r4 <NEXT> $ r12 = java util array a list $ r11 <NEXT> $ r5 add all $ r12 <NEXT> i2 = i2 + 1 <NEXT> goto label2 <NEXT> label if i2 > = i0 goto label3 <NEXT> label $ i1 = $ r5 size <NEXT> $ r8 = newarray java lang reflect constructor [ $ i1 ] <NEXT> $ r9 = $ r5 to array $ r8 <NEXT> $ r10 = java lang reflect constructor [ ] $ r9 <NEXT> return $ r10 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 ! = null goto label1 <NEXT> $ r13 = new java lang illegal argument exception <NEXT> specialinvoke $ r13 < init > \ `` you need to supply at least one class \ `` <NEXT> throw $ r13 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r3 = new java util hash set <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = org powermock api support membermodification member matcher method declare in r0 r1 <NEXT> $ r5 = java util array a list $ r4 <NEXT> $ r6 = java util collection unmodifiable collection $ r5 <NEXT> $ r3 add all $ r6 <NEXT> $ r7 = org powermock api support membermodification member matcher constructor declare in r0 r1 <NEXT> $ r8 = java util array a list $ r7 <NEXT> $ r9 = java util collection unmodifiable collection $ r8 <NEXT> $ r3 add all $ r9 <NEXT> $ i0 = $ r3 size <NEXT> $ r10 = newarray java lang reflect accessible object [ $ i0 ] <NEXT> $ r11 = $ r3 to array $ r10 <NEXT> $ r12 = java lang reflect accessible object [ ] $ r11 <NEXT> return $ r12 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ r9 = new java lang illegal argument exception <NEXT> specialinvoke $ r9 < init > \ `` accessible object can not be null\ `` <NEXT> throw $ r9 <NEXT> if r0 ! = null goto label1 <NEXT> label i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label6 <NEXT> r2 = r0 [ i1 ] <NEXT> $ z0 = r2 instanceof java lang reflect constructor <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = newarray java lang reflect constructor [ 1 ] <NEXT> $ r8 = java lang reflect constructor r2 <NEXT> $ r7 [ 0 ] = $ r8 <NEXT> org powermock api support suppress code suppress constructor $ r7 <NEXT> goto label5 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ z1 = r2 instanceof java lang reflect field <NEXT> if $ z1 == 0 goto label4 <NEXT> $ r5 = newarray java lang reflect field [ 1 ] <NEXT> $ r6 = java lang reflect field r2 <NEXT> $ r5 [ 0 ] = $ r6 <NEXT> org powermock api support suppress code suppress field $ r5 <NEXT> if $ z1 == 0 goto label4 <NEXT> label $ z2 = r2 instanceof java lang reflect method <NEXT> if $ z2 == 0 goto label5 <NEXT> $ r3 = newarray java lang reflect method [ 1 ] <NEXT> $ r4 = java lang reflect method r2 <NEXT> $ r3 [ 0 ] = $ r4 <NEXT> org powermock api support suppress code suppress method $ r3 <NEXT> label if i1 > = i0 goto label6 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i1 = lengthof r0 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> label $ r3 = new java lang illegal argument exception <NEXT> specialinvoke $ r3 < init > \ `` you must supply at least one class \ `` <NEXT> throw $ r3 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> label i0 = lengthof r0 <NEXT> i2 = 0 <NEXT> label if i2 > = i0 goto label4 <NEXT> r2 = r0 [ i2 ] <NEXT> $ r4 = r2 get declare field <NEXT> org powermock api support suppress code suppress field $ r4 <NEXT> i2 = i2 + 1 <NEXT> goto label3 <NEXT> label if i2 > = i0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> if z0 == 0 goto label1 <NEXT> r3 = r0 get method <NEXT> goto label2 <NEXT> label r1 = r3 <NEXT> i0 = lengthof r3 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label4 <NEXT> r2 = r1 [ i1 ] <NEXT> org powermock core mock repository add method to suppress r2 <NEXT> i1 = i1 + 1 <NEXT> goto label3 <NEXT> label if i1 > = i0 goto label4 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r3 = r0 get declare method <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org powermock core mock repository suppress static initializers <NEXT> $ r1 add r0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label2 <NEXT> r2 = r0 [ i1 ] <NEXT> $ r3 = org powermock core mock repository object to automatically replay and verify <NEXT> $ r3 add r2 <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = org powermock core mock repository substitute return value <NEXT> $ r3 = $ r2 put r0 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> if r2 ! = null goto label2 <NEXT> r21 = \ `` \ `` <NEXT> if r1 == null goto label1 <NEXT> r22 = new java lang string builder <NEXT> specialinvoke r22 < init > <NEXT> $ r18 = r22 append \ `` with name \'\ `` <NEXT> $ r19 = $ r18 append r1 <NEXT> $ r20 = $ r19 append \ `` \ ' \ `` <NEXT> r21 = $ r20 to string <NEXT> label r24 = new org powermock reflect exception method not find exception <NEXT> r23 = new java lang string builder <NEXT> specialinvoke r23 < init > <NEXT> $ r6 = r23 append \ `` no method find \ `` <NEXT> $ r7 = $ r6 append r21 <NEXT> $ r8 = $ r7 append \ `` with parameter type [ \ `` <NEXT> $ r9 = org powermock reflect internal whitebox impl get argument type a string r3 <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 append \ `` ] in class \ `` <NEXT> $ r12 = org powermock reflect internal whitebox impl get unmocked type r0 <NEXT> $ r13 = $ r12 get name <NEXT> $ r14 = $ r11 append $ r13 <NEXT> $ r15 = $ r14 append \ `` \ `` <NEXT> $ r16 = $ r15 to string <NEXT> specialinvoke r24 < init > $ r16 <NEXT> r25 = java lang throwable r24 <NEXT> throw r25 <NEXT> if r2 ! = null goto label2 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r2 = org powermock reflect internal whitebox impl get unmocked type r0 <NEXT> $ r3 = $ r2 get superclass <NEXT> $ r4 = $ r3 get declare constructor <NEXT> $ r5 = $ r4 [ 0 ] <NEXT> label return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = org powermock reflect internal whitebox impl get all method r0 <NEXT> $ r8 = new java util array list <NEXT> specialinvoke $ r8 < init > <NEXT> i0 = lengthof r3 <NEXT> i5 = 0 <NEXT> label if i5 > = i0 goto label6 <NEXT> r6 = r3 [ i5 ] <NEXT> $ r12 = r6 get name <NEXT> $ z0 = $ r12 equal r1 <NEXT> if $ z0 == 0 goto label4 <NEXT> if r2 == null goto label5 <NEXT> $ i1 = lengthof r2 <NEXT> if $ i1 < = 0 goto label5 <NEXT> r7 = r6 get parameter type <NEXT> if r7 == null goto label4 <NEXT> $ i3 = lengthof r7 <NEXT> $ i2 = lengthof r2 <NEXT> if $ i3 ! = $ i2 goto label4 <NEXT> i6 = 0 <NEXT> label $ i4 = lengthof r7 <NEXT> if i6 > = $ i4 goto label4 <NEXT> $ r14 = r7 [ i6 ] <NEXT> $ r13 = r2 [ i6 ] <NEXT> $ r15 = org powermock reflect internal whitebox impl get unmocked type $ r13 <NEXT> $ z2 = $ r14 be assignable from $ r15 <NEXT> if $ z2 == 0 goto label3 <NEXT> goto label5 <NEXT> label i5 = i5 + 1 <NEXT> goto label1 <NEXT> if $ z2 == 0 goto label3 <NEXT> label i6 = i6 + 1 <NEXT> goto label2 <NEXT> if i6 > = $ i4 goto label4 <NEXT> label $ r8 add r6 <NEXT> label if i5 > = i0 goto label6 <NEXT> label $ r9 = newarray java lang reflect method [ 0 ] <NEXT> $ r10 = $ r8 to array $ r9 <NEXT> $ r11 = java lang reflect method [ ] $ r10 <NEXT> return $ r11 <END>
<BEG> r0 = @ this <NEXT> r5 = com google api auth provider r0 <NEXT> r1 = r5 id_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google api auth provider r0 <NEXT> r6 id_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r5 = com google api config change r0 <NEXT> r1 = r5 old value_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google api config change r0 <NEXT> r6 old value_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com google api config change r0 <NEXT> $ r1 = r2 advices_ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = com google api monitor resource descriptor r0 <NEXT> r1 = r5 display name_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google api monitor resource descriptor r0 <NEXT> r6 display name_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com google api project property r0 <NEXT> $ r1 = r2 properties_ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = com google api service r0 <NEXT> r1 = r5 title_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google api service r0 <NEXT> r6 title_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com google api service r0 <NEXT> $ r1 = r2 documentation_ <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google api service r0 <NEXT> $ r1 = r2 backend_ <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google api service r0 <NEXT> $ r1 = r2 quota_ <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google api service r0 <NEXT> $ r1 = r2 control_ <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google api source info r0 <NEXT> $ r1 = r2 source files_ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com google cloud audit audit log r0 <NEXT> $ r1 = r2 response_ <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = com google cloud audit authorization info r0 <NEXT> $ z0 = r1 granted_ <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r5 = com google cloud audit request metadata r0 <NEXT> r1 = r5 caller supply user agent_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google cloud audit request metadata r0 <NEXT> r6 caller supply user agent_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r5 = com google log type http request r0 <NEXT> r1 = r5 request method_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google log type http request r0 <NEXT> r6 request method_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r5 = com google rpc resource info r0 <NEXT> r1 = r5 resource type_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google rpc resource info r0 <NEXT> r6 resource type_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com google rpc status r0 <NEXT> $ r1 = r2 details_ <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = com google type color r0 <NEXT> $ f0 = r1 red_ <NEXT> return $ f0 <END>
<BEG> r0 = @ this <NEXT> r5 = com google type postal address r0 <NEXT> r1 = r5 organization_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google type postal address r0 <NEXT> r6 organization_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = new java util hash set <NEXT> specialinvoke r13 < init > <NEXT> r14 = com google protobuf extension registry r0 <NEXT> $ r6 = r14 immutable extension by number <NEXT> $ r7 = $ r6 key set <NEXT> r3 = $ r7 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r8 = r3 next <NEXT> r4 = com google protobuf extension registry $ descriptor int pair $ r8 <NEXT> $ r9 = com google protobuf extension registry $ descriptor int pair access $ 000 r4 <NEXT> $ r10 = $ r9 get full name <NEXT> $ z1 = $ r10 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> r15 = com google protobuf extension registry r0 <NEXT> $ r11 = r15 immutable extension by number <NEXT> $ r12 = $ r11 get r4 <NEXT> r13 add $ r12 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = com google protobuf rope byte string r0 <NEXT> $ i1 = r1 total length <NEXT> r2 = com google protobuf rope byte string r0 <NEXT> $ i0 = r2 tree depth <NEXT> $ i2 = com google protobuf rope byte string min length $ i0 <NEXT> if $ i1 < $ i2 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i1 < $ i2 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = com google protobuf structural message info r0 <NEXT> $ r1 = r2 field <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = com google protobuf any r0 <NEXT> r1 = r5 type url_ <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r4 = java lang string r1 <NEXT> return $ r4 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = com google protobuf byte string r1 <NEXT> r3 = r2 to string utf8 <NEXT> r6 = com google protobuf any r0 <NEXT> r6 type url_ = r3 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> $ r3 = new java io output stream writer <NEXT> specialinvoke $ r3 < init > r1 \ `` utf-8\ `` <NEXT> net razorvine pickle pretty print print r0 $ r3 z0 <NEXT> $ r3 flush <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org elasticsearch index rankeval precision at k r0 <NEXT> $ z0 = r1 ignore unlabeled <NEXT> return $ z0 <END>
<BEG> $ r0 = class \ `` lorg reflection reflection \ `` <NEXT> $ r1 = $ r0 get class loader <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org reflection util configuration builder r0 <NEXT> r2 input filter = r1 <NEXT> r3 = org reflection util configuration builder r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org reflection util configuration builder r0 <NEXT> r1 be parallel = z0 <NEXT> r2 = org reflection util configuration builder r0 <NEXT> return r2 <END>
<BEG> $ r0 = org reflection util reflection utils predicate with modifier 1 <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> org reflection vfs vfs default url type = r0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org reflection store r0 <NEXT> $ r1 = r3 store map <NEXT> $ r2 = $ r1 key set <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r11 = org reflection util configuration builder r0 <NEXT> $ r2 = r11 metadata adapter <NEXT> if $ r2 == null goto label1 <NEXT> r12 = org reflection util configuration builder r0 <NEXT> $ r4 = r12 metadata adapter <NEXT> return $ r4 <NEXT> if $ r2 == null goto label1 <NEXT> label r9 = new org reflection adapter javassist adapter <NEXT> specialinvoke r9 < init > <NEXT> r13 = org reflection util configuration builder r0 <NEXT> r14 = org reflection adapter metadata adapter r9 <NEXT> r13 metadata adapter = r14 <NEXT> label r15 = org reflection adapter metadata adapter r9 <NEXT> return r15 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = lengthof r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 annotation type <NEXT> r7 = org reflection reflection r0 <NEXT> $ r3 = r7 get field annotate with $ r2 <NEXT> $ r4 = newarray com google common base predicate [ 1 ] <NEXT> $ r5 = org reflection reflection utils with annotation r1 <NEXT> $ r4 [ 0 ] = $ r5 <NEXT> $ r6 = org reflection reflection utils get all $ r3 $ r4 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org reflection store r0 <NEXT> r2 = r6 get class \ `` lorg reflection scanner type annotation scanner \ `` <NEXT> if r2 == null goto label1 <NEXT> $ r3 = class \ `` ljava lang annotation inherit \ `` <NEXT> $ r4 = $ r3 get name <NEXT> $ r5 = r2 get $ r4 <NEXT> $ z0 = $ r5 contain r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org roaringbitmap buffer buffer fast aggregation naive_or r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org roaringbitmap buffer immutable roar array r0 <NEXT> $ i0 = r1 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r14 = new org roaringbitmap buffer mutable roar bitmap <NEXT> specialinvoke r14 < init > <NEXT> i8 = 0 <NEXT> i9 = 0 <NEXT> label if i8 > = i0 goto label4 <NEXT> r15 = org roaringbitmap buffer immutable roar bitmap r0 <NEXT> $ r5 = r15 high low container <NEXT> $ i2 = $ r5 size <NEXT> if i9 > = $ i2 goto label4 <NEXT> r16 = org roaringbitmap buffer immutable roar bitmap r0 <NEXT> $ r6 = r16 high low container <NEXT> r2 = $ r6 get container at index i9 <NEXT> $ i3 = r2 get cardinality <NEXT> $ i4 = $ i3 + i8 <NEXT> if $ i4 > i0 goto label2 <NEXT> $ r10 = r14 high low container <NEXT> $ r12 = org roaringbitmap buffer mutable roar array $ r10 <NEXT> r17 = org roaringbitmap buffer immutable roar bitmap r0 <NEXT> $ r11 = r17 high low container <NEXT> $ s6 = $ r11 get key at index i9 <NEXT> $ r13 = r2 clone <NEXT> $ r12 append $ s6 $ r13 <NEXT> $ i7 = r2 get cardinality <NEXT> i8 = i8 + $ i7 <NEXT> goto label3 <NEXT> label i9 = i9 + 1 <NEXT> goto label1 <NEXT> if $ i4 > i0 goto label2 <NEXT> label i1 = i0 - i8 <NEXT> r3 = r2 limit i1 <NEXT> $ r7 = r14 high low container <NEXT> $ r9 = org roaringbitmap buffer mutable roar array $ r7 <NEXT> r18 = org roaringbitmap buffer immutable roar bitmap r0 <NEXT> $ r8 = r18 high low container <NEXT> $ s5 = $ r8 get key at index i9 <NEXT> $ r9 append $ s5 r3 <NEXT> goto label4 <NEXT> label return r14 <END>
<BEG> r0 = @ this <NEXT> $ z0 = r0 instanceof org roaringbitmap buffer mappeable bitmap container <NEXT> if $ z0 == 0 goto label1 <NEXT> return \ `` mappeablebitmap \ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r0 instanceof org roaringbitmap buffer mappeable array container <NEXT> if $ z1 == 0 goto label2 <NEXT> return \ `` mappeablearray\ `` <NEXT> if $ z1 == 0 goto label2 <NEXT> label return \ `` mappeablerun\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r0 instanceof org roaringbitmap buffer mappeable array container <NEXT> if $ z0 == 0 goto label3 <NEXT> $ z6 = r1 instanceof org roaringbitmap buffer mappeable array container <NEXT> if $ z6 == 0 goto label1 <NEXT> $ r25 = org roaringbitmap buffer mappeable array container r1 <NEXT> r27 = org roaringbitmap buffer mappeable container r0 <NEXT> $ r26 = r27 or $ r25 <NEXT> return $ r26 <NEXT> if $ z6 == 0 goto label1 <NEXT> label $ z7 = r1 instanceof org roaringbitmap buffer mappeable bitmap container <NEXT> if $ z7 == 0 goto label2 <NEXT> $ r23 = org roaringbitmap buffer mappeable bitmap container r1 <NEXT> $ r22 = org roaringbitmap buffer mappeable array container r0 <NEXT> $ r24 = $ r23 lazyor $ r22 <NEXT> return $ r24 <NEXT> if $ z7 == 0 goto label2 <NEXT> label $ r20 = org roaringbitmap buffer mappeable run container r1 <NEXT> $ r19 = org roaringbitmap buffer mappeable array container r0 <NEXT> $ r21 = $ r20 lazyor $ r19 <NEXT> return $ r21 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ z1 = r0 instanceof org roaringbitmap buffer mappeable run container <NEXT> if $ z1 == 0 goto label6 <NEXT> $ z4 = r1 instanceof org roaringbitmap buffer mappeable array container <NEXT> if $ z4 == 0 goto label4 <NEXT> $ r17 = org roaringbitmap buffer mappeable run container r0 <NEXT> $ r16 = org roaringbitmap buffer mappeable array container r1 <NEXT> $ r18 = $ r17 lazyor $ r16 <NEXT> return $ r18 <NEXT> if $ z4 == 0 goto label4 <NEXT> label $ z5 = r1 instanceof org roaringbitmap buffer mappeable bitmap container <NEXT> if $ z5 == 0 goto label5 <NEXT> $ r14 = org roaringbitmap buffer mappeable bitmap container r1 <NEXT> $ r13 = org roaringbitmap buffer mappeable run container r0 <NEXT> $ r15 = $ r14 lazyor $ r13 <NEXT> return $ r15 <NEXT> if $ z5 == 0 goto label5 <NEXT> label $ r11 = org roaringbitmap buffer mappeable run container r1 <NEXT> r28 = org roaringbitmap buffer mappeable container r0 <NEXT> $ r12 = r28 or $ r11 <NEXT> return $ r12 <NEXT> if $ z1 == 0 goto label6 <NEXT> label $ z2 = r1 instanceof org roaringbitmap buffer mappeable array container <NEXT> if $ z2 == 0 goto label7 <NEXT> $ r9 = org roaringbitmap buffer mappeable bitmap container r0 <NEXT> $ r8 = org roaringbitmap buffer mappeable array container r1 <NEXT> $ r10 = $ r9 lazyor $ r8 <NEXT> return $ r10 <NEXT> if $ z2 == 0 goto label7 <NEXT> label $ z3 = r1 instanceof org roaringbitmap buffer mappeable bitmap container <NEXT> if $ z3 == 0 goto label8 <NEXT> $ r6 = org roaringbitmap buffer mappeable bitmap container r0 <NEXT> $ r5 = org roaringbitmap buffer mappeable bitmap container r1 <NEXT> $ r7 = $ r6 lazyor $ r5 <NEXT> return $ r7 <NEXT> if $ z3 == 0 goto label8 <NEXT> label $ r3 = org roaringbitmap buffer mappeable bitmap container r0 <NEXT> $ r2 = org roaringbitmap buffer mappeable run container r1 <NEXT> $ r4 = $ r3 lazyor $ r2 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = org roaringbitmap array container r0 <NEXT> $ i2 = r18 get cardinality <NEXT> $ i3 = r1 get cardinality <NEXT> i0 = $ i2 + $ i3 <NEXT> if i0 < = 4096 goto label8 <NEXT> r16 = new org roaringbitmap bitmap container <NEXT> specialinvoke r16 < init > <NEXT> i21 = 0 <NEXT> label $ i7 = r1 cardinality <NEXT> if i21 > = $ i7 goto label2 <NEXT> $ r11 = r1 content <NEXT> s22 = $ r11 [ i21 ] <NEXT> $ i17 = org roaringbitmap util to int unsigned s22 <NEXT> i23 = $ i17 > > > 6 <NEXT> $ r12 = r16 bitmap <NEXT> $ l19 = $ r12 [ i23 ] <NEXT> $ l18 = 1l < < s22 <NEXT> $ l20 = $ l19 ^ $ l18 <NEXT> $ r12 [ i23 ] = $ l20 <NEXT> i21 = i21 + 1 <NEXT> goto label1 <NEXT> if i21 > = $ i7 goto label2 <NEXT> label i24 = 0 <NEXT> label r19 = org roaringbitmap array container r0 <NEXT> $ i8 = r19 cardinality <NEXT> if i24 > = $ i8 goto label4 <NEXT> r20 = org roaringbitmap array container r0 <NEXT> $ r9 = r20 content <NEXT> s25 = $ r9 [ i24 ] <NEXT> $ i13 = org roaringbitmap util to int unsigned s25 <NEXT> i26 = $ i13 > > > 6 <NEXT> $ r10 = r16 bitmap <NEXT> $ l15 = $ r10 [ i26 ] <NEXT> $ l14 = 1l < < s25 <NEXT> $ l16 = $ l15 ^ $ l14 <NEXT> $ r10 [ i26 ] = $ l16 <NEXT> i24 = i24 + 1 <NEXT> goto label3 <NEXT> if i24 > = $ i8 goto label4 <NEXT> label r16 cardinality = 0 <NEXT> r14 = r16 bitmap <NEXT> i27 = lengthof r14 <NEXT> i28 = 0 <NEXT> label if i28 > = i27 goto label6 <NEXT> l1 = r14 [ i28 ] <NEXT> $ i10 = r16 cardinality <NEXT> $ i11 = java lang long bit count l1 <NEXT> $ i12 = $ i10 + $ i11 <NEXT> r16 cardinality = $ i12 <NEXT> i28 = i28 + 1 <NEXT> goto label5 <NEXT> label if i28 > = i27 goto label6 <NEXT> label $ i9 = r16 cardinality <NEXT> if $ i9 > 4096 goto label7 <NEXT> $ r8 = r16 to array container <NEXT> r21 = org roaringbitmap container $ r8 <NEXT> return r21 <NEXT> if $ i9 > 4096 goto label7 <NEXT> label r22 = org roaringbitmap container r16 <NEXT> return r22 <NEXT> if i0 < = 4096 goto label8 <NEXT> label r17 = new org roaringbitmap array container <NEXT> specialinvoke r17 < init > i0 <NEXT> r23 = org roaringbitmap array container r0 <NEXT> $ r4 = r23 content <NEXT> r24 = org roaringbitmap array container r0 <NEXT> $ i4 = r24 get cardinality <NEXT> $ r5 = r1 content <NEXT> $ i5 = r1 get cardinality <NEXT> $ r6 = r17 content <NEXT> $ i6 = org roaringbitmap util unsigned exclusive union2by2 $ r4 $ i4 $ r5 $ i5 $ r6 <NEXT> r17 cardinality = $ i6 <NEXT> r25 = org roaringbitmap container r17 <NEXT> return r25 <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed atom category r0 <NEXT> $ r1 = r2 label <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed atom category r0 <NEXT> $ r1 = r2 scheme <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed atom category r0 <NEXT> r2 scheme = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed atom content r0 <NEXT> $ r1 = r2 mode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com rometools utils date copy r1 <NEXT> r3 = com rometools rome feed atom entry r0 <NEXT> r3 publish = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed atom entry r0 <NEXT> r2 summary = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com rometools rome feed atom entry r0 <NEXT> $ r2 = r6 title <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new com rometools rome feed atom content <NEXT> specialinvoke r5 < init > <NEXT> r7 = com rometools rome feed atom entry r0 <NEXT> r7 title = r5 <NEXT> label r8 = com rometools rome feed atom entry r0 <NEXT> $ r3 = r8 title <NEXT> $ r3 set value r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com rometools utils date copy r1 <NEXT> r3 = com rometools rome feed atom entry r0 <NEXT> r3 update = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed atom fee r0 <NEXT> r2 other link = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = com rometools rome feed atom fee r0 <NEXT> $ r1 = r3 contributor <NEXT> $ r2 = com rometools utils list create when null $ r1 <NEXT> r4 = com rometools rome feed atom fee r0 <NEXT> r4 contributor = $ r2 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed atom fee r0 <NEXT> r2 module = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed atom generator r0 <NEXT> r2 version = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed atom link r0 <NEXT> $ r1 = r2 hreflang <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed module d c module impl r0 <NEXT> r2 creator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = com rometools rome feed module d c module impl r0 <NEXT> $ r1 = r3 type <NEXT> $ r2 = com rometools utils list create when null $ r1 <NEXT> r4 = com rometools rome feed module d c module impl r0 <NEXT> r4 type = $ r2 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com rometools utils list create r1 <NEXT> r3 = com rometools rome feed module d c module impl r0 <NEXT> r3 language = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed module d c module impl r0 <NEXT> r2 right = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = com rometools rome feed module d c module impl r0 <NEXT> $ r1 = r4 right <NEXT> $ r2 = com rometools utils list first entry $ r1 <NEXT> $ r3 = java lang string $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com rometools utils list create r1 <NEXT> r3 = com rometools rome feed module d c module impl r0 <NEXT> r3 right = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com rometools rome feed module sy module impl r0 <NEXT> $ i0 = r1 update frequency <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com rometools rome feed module sy module impl r0 <NEXT> r1 update frequency = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r channel r0 <NEXT> $ r1 = r2 web master <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = com rometools rome feed r channel r0 <NEXT> $ r1 = r3 skip hour <NEXT> $ r2 = com rometools utils list create when null $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r3 = com rometools rome feed r channel r0 <NEXT> $ r1 = r3 skip day <NEXT> $ r2 = com rometools utils list create when null $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed r channel r0 <NEXT> r2 category = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed r channel r0 <NEXT> r2 generator = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r cloud r0 <NEXT> $ r1 = r2 domain <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r cloud r0 <NEXT> $ r1 = r2 path <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed r content r0 <NEXT> r2 value = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r enclosure r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r guid r0 <NEXT> $ r1 = r2 value <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r image r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed r image r0 <NEXT> r2 width = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r image r0 <NEXT> $ r1 = r2 height <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r item r0 <NEXT> $ r1 = r2 source <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed r item r0 <NEXT> r2 guid = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed r item r0 <NEXT> r2 module = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com rometools utils date copy r1 <NEXT> r3 = com rometools rome feed r item r0 <NEXT> r3 expiration date = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed r text input r0 <NEXT> $ r1 = r2 name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com rometools rome feed synd synd entry impl r0 <NEXT> $ r2 = specialinvoke r3 get d c module <NEXT> $ r2 set date r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = com rometools rome feed synd synd entry impl r0 <NEXT> $ r1 = r3 update date <NEXT> $ r2 = com rometools utils date copy $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = new java util date <NEXT> $ l0 = r1 get time <NEXT> specialinvoke r3 < init > $ l0 <NEXT> r4 = com rometools rome feed synd synd entry impl r0 <NEXT> r4 update date = r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome feed synd synd feed impl r0 <NEXT> $ r1 = r2 encode <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = com rometools rome feed synd synd feed impl r0 <NEXT> $ r1 = r4 description <NEXT> if $ r1 == null goto label1 <NEXT> r5 = com rometools rome feed synd synd feed impl r0 <NEXT> $ r2 = r5 description <NEXT> $ r3 = $ r2 get value <NEXT> return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = com rometools rome feed synd synd feed impl r0 <NEXT> $ r2 = r6 description <NEXT> if $ r2 ! = null goto label1 <NEXT> r5 = new com rometools rome feed synd synd content impl <NEXT> specialinvoke r5 < init > <NEXT> r7 = com rometools rome feed synd synd feed impl r0 <NEXT> r8 = com rometools rome feed synd synd content r5 <NEXT> r7 description = r8 <NEXT> label r9 = com rometools rome feed synd synd feed impl r0 <NEXT> $ r3 = r9 description <NEXT> $ r3 set value r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com rometools rome feed synd synd feed impl r0 <NEXT> $ r2 = specialinvoke r3 get d c module <NEXT> $ r2 set right r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com rometools rome feed synd synd feed impl r0 <NEXT> $ r2 = specialinvoke r4 get d c module <NEXT> $ r3 = com rometools rome feed synd synd category list facade convert element synd category to subject r1 <NEXT> $ r2 set subject $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed wire feed r0 <NEXT> r2 feed type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com rometools rome feed wire feed r0 <NEXT> r2 encode = r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = com rometools rome io impl date parser additional_masks <NEXT> $ i0 = lengthof $ r2 <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ r3 = com rometools rome io impl date parser additional_masks <NEXT> r4 = com rometools rome io impl date parser parse use mask $ r3 r0 r1 <NEXT> if r4 == null goto label1 <NEXT> return r4 <NEXT> if r4 == null goto label1 <NEXT> label r5 = com rometools rome io impl date parser parse w3 c date time r0 r1 <NEXT> if r5 ! = null goto label2 <NEXT> r5 = com rometools rome io impl date parser parse r f c822 r0 r1 <NEXT> label return r5 <END>
<BEG> r0 = @ this <NEXT> $ r1 = com rometools rome io impl d c module generator namespaces <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = new java util array list <NEXT> specialinvoke r9 < init > <NEXT> r4 = r2 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r7 = r4 next <NEXT> r5 = java lang string $ r7 <NEXT> r10 = com rometools rome io impl d c module generator r0 <NEXT> $ r8 = r10 generate simple element r1 r5 <NEXT> r9 add $ r8 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return r9 <END>
<BEG> r0 = @ this <NEXT> return \ `` text input\ `` <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = com rometools rome io synd feed input r0 <NEXT> $ r1 = r2 feed input <NEXT> $ r1 set xml healer on z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = com rometools rome io synd feed input r0 <NEXT> $ r1 = r2 feed input <NEXT> $ z0 = $ r1 get xml healer on <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = com rometools rome io synd feed output r0 <NEXT> $ r2 = r5 feed output <NEXT> $ r3 = r1 create wire feed <NEXT> $ r4 = $ r2 output j dom $ r3 <NEXT> return $ r4 <END>
<BEG> $ r0 = com rometools rome io wire feed output get fee generator <NEXT> $ r1 = $ r0 get support feed type <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = lengthof r0 <NEXT> i1 = 0 <NEXT> label if i1 > = i0 goto label3 <NEXT> r2 = r0 [ i1 ] <NEXT> if r2 == null goto label2 <NEXT> return r2 <NEXT> if r2 == null goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> label if i1 > = i0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ parameter0 <NEXT> rx completable require non null r0 <NEXT> $ r2 = rx observable from r0 <NEXT> $ r3 = rx completable from observable $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r4 = rx completable r0 <NEXT> $ r3 = r4 delay l0 r1 r2 0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> rx completable require non null r2 <NEXT> $ r4 = rx scheduler scheduler computation <NEXT> r6 = rx completable r0 <NEXT> $ r5 = r6 timeout0 l0 r1 $ r4 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> rx completable require non null r2 <NEXT> $ r4 = rx scheduler scheduler computation <NEXT> r6 = rx completable r0 <NEXT> $ r5 = r6 timeout0 l0 r1 $ r4 r2 <NEXT> return $ r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = rx internal util utility function identity <NEXT> rx internal operator backpressure utils post complete do r0 r1 r2 $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = rx internal operator defer scalar subscriber r0 <NEXT> $ r1 = r2 actual <NEXT> $ r1 on complete <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = rx internal operator defer scalar subscriber r0 <NEXT> r3 setup downstream <NEXT> r1 unsafe subscribe r0 <NEXT> return <END>
<BEG> $ r0 = rx internal operator never observable holder never <NEXT> return $ r0 <END>
<BEG> r0 = rx plugins rx java hook get on generic schedule executor service <NEXT> if r0 ! = null goto label1 <NEXT> $ r3 = rx internal scheduler generic schedule executor service factory create default <NEXT> return $ r3 <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = r0 call <NEXT> $ r2 = java util concurrent schedule executor service $ r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = rx internal scheduler new thread worker executor <NEXT> $ r1 remove r0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get <NEXT> r5 = java lang throwable $ r1 <NEXT> $ r2 = rx internal util exception utils terminate <NEXT> if r5 == $ r2 goto label1 <NEXT> $ r3 = rx internal util exception utils terminate <NEXT> $ r4 = r0 get and set $ r3 <NEXT> r5 = java lang throwable $ r4 <NEXT> label return r5 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new rx internal util internal observable utils $ replay supplier no params <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = rx function func0 r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> label r7 = r0 get declare field r1 <NEXT> $ r3 = rx internal util unsafe unsafe access unsafe <NEXT> $ l0 = $ r3 object field offset r7 <NEXT> label return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = rx notification r0 <NEXT> $ z0 = r2 be on error <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = rx notification r0 <NEXT> $ r1 = r3 throwable <NEXT> if $ r1 == null goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = rx internal util scalar synchronous observable create r0 <NEXT> r2 = rx observable $ r1 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r12 = new java util array list <NEXT> specialinvoke r12 < init > <NEXT> r3 = r0 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r11 = r3 next <NEXT> r4 = rx observable $ r11 <NEXT> r12 add r4 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i0 = r12 size <NEXT> $ r6 = newarray rx observable [ $ i0 ] <NEXT> $ r7 = r12 to array $ r6 <NEXT> $ r8 = rx observable just $ r7 <NEXT> r13 = new rx internal operator operator zip <NEXT> specialinvoke r13 < init > r1 <NEXT> r14 = rx observable $ operator r13 <NEXT> $ r10 = $ r8 lift r14 <NEXT> return $ r10 <END>
<BEG> r0 = @ this <NEXT> r2 = rx observable r0 <NEXT> $ r1 = rx internal operator cache observable from r2 <NEXT> r3 = rx observable $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = rx scheduler scheduler computation <NEXT> r4 = rx observable r0 <NEXT> $ r3 = r4 delay subscription l0 r1 $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ r1 = rx observable from r0 <NEXT> $ r2 = rx internal util utility function identity <NEXT> $ r3 = $ r1 concat map eager $ r2 i0 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = rx observable r0 <NEXT> $ r2 = r4 take 1 <NEXT> $ r3 = $ r2 single or default r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = rx internal operator operator on backpressure late instance <NEXT> r3 = rx observable r0 <NEXT> r4 = rx observable $ operator $ r1 <NEXT> $ r2 = r3 lift r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> $ r1 = rx internal operator operator serialize instance <NEXT> r3 = rx observable r0 <NEXT> r4 = rx observable $ operator $ r1 <NEXT> $ r2 = r3 lift r4 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = rx observable r0 <NEXT> $ r2 = r3 debounce l0 r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = rx scheduler scheduler computation <NEXT> r5 = rx observable r0 <NEXT> $ r4 = r5 timeout l0 r1 r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r6 = new rx internal operator operator timeout <NEXT> specialinvoke r6 < init > l0 r1 r2 r3 <NEXT> r7 = rx observable r0 <NEXT> r8 = rx observable $ operator r6 <NEXT> $ r5 = r7 lift r8 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = rx observable r0 <NEXT> $ r1 = r2 window i0 i0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = rx internal observer assertable subscriber observable create 9223372036854775807l <NEXT> r3 = rx observable r0 <NEXT> r4 = rx observer r1 <NEXT> r3 subscribe r4 <NEXT> r5 = rx observer assertable subscriber r1 <NEXT> return r5 <END>
<BEG> $ r0 = new rx observer test subscriber <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> $ z0 = rx plugins rx java hook lockdown <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label rx plugins rx java hook init <NEXT> rx plugins rx java hook on computation scheduler = null <NEXT> rx plugins rx java hook on i o scheduler = null <NEXT> rx plugins rx java hook on new thread scheduler = null <NEXT> rx plugins rx java hook on generic schedule executor service = null <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = rx plugins rx java hook on observable subscribe error <NEXT> if r1 == null goto label1 <NEXT> $ r2 = r1 call r0 <NEXT> $ r3 = java lang throwable $ r2 <NEXT> return $ r3 <NEXT> if r1 == null goto label1 <NEXT> label return r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = rx plugins rx java hook lockdown <NEXT> if $ z0 == 0 goto label1 <NEXT> return <NEXT> if $ z0 == 0 goto label1 <NEXT> label rx plugins rx java hook on generic schedule executor service = r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> $ r3 = rx single a observable r0 <NEXT> $ r4 = rx single a observable r1 <NEXT> $ r5 = rx single a observable r2 <NEXT> $ r6 = rx observable merge $ r3 $ r4 $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r5 = @ parameter5 <NEXT> r6 = @ parameter6 <NEXT> $ r7 = newarray rx single [ 6 ] <NEXT> $ r7 [ 0 ] = r0 <NEXT> $ r7 [ 1 ] = r1 <NEXT> $ r7 [ 2 ] = r2 <NEXT> $ r7 [ 3 ] = r3 <NEXT> $ r7 [ 4 ] = r4 <NEXT> $ r7 [ 5 ] = r5 <NEXT> r10 = new rx single $ 7 <NEXT> specialinvoke r10 < init > r6 <NEXT> r11 = rx function func n r10 <NEXT> $ r9 = rx internal operator single operator zip zip $ r7 r11 <NEXT> return $ r9 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = new rx internal operator single take until completable <NEXT> r6 = rx single r0 <NEXT> $ r3 = r6 on subscribe <NEXT> specialinvoke r5 < init > $ r3 r1 <NEXT> r7 = rx single $ on subscribe r5 <NEXT> $ r4 = rx single create r7 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r2 = rx scheduler scheduler computation <NEXT> r4 = rx single r0 <NEXT> $ r3 = r4 timeout l0 r1 null $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon augment source r0 <NEXT> $ r1 = r3 option <NEXT> $ r2 = $ r1 get top level element <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon augment source r0 <NEXT> $ r1 = r2 option <NEXT> $ z0 = $ r1 be x include aware set <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon augment source r0 <NEXT> $ r1 = r2 option <NEXT> $ z0 = $ r1 be x include aware <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon augment source r0 <NEXT> $ r1 = r3 option <NEXT> $ r2 = $ r1 get error listener <NEXT> return $ r2 <END>
<BEG> i0 = @ parameter0 <NEXT> if 56320 > i0 goto label1 <NEXT> if i0 > 57343 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if i0 > 57343 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 > = 65536 goto label2 <NEXT> $ r0 = net sf saxon charcode x m l character data data <NEXT> $ b1 = $ r0 [ i0 ] <NEXT> $ b2 = $ b1 & 1 <NEXT> if $ b2 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label4 <NEXT> label return $ z0 <NEXT> if $ b2 == 0 goto label1 <NEXT> label $ z0 = 0 <NEXT> if i0 > = 65536 goto label2 <NEXT> label if 65536 > i0 goto label3 <NEXT> if i0 > 1114111 goto label3 <NEXT> label $ z0 = 0 <END>
<BEG> i0 = @ parameter0 <NEXT> if i0 > = 65536 goto label2 <NEXT> $ r0 = net sf saxon charcode x m l character data data <NEXT> $ b1 = $ r0 [ i0 ] <NEXT> $ b2 = $ b1 & 8 <NEXT> if $ b2 == 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label4 <NEXT> label return $ z0 <NEXT> if $ b2 == 0 goto label1 <NEXT> label $ z0 = 0 <NEXT> if i0 > = 65536 goto label2 <NEXT> label if 65536 > i0 goto label3 <NEXT> if i0 > 1114111 goto label3 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon controller r0 <NEXT> $ r1 = r3 initial mode <NEXT> $ r2 = $ r1 get clark name <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon controller r0 <NEXT> $ z0 = r1 there have be an explicit result document <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r5 = net sf saxon controller r0 <NEXT> $ r2 = r5 reusable sequence outputter <NEXT> if $ r2 == null goto label1 <NEXT> r6 = net sf saxon controller r0 <NEXT> r1 = r6 reusable sequence outputter <NEXT> r7 = net sf saxon controller r0 <NEXT> r7 reusable sequence outputter = null <NEXT> return r1 <NEXT> if $ r2 == null goto label1 <NEXT> label r4 = new net sf saxon event sequence outputter <NEXT> r8 = net sf saxon controller r0 <NEXT> specialinvoke r4 < init > r8 i0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon controller r0 <NEXT> $ r1 = r2 executable <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon controller r0 <NEXT> r3 = net sf saxon om item r1 <NEXT> r2 initial context item = r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon controller r0 <NEXT> $ r1 = r2 bindery <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon controller r0 <NEXT> r2 rule manager = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon controller r0 <NEXT> r1 trace pause = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon controller r0 <NEXT> $ r1 = r2 path map <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon event builder r0 <NEXT> r1 line number = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon event builder r0 <NEXT> $ z0 = r1 time <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon event content handler proxy r0 <NEXT> $ l0 = r1 current location id <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = net sf saxon event content handler proxy locator r0 <NEXT> $ r2 = r4 parent <NEXT> r1 = $ r2 get location provider <NEXT> if r1 ! = null goto label1 <NEXT> return -1 <NEXT> if r1 ! = null goto label1 <NEXT> label r5 = net sf saxon event content handler proxy locator r0 <NEXT> $ r3 = r5 parent <NEXT> $ l0 = $ r3 get current location id <NEXT> $ i1 = r1 get line number $ l0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon event emitter r0 <NEXT> $ r1 = r2 output stream <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon event name pool converter r0 <NEXT> r2 next receiver = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon event pipeline configuration r0 <NEXT> $ z0 = r1 use xsi schema location <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon event receive content handler r0 <NEXT> r2 pipe = null <NEXT> r3 = net sf saxon event receive content handler r0 <NEXT> r3 pool = null <NEXT> r4 = net sf saxon event receive content handler r0 <NEXT> r4 receiver = null <NEXT> r5 = net sf saxon event receive content handler r0 <NEXT> r5 ignore ignorable = 0 <NEXT> r6 = net sf saxon event receive content handler r0 <NEXT> r6 retain d t d attribute type = 0 <NEXT> r7 = net sf saxon event receive content handler r0 <NEXT> r7 char use = 0 <NEXT> r8 = net sf saxon event receive content handler r0 <NEXT> $ r1 = r8 slice <NEXT> $ r1 set length 0 <NEXT> r9 = net sf saxon event receive content handler r0 <NEXT> r9 namespaces use = 0 <NEXT> r10 = net sf saxon event receive content handler r0 <NEXT> r10 locator = null <NEXT> r11 = net sf saxon event receive content handler r0 <NEXT> r11 allow disable output escape = 0 <NEXT> r12 = net sf saxon event receive content handler r0 <NEXT> r12 escape disable = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = net sf saxon event sequence writer r0 <NEXT> $ r1 = r5 builder <NEXT> $ z0 = $ r1 instanceof net sf saxon tinytree tiny builder <NEXT> if $ z0 == 0 goto label1 <NEXT> r6 = net sf saxon event sequence writer r0 <NEXT> $ r2 = r6 builder <NEXT> $ r3 = net sf saxon tinytree tiny builder $ r2 <NEXT> $ r4 = $ r3 get tree <NEXT> $ i0 = $ r4 get number of node <NEXT> if $ i0 > = 20000 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ i0 > = 20000 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon event sequence writer r0 <NEXT> r2 in start tag = 0 <NEXT> r3 = net sf saxon event sequence writer r0 <NEXT> $ r1 = r3 outputter <NEXT> $ r1 start content <NEXT> r4 = net sf saxon event sequence writer r0 <NEXT> r4 previous atomic = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r4 = new net sf saxon event meta tag adjuster <NEXT> specialinvoke $ r4 < init > <NEXT> $ r4 set pipeline configuration r1 <NEXT> $ r4 set output property r2 <NEXT> $ r4 set be x h t m l 1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon event start tag buffer r0 <NEXT> $ r1 = r2 buffer attribute <NEXT> $ i0 = $ r1 get length <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> specialinvoke r0 set system id r1 <NEXT> r3 = net sf saxon event transformer receiver r0 <NEXT> $ r2 = r3 controller <NEXT> $ r2 set base output u r i r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> r3 = new java lang illegal argument exception <NEXT> specialinvoke r3 < init > \ `` result must not be null\ `` <NEXT> throw r3 <NEXT> if r1 ! = null goto label1 <NEXT> label r4 = net sf saxon event transformer receiver r0 <NEXT> r4 result = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = net sf saxon event tree receiver r0 <NEXT> $ r1 = r5 next receiver <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java lang illegal state exception <NEXT> specialinvoke r4 < init > \ `` tree receiver open no underlie receiver provided\ `` <NEXT> throw r4 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r6 = net sf saxon event tree receiver r0 <NEXT> $ r2 = r6 next receiver <NEXT> $ r2 open <NEXT> r7 = net sf saxon event tree receiver r0 <NEXT> r7 previous atomic = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i4 = 0 <NEXT> label $ i2 = r1 length <NEXT> if i4 > = $ i2 goto label5 <NEXT> c0 = r1 char at i4 <NEXT> if c0 < = 127 goto label4 <NEXT> $ z0 = net sf saxon charcode utf16 be high surrogate c0 <NEXT> if $ z0 == 0 goto label3 <NEXT> i4 = i4 + 1 <NEXT> $ c3 = r1 char at i4 <NEXT> i1 = net sf saxon charcode utf16 combine pair c0 $ c3 <NEXT> r4 = net sf saxon event x m l emitter r0 <NEXT> $ r3 = r4 character set <NEXT> $ z2 = $ r3 in charset i1 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> return i1 <NEXT> if $ z2 ! = 0 goto label2 <NEXT> label goto label4 <NEXT> label i4 = i4 + 1 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r5 = net sf saxon event x m l emitter r0 <NEXT> $ r2 = r5 character set <NEXT> $ z1 = $ r2 in charset c0 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> return c0 <NEXT> if i4 > = $ i2 goto label5 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof java lang string <NEXT> if $ z0 == 0 goto label1 <NEXT> r12 = net sf saxon event x m l emitter r0 <NEXT> $ r11 = r12 writer <NEXT> $ r10 = java lang string r1 <NEXT> $ r11 write $ r10 <NEXT> goto label5 <NEXT> label return <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = r1 instanceof net sf saxon tinytree char slice <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r9 = net sf saxon tinytree char slice r1 <NEXT> r13 = net sf saxon event x m l emitter r0 <NEXT> $ r8 = r13 writer <NEXT> $ r9 write $ r8 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = r1 instanceof net sf saxon om fast string buffer <NEXT> if $ z2 == 0 goto label3 <NEXT> $ r7 = net sf saxon om fast string buffer r1 <NEXT> r14 = net sf saxon event x m l emitter r0 <NEXT> $ r6 = r14 writer <NEXT> $ r7 write $ r6 <NEXT> if $ z2 == 0 goto label3 <NEXT> label $ z3 = r1 instanceof net sf saxon tinytree compress whitespace <NEXT> if $ z3 == 0 goto label4 <NEXT> $ r5 = net sf saxon tinytree compress whitespace r1 <NEXT> r15 = net sf saxon event x m l emitter r0 <NEXT> $ r4 = r15 writer <NEXT> $ r5 write $ r4 <NEXT> if $ z3 == 0 goto label4 <NEXT> label r16 = net sf saxon event x m l emitter r0 <NEXT> $ r2 = r16 writer <NEXT> $ r3 = r1 to string <NEXT> $ r2 write $ r3 <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > \ `` get another\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = net sf saxon evpull start element event r0 <NEXT> r1 name code = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r17 = net sf saxon evpull start element event r0 <NEXT> $ r4 = r17 pipe <NEXT> $ r5 = $ r4 get configuration <NEXT> r1 = $ r5 get name pool <NEXT> r18 = net sf saxon evpull start element event r0 <NEXT> $ i2 = r18 name code <NEXT> r19 = net sf saxon evpull start element event r0 <NEXT> $ i3 = specialinvoke r19 fixup r1 $ i2 0 <NEXT> r20 = net sf saxon evpull start element event r0 <NEXT> r20 name code = $ i3 <NEXT> r21 = net sf saxon evpull start element event r0 <NEXT> $ r6 = r21 attribute <NEXT> if $ r6 == null goto label3 <NEXT> i6 = 0 <NEXT> label r22 = net sf saxon evpull start element event r0 <NEXT> $ r7 = r22 attribute <NEXT> $ i4 = $ r7 size <NEXT> if i6 > = $ i4 goto label3 <NEXT> r23 = net sf saxon evpull start element event r0 <NEXT> $ r8 = r23 attribute <NEXT> $ r9 = $ r8 get i6 <NEXT> r2 = net sf saxon om node info $ r9 <NEXT> i0 = r2 get name code <NEXT> r24 = net sf saxon evpull start element event r0 <NEXT> i1 = specialinvoke r24 fixup r1 i0 i6 <NEXT> if i0 == i1 goto label2 <NEXT> r16 = new net sf saxon om orphan <NEXT> $ r11 = r2 get configuration <NEXT> specialinvoke r16 < init > $ r11 <NEXT> r16 set node kind 2 <NEXT> r16 set name code i1 <NEXT> $ r12 = r2 get string value <NEXT> r16 set string value $ r12 <NEXT> $ i5 = r2 get type annotation <NEXT> r16 set type annotation $ i5 <NEXT> $ r13 = r2 get system id <NEXT> r16 set system id $ r13 <NEXT> r25 = net sf saxon evpull start element event r0 <NEXT> $ r14 = r25 attribute <NEXT> $ r14 set i6 r16 <NEXT> label i6 = i6 + 1 <NEXT> goto label1 <NEXT> if i6 > = $ i4 goto label3 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon evpull stax to event bridge r0 <NEXT> r2 reader = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = net sf saxon expr atomic sequence converter r0 <NEXT> $ r3 = r11 operand <NEXT> $ r4 = r1 simplify $ r3 <NEXT> r12 = net sf saxon expr atomic sequence converter r0 <NEXT> r12 operand = $ r4 <NEXT> r13 = net sf saxon expr atomic sequence converter r0 <NEXT> $ r5 = r13 operand <NEXT> $ z0 = $ r5 instanceof net sf saxon expr literal <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r6 = r1 get static context <NEXT> $ r7 = $ r6 make early evaluation context <NEXT> r14 = net sf saxon expr atomic sequence converter r0 <NEXT> $ r8 = r14 iterate $ r7 <NEXT> r2 = net sf saxon value sequence extent make sequence extent $ r8 <NEXT> $ r9 = net sf saxon value value a value r2 <NEXT> $ r10 = net sf saxon expr literal make literal $ r9 <NEXT> r15 = net sf saxon expr expression $ r10 <NEXT> return r15 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r16 = net sf saxon expr expression r0 <NEXT> return r16 <END>
<BEG> i3 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> if i3 == 632 goto label1 <NEXT> if i3 ! = 15 goto label2 <NEXT> label return 1 <NEXT> if i3 ! = 15 goto label2 <NEXT> label if i3 ! = 635 goto label3 <NEXT> i3 = 517 <NEXT> label $ r1 = net sf saxon expr cast expression cast table <NEXT> $ r2 = $ r1 get i3 <NEXT> $ r3 = int [ ] $ r2 <NEXT> r0 = int [ ] $ r3 <NEXT> if r0 ! = null goto label4 <NEXT> return 0 <NEXT> if r0 ! = null goto label4 <NEXT> label i4 = 0 <NEXT> label $ i1 = lengthof r0 <NEXT> if i4 > = $ i1 goto label7 <NEXT> $ i2 = r0 [ i4 ] <NEXT> if $ i2 ! = i0 goto label6 <NEXT> return 1 <NEXT> if $ i2 ! = i0 goto label6 <NEXT> label i4 = i4 + 1 <NEXT> goto label5 <NEXT> if i4 > = $ i1 goto label7 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = net sf saxon expr cast expression r0 <NEXT> $ r2 = r3 target type <NEXT> r4 = net sf saxon type item type $ r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon expr collation map r0 <NEXT> r2 default collation name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = new net sf saxon expr context item expression <NEXT> specialinvoke r4 < init > <NEXT> r5 = net sf saxon expr context item expression r0 <NEXT> $ r3 = r5 item type <NEXT> r4 item type = $ r3 <NEXT> r6 = net sf saxon expr expression r4 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r4 = new net sf saxon expr pair iterator <NEXT> r5 = net sf saxon expr assignation r0 <NEXT> $ r3 = r5 sequence <NEXT> r6 = net sf saxon expr assignation r0 <NEXT> $ r2 = r6 action <NEXT> specialinvoke r4 < init > $ r3 $ r2 <NEXT> r7 = java util iterator r4 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = new java lang unsupported operation exception <NEXT> $ r4 = new java lang string buffer <NEXT> specialinvoke $ r4 < init > <NEXT> $ r5 = $ r4 append \ `` expression \ `` <NEXT> $ r6 = r0 get class <NEXT> $ r7 = $ r5 append $ r6 <NEXT> $ r8 = $ r7 append \ `` be not an updating expression\ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r3 < init > $ r9 <NEXT> throw $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon expr expression r0 <NEXT> $ r1 = r2 container <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return <NEXT> if r1 ! = null goto label1 <NEXT> label r5 = net sf saxon expr expression r0 <NEXT> $ r2 = r5 container <NEXT> if $ r2 ! = null goto label2 <NEXT> $ r4 = r1 container <NEXT> r6 = net sf saxon expr expression r0 <NEXT> r6 container = $ r4 <NEXT> goto label3 <NEXT> label r8 = net sf saxon expr expression r0 <NEXT> $ i0 = r8 location id <NEXT> if $ i0 ! = -1 goto label4 <NEXT> r9 = net sf saxon expr expression r0 <NEXT> net sf saxon expr expression tool copy location info r1 r9 <NEXT> goto label5 <NEXT> label r11 = net sf saxon expr expression r0 <NEXT> r11 reset local static property <NEXT> if $ i0 ! = -1 goto label4 <NEXT> label $ i1 = r1 location id <NEXT> if $ i1 ! = -1 goto label5 <NEXT> r10 = net sf saxon expr expression r0 <NEXT> net sf saxon expr expression tool copy location info r10 r1 <NEXT> if $ r2 ! = null goto label2 <NEXT> label r7 = net sf saxon expr expression r0 <NEXT> $ r3 = r7 container <NEXT> r1 set container $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon expr expression r0 <NEXT> $ i0 = r1 compute dependency <NEXT> r2 = net sf saxon expr expression r0 <NEXT> $ i1 = r2 compute cardinality <NEXT> $ i2 = $ i0 | $ i1 <NEXT> r3 = net sf saxon expr expression r0 <NEXT> $ i3 = r3 compute special property <NEXT> $ i4 = $ i2 | $ i3 <NEXT> r4 = net sf saxon expr expression r0 <NEXT> r4 static property = $ i4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return 2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r6 = new net sf saxon trans x path exception <NEXT> specialinvoke r6 < init > r1 r0 <NEXT> r6 set be type error 1 <NEXT> r6 set error code r2 <NEXT> r6 set x path context r3 <NEXT> r7 = java lang throwable r6 <NEXT> throw r7 <END>
<BEG> r0 = @ this <NEXT> r4 = net sf saxon expr expression r0 <NEXT> $ i0 = r4 location id <NEXT> if $ i0 ! = -1 goto label1 <NEXT> return null <NEXT> if $ i0 ! = -1 goto label1 <NEXT> label r5 = net sf saxon expr expression r0 <NEXT> r1 = r5 get executable <NEXT> if r1 ! = null goto label2 <NEXT> label r2 = r1 get location map <NEXT> if r2 ! = null goto label3 <NEXT> label r6 = net sf saxon expr expression r0 <NEXT> $ i1 = r6 location id <NEXT> $ l2 = long $ i1 <NEXT> $ r3 = r2 get system id $ l2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon expr expression visitor r0 <NEXT> $ r1 = r2 static context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon expr expression visitor r0 <NEXT> r2 static context = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = specialinvoke r0 optimize r1 r2 <NEXT> if r3 ! = r0 goto label2 <NEXT> $ r5 = r1 get configuration <NEXT> r4 = $ r5 get type hierarchy <NEXT> r17 = net sf saxon expr atomizer r0 <NEXT> $ r6 = r17 operand <NEXT> $ r7 = $ r6 get item type r4 <NEXT> $ r8 = net sf saxon type build in atomic type any_atomic <NEXT> r18 = net sf saxon type item type $ r8 <NEXT> $ z0 = r4 be sub type $ r7 r18 <NEXT> if $ z0 == 0 goto label1 <NEXT> r19 = net sf saxon expr atomizer r0 <NEXT> $ r16 = r19 operand <NEXT> return $ r16 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r20 = net sf saxon expr atomizer r0 <NEXT> $ r9 = r20 operand <NEXT> $ z1 = $ r9 instanceof net sf saxon instruct value of <NEXT> if $ z1 == 0 goto label2 <NEXT> r21 = net sf saxon expr atomizer r0 <NEXT> $ r10 = r21 operand <NEXT> $ r11 = net sf saxon instruct value of $ r10 <NEXT> $ i0 = $ r11 get option <NEXT> $ i1 = $ i0 & 1 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> r22 = net sf saxon expr atomizer r0 <NEXT> $ r12 = r22 operand <NEXT> $ r13 = net sf saxon instruct value of $ r12 <NEXT> $ r14 = r1 get static context <NEXT> $ r15 = $ r13 convert to string join $ r14 <NEXT> return $ r15 <NEXT> if $ i1 ! = 0 goto label2 <NEXT> label return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon expr for expression r0 <NEXT> $ r1 = r2 position variable <NEXT> if $ r1 ! = null goto label1 <NEXT> $ b0 = 1 <NEXT> goto label2 <NEXT> label return $ b0 <NEXT> if $ r1 ! = null goto label1 <NEXT> label $ b0 = 2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = net sf saxon expr for expression r0 <NEXT> $ r4 = r9 sequence <NEXT> r2 = $ r4 iterate r1 <NEXT> i3 = 1 <NEXT> r10 = net sf saxon expr for expression r0 <NEXT> i0 = r10 get local slot number <NEXT> i4 = -1 <NEXT> r11 = net sf saxon expr for expression r0 <NEXT> $ r5 = r11 position variable <NEXT> if $ r5 == null goto label1 <NEXT> r12 = net sf saxon expr for expression r0 <NEXT> $ r8 = r12 position variable <NEXT> i4 = $ r8 get local slot number <NEXT> label r3 = r2 next <NEXT> if r3 ! = null goto label2 <NEXT> goto label4 <NEXT> label return <NEXT> if r3 ! = null goto label2 <NEXT> label r13 = net sf saxon om value representation r3 <NEXT> r1 set local variable i0 r13 <NEXT> if i4 < 0 goto label3 <NEXT> $ i1 = i3 <NEXT> i3 = i3 + 1 <NEXT> $ l2 = long $ i1 <NEXT> $ r7 = net sf saxon value int64 value make integer value $ l2 <NEXT> r14 = net sf saxon om value representation $ r7 <NEXT> r1 set local variable i4 r14 <NEXT> label r15 = net sf saxon expr for expression r0 <NEXT> $ r6 = r15 action <NEXT> $ r6 process r1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon expr iterate instr r0 <NEXT> $ r1 = r3 action <NEXT> $ i0 = $ r1 get special property <NEXT> r4 = net sf saxon expr iterate instr r0 <NEXT> $ r2 = r4 finally exp <NEXT> $ i1 = $ r2 get special property <NEXT> $ i2 = $ i0 & $ i1 <NEXT> $ i3 = $ i2 & 4194304 <NEXT> if $ i3 ! = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i3 ! = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = net sf saxon expr literal r0 <NEXT> $ r5 = r6 value <NEXT> r2 = $ r5 iterate <NEXT> r3 = r1 get receiver <NEXT> label r4 = r2 next <NEXT> if r4 ! = null goto label2 <NEXT> goto label3 <NEXT> label return <NEXT> if r4 ! = null goto label2 <NEXT> label r3 append r4 0 2 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon expr local variable reference r0 <NEXT> $ i0 = r1 slot number <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r4 = net sf saxon expr mono iterator r0 <NEXT> $ z0 = r4 go <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = new java util no such element exception <NEXT> specialinvoke r3 < init > <NEXT> throw r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r5 = net sf saxon expr mono iterator r0 <NEXT> r5 go = 1 <NEXT> r6 = net sf saxon expr mono iterator r0 <NEXT> $ r1 = r6 thing <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = net sf saxon expr optimizer r0 <NEXT> $ r3 = r5 config <NEXT> r2 = $ r3 get type hierarchy <NEXT> $ r4 = r1 get item type r2 <NEXT> $ z0 = $ r4 be atomic type <NEXT> if $ z0 == 0 goto label1 <NEXT> return r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if i0 ! = 1 goto label1 <NEXT> r5 = new net sf saxon value closure <NEXT> specialinvoke r5 < init > <NEXT> r7 = net sf saxon value value r5 <NEXT> return r7 <NEXT> if i0 ! = 1 goto label1 <NEXT> label r6 = new net sf saxon value memo closure <NEXT> specialinvoke r6 < init > <NEXT> r8 = net sf saxon value value r6 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> z0 = @ parameter2 <NEXT> r3 = net sf saxon expr expression r1 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = r0 get external object model <NEXT> i1 = 0 <NEXT> label $ i0 = r2 size <NEXT> if i1 > = $ i0 goto label3 <NEXT> $ r6 = r2 get i1 <NEXT> r3 = net sf saxon om external object model $ r6 <NEXT> r4 = r3 get node list creator r1 <NEXT> if r4 == null goto label2 <NEXT> return r4 <NEXT> if r4 == null goto label2 <NEXT> label i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label3 <NEXT> label $ r5 = net sf saxon expr p j converter $ to collection instance <NEXT> r7 = net sf saxon expr p j converter $ r5 <NEXT> return r7 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon expr simple expression r0 <NEXT> $ i0 = r1 get implementation method <NEXT> $ i1 = $ i0 & 1 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> return 49152 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label return 24576 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = net sf saxon expr slash expression r0 <NEXT> $ r2 = r4 step <NEXT> $ r3 = $ r2 get item type r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon expr subsequence iterator r0 <NEXT> $ r1 = r3 base <NEXT> $ r2 = net sf saxon expr last position finder $ r1 <NEXT> i0 = $ r2 get last position <NEXT> r4 = net sf saxon expr subsequence iterator r0 <NEXT> $ i2 = r4 max <NEXT> i1 = java lang math min i0 $ i2 <NEXT> r5 = net sf saxon expr subsequence iterator r0 <NEXT> $ i3 = r5 min <NEXT> $ i4 = i1 - $ i3 <NEXT> $ i5 = $ i4 + 1 <NEXT> $ i6 = java lang math max $ i5 0 <NEXT> return $ i6 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r0 ! = r1 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if r0 ! = r1 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r8 = new net sf saxon expr role locator <NEXT> specialinvoke r8 < init > 2 \ `` treat as\ <NEXT> r8 set error code \ `` xpdy0050\ `` <NEXT> $ i0 = r1 get cardinality <NEXT> r3 = net sf saxon expr cardinality checker make cardinality checker r0 $ i0 r8 <NEXT> r9 = new net sf saxon expr item checker <NEXT> $ r7 = r1 get primary type <NEXT> specialinvoke r9 < init > r3 $ r7 r8 <NEXT> r10 = net sf saxon expr expression r9 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon expr unary expression r0 <NEXT> $ r1 = r2 operand <NEXT> $ i0 = $ r1 get cardinality <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon expr user function call r0 <NEXT> r1 confirm = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon expr variable reference r0 <NEXT> r1 filter = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon expr x path context major r0 <NEXT> r1 = r2 tail call function <NEXT> r3 = net sf saxon expr x path context major r0 <NEXT> r3 tail call function = null <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = r0 get current date time <NEXT> $ r2 = $ r1 get string value <NEXT> return $ r2 <END>
<BEG> r0 = @ parameter0 <NEXT> $ d0 = net sf saxon exslt date day in year r0 <NEXT> i0 = int $ d0 <NEXT> $ r3 = new java lang string buffer <NEXT> specialinvoke $ r3 < init > <NEXT> $ r4 = r0 substring 0 4 <NEXT> $ r5 = $ r3 append $ r4 <NEXT> $ r6 = $ r5 append \ `` -01-01\ `` <NEXT> r1 = $ r6 to string <NEXT> $ d1 = net sf saxon exslt date day in week r1 <NEXT> $ i5 = int $ d1 <NEXT> $ i6 = $ i5 + 5 <NEXT> i1 = $ i6 % 7 <NEXT> if i1 ! = 0 goto label1 <NEXT> $ i11 = 0 <NEXT> goto label2 <NEXT> label $ i7 = i0 - $ i11 <NEXT> $ i8 = $ i7 + 6 <NEXT> i3 = $ i8 7 <NEXT> if $ i11 < 4 goto label3 <NEXT> $ i10 = i3 + 1 <NEXT> $ d4 = double $ i10 <NEXT> return $ d4 <NEXT> if $ i11 < 4 goto label3 <NEXT> label if i3 < = 0 goto label4 <NEXT> $ d3 = double i3 <NEXT> return $ d3 <NEXT> label if i3 < = 0 goto label4 <NEXT> label $ r7 = r0 substring 0 4 <NEXT> $ i9 = java lang integer parse int $ r7 <NEXT> i4 = $ i9 - 1 <NEXT> $ r8 = new java lang string buffer <NEXT> specialinvoke $ r8 < init > <NEXT> $ r9 = $ r8 append i4 <NEXT> $ r10 = $ r9 append \ `` -12-31\ `` <NEXT> r2 = $ r10 to string <NEXT> $ d2 = net sf saxon exslt date week in year r2 <NEXT> return $ d2 <NEXT> if i1 ! = 0 goto label1 <NEXT> label $ i11 = 7 - i1 <END>
<BEG> r0 = @ parameter0 <NEXT> d0 = net sf saxon exslt date day in month r0 <NEXT> $ z0 = java lang double be na n d0 <NEXT> if $ z0 == 0 goto label1 <NEXT> return d0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ i0 = int d0 <NEXT> $ i1 = $ i0 - 1 <NEXT> $ i2 = $ i1 7 <NEXT> $ i3 = $ i2 + 1 <NEXT> $ d1 = double $ i3 <NEXT> return $ d1 <END>
<BEG> r0 = @ parameter0 <NEXT> d0 = net sf saxon exslt date year r0 <NEXT> d1 = net sf saxon exslt date month in year r0 <NEXT> d2 = net sf saxon exslt date day in month r0 <NEXT> $ z0 = java lang double be na n d0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = java lang double be na n d1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ z2 = java lang double be na n d2 <NEXT> if $ z2 == 0 goto label2 <NEXT> label return #na n <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ r2 = new java util gregorian calendar <NEXT> $ i3 = int d0 <NEXT> $ i0 = int d1 <NEXT> $ i2 = $ i0 - 1 <NEXT> $ i1 = int d2 <NEXT> specialinvoke $ r2 < init > $ i3 $ i2 $ i1 <NEXT> $ r2 set first day of week 1 <NEXT> $ i4 = $ r2 get 7 <NEXT> $ d3 = double $ i4 <NEXT> return $ d3 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon function collate function r0 <NEXT> $ r1 = r2 expression base u r i <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r12 = net sf saxon function doc r0 <NEXT> $ r6 = r12 argument <NEXT> $ r7 = $ r6 [ 0 ] <NEXT> $ r8 = $ r7 evaluate item r1 <NEXT> r3 = net sf saxon value atomic value $ r8 <NEXT> if r3 ! = null goto label1 <NEXT> return <NEXT> if r3 ! = null goto label1 <NEXT> label r4 = r3 get string value <NEXT> label r13 = net sf saxon function doc r0 <NEXT> $ r9 = r13 expression base u r i <NEXT> r14 = javax xml transform source locator r0 <NEXT> net sf saxon function document send doc r4 $ r9 r1 r14 r2 <NEXT> label goto label6 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon function extension function call r0 <NEXT> $ r1 = r2 the method <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r9 = net sf saxon function function library list r0 <NEXT> $ r6 = r9 library list <NEXT> r3 = $ r6 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r3 next <NEXT> r4 = net sf saxon function function library $ r7 <NEXT> $ z1 = r4 instanceof net sf saxon query x query function binder <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r8 = net sf saxon query x query function binder r4 <NEXT> r5 = $ r8 get declaration r1 r2 <NEXT> if r5 == null goto label2 <NEXT> return r5 <NEXT> if r5 == null goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon function function library list r0 <NEXT> $ r1 = r2 library list <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r8 = new net sf saxon function id $ id mapping function <NEXT> specialinvoke r8 < init > null <NEXT> r8 document = r0 <NEXT> r9 = new net sf saxon expr map iterator <NEXT> r11 = net sf saxon expr map function r8 <NEXT> specialinvoke r9 < init > r1 r11 <NEXT> r10 = new net sf saxon sort document order iterator <NEXT> $ r7 = net sf saxon sort local order comparer get instance <NEXT> r12 = net sf saxon om sequence iterator r9 <NEXT> r13 = net sf saxon sort node order comparer $ r7 <NEXT> specialinvoke r10 < init > r12 r13 <NEXT> r14 = net sf saxon om sequence iterator r10 <NEXT> return r14 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = net sf saxon function nilled get nilled property r0 <NEXT> if r1 == null goto label1 <NEXT> $ z0 = r1 get boolean value <NEXT> if $ z0 == 0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = lengthof r1 <NEXT> r2 = net sf saxon function standard function get function r0 $ i0 <NEXT> if r2 ! = null goto label1 <NEXT> return null <NEXT> if r2 ! = null goto label1 <NEXT> label r3 = r2 implementation class <NEXT> label $ r4 = r3 new instance <NEXT> r8 = net sf saxon function system function $ r4 <NEXT> r8 set detail r2 <NEXT> r11 = new net sf saxon om structure q name <NEXT> specialinvoke r11 < init > \ `` \ <NEXT> r8 set function name r11 <NEXT> r8 set argument r1 <NEXT> label r12 = net sf saxon expr function call r8 <NEXT> return r12 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon function system function r0 <NEXT> $ r1 = r2 detail <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon identity transformer handler r0 <NEXT> $ r1 = r2 system id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon instruct analyze string r0 <NEXT> $ r1 = r2 match <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon instruct attribute creator r0 <NEXT> $ i0 = r1 option <NEXT> $ i1 = $ i0 | 4 <NEXT> r2 = net sf saxon instruct attribute creator r0 <NEXT> r2 option = $ i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = net sf saxon instruct bindery r0 <NEXT> r3 define global variable r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon instruct block r0 <NEXT> $ r1 = r2 child <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon instruct element creator r0 <NEXT> $ z0 = r1 inherit namespaces <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon instruct executable r0 <NEXT> r2 character map index = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = net sf saxon instruct executable r0 <NEXT> $ r1 = r5 character map index <NEXT> if $ r1 ! = null goto label1 <NEXT> r4 = new java util hash map <NEXT> specialinvoke r4 < init > 10 <NEXT> r6 = net sf saxon instruct executable r0 <NEXT> r6 character map index = r4 <NEXT> label r7 = net sf saxon instruct executable r0 <NEXT> $ r2 = r7 character map index <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r6 = net sf saxon instruct executable r0 <NEXT> $ r1 = r6 key manager <NEXT> if $ r1 ! = null goto label1 <NEXT> r5 = new net sf saxon trans key manager <NEXT> r7 = net sf saxon instruct executable r0 <NEXT> $ r4 = r7 get configuration <NEXT> specialinvoke r5 < init > $ r4 <NEXT> r8 = net sf saxon instruct executable r0 <NEXT> r8 key manager = r5 <NEXT> label r9 = net sf saxon instruct executable r0 <NEXT> $ r2 = r9 key manager <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r8 = net sf saxon instruct executable r0 <NEXT> $ r2 = r8 collation table <NEXT> if $ r2 ! = null goto label1 <NEXT> r7 = new net sf saxon expr collation map <NEXT> r9 = net sf saxon instruct executable r0 <NEXT> $ r6 = r9 config <NEXT> specialinvoke r7 < init > $ r6 <NEXT> r10 = net sf saxon instruct executable r0 <NEXT> r10 collation table = r7 <NEXT> label r11 = net sf saxon instruct executable r0 <NEXT> $ r3 = r11 collation table <NEXT> $ r4 = $ r3 get name collation r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r1 = net sf saxon instruct general variable r0 <NEXT> $ b3 = r1 property <NEXT> $ b4 = $ b3 | 4 <NEXT> $ b5 = byte $ b4 <NEXT> r2 = net sf saxon instruct general variable r0 <NEXT> r2 property = $ b5 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r3 = net sf saxon instruct general variable r0 <NEXT> $ b0 = r3 property <NEXT> $ b1 = $ b0 & -5 <NEXT> $ b2 = byte $ b1 <NEXT> r4 = net sf saxon instruct general variable r0 <NEXT> r4 property = $ b2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r1 = net sf saxon instruct general variable r0 <NEXT> $ b3 = r1 property <NEXT> $ b4 = $ b3 | 16 <NEXT> $ b5 = byte $ b4 <NEXT> r2 = net sf saxon instruct general variable r0 <NEXT> r2 property = $ b5 <NEXT> goto label2 <NEXT> label return <NEXT> if z0 == 0 goto label1 <NEXT> label r3 = net sf saxon instruct general variable r0 <NEXT> $ b0 = r3 property <NEXT> $ b1 = $ b0 & -17 <NEXT> $ b2 = byte $ b1 <NEXT> r4 = net sf saxon instruct general variable r0 <NEXT> r4 property = $ b2 <END>
<BEG> r0 = @ this <NEXT> return 8192 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon instruct global variable r0 <NEXT> $ i0 = r1 host language <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = net sf saxon instruct instruction detail r0 <NEXT> r1 construct type = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon instruct instruction detail r0 <NEXT> $ i0 = r1 construct type <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon instruct result document r0 <NEXT> r1 resolve against static base = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon instruct template r0 <NEXT> r1 have require params = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon instruct template r0 <NEXT> r2 require type = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = net sf saxon instruct user function r0 <NEXT> r2 = r3 get body <NEXT> r4 = net sf saxon instruct user function r0 <NEXT> specialinvoke r4 gather direct contribute callees r2 r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = net sf saxon instruct user function parameter r0 <NEXT> r1 slot number = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon instruct value of r0 <NEXT> r1 be number instruction = 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = new java lang unsupported operation exception <NEXT> specialinvoke $ r2 < init > <NEXT> throw $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> i0 = @ parameter2 <NEXT> r3 = r2 get extension binder \ `` java\ `` <NEXT> $ z0 = r3 instanceof net sf saxon function java extension library <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r4 = net sf saxon function java extension library r3 <NEXT> if i0 == 50 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label $ r4 set strict java uri format $ z1 <NEXT> label r1 add function library r3 <NEXT> return <NEXT> if i0 == 50 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r4 = new net sf saxon java j regex iterator <NEXT> r5 = net sf saxon java j regex iterator r0 <NEXT> $ r3 = r5 the string <NEXT> r6 = net sf saxon java j regex iterator r0 <NEXT> $ r2 = r6 pattern <NEXT> specialinvoke r4 < init > $ r3 $ r2 <NEXT> r7 = net sf saxon om sequence iterator r4 <NEXT> return r7 <END>
<BEG> i0 = @ parameter0 <NEXT> $ r0 = net sf saxon number alphanumeric alphanumerics <NEXT> $ z0 = $ r0 contain i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon om array iterator r0 <NEXT> $ i0 = r1 start <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon om fast string buffer r0 <NEXT> $ i0 = r1 use <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> if i0 < 0 goto label1 <NEXT> r10 = net sf saxon om fast string buffer r0 <NEXT> $ i1 = r10 use <NEXT> if i0 < = $ i1 goto label2 <NEXT> label r9 = new java lang index out of bound exception <NEXT> r8 = new java lang string buffer <NEXT> specialinvoke r8 < init > <NEXT> $ r3 = r8 append \ `` \ `` <NEXT> $ r4 = $ r3 append i0 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke r9 < init > $ r5 <NEXT> throw r9 <NEXT> if i0 < = $ i1 goto label2 <NEXT> label r11 = net sf saxon om fast string buffer r0 <NEXT> $ i2 = r11 use <NEXT> $ i3 = $ i2 - 1 <NEXT> r12 = net sf saxon om fast string buffer r0 <NEXT> r12 use = $ i3 <NEXT> r13 = net sf saxon om fast string buffer r0 <NEXT> $ r7 = r13 array <NEXT> $ i6 = i0 + 1 <NEXT> r14 = net sf saxon om fast string buffer r0 <NEXT> $ r6 = r14 array <NEXT> r15 = net sf saxon om fast string buffer r0 <NEXT> $ i4 = r15 use <NEXT> $ i5 = $ i4 - i0 <NEXT> java lang system arraycopy $ r7 $ i6 $ r6 i0 $ i5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> c0 = @ parameter0 <NEXT> r4 = net sf saxon om fast string buffer r0 <NEXT> $ r2 = r4 array <NEXT> $ i1 = lengthof $ r2 <NEXT> $ i2 = $ i1 + 1 <NEXT> r1 = newarray char [ $ i2 ] <NEXT> r5 = net sf saxon om fast string buffer r0 <NEXT> $ r3 = r5 array <NEXT> r6 = net sf saxon om fast string buffer r0 <NEXT> $ i3 = r6 use <NEXT> java lang system arraycopy $ r3 0 r1 1 $ i3 <NEXT> r1 [ 0 ] = c0 <NEXT> r7 = net sf saxon om fast string buffer r0 <NEXT> $ i4 = r7 use <NEXT> $ i5 = $ i4 + 1 <NEXT> r8 = net sf saxon om fast string buffer r0 <NEXT> r8 use = $ i5 <NEXT> r9 = net sf saxon om fast string buffer r0 <NEXT> r9 array = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ z0 = net sf saxon charcode x m l character data be n c name start10 i0 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = newarray java lang string [ 2 ] <NEXT> i4 = -1 <NEXT> i0 = r1 length <NEXT> i5 = 0 <NEXT> label if i5 > = i0 goto label3 <NEXT> $ c3 = r1 char at i5 <NEXT> if $ c3 ! = 58 goto label2 <NEXT> i4 = i5 <NEXT> goto label3 <NEXT> label if i4 > = 0 goto label4 <NEXT> r2 [ 0 ] = \ `` \ `` <NEXT> $ r27 = r1 to string <NEXT> r2 [ 1 ] = $ r27 <NEXT> $ r28 = r2 [ 1 ] <NEXT> r43 = net sf saxon om name checker r0 <NEXT> $ z1 = r43 be valid n c name $ r28 <NEXT> if $ z1 ! = 0 goto label7 <NEXT> r36 = new net sf saxon om q name exception <NEXT> r35 = new java lang string buffer <NEXT> specialinvoke r35 < init > <NEXT> $ r31 = r35 append \ `` invalid q name \ `` <NEXT> $ r32 = net sf saxon trans err wrap r1 <NEXT> $ r33 = $ r31 append $ r32 <NEXT> $ r34 = $ r33 to string <NEXT> specialinvoke r36 < init > $ r34 <NEXT> r44 = java lang throwable r36 <NEXT> throw r44 <NEXT> if $ z1 ! = 0 goto label7 <NEXT> label return r2 <NEXT> label if i4 > = 0 goto label4 <NEXT> label if i4 ! = 0 goto label5 <NEXT> r38 = new net sf saxon om q name exception <NEXT> r37 = new java lang string buffer <NEXT> specialinvoke r37 < init > <NEXT> $ r23 = r37 append \ `` q name can not start with colon \ `` <NEXT> $ r24 = net sf saxon trans err wrap r1 <NEXT> $ r25 = $ r23 append $ r24 <NEXT> $ r26 = $ r25 to string <NEXT> specialinvoke r38 < init > $ r26 <NEXT> r45 = java lang throwable r38 <NEXT> throw r45 <NEXT> label if i4 ! = 0 goto label5 <NEXT> label $ i1 = i0 - 1 <NEXT> if i4 ! = $ i1 goto label6 <NEXT> r40 = new net sf saxon om q name exception <NEXT> r39 = new java lang string buffer <NEXT> specialinvoke r39 < init > <NEXT> $ r17 = r39 append \ `` q name can not end with colon \ `` <NEXT> $ r18 = net sf saxon trans err wrap r1 <NEXT> $ r19 = $ r17 append $ r18 <NEXT> $ r20 = $ r19 to string <NEXT> specialinvoke r40 < init > $ r20 <NEXT> r46 = java lang throwable r40 <NEXT> throw r46 <NEXT> if i4 ! = $ i1 goto label6 <NEXT> label $ r3 = r1 sub sequence 0 i4 <NEXT> $ r4 = $ r3 to string <NEXT> r2 [ 0 ] = $ r4 <NEXT> $ i2 = i4 + 1 <NEXT> $ r5 = r1 sub sequence $ i2 i0 <NEXT> $ r6 = $ r5 to string <NEXT> r2 [ 1 ] = $ r6 <NEXT> $ r7 = r2 [ 1 ] <NEXT> r47 = net sf saxon om name checker r0 <NEXT> $ z0 = r47 be valid n c name $ r7 <NEXT> if $ z0 ! = 0 goto label7 <NEXT> r42 = new net sf saxon om q name exception <NEXT> r41 = new java lang string buffer <NEXT> specialinvoke r41 < init > <NEXT> $ r10 = r41 append \ `` invalid q name local part \ `` <NEXT> $ r11 = r2 [ 1 ] <NEXT> $ r12 = net sf saxon trans err wrap $ r11 <NEXT> $ r13 = $ r10 append $ r12 <NEXT> $ r14 = $ r13 to string <NEXT> specialinvoke r42 < init > $ r14 <NEXT> r48 = java lang throwable r42 <NEXT> throw r48 <NEXT> if $ c3 ! = 58 goto label2 <NEXT> label i5 = i5 + 1 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = r1 length <NEXT> if $ i0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label c2 = r1 char at 0 <NEXT> r2 = net sf saxon om name checker r0 <NEXT> $ z0 = r2 be n c name start char c2 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label i3 = 1 <NEXT> label $ i1 = r1 length <NEXT> if i3 > = $ i1 goto label5 <NEXT> c4 = r1 char at i3 <NEXT> r3 = net sf saxon om name checker r0 <NEXT> $ z1 = r3 be n c name char c4 <NEXT> if $ z1 ! = 0 goto label4 <NEXT> label i3 = i3 + 1 <NEXT> goto label3 <NEXT> if i3 > = $ i1 goto label5 <NEXT> label return 1 <END>
<BEG> $ r0 = net sf saxon om name pool default name pool <NEXT> if $ r0 ! = null goto label1 <NEXT> $ r2 = new net sf saxon om name pool <NEXT> specialinvoke $ r2 < init > <NEXT> net sf saxon om name pool default name pool = $ r2 <NEXT> label $ r1 = net sf saxon om name pool default name pool <NEXT> return $ r1 <END>
<BEG> i0 = @ parameter0 <NEXT> $ i1 = i0 > > 20 <NEXT> $ i2 = $ i1 & 1023 <NEXT> return $ i2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> s2 = 0 <NEXT> label r4 = net sf saxon om name pool r0 <NEXT> $ s0 = r4 prefix use <NEXT> if s2 > = $ s0 goto label3 <NEXT> r5 = net sf saxon om name pool r0 <NEXT> $ r2 = r5 prefix <NEXT> $ r3 = $ r2 [ s2 ] <NEXT> $ z0 = $ r3 equal r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> return s2 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ i1 = s2 + 1 <NEXT> s2 = short $ i1 <NEXT> goto label1 <NEXT> if s2 > = $ s0 goto label3 <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = net sf saxon om name pool r0 <NEXT> $ r2 = r5 client data <NEXT> if $ r2 ! = null goto label1 <NEXT> return null <NEXT> if $ r2 ! = null goto label1 <NEXT> label r6 = net sf saxon om name pool r0 <NEXT> $ r3 = r6 client data <NEXT> $ r4 = $ r3 get r1 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon om strip document r0 <NEXT> $ r1 = r2 node <NEXT> $ i0 = $ r1 get document number <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r4 = net sf saxon om structure q name r0 <NEXT> $ i0 = r4 local name start <NEXT> if $ i0 ! = 0 goto label1 <NEXT> return \ `` \ `` <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r3 = new java lang string <NEXT> r5 = net sf saxon om structure q name r0 <NEXT> $ r2 = r5 content <NEXT> r6 = net sf saxon om structure q name r0 <NEXT> $ i1 = r6 local name start <NEXT> specialinvoke r3 < init > $ r2 0 $ i1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon om virtual copy r0 <NEXT> $ r1 = r2 original <NEXT> $ i0 = $ r1 get node kind <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon om virtual copy r0 <NEXT> $ r1 = r2 system id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r1 = net sf saxon om navigator get base u r i r0 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = net sf saxon om virtual copy r0 <NEXT> $ r4 = r5 original <NEXT> $ r2 = net sf saxon om virtual copy r1 <NEXT> $ r3 = $ r2 original <NEXT> $ i0 = $ r4 compare order $ r3 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon om virtual copy r0 <NEXT> $ r1 = r2 original <NEXT> $ i0 = $ r1 get name code <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon om virtual copy r0 <NEXT> r1 = r3 get root <NEXT> $ i0 = r1 get node kind <NEXT> if $ i0 ! = 9 goto label1 <NEXT> $ r2 = net sf saxon om document info r1 <NEXT> return $ r2 <NEXT> if $ i0 ! = 9 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon om virtual copy r0 <NEXT> $ r1 = r3 original <NEXT> $ r2 = $ r1 atomize <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon om virtual copy r0 <NEXT> $ r1 = r2 original <NEXT> $ z0 = $ r1 be idref <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = r1 get node kind <NEXT> if i0 == 1 goto label1 <NEXT> if i0 == 3 goto label1 <NEXT> if i0 == 8 goto label1 <NEXT> if i0 ! = 7 goto label2 <NEXT> label $ z0 = 1 <NEXT> goto label3 <NEXT> label return $ z0 <NEXT> if i0 ! = 7 goto label2 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon pattern content type test r0 <NEXT> r1 match d t d type = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon type item type r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof net sf saxon pattern i d pattern <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r2 = net sf saxon pattern i d pattern r1 <NEXT> $ r4 = $ r2 id expression <NEXT> r5 = net sf saxon pattern i d pattern r0 <NEXT> $ r3 = r5 id expression <NEXT> $ z1 = $ r4 equal $ r3 <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = net sf saxon pattern location path pattern r0 <NEXT> $ r3 = r9 filter <NEXT> if $ r3 ! = null goto label1 <NEXT> $ r6 = newarray net sf saxon expr expression [ 3 ] <NEXT> r10 = net sf saxon pattern location path pattern r0 <NEXT> r10 filter = $ r6 <NEXT> goto label2 <NEXT> label r17 = net sf saxon pattern location path pattern r0 <NEXT> $ r7 = r17 filter <NEXT> r18 = net sf saxon pattern location path pattern r0 <NEXT> $ i5 = r18 number of filter <NEXT> $ i6 = $ i5 + 1 <NEXT> r19 = net sf saxon pattern location path pattern r0 <NEXT> r19 number of filter = $ i6 <NEXT> $ r7 [ $ i5 ] = r1 <NEXT> r20 = net sf saxon expr container r0 <NEXT> r1 set container r20 <NEXT> return <NEXT> if $ r3 ! = null goto label1 <NEXT> label r11 = net sf saxon pattern location path pattern r0 <NEXT> $ i1 = r11 number of filter <NEXT> r12 = net sf saxon pattern location path pattern r0 <NEXT> $ r4 = r12 filter <NEXT> $ i0 = lengthof $ r4 <NEXT> if $ i1 ! = $ i0 goto label2 <NEXT> r13 = net sf saxon pattern location path pattern r0 <NEXT> $ i2 = r13 number of filter <NEXT> $ i3 = $ i2 * 2 <NEXT> r2 = newarray net sf saxon expr expression [ $ i3 ] <NEXT> r14 = net sf saxon pattern location path pattern r0 <NEXT> $ r5 = r14 filter <NEXT> r15 = net sf saxon pattern location path pattern r0 <NEXT> $ i4 = r15 number of filter <NEXT> java lang system arraycopy $ r5 0 r2 0 $ i4 <NEXT> r16 = net sf saxon pattern location path pattern r0 <NEXT> r16 filter = r2 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon pattern location path pattern r0 <NEXT> $ r1 = r2 node test <NEXT> $ i0 = $ r1 get fingerprint <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon pattern node test pattern r0 <NEXT> $ r1 = r2 node test <NEXT> $ i0 = $ r1 get fingerprint <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r1 start element \ `` stylesheet\ `` <NEXT> r27 = net sf saxon prepared stylesheet r0 <NEXT> $ r7 = r27 get executable <NEXT> $ r8 = $ r7 get key manager <NEXT> $ r8 explain key r1 <NEXT> r28 = net sf saxon prepared stylesheet r0 <NEXT> $ r9 = r28 get executable <NEXT> $ r9 explain global variable r1 <NEXT> r29 = net sf saxon prepared stylesheet r0 <NEXT> $ r10 = r29 get executable <NEXT> $ r11 = $ r10 get rule manager <NEXT> $ r11 explain template rule r1 <NEXT> r30 = net sf saxon prepared stylesheet r0 <NEXT> $ r12 = r30 get executable <NEXT> $ r12 explain name templates r1 <NEXT> r31 = net sf saxon prepared stylesheet r0 <NEXT> $ r13 = r31 get executable <NEXT> $ r14 = $ r13 get function library <NEXT> r2 = net sf saxon function function library list $ r14 <NEXT> r3 = r2 get library list <NEXT> r1 start element \ `` functions\ `` <NEXT> i8 = 0 <NEXT> label $ i2 = r3 size <NEXT> if i8 > = $ i2 goto label4 <NEXT> $ r15 = r3 get i8 <NEXT> r4 = net sf saxon function function library $ r15 <NEXT> $ z0 = r4 instanceof net sf saxon function executable function library <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r16 = net sf saxon function executable function library r4 <NEXT> r5 = $ r16 iterate function <NEXT> label $ z1 = r5 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r17 = r5 next <NEXT> r6 = net sf saxon instruct user function $ r17 <NEXT> r1 start element \ `` function\ `` <NEXT> $ r18 = r6 get function name <NEXT> $ r19 = $ r18 get display name <NEXT> r1 emit attribute \ `` name\ <NEXT> r26 = new java lang string buffer <NEXT> specialinvoke r26 < init > <NEXT> $ i6 = r6 get line number <NEXT> $ r21 = r26 append $ i6 <NEXT> $ r22 = $ r21 append \ `` \ `` <NEXT> $ r23 = $ r22 to string <NEXT> r1 emit attribute \ `` line\ <NEXT> $ r24 = r6 get system id <NEXT> r1 emit attribute \ `` module\ <NEXT> $ r25 = r6 get body <NEXT> $ r25 explain r1 <NEXT> r1 end element <NEXT> goto label2 <NEXT> if $ z1 == 0 goto label3 <NEXT> label i8 = i8 + 1 <NEXT> goto label1 <NEXT> if i8 > = $ i2 goto label4 <NEXT> label r1 end element <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r7 = net sf saxon pull namespace context impl r0 <NEXT> r2 = r7 iterate prefix <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r5 = r2 next <NEXT> r3 = java lang string $ r5 <NEXT> r8 = net sf saxon pull namespace context impl r0 <NEXT> $ r6 = r8 resolver <NEXT> r4 = $ r6 get u r i for prefix r3 1 <NEXT> $ z1 = r4 equal r1 <NEXT> if $ z1 == 0 goto label2 <NEXT> return r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r4 = net sf saxon pull pull filter r0 <NEXT> $ r1 = r4 get pipeline configuration <NEXT> $ r2 = $ r1 get configuration <NEXT> $ r3 = $ r2 get name pool <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon query dynamic query context r0 <NEXT> r2 error listener = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = net sf saxon query global variable definition r0 <NEXT> r1 line number = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon query global variable definition r0 <NEXT> $ r1 = r2 compile var <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon query query module r0 <NEXT> r1 preserve namespaces = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = net sf saxon query query module r0 <NEXT> r1 construction mode = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon query query module r0 <NEXT> $ r1 = r2 global function library <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon query query module r0 <NEXT> $ r1 = r3 active namespaces <NEXT> $ r1 pop <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon query query module r0 <NEXT> $ z0 = r1 be update <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = net sf saxon query static query context r0 <NEXT> r1 generate code = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon query static query context r0 <NEXT> $ r1 = r2 require context item type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon query x query expression r0 <NEXT> $ r1 = r2 stack frame map <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = net sf saxon query x query function library r0 <NEXT> $ r2 = r5 function <NEXT> $ r3 = $ r2 get r1 <NEXT> $ r4 = net sf saxon query x query function $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ z0 = r1 start with r2 <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon sort conditional sorter r0 <NEXT> $ r1 = r2 document sorter <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return 57344 <END>
<BEG> r0 = @ this <NEXT> r4 = net sf saxon sort group by iterator r0 <NEXT> $ r1 = r4 group key <NEXT> r5 = net sf saxon sort group by iterator r0 <NEXT> $ i0 = r5 position <NEXT> $ i1 = $ i0 - 1 <NEXT> $ r2 = $ r1 get $ i1 <NEXT> $ r3 = net sf saxon value atomic value $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ i0 = r2 next <NEXT> r3 = net sf saxon sort int hash set r0 <NEXT> $ z1 = r3 contain $ i0 <NEXT> if $ z1 == 0 goto label1 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon sort int range set r0 <NEXT> $ r1 = r2 end point <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon sort sort key definition r0 <NEXT> $ r1 = r2 sort key <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon sort sort key definition r0 <NEXT> $ r1 = r2 base u r i <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon sort tuple sorter r0 <NEXT> $ r1 = r2 select <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon standard error listener r0 <NEXT> $ i0 = r1 recovery policy <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 equal \ `` name\ `` <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = net sf saxon style literal result element r0 <NEXT> $ r2 = r3 get display name <NEXT> return $ r2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon style style element r0 <NEXT> $ z0 = r1 explain <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon style style element r0 <NEXT> $ r1 = r2 get contain stylesheet <NEXT> $ i0 = $ r1 get precedence <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon style style element r0 <NEXT> $ r1 = r3 get version <NEXT> $ r2 = java math big decimal value of 2l <NEXT> $ i0 = $ r1 compare to $ r2 <NEXT> if $ i0 < = 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> s0 = @ parameter0 <NEXT> if s0 == 2 goto label1 <NEXT> if s0 ! = 1 goto label2 <NEXT> label return 1 <NEXT> if s0 ! = 1 goto label2 <NEXT> label r3 = net sf saxon style style element r0 <NEXT> $ z0 = r3 be extension namespace s0 <NEXT> if $ z0 == 0 goto label3 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label r2 = r0 <NEXT> label $ z1 = r2 instanceof net sf saxon style style element <NEXT> if $ z1 == 0 goto label6 <NEXT> $ r1 = net sf saxon style style element r2 <NEXT> $ z2 = $ r1 defines exclude namespace s0 <NEXT> if $ z2 == 0 goto label5 <NEXT> label r4 = net sf saxon om node info r2 <NEXT> r2 = r4 get parent <NEXT> goto label4 <NEXT> if $ z1 == 0 goto label6 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon style style element r0 <NEXT> r2 object name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon style use when static context r0 <NEXT> $ r1 = r2 namespace context <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon style x s l attribute set r0 <NEXT> $ r1 = r2 stack frame map <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon style x s l key r0 <NEXT> $ r1 = r2 stack frame map <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = net sf saxon style x s l param r0 <NEXT> $ r1 = r4 require type <NEXT> if $ r1 == null goto label1 <NEXT> r5 = net sf saxon style x s l param r0 <NEXT> $ r3 = r5 require type <NEXT> return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r2 = net sf saxon value sequence type any_sequence <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r5 = net sf saxon style x s l stylesheet r0 <NEXT> $ r1 = r5 importer <NEXT> if $ r1 == null goto label1 <NEXT> r6 = net sf saxon style x s l stylesheet r0 <NEXT> $ r3 = r6 importer <NEXT> $ r4 = $ r3 get prepared stylesheet <NEXT> return $ r4 <NEXT> if $ r1 == null goto label1 <NEXT> label r7 = net sf saxon style x s l stylesheet r0 <NEXT> $ r2 = r7 stylesheet <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = net sf saxon style x s l stylesheet r0 <NEXT> r1 precedence = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon style x s l stylesheet r0 <NEXT> $ z0 = r2 be include <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = net sf saxon style x s l stylesheet r0 <NEXT> $ r1 = r3 importer <NEXT> $ i1 = $ r1 get precedence <NEXT> return $ i1 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r4 = net sf saxon style x s l stylesheet r0 <NEXT> $ i0 = r4 precedence <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> specialinvoke r0 validate <NEXT> r3 = net sf saxon style x s l variable declaration r0 <NEXT> $ z0 = r3 global <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = net sf saxon style x s l variable declaration r0 <NEXT> $ z1 = r4 redundant <NEXT> if $ z1 ! = 0 goto label1 <NEXT> r5 = net sf saxon style x s l variable declaration r0 <NEXT> $ r1 = r5 get principal stylesheet <NEXT> r6 = net sf saxon style x s l variable declaration r0 <NEXT> $ r2 = r6 get variable q name <NEXT> $ i0 = $ r1 allocate global slot $ r2 <NEXT> r7 = net sf saxon style x s l variable declaration r0 <NEXT> r7 slot number = $ i0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon sxpath abstract static context r0 <NEXT> $ r1 = r2 executable <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get namespace u r i <NEXT> $ r3 = r1 get local name <NEXT> r5 = net sf saxon sxpath independent context r0 <NEXT> $ r4 = r5 declare variable $ r2 $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r12 = net sf saxon sxpath independent context r0 <NEXT> $ r4 = r12 get configuration <NEXT> r1 = $ r4 make slot manager <NEXT> r13 = net sf saxon sxpath independent context r0 <NEXT> $ r5 = r13 variable <NEXT> $ i0 = $ r5 size <NEXT> r2 = newarray net sf saxon sxpath x path variable [ $ i0 ] <NEXT> r14 = net sf saxon sxpath independent context r0 <NEXT> $ r6 = r14 variable <NEXT> $ r7 = $ r6 value <NEXT> r11 = $ r7 iterator <NEXT> label $ z0 = r11 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r10 = r11 next <NEXT> r3 = net sf saxon sxpath x path variable $ r10 <NEXT> $ i3 = r3 get local slot number <NEXT> r2 [ $ i3 ] = r3 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label i4 = 0 <NEXT> label $ i1 = lengthof r2 <NEXT> if i4 > = $ i1 goto label4 <NEXT> $ r8 = r2 [ i4 ] <NEXT> $ r9 = $ r8 get variable q name <NEXT> r1 allocate slot number $ r9 <NEXT> i4 = i4 + 1 <NEXT> goto label3 <NEXT> if i4 > = $ i1 goto label4 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon sxpath x path evaluator r0 <NEXT> $ r1 = r3 static context <NEXT> $ r2 = $ r1 get configuration <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = new net sf saxon expr x path context major <NEXT> r11 = net sf saxon sxpath x path expression r0 <NEXT> $ r4 = r11 evaluator <NEXT> $ r5 = $ r4 get executable <NEXT> specialinvoke r9 < init > r1 $ r5 <NEXT> r12 = net sf saxon sxpath x path expression r0 <NEXT> $ r6 = r12 stack frame map <NEXT> r9 open stack frame $ r6 <NEXT> r10 = new net sf saxon sxpath x path dynamic context <NEXT> r13 = net sf saxon sxpath x path expression r0 <NEXT> $ r8 = r13 stack frame map <NEXT> specialinvoke r10 < init > r9 $ r8 <NEXT> return r10 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = net sf saxon sxpath x path variable r0 <NEXT> $ i0 = r3 slot number <NEXT> $ r2 = r1 evaluate local variable $ i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = net sf saxon tinytree char slice r0 <NEXT> r1 count = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = net sf saxon tinytree compress whitespace r0 <NEXT> l0 = r3 value <NEXT> i9 = 56 <NEXT> label if i9 < 0 goto label5 <NEXT> $ l4 = l0 > > > i9 <NEXT> $ l5 = $ l4 & 255l <NEXT> $ i6 = int $ l5 <NEXT> b1 = byte $ i6 <NEXT> if b1 ! = 0 goto label2 <NEXT> goto label5 <NEXT> label return <NEXT> if b1 ! = 0 goto label2 <NEXT> label $ r2 = net sf saxon tinytree compress whitespace white_chars <NEXT> $ b7 = b1 > > > 6 <NEXT> $ b8 = $ b7 & 3 <NEXT> c2 = $ r2 [ $ b8 ] <NEXT> b3 = b1 & 63 <NEXT> i10 = 0 <NEXT> label if i10 > = b3 goto label4 <NEXT> r1 write c2 <NEXT> i10 = i10 + 1 <NEXT> goto label3 <NEXT> label if i10 > = b3 goto label4 <NEXT> label i9 = i9 + -8 <NEXT> goto label1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = net sf saxon tinytree compress whitespace r0 <NEXT> l0 = r5 value <NEXT> i9 = 56 <NEXT> label if i9 < 0 goto label11 <NEXT> $ l4 = l0 > > > i9 <NEXT> $ l5 = $ l4 & 255l <NEXT> $ i6 = int $ l5 <NEXT> b1 = byte $ i6 <NEXT> if b1 ! = 0 goto label02 <NEXT> goto label11 <NEXT> label return <NEXT> if b1 ! = 0 goto label02 <NEXT> label $ r3 = net sf saxon tinytree compress whitespace white_chars <NEXT> $ b7 = b1 > > > 6 <NEXT> $ b8 = $ b7 & 3 <NEXT> c2 = $ r3 [ $ b8 ] <NEXT> b3 = b1 & 63 <NEXT> $ z0 = r1 [ c2 ] <NEXT> if $ z0 == 0 goto label08 <NEXT> if c2 ! = 10 goto label03 <NEXT> r4 = net sf saxon tinytree compress whitespace escape_n <NEXT> goto label05 <NEXT> label i10 = 0 <NEXT> label if i10 > = b3 goto label07 <NEXT> r2 write r4 <NEXT> i10 = i10 + 1 <NEXT> goto label06 <NEXT> label if i10 > = b3 goto label07 <NEXT> label goto label10 <NEXT> label i9 = i9 + -8 <NEXT> goto label01 <NEXT> if c2 ! = 10 goto label03 <NEXT> label if c2 ! = 13 goto label04 <NEXT> r4 = net sf saxon tinytree compress whitespace escape_r <NEXT> label if c2 ! = 13 goto label04 <NEXT> label r4 = net sf saxon tinytree compress whitespace escape_t <NEXT> if $ z0 == 0 goto label08 <NEXT> label i11 = 0 <NEXT> label if i11 > = b3 goto label10 <NEXT> r2 write c2 <NEXT> i11 = i11 + 1 <NEXT> goto label09 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = r1 length <NEXT> if i0 ! = 0 goto label1 <NEXT> return <NEXT> if i0 ! = 0 goto label1 <NEXT> label r16 = net sf saxon tinytree large string buffer r0 <NEXT> $ r4 = r16 segment <NEXT> r17 = net sf saxon tinytree large string buffer r0 <NEXT> $ r3 = r17 segment <NEXT> $ i1 = $ r3 size <NEXT> $ i2 = $ i1 - 1 <NEXT> $ r5 = $ r4 get $ i2 <NEXT> r13 = net sf saxon om fast string buffer $ r5 <NEXT> $ i3 = r13 length <NEXT> $ i5 = $ i3 + i0 <NEXT> r18 = net sf saxon tinytree large string buffer r0 <NEXT> $ i4 = r18 max allocation <NEXT> if $ i5 > $ i4 goto label2 <NEXT> r13 append r1 <NEXT> goto label3 <NEXT> label r27 = net sf saxon tinytree large string buffer r0 <NEXT> $ i13 = r27 length <NEXT> $ i14 = $ i13 + i0 <NEXT> r28 = net sf saxon tinytree large string buffer r0 <NEXT> r28 length = $ i14 <NEXT> if $ i5 > $ i4 goto label2 <NEXT> label r19 = net sf saxon tinytree large string buffer r0 <NEXT> $ r6 = r19 start offset <NEXT> $ i6 = lengthof $ r6 <NEXT> $ i7 = $ i6 + 1 <NEXT> r2 = newarray int [ $ i7 ] <NEXT> r20 = net sf saxon tinytree large string buffer r0 <NEXT> $ r8 = r20 start offset <NEXT> r21 = net sf saxon tinytree large string buffer r0 <NEXT> $ r7 = r21 start offset <NEXT> $ i8 = lengthof $ r7 <NEXT> java lang system arraycopy $ r8 0 r2 0 $ i8 <NEXT> r22 = net sf saxon tinytree large string buffer r0 <NEXT> $ r9 = r22 start offset <NEXT> $ i10 = lengthof $ r9 <NEXT> r23 = net sf saxon tinytree large string buffer r0 <NEXT> $ i9 = r23 length <NEXT> r2 [ $ i10 ] = $ i9 <NEXT> r24 = net sf saxon tinytree large string buffer r0 <NEXT> r24 start offset = r2 <NEXT> r15 = new net sf saxon om fast string buffer <NEXT> r25 = net sf saxon tinytree large string buffer r0 <NEXT> $ i11 = r25 min allocation <NEXT> $ i12 = java lang math max $ i11 i0 <NEXT> specialinvoke r15 < init > $ i12 <NEXT> r26 = net sf saxon tinytree large string buffer r0 <NEXT> $ r11 = r26 segment <NEXT> $ r11 add r15 <NEXT> r15 append r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r3 = net sf saxon tinytree tiny attribute collection r0 <NEXT> $ r1 = r3 tree <NEXT> $ r2 = $ r1 att code <NEXT> r4 = net sf saxon tinytree tiny attribute collection r0 <NEXT> $ i1 = r4 first attribute <NEXT> $ i2 = $ i1 + i0 <NEXT> $ i3 = $ r2 [ $ i2 ] <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> r5 = net sf saxon tinytree tiny attribute impl r0 <NEXT> $ r3 = r5 tree <NEXT> r6 = net sf saxon tinytree tiny attribute impl r0 <NEXT> $ r1 = r6 tree <NEXT> $ r2 = $ r1 att parent <NEXT> r7 = net sf saxon tinytree tiny attribute impl r0 <NEXT> $ i0 = r7 node nr <NEXT> $ i1 = $ r2 [ $ i0 ] <NEXT> $ r4 = $ r3 get node $ i1 <NEXT> r8 = net sf saxon om node info $ r4 <NEXT> return r8 <END>
<BEG> r0 = @ this <NEXT> r6 = net sf saxon tinytree tiny attribute impl r0 <NEXT> $ r1 = r6 tree <NEXT> $ r2 = $ r1 get name pool <NEXT> r7 = net sf saxon tinytree tiny attribute impl r0 <NEXT> $ r3 = r7 tree <NEXT> $ r4 = $ r3 att code <NEXT> r8 = net sf saxon tinytree tiny attribute impl r0 <NEXT> $ i0 = r8 node nr <NEXT> $ i1 = $ r4 [ $ i0 ] <NEXT> $ r5 = $ r2 get local name $ i1 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> return 8 <END>
<BEG> r0 = @ this <NEXT> r4 = net sf saxon tinytree tiny parent node impl r0 <NEXT> $ r1 = r4 tree <NEXT> r5 = net sf saxon tinytree tiny parent node impl r0 <NEXT> $ i0 = r5 node nr <NEXT> $ r2 = net sf saxon tinytree tiny parent node impl get string value $ r1 $ i0 <NEXT> $ r3 = $ r2 to string <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon trace context stack frame r0 <NEXT> $ r1 = r2 module uri <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = net sf saxon trace context stack frame r0 <NEXT> r1 line number = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon trace expression presenter r0 <NEXT> r1 end element <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = net sf saxon trace trace event multicaster r0 <NEXT> $ r2 = r6 a <NEXT> $ r3 = net sf saxon trace trace listener $ r2 <NEXT> $ r3 end current item r1 <NEXT> r7 = net sf saxon trace trace event multicaster r0 <NEXT> $ r4 = r7 b <NEXT> $ r5 = net sf saxon trace trace listener $ r4 <NEXT> $ r5 end current item r1 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r4 = java util event listener r0 <NEXT> r5 = java util event listener r1 <NEXT> $ r2 = net sf saxon trace trace event multicaster add internal r4 r5 <NEXT> $ r3 = net sf saxon trace trace listener $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r14 = net sf saxon trans dynamic loader r0 <NEXT> r3 = r14 get class r1 z0 r2 <NEXT> label $ r5 = r3 new instance <NEXT> label return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon trans key definition r0 <NEXT> $ z0 = r1 backwards compatible <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon trans key definition r0 <NEXT> $ z0 = r1 convert untyped to other <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon trans key definition r0 <NEXT> $ r1 = r2 use <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r4 = new net sf saxon trans mode <NEXT> $ r2 = net sf saxon trans mode default_mode_name <NEXT> specialinvoke r4 < init > -1 $ r2 <NEXT> r6 = net sf saxon trans rule manager r0 <NEXT> r6 default mode = r4 <NEXT> r5 = new java util hash map <NEXT> specialinvoke r5 < init > 5 <NEXT> r7 = net sf saxon trans rule manager r0 <NEXT> r7 mode = r5 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon trans x path exception r0 <NEXT> r2 context = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> r2 = net sf saxon tree proc inst impl r0 <NEXT> r2 system id = r1 <NEXT> r3 = net sf saxon tree proc inst impl r0 <NEXT> r3 line number = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = net sf saxon tree tree builder r0 <NEXT> r2 node factory = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon tree tree enumeration r0 <NEXT> $ r1 = r2 current <NEXT> r3 = net sf saxon om item $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon tree tree enumeration r0 <NEXT> $ i0 = r1 position <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon type schema type r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> return 0 <END>
<BEG> r0 = @ this <NEXT> return 1 <END>
<BEG> r0 = @ this <NEXT> r1 = net sf saxon type schema type r0 <NEXT> return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof net sf saxon type external object type <NEXT> if $ z0 == 0 goto label1 <NEXT> r3 = net sf saxon type external object type r0 <NEXT> $ i1 = r3 fingerprint <NEXT> $ r2 = net sf saxon type external object type r1 <NEXT> $ i0 = $ r2 fingerprint <NEXT> if $ i1 ! = $ i0 goto label1 <NEXT> $ z1 = 1 <NEXT> goto label2 <NEXT> label return $ z1 <NEXT> if $ i1 ! = $ i0 goto label1 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r2 = net sf saxon type type hierarchy r0 <NEXT> $ r1 = r2 config <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = net sf saxon type validation exception r0 <NEXT> r3 schema part = i0 <NEXT> r4 = net sf saxon type validation exception r0 <NEXT> r4 constraint name = r1 <NEXT> r5 = net sf saxon type validation exception r0 <NEXT> r5 constraint clause number = r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string buffer <NEXT> specialinvoke r8 < init > <NEXT> r9 = net sf saxon type validation exception r0 <NEXT> $ r2 = r9 constraint name <NEXT> $ r3 = r8 append $ r2 <NEXT> $ r4 = $ r3 append 46 <NEXT> r10 = net sf saxon type validation exception r0 <NEXT> $ r5 = r10 constraint clause number <NEXT> $ r6 = $ r4 append $ r5 <NEXT> $ r7 = $ r6 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> $ r1 = net sf saxon om singleton iterator make iterator r0 <NEXT> r2 = net sf saxon om sequence iterator $ r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 > 0 goto label1 <NEXT> $ i2 = i0 + i1 <NEXT> if $ i2 < = 0 goto label1 <NEXT> return r0 <NEXT> if $ i2 < = 0 goto label1 <NEXT> label $ r1 = net sf saxon value empty sequence get instance <NEXT> r2 = net sf saxon om ground value $ r1 <NEXT> return r2 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon value calendar value r0 <NEXT> $ r1 = r3 get string value c s <NEXT> $ r2 = $ r1 to string <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> if z0 == 0 goto label1 <NEXT> $ z2 = r0 instanceof java lang comparable <NEXT> if $ z2 ! = 0 goto label1 <NEXT> return null <NEXT> if $ z2 ! = 0 goto label1 <NEXT> label r4 = net sf saxon value calendar value r0 <NEXT> $ z1 = r4 have timezone <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r3 = r0 <NEXT> goto label3 <NEXT> label return $ r3 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ i0 = r2 get implicit timezone <NEXT> r5 = net sf saxon value calendar value r0 <NEXT> $ r3 = r5 adjust timezone $ i0 <END>
<BEG> r0 = @ this <NEXT> r3 = net sf saxon value closure r0 <NEXT> $ r1 = r3 expression <NEXT> if $ r1 ! = null goto label1 <NEXT> return 57344 <NEXT> if $ r1 ! = null goto label1 <NEXT> label r4 = net sf saxon value closure r0 <NEXT> $ r2 = r4 expression <NEXT> $ i0 = $ r2 get cardinality <NEXT> return $ i0 <END>
<BEG> $ r0 = new java lang string buffer <NEXT> specialinvoke $ r0 < init > <NEXT> $ r1 = $ r0 append \ `` sa \ `` <NEXT> $ r2 = net sf saxon version get product version <NEXT> $ r3 = $ r1 append $ r2 <NEXT> $ r4 = $ r3 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = java lang string value of i0 <NEXT> r2 = com thoughtworks selenium browser configuration option r0 <NEXT> specialinvoke r2 put \ `` timeout in seconds\ <NEXT> r3 = com thoughtworks selenium browser configuration option r0 <NEXT> return r3 <END>
<BEG> i0 = @ parameter0 <NEXT> r0 = org openqa selenium html5 app cache status value <NEXT> i1 = lengthof r0 <NEXT> i3 = 0 <NEXT> label if i3 > = i1 goto label3 <NEXT> r1 = r0 [ i3 ] <NEXT> $ i2 = r1 value <NEXT> if i0 ! = $ i2 goto label2 <NEXT> return r1 <NEXT> if i0 ! = $ i2 goto label2 <NEXT> label i3 = i3 + 1 <NEXT> goto label1 <NEXT> label if i3 > = i1 goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium interaction action r0 <NEXT> $ r1 = r2 click null <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = new org openqa selenium log composite local log <NEXT> specialinvoke r3 < init > r0 r1 <NEXT> r4 = org openqa selenium log local log r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r0 == r1 goto label1 <NEXT> r3 = org openqa selenium platform r0 <NEXT> $ r2 = r3 family <NEXT> $ z0 = $ r2 be r1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 1 <NEXT> goto label3 <NEXT> label return $ z1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ z1 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org openqa selenium platform r0 <NEXT> $ i0 = r1 minor version <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium proxy r0 <NEXT> $ r1 = r2 sock proxy <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` request id be required\ `` <NEXT> r6 = new org openqa selenium devtools command <NEXT> $ r3 = r0 to string <NEXT> $ r4 = com google common collect immutable map of \ `` request id\ <NEXT> $ r5 = org openqa selenium devtools converter function map \ `` stream\ <NEXT> r7 = java util map $ r4 <NEXT> specialinvoke r6 < init > \ `` fetch take response body a stream\ <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model call frame r0 <NEXT> $ r1 = r2 line number <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model request r0 <NEXT> $ r1 = r2 initial priority <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model request r0 <NEXT> $ r1 = r2 be link preload <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model resource time r0 <NEXT> $ r1 = r2 worker start <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model response r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model response r0 <NEXT> $ r1 = r2 status <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model response r0 <NEXT> $ r1 = r2 from service worker <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model security detail r0 <NEXT> $ r1 = r2 protocol <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model security detail r0 <NEXT> $ r1 = r2 valid from <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model security detail r0 <NEXT> $ r1 = r2 certificate transparency compliance <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa selenium devtools network model sign exchange error r0 <NEXT> $ r1 = r2 error field <NEXT> return $ r1 <END>
<BEG> r2 = new org openqa selenium devtools command <NEXT> $ r1 = com google common collect immutable map of <NEXT> r3 = java util map $ r1 <NEXT> specialinvoke r2 < init > \ `` network disable\ <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` origin must be set \ `` <NEXT> r8 = new org openqa selenium devtools command <NEXT> $ r3 = com google common collect immutable map of \ `` origin\ <NEXT> r7 = new org openqa selenium devtools network network $ 1 <NEXT> specialinvoke r7 < init > <NEXT> $ r5 = r7 get type <NEXT> $ r6 = org openqa selenium devtools converter function map \ `` table names\ <NEXT> r9 = java util map $ r3 <NEXT> specialinvoke r8 < init > \ `` network get certificate\ <NEXT> return r8 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` request id must be set \ `` <NEXT> r6 = new org openqa selenium devtools command <NEXT> $ r3 = r0 to string <NEXT> $ r4 = com google common collect immutable map of \ `` request id\ <NEXT> $ r5 = org openqa selenium devtools converter function map \ `` post data\ <NEXT> r7 = java util map $ r4 <NEXT> specialinvoke r6 < init > \ `` network get request post data\ <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` pattern must be set \ `` <NEXT> r4 = new org openqa selenium devtools command <NEXT> $ r3 = com google common collect immutable map of \ `` patterns\ <NEXT> r5 = java util map $ r3 <NEXT> specialinvoke r4 < init > \ `` network set request interception\ <NEXT> return r4 <END>
<BEG> $ r0 = new org openqa selenium devtools event <NEXT> $ r1 = org openqa selenium devtools converter function map \ `` request id\ <NEXT> specialinvoke $ r0 < init > \ `` network request serve from cache\ <NEXT> return $ r0 <END>
<BEG> $ r0 = new org openqa selenium devtools event <NEXT> $ r1 = org openqa selenium devtools converter function map \ `` request id\ <NEXT> specialinvoke $ r0 < init > \ `` network web socket created\ <NEXT> return $ r0 <END>
<BEG> r6 = new org openqa selenium devtools command <NEXT> $ r1 = com google common collect immutable map of <NEXT> r5 = new org openqa selenium devtools target target $ 1 <NEXT> specialinvoke r5 < init > <NEXT> $ r3 = r5 get type <NEXT> $ r4 = org openqa selenium devtools converter function map \ `` browser context ids\ <NEXT> r7 = java util map $ r1 <NEXT> specialinvoke r6 < init > \ `` target get browser contexts\ <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` browser context id be required\ `` <NEXT> r4 = new org openqa selenium devtools command <NEXT> $ r3 = com google common collect immutable map of \ `` browser context id\ <NEXT> r5 = java util map $ r3 <NEXT> specialinvoke r4 < init > \ `` target dispose browser context\ <NEXT> return r4 <END>
<BEG> $ r0 = new org openqa selenium devtools event <NEXT> $ r1 = org openqa selenium devtools converter function map \ `` target info\ <NEXT> specialinvoke $ r0 < init > \ `` target target destroyed\ <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org openqa selenium remote http http message r0 <NEXT> $ r2 = r4 attribute <NEXT> $ r3 = $ r2 get r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org openqa selenium remote http http request r0 <NEXT> r2 = r6 get query parameter r1 <NEXT> if r2 ! = null goto label1 <NEXT> return null <NEXT> if r2 ! = null goto label1 <NEXT> label r3 = r2 iterator <NEXT> $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r4 = r3 next <NEXT> $ r5 = java lang string $ r4 <NEXT> goto label3 <NEXT> label return $ r5 <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r5 = null <END>
<BEG> r0 = @ this <NEXT> $ r1 = newarray java lang string [ 3 ] <NEXT> $ r2 = new java lang string builder <NEXT> specialinvoke $ r2 < init > <NEXT> $ r3 = org openqa selenium o windows utils get local app data path <NEXT> $ r4 = $ r2 append $ r3 <NEXT> $ r5 = $ r4 append \ `` \\ google\\ chrome\\ application\ `` <NEXT> $ r6 = $ r5 to string <NEXT> $ r1 [ 0 ] = $ r6 <NEXT> $ r7 = new java lang string builder <NEXT> specialinvoke $ r7 < init > <NEXT> $ r8 = org openqa selenium o windows utils get program files86 path <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ `` \\ google\\ chrome\\ application\ `` <NEXT> $ r11 = $ r10 to string <NEXT> $ r1 [ 1 ] = $ r11 <NEXT> $ r12 = new java lang string builder <NEXT> specialinvoke $ r12 < init > <NEXT> $ r13 = org openqa selenium o windows utils get program file path <NEXT> $ r14 = $ r12 append $ r13 <NEXT> $ r15 = $ r14 append \ `` \\ google\\ chrome\\ application\ `` <NEXT> $ r16 = $ r15 to string <NEXT> $ r1 [ 2 ] = $ r16 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa grid internal utils configuration json grid json configuration r0 <NEXT> $ r1 = r2 servlets <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openqa grid internal utils configuration json node json configuration r0 <NEXT> $ r1 = r2 proxy <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org openqa selenium support pagefactory default element locator r0 <NEXT> $ z0 = r1 should cache <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org openqa selenium support page factory instantiate page r0 r1 <NEXT> org openqa selenium support page factory init element r0 r2 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org openqa selenium support ui expect condition $ 3 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org openqa selenium support ui expect condition r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org openqa selenium support ui expect condition $ 6 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org openqa selenium support ui expect condition r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org openqa selenium support ui expect condition $ 10 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org openqa selenium support ui expect condition r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org openqa selenium support ui expect condition $ 22 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org openqa selenium support ui expect condition r2 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> r2 = new org openqa selenium support ui expect condition $ 25 <NEXT> specialinvoke r2 < init > r0 <NEXT> r3 = org openqa selenium support ui expect condition r2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r5 = org openqa selenium support ui fluent wait r0 <NEXT> $ r2 = specialinvoke r5 to chrono unit r1 <NEXT> $ r3 = java time duration of l0 $ r2 <NEXT> r6 = org openqa selenium support ui fluent wait r0 <NEXT> $ r4 = r6 with timeout $ r3 <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org openrdf model datatypes x m l datatype util be decimal datatype r0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ z1 = org openrdf model datatypes x m l datatype util be float point datatype r0 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 1 <NEXT> goto label3 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label2 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org openrdf model vocabulary x m l schema integer <NEXT> $ z0 = r0 equal $ r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r2 = org openrdf model vocabulary x m l schema long <NEXT> $ z1 = r0 equal $ r2 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ r3 = org openrdf model vocabulary x m l schema int <NEXT> $ z2 = r0 equal $ r3 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> $ r4 = org openrdf model vocabulary x m l schema short <NEXT> $ z3 = r0 equal $ r4 <NEXT> if $ z3 ! = 0 goto label1 <NEXT> $ r5 = org openrdf model vocabulary x m l schema byte <NEXT> $ z4 = r0 equal $ r5 <NEXT> if $ z4 ! = 0 goto label1 <NEXT> $ r6 = org openrdf model vocabulary x m l schema non_positive_integer <NEXT> $ z5 = r0 equal $ r6 <NEXT> if $ z5 ! = 0 goto label1 <NEXT> $ r7 = org openrdf model vocabulary x m l schema negative_integer <NEXT> $ z6 = r0 equal $ r7 <NEXT> if $ z6 ! = 0 goto label1 <NEXT> $ r8 = org openrdf model vocabulary x m l schema non_negative_integer <NEXT> $ z7 = r0 equal $ r8 <NEXT> if $ z7 ! = 0 goto label1 <NEXT> $ r9 = org openrdf model vocabulary x m l schema positive_integer <NEXT> $ z8 = r0 equal $ r9 <NEXT> if $ z8 ! = 0 goto label1 <NEXT> $ r10 = org openrdf model vocabulary x m l schema unsigned_long <NEXT> $ z9 = r0 equal $ r10 <NEXT> if $ z9 ! = 0 goto label1 <NEXT> $ r11 = org openrdf model vocabulary x m l schema unsigned_int <NEXT> $ z10 = r0 equal $ r11 <NEXT> if $ z10 ! = 0 goto label1 <NEXT> $ r12 = org openrdf model vocabulary x m l schema unsigned_short <NEXT> $ z11 = r0 equal $ r12 <NEXT> if $ z11 ! = 0 goto label1 <NEXT> $ r13 = org openrdf model vocabulary x m l schema unsigned_byte <NEXT> $ z12 = r0 equal $ r13 <NEXT> if $ z12 == 0 goto label2 <NEXT> label $ z13 = 1 <NEXT> goto label3 <NEXT> label return $ z13 <NEXT> if $ z12 == 0 goto label2 <NEXT> label $ z13 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org openrdf model vocabulary x m l schema datetime <NEXT> $ z0 = r0 equal $ r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r2 = org openrdf model vocabulary x m l schema date <NEXT> $ z1 = r0 equal $ r2 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ r3 = org openrdf model vocabulary x m l schema time <NEXT> $ z2 = r0 equal $ r3 <NEXT> if $ z2 ! = 0 goto label1 <NEXT> $ r4 = org openrdf model vocabulary x m l schema gyearmonth <NEXT> $ z3 = r0 equal $ r4 <NEXT> if $ z3 ! = 0 goto label1 <NEXT> $ r5 = org openrdf model vocabulary x m l schema gmonthday <NEXT> $ z4 = r0 equal $ r5 <NEXT> if $ z4 ! = 0 goto label1 <NEXT> $ r6 = org openrdf model vocabulary x m l schema gyear <NEXT> $ z5 = r0 equal $ r6 <NEXT> if $ z5 ! = 0 goto label1 <NEXT> $ r7 = org openrdf model vocabulary x m l schema gmonth <NEXT> $ z6 = r0 equal $ r7 <NEXT> if $ z6 ! = 0 goto label1 <NEXT> $ r8 = org openrdf model vocabulary x m l schema gday <NEXT> $ z7 = r0 equal $ r8 <NEXT> if $ z7 == 0 goto label2 <NEXT> label $ z8 = 1 <NEXT> goto label3 <NEXT> label return $ z8 <NEXT> if $ z7 == 0 goto label2 <NEXT> label $ z8 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> z28 = 1 <NEXT> $ r2 = org openrdf model vocabulary x m l schema decimal <NEXT> $ z0 = r1 equal $ r2 <NEXT> if $ z0 == 0 goto label01 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid decimal r0 <NEXT> goto label28 <NEXT> label return z28 <NEXT> if $ z0 == 0 goto label01 <NEXT> label $ r3 = org openrdf model vocabulary x m l schema integer <NEXT> $ z1 = r1 equal $ r3 <NEXT> if $ z1 == 0 goto label02 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid integer r0 <NEXT> if $ z1 == 0 goto label02 <NEXT> label $ r4 = org openrdf model vocabulary x m l schema negative_integer <NEXT> $ z2 = r1 equal $ r4 <NEXT> if $ z2 == 0 goto label03 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid negative integer r0 <NEXT> if $ z2 == 0 goto label03 <NEXT> label $ r5 = org openrdf model vocabulary x m l schema non_positive_integer <NEXT> $ z3 = r1 equal $ r5 <NEXT> if $ z3 == 0 goto label04 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid non positive integer r0 <NEXT> if $ z3 == 0 goto label04 <NEXT> label $ r6 = org openrdf model vocabulary x m l schema non_negative_integer <NEXT> $ z4 = r1 equal $ r6 <NEXT> if $ z4 == 0 goto label05 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid non negative integer r0 <NEXT> if $ z4 == 0 goto label05 <NEXT> label $ r7 = org openrdf model vocabulary x m l schema positive_integer <NEXT> $ z5 = r1 equal $ r7 <NEXT> if $ z5 == 0 goto label06 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid positive integer r0 <NEXT> if $ z5 == 0 goto label06 <NEXT> label $ r8 = org openrdf model vocabulary x m l schema long <NEXT> $ z6 = r1 equal $ r8 <NEXT> if $ z6 == 0 goto label07 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid long r0 <NEXT> if $ z6 == 0 goto label07 <NEXT> label $ r9 = org openrdf model vocabulary x m l schema int <NEXT> $ z7 = r1 equal $ r9 <NEXT> if $ z7 == 0 goto label08 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid int r0 <NEXT> if $ z7 == 0 goto label08 <NEXT> label $ r10 = org openrdf model vocabulary x m l schema short <NEXT> $ z8 = r1 equal $ r10 <NEXT> if $ z8 == 0 goto label09 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid short r0 <NEXT> if $ z8 == 0 goto label09 <NEXT> label $ r11 = org openrdf model vocabulary x m l schema byte <NEXT> $ z9 = r1 equal $ r11 <NEXT> if $ z9 == 0 goto label10 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid byte r0 <NEXT> if $ z9 == 0 goto label10 <NEXT> label $ r12 = org openrdf model vocabulary x m l schema unsigned_long <NEXT> $ z10 = r1 equal $ r12 <NEXT> if $ z10 == 0 goto label11 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid unsigned long r0 <NEXT> if $ z10 == 0 goto label11 <NEXT> label $ r13 = org openrdf model vocabulary x m l schema unsigned_int <NEXT> $ z11 = r1 equal $ r13 <NEXT> if $ z11 == 0 goto label12 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid unsigned int r0 <NEXT> if $ z11 == 0 goto label12 <NEXT> label $ r14 = org openrdf model vocabulary x m l schema unsigned_short <NEXT> $ z12 = r1 equal $ r14 <NEXT> if $ z12 == 0 goto label13 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid unsigned short r0 <NEXT> if $ z12 == 0 goto label13 <NEXT> label $ r15 = org openrdf model vocabulary x m l schema unsigned_byte <NEXT> $ z13 = r1 equal $ r15 <NEXT> if $ z13 == 0 goto label14 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid unsigned byte r0 <NEXT> if $ z13 == 0 goto label14 <NEXT> label $ r16 = org openrdf model vocabulary x m l schema float <NEXT> $ z14 = r1 equal $ r16 <NEXT> if $ z14 == 0 goto label15 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid float r0 <NEXT> if $ z14 == 0 goto label15 <NEXT> label $ r17 = org openrdf model vocabulary x m l schema double <NEXT> $ z15 = r1 equal $ r17 <NEXT> if $ z15 == 0 goto label16 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid double r0 <NEXT> if $ z15 == 0 goto label16 <NEXT> label $ r18 = org openrdf model vocabulary x m l schema boolean <NEXT> $ z16 = r1 equal $ r18 <NEXT> if $ z16 == 0 goto label17 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid boolean r0 <NEXT> if $ z16 == 0 goto label17 <NEXT> label $ r19 = org openrdf model vocabulary x m l schema datetime <NEXT> $ z17 = r1 equal $ r19 <NEXT> if $ z17 == 0 goto label18 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid date time r0 <NEXT> if $ z17 == 0 goto label18 <NEXT> label $ r20 = org openrdf model vocabulary x m l schema date <NEXT> $ z18 = r1 equal $ r20 <NEXT> if $ z18 == 0 goto label19 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid date r0 <NEXT> if $ z18 == 0 goto label19 <NEXT> label $ r21 = org openrdf model vocabulary x m l schema time <NEXT> $ z19 = r1 equal $ r21 <NEXT> if $ z19 == 0 goto label20 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid time r0 <NEXT> if $ z19 == 0 goto label20 <NEXT> label $ r22 = org openrdf model vocabulary x m l schema gday <NEXT> $ z20 = r1 equal $ r22 <NEXT> if $ z20 == 0 goto label21 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid g day r0 <NEXT> if $ z20 == 0 goto label21 <NEXT> label $ r23 = org openrdf model vocabulary x m l schema gmonth <NEXT> $ z21 = r1 equal $ r23 <NEXT> if $ z21 == 0 goto label22 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid g month r0 <NEXT> if $ z21 == 0 goto label22 <NEXT> label $ r24 = org openrdf model vocabulary x m l schema gmonthday <NEXT> $ z22 = r1 equal $ r24 <NEXT> if $ z22 == 0 goto label23 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid g month day r0 <NEXT> if $ z22 == 0 goto label23 <NEXT> label $ r25 = org openrdf model vocabulary x m l schema gyear <NEXT> $ z23 = r1 equal $ r25 <NEXT> if $ z23 == 0 goto label24 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid g year r0 <NEXT> if $ z23 == 0 goto label24 <NEXT> label $ r26 = org openrdf model vocabulary x m l schema gyearmonth <NEXT> $ z24 = r1 equal $ r26 <NEXT> if $ z24 == 0 goto label25 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid g year month r0 <NEXT> if $ z24 == 0 goto label25 <NEXT> label $ r27 = org openrdf model vocabulary x m l schema duration <NEXT> $ z25 = r1 equal $ r27 <NEXT> if $ z25 == 0 goto label26 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid duration r0 <NEXT> if $ z25 == 0 goto label26 <NEXT> label $ r28 = org openrdf model vocabulary x m l schema daytimeduration <NEXT> $ z26 = r1 equal $ r28 <NEXT> if $ z26 == 0 goto label27 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid day time duration r0 <NEXT> if $ z26 == 0 goto label27 <NEXT> label $ r29 = org openrdf model vocabulary x m l schema qname <NEXT> $ z27 = r1 equal $ r29 <NEXT> if $ z27 == 0 goto label28 <NEXT> z28 = org openrdf model datatypes x m l datatype util be valid q name r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r20 = r0 <NEXT> $ r2 = org openrdf model vocabulary x m l schema decimal <NEXT> $ z0 = r1 equal $ r2 <NEXT> if $ z0 == 0 goto label01 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize decimal r0 <NEXT> goto label18 <NEXT> label return r20 <NEXT> if $ z0 == 0 goto label01 <NEXT> label $ r3 = org openrdf model vocabulary x m l schema integer <NEXT> $ z1 = r1 equal $ r3 <NEXT> if $ z1 == 0 goto label02 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize integer r0 <NEXT> if $ z1 == 0 goto label02 <NEXT> label $ r4 = org openrdf model vocabulary x m l schema negative_integer <NEXT> $ z2 = r1 equal $ r4 <NEXT> if $ z2 == 0 goto label03 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize negative integer r0 <NEXT> if $ z2 == 0 goto label03 <NEXT> label $ r5 = org openrdf model vocabulary x m l schema non_positive_integer <NEXT> $ z3 = r1 equal $ r5 <NEXT> if $ z3 == 0 goto label04 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize non positive integer r0 <NEXT> if $ z3 == 0 goto label04 <NEXT> label $ r6 = org openrdf model vocabulary x m l schema non_negative_integer <NEXT> $ z4 = r1 equal $ r6 <NEXT> if $ z4 == 0 goto label05 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize non negative integer r0 <NEXT> if $ z4 == 0 goto label05 <NEXT> label $ r7 = org openrdf model vocabulary x m l schema positive_integer <NEXT> $ z5 = r1 equal $ r7 <NEXT> if $ z5 == 0 goto label06 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize positive integer r0 <NEXT> if $ z5 == 0 goto label06 <NEXT> label $ r8 = org openrdf model vocabulary x m l schema long <NEXT> $ z6 = r1 equal $ r8 <NEXT> if $ z6 == 0 goto label07 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize long r0 <NEXT> if $ z6 == 0 goto label07 <NEXT> label $ r9 = org openrdf model vocabulary x m l schema int <NEXT> $ z7 = r1 equal $ r9 <NEXT> if $ z7 == 0 goto label08 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize int r0 <NEXT> if $ z7 == 0 goto label08 <NEXT> label $ r10 = org openrdf model vocabulary x m l schema short <NEXT> $ z8 = r1 equal $ r10 <NEXT> if $ z8 == 0 goto label09 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize short r0 <NEXT> if $ z8 == 0 goto label09 <NEXT> label $ r11 = org openrdf model vocabulary x m l schema byte <NEXT> $ z9 = r1 equal $ r11 <NEXT> if $ z9 == 0 goto label10 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize byte r0 <NEXT> if $ z9 == 0 goto label10 <NEXT> label $ r12 = org openrdf model vocabulary x m l schema unsigned_long <NEXT> $ z10 = r1 equal $ r12 <NEXT> if $ z10 == 0 goto label11 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize unsigned long r0 <NEXT> if $ z10 == 0 goto label11 <NEXT> label $ r13 = org openrdf model vocabulary x m l schema unsigned_int <NEXT> $ z11 = r1 equal $ r13 <NEXT> if $ z11 == 0 goto label12 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize unsigned int r0 <NEXT> if $ z11 == 0 goto label12 <NEXT> label $ r14 = org openrdf model vocabulary x m l schema unsigned_short <NEXT> $ z12 = r1 equal $ r14 <NEXT> if $ z12 == 0 goto label13 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize unsigned short r0 <NEXT> if $ z12 == 0 goto label13 <NEXT> label $ r15 = org openrdf model vocabulary x m l schema unsigned_byte <NEXT> $ z13 = r1 equal $ r15 <NEXT> if $ z13 == 0 goto label14 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize unsigned byte r0 <NEXT> if $ z13 == 0 goto label14 <NEXT> label $ r16 = org openrdf model vocabulary x m l schema float <NEXT> $ z14 = r1 equal $ r16 <NEXT> if $ z14 == 0 goto label15 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize float r0 <NEXT> if $ z14 == 0 goto label15 <NEXT> label $ r17 = org openrdf model vocabulary x m l schema double <NEXT> $ z15 = r1 equal $ r17 <NEXT> if $ z15 == 0 goto label16 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize double r0 <NEXT> if $ z15 == 0 goto label16 <NEXT> label $ r18 = org openrdf model vocabulary x m l schema boolean <NEXT> $ z16 = r1 equal $ r18 <NEXT> if $ z16 == 0 goto label17 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize boolean r0 <NEXT> if $ z16 == 0 goto label17 <NEXT> label $ r19 = org openrdf model vocabulary x m l schema datetime <NEXT> $ z17 = r1 equal $ r19 <NEXT> if $ z17 == 0 goto label18 <NEXT> r20 = org openrdf model datatypes x m l datatype util normalize date time r0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org openrdf model datatypes x m l datatype util normalize f p number r0 \ `` -16777215 0\ <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org openrdf model datatypes x m l datatype util normalize float r0 <NEXT> r3 = org openrdf model datatypes x m l datatype util normalize float r1 <NEXT> $ i0 = org openrdf model datatypes x m l datatype util compare canonical float r2 r3 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ i0 = org openrdf model datatypes x m l datatype util compare canonical f p number r0 r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = org openrdf model datatypes x m l datatype util normalize f p number r0 <NEXT> r3 = org openrdf model datatypes x m l datatype util normalize f p number r1 <NEXT> $ i0 = org openrdf model datatypes x m l datatype util compare canonical f p number r2 r3 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org openrdf model datatypes x m l datatype util trim plus sign r0 <NEXT> $ b0 = java lang byte parse byte r1 <NEXT> return $ b0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org openrdf model datatypes x m l datatype util trim plus sign r0 <NEXT> $ i0 = java lang integer parse int r1 <NEXT> return $ i0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = org openrdf model datatypes x m l datatype util trim plus sign r0 <NEXT> $ l0 = java lang long parse long r1 <NEXT> return $ l0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = r0 match r1 r2 null r3 <NEXT> r6 = new org openrdf model util graph util $ 2 <NEXT> specialinvoke r6 < init > r4 <NEXT> r7 = java util iterator r6 <NEXT> return r7 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> if r0 == null goto label1 <NEXT> $ r2 = r0 get label <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if r0 == null goto label1 <NEXT> label $ r2 = r1 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> label $ i1 = r0 int value <NEXT> label return $ i1 <END>
<BEG> r0 = @ this <NEXT> r3 = org openrdf rio parser config r0 <NEXT> $ r1 = r3 non fatal error <NEXT> $ r2 = java util collection unmodifiable set $ r1 <NEXT> return $ r2 <END>
<BEG> i0 = @ parameter0 <NEXT> i1 = @ parameter1 <NEXT> if i0 > = 0 goto label1 <NEXT> return \ `` \ `` <NEXT> if i0 > = 0 goto label1 <NEXT> label $ r1 = new java lang string builder <NEXT> specialinvoke $ r1 < init > 16 <NEXT> $ r1 append \ `` [ line \ `` <NEXT> $ r1 append i0 <NEXT> if i1 < 0 goto label2 <NEXT> $ r1 append \ <NEXT> $ r1 append i1 <NEXT> label $ r1 append \ `` ] \ `` <NEXT> $ r5 = $ r1 to string <NEXT> return $ r5 <END>
<BEG> $ r0 = org openrdf rio r d f parser registry default registry <NEXT> if $ r0 ! = null goto label1 <NEXT> $ r2 = new org openrdf rio r d f parser registry <NEXT> specialinvoke $ r2 < init > <NEXT> org openrdf rio r d f parser registry default registry = $ r2 <NEXT> label $ r1 = org openrdf rio r d f parser registry default registry <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org openrdf rio rio config r0 <NEXT> $ r1 = r2 setting <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r1 = new java lang string builder <NEXT> $ r2 = r0 get i d <NEXT> $ i0 = $ r2 length <NEXT> $ i1 = $ i0 + 1 <NEXT> specialinvoke $ r1 < init > $ i1 <NEXT> org openrdf rio ntriples n triple util append r0 $ r1 <NEXT> $ r3 = $ r1 to string <NEXT> label return $ r3 <END>
<BEG> r0 = @ this <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> r16 append \ `` atts [ \ `` <NEXT> i1 = 0 <NEXT> label r17 = org openrdf rio rdfxml atts r0 <NEXT> $ r5 = r17 attribute <NEXT> $ i0 = $ r5 size <NEXT> if i1 > = $ i0 goto label2 <NEXT> r18 = org openrdf rio rdfxml atts r0 <NEXT> $ r8 = r18 attribute <NEXT> $ r9 = $ r8 get i1 <NEXT> r2 = org openrdf rio rdfxml att $ r9 <NEXT> $ r10 = r2 get q name <NEXT> r16 append $ r10 <NEXT> r16 append \ `` =\ `` <NEXT> $ r13 = r2 get value <NEXT> r16 append $ r13 <NEXT> r16 append \ `` \ `` <NEXT> i1 = i1 + 1 <NEXT> goto label1 <NEXT> if i1 > = $ i0 goto label2 <NEXT> label r16 append \ `` ] \ `` <NEXT> $ r7 = r16 to string <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org openrdf rio rdfxml s a x filter r0 <NEXT> r4 locator = r1 <NEXT> r5 = org openrdf rio rdfxml s a x filter r0 <NEXT> $ r3 = r5 rdf parser <NEXT> r2 = $ r3 get parse location listener <NEXT> if r2 == null goto label1 <NEXT> if r1 == null goto label1 <NEXT> $ i0 = r1 get line number <NEXT> $ i1 = r1 get column number <NEXT> r2 parse location update $ i0 $ i1 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> i3 = @ parameter1 <NEXT> i4 = @ parameter2 <NEXT> b0 = @ parameter3 <NEXT> i5 = -1 <NEXT> if i3 > = 0 goto label1 <NEXT> i3 = 0 <NEXT> label $ i1 = lengthof r0 <NEXT> i6 = java lang math min i4 $ i1 <NEXT> i7 = i3 <NEXT> label if i3 > = i6 goto label4 <NEXT> if i5 ! = -1 goto label4 <NEXT> if i7 > = i6 goto label4 <NEXT> $ b2 = r0 [ i7 ] <NEXT> if $ b2 ! = b0 goto label3 <NEXT> i5 = i7 <NEXT> label i7 = i7 + 1 <NEXT> goto label2 <NEXT> if i7 > = i6 goto label4 <NEXT> label return i5 <END>
<BEG> r0 = @ parameter0 <NEXT> z3 = 1 <NEXT> $ z0 = r0 be directory <NEXT> if $ z0 == 0 goto label5 <NEXT> r1 = r0 list file <NEXT> i1 = lengthof r1 <NEXT> label $ i0 = i1 <NEXT> i1 = i1 + -1 <NEXT> if $ i0 < = 0 goto label5 <NEXT> r2 = r1 [ i1 ] <NEXT> $ z1 = r2 be file <NEXT> if $ z1 == 0 goto label4 <NEXT> if z3 == 0 goto label2 <NEXT> $ z2 = r2 delete <NEXT> if $ z2 == 0 goto label2 <NEXT> $ z4 = 1 <NEXT> goto label3 <NEXT> label z3 = $ z4 <NEXT> label goto label1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z4 = 0 <NEXT> if $ i0 < = 0 goto label5 <NEXT> label return z3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return 0 <NEXT> if r1 ! = null goto label1 <NEXT> label r6 = r1 <NEXT> $ i0 = r1 index of 59 <NEXT> if $ i0 < = 0 goto label2 <NEXT> $ i1 = r1 index of 59 <NEXT> r6 = r1 substring 0 $ i1 <NEXT> label r7 = info aduna lang file format r0 <NEXT> $ r4 = r7 mime type <NEXT> r2 = $ r4 iterator <NEXT> label $ z2 = r2 have next <NEXT> if $ z2 == 0 goto label6 <NEXT> $ r5 = r2 next <NEXT> r3 = java lang string $ r5 <NEXT> $ z0 = r3 equal ignore case r1 <NEXT> if $ z0 == 0 goto label4 <NEXT> return 1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label if r1 == r6 goto label5 <NEXT> $ z1 = r3 equal ignore case r6 <NEXT> if $ z1 == 0 goto label5 <NEXT> label goto label3 <NEXT> if $ z2 == 0 goto label6 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r2 = info aduna lang file format r0 <NEXT> $ r1 = r2 charset <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> $ i0 = 0 <NEXT> goto label2 <NEXT> label return $ i0 <NEXT> if r0 ! = null goto label1 <NEXT> label $ i0 = r0 hash code <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = 0 <NEXT> $ r1 = r0 trim <NEXT> $ i0 = $ r1 length <NEXT> if $ i0 > = 3 goto label1 <NEXT> z0 = 1 <NEXT> goto label4 <NEXT> label return z0 <NEXT> if $ i0 > = 3 goto label1 <NEXT> label $ i1 = r0 length <NEXT> if $ i1 < = 30 goto label4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = info aduna text string util gsub \ `` & \ <NEXT> r2 = info aduna text string util gsub \ `` < \ <NEXT> r3 = info aduna text string util gsub \ `` > \ <NEXT> r4 = info aduna text string util gsub \ `` \r\ <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss shrinkwrap api asset byte array asset r0 <NEXT> $ r1 = r2 content <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java lang string value of r1 <NEXT> r4 = org jboss shrinkwrap descriptor spi node node r0 <NEXT> $ r3 = r4 text $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss shrinkwrap descriptor spi node node r0 <NEXT> $ r1 = r2 text <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = new java util array list <NEXT> specialinvoke r10 < init > <NEXT> r11 = org jboss shrinkwrap descriptor spi node node r0 <NEXT> r3 = r11 get r1 <NEXT> r4 = r3 iterator <NEXT> label $ z0 = r4 have next <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r9 = r4 next <NEXT> r5 = org jboss shrinkwrap descriptor spi node node $ r9 <NEXT> r6 = r5 get text <NEXT> if r6 == null goto label2 <NEXT> r10 add r6 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r8 = java util collection unmodifiable list r10 <NEXT> return $ r8 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r5 = org jboss shrinkwrap impl base io tar tar archive r0 <NEXT> r5 debug = z0 <NEXT> r6 = org jboss shrinkwrap impl base io tar tar archive r0 <NEXT> $ r1 = r6 tar in <NEXT> if $ r1 == null goto label1 <NEXT> r7 = org jboss shrinkwrap impl base io tar tar archive r0 <NEXT> $ r4 = r7 tar in <NEXT> $ r4 set debug z0 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r1 == null goto label1 <NEXT> label r8 = org jboss shrinkwrap impl base io tar tar archive r0 <NEXT> $ r2 = r8 tar out <NEXT> if $ r2 == null goto label2 <NEXT> r9 = org jboss shrinkwrap impl base io tar tar archive r0 <NEXT> $ r3 = r9 tar out <NEXT> $ r3 set debug z0 <END>
<BEG> r0 = @ this <NEXT> r1 = org jboss shrinkwrap impl base io tar tar archive r0 <NEXT> $ i0 = r1 user id <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 instanceof org jboss shrinkwrap impl base io tar tar entry <NEXT> if $ z0 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label $ r2 = org jboss shrinkwrap impl base io tar tar entry r1 <NEXT> r3 = org jboss shrinkwrap impl base io tar tar entry r0 <NEXT> $ z1 = r3 equal $ r2 <NEXT> return $ z1 <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss shrinkwrap impl base io tar tar output stream impl r0 <NEXT> r2 finish <NEXT> r3 = org jboss shrinkwrap impl base io tar tar output stream impl r0 <NEXT> $ r1 = r3 buffer <NEXT> $ r1 close <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r1 = new java lang unsupported operation exception <NEXT> specialinvoke $ r1 < init > \ `` enterprise archive do not support classes\ `` <NEXT> throw $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = io prometheus client collector r0 <NEXT> r1 register r2 <NEXT> r3 = io prometheus client collector r0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = io prometheus client counter r0 <NEXT> r1 inc 1 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = io prometheus client gauge r0 <NEXT> r1 dec 1 0 <NEXT> return <END>
<BEG> $ r0 = new io prometheus client summary $ builder <NEXT> specialinvoke $ r0 < init > <NEXT> return $ r0 <END>
<BEG> r0 = @ this <NEXT> d0 = @ parameter0 <NEXT> r3 = io prometheus client summary r0 <NEXT> $ r1 = r3 no label child <NEXT> $ r2 = io prometheus client summary $ child $ r1 <NEXT> $ r2 observe d0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org yaml snakeyaml type description r0 <NEXT> $ z0 = r1 root <NEXT> return $ z0 <END>
<BEG> r0 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r1 = @ parameter3 <NEXT> i2 = @ parameter4 <NEXT> $ r2 = org xerial snappy snappy impl <NEXT> $ r2 array copy r0 i0 i1 r1 i2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r2 = org xerial snappy snappy output stream r0 <NEXT> r2 raw write r1 i0 i1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> i1 = @ parameter2 <NEXT> r2 = org xerial snappy snappy output stream r0 <NEXT> r2 raw write r1 i0 i1 <NEXT> return <END>
<BEG> $ r0 = spark globalstate servlet flag be run from servlet <NEXT> $ r0 set 1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = spark redirect r0 <NEXT> r3 get r1 r2 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = spark redirect r0 <NEXT> r3 delete r1 r2 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = spark response r0 <NEXT> $ r1 = r2 response <NEXT> $ i0 = $ r1 get status <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ r3 = spark route http method connect <NEXT> $ r4 = $ r3 name <NEXT> $ r5 = spark route impl create r1 r2 <NEXT> r6 = spark routable r0 <NEXT> r6 add route $ r4 $ r5 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r2 = spark route http method method <NEXT> $ r3 = $ r2 get r0 <NEXT> r1 = spark route http method $ r3 <NEXT> if r1 == null goto label1 <NEXT> $ r4 = r1 <NEXT> goto label2 <NEXT> label return $ r4 <NEXT> if r1 == null goto label1 <NEXT> label $ r4 = spark route http method unsupported <END>
<BEG> r0 = @ this <NEXT> r3 = spark service r0 <NEXT> $ z0 = r3 initialize <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = spark service r0 <NEXT> $ i0 = r4 port <NEXT> return $ i0 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = new java lang illegal state exception <NEXT> specialinvoke r2 < init > \ `` this must be do after route mapping have begun\ `` <NEXT> throw r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = spark service r0 <NEXT> $ r1 = r2 thread pool i0 -1 -1 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = new spark embeddedserver jetty websocket web socket handler class wrapper <NEXT> specialinvoke r4 < init > r2 <NEXT> r5 = spark service r0 <NEXT> r6 = spark embeddedserver jetty websocket web socket handler wrapper r4 <NEXT> specialinvoke r5 add web socket handler r1 r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = spark session r0 <NEXT> $ r3 = r4 session <NEXT> $ r3 set attribute r1 r2 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = r0 get protocol <NEXT> $ r2 = \ `` jar\ `` <NEXT> $ z0 = $ r2 equal r1 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> $ r3 = \ `` zip\ `` <NEXT> $ z1 = $ r3 equal r1 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> $ r4 = \ `` wsjar\ `` <NEXT> $ z2 = $ r4 equal r1 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 1 <NEXT> goto label3 <NEXT> label return $ z3 <NEXT> if $ z2 == 0 goto label2 <NEXT> label $ z3 = 0 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> l1 = l0 * 8l <NEXT> r16 = org apache spark memory memory consumer r0 <NEXT> $ r2 = r16 task memory manager <NEXT> r17 = org apache spark memory memory consumer r0 <NEXT> r1 = $ r2 allocate page l1 r17 <NEXT> if r1 == null goto label1 <NEXT> $ l2 = r1 size <NEXT> $ b3 = $ l2 cmp l1 <NEXT> if $ b3 > = 0 goto label3 <NEXT> label l6 = 0l <NEXT> if r1 == null goto label2 <NEXT> l6 = r1 size <NEXT> r18 = org apache spark memory memory consumer r0 <NEXT> $ r11 = r18 task memory manager <NEXT> r19 = org apache spark memory memory consumer r0 <NEXT> $ r11 free page r1 r19 <NEXT> label r20 = org apache spark memory memory consumer r0 <NEXT> $ r3 = r20 task memory manager <NEXT> $ r3 show memory usage <NEXT> r14 = new java lang out of memory error <NEXT> r13 = new java lang string builder <NEXT> specialinvoke r13 < init > <NEXT> $ r6 = r13 append \ `` unable to acquire \ `` <NEXT> $ r7 = $ r6 append l1 <NEXT> $ r8 = $ r7 append \ `` byte of memory get \ `` <NEXT> $ r9 = $ r8 append l6 <NEXT> $ r10 = $ r9 to string <NEXT> specialinvoke r14 < init > $ r10 <NEXT> throw r14 <NEXT> if $ b3 > = 0 goto label3 <NEXT> label r21 = org apache spark memory memory consumer r0 <NEXT> $ l4 = r21 use <NEXT> $ l5 = $ l4 + l1 <NEXT> r22 = org apache spark memory memory consumer r0 <NEXT> r22 use = $ l5 <NEXT> r15 = new org apache spark unsafe array long array <NEXT> specialinvoke r15 < init > r1 <NEXT> return r15 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 memory block <NEXT> r3 = org apache spark memory memory consumer r0 <NEXT> r3 free page $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r12 = org apache spark shuffle sort shuffle external sorter r0 <NEXT> specialinvoke r12 free memory <NEXT> r13 = org apache spark shuffle sort shuffle external sorter r0 <NEXT> $ r3 = r13 in mem sorter <NEXT> if $ r3 == null goto label1 <NEXT> r14 = org apache spark shuffle sort shuffle external sorter r0 <NEXT> $ r11 = r14 in mem sorter <NEXT> $ r11 free <NEXT> r15 = org apache spark shuffle sort shuffle external sorter r0 <NEXT> r15 in mem sorter = null <NEXT> label r16 = org apache spark shuffle sort shuffle external sorter r0 <NEXT> $ r4 = r16 spill <NEXT> r1 = $ r4 iterator <NEXT> label $ z2 = r1 have next <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r5 = r1 next <NEXT> r2 = org apache spark shuffle sort spill info $ r5 <NEXT> $ r6 = r2 file <NEXT> $ z0 = $ r6 exist <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r7 = r2 file <NEXT> $ z1 = $ r7 delete <NEXT> if $ z1 ! = 0 goto label3 <NEXT> $ r9 = org apache spark shuffle sort shuffle external sorter logger <NEXT> $ r8 = r2 file <NEXT> $ r10 = $ r8 get path <NEXT> $ r9 error \ `` unable to delete spill file { } \ <NEXT> label goto label2 <NEXT> if $ z2 == 0 goto label4 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r6 = org apache spark unsafe map byte to byte map r0 <NEXT> r6 num key = 0 <NEXT> r7 = org apache spark unsafe map byte to byte map r0 <NEXT> r7 num value = 0 <NEXT> r8 = org apache spark unsafe map byte to byte map r0 <NEXT> $ r2 = r8 long array <NEXT> r9 = org apache spark unsafe map byte to byte map r0 <NEXT> r9 free array $ r2 <NEXT> label r10 = org apache spark unsafe map byte to byte map r0 <NEXT> $ r3 = r10 data page <NEXT> $ i0 = $ r3 size <NEXT> if $ i0 < = 0 goto label2 <NEXT> r11 = org apache spark unsafe map byte to byte map r0 <NEXT> $ r4 = r11 data page <NEXT> $ r5 = $ r4 remove last <NEXT> r1 = org apache spark unsafe memory memory block $ r5 <NEXT> r12 = org apache spark unsafe map byte to byte map r0 <NEXT> r12 free page r1 <NEXT> goto label1 <NEXT> if $ i0 < = 0 goto label2 <NEXT> label r13 = org apache spark unsafe map byte to byte map r0 <NEXT> $ i1 = r13 initial capacity <NEXT> r14 = org apache spark unsafe map byte to byte map r0 <NEXT> specialinvoke r14 allocate $ i1 <NEXT> r15 = org apache spark unsafe map byte to byte map r0 <NEXT> r15 can grow array = 1 <NEXT> r16 = org apache spark unsafe map byte to byte map r0 <NEXT> r16 current page = null <NEXT> r17 = org apache spark unsafe map byte to byte map r0 <NEXT> r17 page cursor = 0l <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org apache spark launcher command builder utils check not null r1 \ `` spark home\ `` <NEXT> r5 = org apache spark launcher spark launcher r0 <NEXT> $ r2 = r5 builder <NEXT> $ r3 = $ r2 child env <NEXT> $ r3 put \ `` spark_home\ <NEXT> r6 = org apache spark launcher spark launcher r0 <NEXT> return r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache spark network client transport client r0 <NEXT> $ r1 = r2 client id <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache spark network crypto transport cipher r0 <NEXT> $ r1 = r2 out iv <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 pipeline <NEXT> r7 = new org apache spark network crypto transport cipher $ encryption handler <NEXT> r9 = org apache spark network crypto transport cipher r0 <NEXT> specialinvoke r7 < init > r9 <NEXT> r10 = io netty channel channel handler r7 <NEXT> $ r4 = $ r2 add first \ `` transport encryption\ <NEXT> r8 = new org apache spark network crypto transport cipher $ decryption handler <NEXT> r11 = org apache spark network crypto transport cipher r0 <NEXT> specialinvoke r8 < init > r11 <NEXT> r12 = io netty channel channel handler r8 <NEXT> $ r4 add first \ `` transport decryption\ <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> org spark_project guava base precondition check not null r0 \ `` password can not be null if sasl be enabled\ `` <NEXT> $ r2 = org apache spark network sasl spark sasl server get base64 encode string r0 <NEXT> $ r3 = $ r2 to char array <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i1 = r1 remain <NEXT> r5 = org apache spark network util byte array writable channel r0 <NEXT> $ r2 = r5 data <NEXT> $ i3 = lengthof $ r2 <NEXT> r6 = org apache spark network util byte array writable channel r0 <NEXT> $ i2 = r6 offset <NEXT> $ i4 = $ i3 - $ i2 <NEXT> i0 = java lang math min $ i1 $ i4 <NEXT> r7 = org apache spark network util byte array writable channel r0 <NEXT> $ r3 = r7 data <NEXT> r8 = org apache spark network util byte array writable channel r0 <NEXT> $ i5 = r8 offset <NEXT> r1 get $ r3 $ i5 i0 <NEXT> r9 = org apache spark network util byte array writable channel r0 <NEXT> $ i6 = r9 offset <NEXT> $ i7 = $ i6 + i0 <NEXT> r10 = org apache spark network util byte array writable channel r0 <NEXT> r10 offset = $ i7 <NEXT> return i0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = org apache spark network util byte unit byte <NEXT> $ l0 = org apache spark network util java utils byte string a r0 $ r1 <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r11 = org apache spark network util transport conf r0 <NEXT> $ r1 = r11 conf <NEXT> $ r2 = $ r1 get \ `` spark network timeout\ <NEXT> l0 = org apache spark network util java utils time string a sec $ r2 <NEXT> r12 = org apache spark network util transport conf r0 <NEXT> $ r4 = r12 conf <NEXT> r13 = org apache spark network util transport conf r0 <NEXT> $ r5 = r13 spark_network_io_connectiontimeout_key <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r6 = r10 append l0 <NEXT> $ r7 = $ r6 append \ `` s\ `` <NEXT> $ r8 = $ r7 to string <NEXT> $ r9 = $ r4 get $ r5 $ r8 <NEXT> $ l2 = org apache spark network util java utils time string a sec $ r9 <NEXT> l1 = $ l2 * 1000l <NEXT> $ i3 = int l1 <NEXT> return $ i3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r4 = r3 split \ `` _\ `` <NEXT> $ i3 = lengthof r4 <NEXT> if $ i3 > = 4 goto label1 <NEXT> r28 = new java lang illegal argument exception <NEXT> r27 = new java lang string builder <NEXT> specialinvoke r27 < init > <NEXT> $ r24 = r27 append \ `` unexpected block id format \ `` <NEXT> $ r25 = $ r24 append r3 <NEXT> $ r26 = $ r25 to string <NEXT> specialinvoke r28 < init > $ r26 <NEXT> throw r28 <NEXT> if $ i3 > = 4 goto label1 <NEXT> label $ r6 = r4 [ 0 ] <NEXT> $ z0 = $ r6 equal \ `` shuffle\ `` <NEXT> if $ z0 ! = 0 goto label2 <NEXT> r30 = new java lang illegal argument exception <NEXT> r29 = new java lang string builder <NEXT> specialinvoke r29 < init > <NEXT> $ r19 = r29 append \ `` expect shuffle block id get \ `` <NEXT> $ r20 = $ r19 append r3 <NEXT> $ r21 = $ r20 to string <NEXT> specialinvoke r30 < init > $ r21 <NEXT> throw r30 <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r7 = r4 [ 1 ] <NEXT> i0 = java lang integer parse int $ r7 <NEXT> $ r8 = r4 [ 2 ] <NEXT> i1 = java lang integer parse int $ r8 <NEXT> $ r9 = r4 [ 3 ] <NEXT> i2 = java lang integer parse int $ r9 <NEXT> r33 = org apache spark network shuffle external shuffle block resolver r0 <NEXT> $ r11 = r33 executor <NEXT> r31 = new org apache spark network shuffle external shuffle block resolver $ app exec id <NEXT> specialinvoke r31 < init > r1 r2 <NEXT> $ r12 = $ r11 get r31 <NEXT> r5 = org apache spark network shuffle protocol executor shuffle info $ r12 <NEXT> if r5 ! = null goto label3 <NEXT> r32 = new java lang runtime exception <NEXT> $ r15 = newarray java lang object [ 2 ] <NEXT> $ r15 [ 0 ] = r1 <NEXT> $ r15 [ 1 ] = r2 <NEXT> $ r16 = java lang string format \ `` executor be not registered app id= % s exec id= % s \ <NEXT> specialinvoke r32 < init > $ r16 <NEXT> throw r32 <NEXT> if r5 ! = null goto label3 <NEXT> label r34 = org apache spark network shuffle external shuffle block resolver r0 <NEXT> $ r13 = specialinvoke r34 get sort base shuffle block data r5 i0 i1 i2 <NEXT> return $ r13 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache spark network shuffle retry block fetcher r0 <NEXT> specialinvoke r1 fetch all outstanding <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ r1 = new org apache spark unsafe memory memory block <NEXT> $ i0 = org apache spark unsafe platform long_array_offset <NEXT> $ l4 = long $ i0 <NEXT> $ i1 = lengthof r0 <NEXT> $ l2 = long $ i1 <NEXT> $ l3 = $ l2 * 8l <NEXT> specialinvoke $ r1 < init > r0 $ l4 $ l3 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i1 = r1 num bytes <NEXT> if $ i1 ! = 0 goto label1 <NEXT> return 1 <NEXT> if $ i1 ! = 0 goto label1 <NEXT> label b0 = specialinvoke r1 get byte 0 <NEXT> i6 = 0 <NEXT> label r2 = org apache spark unsafe type u t f8 string r0 <NEXT> $ i3 = r2 num bytes <NEXT> $ i2 = r1 num bytes <NEXT> $ i4 = $ i3 - $ i2 <NEXT> if i6 > $ i4 goto label4 <NEXT> r3 = org apache spark unsafe type u t f8 string r0 <NEXT> $ b5 = specialinvoke r3 get byte i6 <NEXT> if $ b5 ! = b0 goto label3 <NEXT> r4 = org apache spark unsafe type u t f8 string r0 <NEXT> $ z0 = specialinvoke r4 match at r1 i6 <NEXT> if $ z0 == 0 goto label3 <NEXT> label i6 = i6 + 1 <NEXT> goto label2 <NEXT> if i6 > $ i4 goto label4 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = com netflix spectator api extend registry r0 <NEXT> $ r4 = r7 impl <NEXT> $ r5 = $ r4 create id r1 r2 <NEXT> r8 = com netflix spectator api extend registry r0 <NEXT> $ r6 = r8 gauge $ r5 r3 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jdbc core callable statement creator factory r0 <NEXT> r1 updatable result = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = new org springframework jdbc core callable statement creator factory $ callable statement creator impl <NEXT> if r1 == null goto label1 <NEXT> $ r4 = r1 <NEXT> goto label2 <NEXT> label r7 = org springframework jdbc core callable statement creator factory r0 <NEXT> specialinvoke r6 < init > r7 $ r4 <NEXT> r8 = org springframework jdbc core callable statement creator r6 <NEXT> return r8 <NEXT> if r1 == null goto label1 <NEXT> label r5 = new java util hash map <NEXT> $ r4 = r5 <NEXT> specialinvoke r5 < init > <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jdbc core jdbc template r0 <NEXT> $ i0 = r1 query timeout <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jdbc core jdbc template r0 <NEXT> $ z0 = r1 skip result process <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jdbc core metadata call meta data context r0 <NEXT> r1 return value require = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework jdbc core metadata call meta data context r0 <NEXT> $ r2 = org springframework jdbc core metadata call meta data provider factory create meta data provider r1 r3 <NEXT> r4 = org springframework jdbc core metadata call meta data context r0 <NEXT> r4 meta data provider = $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jdbc core metadata call parameter meta data r0 <NEXT> $ i0 = r1 sql type <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jdbc core metadata generic call meta data provider r0 <NEXT> r1 support schema in procedure call = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jdbc core metadata generic call meta data provider r0 <NEXT> $ z0 = r1 support schema in procedure call <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework jdbc core metadata table meta data context r0 <NEXT> r2 table name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc core metadata table meta data context r0 <NEXT> $ r1 = r2 table name <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jdbc core metadata table meta data context r0 <NEXT> r1 override include synonyms default = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jdbc core metadata table parameter meta data r0 <NEXT> $ i0 = r1 sql type <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` parameter name must not be null\ `` <NEXT> r6 = org springframework jdbc core namedparam abstract sql parameter source r0 <NEXT> $ r2 = r6 sql type <NEXT> $ r3 = java lang integer value of -2147483648 <NEXT> $ r4 = $ r2 get or default r1 $ r3 <NEXT> $ r5 = java lang integer $ r4 <NEXT> $ i0 = $ r5 int value <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc core namedparam name parameter jdbc template r0 <NEXT> $ r1 = r2 classic jdbc template <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc core prepared statement creator factory r0 <NEXT> $ r1 = r2 sql <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ r1 = r2 call meta data context <NEXT> $ z0 = $ r1 be function <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ r1 = r2 call meta data context <NEXT> $ z0 = $ r1 be return value require <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> org springframework util assert not null r1 \ `` the supplied parameter must not be null\ `` <NEXT> $ r2 = r1 get name <NEXT> $ z0 = org springframework util string utils have text $ r2 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r22 = new org springframework dao invalid data access api usage exception <NEXT> r21 = new java lang string builder <NEXT> specialinvoke r21 < init > <NEXT> $ r16 = r21 append \ `` you must specify a parameter name when declare parameter for \\\ `` \ `` <NEXT> r24 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ r17 = r24 get procedure name <NEXT> $ r18 = $ r16 append $ r17 <NEXT> $ r19 = $ r18 append \ `` \\\ `` \ `` <NEXT> $ r20 = $ r19 to string <NEXT> specialinvoke r22 < init > $ r20 <NEXT> r25 = java lang throwable r22 <NEXT> throw r25 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r26 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ r3 = r26 declare parameter <NEXT> $ r3 add r1 <NEXT> r27 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ r4 = r27 logger <NEXT> $ z2 = $ r4 be debug enabled <NEXT> if $ z2 == 0 goto label2 <NEXT> r28 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ r6 = r28 logger <NEXT> r23 = new java lang string builder <NEXT> specialinvoke r23 < init > <NEXT> $ r7 = r23 append \ `` added declare parameter for [ \ `` <NEXT> r29 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ r8 = r29 get procedure name <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ `` ] \ `` <NEXT> $ r11 = r1 get name <NEXT> $ r12 = $ r10 append $ r11 <NEXT> $ r13 = $ r12 to string <NEXT> $ r6 debug $ r13 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ z0 = r2 be compile <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r3 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> $ r1 = r3 logger <NEXT> $ r1 debug \ `` jdbc call call not compile before execution - invoking compile\ `` <NEXT> r4 = org springframework jdbc core simple abstract jdbc call r0 <NEXT> r4 compile <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc core support jdbc dao support r0 <NEXT> $ r1 = r2 jdbc template <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework jdbc datasource abstract driver base data source r0 <NEXT> r2 password = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jdbc datasource connection holder r0 <NEXT> r1 transaction active = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r8 = org springframework jdbc datasource connection holder r0 <NEXT> $ i0 = r8 savepoint counter <NEXT> $ i1 = $ i0 + 1 <NEXT> r9 = org springframework jdbc datasource connection holder r0 <NEXT> r9 savepoint counter = $ i1 <NEXT> r10 = org springframework jdbc datasource connection holder r0 <NEXT> $ r1 = r10 get connection <NEXT> r7 = new java lang string builder <NEXT> specialinvoke r7 < init > <NEXT> $ r3 = r7 append \ `` savepoint_\ `` <NEXT> r11 = org springframework jdbc datasource connection holder r0 <NEXT> $ i2 = r11 savepoint counter <NEXT> $ r4 = $ r3 append $ i2 <NEXT> $ r5 = $ r4 to string <NEXT> $ r6 = $ r1 set savepoint $ r5 <NEXT> return $ r6 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc datasource data source transaction manager r0 <NEXT> $ r1 = r2 data source <NEXT> return $ r1 <END>
<BEG> r0 = @ parameter0 <NEXT> label $ r1 = org springframework jdbc datasource data source utils do get connection r0 <NEXT> label return $ r1 <END>
<BEG> r0 = @ this <NEXT> r3 = org springframework jdbc datasource embed embedded database builder r0 <NEXT> $ r1 = r3 database factory <NEXT> $ r2 = $ r1 get database <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc datasource jdbc transaction object support r0 <NEXT> $ r1 = r2 previous isolation level <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jdbc datasource jdbc transaction object support r0 <NEXT> $ z0 = r1 read only <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework jdbc datasource lazy connection data source proxy constant <NEXT> $ r3 = $ r2 a number r1 <NEXT> $ i0 = $ r3 int value <NEXT> r4 = org springframework jdbc datasource lazy connection data source proxy r0 <NEXT> r4 set default transaction isolation $ i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jdbc datasource lookup abstract rout data source r0 <NEXT> r1 lenient fallback = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jdbc datasource lookup abstract rout data source r0 <NEXT> $ r1 = r2 resolve default data source <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = org springframework bean bean utils instantiate class r1 <NEXT> $ r3 = java sql driver $ r2 <NEXT> r4 = org springframework jdbc datasource simple driver data source r0 <NEXT> r4 driver = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jdbc datasource single connection data source r0 <NEXT> $ z0 = r1 suppress close <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r8 = org springframework jdbc datasource single connection data source r0 <NEXT> $ r3 = r8 get username <NEXT> $ z0 = org springframework util object utils null safe equal r1 $ r3 <NEXT> if $ z0 == 0 goto label1 <NEXT> r9 = org springframework jdbc datasource single connection data source r0 <NEXT> $ r5 = r9 get password <NEXT> $ z1 = org springframework util object utils null safe equal r2 $ r5 <NEXT> if $ z1 == 0 goto label1 <NEXT> r10 = org springframework jdbc datasource single connection data source r0 <NEXT> $ r6 = r10 get connection <NEXT> return $ r6 <NEXT> if $ z1 == 0 goto label1 <NEXT> label r7 = new java sql s q l exception <NEXT> specialinvoke r7 < init > \ `` single connection data source do not support custom username and password\ `` <NEXT> throw r7 <END>
<BEG> r0 = @ this <NEXT> r7 = org springframework jdbc object batch sql update r0 <NEXT> $ r2 = r7 row affect <NEXT> $ i0 = $ r2 size <NEXT> r1 = newarray int [ $ i0 ] <NEXT> i3 = 0 <NEXT> label r8 = org springframework jdbc object batch sql update r0 <NEXT> $ r3 = r8 row affect <NEXT> $ i1 = $ r3 size <NEXT> if i3 > = $ i1 goto label2 <NEXT> r9 = org springframework jdbc object batch sql update r0 <NEXT> $ r4 = r9 row affect <NEXT> $ r5 = $ r4 get i3 <NEXT> $ r6 = java lang integer $ r5 <NEXT> $ i2 = $ r6 int value <NEXT> r1 [ i3 ] = $ i2 <NEXT> i3 = i3 + 1 <NEXT> goto label1 <NEXT> if i3 > = $ i1 goto label2 <NEXT> label return r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r18 = org springframework jdbc object rdbms operation r0 <NEXT> $ z0 = r18 be compile <NEXT> if $ z0 == 0 goto label1 <NEXT> r15 = new org springframework dao invalid data access api usage exception <NEXT> specialinvoke r15 < init > \ `` can not add parameter once the query be compiled\ `` <NEXT> r19 = java lang throwable r15 <NEXT> throw r19 <NEXT> if $ z0 == 0 goto label1 <NEXT> label i1 = 0 <NEXT> label $ i0 = lengthof r1 <NEXT> if i1 > = $ i0 goto label5 <NEXT> $ r2 = r1 [ i1 ] <NEXT> if $ r2 == null goto label3 <NEXT> r20 = org springframework jdbc object rdbms operation r0 <NEXT> $ r13 = r20 declare parameter <NEXT> $ r12 = r1 [ i1 ] <NEXT> $ r13 add $ r12 <NEXT> goto label4 <NEXT> label i1 = i1 + 1 <NEXT> goto label2 <NEXT> if $ r2 == null goto label3 <NEXT> label r17 = new org springframework dao invalid data access api usage exception <NEXT> r16 = new java lang string builder <NEXT> specialinvoke r16 < init > <NEXT> $ r5 = r16 append \ `` can not add parameter at index \ `` <NEXT> $ r6 = $ r5 append i1 <NEXT> $ r7 = $ r6 append \ `` from \ `` <NEXT> $ r8 = java util array a list r1 <NEXT> $ r9 = $ r7 append $ r8 <NEXT> $ r10 = $ r9 append \ `` since it be \'null\'\ `` <NEXT> $ r11 = $ r10 to string <NEXT> specialinvoke r17 < init > $ r11 <NEXT> r21 = java lang throwable r17 <NEXT> throw r21 <NEXT> if i1 > = $ i0 goto label5 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework jdbc object sql call r0 <NEXT> $ z0 = r1 function <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> $ r1 = java lang object [ ] null <NEXT> r3 = org springframework jdbc object sql query r0 <NEXT> $ r2 = r3 execute $ r1 null <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = org springframework jdbc object sql query r0 <NEXT> $ r1 = r2 find object i0 null <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r13 = org springframework jdbc object batch sql update r0 <NEXT> r13 validate parameter r1 <NEXT> r14 = org springframework jdbc object batch sql update r0 <NEXT> $ r2 = r14 parameter queue <NEXT> $ r3 = r1 clone <NEXT> $ r2 add $ r3 <NEXT> r15 = org springframework jdbc object batch sql update r0 <NEXT> $ r4 = r15 parameter queue <NEXT> $ i0 = $ r4 size <NEXT> r16 = org springframework jdbc object batch sql update r0 <NEXT> $ i1 = r16 batch size <NEXT> if $ i0 ! = $ i1 goto label2 <NEXT> r17 = org springframework jdbc object batch sql update r0 <NEXT> $ r5 = r17 logger <NEXT> $ z1 = $ r5 be debug enabled <NEXT> if $ z1 == 0 goto label1 <NEXT> r18 = org springframework jdbc object batch sql update r0 <NEXT> $ r8 = r18 logger <NEXT> r12 = new java lang string builder <NEXT> specialinvoke r12 < init > <NEXT> $ r9 = r12 append \ `` trigger auto-flush because queue reach batch size of \ `` <NEXT> r19 = org springframework jdbc object batch sql update r0 <NEXT> $ i2 = r19 batch size <NEXT> $ r10 = $ r9 append $ i2 <NEXT> $ r11 = $ r10 to string <NEXT> $ r8 debug $ r11 <NEXT> label r20 = org springframework jdbc object batch sql update r0 <NEXT> r20 flush <NEXT> label return -1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get name <NEXT> if $ r2 ! = null goto label1 <NEXT> r4 = new org springframework dao invalid data access api usage exception <NEXT> specialinvoke r4 < init > \ `` parameter to stored procedure must have name as well a types\ `` <NEXT> r5 = java lang throwable r4 <NEXT> throw r5 <NEXT> if $ r2 ! = null goto label1 <NEXT> label specialinvoke r0 declare parameter r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework jdbc support incrementer abstract identity column max value incrementer r0 <NEXT> r1 delete specific value = z0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> label r5 = r0 get meta data <NEXT> if r5 == null goto label4 <NEXT> $ z0 = r5 support batch update <NEXT> if $ z0 == 0 goto label3 <NEXT> $ r2 = org springframework jdbc support jdbc utils logger <NEXT> $ r2 debug \ `` jdbc driver support batch updates\ `` <NEXT> label return 1 <NEXT> if $ z0 == 0 goto label3 <NEXT> label $ r1 = org springframework jdbc support jdbc utils logger <NEXT> $ r1 debug \ `` jdbc driver do not support batch updates\ `` <NEXT> label goto label6 <NEXT> label return 0 <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = org springframework util collection utils be empty r0 <NEXT> if $ z0 == 0 goto label1 <NEXT> return null <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ z1 = org springframework util collection utils have unique object r0 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> r4 = new org springframework dao incorrect result size data access exception <NEXT> $ i0 = r0 size <NEXT> specialinvoke r4 < init > 1 $ i0 <NEXT> r5 = java lang throwable r4 <NEXT> throw r5 <NEXT> if $ z1 ! = 0 goto label2 <NEXT> label $ r1 = r0 iterator <NEXT> $ r2 = $ r1 next <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = org springframework dao support persistence exception translation interceptor r0 <NEXT> r1 always translate = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org springframework jca cci connection connection spec connection factory adapter r0 <NEXT> $ r2 = r3 thread bound spec <NEXT> $ r2 set r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = class \ `` ljavax resource cci connection \ `` <NEXT> $ r3 = $ r2 get class loader <NEXT> $ r4 = newarray java lang class [ 1 ] <NEXT> $ r4 [ 0 ] = class \ `` ljavax resource cci connection \ `` <NEXT> r8 = new org springframework jca cci connection single connection factory $ close suppress invocation handler <NEXT> specialinvoke r8 < init > r1 null <NEXT> r9 = java lang reflect invocation handler r8 <NEXT> $ r6 = java lang reflect proxy new proxy instance $ r3 $ r4 r9 <NEXT> $ r7 = javax resource cci connection $ r6 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> r4 = org springframework jca cci core support cci dao support r0 <NEXT> $ r1 = r4 cci template <NEXT> if $ r1 == null goto label1 <NEXT> r5 = org springframework jca cci core support cci dao support r0 <NEXT> $ r2 = r5 cci template <NEXT> $ r3 = $ r2 get connection factory <NEXT> goto label2 <NEXT> label return $ r3 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r3 = null <END>
<BEG> r0 = @ this <NEXT> r4 = org springframework jca context spring context resource adapter r0 <NEXT> $ r1 = r4 logger <NEXT> $ r1 debug \ `` stop spring context resource adapter\ `` <NEXT> r5 = org springframework jca context spring context resource adapter r0 <NEXT> $ r2 = r5 application context <NEXT> if $ r2 == null goto label1 <NEXT> r6 = org springframework jca context spring context resource adapter r0 <NEXT> $ r3 = r6 application context <NEXT> $ r3 close <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jca endpoint generic message endpoint manager r0 <NEXT> $ r1 = r2 message endpoint factory <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework jca work delegate work r0 <NEXT> $ r1 = r2 delegate <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r10 = new org springframework transaction interceptor transaction attribute editor <NEXT> specialinvoke r10 < init > <NEXT> r3 = r1 property name <NEXT> label $ z0 = r3 have more element <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r8 = r3 next element <NEXT> r4 = java lang string $ r8 <NEXT> r5 = r1 get property r4 <NEXT> r10 set a text r5 <NEXT> $ r9 = r10 get value <NEXT> r6 = org springframework transaction interceptor transaction attribute $ r9 <NEXT> r11 = org springframework transaction interceptor name match transaction attribute source r0 <NEXT> r11 add transactional method r4 r6 <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework transaction jta jta transaction manager r0 <NEXT> r2 transaction manager = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org springframework transaction jta jta transaction manager r0 <NEXT> r2 transaction manager name = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> org springframework transaction support transaction synchronization utils trigger flush <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r2 = org springframework transaction reactive transaction synchronization manager r0 <NEXT> $ r1 = r2 transaction context <NEXT> $ r1 set actual transaction active z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = r1 be complete <NEXT> if $ z0 == 0 goto label1 <NEXT> r4 = new org springframework transaction illegal transaction state exception <NEXT> specialinvoke r4 < init > \ `` transaction be already complete - do not call commit or rollback more than once per transaction\ `` <NEXT> r5 = java lang throwable r4 <NEXT> throw r5 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r2 = org springframework transaction support default transaction status r1 <NEXT> r6 = org springframework transaction support abstract platform transaction manager r0 <NEXT> specialinvoke r6 process rollback r2 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = new org springframework transaction transaction suspension not support exception <NEXT> r10 = new java lang string builder <NEXT> specialinvoke r10 < init > <NEXT> $ r4 = r10 append \ `` transaction manager [ \ `` <NEXT> $ r5 = r0 get class <NEXT> $ r6 = $ r5 get name <NEXT> $ r7 = $ r4 append $ r6 <NEXT> $ r8 = $ r7 append \ `` ] do not support transaction suspension\ `` <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke r11 < init > $ r9 <NEXT> r12 = java lang throwable r11 <NEXT> throw r12 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> $ r1 = org springframework transaction support default transaction definition constant <NEXT> $ r2 = $ r1 get value \ `` isolation_\ `` <NEXT> $ r3 = java lang integer value of i0 <NEXT> $ z0 = $ r2 contain $ r3 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r5 = new java lang illegal argument exception <NEXT> specialinvoke r5 < init > \ `` only value of isolation constant allowed\ `` <NEXT> throw r5 <NEXT> if $ z0 ! = 0 goto label1 <NEXT> label r6 = org springframework transaction support default transaction definition r0 <NEXT> r6 isolation level = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r4 = org springframework transaction support default transaction status r0 <NEXT> $ r1 = r4 transaction <NEXT> $ z0 = $ r1 instanceof org springframework transaction support smart transaction object <NEXT> if $ z0 == 0 goto label1 <NEXT> r5 = org springframework transaction support default transaction status r0 <NEXT> $ r2 = r5 transaction <NEXT> $ r3 = org springframework transaction support smart transaction object $ r2 <NEXT> $ z1 = $ r3 be rollback only <NEXT> if $ z1 == 0 goto label1 <NEXT> $ z2 = 1 <NEXT> goto label2 <NEXT> label return $ z2 <NEXT> if $ z1 == 0 goto label1 <NEXT> label $ z2 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework transaction support resource holder support r0 <NEXT> $ z0 = r1 rollback only <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = org springframework transaction support resource holder support r0 <NEXT> $ r1 = r2 deadline <NEXT> if $ r1 == null goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ r1 == null goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r1 = org springframework transaction support resource holder support r0 <NEXT> r1 clear <NEXT> r2 = org springframework transaction support resource holder support r0 <NEXT> r2 reference count = 0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net schmizz concurrent promise r0 <NEXT> $ r1 = r2 lock <NEXT> $ r1 unlock <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = net schmizz sshj common buffer r0 <NEXT> r2 ensure available 1 <NEXT> r3 = net schmizz sshj common buffer r0 <NEXT> $ r1 = r3 data <NEXT> r4 = net schmizz sshj common buffer r0 <NEXT> $ i0 = r4 rpos <NEXT> $ i1 = $ i0 + 1 <NEXT> r5 = net schmizz sshj common buffer r0 <NEXT> r5 rpos = $ i1 <NEXT> $ b2 = $ r1 [ $ i0 ] <NEXT> return $ b2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = lengthof r1 <NEXT> r3 = net schmizz sshj common buffer r0 <NEXT> $ r2 = r3 put byte r1 0 $ i0 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r2 = net schmizz sshj s s h client r0 <NEXT> $ r1 = r2 remote charset <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org stringtemplate v4 compiler compiler r0 <NEXT> r3 = r4 compile null r1 null r2 null <NEXT> r3 have formal args = 0 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r9 = null <NEXT> r11 = org stringtemplate v4 st r0 <NEXT> $ r2 = r11 impl <NEXT> $ r3 = $ r2 formal argument <NEXT> if $ r3 == null goto label1 <NEXT> r12 = org stringtemplate v4 st r0 <NEXT> $ r6 = r12 impl <NEXT> $ r7 = $ r6 formal argument <NEXT> $ r8 = $ r7 get r1 <NEXT> r9 = org stringtemplate v4 compiler formal argument $ r8 <NEXT> label if r9 == null goto label3 <NEXT> r13 = org stringtemplate v4 st r0 <NEXT> $ r4 = r13 local <NEXT> $ i0 = r9 index <NEXT> r10 = $ r4 [ $ i0 ] <NEXT> $ r5 = org stringtemplate v4 st empty_attr <NEXT> if r10 ! = $ r5 goto label2 <NEXT> r10 = null <NEXT> label return r10 <NEXT> label if r9 == null goto label3 <NEXT> label return null <END>
<BEG> r0 = @ this <NEXT> return null <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> r9 = com clearspring analytics stream cardinality linear count r0 <NEXT> r2 = r9 map <NEXT> i0 = lengthof r2 <NEXT> i4 = 0 <NEXT> label if i4 > = i0 goto label4 <NEXT> b1 = r2 [ i4 ] <NEXT> r3 = java lang integer to binary string b1 <NEXT> i5 = 0 <NEXT> label $ i2 = r3 length <NEXT> $ i3 = 8 - $ i2 <NEXT> if i5 > = $ i3 goto label3 <NEXT> r8 append 48 <NEXT> i5 = i5 + 1 <NEXT> goto label2 <NEXT> if i5 > = $ i3 goto label3 <NEXT> label r8 append r3 <NEXT> i4 = i4 + 1 <NEXT> goto label1 <NEXT> label if i4 > = i0 goto label4 <NEXT> label $ r5 = r8 to string <NEXT> return $ r5 <END>
<BEG> $ r0 = io swagger v3 core util primitive type custom exclude class <NEXT> return $ r0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = io swagger v3 core util reflection utils get repeatable annotation array r0 r1 <NEXT> if r2 == null goto label1 <NEXT> $ i0 = lengthof r2 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return null <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ r3 = java util array a list r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model info contact r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium file schema r0 <NEXT> $ r1 = r2 format <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium schema r0 <NEXT> $ r1 = r2 exclusive minimum <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium schema r0 <NEXT> $ r1 = r2 max length <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium schema r0 <NEXT> $ r1 = r2 pattern <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium schema r0 <NEXT> $ r1 = r2 additional property <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium schema r0 <NEXT> $ r1 = r2 xml <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium u u i d schema r0 <NEXT> $ r1 = r2 type <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium xml r0 <NEXT> $ r1 = r2 namespace <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model medium xml r0 <NEXT> $ r1 = r2 prefix <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model operation r0 <NEXT> $ r1 = r2 external doc <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model parameter cookie parameter r0 <NEXT> $ r1 = r2 in <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model responses api response r0 <NEXT> $ r1 = r2 $ ref <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model security o auth flow r0 <NEXT> $ r1 = r2 authorization url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model security o auth flow r0 <NEXT> $ r1 = r2 client credential <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = io swagger v3 oas model server server r0 <NEXT> $ r1 = r2 url <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r1 put int 3 <NEXT> r18 = com tdunning math stats array digest r0 <NEXT> $ d0 = r18 compression <NEXT> r1 put double $ d0 <NEXT> r19 = com tdunning math stats array digest r0 <NEXT> $ i0 = r19 page size <NEXT> r1 put int $ i0 <NEXT> r20 = com tdunning math stats array digest r0 <NEXT> $ i1 = r20 centroid count <NEXT> r1 put int $ i1 <NEXT> r21 = com tdunning math stats array digest r0 <NEXT> $ r6 = r21 data <NEXT> r14 = $ r6 iterator <NEXT> label $ z0 = r14 have next <NEXT> if $ z0 == 0 goto label4 <NEXT> $ r11 = r14 next <NEXT> r15 = com tdunning math stats array digest $ page $ r11 <NEXT> i5 = 0 <NEXT> label $ i4 = r15 active <NEXT> if i5 > = $ i4 goto label3 <NEXT> $ r12 = r15 centroid <NEXT> $ d1 = $ r12 [ i5 ] <NEXT> r1 put double $ d1 <NEXT> i5 = i5 + 1 <NEXT> goto label2 <NEXT> if i5 > = $ i4 goto label3 <NEXT> label goto label1 <NEXT> if $ z0 == 0 goto label4 <NEXT> label r22 = com tdunning math stats array digest r0 <NEXT> $ r7 = r22 data <NEXT> r16 = $ r7 iterator <NEXT> label $ z1 = r16 have next <NEXT> if $ z1 == 0 goto label8 <NEXT> $ r8 = r16 next <NEXT> r17 = com tdunning math stats array digest $ page $ r8 <NEXT> i6 = 0 <NEXT> label $ i2 = r17 active <NEXT> if i6 > = $ i2 goto label7 <NEXT> $ r9 = r17 count <NEXT> $ i3 = $ r9 [ i6 ] <NEXT> r1 put int $ i3 <NEXT> i6 = i6 + 1 <NEXT> goto label6 <NEXT> if i6 > = $ i2 goto label7 <NEXT> label goto label5 <NEXT> if $ z1 == 0 goto label8 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r2 = com tdunning math stats int a v l tree r0 <NEXT> $ r1 = r2 leave <NEXT> $ i1 = $ r1 [ i0 ] <NEXT> return $ i1 <END>
<BEG> d0 = @ parameter0 <NEXT> $ r0 = new com tdunning math stats array digest <NEXT> specialinvoke $ r0 < init > 32 d0 <NEXT> return $ r0 <END>
<BEG> z0 = @ parameter0 <NEXT> r0 = @ parameter1 <NEXT> if z0 ! = 0 goto label1 <NEXT> $ r1 = java lang boolean value of z0 <NEXT> $ r2 = java lang boolean true <NEXT> org testng assert fail not equals $ r1 $ r2 r0 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> $ r3 = new java lang assertion error <NEXT> specialinvoke $ r3 < init > r0 <NEXT> $ r3 init cause r1 <NEXT> throw $ r3 <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> r0 = @ parameter2 <NEXT> $ r1 = java lang boolean value of z0 <NEXT> $ r2 = java lang boolean value of z1 <NEXT> org testng assert assert equal $ r1 $ r2 r0 <NEXT> return <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> r0 = @ parameter2 <NEXT> $ r1 = java lang boolean value of z0 <NEXT> $ r2 = java lang boolean value of z1 <NEXT> org testng assert assert equal $ r1 $ r2 r0 <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> org testng assert assert null r0 null <NEXT> return <END>
<BEG> z0 = @ parameter0 <NEXT> z1 = @ parameter1 <NEXT> org testng assert assert equal z0 z1 null <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r6 = org testng internal test method worker r0 <NEXT> $ r1 = r6 m_method instance <NEXT> $ i0 = $ r1 size <NEXT> if $ i0 < = 0 goto label1 <NEXT> r7 = org testng internal test method worker r0 <NEXT> $ r2 = r7 m_method instance <NEXT> $ r3 = $ r2 get 0 <NEXT> $ r4 = org testng i method instance $ r3 <NEXT> $ r5 = $ r4 get method <NEXT> $ i1 = $ r5 get priority <NEXT> goto label2 <NEXT> label return $ i1 <NEXT> if $ i0 < = 0 goto label1 <NEXT> label $ i1 = 0 <END>
<BEG> r0 = @ parameter0 <NEXT> $ z0 = r0 be before suite configuration <NEXT> if $ z0 == 0 goto label01 <NEXT> return \ `` @ before suite\ `` <NEXT> if $ z0 == 0 goto label01 <NEXT> label $ z1 = r0 be before test configuration <NEXT> if $ z1 == 0 goto label02 <NEXT> return \ `` @ before test\ `` <NEXT> if $ z1 == 0 goto label02 <NEXT> label $ z2 = r0 be before class configuration <NEXT> if $ z2 == 0 goto label03 <NEXT> return \ `` @ before class\ `` <NEXT> if $ z2 == 0 goto label03 <NEXT> label $ z3 = r0 be before group configuration <NEXT> if $ z3 == 0 goto label04 <NEXT> return \ `` @ before groups\ `` <NEXT> if $ z3 == 0 goto label04 <NEXT> label $ z4 = r0 be before method configuration <NEXT> if $ z4 == 0 goto label05 <NEXT> return \ `` @ before method\ `` <NEXT> if $ z4 == 0 goto label05 <NEXT> label $ z5 = r0 be after method configuration <NEXT> if $ z5 == 0 goto label06 <NEXT> return \ `` @ after method\ `` <NEXT> if $ z5 == 0 goto label06 <NEXT> label $ z6 = r0 be after group configuration <NEXT> if $ z6 == 0 goto label07 <NEXT> return \ `` @ after groups\ `` <NEXT> if $ z6 == 0 goto label07 <NEXT> label $ z7 = r0 be after class configuration <NEXT> if $ z7 == 0 goto label08 <NEXT> return \ `` @ after class\ `` <NEXT> if $ z7 == 0 goto label08 <NEXT> label $ z8 = r0 be after test configuration <NEXT> if $ z8 == 0 goto label09 <NEXT> return \ `` @ after test\ `` <NEXT> if $ z8 == 0 goto label09 <NEXT> label $ z9 = r0 be after suite configuration <NEXT> if $ z9 == 0 goto label10 <NEXT> return \ `` @ after suite\ `` <NEXT> if $ z9 == 0 goto label10 <NEXT> label return \ `` \ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> $ i0 = org testng log4testng logger trace <NEXT> r3 = org testng log4testng logger r0 <NEXT> specialinvoke r3 log $ i0 r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ i0 = org testng log4testng logger debug <NEXT> r2 = org testng log4testng logger r0 <NEXT> specialinvoke r2 log $ i0 r1 null <NEXT> return <END>
<BEG> r0 = @ parameter0 <NEXT> z0 = @ parameter1 <NEXT> $ r1 = org testng reporter get current test result <NEXT> org testng reporter log r0 $ r1 <NEXT> if z0 == 0 goto label1 <NEXT> $ r2 = java lang system out <NEXT> $ r2 println r0 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org testng suite runner r0 <NEXT> $ r2 = r4 xml suite <NEXT> $ r3 = $ r2 get parameter r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ z0 = org testng internal utils be string not empty r1 <NEXT> if $ z0 == 0 goto label1 <NEXT> r2 = org testng test n g r0 <NEXT> r2 m_output dir = r1 <NEXT> label return <END>
<BEG> return 0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org testng test n g ant task r0 <NEXT> r2 m_working dir = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r21 = new org testng internal abstract parallel worker $ argument $ builder <NEXT> specialinvoke r21 < init > <NEXT> r22 = org testng test runner r0 <NEXT> $ r4 = r22 m_class method map <NEXT> $ r5 = r21 class method map $ r4 <NEXT> r23 = org testng test runner r0 <NEXT> $ r6 = r23 m_group method <NEXT> $ r7 = $ r5 config method $ r6 <NEXT> r24 = org testng test runner r0 <NEXT> $ r8 = r24 m_annotation finder <NEXT> $ r9 = $ r7 finder $ r8 <NEXT> r25 = org testng test runner r0 <NEXT> $ r10 = r25 m_invoker <NEXT> $ r11 = $ r9 invoker $ r10 <NEXT> $ r12 = $ r11 method r1 <NEXT> $ r13 = $ r12 test context r0 <NEXT> r26 = org testng test runner r0 <NEXT> $ r14 = r26 m_class listener <NEXT> $ r15 = $ r14 value <NEXT> $ r16 = $ r13 listener $ r15 <NEXT> r2 = $ r16 build <NEXT> r27 = org testng test runner r0 <NEXT> $ r17 = r27 m_xml test <NEXT> $ r18 = $ r17 get parallel <NEXT> $ r19 = org testng internal abstract parallel worker new worker $ r18 <NEXT> $ r20 = $ r19 create worker r2 <NEXT> return $ r20 <END>
<BEG> r0 = @ this <NEXT> r3 = org testng xml xml suite r0 <NEXT> $ r1 = r3 m_verbose <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org testng xml xml suite r0 <NEXT> $ r2 = r4 m_verbose <NEXT> goto label2 <NEXT> label return $ r2 <NEXT> if $ r1 == null goto label1 <NEXT> label $ r2 = org testng test n g default_verbose <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org testng xml xml suite r0 <NEXT> r2 m_verbose = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org testng xml xml suite r0 <NEXT> $ r1 = r2 m_test <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org testng xml xml test r0 <NEXT> r2 m_xml class = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r20 = new org testng xml xml test <NEXT> r21 = org testng xml xml test r0 <NEXT> $ r6 = r21 get suite <NEXT> specialinvoke r20 < init > $ r6 <NEXT> r22 = org testng xml xml test r0 <NEXT> $ r7 = r22 get name <NEXT> r20 set name $ r7 <NEXT> r23 = org testng xml xml test r0 <NEXT> $ r8 = r23 get include group <NEXT> r20 set include group $ r8 <NEXT> r24 = org testng xml xml test r0 <NEXT> $ r9 = r24 get exclude group <NEXT> r20 set exclude group $ r9 <NEXT> r25 = org testng xml xml test r0 <NEXT> $ z0 = r25 be j unit <NEXT> r20 set j unit $ z0 <NEXT> r26 = org testng xml xml test r0 <NEXT> $ r10 = r26 get parallel <NEXT> r20 set parallel $ r10 <NEXT> r27 = org testng xml xml test r0 <NEXT> $ i0 = r27 get verbose <NEXT> r20 set verbose $ i0 <NEXT> r28 = org testng xml xml test r0 <NEXT> $ r11 = r28 get local parameter <NEXT> r20 set parameter $ r11 <NEXT> r29 = org testng xml xml test r0 <NEXT> $ r12 = r29 get xml package <NEXT> r20 set xml package $ r12 <NEXT> r30 = org testng xml xml test r0 <NEXT> $ r13 = r30 get time out <NEXT> specialinvoke r20 set time out $ r13 <NEXT> r31 = org testng xml xml test r0 <NEXT> r2 = r31 get meta group <NEXT> $ r14 = r2 entry set <NEXT> r3 = $ r14 iterator <NEXT> label $ z1 = r3 have next <NEXT> if $ z1 == 0 goto label2 <NEXT> $ r15 = r3 next <NEXT> r4 = java util map $ entry $ r15 <NEXT> $ r16 = r4 get key <NEXT> $ r17 = java lang string $ r16 <NEXT> $ r18 = r4 get value <NEXT> $ r19 = java util list $ r18 <NEXT> r20 add meta group $ r17 $ r19 <NEXT> goto label1 <NEXT> if $ z1 == 0 goto label2 <NEXT> label return r20 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> $ r7 = new java text simple date format <NEXT> $ r8 = org testng reporter x m l reporter config get timestamp format <NEXT> specialinvoke $ r7 < init > $ r8 <NEXT> r5 = $ r7 format r2 <NEXT> r6 = $ r7 format r3 <NEXT> $ l1 = r3 get time <NEXT> $ l2 = r2 get time <NEXT> l0 = $ l1 - $ l2 <NEXT> r1 set property \ `` started-at\ <NEXT> r1 set property \ `` finished-at\ <NEXT> $ r11 = java lang long to string l0 <NEXT> r1 set property \ `` duration-ms\ <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org testng xml xml suite r0 <NEXT> $ r1 = r2 m_is j unit <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> $ r2 = io github qsy7 timeout time constrain method call interrupter_executor_service <NEXT> r6 = io github qsy7 timeout time constrain method call r0 <NEXT> $ r3 = r6 interrupter <NEXT> r7 = io github qsy7 timeout time constrain method call r0 <NEXT> $ r1 = r7 allow execution duration <NEXT> $ l0 = $ r1 to nanos <NEXT> $ r4 = java util concurrent time unit nanoseconds <NEXT> r8 = java lang runnable $ r3 <NEXT> $ r5 = $ r2 schedule r8 $ l0 $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r2 = gnu trove decorator t byte byte map decorator r0 <NEXT> $ r1 = r2 _map <NEXT> $ i0 = $ r1 size <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> f0 = @ parameter0 <NEXT> $ b0 = f0 cmpg 0 0f <NEXT> if $ b0 > = 0 goto label1 <NEXT> r7 = new java lang illegal argument exception <NEXT> r6 = new java lang string builder <NEXT> specialinvoke r6 < init > <NEXT> $ r3 = r6 append \ `` factor must be > = \ `` <NEXT> $ r4 = $ r3 append f0 <NEXT> $ r5 = $ r4 to string <NEXT> specialinvoke r7 < init > $ r5 <NEXT> throw r7 <NEXT> if $ b0 > = 0 goto label1 <NEXT> label r8 = gnu trove impl hash t hash r0 <NEXT> r8 _auto compaction factor = f0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = gnu trove impl hash t hash iterator r0 <NEXT> $ i0 = r1 next index <NEXT> if $ i0 < 0 goto label1 <NEXT> $ z0 = 1 <NEXT> goto label2 <NEXT> label return $ z0 <NEXT> if $ i0 < 0 goto label1 <NEXT> label $ z0 = 0 <END>
<BEG> r0 = @ this <NEXT> r10 = gnu trove impl hash t hash iterator r0 <NEXT> $ i0 = r10 _expected size <NEXT> r11 = gnu trove impl hash t hash iterator r0 <NEXT> $ r2 = r11 _hash <NEXT> $ i1 = $ r2 size <NEXT> if $ i0 == $ i1 goto label1 <NEXT> r9 = new java util concurrent modification exception <NEXT> specialinvoke r9 < init > <NEXT> throw r9 <NEXT> if $ i0 == $ i1 goto label1 <NEXT> label r12 = gnu trove impl hash t hash iterator r0 <NEXT> $ r3 = r12 _object_hash <NEXT> r1 = $ r3 _set <NEXT> r13 = gnu trove impl hash t hash iterator r0 <NEXT> i2 = r13 _index <NEXT> label $ i3 = i2 <NEXT> i2 = i2 + -1 <NEXT> if $ i3 < = 0 goto label3 <NEXT> $ r5 = r1 [ i2 ] <NEXT> $ r4 = gnu trove impl hash t object hash free <NEXT> if $ r5 == $ r4 goto label2 <NEXT> $ r7 = r1 [ i2 ] <NEXT> $ r6 = gnu trove impl hash t object hash remove <NEXT> if $ r7 ! = $ r6 goto label3 <NEXT> goto label2 <NEXT> if $ r7 ! = $ r6 goto label3 <NEXT> label return i2 <END>
<BEG> r0 = @ this <NEXT> r2 = new gnu trove map hash t custom hash map $ value view <NEXT> r3 = gnu trove map hash t custom hash map r0 <NEXT> specialinvoke r2 < init > r3 <NEXT> r4 = java util collection r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = r1 iterator <NEXT> label $ z0 = r2 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r3 = r2 next <NEXT> r4 = gnu trove set hash t custom hash set r0 <NEXT> $ z1 = r4 contain $ r3 <NEXT> if $ z1 ! = 0 goto label1 <NEXT> return 0 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return 1 <END>
<BEG> r0 = @ this <NEXT> r3 = gnu trove stack array t byte array stack r0 <NEXT> $ r2 = r3 _list <NEXT> r4 = gnu trove stack array t byte array stack r0 <NEXT> $ r1 = r4 _list <NEXT> $ i0 = $ r1 size <NEXT> $ i1 = $ i0 - 1 <NEXT> $ b2 = $ r2 remove at $ i1 <NEXT> return $ b2 <END>
<BEG> r0 = @ this <NEXT> r2 = gnu trove stack array t byte array stack r0 <NEXT> $ r1 = r2 _list <NEXT> $ r1 clear <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> i0 = @ parameter1 <NEXT> $ z0 = r1 instanceof java lang reflect field <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r3 = java lang reflect field r1 <NEXT> r4 = com univocity parser annotation header transformer r0 <NEXT> $ i2 = r4 transform index $ r3 i0 <NEXT> return $ i2 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r2 = java lang reflect method r1 <NEXT> r5 = com univocity parser annotation header transformer r0 <NEXT> $ i1 = r5 transform index $ r2 i0 <NEXT> return $ i1 <END>
<BEG> r0 = @ this <NEXT> r10 = specialinvoke r0 get message <NEXT> if r10 ! = null goto label1 <NEXT> r14 = new java lang string builder <NEXT> specialinvoke r14 < init > <NEXT> r16 = com univocity parser common abstract exception r0 <NEXT> $ r7 = r16 get error description <NEXT> $ r8 = r14 append $ r7 <NEXT> $ r9 = $ r8 append \ `` \ `` <NEXT> $ r11 = $ r9 to string <NEXT> goto label2 <NEXT> label r12 = $ r11 <NEXT> r17 = com univocity parser common abstract exception r0 <NEXT> r1 = r17 get detail <NEXT> if r1 == null goto label3 <NEXT> $ z0 = r1 be empty <NEXT> if $ z0 ! = 0 goto label3 <NEXT> r15 = new java lang string builder <NEXT> specialinvoke r15 < init > <NEXT> $ r3 = r15 append $ r11 <NEXT> $ r4 = $ r3 append \ `` \n internal state when error be throw \ `` <NEXT> $ r5 = $ r4 append r1 <NEXT> r12 = $ r5 to string <NEXT> label r18 = com univocity parser common abstract exception r0 <NEXT> r13 = r18 update message r12 <NEXT> return r13 <NEXT> if r10 ! = null goto label1 <NEXT> label $ r11 = r10 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> return r1 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ r1 = r0 trim <NEXT> $ r2 = $ r1 to lower case <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = com univocity parser common common parser setting r0 <NEXT> r1 number of record to read = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r7 = com univocity parser common common parser setting r0 <NEXT> i0 = r7 get max char per column <NEXT> if i0 == -1 goto label1 <NEXT> r5 = new com univocity parser common input default char appender <NEXT> r8 = com univocity parser common common parser setting r0 <NEXT> $ r4 = r8 get null value <NEXT> r9 = com univocity parser common common parser setting r0 <NEXT> $ i2 = r9 get whitespace range start <NEXT> specialinvoke r5 < init > i0 $ r4 $ i2 <NEXT> r10 = com univocity parser common input char appender r5 <NEXT> return r10 <NEXT> if i0 == -1 goto label1 <NEXT> label r6 = new com univocity parser common input expand char appender <NEXT> r11 = com univocity parser common common parser setting r0 <NEXT> $ r2 = r11 get null value <NEXT> r12 = com univocity parser common common parser setting r0 <NEXT> $ i1 = r12 get whitespace range start <NEXT> specialinvoke r6 < init > $ r2 $ i1 <NEXT> r13 = com univocity parser common input char appender r6 <NEXT> return r13 <END>
<BEG> r0 = @ this <NEXT> r1 = com univocity parser common common parser setting r0 <NEXT> $ z0 = r1 line separator detection enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new com univocity parser common field field enum selector <NEXT> specialinvoke r4 < init > <NEXT> r5 = com univocity parser common common setting r0 <NEXT> r6 = com univocity parser common field field set r4 <NEXT> $ r3 = specialinvoke r5 set field set r6 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = new com univocity parser common field field index selector <NEXT> specialinvoke r4 < init > <NEXT> r5 = com univocity parser common common setting r0 <NEXT> r6 = com univocity parser common field field set r4 <NEXT> $ r3 = specialinvoke r5 set field set r6 r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = com univocity parser common common setting r0 <NEXT> $ z0 = r1 auto configuration enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r2 = com univocity parser common common parser setting r0 <NEXT> $ r1 = r2 clone <NEXT> r3 = com univocity parser common common setting $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = com univocity parser common data process exception r0 <NEXT> r1 column index = i0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> if r1 ! = null goto label1 <NEXT> return null <NEXT> if r1 ! = null goto label1 <NEXT> label r8 = com univocity parser common field exclude field enum selector r0 <NEXT> $ r2 = r8 name <NEXT> r9 = com univocity parser common field exclude field enum selector r0 <NEXT> $ r3 = r9 get <NEXT> $ r4 = com univocity parser common argument utils to array $ r3 <NEXT> $ r2 set $ r4 <NEXT> r10 = com univocity parser common field exclude field enum selector r0 <NEXT> $ r6 = r10 name <NEXT> $ r7 = $ r6 get field index r1 <NEXT> return $ r7 <END>
<BEG> r0 = @ this <NEXT> i0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r9 = com univocity parser common field field conversion map r0 <NEXT> $ r3 = r9 validation by index <NEXT> $ r4 = java lang integer value of i0 <NEXT> $ r5 = $ r3 get $ r4 <NEXT> r2 = java util list $ r5 <NEXT> if r2 == null goto label2 <NEXT> i2 = 0 <NEXT> label $ i1 = r2 size <NEXT> if i2 > = $ i1 goto label2 <NEXT> $ r6 = r2 get i2 <NEXT> $ r7 = com univocity parser conversion validate conversion $ r6 <NEXT> $ r7 execute r1 <NEXT> i2 = i2 + 1 <NEXT> goto label1 <NEXT> if i2 > = $ i1 goto label2 <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = com univocity parser common field field enum selector r0 <NEXT> $ r2 = r4 name <NEXT> $ r3 = r1 to string <NEXT> $ i0 = $ r2 get field index $ r3 <NEXT> return $ i0 <END>
<BEG> r0 = @ this <NEXT> r33 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r2 = r33 active execution <NEXT> if $ r2 ! = null goto label13 <NEXT> r34 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ z0 = r34 finish <NEXT> if $ z0 ! = 0 goto label13 <NEXT> i1 = -1 <NEXT> label r35 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> i1 = specialinvoke r35 read bucket <NEXT> if i1 < 0 goto label02 <NEXT> if i1 > 4 goto label02 <NEXT> r36 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> i1 = specialinvoke r36 read bucket <NEXT> label goto label05 <NEXT> label if i1 == -1 goto label06 <NEXT> r32 = new java lang thread <NEXT> specialinvoke r32 < init > r0 \ `` un vocity-parsers input read thread\ `` <NEXT> r38 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> r38 active execution = r32 <NEXT> r39 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r18 = r39 active execution <NEXT> $ r18 start <NEXT> goto label13 <NEXT> label r46 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ z1 = r46 finish <NEXT> if $ z1 == 0 goto label15 <NEXT> r47 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r13 = r47 bucket <NEXT> $ i0 = $ r13 size <NEXT> if $ i0 > 1 goto label15 <NEXT> r48 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r14 = r48 end <NEXT> label return $ r14 <NEXT> if $ i0 > 1 goto label15 <NEXT> label r49 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r3 = r49 current bucket <NEXT> if $ r3 == null goto label16 <NEXT> r50 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r12 = r50 instance <NEXT> r51 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r11 = r51 current bucket <NEXT> $ r12 release $ r11 <NEXT> label r52 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r4 = r52 bucket <NEXT> r30 = $ r4 take <NEXT> r53 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r5 = r53 end <NEXT> if r30 ! = $ r5 goto label18 <NEXT> r54 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> r54 finish = 1 <NEXT> r55 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r10 = r55 end <NEXT> label return $ r10 <NEXT> if r30 ! = $ r5 goto label18 <NEXT> label $ r6 = com univocity parser common input concurrent entry r30 <NEXT> r56 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> r56 current bucket = $ r6 <NEXT> r57 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r7 = r57 current bucket <NEXT> $ r8 = $ r7 get <NEXT> $ r9 = com univocity parser common input concurrent char bucket $ r8 <NEXT> label return $ r9 <NEXT> label if i1 == -1 goto label06 <NEXT> label r40 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> r40 finish = 1 <NEXT> label r41 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r16 = r41 bucket <NEXT> r42 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> $ r15 = r42 end <NEXT> $ r16 put $ r15 <NEXT> label r43 = com univocity parser common input concurrent concurrent char loader r0 <NEXT> r43 stop reading <END>
<BEG> r0 = @ this <NEXT> r4 = com univocity parser common input lookahead char input reader r0 <NEXT> $ i1 = r4 start <NEXT> r5 = com univocity parser common input lookahead char input reader r0 <NEXT> $ i0 = r5 length <NEXT> if $ i1 < $ i0 goto label1 <NEXT> return \ `` \ `` <NEXT> if $ i1 < $ i0 goto label1 <NEXT> label r3 = new java lang string <NEXT> r6 = com univocity parser common input lookahead char input reader r0 <NEXT> $ r2 = r6 lookahead <NEXT> r7 = com univocity parser common input lookahead char input reader r0 <NEXT> $ i3 = r7 start <NEXT> r8 = com univocity parser common input lookahead char input reader r0 <NEXT> $ i2 = r8 length <NEXT> specialinvoke r3 < init > $ r2 $ i3 $ i2 <NEXT> return r3 <END>
<BEG> r0 = @ this <NEXT> r2 = com univocity parser common processor master detail record r0 <NEXT> $ r1 = r2 detail row <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r5 = com univocity parser common processor row writer processor switch r0 <NEXT> $ i2 = r5 minimum row length <NEXT> if $ i2 ! = -2147483648 goto label4 <NEXT> r6 = com univocity parser common processor row writer processor switch r0 <NEXT> r6 minimum row length = 0 <NEXT> r7 = com univocity parser common processor row writer processor switch r0 <NEXT> $ r2 = r7 get header <NEXT> if $ r2 == null goto label1 <NEXT> r8 = com univocity parser common processor row writer processor switch r0 <NEXT> $ r4 = r8 get header <NEXT> $ i6 = lengthof $ r4 <NEXT> r9 = com univocity parser common processor row writer processor switch r0 <NEXT> r9 minimum row length = $ i6 <NEXT> label r10 = com univocity parser common processor row writer processor switch r0 <NEXT> $ r3 = r10 get index <NEXT> if $ r3 == null goto label4 <NEXT> r11 = com univocity parser common processor row writer processor switch r0 <NEXT> r1 = r11 get index <NEXT> i0 = lengthof r1 <NEXT> i7 = 0 <NEXT> label if i7 > = i0 goto label4 <NEXT> i1 = r1 [ i7 ] <NEXT> $ i4 = i1 + 1 <NEXT> r12 = com univocity parser common processor row writer processor switch r0 <NEXT> $ i3 = r12 minimum row length <NEXT> if $ i4 < = $ i3 goto label3 <NEXT> $ i5 = i1 + 1 <NEXT> r13 = com univocity parser common processor row writer processor switch r0 <NEXT> r13 minimum row length = $ i5 <NEXT> label i7 = i7 + 1 <NEXT> goto label2 <NEXT> label if i7 > = i0 goto label4 <NEXT> label r14 = com univocity parser common processor row writer processor switch r0 <NEXT> $ i8 = r14 minimum row length <NEXT> return $ i8 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com univocity parser common routine abstract routine r0 <NEXT> r2 parser setting = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com univocity parser common routine input dimension r0 <NEXT> $ l0 = r1 row <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = com univocity parser common text parse exception r0 <NEXT> $ i0 = r2 error content length <NEXT> if $ i0 ! = 0 goto label1 <NEXT> return null <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r3 = com univocity parser common text parse exception r0 <NEXT> $ r1 = r3 content <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = com univocity parser conversion big decimal conversion r0 <NEXT> $ r2 = r3 from string r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java lang byte value of r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = java lang string r1 <NEXT> r4 = com univocity parser conversion trim conversion r0 <NEXT> $ r3 = r4 execute $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = com univocity parser csv csv format r0 <NEXT> $ c0 = r1 delimiter <NEXT> return $ c0 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> if z0 == 0 goto label1 <NEXT> r1 = com univocity parser csv csv parser setting r0 <NEXT> r1 parse unescaped quote = 1 <NEXT> label r2 = com univocity parser csv csv parser setting r0 <NEXT> r2 parse unescaped quote until delimiter = z0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com univocity parser csv csv parser setting r0 <NEXT> $ z0 = r1 delimiter detection enable <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = com univocity parser csv csv parser setting r0 <NEXT> r2 unescaped quote handle = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com univocity parser csv csv parser setting r0 <NEXT> $ z0 = r1 keep quote <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = com univocity parser csv csv parser setting r0 <NEXT> $ z0 = r1 ignore lead whitespaces in quote <NEXT> return $ z0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = com univocity parser csv csv writer setting r1 <NEXT> r3 = com univocity parser csv csv writer r0 <NEXT> r3 initialize $ r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = com univocity parser tsv tsv format r0 <NEXT> $ c0 = r1 escape char <NEXT> return $ c0 <END>
<BEG> r0 = @ this <NEXT> r2 = com univocity parser tsv tsv parser setting r0 <NEXT> $ r1 = r2 create default format <NEXT> r3 = com univocity parser common format $ r1 <NEXT> return r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` element be null\ `` <NEXT> $ r2 = io vavr collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = io vavr collection array of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` element be null\ `` <NEXT> $ r2 = bit set $ lambda_of all_953fd58f_1__5 bootstrap $ <NEXT> $ r3 = bit set $ lambda_of all_953fd58f_2__7 bootstrap $ <NEXT> $ r4 = io vavr collection bit set with relation $ r2 $ r3 <NEXT> $ r5 = io vavr collection iterator of all r0 <NEXT> r7 = java lang iterable $ r5 <NEXT> $ r6 = $ r4 of all r7 <NEXT> return $ r6 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` element be null\ `` <NEXT> $ r2 = io vavr collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = io vavr collection link hash set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` element be null\ `` <NEXT> $ r2 = io vavr collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = io vavr collection link hash set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` element be null\ `` <NEXT> $ r2 = io vavr collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = io vavr collection tree set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` element be null\ `` <NEXT> $ r2 = io vavr collection iterator of all r0 <NEXT> r4 = java lang iterable $ r2 <NEXT> $ r3 = io vavr collection tree set of all r4 <NEXT> return $ r3 <END>
<BEG> r0 = @ parameter0 <NEXT> java util object require non null r0 \ `` element be null\ `` <NEXT> $ r2 = io vavr collection bit map trie of all r0 <NEXT> $ r3 = io vavr collection vector of all $ r2 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> r1 = org apache maven wagon event wagon event r0 <NEXT> $ l0 = r1 timestamp <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jetty websocket api upgrade request r0 <NEXT> $ r1 = r2 session <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jetty websocket api upgrade response r0 <NEXT> $ r1 = r2 get header \ `` sec- web socket- protocol\ `` <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org eclipse jetty websocket api upgrade response r0 <NEXT> $ r1 = r2 extension <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = javax enterprise inject spi annotate constructor r0 <NEXT> $ r1 = org jboss weld util reflection format format annotate constructor r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = javax enterprise inject spi annotate type r0 <NEXT> $ r1 = org jboss weld util reflection format format annotate type r2 <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org jboss weld bean abstract bean r0 <NEXT> r2 producer = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r3 = @ parameter2 <NEXT> r7 = new org jboss weld event event metadata impl <NEXT> specialinvoke r7 < init > r1 null r3 <NEXT> r8 = org jboss weld bootstrap bean deployment module r0 <NEXT> $ r6 = r8 notifier <NEXT> r9 = javax enterprise inject spi event metadata r7 <NEXT> $ r6 fire event r1 r2 r9 r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = org jboss weld config system property configuration r0 <NEXT> $ z0 = r1 xml validation disable <NEXT> return $ z0 <END>
<BEG> $ r3 = org jboss weld context cache request scoped cache cache <NEXT> $ r4 = $ r3 get <NEXT> r0 = java util list $ r4 <NEXT> if r0 == null goto label2 <NEXT> $ r5 = org jboss weld context cache request scoped cache cache <NEXT> $ r5 remove <NEXT> r1 = r0 iterator <NEXT> label $ z0 = r1 have next <NEXT> if $ z0 == 0 goto label2 <NEXT> $ r6 = r1 next <NEXT> r2 = org jboss weld context cache request scoped item $ r6 <NEXT> r2 invalidate <NEXT> goto label1 <NEXT> if $ z0 == 0 goto label2 <NEXT> label return <END>
<BEG> $ z0 = org jboss weld context cache request scoped cache be active <NEXT> if $ z0 == 0 goto label1 <NEXT> org jboss weld contexts cache request scoped cache end request <NEXT> org jboss weld contexts cache request scoped cache begin request <NEXT> label return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r11 = org jboss weld contexts creational context impl r0 <NEXT> $ r6 = r11 dependent instance <NEXT> entermonitor $ r6 <NEXT> label r12 = org jboss weld contexts creational context impl r0 <NEXT> $ r7 = r12 dependent instance <NEXT> r3 = $ r7 iterator <NEXT> label $ z0 = r3 have next <NEXT> if $ z0 == 0 goto label5 <NEXT> $ r8 = r3 next <NEXT> r4 = org jboss weld context api contextual instance $ r8 <NEXT> $ r9 = r4 get instance <NEXT> if $ r9 ! = r1 goto label4 <NEXT> r3 remove <NEXT> org jboss weld contexts creational context impl destroy r4 <NEXT> exitmonitor $ r6 <NEXT> label return 1 <NEXT> if $ r9 ! = r1 goto label4 <NEXT> label goto label2 <NEXT> if $ z0 == 0 goto label5 <NEXT> label exitmonitor $ r6 <NEXT> label goto label9 <NEXT> label return 0 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = r2 resolve observer method r0 r3 <NEXT> $ z0 = r4 be metadata required <NEXT> if $ z0 == 0 goto label1 <NEXT> r12 = new org jboss weld event event metadata impl <NEXT> specialinvoke r12 < init > r0 null r3 <NEXT> $ r9 = r1 get service <NEXT> $ r10 = $ r9 get class \ `` lorg jboss weld event current event metadata \ `` <NEXT> r6 = org jboss weld event current event metadata $ r10 <NEXT> r13 = new org jboss weld event fast event $ fast event with metadata propagation <NEXT> r15 = javax enterprise inject spi event metadata r12 <NEXT> specialinvoke r13 < init > r4 r15 r6 null <NEXT> r16 = org jboss weld event fast event r13 <NEXT> return r16 <NEXT> if $ z0 == 0 goto label1 <NEXT> label r14 = new org jboss weld event fast event <NEXT> specialinvoke r14 < init > r4 <NEXT> return r14 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r6 = org jboss weld event observer notifier r0 <NEXT> $ r2 = r6 resolver <NEXT> $ r3 = $ r2 resolve r1 1 <NEXT> $ r4 = org jboss weld util reflection reflection cast $ r3 <NEXT> $ r5 = org jboss weld event resolve observer $ r4 <NEXT> return $ r5 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r7 = @ parameter2 <NEXT> $ z0 = r1 be metadata required <NEXT> if $ z0 ! = 0 goto label1 <NEXT> r7 = null <NEXT> label $ r3 = r1 get immediate sync observer <NEXT> $ r4 = org jboss weld event observer notifier $ observer exception handler immediate_handler <NEXT> r8 = org jboss weld event observer notifier r0 <NEXT> r8 notify sync observer $ r3 r2 r7 $ r4 <NEXT> $ r5 = r1 get transaction observer <NEXT> $ r6 = org jboss weld event observer notifier $ observer exception handler immediate_handler <NEXT> r9 = org jboss weld event observer notifier r0 <NEXT> r9 notify transaction observer $ r5 r2 r7 $ r6 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> org jboss weld util precondition check argument not null r1 \ `` event\ `` <NEXT> $ r5 = r1 get class <NEXT> r3 = org jboss weld util type get canonical type $ r5 <NEXT> r8 = new org jboss weld event event metadata impl <NEXT> specialinvoke r8 < init > r3 null r2 <NEXT> r9 = org jboss weld manager bean manager impl r0 <NEXT> $ r7 = r9 global strict observer notifier <NEXT> r10 = javax enterprise inject spi event metadata r8 <NEXT> $ r7 fire event r1 r10 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org jboss weld manager bean manager impl r0 <NEXT> $ r1 = r2 bean resolver <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r8 = new java lang string builder <NEXT> specialinvoke r8 < init > <NEXT> r9 = org jboss weld metadata cache annotation model r0 <NEXT> $ z0 = r9 be valid <NEXT> if $ z0 == 0 goto label1 <NEXT> $ r7 = \ `` valid\ `` <NEXT> goto label2 <NEXT> label $ r2 = r8 append $ r7 <NEXT> $ r3 = $ r2 append \ `` annotation model for \ `` <NEXT> r10 = org jboss weld metadata cache annotation model r0 <NEXT> $ r4 = r10 get raw type <NEXT> $ r5 = $ r3 append $ r4 <NEXT> $ r6 = $ r5 to string <NEXT> return $ r6 <NEXT> if $ z0 == 0 goto label1 <NEXT> label $ r7 = \ `` invalid\ `` <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r5 = org jboss weld metadata cache meta annotation store r0 <NEXT> $ r2 = r5 qualifier <NEXT> $ r3 = $ r2 get cast value r1 <NEXT> $ r4 = org jboss weld metadata cache qualifier model $ r3 <NEXT> return $ r4 <END>
<BEG> r1 = new org jboss weld util collection immutable set $ builder impl <NEXT> specialinvoke r1 < init > null <NEXT> r2 = org jboss weld util collection immutable set $ builder r1 <NEXT> return r2 <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 ! = null goto label1 <NEXT> return null <NEXT> if r0 ! = null goto label1 <NEXT> label $ z0 = r0 be empty <NEXT> if $ z0 == 0 goto label2 <NEXT> return \ `` empty collection \ `` <NEXT> if $ z0 == 0 goto label2 <NEXT> label $ r3 = new java lang string builder <NEXT> specialinvoke $ r3 < init > \ `` \n - \ `` <NEXT> r2 = r0 iterator <NEXT> label $ z2 = r2 have next <NEXT> if $ z2 == 0 goto label4 <NEXT> $ r5 = r2 next <NEXT> $ r3 append $ r5 <NEXT> $ z1 = r2 have next <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r3 append \ <NEXT> goto label3 <NEXT> if $ z2 == 0 goto label4 <NEXT> label $ r4 = $ r3 to string <NEXT> return $ r4 <END>
<BEG> r0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = r0 get observe qualifier <NEXT> $ r4 = r0 get bean class <NEXT> if $ r4 ! = null goto label1 <NEXT> $ r21 = org jboss weld log event logger log <NEXT> $ r22 = $ r21 observer method method return null \ `` get bean class\ <NEXT> r23 = java lang throwable $ r22 <NEXT> throw r23 <NEXT> if $ r4 ! = null goto label1 <NEXT> label $ r5 = r0 get observe type <NEXT> if $ r5 ! = null goto label2 <NEXT> $ r19 = org jboss weld log event logger log <NEXT> $ r20 = $ r19 observer method method return null \ `` get observed type\ <NEXT> r24 = java lang throwable $ r20 <NEXT> throw r24 <NEXT> if $ r5 ! = null goto label2 <NEXT> label org jboss weld util binding validate qualifier r3 r1 r0 \ `` observer method get observe qualifiers\ `` <NEXT> $ r6 = r0 get reception <NEXT> if $ r6 ! = null goto label3 <NEXT> $ r17 = org jboss weld log event logger log <NEXT> $ r18 = $ r17 observer method method return null \ `` get reception\ <NEXT> r25 = java lang throwable $ r18 <NEXT> throw r25 <NEXT> if $ r6 ! = null goto label3 <NEXT> label $ r7 = r0 get transaction phase <NEXT> if $ r7 ! = null goto label4 <NEXT> $ r15 = org jboss weld log event logger log <NEXT> $ r16 = $ r15 observer method method return null \ `` get transaction phase\ <NEXT> r26 = java lang throwable $ r16 <NEXT> throw r26 <NEXT> if $ r7 ! = null goto label4 <NEXT> label if r2 == null goto label5 <NEXT> $ r11 = r0 get bean class <NEXT> $ r12 = r2 get bean class <NEXT> $ z2 = $ r11 equal $ r12 <NEXT> if $ z2 ! = 0 goto label5 <NEXT> $ r13 = org jboss weld log event logger log <NEXT> $ r14 = $ r13 bean class mismatch r2 r0 <NEXT> r27 = java lang throwable $ r14 <NEXT> throw r27 <NEXT> if $ z2 ! = 0 goto label5 <NEXT> label $ z0 = r0 instanceof org jboss weld event synthetic observer method <NEXT> if $ z0 ! = 0 goto label6 <NEXT> $ r8 = r0 get class <NEXT> $ z1 = org jboss weld util observer have notify overriden $ r8 r0 <NEXT> if $ z1 ! = 0 goto label6 <NEXT> $ r9 = org jboss weld log event logger log <NEXT> $ r10 = $ r9 notify method not implement r0 <NEXT> r28 = java lang throwable $ r10 <NEXT> throw r28 <NEXT> if $ z1 ! = 0 goto label6 <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> if r0 == null goto label1 <NEXT> $ i0 = r0 length <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label return r0 <NEXT> if $ i0 ! = 0 goto label2 <NEXT> label $ i1 = r0 length <NEXT> if $ i1 < = 1 goto label3 <NEXT> $ c2 = r0 char at 1 <NEXT> $ z0 = java lang character be upper case $ c2 <NEXT> if $ z0 == 0 goto label3 <NEXT> $ c3 = r0 char at 0 <NEXT> $ z1 = java lang character be upper case $ c3 <NEXT> if $ z1 == 0 goto label3 <NEXT> return r0 <NEXT> if $ z1 == 0 goto label3 <NEXT> label r1 = r0 to char array <NEXT> $ c4 = r1 [ 0 ] <NEXT> $ c5 = java lang character to low case $ c4 <NEXT> r1 [ 0 ] = $ c5 <NEXT> $ r2 = new java lang string <NEXT> specialinvoke $ r2 < init > r1 <NEXT> return $ r2 <END>
<BEG> r0 = @ this <NEXT> r4 = @ parameter0 <NEXT> if r4 ! = null goto label1 <NEXT> r4 = newarray java lang string [ 0 ] <NEXT> label r6 = org jboss weld environment se bean parameter factory r0 <NEXT> r6 args = r4 <NEXT> r5 = new java util array list <NEXT> $ r2 = java util array a list r4 <NEXT> specialinvoke r5 < init > $ r2 <NEXT> $ r3 = java util collection unmodifiable list r5 <NEXT> r7 = org jboss weld environment se bean parameter factory r0 <NEXT> r7 args list = $ r3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r3 = org jboss weld environment se weld r0 <NEXT> $ r2 = r3 add package z0 r1 <NEXT> r4 = javax enterprise inject se se container initializer $ r2 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r5 = org jboss weld environment se weld r0 <NEXT> $ r3 = r5 property <NEXT> $ r3 put r1 r2 <NEXT> r6 = org jboss weld environment se weld r0 <NEXT> return r6 <END>
<BEG> r0 = @ parameter0 <NEXT> entermonitor class \ `` lorg jboss weld bootstrap api singleton provider \ `` <NEXT> label $ r3 = org jboss weld bootstrap api singleton provider instance <NEXT> if $ r3 ! = null goto label2 <NEXT> org jboss weld bootstrap api singleton provider instance = r0 <NEXT> goto label3 <NEXT> label exitmonitor class \ `` lorg jboss weld bootstrap api singleton provider \ `` <NEXT> label goto label7 <NEXT> label return <NEXT> if $ r3 ! = null goto label2 <NEXT> label $ r4 = new java lang runtime exception <NEXT> $ r5 = new java lang string builder <NEXT> specialinvoke $ r5 < init > <NEXT> $ r6 = $ r5 append \ `` singleton provider be already initialize with \ `` <NEXT> $ r7 = org jboss weld bootstrap api singleton provider instance <NEXT> $ r8 = $ r6 append $ r7 <NEXT> $ r9 = $ r8 to string <NEXT> specialinvoke $ r4 < init > $ r9 <NEXT> throw $ r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org apache jute record reader r0 <NEXT> $ r2 = r3 archive <NEXT> r1 deserialize $ r2 \ `` \ `` <NEXT> return <END>
<BEG> r0 = @ this <NEXT> $ r2 = org apache zookeeper server datadir cleanup manager $ purge task status start <NEXT> r7 = org apache zookeeper server datadir cleanup manager r0 <NEXT> $ r1 = r7 purge task status <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> $ r4 = org apache zookeeper server datadir cleanup manager log <NEXT> $ r4 info \ `` shut down purge task \ `` <NEXT> r8 = org apache zookeeper server datadir cleanup manager r0 <NEXT> $ r5 = r8 timer <NEXT> $ r5 cancel <NEXT> $ r6 = org apache zookeeper server datadir cleanup manager $ purge task status complete <NEXT> r9 = org apache zookeeper server datadir cleanup manager r0 <NEXT> r9 purge task status = $ r6 <NEXT> goto label2 <NEXT> label return <NEXT> if $ r2 ! = $ r1 goto label1 <NEXT> label $ r3 = org apache zookeeper server datadir cleanup manager log <NEXT> $ r3 warn \ `` purge task not start ignore shutdown ! \ `` <END>
<BEG> r0 = @ this <NEXT> r2 = org apache zookeeper server datadir cleanup manager r0 <NEXT> $ r1 = r2 snap dir <NEXT> return $ r1 <END>
<BEG> r0 = @ this <NEXT> r2 = org apache zookeeper server data node r0 <NEXT> $ r1 = r2 child <NEXT> return $ r1 <END>
<BEG> l0 = @ parameter0 <NEXT> org apache zookeeper server persistence file txn log pre alloc size = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r3 = org apache zookeeper server persistence file txn log r0 <NEXT> $ r1 = r3 log stream <NEXT> if $ r1 == null goto label1 <NEXT> r4 = org apache zookeeper server persistence file txn log r0 <NEXT> $ r2 = r4 log stream <NEXT> $ r2 flush <NEXT> r5 = org apache zookeeper server persistence file txn log r0 <NEXT> r5 log stream = null <NEXT> r6 = org apache zookeeper server persistence file txn log r0 <NEXT> r6 oa = null <NEXT> label return <END>
<BEG> r0 = @ parameter0 <NEXT> l8 = @ parameter1 <NEXT> l0 = @ parameter2 <NEXT> $ r1 = r0 get channel <NEXT> l1 = $ r1 position <NEXT> $ l2 = l1 + 4096l <NEXT> $ b3 = $ l2 cmp l8 <NEXT> if $ b3 < 0 goto label1 <NEXT> l8 = l8 + l0 <NEXT> $ r2 = org apache zookeeper server persistence util fill <NEXT> $ r2 position 0 <NEXT> $ r4 = r0 get channel <NEXT> $ r6 = org apache zookeeper server persistence util fill <NEXT> $ r5 = org apache zookeeper server persistence util fill <NEXT> $ i4 = $ r5 remain <NEXT> $ l5 = long $ i4 <NEXT> $ l6 = l8 - $ l5 <NEXT> $ r4 write $ r6 $ l6 <NEXT> label return l8 <END>
<BEG> r0 = @ this <NEXT> r7 = org apache zookeeper server quorum observer zoo keeper server r0 <NEXT> $ r2 = r7 pending syncs <NEXT> $ i0 = $ r2 size <NEXT> if $ i0 ! = 0 goto label1 <NEXT> $ r6 = org apache zookeeper server quorum observer zoo keeper server log <NEXT> $ r6 warn \ `` not expect a sync \ `` <NEXT> return <NEXT> if $ i0 ! = 0 goto label1 <NEXT> label r8 = org apache zookeeper server quorum observer zoo keeper server r0 <NEXT> $ r3 = r8 pending syncs <NEXT> $ r4 = $ r3 remove <NEXT> r1 = org apache zookeeper server request $ r4 <NEXT> r9 = org apache zookeeper server quorum observer zoo keeper server r0 <NEXT> $ r5 = r9 commit processor <NEXT> $ r5 commit r1 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> $ r2 = r1 get client port address <NEXT> r5 = org apache zookeeper server server config r0 <NEXT> r5 client port address = $ r2 <NEXT> $ r3 = r1 get data dir <NEXT> r6 = org apache zookeeper server server config r0 <NEXT> r6 data dir = $ r3 <NEXT> $ r4 = r1 get data log dir <NEXT> r7 = org apache zookeeper server server config r0 <NEXT> r7 data log dir = $ r4 <NEXT> $ i0 = r1 get tick time <NEXT> r8 = org apache zookeeper server server config r0 <NEXT> r8 tick time = $ i0 <NEXT> $ i1 = r1 get max client cnxns <NEXT> r9 = org apache zookeeper server server config r0 <NEXT> r9 max client cnxns = $ i1 <NEXT> $ i2 = r1 get min session timeout <NEXT> r10 = org apache zookeeper server server config r0 <NEXT> r10 min session timeout = $ i2 <NEXT> $ i3 = r1 get max session timeout <NEXT> r11 = org apache zookeeper server server config r0 <NEXT> r11 max session timeout = $ i3 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org apache zookeeper server upgrade data node v1 r0 <NEXT> r2 child = r1 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r2 = org apache zookeeper server z k database r0 <NEXT> $ r1 = r2 data tree <NEXT> $ r1 last processed zxid = l0 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r4 = org apache zookeeper server z k database r0 <NEXT> $ r2 = r4 data tree <NEXT> $ r3 = $ r2 convert long r1 <NEXT> return $ r3 <END>
<BEG> r0 = @ this <NEXT> l0 = @ parameter0 <NEXT> r1 = @ parameter1 <NEXT> r2 = @ parameter2 <NEXT> r3 = @ parameter3 <NEXT> r4 = @ parameter4 <NEXT> r6 = org apache zookeeper server z k database r0 <NEXT> $ r5 = r6 data tree <NEXT> $ r5 set watch l0 r1 r2 r3 r4 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r2 = org apache zookeeper zoo keeper r0 <NEXT> $ r1 = r2 cnxn <NEXT> $ l0 = $ r1 get session id <NEXT> return $ l0 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = @ parameter1 <NEXT> r4 = org apache zookeeper zoo keeper r0 <NEXT> $ r3 = r4 cnxn <NEXT> $ r3 add auth info r1 r2 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r26 = org apache zookeeper zoo keeper r0 <NEXT> $ r2 = r26 cnxn <NEXT> $ r3 = $ r2 get state <NEXT> $ z0 = $ r3 be alive <NEXT> if $ z0 ! = 0 goto label2 <NEXT> $ r12 = org apache zookeeper zoo keeper log <NEXT> $ z2 = $ r12 be debug enabled <NEXT> if $ z2 == 0 goto label1 <NEXT> $ r13 = org apache zookeeper zoo keeper log <NEXT> $ r13 debug \ `` close call on already close client\ `` <NEXT> label return <NEXT> if $ z0 ! = 0 goto label2 <NEXT> label $ r4 = org apache zookeeper zoo keeper log <NEXT> $ z1 = $ r4 be debug enabled <NEXT> if $ z1 == 0 goto label3 <NEXT> $ r7 = org apache zookeeper zoo keeper log <NEXT> r24 = new java lang string builder <NEXT> specialinvoke r24 < init > <NEXT> $ r8 = r24 append \ `` close session 0x\ `` <NEXT> r27 = org apache zookeeper zoo keeper r0 <NEXT> $ l0 = r27 get session id <NEXT> $ r9 = java lang long to hex string $ l0 <NEXT> $ r10 = $ r8 append $ r9 <NEXT> $ r11 = $ r10 to string <NEXT> $ r7 debug $ r11 <NEXT> label r28 = org apache zookeeper zoo keeper r0 <NEXT> $ r5 = r28 cnxn <NEXT> $ r5 close <NEXT> label goto label6 <NEXT> label $ r17 = org apache zookeeper zoo keeper log <NEXT> r25 = new java lang string builder <NEXT> specialinvoke r25 < init > <NEXT> $ r19 = r25 append \ `` session 0x\ `` <NEXT> r29 = org apache zookeeper zoo keeper r0 <NEXT> $ l1 = r29 get session id <NEXT> $ r20 = java lang long to hex string $ l1 <NEXT> $ r21 = $ r19 append $ r20 <NEXT> $ r22 = $ r21 append \ `` closed\ `` <NEXT> $ r23 = $ r22 to string <NEXT> $ r17 info $ r23 <NEXT> return <END>
<BEG> r0 = @ this <NEXT> r5 = org apache zookeeper zoo keeper r0 <NEXT> $ r1 = r5 cnxn <NEXT> $ r2 = $ r1 send thread <NEXT> $ r3 = $ r2 get client cnxn socket <NEXT> $ r4 = $ r3 get local socket address <NEXT> return $ r4 <END>
<BEG> r0 = @ this <NEXT> r4 = new java util array list <NEXT> r5 = org zeroturnaround exec process executor r0 <NEXT> $ r2 = r5 builder <NEXT> $ r3 = $ r2 command <NEXT> specialinvoke r4 < init > $ r3 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> z0 = @ parameter0 <NEXT> r3 = org zeroturnaround exec process executor r0 <NEXT> $ r1 = r3 builder <NEXT> $ r1 redirect error stream z0 <NEXT> r4 = org zeroturnaround exec process executor r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r3 = org zeroturnaround exec process executor r0 <NEXT> $ r2 = r3 listener <NEXT> $ r2 remove r1 <NEXT> r4 = org zeroturnaround exec process executor r0 <NEXT> return r4 <END>
<BEG> r0 = @ this <NEXT> r1 = @ parameter0 <NEXT> r2 = org zeroturnaround exec process executor r0 <NEXT> r2 message logger = r1 <NEXT> r3 = org zeroturnaround exec process executor r0 <NEXT> return r3 <END>
