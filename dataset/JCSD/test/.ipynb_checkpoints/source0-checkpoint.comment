<BEG> set the human presentable name <END>
<BEG> locate a datacontenthandler that corresponds to the mime type <END>
<BEG> return all the commands for this type of data <END>
<BEG> return the <i>name<i> of this object the filedatasource <END>
<BEG> retrieve this object's parameter list <END>
<BEG> returns the number of values in this array <END>
<BEG> encodes this array as a compact json string, such as: <pre>[94043,90210]<pre> <END>
<BEG> wraps the given object if necessary <END>
<BEG> resets the current thread's context loader to its original value <END>
<BEG> add any libraries that come with different java versions here <END>
<BEG> set the assignable class for this definition <END>
<BEG> set the classloader to use to create an instance of the definition <END>
<BEG> create an instance of the definition <END>
<BEG> sets the exception associated with this event this is used <END>
<BEG> returns the nested exception, if any <END>
<BEG> get the next chained component helper <END>
<BEG> sets the project for this component helper <END>
<BEG> go back to the hardwired default exclude patterns <END>
<BEG> set whether or not include and exclude patterns are matched in a case sensitive way <END>
<BEG> get the named resource <END>
<BEG> get the status code <END>
<BEG> creates a new classconstants using the passed in reader for instantiation <END>
<BEG> returns <i>prepend<i> attribute <END>
<BEG> sets the end token character <END>
<BEG> sets the tab length <END>
<BEG> creates a new tailfilter using the passed in reader for instantiation <END>
<BEG> get the project <END>
<BEG> set the name of the current project <END>
<BEG> sets the flag to ignore the project tag <END>
<BEG> parse an unknown element from a url <END>
<BEG> sets project handler <END>
<BEG> sets the user provided input <END>
<BEG> is the user input valid? <END>
<BEG> returns a helper for the given class, either from the cache or by creating a new instance <END>
<BEG> creates a new instance of this class using the arguments specified, gives it any extra user properties which have been specified, and then runs the build using the classloader provided <END>
<BEG> return the set of global filters <END>
<BEG> add a filter to the set of global filters <END>
<BEG> return the base directory of the project as a file object <END>
<BEG> return the keep-going mode if the keepgoing settorgetter <END>
<BEG> add a new task definition to the project <END>
<BEG> create a new instance of a task, adding it to a list of created tasks for later invalidation this causes all tasks <END>
<BEG> send a &quot;target started&quot; event to the build listeners for this project <END>
<BEG> send a &quot;message logged&quot; task level event to the build listeners for this project <END>
<BEG> resolve the file relative to the project's basedir and return it as a fileresource <END>
<BEG> stores a configured child element within its parent object <END>
<BEG> extract the element name from a component name <END>
<BEG> returns the value of a property, if it is set you can override <END>
<BEG> returns an enumeration of all child wrappers <END>
<BEG> get the location of this target's definition <END>
<BEG> executes the target if the if and unless conditions are satisfied dependency checking should be done before calling this <END>
<BEG> handles an error line by logging it with the warn priority <END>
<BEG> sets the target object to proxy for <END>
<BEG> the cvs command to execute <END>
<BEG> if true, report only and don't change any files <END>
<BEG> set the maximum memory to be used by the jarsigner process <END>
<BEG> set the filename to write the output to this is relative to the value <END>
<BEG> add a reference element identifying a data type to carry over to the new project <END>
<BEG> set the compiler <END>
<BEG> get the compiler class name <END>
<BEG> set the preprocessdir attribute <END>
<BEG> set the searchparents attribute <END>
<BEG> file or directory to get base name from <END>
<BEG> the size of the read buffer to use <END>
<BEG> check the attributes and nested elements <END>
<BEG> check if the os is valid <END>
<BEG> set the name of the parent <END>
<BEG> iterate through all conditions <END>
<BEG> add an &lt;uptodate&gt; condition <END>
<BEG> the string to search for <END>
<BEG> set whether to ignore line endings when comparing files <END>
<BEG> set the errorsbeginat attribute <END>
<BEG> the jarfile that is to be tested for the presence of a signature <END>
<BEG> determines if the os on which ant is executing matches the given os version <END>
<BEG> set method of handling mappers that return multiple mappings for a given source path <END>
<BEG> set the character encoding for output files <END>
<BEG> compares source resources to destination files to see if they should be copied <END>
<BEG> set the output file for the log <END>
<BEG> add a user to list changelog knows about <END>
<BEG> set the user's id <END>
<BEG> get the user's full name <END>
<BEG> set a reference to a classpath to use when loading the files <END>
<BEG> add a select selector entry on the selector list <END>
<BEG> add an or selector entry on the selector list <END>
<BEG> add a none selector entry on the selector list <END>
<BEG> add a depends selector entry on the selector list <END>
<BEG> add a set of source files <END>
<BEG> path to take the dirname of <END>
<BEG> set the password for smtp auth; this requires javamail <END>
<BEG> shorthand to set the replyto address element <END>
<BEG> shorthand to set the to address element <END>
<BEG> add a bcc address element <END>
<BEG> set the value of this header <END>
<BEG> adds a textual part of the message <END>
<BEG> set the output filename <END>
<BEG> returns the environment used to create a subprocess <END>
<BEG> sets the environment variables for the subprocess to launch <END>
<BEG> mark timeout as having occurred <END>
<BEG> limit the command line length by passing at maximum this many sourcefiles at once to the command <END>
<BEG> set whether to bypass timestamp comparisons for target files <END>
<BEG> create a nested mapper element to use for mapping source files to target files <END>
<BEG> set up the io redirector <END>
<BEG> construct the command line for serial execution <END>
<BEG> set the destination directory file will be unzipped into the <END>
<BEG> where to copy the source file <END>
<BEG> perform the gzip compression operation <END>
<BEG> the manifest file to use this can be either the location of a manifest, <END>
<BEG> set the classpath to be used for this compilation <END>
<BEG> adds a path to the classpath <END>
<BEG> adds a reference to a classpath defined elsewhere <END>
<BEG> if true, list the source files being handed off to the compiler <END>
<BEG> get the listfiles flag <END>
<BEG> gets the deprecation flag <END>
<BEG> gets the memorymaximumsize flag <END>
<BEG> gets the optimize flag <END>
<BEG> specify where to find source file <END>
<BEG> indicate whether all classes and members are to be included in the scope processed <END>
<BEG> create a doclet to be used in the documentation generation <END>
<BEG> include the author tag in the generated documentation <END>
<BEG> control deprecation infromation <END>
<BEG> control deprecated list generation <END>
<BEG> control class tree generation <END>
<BEG> set the classpath for loading the driver using the classpath reference <END>
<BEG> auto commit flag for database connection; optional, default false <END>
<BEG> gets the userid <END>
<BEG> set the user name for the connection; required <END>
<BEG> sets the keys <END>
<BEG> set the resource name of a property file to load <END>
<BEG> if true, suppress the load error report and set the the failonerror value to false <END>
<BEG> add the filterchain element <END>
<BEG> add an element element <END>
<BEG> method present for bc purposes <END>
<BEG> get the main section of the manifest <END>
<BEG> sets the maximum parent directory levels allowed when computing a relative path <END>
<BEG> update policy: either update or replace ; default is replace <END>
<BEG> set this to be the items in the base directory that you want to be included you can also specify for the items ie: items= <END>
<BEG> add a type selector entry on the type list <END>
<BEG> go and delete the directory tree <END>
<BEG> the new priority, in the range 1-10 <END>
<BEG> the resource to pack; required <END>
<BEG> validate, then hand off to the subclass <END>
<BEG> flag to ignore whitespace differences; default=false <END>
<BEG> assume patch was created with old and new files swapped; optional, default=false <END>
<BEG> learn whether the refid attribute of this element been set <END>
<BEG> the value of the property <END>
<BEG> get the error stream <END>
<BEG> create the pump to handle error output <END>
<BEG> turns off or on this recorder <END>
<BEG> cleans up any resources held by this recorder entry at the end of a subbuild if it has been created for the subbuild's project instance <END>
<BEG> the name of a property file from which properties specified using nested <code>&lt;replacefilter&gt;<code> elements are drawn; required only if the <i>property<i> attribute of <code>&lt;replacefilter&gt;<code> is used <END>
<BEG> set the name of the property to set in task mode <END>
<BEG> create a normal command line, then with -xnew at the front <END>
<BEG> optional directory to save generated source files to <END>
<BEG> gets the jdk version for the generated stub code <END>
<BEG> gets file list to compile <END>
<BEG> sets whether or not to include ant's own classpath in this task's classpath <END>
<BEG> adds an implementation specific command line argument <END>
<BEG> execute all nestedtasks <END>
<BEG> optionally sets the output directory to be used <END>
<BEG> pass output sent to system out to the new project <END>
<BEG> this method builds a file path to use in conjunction with directories <END>
<BEG> sets whether to fail with a build exception on error, or go on <END>
<BEG> set the buildpath to be used to find sub-projects <END>
<BEG> used to copy empty directories <END>
<BEG> checks whether the archive is out-of-date with respect to the given files, ensures that the archive won't contain itself <p> <END>
<BEG> grabs all included files and directors from the fileset and returns them as an array of relative file names <END>
<BEG> sets the property you wish to assign the temporary file to <END>
<BEG> the resource to expand; required <END>
<BEG> the file that must be older than the target file if the property is to be set <END>
<BEG> sets property to true if target file s have a more recent timestamp than each of the corresponding source file s <END>
<BEG> scan a directory for files to check for up to date ness <END>
<BEG> ask for certificate information to be printed <END>
<BEG> actions to be taken on an unsuccessful wait <END>
<BEG> add an xmlcatalog as a nested element; optional <END>
<BEG> set the base directory; optional, default is the project's basedir <END>
<BEG> specifies a single xml document to be styled should be used <END>
<BEG> initialize internal instance of xmlcatalog <END>
<BEG> if true, emulate sun's jar utility by not adding parent directories; optional, defaults to false <END>
<BEG> sets behavior for when a duplicate file is about to be added - one of <code>add<code>, <code>preserve<code> or <code>fail<code> <END>
<BEG> get the compression level <END>
<BEG> validate and build <END>
<BEG> do any clean up necessary to allow this instance to be used again <END>
<BEG> add a name entry to the include files list <END>
<BEG> add an extended selector entry on the selector list <END>
<BEG> set the classpath to load the filterreader through attribute <END>
<BEG> get the archive from which entries will be extracted <END>
<BEG> get the archive file from which entries will be extracted <END>
<BEG> return the prefix prepended to entries in the archive file <END>
<BEG> fulfill the resourcecollection contract <END>
<BEG> get the set of resources that represent files <END>
<BEG> get the current assertions <END>
<BEG> get the name of the class to be run <END>
<BEG> get the vm command, including memory <END>
<BEG> get the boot classpath <END>
<BEG> get the reference set on this object <END>
<BEG> return a dirset that has the same basedir and same patternsets as this one <END>
<BEG> performs the check for circular references and returns the referenced filelist <END>
<BEG> add a striplinecomments filter <END>
<BEG> add a chainfilter filter <END>
<BEG> get the referenced filter set <END>
<BEG> gets the filter hash of the filterset <END>
<BEG> set the file containing the filters for this filterset <END>
<BEG> add a new filter <END>
<BEG> cannot mix add and addconfigured in same type, so provide this to override the add method <END>
<BEG> creates the nested <code>&lt;pathelement&gt;<code> element <END>
<BEG> concatenates the system class path in the order specified by the ${build sysclasspath} property - using &quot;last&quot; as <END>
<BEG> returns the filtered include patterns <END>
<BEG> to be used by tasks wishing to use this security model before executing the part to be subject to these permissions note that setting the securitymanager too early may <END>
<BEG> allow properties of a particular name in the set <END>
<BEG> allow properties whose names match a regex in the set <END>
<BEG> add the error file mapper <END>
<BEG> resolve the reference, looking in the associated project <END>
<BEG> set the name of this resource <END>
<BEG> tells the modification time in milliseconds since 01 01 1970 <END>
<BEG> compare another object to this archiveresource for equality <END>
<BEG> set binary mode for this content resourcecomparator if this <END>
<BEG> compare two resources <END>
<BEG> hashcode based on the rules for equality <END>
<BEG> overridden, not allowed to set the name of the resource <END>
<BEG> fulfill the iterator contract <END>
<BEG> set the file for this fileresource <END>
<BEG> get the file represented by this fileresource <END>
<BEG> get the name of this fileresource if the basedir is set, <END>
<BEG> find out whether this fileresourceiterator has more elements <END>
<BEG> get the merged patterns for this files collection <END>
<BEG> compress on the fly using java util zip gzipoutstream <END>
<BEG> format this restrict collection as a string <END>
<BEG> get the datetime in ms <END>
<BEG> set the granularity to use for this resourceselector <END>
<BEG> set the comparison mode <END>
<BEG> get the comparison type <END>
<BEG> get the value of this stringresource <END>
<BEG> instantiates the identified custom selector class <END>
<BEG> specify the classpath to use to load the selector nested element <END>
<BEG> support for nested &lt;param&gt; tags <END>
<BEG> returns true the file is selected only if all other selectors agree that the file should not be selected <END>
<BEG> sets the unless attribute to a property which cannot exist for the selector to select any files <END>
<BEG> the uid for the tar entry this is not the same as the user name <END>
<BEG> the groupname for the tar entry; optional, default= this is not the same as the gid <END>
<BEG> the gid for the tar entry; optional, default= 0 this is not the same as the group name <END>
<BEG> a tarfileset accepts another tarfileset or a fileset as reference filesets are often used by the war task for the lib attribute <END>
<BEG> compare two times <END>
<BEG> set the encoding used for this zipfileset <END>
<BEG> a zipfileset accepts another zipfileset or a fileset as reference filesets are often used by the war task for the lib attribute <END>
<BEG> return a zipfileset that has the same properties as this one <END>
<BEG> set whether this concatresourceinputstream ignores errors <END>
<BEG> an add configured version of the add method <END>
<BEG> return string representation of <code>deweydecimal<code> <END>
<BEG> retrieves the implementation <END>
<BEG> set the implementation this argument is for <END>
<BEG> create a temporary file in a given directory <END>
<BEG> compares two filenames <END>
<BEG> renames a file, even if that involves crossing file system boundaries <END>
<BEG> jdk1 1 compatible access to set the context class loader <END>
<BEG> indicates if the context class loader methods are available <END>
<BEG> call a method on the object with one argument <END>
<BEG> set the script text <END>
<BEG> create and set text on a script <END>
<BEG> start the watch dog <END>
<BEG> set the debugging flag for the buffer <END>
<BEG> get this entry's user id <END>
<BEG> set this entry's group name <END>
<BEG> indicate if this entry is a gnu long name block <END>
<BEG> close an entry this method must be called for all file <END>
<BEG> parse an octal string from a header buffer this is used for the <END>
<BEG> set the user id <END>
<BEG> get the file mode for given permissions with the correct file type <END>
<BEG> the actual data to put central directory - without header-id or length specifier <END>
<BEG> get the local data <END>
<BEG> retrieves the external file attributes <END>
<BEG> retrieves the extra data for the local file data <END>
<BEG> get value as four bytes in big endian byte order <END>
<BEG> sets the default compression method for subsequent entries <END>
<BEG> helper method to get the value as a java int from a two-byte array <END>
<BEG> get the restrict attribute <END>
<BEG> handle the input <END>
<BEG> returns the short ant version information, if available once the information <END>
<BEG> sets the separator between the prefix and the target name <END>
<BEG> sets whether the current file should be read in include as opposed to import mode <END>
<BEG> returns true if the value is null or an empty string, can be interpreted as a false value or cannot be interpreted as a true value and a property of the value's name doesn't exist <END>
<BEG> overridden to restore the wrapper once it is no longer needed <END>
<BEG> the resource to test <END>
<BEG> supports grand-children that want to support the attribute where the child-class doesn't i e unzip in the compress <END>
<BEG> whether unicode extra fields will be used if present <END>
<BEG> whether the task is in include as opposed to import mode <END>
<BEG> whether to flatten multi-valued attributes i e class-path <END>
<BEG> sets the vm launcher to use for the given project <END>
<BEG> learn whether strings will be trimmed default false <END>
<BEG> run the task <END>
<BEG> get the directory to create <END>
<BEG> creates a list file this temporary file contains a list of all files <END>
<BEG> get the value of platform <END>
<BEG> get comment file <END>
<BEG> get preservetime flag status <END>
<BEG> if true, checks out the file but does not create an editable file containing its data <END>
<BEG> get obsolete flag status <END>
<BEG> get comment method <END>
<BEG> set the attribute type-name <END>
<BEG> if true, checkin the element after creation <END>
<BEG> specifies the element type to use <END>
<BEG> set the vob name <END>
<BEG> get vob name <END>
<BEG> get global flag status <END>
<BEG> get type-kind string <END>
<BEG> get the path to the item in a clearcase view <END>
<BEG> read the entry from a stream <END>
<BEG> read a constant pool entry from a class stream <END>
<BEG> resolve this constant pool entry with respect to its dependents in the constant pool <END>
<BEG> get the name of the field <END>
<BEG> gets the name of the class defining the interface method <END>
<BEG> get the name of the class defining the method <END>
<BEG> if true, the task will fail if an error occurs writing the properties file, otherwise errors are just logged <END>
<BEG> if the regex is set, then only properties whose names match it will be recorded if prefix is not set and if this is never set, <END>
<BEG> set the verify mode for the produced jar default true <END>
<BEG> setter used to store the location of the borland dtd this can be a file on the system <END>
<BEG> the ias ejbc utility doesn't require the public id of the descriptor's dtd for it to process correctly--this method always returns <code>null <code> <END>
<BEG> sets the <code>nogenic<code> flag <END>
<BEG> optional classpath to wl6 0 <END>
<BEG> set the classname of the ejbc compiler; optional normally ejbjar determines the appropriate class based on the dtd used for the ejb the ejb 2 0 compiler <END>
<BEG> get a description handler <END>
<BEG> return the set of <code>extension<code> objects representing optional packages that the application declares they will use if present if <END>
<BEG> set the name of extension <END>
<BEG> set the implementationversion of extension <END>
<BEG> the name of the property in which the location of library is stored <END>
<BEG> returns a string representation of the location <END>
<BEG> sets starting token to identify keys; required <END>
<BEG> validates the passed in attributes <END>
<BEG> returns the password field <END>
<BEG> determines if the action supplied is valid <p> <END>
<BEG> the filename of the component to be deployed; optional depending upon the tool and the action <END>
<BEG> builds the arguments to pass to weblogic deploy according to the <END>
<BEG> sets the text bnf documentation option <END>
<BEG> sets the one_table documentation option <END>
<BEG> sets the node_prefix grammar option <END>
<BEG> the fully-qualified name of the class or classes, separated by commas <END>
<BEG> get the uri root value <END>
<BEG> set the proxyport for socks connections the default value is 1080 <END>
<BEG> the filenameformat attribute defines a messageformat string used to parse the output of the pcli command it defaults to <END>
<BEG> the format of the folder names; optional <END>
<BEG> what a valid return value from pvcs looks like when it describes a file defaults to <code>&quot;p:<code> <END>
<BEG> get name of the project in the pvcs repository <END>
<BEG> only files with this revision are extract; optional <END>
<BEG> the regular expression pattern to match in the file s ; required if no nested &lt;regexp&gt; is used <END>
<BEG> optional file to save stdout to <END>
<BEG> add the schema <END>
<BEG> create a reader if the use of the class did not specify another one <END>
<BEG> execute the script <END>
<BEG> defines the manager <END>
<BEG> set a task attribute <END>
<BEG> utility method for nested scripts; throws a buildexception with the given message <END>
<BEG> get the vss server path <END>
<BEG> get the sos home directory <END>
<BEG> the labeled version to operate on in sourcesafe <END>
<BEG> the version number to label <END>
<BEG> add a setup sequence <END>
<BEG> get the teardown exception <END>
<BEG> prevent the user from specifying a different command <END>
<BEG> set overwrite mode if set to false default <END>
<BEG> set the from label attribute <END>
<BEG> gets the version string <END>
<BEG> returns the local path without the flag ; required <END>
<BEG> add files recursively defaults to false <END>
<BEG> version to check-out <END>
<BEG> date to check-out <END>
<BEG> comment to apply to the project created in sourcesafe <END>
<BEG> where to find the parser class; optional <END>
<BEG> test that returns true if we are using a sax1 parser <END>
<BEG> if <code>true<code>, stop the build process if the patch command exits with an error status <END>
<BEG> add a new propertyhelper to be set on the project <END>
<BEG> whether the build should fail if nothing has been replaced <END>
<BEG> sets the base directory to output the generated files <END>
<BEG> signature algorithm; optional <END>
<BEG> sets a given property to the number of rows in the first statement that returned a row count <END>
<BEG> add a nested filesystem-only resourcecollection <END>
<BEG> whether any errors should make the build fail <END>
<BEG> whether the build should fail if the nested resource collection is empty <END>
<BEG> provides the extra fields for the zip entry currently being added to the archive - if any <END>
<BEG> add an arbitrary selector <END>
<BEG> set the value of the condition <END>
<BEG> tells the modification time in milliseconds since 01 01 1970 the epoch <END>
<BEG> configures the archivefileset based on this type's settings, set the source <END>
<BEG> set the regular expression to compare names against <END>
<BEG> add nested text to this resource <END>
<BEG> breaks a path up into a vector of path elements, tokenizing on <code>file separator<code> <END>
<BEG> creates a tokenizedpattern from the same tokens that make up this path <END>
<BEG> create a file object for a temporary file in a given directory without <END>
<BEG> set the script text properties in the text are not expanded! <END>
<BEG> this implementation may not add the element at the given index if it is already contained in the collection <END>
<BEG> raise an exception if one was caught <END>
<BEG> indicate if this entry is a gnu long linkname block <END>
<BEG> helper method to get the value as a java biginteger from eight bytes starting at given array offset <END>
<BEG> whether to fall back to utf and the language encoding flag if the file name cannot be encoded using the specified encoding <END>
<BEG> markrelease do nothing; we have entire buffer <END>
<BEG> gets the total number of sll lookahead operations across all decisions made during parsing this value is the sum of <END>
<BEG> this method resets the token stream back to the first token in the <END>
<BEG> does this start at or before other? nondisjoint <END>
<BEG> combine all sets in the array returned the or'd value <END>
<BEG> returns the maximum value contained in the set if not isnil <END>
<BEG> are two intervalsets equal? because all intervals are sorted and disjoint, equals is a simple linear walk over both lists to make sure they are the same interval equals is used <END>
<BEG> get the ith element of ordered set used only by randomphrase so <END>
<BEG> tell our token source and error strategy about a new way to create tokens <END>
<BEG> the atn with bypass alternatives is expensive to create so we create it lazily <END>
<BEG> how to create a token leaf node associated with a parent <END>
<BEG> add a parse tree node to this as a child works for <END>
<BEG> add a token leaf node child and force its parent to be this node <END>
<BEG> add a child to this node based upon matchedtoken it <END>
<BEG> if profiling during the parselex, this will return decisioninfo records for each decision in recognizer in a parseinfo object <END>
<BEG> set the atn interpreter used by the recognizer for prediction <END>
<BEG> gets a value indicating whether the match operation succeeded <END>
<BEG> visits a non standard attribute of the class <END>
<BEG> <b>experimental, use at your own risk this method will be renamed when it becomes stable, this <END>
<BEG> adds a module reference to the constant pool of the class being build does nothing if the <END>
<BEG> returns the bootstrap method used to compute the value of this constant <END>
<BEG> returns an argument passed to the bootstrap method, in order to compute the value of this constant <END>
<BEG> visits a non standard attribute of the field <END>
<BEG> returns the kind of field or method designated by this handle <END>
<BEG> visits the default value of this annotation interface method <END>
<BEG> visits an instruction with a single int operand <END>
<BEG> visits a line number declaration <END>
<BEG> visits the class bound of the last visited formal type parameter <END>
<BEG> constructs a new remapper for modules the default implementation of this method returns a new <END>
<BEG> returns the descriptor of the method described by this object <END>
<BEG> returns the return type of the method described by this object <END>
<BEG> returns the previous instruction in the list to which this instruction belongs, if any <END>
<BEG> returns an array containing all the instructions in this list <END>
<BEG> removes all the instructions of this list <END>
<BEG> makes the given module visitor visit this opened package <END>
<BEG> returns the java generic exception types declaration corresponding to the visited signature <END>
<BEG> verifies that the actual number is not close to the given one by the given percentage <br> <END>
<BEG> verifies that the actual value is less than or equal to the given one <END>
<BEG> verifies that the actual value is greater than or equal to the given one <END>
<BEG> verifies that the actual array contains the given sequence, without any other values between them <END>
<BEG> verifies that the actual map contains the given key <END>
<BEG> verifies that the actual map contains the given keys <END>
<BEG> verifies that the actual array contains only null elements <END>
<BEG> verifies that the actual array does not contain the given sequence in the given order and <b>without extra values between the sequence values<b> <END>
<BEG> asserts that the actual object is equal to the given one by comparing their propertiesfields <b>except for the given ones<b> <END>
<BEG> asserts that the actual object has no null fields or properties <b>except for the given ones<b> inherited ones are taken into account <END>
<BEG> allows to set a specific comparator to compare properties or fields with the given type <END>
<BEG> verifies that the actual value is not equal to the given one <b>in the actual zoneddatetime's java time zoneid<b> <END>
<BEG> loads the text content of a url into a list of strings, each string corresponding to a line <END>
<BEG> verifies that the actual atomicreferencearray contains only null elements and nothing else <END>
<BEG> verifies that each element value satisfies the given condition <p> example : <pre><code class='java'> atomicreferencearray&lt;string&gt; abc = new atomicreferencearray&lt;&gt; new string[]{ a , b , c } ; atomicreferencearray&lt;string&gt; abcc = new atomicreferencearray&lt;&gt; new string[]{ a , b , cc } ; condition&lt;string&gt; singlecharacterstring = new condition&lt;&gt; s -&gt; s length == 1, single character string ; <END>
<BEG> verifies that there are <b>exactly<b> <i>n<i> elements in the actual atomicreferencearray satisfying the given condition <END>
<BEG> verifies that the given value satisfies this condition <END>
<BEG> sets the message that will replace the default message of an assertion failure <END>
<BEG> returns absolute value of the difference according to time unit <END>
<BEG> verifies that the given array starts with the given sequence of values, without any other values between them similar to <END>
<BEG> returns whether or not we remove elements related to assertj from assertion error stack trace <END>
<BEG> asserts that the given inputstreams have same content <END>
<BEG> verifies that the actual <code>iterable<code> is a subset of values <code>iterable<code> <br> <END>
<BEG> asserts that the actual value is not equal to zero <br> <END>
<BEG> asserts that the actual value is not negative <END>
<BEG> asserts that the actual value is not positive <END>
<BEG> asserts that the given array contains only null elements <END>
<BEG> verifies that the actual value is not exactly an instance of given type <END>
<BEG> asserts that the given object is present in the given array <END>
<BEG> formats the given date using the iso 8601 date-time format yyyy-mm-dd't'hh:mm:ss <br> <END>
<BEG> converts the given date to calendar, returns null if the given date is null <END>
<BEG> extracts the millisecond of the given date <END>
<BEG> get the list of computed deltas <END>
<BEG> sets whether the use of private fields is allowed <END>
<BEG> return the value of a simple property from a target object <END>
<BEG> verifies that the number of values in the actual group is greater than the given boundary <END>
<BEG> verifies that the number of values in the actual iterable is less than the given boundary <END>
<BEG> verifies that the actual array contains only the given values and nothing else, in any order and ignoring duplicates i e once a value is found, its duplicates are also considered found <END>
<BEG> asserts that the actual object has only null fields or properties <b>except for the given ones<b> inherited ones are taken into account <END>
<BEG> creates a new assumption's instance for an <code>int<code>s' array <END>
<BEG> creates a new assumption's instance for a <code>long<code> value <END>
<BEG> creates a new assumption's instance for a <code>float<code>s' array <END>
<BEG> creates a new assumption's instance for a <code>char<code> value <END>
<BEG> returns the set of the object under test fields types to ignore in the recursive comparison <END>
<BEG> makes the recursive comparison to ignore the object under test fields of the given types <END>
<BEG> makes the recursive comparison to ignore collection order in the object under test fields matching the specified regexes <END>
<BEG> applies this configuration to assertj <END>
<BEG> asserts that the given file has the given size in bytes <END>
<BEG> returns an array containing the given arguments <END>
<BEG> throw an assertion error based on information in this assertion equivalent to: <END>
<BEG> asserts that the actual object has the specified field or property static and synthetic fields are ignored since 3 19 0 <END>
<BEG> verifies that the atomic under test has the given value <END>
<BEG> creates a new assumption's instance for a <code>short<code>s' two-dimensional array <END>
<BEG> assert that the actual object is equal to the given one by comparing actual's propertiesfields with other's <b>not null<b> propertiesfields only including inherited ones <END>
<BEG> assert that the actual object has no null fields or properties <b>except for the given ones<b> inherited ones are taken into account <END>
<BEG> assert that the actual object has the specified field or property <END>
<BEG> assert that the object under test actual is equal to the given object based on recursive a propertyfield by propertyfield comparison including <END>
<BEG> verifies that the actual short is close to the given one within the given offset <br> <END>
<BEG> verifies that each element value satisfies the given condition <p> example : <pre><code class='java'> atomicreferencearray&lt;string&gt; abc = new atomicreferencearray&lt;&gt; new string[]{ a , b , c } ; atomicreferencearray&lt;string&gt; abcc = new atomicreferencearray&lt;&gt; new string[]{ a , b , cc } ; condition&lt;string&gt; singlecharacterstring = new condition&lt;&gt; s -> s length == 1, single character string ; <END>
<BEG> always throws <tt>unsupportedoperationexception<tt>, as this class represents an <i>immutable<i> map entry <END>
<BEG> writes the given node <END>
<BEG> creates an unbounded asyncqueue <END>
<BEG> creates a buffered asyncqueue <END>
<BEG> instruct awaitility not to catch uncaught exceptions from other threads <END>
<BEG> handle condition evaluation results each time evaluation of a condition occurs works only with a hamcrest matcher-based condition <END>
<BEG> find a field based on a type e g <END>
<BEG> get the value of a field using reflection this method will traverse the <END>
<BEG> gets the type <END>
<BEG> instruct awaitility to ignore caught exception of the given type during condition evaluation <END>
<BEG> instruct awaitility to ignore exceptions that occur during evaluation and matches the supplied <code>predicate<code> <END>
<BEG> applies this member substitution to any method that matches the supplied matcher <END>
<BEG> adjusts a method's modifiers if it fulfills the supplied matcher <END>
<BEG> adjusts any constructor's modifiers <END>
<BEG> creates a strict type reference adjustment that throws an exception if a type reference cannot be resolved in the supplied type pool <END>
<BEG> creates a new java record this builder automatically defines fields for record members, standard accessors and a record constructor for any <END>
<BEG> <p> rebases the given type where any intercepted method that is declared by the redefined type is preserved within the rebased type's class such that the class's original can be invoked from the new method implementations rebasing a <END>
<BEG> creates a new stack manipulation to load the supplied value onto the stack <END>
<BEG> returns a method return corresponding to a given type <END>
<BEG> returns a new version of this equals method that compares fields with enumeration types prior to fields with non-enumeration types <END>
<BEG> invokes a method using the provided method locator <END>
<BEG> adds all arguments of the instrumented method as arguments to the invoked method to this method call <END>
<BEG> matches a type if it is primitive <END>
<BEG> visits an variable instruction <END>
<BEG> visits a table switch instruction <END>
<BEG> returns the ratio of cache requests which were hits this is defined as <END>
<BEG> returns the number of times an entry has been evicted this count does not include manual <END>
<BEG> advances the timer and evicts entries that have expired <END>
<BEG> sets the source path <END>
<BEG> use this function to get the category associated with a conversion character for example: <END>
<BEG> returns an unsigned short representing the same value as an unsigned byte <END>
<BEG> produces a string representation of the unsigned short s in base radix <END>
<BEG> method for finding all static fields of the main type except for ones possibly filtered out by filter and applying annotation overrides, if any, to annotations <END>
<BEG> registers a std set of fast cloners <END>
<BEG> spring framework friendly version of nullinsteadofclone <END>
<BEG> , oort , serviceoort , serviceoort , serviceoort ; private final concurrentmap<string, boolean> _channels = new concurrenthashmap<> ; private final copyonwritearraylist<cometlistener> _cometlisteners = new copyonwritearraylist<> ; private final serverchannel messagelistener _cloudlistener = new cloudlistener ; <END>
<BEG> deregisters all comet listeners <END>
<BEG> updates the transient interval with the given value <END>
<BEG> retrieve a stream from the sqlite database <END>
<BEG> add a stream to the filter <END>
<BEG> add a tag to the event <END>
<BEG> this function returns if the online module is activated or not <END>
<BEG> writes message in the defined printstream system out by default <END>
<BEG> remove any existing value for the specified key on the specified mapped property <END>
<BEG> return the property descriptor for the specified property name <END>
<BEG> gets the comparator being used to compare beans <END>
<BEG> renders a string representation of this object <END>
<BEG> if we're running on jdk 1 4 or later, initialize the cause for the given throwable <END>
<BEG> return whether a map is fast <END>
<BEG> gets the <code>convertutilsbean<code> instance used to perform the conversions <END>
<BEG> returns the initial value for this contextclassloaderlocal variable this method will be called once per context classloader for <END>
<BEG> provide a string representation of this facade implementation <END>
<BEG> set the time zone to use when converting dates <END>
<BEG> return the number format pattern used to convert numbers tofrom a <code>java lang string<code> <END>
<BEG> set a number format pattern to use to convert numbers tofrom a <code>java lang string<code> <END>
<BEG> provide a string representation of this number converter <END>
<BEG> gets the default value for boolean conversions <END>
<BEG> sets the default value for boolean conversions <END>
<BEG> <p>gets the java class representing the data type of the underlying property values <p> <END>
<BEG> does this property represent a mapped value ie a map ? <END>
<BEG> indicates whether or not the expression contains nested property expressions or not <END>
<BEG> remove the last property expresson from the current expression <END>
<BEG> <p>is this dynaclass currently restricted <p> <END>
<BEG> <p>converts the list to an dynabean array <p> <END>
<BEG> convert an array of specified values to an array of objects of the specified class if possible <END>
<BEG> gets the method that should be used to write one of the property value <END>
<BEG> sets the method that should be used to write the property value <END>
<BEG> return the propertyutils bean instance <END>
<BEG> <p>advance the result set to the next row, if there is not a current row and if we are not already at eof <p> <END>
<BEG> return the hash code value for this map this implementation uses <END>
<BEG> gets the bean instance wrapped by this dynabean <END>
<BEG> sets the 'descpadding' <END>
<BEG> comparator used to sort the options when they output in help text <END>
<BEG> set the comparator used to sort the options when they output in help text <END>
<BEG> retrieve the long name of this option <END>
<BEG> sets whether this option is mandatory <END>
<BEG> converts an array of raw binary data into a string of ascii 0 and 1 characters <END>
<BEG> calculates the digest using the strongest crypt 3 algorithm <END>
<BEG> returns an md5 messagedigest <END>
<BEG> reads through an inputstream and updates the digest for the data <END>
<BEG> returns an initialized <code>mac<code> for the hmacsha1 algorithm <END>
<BEG> returns a hmacmd5 message authentication code mac as a hex string lowercase for the given key and value <END>
<BEG> returns a hmacsha512 message authentication code mac as hex string lowercase for the given key and value <END>
<BEG> generates a libc6 crypt compatible $1$ hash value <END>
<BEG> gets the name type currently in operation <END>
<BEG> discovers if multiple possible encodings are concatenated <END>
<BEG> gets the short version of the name type <END>
<BEG> gets the right context this is a regular expression that must match to the right of the pattern <END>
<BEG> returns the number of characters in the two encoded strings that are the same this return value ranges from 0 to the length of the shortest <END>
<BEG> gets the default charset name used for string decoding and encoding <END>
<BEG> encodes an object into its quoted-printable safe form unsafe characters are escaped <END>
<BEG> returns whether this algorithm is available <END>
<BEG> returns an sha3-224 digest <END>
<BEG> returns an sha3-384 digest <END>
<BEG> calculates the sha3-256 digest and returns the value as a hex string <END>
<BEG> defines whether optional tranformation of space characters is to be used <END>
<BEG> returns true if the underlying map is empty <END>
<BEG> gets an iterator over the bag elements elements present in the bag more <END>
<BEG> returns an unmodifiable view of the underlying map's key set <END>
<BEG> factory method to create a bag that complies to the collection contract <END>
<BEG> puts the key-value pair into the map, replacing any previous pair <END>
<BEG> returns the key to which this map maps the specified value <END>
<BEG> gets the previous key before the one specified <END>
<BEG> returns a string version of this map in standard format <END>
<BEG> add these collections to the list of collections in this composite <END>
<BEG> gets the collections being decorated <END>
<BEG> transforms a collection <END>
<BEG> answers true if a predicate is true for at least one element of a collection <END>
<BEG> selects all elements from inputcollection which don't match the given predicate into an output collection <END>
<BEG> creates a factory that will return the same object each time the factory is used no check is made that the object is immutable in general, only <END>
<BEG> construct a new fluentiterable from the provided iterable if the <END>
<BEG> returns an enumeration that will enumerate all elements contained in this iterable <END>
<BEG> applies the closure to all elements contained in this iterable <END>
<BEG> evaluates the predicate returning true if both predicates return true <END>
<BEG> evaluates the predicate returning true if the input equals the stored value <END>
<BEG> evaluates the predicate returning false if any stored predicate returns false <END>
<BEG> executes the closure by calling the decorated transformer <END>
<BEG> evaluates the predicate returning the result of the decorated transformer <END>
<BEG> gets the predicate in use <END>
<BEG> returns a unique view of the given iterable <END>
<BEG> finds the first element in the given iterable which matches the given predicate <END>
<BEG> counts the number of elements in the input iterable that match the predicate <END>
<BEG> answers true if the provided iterable is empty <END>
<BEG> returns true if there are more elements to return from the array <END>
<BEG> gets the array that this iterator is iterating over <END>
<BEG> removes the last retrieved element if a collection is attached <END>
<BEG> gets the iterator this iterator is using <END>
<BEG> gets the predicate this iterator is using <END>
<BEG> gets the iterator wrapped by this iterable <END>
<BEG> returns the index of the previous element <END>
<BEG> returns the next object in the collection <END>
<BEG> removes the previously retrieved item from the underlying collection <END>
<BEG> inserts the specified element into the underlying list <END>
<BEG> gets the next element of the iteration <END>
<BEG> is another object available from the iterator? <p> this returns true if the single object hasn't been returned yet <END>
<BEG> remove the object from this iterator <END>
<BEG> checks whether the cache is full <END>
<BEG> creates a new node, either by reusing one from the cache or creating a new one <END>
<BEG> clears the list, removing all entries <END>
<BEG> generates a hash code using the algorithm specified in <END>
<BEG> returns a fixed-sized list backed by the given list <END>
<BEG> gets the keyset view of the map <END>
<BEG> gets the standard map hashcode <END>
<BEG> hook method called to determine if <code>checksetvalue<code> has any effect <END>
<BEG> initialise this subclass during construction <END>
<BEG> purges stale mappings from this map before write operations <END>
<BEG> returns the value to which this map maps the specified key returns <END>
<BEG> gets the last key in this map by insert order <END>
<BEG> gets a view over the keys in the map <END>
<BEG> returns the map as a string <END>
<BEG> whether this lrumap will scan until a removable entry is found when the map is full <END>
<BEG> gets the hash code for the specified multi-key <END>
<BEG> check to ensure that input keys are valid multikey objects <END>
<BEG> validates a key value pair <END>
<BEG> gets the key set <END>
<BEG> gets a byte from a map in a null-safe manner <END>
<BEG> gets a short from a map in a null-safe manner <END>
<BEG> gets an int from a map in a null-safe manner <END>
<BEG> copies all of the mappings from the specified multivaluedmap to this map <END>
<BEG> gets the set of values associated with the specified key this would <END>
<BEG> creates a unique set iterator <END>
<BEG> returns a synchronized thread-safe multiset backed by the given multiset <END>
<BEG> gets a predicate that checks if the input object passed in is null <END>
<BEG> creates a predicate that checks if the input object is equal to the specified object using equals <END>
<BEG> create a new predicate that returns true only if all of the specified predicates are true the predicates are checked in iterator order <END>
<BEG> gets the queue being decorated <END>
<BEG> returns the element at the specified position in this queue <END>
<BEG> accept a visitor when a <code>keepcommand<code> accepts a visitor, it <END>
<BEG> gets the set being decorated <END>
<BEG> adds an object to the collection, throwing unsupportedoperationexception unless a setmutator strategy is specified <END>
<BEG> specify a setmutator strategy instance to handle changes <END>
<BEG> add a set to this composite <END>
<BEG> add these sets to the list of sets in this composite <END>
<BEG> gets a transformer that expects an input class object that it will instantiate <END>
<BEG> decrements the counter of already read bytes <END>
<BEG> returns the current number of bytes read from this stream <END>
<BEG> increments the counter of already written bytes <END>
<BEG> has this file been deleted? on valid on incremental dumps <END>
<BEG> get the type of the entry <END>
<BEG> set the size of the entry <END>
<BEG> returns the time the file was last accessed <END>
<BEG> get the level of this dump this is a number between 0 and 9, inclusive, <END>
<BEG> sets whether this is an anti-item used in differential backups, meaning it should delete the same file from a previous backup <END>
<BEG> sets the last modified date using ntfs time 100 nanosecond units since 1 january 1601 <END>
<BEG> closes the archive <END>
<BEG> records an archive entry to add <END>
<BEG> writes a byte array to the current archive entry <END>
<BEG> skips over and discards <code>n<code> bytes of data from this input stream the <code>skip<code> method may, for a variety of reasons, end <END>
<BEG> gets requested alignment <END>
<BEG> returns the access time as a java util date <END>
<BEG> returns the create time as a a java util date of this zip <END>
<BEG> returns whether bit0 of the flags byte is set or not, which should correspond to the presence or absence of a modify timestamp in this particular zip entry <END>
<BEG> returns whether bit2 of the flags byte is set or not, which should correspond to the presence or absence of a create timestamp in this particular zip entry <END>
<BEG> <p> sets the access time seconds since epoch of this zip entry using a ziplong object <p><p> note: the setters for flags and timestamps are decoupled <END>
<BEG> gets the gid as a long gid is typically a 32 bit unsigned <END>
<BEG> length of the extra field in the central directory data - without header-id or length specifier <END>
<BEG> sets the content of the flags field <END>
<BEG> the paylaod that will be added to this zip entry <END>
<BEG> deletes the directory tree from the archive <END>
<BEG> used by subclasses to signal the next block contains a back-reference with the given coordinates <END>
<BEG> reads data from the current back-reference <END>
<BEG> gets the maximal length of a literal block <END>
<BEG> compare byte buffers <END>
<BEG> returns true if the first n bytes of an array are all zero <END>
<BEG> returns the number of bits that can be read from this input stream without reading from the underlying input stream at all <END>
<BEG> obtains a builder for sevenzfileoptions <END>
<BEG> parses the content of a pax 1 0 sparse block <END>
<BEG> the encoding to use for file names and the file comment <END>
<BEG> deletes the file with the file name from the archive <END>
<BEG> returns a list of file names which has been added from the original stream <END>
<BEG> maps the given file name to the name that the file should have after compression with xz common file types with custom suffixes for <END>
<BEG> reads as much from the file as possible to fill the given array <END>
<BEG> returns the largest value that this codec can represent <END>
<BEG> returns the smallest value that this codec can represent <END>
<BEG> returns true if any annotations have been added to this set of bands <END>
<BEG> answer true if the receiver is a source file attribute which gets special handling when the class is built ; otherwise answer false <END>
<BEG> in pack200, line number tables are bci renumbered this method takes the bytecodeoffsets which is a list of <END>
<BEG> this method answers the value this method will use for an invokeinterface call this is equal to 1 + the count of <END>
<BEG> answer the outer class name for the receiver this may either be specified or inferred from inner class name <END>
<BEG> gets the logger used for logging sax-related information <END>
<BEG> receive notification of a notation declaration event <END>
<BEG> set the <code>entityresolver<code> used by sax when resolving public id and system id <END>
<BEG> add an call method rule for a method which accepts no arguments <END>
<BEG> add a set properties rule for the specified parameters <END>
<BEG> <p>gets the top object from the stack with the given name <END>
<BEG> return the id associated with this declaration for plugins <END>
<BEG> return the declaration object with the specified id <END>
<BEG> return the parent rules object <END>
<BEG> return the object which knows about all declared plugins <END>
<BEG> return the rules factory object or null if one has not been specified <END>
<BEG> set the <code>digester<code> with which this <code>rule<code> is associated <END>
<BEG> add an additional custom xml-element -> property mapping <END>
<BEG> sets the current <code>log<code> implementation used by this class <END>
<BEG> creates a new digester and initializes it from the specified inputsource <END>
<BEG> <p> is exact matching being used <END>
<BEG> records an error message which will be presented to the user at a later time <END>
<BEG> construct an object <END>
<BEG> a digester rule which allows the user to declare a plugin <END>
<BEG> allows users to specify constructor argument types <END>
<BEG> gets the logger used for logging sax-related information <strong>note<strong> the output is finely grained <END>
<BEG> return the boolean as to whether the context classloader should be used <END>
<BEG> returns the custom sax contenthandler where events are redirected <END>
<BEG> <p> register the specified dtd url for the specified public identifier this must be called before the first call to <END>
<BEG> add a set properties rule with overridden parameters see <END>
<BEG> <p> are attributes found in the xml without matching properties to be ignored? <p> <p> if false, the parsing will interrupt with an <code>nosuchmethodexception<code> if a property specified in the xml is not found the default is true <END>
<BEG> was a file being used to set the executable? <END>
<BEG> flush this log stream <END>
<BEG> determines if debugging is enabled based on the system property commons_exec_debug <END>
<BEG> returns a basic <tt>authorization<tt> header value for the given <END>
<BEG> returns a string identifying the authentication challenge this is <END>
<BEG> returns authentication parameter with the given name, if available <END>
<BEG> <p> returns all the data in a chunked stream in coalesced form a chunk <END>
<BEG> writes the cache out onto the underlying stream <END>
<BEG> returns the path attribute of the cookie <END>
<BEG> sets the version of the cookie specification to which this cookie conforms <END>
<BEG> get parameters, if any <END>
<BEG> this parses the value part of a header the result is an array of <END>
<BEG> sets all of the headers contained within this group overriding any existing headers the headers are added in the order in which they appear <END>
<BEG> gets the first header with the given name <END>
<BEG> tests if the proxy configuration equals the configuration set on the connection true only if the proxyhost and proxyport are equal <END>
<BEG> returns true if the host is set <END>
<BEG> returns the port <END>
<BEG> returns the proxyhost <END>
<BEG> return the local address to be used when creating connections <END>
<BEG> defines how strictly the method follows the http protocol specification see rfc 2616 and other relevant rfcs <END>
<BEG> returns the connection socket <END>
<BEG> returns the proxy host <END>
<BEG> returns <tt>true<tt> if the connection is established over a secure protocol <END>
<BEG> closes the connection if stale <END>
<BEG> returns the stream used to read the last response's body <END>
<BEG> returns the httpconnectionmanager <END>
<BEG> releases the connection if the connection is locked or does not have a connection <END>
<BEG> sets the socket's sendbuffersize <END>
<BEG> converts the specified string to byte array of ascii characters <END>
<BEG> sets whether or not the http method should automatically handle http authentication challenges status code 401, etc <END>
<BEG> returns an array of the requests headers that the http method currently has <END>
<BEG> returns <tt>true<tt> the method is ready to execute, <tt>false<tt> otherwise <END>
<BEG> get the escaped password <END>
<BEG> entity enclosing requests cannot be redirected without user intervention according to rfc 2616 <END>
<BEG> returns the length of the request body <END>
<BEG> write the disposition header to the output stream <END>
<BEG> return the current filename <END>
<BEG> return the full length of all the data <END>
<BEG> sets the part name <END>
<BEG> <p>return the length of the request body <p> <END>
<BEG> removes all parameter with the given paramname and paramvalue if there <END>
<BEG> gets the stalecheckingenabled value to be set on httpconnections that are created <END>
<BEG> gets the total number of connections in use <END>
<BEG> sets whether authentication should be attempted preemptively <END>
<BEG> gets the default maximum number of connections allowed for a given host config <END>
<BEG> sets the maximum number of connections allowed <END>
<BEG> sets the default socket timeout <tt>so_timeout<tt> in milliseconds which is the timeout for waiting for data a timeout value of zero is interpreted as an infinite <END>
<BEG> returns a hint the size of the underlying buffers used by the platform for incoming network io this value is a suggestion to the kernel from <END>
<BEG> returns linger-on-close timeout this option disablesenables immediate return <END>
<BEG> tell whether or not the absoluteuri of this uri is opaque_part <END>
<BEG> tell whether or not this uri has authority <END>
<BEG> get the recommended default charset of the document <END>
<BEG> get the default charset of the document by locale <END>
<BEG> get the raw-escaped userinfo <END>
<BEG> get the escaped current hierarchy level <END>
<BEG> get the fragment <END>
<BEG> user name property setter user name may not be null <END>
<BEG> does a hash of both user name and password <END>
<BEG> not available: the data must have already been retrieved <END>
<BEG> defines whether all parameter values must be enclosed in quotation marks, even if they do not contain any special characters <END>
<BEG> escape and encode a string regarded as the path component of an uri with the default protocol charset <END>
<BEG> gets the length of the bom's bytes <END>
<BEG> sort an array of files <END>
<BEG> returns the string representation of this file comparator <END>
<BEG> reads a double value from a byte array at a given offset the value is <END>
<BEG> reads a int value from an inputstream the value is <END>
<BEG> gets the list of visited files <END>
<BEG> cleans a directory including sub-directories without deleting directories <END>
<BEG> counts aspects of a directory including sub-directories <END>
<BEG> compares the file sets of two paths to determine if they are equal or not while considering file contents the <END>
<BEG> gets a string describing the delete strategy <END>
<BEG> checks to see if the file can be read <END>
<BEG> checks to see if the file is a file <END>
<BEG> returns a filter that returns true if the file name starts with the specified text <END>
<BEG> returns a filter that returns true if the file name ends with the specified text <END>
<BEG> create a list of file filters <END>
<BEG> checks to see if the file name matches <END>
<BEG> checks to see if the file name starts with the prefix <END>
<BEG> normalizes a path, removing double and single dot path steps <END>
<BEG> converts all separators to the system separator <END>
<BEG> returns whether the given string is a reserved file name <END>
<BEG> creates all parent directories for a file object <END>
<BEG> returns the path to the user's home directory <END>
<BEG> finds files within a given directory and optionally its subdirectories which match an array of extensions <END>
<BEG> reads the contents of a file into a string the file is always closed <END>
<BEG> implements the same behavior as the touch utility on unix it creates <END>
<BEG> mark the current position <END>
<BEG> read the specified number of characters into the array <END>
<BEG> skip a specified number of bytes <END>
<BEG> returns the current position <END>
<BEG> marks the current position <END>
<BEG> reads and returns a single byte <END>
<BEG> returns the number of bytes that can be read or skipped over from this input stream <END>
<BEG> gets the underlying file <END>
<BEG> closes underlying resources <END>
<BEG> tests if the given exception was caused by this stream <END>
<BEG> return the delay in milliseconds <END>
<BEG> converts the specified string to an input stream, encoded as bytes using the default character encoding of the platform <END>
<BEG> converts the specified string to an input stream, encoded as bytes using the specified character encoding <END>
<BEG> returns the filefilter <END>
<BEG> adds a file system listener <END>
<BEG> return the length <END>
<BEG> set whether the file existed the last time it was checked <END>
<BEG> return the target appendable <END>
<BEG> writes a portion of an array of characters to the underlying appendable <END>
<BEG> writes a character to the underlying appendable <END>
<BEG> closes underlying output stream, and mark this as closed <END>
<BEG> write a character <END>
<BEG> flushes the stream <END>
<BEG> close the stream any remaining content accumulated in the output buffer <END>
<BEG> returns the default encoding <END>
<BEG> reject the wildcard specified classes for deserialization, even if they are otherwise accepted <END>
<BEG> checks whether the given throwable is tagged with the given tag <END>
<BEG> compare the last the last modified datetime of two files <END>
<BEG> returns a filter that returns true if the file was last modified after the specified reference file <END>
<BEG> gets the full path from a full filename, which is the prefix + path, and also excluding the final directory separator <END>
<BEG> checks whether two filenames are equal after both have been normalized and using the case rules of the system <END>
<BEG> invokes the delegate's <code>reset <code> method <END>
<BEG> read the sepcified number of characters into the array <END>
<BEG> handles a line from a tailer <END>
<BEG> get the contents of a <code>reader<code> as a character array <END>
<BEG> get the contents of an <code>inputstream<code> as a list of strings, one entry per line, using the default character encoding of the platform <END>
<BEG> get the contents of an <code>inputstream<code> as a list of strings, one entry per line, using the specified character encoding <END>
<BEG> convert the specified charsequence to an input stream, encoded as bytes using the specified character encoding <END>
<BEG> writes chars from a <code>string<code> to a <code>writer<code> <END>
<BEG> writes chars from a <code>stringbuffer<code> to bytes on an <code>outputstream<code> using the specified character encoding <END>
<BEG> copy bytes from an <code>inputstream<code> to chars on a <code>writer<code> using the default character encoding of the platform <END>
<BEG> copy bytes from an <code>inputstream<code> to chars on a <code>writer<code> using the specified character encoding <END>
<BEG> compare the contents of two streams to determine if they are equal or not <END>
<BEG> file system observer started checking event <END>
<BEG> returns the data for this output stream as an array of bytes, assuming that the data has been retained in memory if the data was written to <END>
<BEG> closes a <code>closeable<code> unconditionally <END>
<BEG> gets the contents of an <code>inputstream<code> as a character array using the default character encoding of the platform <END>
<BEG> gets the contents of a <code>byte[]<code> as a string using the specified character encoding <END>
<BEG> compares the contents of two streams to determine if they are equal or not <END>
<BEG> returns whether the given file is empty <END>
<BEG> copies chars from a <code>reader<code> to a <code>appendable<code> <END>
<BEG> <p>compares two arrays, using equals , handling multi-dimensional arrays correctly <p> <END>
<BEG> <p>defensive programming technique to change a <code>null<code> reference to an empty one <p> <END>
<BEG> <p>produces a new array containing the elements between the start and end indices <p> <END>
<BEG> <p>finds the last index of the given object in the array starting at the given index <p> <END>
<BEG> <p>finds the last index of the given value within the array <p> <END>
<BEG> <p>finds the index of the given value in the array starting at the given index <END>
<BEG> <p>converts an array of object long to primitives handling <code>null<code> <p> <END>
<BEG> <p>converts an array of object shorts to primitives <p> <END>
<BEG> <p>converts an array of object floats to primitives handling <code>null<code> <p> <END>
<BEG> <p>checks if an array of objects is not empty or not <code>null<code> <p> <END>
<BEG> <p>test if two <code>short<code>s are equal <p> <END>
<BEG> <p>performs a deep comparison of two <code>object<code> arrays <p> <END>
<BEG> reset the equalsbuilder so you can use the same object again <END>
<BEG> <p> append a <code>hashcode<code> for a <code>float<code> <END>
<BEG> <p> the computed <code>hashcode<code> from tohashcode is returned due to the likelyhood of bugs in mis-calling tohashcode and the unlikelyness of it mattering what the hashcode for hashcodebuilder itself is <END>
<BEG> builds a string for a tostring method excluding the given field name <END>
<BEG> builds a string for a tostring method excluding the given field names <END>
<BEG> sets the field names to exclude <END>
<BEG> <p>gets whether to use the identity hash code <p> <END>
<BEG> <p>gets the array start text <p> <END>
<BEG> <p>sets the array separator text <p> <END>
<BEG> <p>sets the field separator text <p> <END>
<BEG> gets the end text to output when a <code>collection<code>, <code>map<code> or <code>array<code> size is output <p> <END>
<BEG> <p>append to the <code>tostring<code> a <code>double<code> value <p> <END>
<BEG> <p>append to the <code>tostring<code> a <code>float<code> value <p> <END>
<BEG> <p>append to the <code>tostring<code> a <code>long<code> value <p> <END>
<BEG> <p>append to the <code>tostring<code> an <code>object<code> array <p> <END>
<BEG> <p>append to the <code>tostring<code> an <code>short<code> value <p> <END>
<BEG> <p>append to the <code>tostring<code> an <code>object<code> value that has been detected to participate in a cycle this <END>
<BEG> <p>append to the <code>tostring<code> the detail of an <code>object<code> array <p> <END>
<BEG> <p>append to the <code>tostring<code> a summary of a <code>char<code> array <p> <END>
<BEG> <p>append to the <code>tostring<code> a summary of a <code>float<code> array <p> <END>
<BEG> <p>append to the <code>tostring<code> a summary of a <code>boolean<code> array <p> <END>
<BEG> <p>gets the end character for this character range <p> <END>
<BEG> <p>factory method to create a new charset using a special syntax <p> <END>
<BEG> <p>compares two charset objects, returning true if they represent exactly the same set of characters defined in the same way <p> <END>
<BEG> <p>gets a string representation of the set <p> <END>
<BEG> <p>converts the character to a char handling <code>null<code> <p> <END>
<BEG> <p>converts the string to a char using the first character, defaulting the value on empty strings <p> <END>
<BEG> <p>converts the string to the unicode format 'u0020' <p> <END>
<BEG> <p>gets a <code>list<code> of all interfaces implemented by the given class and its superclasses <p> <END>
<BEG> <p>given a <code>list<code> of class names, this method converts them into classes <p> <END>
<BEG> returns the initialized class represented by <code>classname<code> using the current thread's context class loader this implementation <END>
<BEG> <p>converts an array of <code>object<code> in to an array of <code>class<code> objects <END>
<BEG> <p>gets the package name from the canonical name of an <code>object<code> <p> <END>
<BEG> <p>gets the <code>map<code> of <code>enum<code> objects by name using the <code>enum<code> class <p> <END>
<BEG> <p>gets the <code>list<code> of <code>enum<code> objects using the <code>enum<code> class <p> <END>
<BEG> <p>returns a suitable hashcode for the enumeration <p> <END>
<BEG> <p>returns the list of <code>throwable<code> objects in the exception chain <p> <END>
<BEG> <p>creates a compact stack trace for the root cause of the supplied <code>throwable<code> <p> <END>
<BEG> <p>tests if the specified object is a key in this hashtable <p> <END>
<BEG> <p>returns the maximum number in this range <p> <END>
<BEG> <p>gets the maximum number in this range as a <code>int<code> <p> <END>
<BEG> <p>gets the fraction as a <code>long<code> this returns the whole number <END>
<BEG> <p>gets the fraction as a <code>float<code> this calculates the fraction <END>
<BEG> <p>divide the value of this fraction by another <p> <END>
<BEG> <p>tests whether the specified range occurs entirely within this range using <code>int<code> comparison <p> <END>
<BEG> compares this mutable to another in ascending order <END>
<BEG> gets this mutable as an instance of byte <END>
<BEG> compares this object against the specified object the result is <code>true<code> if and only if the argument <END>
<BEG> returns the value of this mutableint as a double <END>
<BEG> returns the value of this mutableshort as a double <END>
<BEG> prints the stack trace for this exception only root cause not included using the specified writer <END>
<BEG> <p>gets the tostring that would be produced by <code>object<code> if a class did not override tostring itself <code>null<code> <END>
<BEG> gets an accessible <code>field<code> by name repecting scope <END>
<BEG> gets a static field value by name the field must be public <END>
<BEG> write a named public static field only the specified class will be considered <END>
<BEG> <p>return an accessible method that is, one that can be invoked via reflection with given name and a single parameter if no such method <END>
<BEG> <p>gets the java io temporary directory as a <code>file<code> <p> <END>
<BEG> checks is the string builder is empty convenience collections api style method <END>
<BEG> appends a char array to the string builder <END>
<BEG> appends a double value followed by a new line to the string builder using <code>string valueof<code> <END>
<BEG> inserts part of the character array into this builder <END>
<BEG> replaces the first instance of the search character with the replace character in the builder <END>
<BEG> replaces the search string with the replace string throughout the builder <END>
<BEG> trims the builder by removing characters less than or equal to a space from the beginning and end <END>
<BEG> extracts the rightmost characters from the string builder without throwing an exception <END>
<BEG> checks if the string builder contains a string matched using the specified matcher <END>
<BEG> searches the string builder to find the first reference to the specified string starting searching from the given index <END>
<BEG> gets the contents of this builder as a reader <END>
<BEG> matches the same characters as stringtokenizer, namely space, tab, newline and formfeed <END>
<BEG> sets the variable suffix to use <END>
<BEG> gets the number of tokens found in the string <END>
<BEG> set the matcher for characters to ignore <END>
<BEG> <p>formats a calendar into a specific pattern <p> <END>
<BEG> <p>validate that the specified argument array is neither <code>null<code> nor contains any elements that are <code>null<code>; otherwise throwing an exception with the specified message <END>
<BEG> <p>validate that the specified argument array is neither <code>null<code> nor contains any elements that are <code>null<code>; otherwise throwing an exception <END>
<BEG> <p>validate that the specified argument collection is neither <code>null<code> nor contains any elements that are <code>null<code>; otherwise throwing an exception <END>
<BEG> <p>capitalizes all the delimiter separated words in a string <END>
<BEG> <p> gets the java io temporary directory as a <code>file<code> <END>
<BEG> returns a flag whether substitution is done in variable names <END>
<BEG> returns the priority of the threads created by this factory result can <END>
<BEG> returns the number of threads this factory has already created this <END>
<BEG> performs initialization in a background thread this implementation <END>
<BEG> directly returns the object that was passed to the constructor this is <END>
<BEG> returns the executor service used by this instance <END>
<BEG> get an array containing the currently registered listeners <END>
<BEG> <p>the string value is overridden to return the standard name <p> <END>
<BEG> <p> compares this object against the specified object the result is <code>true<code> if and only if the argument <END>
<BEG> <p>gets the maximum value in this range <p> <END>
<BEG> reads a static field <END>
<BEG> <p> checks if the subject type may be implicitly cast to the target type <END>
<BEG> <p>unescapes a string containing entity escapes to a string containing the actual unicode characters corresponding to the escapes supports only html 3 0 entities <p> <END>
<BEG> <p>unescapes a string containing xml entity escapes to a string containing the actual unicode characters corresponding to the escapes <p> <END>
<BEG> appends a charsequence to this string builder <END>
<BEG> <p>validates that the index is within the bounds of the argument collection; otherwise throwing an exception <p> <END>
<BEG> <p>validates that the index is within the bounds of the argument character sequence; otherwise throwing an exception with the specified message <p> <END>
<BEG> <p>validate that the specified argument object fall between the two inclusive values specified; otherwise, throws an exception <p> <END>
<BEG> <p>validate that the specified argument object fall between the two inclusive values specified; otherwise, throws an exception with the specified message <p> <END>
<BEG> validates that the argument can be converted to the specified class, if not throws an exception <END>
<BEG> copies the given array and adds the given element at the beginning of the new array <END>
<BEG> returns whether a given array can safely be accessed at the given index <END>
<BEG> shifts the order of the given int array <END>
<BEG> swaps two elements in the given byte array <END>
<BEG> swaps a series of elements in the given byte array <END>
<BEG> <p> returns the name of the field <END>
<BEG> returns the interval in nanoseconds for checking for the opening threshold <END>
<BEG> returns the threshold value for closing the circuit breaker if the number of <END>
<BEG> acquires a permit from this semaphore this method will block if <END>
<BEG> gets an array containing the currently registered listeners <END>
<BEG> sets the value to true <END>
<BEG> increments this instance's value by 1; this method returns the value associated with the instance immediately after the increment operation this method is not thread safe <END>
<BEG> <p> returns a random float within 0 - float max_value <p> <END>
<BEG> <p> gets the user name <END>
<BEG> mapping to escape the java control characters <END>
<BEG> finds active thread groups with the specified group name <END>
<BEG> gets the current day of month <END>
<BEG> parse a formatted date string according to the format updates the calendar with parsed fields <END>
<BEG> creates a stopwatch for convenience <END>
<BEG> <p>compares this triple to another based on the three elements <p> <END>
<BEG> checks is the string builder is not empty convenience collections api style method <END>
<BEG> parses a formatted date string according to the format updates the calendar with parsed fields <END>
<BEG> <p> constructs a <code>javaunicodeescaper<code> between the specified values inclusive <END>
<BEG> <p> get the time on the stopwatch in the specified timeunit <END>
<BEG> <p>null-safe version of <code>class getname <code><p> <END>
<BEG> <p>null-safe version of <code>aclass getname <code><p> <END>
<BEG> <p>return the underlying logger we are using <p> <END>
<BEG> logs a message with <code>org apache log priority debug<code> <END>
<BEG> fatal is never enabled <END>
<BEG> get a <code>log<code> instance by class name <END>
<BEG> get the number of free parameters <END>
<BEG> get the array size required for holding partial derivatives data <END>
<BEG> compute the value of the function for the given argument <END>
<BEG> returns the degree of the polynomial <END>
<BEG> access the imaginary part <END>
<BEG> checks whether either or both parts of this complex number is <END>
<BEG> compute the <a href= http:mathworld wolfram comsine html target= _top > <END>
<BEG> compute the <a href= http:mathworld wolfram comhyperbolictangent html target= _top > <END>
<BEG> compute the argument of this complex number <END>
<BEG> create a complex number given the real and imaginary parts <END>
<BEG> checks whether this instance is equal to another quaternion within a given tolerance <END>
<BEG> gets the second component of the quaternion first component of the vector part <END>
<BEG> get the current rounding mode <END>
<BEG> get the constant &pi; split in two pieces <END>
<BEG> now we want to compute x = a-1 a+1 but this is prone to loss of precision so instead, compute x = a4 - 14 a4 + 14 <END>
<BEG> get the location parameter of the distribution <END>
<BEG> transform a multidimensional array into a one-dimensional list <END>
<BEG> creates an optimizer set up to fit the appropriate curve <END>
<BEG> removes all observations from this container <END>
<BEG> <p> adds the value of this fraction to another, returning the result in reduced form <END>
<BEG> <p> subtracts the value of another fraction from the value of this one, returning the result in reduced form <END>
<BEG> return the additive inverse of this fraction <END>
<BEG> access the first chromosome <END>
<BEG> returns whether the starting index is chosen randomly or set to zero <END>
<BEG> access the elitism rate <END>
<BEG> returns the number of generations that have already passed <END>
<BEG> returns the static random generator <END>
<BEG> returns the crossover policy <END>
<BEG> gets the arity number of chromosomes drawn to the tournament <END>
<BEG> check if a point is within an enlarged ball or at boundary <END>
<BEG> get the angle of the rotation <END>
<BEG> get the vector coordinates as a dimension 3 array <END>
<BEG> transform an in-plane point into a 3d space point <END>
<BEG> get the axis of the second rotation <END>
<BEG> returns the default 2d vector format for the current locale <END>
<BEG> get the tolerance below which points are considered to belong to hyperplanes <END>
<BEG> set the barycenter of the instance <END>
<BEG> get the part of the node cut sub-hyperplane that belongs to the boundary and has the inside of the region on the plus side of its underlying hyperplane <END>
<BEG> get all the parts of the cut sub-hyperplane known to touch inside cells <END>
<BEG> get an intermediate point <END>
<BEG> get the points strictly inside convex cells <END>
<BEG> get the azimuthal angle theta in the x-y plane <END>
<BEG> get the polar angle varphi <END>
<BEG> computes a hashcode for the matrix <END>
<BEG> check if a column index is valid <END>
<BEG> get a hashcode for the real vector <END>
<BEG> get the set of locales for which real vectors formats are available <END>
<BEG> creates a unit vector pointing in the direction of this vector <END>
<BEG> acts as if implemented as: <pre> return copy maptoself function ; <END>
<BEG> optimized method to add sparse vectors <END>
<BEG> gets the number of neurons <END>
<BEG> get the differential equations to integrate <END>
<BEG> get the index of the first equation element in complete state arrays <END>
<BEG> get primary part of the current state derivative <END>
<BEG> get derivative of the secondary state at time <END>
<BEG> estimate interpolation error <END>
<BEG> set parameter step <END>
<BEG> gets the relationship between left and right hand sides <END>
<BEG> returns the variable that is basic in this row <END>
<BEG> get a chi-square-like value assuming the n residuals follow n distinct normal distributions centered on 0 and whose variances are the reciprocal of the weights <END>
<BEG> sets the cost <END>
<BEG> gets the observed values to be matched by the objective vector function <END>
<BEG> gets the upper bound <END>
<BEG> gets the start value <END>
<BEG> get the root mean square value <END>
<BEG> get the covariance matrix of the optimized parameters <END>
<BEG> clears the cache used by the default implementation of <END>
<BEG> returns the <a href= http:mathworld wolfram comregularizedbetafunction html > <END>
<BEG> get the n-dimensional point in integer space <END>
<BEG> returns the correlation matrix <END>
<BEG> computes the kendall's tau rank correlation matrix for the columns of the input matrix <END>
<BEG> returns the sum of the squares of the available values <END>
<BEG> returns the currently configured minimum implementation <END>
<BEG> <p>sets the implementation for the minimum <p> <END>
<BEG> returns the weighted arithmetic mean of the entries in the input array <END>
<BEG> returns true iff biascorrected property is set to true <END>
<BEG> returns the standard deviation of the entries in the input array, using the precomputed mean value returns <END>
<BEG> <p>returns the weighted variance of the values in the input array, using the precomputed weighted mean value <p> <END>
<BEG> add a new vector to the sample <END>
<BEG> returns the quantile estimated by this statistic in the range [0 0-1 0] <END>
<BEG> returns the standard deviation of the values that have been added <END>
<BEG> returns the minimum of the values that have been added <END>
<BEG> return a string representation of this frequency distribution <END>
<BEG> clears the frequency table <END>
<BEG> performs a <a href= http:en wikipedia orgwikikolmogorov-smirnov_test > kolmogorov-smirnov <END>
<BEG> estimates the <i>p-value<i> of a two-sample <a href= http:en wikipedia orgwikikolmogorov-smirnov_test > kolmogorov-smirnov test<a> <END>
<BEG> create a wilson score binomial confidence interval for the true probability of success of an unknown binomial distribution with the given observed number of trials, successes and confidence level <END>
<BEG> loads new y sample data, overriding any previous data <END>
<BEG> calculates the variance of the y values <END>
<BEG> returns the r-squared statistic, defined by the formula <pre> r<sup>2<sup> = 1 - ssr ssto <pre> <END>
<BEG> returns the number of observations added to the regression model <END>
<BEG> adds the observation x,y to the regression data set <END>
<BEG> returns the intercept of the estimated regression line, if <END>
<BEG> returns the sum of the squares of the entries in the input array, or <code>double nan<code> if the array is empty <END>
<BEG> returns the arithmetic mean of the entries in the specified portion of the input array, or <code>double nan<code> if the designated subarray <END>
<BEG> evaluates the continued fraction at the value x <END>
<BEG> get the number of multidimensional counter slots in each dimension <END>
<BEG> get the second element of the pair <END>
<BEG> compare the specified object with this entry for equality <END>
<BEG> returns true if the arguments are equal or within the range of allowed <END>
<BEG> returns the set of numbertransformers used as values in the map <END>
<BEG> returns the systempropertystringlookup singleton instance where the lookup key is a system property name <END>
<BEG> <p>find the levenshtein distance between two strings <p> <END>
<BEG> gets whether the tokenizer currently ignores empty tokens the default for this property is true <END>
<BEG> creates a matcher from a character <END>
<BEG> appends a string builder followed by a new line to this string builder appending null will call <END>
<BEG> appends a char array followed by a new line to the string builder appending null will call <END>
<BEG> appends a separator if the builder is currently non-empty appending a null separator will have no effect the <END>
<BEG> returns the standard prefix for the lookup object of this kind <END>
<BEG> get the size of set b <END>
<BEG> copies this character array into the specified array <END>
<BEG> returns the singleton instance of this validator <END>
<BEG> validates an ip address returns true if valid <END>
<BEG> gets the indexed property name of the field this <END>
<BEG> gets the validation rules for this field as a comma separated list <END>
<BEG> gets an unmodifiable <code>list<code> of the dependencies in the same order they were defined in parameter passed to the setdepends method <END>
<BEG> returns an indexed property from the object we're validating <END>
<BEG> returns the type of <code>formset<code>:<code>global_formset<code>, <code>language_formset<code>,<code>country_formset<code> or <code>variant_formset<code> <END>
<BEG> <p>checks if a field is a valid url address <p> <END>
<BEG> if the isbn is formatted with space or dash separators its format is validated then the digits in the number are weighted, summed, and <END>
<BEG> <p>format an object into a <code>string<code> using the specified pattern <p> <END>
<BEG> <p>parse the value with the specified <code>format<code> <p> <END>
<BEG> <p>validateconvert a <code>biginteger<code> using the specified <i>pattern<i> <END>
<BEG> <p>validateconvert a <code>calendar<code> using the specified <i>pattern<i> and <code>timezone<code> <END>
<BEG> <p>validateconvert a <code>calendar<code> using the specified pattern, and <code>locale<code> and <code>timezone<code> <END>
<BEG> calculate the <i>check digit<i> for an iban code <END>
<BEG> convert an integer value to a check digit <END>
<BEG> calculate the modulus for an sedol code <END>
<BEG> <p>validateconvert a <code>date<code> using the specified <i>pattern<i> and <code>timezone<code> <END>
<BEG> returns the singleton instance of this validator it <END>
<BEG> returns true if the specified <code>string<code> matches any iana-defined infrastructure top-level domain leading dots are <END>
<BEG> returns true if the specified <code>string<code> matches any widely used local domains localhost or localdomain leading dots are <END>
<BEG> <p>validateconvert a <code>float<code> using the specified <i>pattern<i> <END>
<BEG> returns the singleton instance of this validator <END>
<BEG> <p>validateconvert a time using the specified <i>pattern<i> and default <code>timezone<code> <END>
<BEG> returns the value of the specified parameter that will be used during the processing of validations <END>
<BEG> sets the message associated with the validator action <END>
<BEG> load the javascript function specified by the given path for this <END>
<BEG> indicate whether a specified validator is in the result <END>
<BEG> return a map of the validator actions in this result <END>
<BEG> merge another validatorresults into mine <END>
<BEG> gets the value of the variable <END>
<BEG> create an output stream for the generated jack code try to open a file <END>
<BEG> find the node uses parser value <END>
<BEG> find the tracktokens value <END>
<BEG> find the node class name <END>
<BEG> find the node package value <END>
<BEG> convenience method to retrieve integer options <END>
<BEG> find the debug tokenmanager value <END>
<BEG> find the cache tokens value <END>
<BEG> find the jdk version <END>
<BEG> should the generated code use stringbuilder rather than stringbuffer? <END>
<BEG> returns the starting interval value <END>
<BEG> returns the value of the usedefaultinterval flag <END>
<BEG> returns the number of curves in the control-path <END>
<BEG> returns the number of points in the control-path <END>
<BEG> returns the index location in the control-string that marks the start of the problem or -1 if not available <END>
<BEG> returns the length of the internal group-array <END>
<BEG> the closed attribute determines which tri-diagonal matrix to solve <END>
<BEG> checks that the value array has the specified capacity, otherwise the capacity of the value array is increased to be the maximum between twice the current capacity and the specified capacity <END>
<BEG> returns an expression-tree that represents the expression string returns null if the string is empty <END>
<BEG> returns the positive value of the value stored at index location 0 <END>
<BEG> returns the value of ln x + sqrt 1 + x<sup>2<sup> , where x is the value at index location 0 <END>
<BEG> returns the arc tangent of the value at index location 0 <END>
<BEG> returns true only for 2 parameters, false otherwise <END>
<BEG> returns the value of <i>e<sup>x<sup>&nbsp;+&nbsp;e<sup>-x<sup><i> 2, where x is the value at index location 0 and <i>e<i> is the base of natural logarithms <END>
<BEG> returns the floor of the value at index location 0 <END>
<BEG> returns the square root of the value at index location 0 <END>
<BEG> returns an array of exact length of the function names stored in this map <END>
<BEG> returns an array of exact length of the functions stored in this map the returned <END>
<BEG> resets the internal array to the initial state to free up memory <END>
<BEG> returns an array of exact length of the values stored in this map the returned <END>
<BEG> provides the navigation target <END>
<BEG> define that the created bean will or will not be passivation capable <END>
<BEG> detect the right classloader <END>
<BEG> resolves the project-stage configured for deltaspike <END>
<BEG> checks if member is static <END>
<BEG> checks if a method is abstract <END>
<BEG> a factory method pattern which lazily creates a list implementation used to store content <END>
<BEG> static helper method to find and cache meta data objects for bean types <END>
<BEG> registers the given <code>xsdatatype<code> for the given &lt;attribute&gt; qnames <END>
<BEG> called when a method has not been implemented yet <END>
<BEG> getter for property elementname <END>
<BEG> setter for property valuedefault <END>
<BEG> setter for property name <END>
<BEG> used to remove all the element handlers and return things back to the way they were when object was created <END>
<BEG> retrieves w3c dom object generated via transformation <END>
<BEG> this method attempts to use jaxp to locate the sax2 xmlreader implementation this method uses reflection to avoid being dependent <END>
<BEG> report a parsed external entity declaration <END>
<BEG> adds an external dtd declaration to the list of declarations <END>
<BEG> <p> reads a document from the given stream using sax <p> <END>
<BEG> sets encoding used for inputsource null means system default encoding <END>
<BEG> factory method to allow user derived saxcontenthandler objects to be used <END>
<BEG> getter for property priority <END>
<BEG> setter for property definition <END>
<BEG> factory method to creeate new qname instances by default this method <END>
<BEG> finds out if the given character sequence ends with a whitespace character <END>
<BEG> <p> <code>sort<code> sorts the given list of nodes using this xpath <END>
<BEG> attempts to call a static factory method on the type <END>
<BEG> returns an iterator over all superclasses of the class is empty if type has no superclasses <END>
<BEG> gets the alernate mailbox server <END>
<BEG> extracts a valid autodiscover hostname, if any, from a dns srv response <END>
<BEG> gets the error <END>
<BEG> gets the port number <END>
<BEG> gets the ws-addressing action name <END>
<BEG> writes the start element <END>
<BEG> format http response headers <END>
<BEG> parses an enum value list <END>
<BEG> read element value <END>
<BEG> reads the end element <END>
<BEG> skips the current element <END>
<BEG> gets a value indicating whether current element is empty <END>
<BEG> gets the serviceresponse for the exception <END>
<BEG> gets the minor exchange server version number <END>
<BEG> sets the minor version <END>
<BEG> sets the major build number <END>
<BEG> ends an asynchronous request to unsubscribe from a subscription <END>
<BEG> retrieves a collection of all room lists in the specified room list in the organization <END>
<BEG> sets a value indicating whether tracing is enabled <END>
<BEG> sets the web proxy that should be used when sending request to ews <END>
<BEG> determines whether the specified property has been updated <END>
<BEG> handles a change event for the specified property <END>
<BEG> sets the base property set, the property set is based upon <END>
<BEG> gets the delegate users <value>the delegate users <value> <END>
<BEG> gets the name of the object collection xml element <END>
<BEG> gets the parent folder id <END>
<BEG> sets the parent folder id <END>
<BEG> sets the email address <END>
<BEG> gets the parent folder ids <END>
<BEG> gets the query string for indexed search <END>
<BEG> sets the include permissions <END>
<BEG> gets the property set <END>
<BEG> gets the name <value>the name <value> <END>
<BEG> gets the output stream <END>
<BEG> gets the response code <END>
<BEG> whether to use preemptive authentication currently not implemented, though <END>
<BEG> gets the request method type <END>
<BEG> gets the item id of the message to play <END>
<BEG> sets the name to resolve <END>
<BEG> gets the oof settings <END>
<BEG> sets the sync folder id <END>
<BEG> gets the address of the mailbox in which to update the inbox rules <END>
<BEG> sets the conflict resolution mode <END>
<BEG> gets the oof settings <END>
<BEG> override base implementation so that api does not throw when name resolution fails to find a match ews returns an error in this case but <END>
<BEG> internal method that throws a serviceresponseexception if this response has its result property set to error <END>
<BEG> gets a list of changes that occurred on the synchronized folder <END>
<BEG> applies the local changes that have been made to this folder calling <END>
<BEG> gets the id of this folder's parent folder <END>
<BEG> saves this appointment in the calendar folder calling this method <END>
<BEG> tentatively accepts the meeting calling this method results in a call to <END>
<BEG> gets or sets the end time of the appointment <END>
<BEG> gets a value indicating whether the appointment has been cancelled <END>
<BEG> gets the organizer of this meeting the organizer property is read-only <END>
<BEG> gets a list of optional attendeed for this meeting <END>
<BEG> sets the allow new time proposal <END>
<BEG> removes the contact's picture <END>
<BEG> gets the display name of the contact <END>
<BEG> gets the middle name of the contact <END>
<BEG> gets an indexed list of e-mail addresses for the contact for example, to <END>
<BEG> sets the generation <END>
<BEG> gets the contact's job title <END>
<BEG> sets the profession <END>
<BEG> sets the spouse name <END>
<BEG> gets the alias from the directory <END>
<BEG> get the notes from the directory <END>
<BEG> gets a list of all the people who have received messages in this conversation in the current folder only <END>
<BEG> gets a value indicating if at least one message in this conversation, across all folder in the mailbox, has an attachment <END>
<BEG> gets the list of cc recipients for the e-mail message <END>
<BEG> gets the conversation index of the e-mail message <END>
<BEG> sets the from <END>
<BEG> gets a value indicating whether a read receipt is requested for the e-mail message <END>
<BEG> gets a value indicating whether the item has been modified since it was created <END>
<BEG> sets the item class <END>
<BEG> gets the original start time of the appointment <END>
<BEG> gets the the date and time when the post item was posted <END>
<BEG> gets the actual amount of time that is spent on the task <END>
<BEG> gets the tentative <END>
<BEG> gets the body of the post reply <END>
<BEG> gets the single instance of itemschema <END>
<BEG> registers a schema property that will be visible to developers <END>
<BEG> remove the event from happening when property changed <END>
<BEG> gets the added item <value>the added item <value> <END>
<BEG> determines whether the specified key is in the property bag <END>
<BEG> tries to get value <END>
<BEG> gets the proxy host <END>
<BEG> gets the ews url <END>
<BEG> initializes a new instance of the dnssrvrecord class <END>
<BEG> obtains the folder object associated with the wrapper <END>
<BEG> obtains the itembase object associated with the wrapper <END>
<BEG> defines an implicit conversion between a string representing an smtp address and attendeeinfo <END>
<BEG> gets the type of this attendee <END>
<BEG> sets the good suggestion threshold <END>
<BEG> gets the number of suggested meeting times outside regular working hours per day maximumnonworkhourssuggestionsperday must be <END>
<BEG> sets the meeting duration <END>
<BEG> sets the detailed suggestions window <END>
<BEG> gets a collection of suggested meeting times for the specified time period <END>
<BEG> gets the delta <END>
<BEG> gets the month <END>
<BEG> gets the string from oof reply <END>
<BEG> gets the end time <END>
<BEG> gets the copy of the meeting cancellation message sent by the organizer to the attendees of a meeting when the meeting is cancelled <END>
<BEG> gets conversation action <END>
<BEG> sets conversation categories for always categorize actions <END>
<BEG> sets the unique id <END>
<BEG> gets or sets the number of this mobile phone <END>
<BEG> gets the mailbox of the suggested resolved name <END>
<BEG> gets the contact information of the suggested resolved name this <END>
<BEG> gets the fault code <END>
<BEG> sets the fault code <END>
<BEG> sets the fault string <END>
<BEG> gets the line number <END>
<BEG> gets the name of the user configuration <END>
<BEG> unsubscribes from the streaming subscription <END>
<BEG> gets the exception representing the error if exception is null, <END>
<BEG> gets the content type of the attachment <END>
<BEG> sets the checks if is inline <END>
<BEG> removes all attachments from this collection <END>
<BEG> clears the collection <END>
<BEG> gets the working days of the attendees <END>
<BEG> gets the time of the day the attendee starts working <END>
<BEG> gets the modified item <END>
<BEG> remove specified complex property <END>
<BEG> validates this instance for adddelegate <END>
<BEG> sets the receive copies of meeting messages <END>
<BEG> gets the name associated with the e-mail address <END>
<BEG> sets the actual address associated with the e-mail address the type of <END>
<BEG> sets the type of the e-mail address <END>
<BEG> get a string representation for using this instance in a search filter <END>
<BEG> gets the definition of the extended property <END>
<BEG> gets the content stream gets the name of the file the attachment <END>
<BEG> gets the mailbox of the folder mailbox is only set when foldername is <END>
<BEG> gets a value indicating whether the user owns the folder <END>
<BEG> service object changed <END>
<BEG> gets the home page associated with the folder <END>
<BEG> gets the name of the time zone <END>
<BEG> gets a timechange defining when the time changes to daylight saving time <END>
<BEG> sets the state <END>
<BEG> sets the country or region <END>
<BEG> gets a property value or throw if null <END>
<BEG> gets a value indicating whether the pattern has a fixed number of occurrences or an end date <END>
<BEG> sets up this recurrence so that it never ends calling neverends is <END>
<BEG> gets a value indicating whether this rule can be modified via ews <END>
<BEG> gets or sets a value indicating whether incoming messages should be automatically moved to the deleted items folder <END>
<BEG> gets or sets the id of the template message that should be sent as a reply to incoming messages to disable automatic replies, set <END>
<BEG> gets the operation that resulted in an error <END>
<BEG> gets the absolute date and time when the transition occurs <END>
<BEG> sets the date time <END>
<BEG> gets the target period of the transition <END>
<BEG> sets the absolute date <END>
<BEG> defines an implicit conversion of uniquebody into a string <END>
<BEG> gets the type of the unique body's text <END>
<BEG> gets the index of the property <END>
<BEG> gets a value indicating whether this property definition is for a nullable type <END>
<BEG> gets the uri of the property definition <END>
<BEG> sets a value indicating whether more folder matching the search criteria are available in the searched folder <END>
<BEG> gets the type of the change <END>
<BEG> gets the service object the change applies to <END>
<BEG> creates a folderid instance <END>
<BEG> converts a date time string to local date time <END>
<BEG> may return null <END>
<BEG> gets the media attribute of the stylesheetinfo object <END>
<BEG> gets the origin attribute of the stylesheetinfo object <END>
<BEG> gets the title attribute of the stylesheetinfo object <END>
<BEG> sets the sharedcontext for rendering <END>
<BEG> returns the size image needed to render the document without anything going off the side could be different than the dimensions passed into <END>
<BEG> if the image cache has more items than the limit specified for this class, the least-recently used will be dropped from cache until it reaches the desired size <END>
<BEG> resets the tracking information related to the currently hovered element <END>
<BEG> queues a new item to be loaded thread-safe <END>
<BEG> removes the given listener, after which it will no longer receive callbacks on mouse events <END>
<BEG> gets the fixedrectangle attribute of the basicpanel object <END>
<BEG> returns the value for key in the configuration as a byte, or the default provided value if not found or if the value is not a valid byte a <END>
<BEG> command-line execution for testing no arguments <END>
<BEG> convenience method for initializing a writer for the jpeg image format <END>
<BEG> sets the background of the image to white <END>
<BEG> utility method to convert an awt image to a bufferedimage size is preserved, bufferedimage is compatible <END>
<BEG> localize and format the message string from a log record <END>
<BEG> return the tail string for a set of formatted records <END>
<BEG> this will set the metricsets attribute this value must be 0,1, or 2 <END>
<BEG> getter for property fontname <END>
<BEG> getter for property fullname <END>
<BEG> getter for property mappingscheme <END>
<BEG> getter for property characterset <END>
<BEG> getter for property vvector <END>
<BEG> setter for property vvector <END>
<BEG> getter for property xheight <END>
<BEG> getter for property italicangle <END>
<BEG> getter for property charwidth <END>
<BEG> setter for property trackkern <END>
<BEG> this will add another track kern <END>
<BEG> this will add a single composite part to the picture <END>
<BEG> setter for property standardhorizontalwidth <END>
<BEG> getter for property maxkern <END>
<BEG> getter for property maxpointsize <END>
<BEG> returns the registry value <END>
<BEG> returns the operator corresponding to the given key <END>
<BEG> sets the current position to the given value <END>
<BEG> read one single unsigned byte from the buffer <END>
<BEG> read one single unsigned short 2 bytes value from the buffer <END>
<BEG> write a byte array to the buffer <END>
<BEG> returns the type 2 charstring sequence <END>
<BEG> sets the name of the cmap <END>
<BEG> returns the supplement of the cidsysteminfo <END>
<BEG> this will get the character code for the name <END>
<BEG> returns the scale-10 value <END>
<BEG> transforms a y-coordinate of a point for this component <END>
<BEG> returns the usdefaultchar <END>
<BEG> get the postscript table for this ttf <END>
<BEG> get the hhea table for this ttf <END>
<BEG> get the hmtx table for this ttf <END>
<BEG> read a fixed length ascii string <END>
<BEG> read an unsigned integer <END>
<BEG> returns the notice <END>
<BEG> returns the family name <END>
<BEG> parses a type 1 font and returns a type1font class which represents it <END>
<BEG> returns <code>true<code> if the given interface is an optional interface more precisely, it returns <code>true<code> if the interface <END>
<BEG> returns <code>true<code> if the given interface is a collection interface more precisely, it returns <code>true<code> if the interface <END>
<BEG> prints a warning message <END>
<BEG> returns <code>true<code> if warning messages are enable <END>
<BEG> add an existing annotation returns true when the set is modified <END>
<BEG> the following methods throw an exception as they try to modify the state of the object <END>
<BEG> called for warnings <END>
<BEG> this method returns true when the document is already loaded in memory <END>
<BEG> initialise this resource, and return it <END>
<BEG> get a named set of annotations creates a new set if one with this name <END>
<BEG> returns an xml document aming to preserve the original markups the original markup will be in the same place and format as it was before processing the document and include if possible the annotations specified in the asourceannotationset it is equivalent to <END>
<BEG> sets the type component of this mime type <END>
<BEG> returns the subtype component of this mime type <END>
<BEG> checks to see if this mime type has a particular parameter <END>
<BEG> gets the persistent id of a document in this corpus <END>
<BEG> determine whether the given document content string represents a gate custom format xml document <END>
<BEG> executes the prs in this controller, according to the execution strategy of the particular controller type simple pipeline, parallel execution, once-per-document in a corpus, etc subclasses should override this <END>
<BEG> returns the persistence id of this lr, if it has been stored in a datastore null otherwise <END>
<BEG> should clear all internal data of the resource does nothing now <END>
<BEG> accessor for features <END>
<BEG> mutator for features <END>
<BEG> called by the gui when this viewereditor has to initialise itself for a specific object <END>
<BEG> used by the main gui to tell this vr what handle created it the vrs can <END>
<BEG> sets the boost factor hits on this field this value will be <END>
<BEG> true iff the value of the field is to be stored in the index for return with search hits it is an error for this to be true if a field is <END>
<BEG> returns the directory this index resides in <END>
<BEG> a description of this explanation node <END>
<BEG> initializes all local variables <END>
<BEG> expert: constructs an appropriate weight implementation for this query <END>
<BEG> expert: called to re-write queries into primitive queries <END>
<BEG> closes the store to future operations <END>
<BEG> returns true iff the named file exists in this directory <END>
<BEG> adds element to the priorityqueue in log size time if either the priorityqueue is not full, or not lessthan element, top <END>
<BEG> returns the number of elements currently stored in the priorityqueue <END>
<BEG> gets the gateannotations for each pattern <END>
<BEG> this method allow exporting results in to the provided file this method <END>
<BEG> gets the query <END>
<BEG> sets the type <END>
<BEG> sets the text <END>
<BEG> gets the value of a feature <END>
<BEG> gets the position of this annotation in the token stream <END>
<BEG> sets the annotation name <END>
<BEG> creates an annotationschema object from an xschema file <END>
<BEG> overridden to also clean up the corpus value <END>
<BEG> cleans the internal data and prepares this object to be collected <END>
<BEG> get the list of types of packaged application resources in the register <END>
<BEG> returns a list of strings representing class names for large vrs valid for a given type of languageprocessing resource the default vr will be the <END>
<BEG> returns certain document fields if specified from the search call <END>
<BEG> set the helpurl for this parameter <END>
<BEG> get the list of runtime parameters as a list of parameter disjunctions <END>
<BEG> add all the members of a parameter list as individual disjunctions <END>
<BEG> get the version of this plugin <END>
<BEG> hashing, based on the name field of the object <END>
<BEG> get the list of instantiations of resources <END>
<BEG> add an instantiation of the resource to the register of these <END>
<BEG> set method for the resource class name <END>
<BEG> get method for the resource jar file url <END>
<BEG> get the url to the creole xml file that defines this resource <END>
<BEG> a simple accessor for resourcedisplayed field <END>
<BEG> adds the specified element to this set if it is not already present <END>
<BEG> a filter used in the file chooser to restrict the view to files of this type the default implementation just uses the default <END>
<BEG> gets the persistence id of the document to which this event refers <END>
<BEG> gets the resource involved in this event <END>
<BEG> create an instance of a resource, and return it callers of this <END>
<BEG> construct a feature map that is a copy of the one provided except <END>
<BEG> gets the set of registered ir engines <END>
<BEG> adds the plugin to the list of known plugins <END>
<BEG> get the location of the user's config file <END>
<BEG> gets the current list of permitted extensions <END>
<BEG> gets the document this view displays <END>
<BEG> gives access to the highliter's change highlight operation can be <END>
<BEG> get the set of annotation set names that an application requires for input if the controller does not yet have a set of input <END>
<BEG> called when the parser encounters the end of an element <END>
<BEG> returns the name of the icon to be used when this datastore is displayed in the gui <END>
<BEG> computes the transitive closure for symmetric transitive relations such as co-reference given a relation name and a seed annotation id, this method <END>
<BEG> adds the specified component to the layout not used by this class <END>
<BEG> find the graphics configuration for the target popup useful in case of multiple screens <END>
<BEG> shows the window containing labels for the texts provided as attributes <END>
<BEG> overriden to test first if the file exists <END>
<BEG> set the possibility for the user to hideshow a column by right-clicking on a column header false by default <END>
<BEG> sets the custom comparator to be used for a particular column columns that <END>
<BEG> set the feature set <END>
<BEG> returns if the logging is enabled <END>
<BEG> print padding followed by string s <END>
<BEG> gets the path for the gate resources within the classpath <END>
<BEG> causes the specified classloader to be forgotten, making it and all the class definitions loaded by it available for garbage collection <END>
<BEG> clean up resources should be called when this processor is no longer <END>
<BEG> add an extra cache directory to be used when resolving maven plugins <END>
<BEG> returns the value associated to the next key in the map if an exact match doesn't exist if there is an exact match, the method will return the <END>
<BEG> checks wheter gate is unicode enabled <END>
<BEG> returns true if the specified version is the same or newer than the version of gate being used <END>
<BEG> wrap the supplied writer in a wrapper that prefers xml 1 1 over 1 0 <END>
<BEG> overrides the default behaviour to explicitly select xml version 1 1 if no version is supplied by the caller <END>
<BEG> return the cleaned document text as a string corresponding to the annotation <END>
<BEG> get all the annotations from the source annotation set that start and end at exactly the same offsets as the given annotation <END>
<BEG> get all the annotations from the source annotation set that start and end at exactly the same offsets as the given annotation and have the specified type <END>
<BEG> load a plugin from the specified directory <END>
<BEG> get a line <END>
<BEG> get the input text <END>
<BEG> compares this version to another graalvm version this is equivalent to using: <code> <END>
<BEG> provides access to a c pointer for the provided java string, encoded with the default charset <END>
<BEG> converts a c pointer into a java boolean <END>
<BEG> registers all classes in provided packages, and all of their subclasses, for class initialization at runtime the classes are not initialized automatically during image <END>
<BEG> makes the provided classes available for reflective instantiation by <END>
<BEG> returns true if at the time of the call code is executing in the context of image building e g in a static initializer of class that will be contained in the image <END>
<BEG> checks if a singleton is in the registry the key must be a compile time constant, so that <END>
<BEG> get the process id of the given process object <END>
<BEG> if the running image is an executable the program name that is stored in the argument vector of the running process gets replaced with the given name if the size of the argument vector <END>
<BEG> returns the deprecation reason and the recommended fix <END>
<BEG> forces the initialization of a language it is not necessary to explicitly initialize a <END>
<BEG> creates a builder for constructing a context with custom configuration <END>
<BEG> closes this engine and frees up allocated native resources if there are still open context <END>
<BEG> gets the id clients can use to acquire this instrument <END>
<BEG> looks up an additional internal service that is provided by this instrument using a java type note that the services returned by this method are implementation specific and subject <END>
<BEG> returns <code>true<code> if a the language is suitable for interactive evaluation of <END>
<BEG> returns the set of options provided by this language option values for languages can either <END>
<BEG> returns <code>true<code> if the source location is marked as a root of a function, method or closure, else <code>false<code> the collection of root events may be enabled by calling <END>
<BEG> closes and detaches this execution listener from the engine after an execution listener was <END>
<BEG> returns <code>true<code> if this exception was caused by an internal implementation error <END>
<BEG> gets the number of characters or bytes of the source <END>
<BEG> returns <code>true<code> if this source represents a character based source, else <code>false<code> a source is either a byte based or a character based source, never both <END>
<BEG> the number of characters not counting a possible terminating newline in a 1-based numbered line causes the contents of this source to be loaded if they are loaded lazily <END>
<BEG> creates a new file based source builder from a given file a file based source is either <END>
<BEG> returns the probed mime type for a given url, or <code>null<code> if no mime type could be resolved typically the mime type is identified using the file extension, connection <END>
<BEG> returns 1-based line number of the last character in this section inclusive returns <END>
<BEG> returns the index of the text position immediately following the last character in the <END>
<BEG> removes an array element at a given index returns <code>true<code> if the underlying array <END>
<BEG> returns <code>true<code> if this value represents a string <END>
<BEG> returns the context this value was created with the returned context may be <END>
<BEG> visits the document or parts of it in pre-order <END>
<BEG> called to fetch a value for a field and resolve it further in terms of the graphql query this will call <END>
<BEG> all merged fields <END>
<BEG> this returns the locale of this operation <END>
<BEG> executes the graphql query using the provided input object builder <END>
<BEG> executes the graphql query using the provided input object builder <p> <END>
<BEG> creates a new graphqlcontext builder <END>
<BEG> returns the node represented by this info <END>
<BEG> by default the parser will not capture ignored characters a static holds this default <END>
<BEG> checks the validity of the field coordinate names the validity checks vary by coordinate type standard <END>
<BEG> returns a data fetcher associated with a field within a container type <END>
<BEG> this helps you transform the current graphqlenumtype into another one by starting a builder with all the current values and allows you to transform it how you want <END>
<BEG> this helps you transform the current graphqlinputobjecttype into another one by starting a builder with all the current values and allows you to transform it how you want <END>
<BEG> returns a list of named directive that can include non repeatable and repeatable directives <END>
<BEG> this returns the list of directives that have been explicitly put on the <END>
<BEG> this helps you transform the current graphqlschema object into another one by starting a builder with all the current values and allows you to transform it how you want <END>
<BEG> this can print an in memory graphql idl document back to a logical schema definition <END>
<BEG> you will be passed the specific source object that needs to be resolve into a concrete graphql object type <END>
<BEG> `graphql-java` will stop validation after a maximum number of validation messages has been reached attackers <END>
<BEG> set global flag to ignore checksums <END>
<BEG> prints an object groovy style <END>
<BEG> reads a line of text a line is considered to be terminated by any one of a line feed 'n' , <END>
<BEG> call to enable global use of expandometaclass within the registry <END>
<BEG> checks whether a metamethod for the given name and arguments exists <END>
<BEG> gets the 'from' value as a primitive integer <END>
<BEG> invokes the method this object represents this method is not final but it should be overloaded very carefully and only by generated methods <END>
<BEG> call invokeconstructor on adaptee with logic like in metaclass unless we have an interceptor <END>
<BEG> interceptors the call to a property setter if a propertyaccessinterceptor is available <END>
<BEG> checks that each member of the given collection are of the correct type <END>
<BEG> construct a tuple of degree 3 <END>
<BEG> gets the local part for this qname <END>
<BEG> returns the fully qualified name of this qname <END>
<BEG> returns a qname holding the value of the specified string <END>
<BEG> retrieves the default timezone for a date by using the default locale <END>
<BEG> get the dst offset if any for the default locale and the given date <END>
<BEG> a helper method which will extract the n-th generic type from the n-th parameter of a method node <END>
<BEG> defines the default <code>charset<code> used in case the buffer represents an 8-bit <code>charset<code> <END>
<BEG> this is a hook for subclasses to plugin a custom strategy for mapping names to explicit methods <END>
<BEG> proxy builders are useful for changing the building context, thus enabling mix &amp; match builders <END>
<BEG> sets the builder to be used as a proxy <END>
<BEG> a hook after the factory creates the node and before attributes are set <br> <END>
<BEG> sums all the given items <END>
<BEG> creates a new node with the same name, no parent, shallow cloned attributes and if the value is a nodelist, a deep clone of those nodes <END>
<BEG> removes a child of the current node <END>
<BEG> returns the parent of the node <END>
<BEG> converts the text of this gpathresult to a bigdecimal object <END>
<BEG> returns the text value of all of the elements in the collection <END>
<BEG> detect whether a static property with the given name is within the class or a super class <END>
<BEG> copied from apache commons-lang3-3 6 <END>
<BEG> returns the weighted size of this map <END>
<BEG> moves the element to the back of the deque so that it becomes the last element <END>
<BEG> a default implementation of all visitor methods <END>
<BEG> indicates that this class has been promoted to public by groovy when in fact there was no public modifier explicitly in the source code that is, <END>
<BEG> finds a method matching the given name and parameters in this class <END>
<BEG> checks if the given method has a possibly matching static method with the given name and arguments <END>
<BEG> for internal use only this flag is used by compiler internals and should probably <END>
<BEG> used to check if a type is a float or float <END>
<BEG> it is of a bigdecimal category, if the provided type is a biginteger category or a bigdecimal <END>
<BEG> determines if the source class implements an interface or subclasses the target type <END>
<BEG> defines a new variable using an ast variable <END>
<BEG> remove amount elements from the operand stack, without using pop <END>
<BEG> dequeues any source units add through addsource and resets the compiler phase to initialization <END>
<BEG> gets the currently configured output writer <END>
<BEG> set fatal is just ignored <END>
<BEG> sets the list of tokens which are whitelisted <END>
<BEG> sets the list of classes which may accept method calls <END>
<BEG> returns the number of errors <END>
<BEG> writes error messages to the specified printwriter <END>
<BEG> sets the compilerconfiguration for this processingunit <END>
<BEG> get the called that is matchlevel stack frames before the call, ignoring mop frames <END>
<BEG> calculate the dimension of array <END>
<BEG> get value from char[] using normalized index <END>
<BEG> get value from boolean[] using normalized index <END>
<BEG> set value from float[] using normalized index <END>
<BEG> this method is a default implementation for the invoke method given in invocationhandler any call to a method with a declaring class that is <END>
<BEG> returns a string version of the delegate <END>
<BEG> sleep for so many milliseconds, even if interrupted <END>
<BEG> a helper method to return the string representation of an array of objects with brace boundaries [ and ] <END>
<BEG> pipe an inputstream into an outputstream for efficient stream copying <END>
<BEG> create an object output stream for this output stream <END>
<BEG> write the byte[] to the output stream <END>
<BEG> standard iterator for a data input stream which iterates through the stream content a byte at a time <END>
<BEG> creates a reader for this input stream <END>
<BEG> helper method to create a new reader for a stream and then passes it into the closure the reader and this stream is closed after <END>
<BEG> the touch method can be used to renew an element and move it to the from of the lru queue <END>
<BEG> get ref to table; the reference and the cells it accesses will be at least as fresh as from last use of barrierlock <END>
<BEG> check for equality of non-null references x and y <END>
<BEG> returns a collection view of the mappings contained in this map each <END>
<BEG> sets if the original byte meta class is used <END>
<BEG> sets if the original long meta class is used <END>
<BEG> sets if the original float meta class is used <END>
<BEG> gets a handle internally used to create metaclass implementations warning: experimental code, likely to change soon <END>
<BEG> helper method to define reflector classes <END>
<BEG> returns a string detailing possible solutions to a missing field or property if no good solutions can be found a empty string is returned <END>
<BEG> create an object input stream for this file using the given class loader <END>
<BEG> append the text supplied by the reader at the end of the file without writing a bom, using a specified encoding <END>
<BEG> allows a file to return a writable implementation that can output itself to a writer stream <END>
<BEG> helper method to create a buffered writer for a file if the given <END>
<BEG> traverse through each byte of this file <END>
<BEG> reads the inputstream from this url, passing a byte[] and a number of bytes to the given closure the url stream will be closed before this method returns <END>
<BEG> accepts a connection and passes the resulting socket to the closure which runs in a new thread or the calling thread, as needed <END>
<BEG> write a single character <END>
<BEG> returns the number of non-root elements in the node <END>
<BEG> returns the specified element, or token null if <END>
<BEG> primary entry point for compiling from the command line using the groovyc script <END>
<BEG> delete the java source file <END>
<BEG> mark a method as already processed <END>
<BEG> pushes a binary expression into the binary expression stack <END>
<BEG> returns the current stack of enclosing binary expressions the first <END>
<BEG> returns the switch statement which is on the top of the stack, or null if there's no such element <END>
<BEG> returns the current stack of enclosing switch statements the first <END>
<BEG> pops a class from the enclosing classes stack <END>
<BEG> returns the current stack of enclosing classes the first <END>
<BEG> returns the current stack of enclosing method calls the first <END>
<BEG> this method is called by the type checker before throwing an ambiguous method error, giving the chance to the extension to select the method properly this means that when this method is called, the nodes <END>
<BEG> stores an inferred type for an expression delegates to the type checker <END>
<BEG> builds a parametrized class node representing the map&lt;keytype,valuetype&gt; type <END>
<BEG> realizes an unsharp equal for the class <END>
<BEG> apply a transformer as filter <END>
<BEG> tests given value against specified type and changes generics of result <END>
<BEG> accumulates the elements of stream into a new set <END>
<BEG> returns the found classes <END>
<BEG> serializes any char sequence and writes it into specified buffer <END>
<BEG> serializes date and writes it into specified buffer <END>
<BEG> finds a converter that can handle the given type the first converter <END>
<BEG> indicates whether the given type should be excluded from the generated output <END>
<BEG> a closure passed to a json builder will create a root json object <p> example: <pre><code class= groovytestcase > def json = new groovy json jsonbuilder <END>
<BEG> turns on buffer chopping for index overlay <END>
<BEG> gets the item by key from the mapping <END>
<BEG> lazily adds the specified object to this gpathresult <END>
<BEG> converts the text of this gpathresult to a boolean object <END>
<BEG> does not write any output, just returns the writer <END>
<BEG> adds an object as a new child to this node <END>
<BEG> returns an iterator over the child nodes of this node <END>
<BEG> returns the current keep ignorable whitespace setting <END>
<BEG> whether ignorable whitespace e g whitespace between elements is kept default false <END>
<BEG> creates a documentbuilder and uses it to parse the xml text read from the given reader <END>
<BEG> allows empty attributes to be removed from the generated markup <END>
<BEG> returns the qname for the given localname <END>
<BEG> factory method to create a saxparser configured to validate according to a particular schema language and a file containing the schema to validate against <END>
<BEG> this method serializes the specified object into its equivalent representation as a tree of <END>
<BEG> makes the output json non-executable in javascript by prefixing the generated json with some special text this prevents attacks from third-party sites through script sourcing see <END>
<BEG> configures gson to exclude all fields from consideration for serialization or deserialization <END>
<BEG> configures gson to apply a specific naming policy to an object's field during serialization and deserialization <END>
<BEG> adds the specified number to self <END>
<BEG> convenience method to get this array as a boolean if it contains a single element <END>
<BEG> convenience method to get this element as a primitive double value <END>
<BEG> convenience method to get the specified member as a jsonarray <END>
<BEG> check if this type is assignable from the given class object <END>
<BEG> returns true if the array is empty <END>
<BEG> determines whether two possibly-null objects are equal returns: <END>
<BEG> returns a string representation of the multimap, generated by calling <END>
<BEG> returns the associated value type <END>
<BEG> returns an immutable multiset containing all the keys in this multimap, in the same order and with the same frequencies as they appear in this <END>
<BEG> returns an immutable sorted set of the keys in this map <END>
<BEG> returns the empty immutable sorted set <END>
<BEG> returns an immutable sorted set containing the given elements sorted by their natural ordering when multiple elements are equivalent according to <END>
<BEG> not supported <b>you are attempting to create a set that may contain <END>
<BEG> returns every possible list that can be formed by choosing one element from each of the given lists in order; the n-ary <a href= http:en wikipedia orgwikicartesian_product >cartesian <END>
<BEG> removes and returns the greatest element of this queue <END>
<BEG> retrieves, but does not remove, the greatest element of this queue, or <END>
<BEG> returns an ordering that compares objects according to the order in which they are given to this method only objects present in the argument <END>
<BEG> returns a synchronized thread-safe queue backed by the specified queue in order to <END>
<BEG> creates a new, empty multiset, sorted according to the specified comparator all elements <END>
<BEG> overridden for performance <END>
<BEG> escapes a single unicode code point using the replacement array and safe range values if the given character does not have an explicit replacement <END>
<BEG> add a new mapping from an index to an object to the escaping <END>
<BEG> returns the object that originated this event <em>not<em> the object that <END>
<BEG> returns a hash function implementing the md5 hash algorithm 128 hash bits by delegating to <END>
<BEG> returns a hash code, having the same bit length as each of the input hash codes, that combines the information of these hash codes in an unordered fashion that <END>
<BEG> reads the next byte of data from the underlying input stream and updates the hasher with the byte read <END>
<BEG> the base16 encoding specified by <a href= http:tools ietf orghtmlrfc4648#section-8 >rfc 4648 section 8<a>, base 16 encoding <END>
<BEG> reads some bytes from an input stream and stores them into the buffer array <END>
<BEG> reads all the lines of this source as a list of strings the returned list will be empty if <END>
<BEG> returns a buffered reader that reads from a file using the given character set <END>
<BEG> atomically creates a new directory somewhere beneath the system's <END>
<BEG> reads all bytes from a url into a byte array <END>
<BEG> build a hostandport instance from separate host and port values <END>
<BEG> returns a new inetaddress that is one less than the passed in address <END>
<BEG> returns the individual components of this domain name, normalized to all <END>
<BEG> indicates whether this domain name is composed of exactly one subdomain <END>
<BEG> indicates whether the argument is a syntactically valid domain name using lenient validation specifically, validation against <a <END>
<BEG> returns all top level classes loadable from the current class path <END>
<BEG> returns the set of interfaces and classes that this type is or is a subtype of the returned <END>
<BEG> atomically sets to the given value and returns the old value <END>
<BEG> enters this monitor if the guard is satisfied blocks indefinitely acquiring the lock, but does <END>
<BEG> waits for the guard to be satisfied waits indefinitely may be called only by a thread <END>
<BEG> returns a fluent iterable containing no elements <END>
<BEG> determines whether a given bloom filter is compatible with this bloom filter for two bloom <END>
<BEG> returns a hash function implementing the message authentication code mac algorithm, using the sha-256 256 hash bits hash function and the given secret key <END>
<BEG> the base32 encoding specified by <a href= http:tools ietf orghtmlrfc4648#section-6 >rfc <END>
<BEG> copies all bytes from the input stream to the output stream does not close or flush either <END>
<BEG> gets a byte array representation of this instance <END>
<BEG> specifies the computation of a median i e the 1st 2-quantile <END>
<BEG> specifies the computation of percentiles i e 100-quantiles <END>
<BEG> combines multiple iterables into a single iterable the returned iterable has an iterator that <END>
<BEG> determines whether a given bloom filter is compatible with this bloom filter for two bloom <END>
<BEG> combines this bloom filter with another bloom filter by performing a bitwise or of the underlying data the mutations happen to <b>this<b> instance callers must ensure the bloom <END>
<BEG> returns a new instance with the same type and subtype as this instance, but without any parameters <END>
<BEG> returns a new immutable array containing the values in the specified range <END>
<BEG> provide a human-readable explanation of why this future has not yet completed <END>
<BEG> returns a collection view of all values associated with a key if no mappings in the multimap <END>
<BEG> divides an iterable into unmodifiable sublists of the given size, padding the final iterable <END>
<BEG> combines three iterators into a single iterator the returned iterator iterates across the <END>
<BEG> divides an iterator into unmodifiable sublists of the given size the final list may be <END>
<BEG> returns a collection of all values in the multimap changes to the returned collection will <END>
<BEG> returns an immutable multiset entry with the specified element and count the entry will be <END>
<BEG> reads all bytes from an input stream into a byte array does not close the stream <END>
<BEG> both the declaration of our class<e> parameter and its usage in a call to iterables toarray <END>
<BEG> returns a copy of this configuration exception with the specified partial value <END>
<BEG> get the source file name as read from the bytecode <END>
<BEG> returns a matcher which matches elements methods, classes, etc with a given annotation <END>
<BEG> returns a matcher which matches methods with matching return types <END>
<BEG> returns a binding builder used to add a new entry in the map each key must be distinct and <END>
<BEG> returns the dependencies from the given injection points <END>
<BEG> returns all the annotations on a field if kotlin-support is enabled, the annotations will <END>
<BEG> returns the instance that injection is being requested on this may be null for injection <END>
<BEG> returns the type matcher which chooses which types the listener should be notified of <END>
<BEG> returns a module that will configure the injector to require an exactly matching binding annotation <END>
<BEG> get the set of tables <END>
<BEG> get the query string <END>
<BEG> set the referenced table <END>
<BEG> set the qualified method name after removing whitespace <END>
<BEG> parse a sql code snippet that represents a table name <END>
<BEG> get the sql snippet of the value list <END>
<BEG> system property <code>h2 scriptdirectory<code> default: empty <END>
<BEG> set the action to apply restrict, cascade, on an update <END>
<BEG> set the index to use for this unique constraint <END>
<BEG> switch to server mode, and set the server name and database key <END>
<BEG> find the java method that matches the arguments <END>
<BEG> fully roll back the current transaction <END>
<BEG> remove a server from the list of cluster nodes and disables the cluster mode <END>
<BEG> write the operation to the trace system if debug trace is enabled <END>
<BEG> get the setting for the given key <END>
<BEG> is the value of a parameter set <END>
<BEG> get the column name or alias name of this expression <END>
<BEG> create a new visitor object to collect dependencies <END>
<BEG> get the last data modification <END>
<BEG> get the table <END>
<BEG> add an index <END>
<BEG> create a scan pseudo-index <END>
<BEG> get the estimated memory size <END>
<BEG> [not supported] returns the input stream, starting from an offset <END>
<BEG> returns the value of the specified column as a byte <END>
<BEG> returns the value of the specified column as a java sql date <END>
<BEG> returns the value of the specified column as a java sql time <END>
<BEG> [not supported] returns the value of the specified column as a row id <END>
<BEG> [not supported] returns the value of the specified column as a sqlxml object <END>
<BEG> sets the value of a parameter as a character stream <END>
<BEG> sets the value of a parameter <END>
<BEG> [not supported] returns an output stream <END>
<BEG> [not supported] sets a substring <END>
<BEG> checks if all procedures callable <END>
<BEG> returns whether convert is supported for one datatype to another <END>
<BEG> returns whether table correlation names table alias are restricted to be different than table names <END>
<BEG> checks whether a group by clause can use columns that are not in the select clause, provided that it specifies all the columns in the select clause <END>
<BEG> returns whether outer joins are supported <END>
<BEG> returns whether the catalog is at the beginning <END>
<BEG> returns whether the schema name in procedure calls is supported <END>
<BEG> returns whether positioned updates are supported <END>
<BEG> returns whether open statements across commit are supported <END>
<BEG> returns whether the maximum row size includes blobs <END>
<BEG> returns the maximum length for column names <END>
<BEG> returns the maximum length for a procedure name <END>
<BEG> returns the class name, the message, and in the server mode, the stack trace of the server <END>
<BEG> set the current log writer for this object <END>
<BEG> get the current user name <END>
<BEG> set the current user name <END>
<BEG> roll back a transaction <END>
<BEG> start or continue to work on a transaction <END>
<BEG> set the sql statement of the given exception <END>
<BEG> gets a sql exception meaning this value is invalid <END>
<BEG> set the trace level of this component this setting overrides the parent <END>
<BEG> check if the trace level is equal or higher than debug <END>
<BEG> write a message with trace level info to the trace system <END>
<BEG> get the next trace object id for this object type <END>
<BEG> format a byte array to the java source code that represents this object <END>
<BEG> log an exception and convert it to a sql exception if required <END>
<BEG> set the maximum memory this cache should use this will not <END>
<BEG> get the set of keys for resident entries <END>
<BEG> write a variable size long <END>
<BEG> get the page type from the position <END>
<BEG> get the last key, or null if the map is empty <END>
<BEG> get the smallest key that is larger or equal to this key <END>
<BEG> remove all entries, and close the map <END>
<BEG> get the map name <END>
<BEG> this method is called before writing to the map the default <END>
<BEG> open a store in exclusive mode for a file-based store, the parent <END>
<BEG> set the amount of memory a page should contain at most, in bytes larger <END>
<BEG> get the store version the store version is usually used to upgrade the <END>
<BEG> create a new map with the given dimensions and value type <END>
<BEG> get the maximum value for the given dimension <END>
<BEG> random access is required containsdistinct <END>
<BEG> check if this result set is updatable <END>
<BEG> insert a new row into the database <END>
<BEG> add an object to this schema <END>
<BEG> try to find an index with this name this method returns null if <END>
<BEG> try to find a trigger with this name this method returns null if <END>
<BEG> get the index with the given name <END>
<BEG> get the sequence with the given name <END>
<BEG> get all objects of the given type <END>
<BEG> set the trigger class name and load the class if possible <END>
<BEG> close the trigger <END>
<BEG> calculate the hash-based message authentication code <END>
<BEG> calculate the hash code for the given data <END>
<BEG> stop the application and the server <END>
<BEG> try to lock the database, and then unlock it if this worked, the <END>
<BEG> normalize the directory name <END>
<BEG> open an encrypted file store with the given settings <END>
<BEG> close the file ignoring exceptions and delete the file <END>
<BEG> call fsync depending on the operating system and hardware, this may or <END>
<BEG> unregister a file provider <END>
<BEG> get the last modified date of a file <END>
<BEG> create an output stream to write into the file <END>
<BEG> fully read from the file this will read all remaining bytes, <END>
<BEG> initialize the recover test <END>
<BEG> remove a sequence from the table sequences are used as identity columns <END>
<BEG> add a view to this table <END>
<BEG> check if row based triggers or constraints are defined <END>
<BEG> fire all triggers that need to be called after a row is updated <END>
<BEG> tests if the table can be written usually, this depends on the <END>
<BEG> set the state of this and all nested tables to the null row <END>
<BEG> get the system columns that this table understands this is used for <END>
<BEG> check if this view is currently invalid <END>
<BEG> backs up database files <END>
<BEG> get the current field separator for writing <END>
<BEG> override the end-of-row marker for writing the default is null after <END>
<BEG> get the current field delimiter <END>
<BEG> get the current line separator <END>
<BEG> whether the column header is written <END>
<BEG> get the maximum value for the given dimension count for two dimensions, <END>
<BEG> convert the two-dimensional value into a one-dimensional scalar value <END>
<BEG> create a new tcp server, but does not start it yet example: <END>
<BEG> create a new pg server, but does not start it yet <END>
<BEG> tries to start the server <END>
<BEG> set bit at the given index to 'true' <END>
<BEG> convert the date to the specified time zone <END>
<BEG> convert the time using the specified calendar <END>
<BEG> get the specified field of a date, however with years normalized to positive or negative, and month starting with 1 <END>
<BEG> formats a date using a format string <END>
<BEG> get the date value from a given date <END>
<BEG> round the value up to the next block size the block size must be a power <END>
<BEG> get a cryptographically secure pseudo random int value between 0 including and the given value excluding <END>
<BEG> create a new hashset <END>
<BEG> go to the next lineup, and if available, fill the target array <END>
<BEG> if currently inside a remark, this method tells if it is a block comment true or single line comment false <END>
<BEG> append a text <END>
<BEG> append a number <END>
<BEG> print to the output stream that no database files have been found <END>
<BEG> write a long value to the byte array at the given position the most <END>
<BEG> compare the contents of two byte arrays if the content or length of the <END>
<BEG> returns true if the class is present in the current class loader <END>
<BEG> get the system property if the system property is not set, or if a <END>
<BEG> create a new value hash map <END>
<BEG> get the collation name <END>
<BEG> reset the directory counter as if the process was stopped this method is <END>
<BEG> convert a lob to another data type the data is fully read in memory <END>
<BEG> get the data if this a small lob value <END>
<BEG> get or create a time value <END>
<BEG> a shortcut to the frequently used <code>hasiteminarray equalto x <code> <END>
<BEG> <p> creates an order agnostic matcher for arrays that matches when each item in the examined array satisfies one matcher anywhere in the specified collection of matchers <END>
<BEG> returns the string that starts the description <END>
<BEG> creates a matcher that matches when the examined object is found within the specified array <END>
<BEG> creates a matcher that always matches, regardless of the examined object, but describes <END>
<BEG> a shortcut to the frequently used <code>not nullvalue <code> <END>
<BEG> a shortcut to the frequently used <code>not nullvalue x class accepts a <END>
<BEG> validate a string with a regex <END>
<BEG> public static boolean containsdigits string string { for int i=0; i<string length ; i++ { <END>
<BEG> gets the value of the usage property <END>
<BEG> sets the value of the file property <END>
<BEG> gets the value of the cascade property <END>
<BEG> sets the value of the idtype property <END>
<BEG> sets the value of the index property <END>
<BEG> gets the value of the optimisticlock property <END>
<BEG> gets the value of the cache property <END>
<BEG> sets the value of the element property <END>
<BEG> sets the value of the loader property <END>
<BEG> sets the value of the check property <END>
<BEG> gets the value of the embedxml property <END>
<BEG> gets the value of the schema property <END>
<BEG> sets the value of the schema property <END>
<BEG> sets the value of the catalog property <END>
<BEG> gets the value of the subselectattribute property <END>
<BEG> gets the value of the columnattribute property <END>
<BEG> sets the value of the length property <END>
<BEG> sets the value of the unique property <END>
<BEG> gets the value of the generator property <END>
<BEG> gets the value of the proxy property <END>
<BEG> sets the value of the proxy property <END>
<BEG> gets the value of the dynamicupdate property <END>
<BEG> gets the value of the formula property <END>
<BEG> sets the value of the formula property <END>
<BEG> gets the value of the condition property <END>
<BEG> gets the value of the parametername property <END>
<BEG> gets the value of the filterdef property <END>
<BEG> sets the value of the autoimport property <END>
<BEG> gets the value of the defaultaccess property <END>
<BEG> gets the value of the defaultlazy property <END>
<BEG> gets the value of the queryref property <END>
<BEG> gets the value of the mapkeymanytomany property <END>
<BEG> gets the value of the cacheregion property <END>
<BEG> gets the value of the cacheable property <END>
<BEG> sets the value of the fetchsize property <END>
<BEG> gets the value of the flushmode property <END>
<BEG> sets the value of the timestamp property <END>
<BEG> sets the value of the multitenancy property <END>
<BEG> gets the value of the entitymode property <END>
<BEG> sets the value of the entitymode property <END>
<BEG> get a builder for metadata where non-default options can be specified <END>
<BEG> read metadata from the annotations attached to the given class the important <END>
<BEG> can this source, by nature, define just a single columnformula? <END>
<BEG> performs the enhancement <END>
<BEG> access to the index of the attribute in terms of its position in the entity persister <END>
<BEG> get the wrapped java class reference <END>
<BEG> get the mappings <END>
<BEG> add a cacheable mapping file <END>
<BEG> specify a user-supplied delegate to be used to handle scenarios where an entity could not be located by specified id this is mainly intended for ejb3 implementations to be able to <END>
<BEG> return the column name or the unqualified property name <END>
<BEG> return <tt>system<tt> properties, extended by any properties specified in <tt>hibernate properties<tt> <END>
<BEG> called by any writer method of the collection interface <END>
<BEG> get the session currently associated with this collection <END>
<BEG> count how many times the given object occurs in the elements <END>
<BEG> check to see if there is already a session associated with the current thread for the given session factory <END>
<BEG> binds the given session to the current context for its session factory <END>
<BEG> static builder to create a detachedcriteria for the given entity <END>
<BEG> static builder to create a detachedcriteria for the given entity, by its class <END>
<BEG> adds an ordering <END>
<BEG> creates a nested detachedcriteria representing the association path, specifying the type of join to use and an additional join restriction <END>
<BEG> creates a property count projection <END>
<BEG> creates a sub-query less-than expression for this property <END>
<BEG> apply an equal constraint to the identifier property <END>
<BEG> return the conjunction of two expressions <END>
<BEG> return the conjunction of multiple expressions <END>
<BEG> create a restriction expressed in sql with one jdbc parameter any occurrences of <tt>{alias}<tt> will be <END>
<BEG> group expressions together in a single conjunction a and b and c <END>
<BEG> make case insensitive no effect for non-string values <END>
<BEG> creates a criterion which checks that the value of a given property is less-than-or-equal-to all the values in the subquery result <END>
<BEG> creates a criterion which checks that the value of a given property is less-than some of the values in the subquery result <END>
<BEG> creates a criterion which checks that the value of multiple given properties as being equal to the set of values in the subquery result the implication is that the subquery returns a single result this form is <END>
<BEG> creates a criterion which checks that the value of a given literal as being greater-than the value in the subquery result the implication is that the subquery returns a single result <END>
<BEG> the rendering code <END>
<BEG> hhh-4907, i don't know if oracle 8 supports this syntax, so i'd think it is better add this method here reopen this issue if you foundknow 8 supports it <END>
<BEG> ansi sql defines the limit clause to be in the form limit offset, limit <END>
<BEG> hibernate apis explicitly state that setfirstresult should be a zero-based offset here we allow the <END>
<BEG> sybase anywhere syntax would require a default for each column specified, but i suppose hibernate use this syntax only with tables with just 1 column <p> <END>
<BEG> get default type name for specified type <END>
<BEG> register a default non-weighted typecode mapping <END>
<BEG> are the naturals id values cached here if any for the given persister+pk combo the same as the given values? <END>
<BEG> again, as part of load synchronization process we need to also be able to clear references to these known-invalid natural-ids after flush this method exposes that capability <END>
<BEG> clear the resolution cache <END>
<BEG> are there any paths currently tracked here? <END>
<BEG> clean up any tracked references for the given entity, throwing an exception if there were any paths <END>
<BEG> used by settingsfactory in conjunction with stats being enabled to determine whether to apply this listener <END>
<BEG> exposed for testing purposes only <END>
<BEG> extract the type information from the jdbc driver's databasemetadata <END>
<BEG> adds an entity identity insert action <END>
<BEG> adds a collection re create action <END>
<BEG> after evicting or deleting or loading an entity, we don't need to batch fetch it anymore, remove it from the queue if necessary <END>
<BEG> factory method for obtaining named cascade styles <END>
<BEG> coordinates the efforts to load a given entity first, an attempt is <END>
<BEG> returns true if this mergecontext contains a cross-reference for the specified merge entity to a managed entity result <END>
<BEG> returns true if this mergecontext contains a cross-reference from the specified managed entity to a merge entity <END>
<BEG> copies all of the mappings from the specified map to this mergecontext <END>
<BEG> types of the return values of an <tt>iterate <tt> style query <END>
<BEG> retrieve this insert statement's into-clause <END>
<BEG> implementation of orderbyclause <END>
<BEG> append the given ast node as a child of parent <END>
<BEG> turns a path into an ast <END>
<BEG> given a potentially unqualified class name, locate its persister <END>
<BEG> locate a registered sql function by name <END>
<BEG> find the function return type given the function name and the first argument expression node <END>
<BEG> type mapping for the identifier <END>
<BEG> unique in a millisecond for this jvm instance unless there are > short max_value instances created in a <END>
<BEG> check that the requested type is compatible with the result type, and return the column value this version makes sure the the classes <END>
<BEG> get the value of the named parameter for the current filter <END>
<BEG> extract a property value by name from the given properties object <END>
<BEG> constructs a map from a property value <END>
<BEG> for the given sqlexception, locates the vendor-specific error code <END>
<BEG> determine if the given class implements the given interface <END>
<BEG> retrieve the default no arg constructor from the given class <END>
<BEG> returns the thread context classloader tccl <END>
<BEG> determine if the given name is quoted it is considered quoted if either: <END>
<BEG> returns the suffixed result-set column-aliases for the column defining the collection's identifier if any <END>
<BEG> used to detect circularities in the joined graph, note that this method is side-effecty <END>
<BEG> get the index of the entity that owns the collection, or -1 if there is no owner in the query results ie in the case of a <END>
<BEG> are rows transformed immediately after being read from the resultset? <END>
<BEG> retrieve the overall lock mode in effect for this set of options <END>
<BEG> retrieve the current timeout setting <END>
<BEG> set the timeout setting <END>
<BEG> retrieve the current lock scope setting <END>
<BEG> make a copy <END>
<BEG> retrieve the name of the fetch profile <END>
<BEG> returns the referenced columns if the foreignkey does not refer to the primary key <END>
<BEG> sets the identifier <END>
<BEG> check to see if a property with the given name exists in this persistentclass <END>
<BEG> build an iterator over the properties defined on this class <b>which <END>
<BEG> generate the sql delete that deletes a particular row <END>
<BEG> given a property path, return the corresponding column name s <END>
<BEG> used internally to create static loaders these are the default set of loaders used to handle get load <END>
<BEG> generate an info message string relating to a given property value for an entity <END>
<BEG> get the session factory uuid <END>
<BEG> protected access to define the alias <END>
<BEG> apply the lock timeout in seconds! hint <END>
<BEG> apply the follow-on-locking hint <END>
<BEG> this method is inherently racy and expensive only use on non-hot paths, and <END>
<BEG> comma-separated list of resource names to use for database init commands on create <END>
<BEG> should we format the sql strings? <END>
<BEG> should we stop once an error occurs? <END>
<BEG> returns a list of all exceptions which occurred during the export <END>
<BEG> enable quiet mode the schema will not be written to standard out <END>
<BEG> 2 aliastobeanconstructorresulttransformer are considered equal if they have the same defined constructor <END>
<BEG> construct an instance of the given tuplizer class <END>
<BEG> extract a portion of the bytes from the given stream, wrapping them in a new stream <END>
<BEG> explicitly, an entity type is an entity type ; <END>
<BEG> access to the hibernate orm version <END>
<BEG> this method is called to change the state of the reification of this descriptor <END>
<BEG> removes the given qualifier from the list of qualifiers <END>
<BEG> returns an indexed filter that will return all descriptors that have contract as an advertised contract <END>
<BEG> this method creates a filter that will match one and only one descriptor the passed <END>
<BEG> simple implementation of the finddescriptorfiles which does a simple getresources on the classloader in order to find the hk2 descriptor files <END>
<BEG> adds a value to the list of values associated with this key <END>
<BEG> removes the given value from the given key <END>
<BEG> this method will first attempt to find a service corresponding to the type and qualifiers passed in to the method, and if one is found simply returns it if no service is found <END>
<BEG> this method will enable the default topic distribution service <END>
<BEG> dumps all descriptors in this servicelocator to stderr <END>
<BEG> returns true if this collector has errors <END>
<BEG> just creates the thing, doesn't try to do anything else <END>
<BEG> returns the default name if one can be found will only work on <END>
<BEG> returns true if the system can create proxies, false otherwise <END>
<BEG> sets the current thread's copy of this thread-local variable to the specified value most subclasses will have no need to <END>
<BEG> gets the incoming object bound to the thread id <END>
<BEG> gets the singleton instance of the logger <END>
<BEG> makes a nice pretty string of the method, with the method name and all parameters <END>
<BEG> returns a pretty string representing a field <END>
<BEG> resolves the generic type of a type and declaring class given the actual class being instantiated <END>
<BEG> gets the first type argument if this is a parameterized type, otherwise it returns object class <END>
<BEG> returns true if the given annotation is a qualifier <END>
<BEG> casts this thing to the given type <END>
<BEG> checks if the map contains the given key <END>
<BEG> disables connection state tracking <END>
<BEG> creates zero-copy response consumer that will stream response content directly to the given file <END>
<BEG> unconditionally close a httpasyncclient shuts down the underlying <END>
<BEG> adds tags to the if-match header <END>
<BEG> sets the charset to be used when encoding <END>
<BEG> obtains the scheme name <END>
<BEG> counts the number of dots in a string <END>
<BEG> replaces the parameters <END>
<BEG> adds a new uri to the collection <END>
<BEG> shuts down the entry <END>
<BEG> obtains the maximum number of entries allowed for this pool <END>
<BEG> obtains the number of entries <END>
<BEG> hook for creating the connection pool <END>
<BEG> performs domain-match as defined by the rfc2965 <END>
<BEG> validate cookie version attribute version attribute is required <END>
<BEG> sets parameter of uri query overriding existing value if set the parameter name and value <END>
<BEG> obtains default ssl socket factory with an ssl context based on system properties as described in <a href= http:docs oracle comjavase1 5 0docsguidesecurityjssejsserefguide html > <END>
<BEG> checks whether the parameter is a valid ipv4 address <END>
<BEG> determines whether authentication should be handled automatically <END>
<BEG> determines the order of preference for supported authentication schemes when authenticating with the target host <END>
<BEG> determines whether compressed entities should be decompressed automatically <END>
<BEG> makes entity gzip compressed <END>
<BEG> there are no valid parameters for spnego authentication so this <END>
<BEG> makes this instance of httpclient proactively evict expired connections from the connection pool using a background thread <END>
<BEG> returns the timeout in milliseconds used when requesting a connection from the connection manager <END>
<BEG> creates a builder containing the default registry entries with the default public suffix matcher <END>
<BEG> the default implementation does not consume anything <END>
<BEG> tells that this entity is not repeatable <END>
<BEG> checks whether a character is a token separator <END>
<BEG> creates a copy of these parameters <END>
<BEG> sets objects from the given map <END>
<BEG> returns the index within this buffer of the first occurrence of the specified byte, starting the search at the specified <code>beginindex<code> and finishing at <code>endindex<code> <END>
<BEG> appends <code>len<code> chars to this buffer from the given source buffer starting at index <code>off<code> the capacity of the <END>
<BEG> returns the <code>char<code> value in this buffer at the specified index the index argument must be greater than or equal to <END>
<BEG> returns the length of the buffer char count <END>
<BEG> obtains the name of the versioned module or informal unit <END>
<BEG> obtains the release of the versioned module or informal unit <END>
<BEG> obtains the timestamp of the versioned module or informal unit <END>
<BEG> returns the current set of names <END>
<BEG> shuts down the pool <END>
<BEG> creates a new instance with this mime type and the given charset <END>
<BEG> skips semantically insignificant whitespace characters and moves the cursor to the closest non-whitespace character <END>
<BEG> updates an entity in a response by first consuming an existing entity, then setting the new one <END>
<BEG> returns true if the parameter is null or contains only whitespace <END>
<BEG> assets if the connection is still open <END>
<BEG> triggered when new session has been created <END>
<BEG> processes new event on the given selection key <END>
<BEG> queues the given io session to be processed asynchronously as closed <END>
<BEG> blocks for the given period of time in milliseconds awaiting the completion of the reactor shutdown if the value of <END>
<BEG> determines grace period in milliseconds the io reactors are expected to block waiting for individual worker threads to terminate cleanly <END>
<BEG> gets the httpresponsefactory for this service <END>
<BEG> gets the exceptionlogger for this service <END>
<BEG> returns the current mode: <p> <END>
<BEG> returns the total capacity of this buffer <END>
<BEG> returns <code>true<code> if <END>
<BEG> the reason for the exception <END>
<BEG> method called when an eof is encountered between tokens <END>
<BEG> method used to demote deserialized instances back to canonical ones <END>
<BEG> method that encodes given right-aligned lsb 24-bit value into 4 base64 characters, stored in given result buffer <END>
<BEG> helper method that will construct a message to use in exceptions for cases where input ends prematurely in place where padding would be expected <END>
<BEG> method called to check whether array value at current output location should be included in output <END>
<BEG> method called to check whether array element with specified index zero-based , at current output location, should be included in output <END>
<BEG> call made to verify whether leaf-level null value should be included in output or not <END>
<BEG> accessor to use to see if any formats matched well enough with the input data <END>
<BEG> helper method that can be used to get a copy of standard json escape definitions; this is useful when just wanting to slightly customize definitions caller can modify this array as it sees <END>
<BEG> factory method for getting an instance; this is either recycled per-thread instance, or a newly constructed one <END>
<BEG> main access method that will construct a string that contains all the contents, release all internal buffers we may have, and return result string <END>
<BEG> returns length of the string as characters <END>
<BEG> method that can be used to quickly check whether given schema is something that parsers andor generators constructed by this factory could use note that this means possible use, at the level <END>
<BEG> method for getting currently configured input decorator if any; there is no default decorator <END>
<BEG> accessor for getting a textual description of source reference <END>
<BEG> method that can be called to determine if this parser instance uses non-blocking asynchronous input access for decoding or not <END>
<BEG> specialized accessor that can be used to verify that the current token indicates start array usually meaning that current token <END>
<BEG> method to deserialize json content into a non-container type it can be an array type, however : typically a bean, array <END>
<BEG> helper method to call for operations that are not supported by parser implementation <END>
<BEG> accessor for getting a sub-pointer , instance where current segment has been removed and pointer includes rest of segments <END>
<BEG> accessor that sub-classes can override to append additional information right after the main message, but before source location information <END>
<BEG> diagnostics method that will verify that internal data structures are consistent; not meant as user-facing method but only for test suites and possible troubleshooting <END>
<BEG> whether this type is a referential type, meaning that values are basically pointers to real values or null and not regular values themselves typical examples include things like <END>
<BEG> the only reason we define this method and require implementation of <code>comparable<code> is to prevent constructing a reference without type information <END>
<BEG> public api, token state overrides <END>
<BEG> public api, access to token information, text <END>
<BEG> orphan utility methods <END>
<BEG> method called to ensure that field name, if present, has been written <END>
<BEG> method for recycling or allocation byte buffer of read io type <END>
<BEG> accessor for information about the original input source content is being <END>
<BEG> method that return the <b>starting<b> location of the current most recently returned token; that is, the position of the first input unit character or byte from input that starts the current token <END>
<BEG> public api, access to token numeric values <END>
<BEG> if both are numbers, delegate to the helper method <END>
<BEG> return a new pointer with another pointer appended <END>
<BEG> traverse a node and return the result <p>note that this method shortcuts: it stops at the first node it cannot traverse <p> <END>
<BEG> method for getting a serializer definition for content values of <END>
<BEG> method for checking whether given annotated item method, constructor has an annotation that suggests that the method is a creator aka factory method to be used for construct new instances of deserialized values <END>
<BEG> method for accessing declared type of bean being introspected, including full generic type information from declaration <END>
<BEG> per-type override access <END>
<BEG> changing global defaults <END>
<BEG> method for overriding default timezone to use for formatting <END>
<BEG> test-only method -- does not reflect possibly open-ended set that external mix-in resolver might provide <END>
<BEG> accessor for finding the property with given name, if pojo has one name used is the external name, i e name used <END>
<BEG> method called by deserializer factory, when a creator property something that is passed via constructor- or factory method argument; instead of setter or field <END>
<BEG> method that will re-create initial insertion-ordering of properties contained in this map note that if properties <END>
<BEG> overridden other methods <END>
<BEG> bulk access method for checking that all features specified by mask are enabled <END>
<BEG> implementation of resolvedtype api <END>
<BEG> introspection method that may be called to see whether deserializer supports update of an existing value aka merging or not return value should either <END>
<BEG> method that can be called to either create a new jsonmappingexception if underlying exception is not a jsonmappingexception , or augment given exception with given pathreference information <END>
<BEG> method for accessing description of path that lead to the problem that triggered this exception <END>
<BEG> method for accessing type of objects this serializer can handle <END>
<BEG> method for adding set of subtypes along with type name to use to be registered with <END>
<BEG> method for adding all child nodes of given array, appending to child nodes this array contains <END>
<BEG> method for creating an array node, inserting it at the specified point in the array, and returning the <b>newly created array<b> note: not 'this' array <END>
<BEG> internal methods overridable <END>
<BEG> <p> note: caller is not to modify returned array in any way, since it is not a copy but reference to the underlying byte array <END>
<BEG> alternate factory method that will handle wrapper value, which may be null <END>
<BEG> factory method for constructing a json array node with an initial capacity <END>
<BEG> factory method for constructing a wrapper for pojo plain old java object objects; these will get serialized using data binding, usually as json objects, but in some cases as json strings or other node types <END>
<BEG> method for setting value of a field to specified string value <END>
<BEG> general type coercions <END>
<BEG> method that can be used to access the pojo this node wraps <END>
<BEG> method for setting auto-detection visibility definition defaults, which are in effect unless overridden by annotations like <code>jsonautodetect<code> or per-type visibility overrides <END>
<BEG> method for checking whether given serialization-specific feature is enabled <END>
<BEG> method that can be called to check whether mapper thinks it could serialize an instance of given class <END>
<BEG> method that will construct a new instance that will use the default pretty printer for serialization <END>
<BEG> method for setting specific internal setting to given value <END>
<BEG> method that will drop all serializers currently cached by this provider <END>
<BEG> factory method to construct filter that filters out all properties <b>except<b> ones includes in set <END>
<BEG> fluent factory method that will construct and return a new configuration object instance with specified features enabled <END>
<BEG> method that can be used to specify serializer that will be used to write json values matching java null values instead of default one which simply writes json null <END>
<BEG> method for accessing configuration for the serialization processing <END>
<BEG> convenience method for accessing provider to find serialization filters used, equivalent to calling: <pre> getconfig getfilterprovider ; <END>
<BEG> method called to get the serializer to use for serializing null values for specified property <END>
<BEG> method that can be used to construct raw map type; meaning that its parameterization is unknown <END>
<BEG> helper method that checks if given class is a concrete one; that is, not an interface or abstract class <END>
<BEG> returns either `text` or [null] <END>
<BEG> method called to start buffering process will ensure that the buffer <END>
<BEG> type-safe alternative to <END>
<BEG> basic property information, name, type <END>
<BEG> 20-jan-2014, tatu: for now we will just construct it directly, but in future should allow overriding to support non-standard extensions to be used by extensions like afterburner <END>
<BEG> method for checking whether an annotation indicates that all unknown properties should be ignored <END>
<BEG> method that will add property name as one of the properties that will be included <END>
<BEG> accessor for checking if we have a special case in which value to map <END>
<BEG> method for getting a serializer definition on specified method or field type of definition is either instance of type <END>
<BEG> method for accessing annotated type definition that a methodfield can have, to be used as the type for serialization instead of the runtime type <END>
<BEG> 29-jul-2009, tatu: it's now possible to disable use of annotations; can be done using no-op introspector <END>
<BEG> method that will construct an exception suitable for throwing when some string values are acceptable, but the one encountered is not <END>
<BEG> helper method for adding any mix-in annotations specified class might have <END>
<BEG> method used to find the property member getter, setter, field that has the highest precedence in current context getter method when serializing, if available, and so forth , if any <END>
<BEG> first: if we have no path info, let's just use parent's definition as is <END>
<BEG> convenience method that is equivalent to calling <pre> enableobjecttyping defaulttyping object_and_non_concrete ; <END>
<BEG> <p> note: return type is co-variant, as basic objectcodec abstraction can not refer to concrete node types as it's part of core package, whereas impls are part of mapper package <END>
<BEG> method that defines what to do with container elements; default implementation simply writes them out <END>
<BEG> accessor for currently assigned key serializer note that <END>
<BEG> method that will unwrap root causes of given throwable, and throw <END>
<BEG> overridable helper method used to figure out which of supported formats is the likeliest match <END>
<BEG> <p> note: visibility raised to `protected` in 2 9 3 to allow custom subtypes <END>
<BEG> method for reading as many bytes from the underlying stream as possible that fit in the buffer , to the beginning of the buffer <END>
<BEG> configuration method that may be used to change configuration setting <code>_cfghandleabsentasnull<code>: enabling means that `optional empty ` values <END>
<BEG> determines whether the specified object is equal to this <code>expression<code> <END>
<BEG> attempts to resolve the given <code>property<code> object on the given <code>base<code> object by querying all component resolvers <END>
<BEG> registers an evaluation listener to the elcontext <END>
<BEG> retrieves the lambda argument associated with a formal parameter if the lambda expression is nested within other <END>
<BEG> register a beannameresolver construct a beannameelresolver with the beannameresolver and add it to the list of <END>
<BEG> add an user defined elresolver to the list of elresolvers can be called multiple times the new elresolver is placed <END>
<BEG> define a bean in the local bean repository <END>
<BEG> evaluates an jakarta expression language expression <END>
<BEG> invokes a public static method or the constructor for a class <END>
<BEG> adds a test json patch operation <END>
<BEG> property used to specify property order strategy <END>
<BEG> get entity media type <END>
<BEG> add a value to the first position in the current list of values for the supplied key <END>
<BEG> corresponds to the max-age cache control directive <END>
<BEG> corresponds to the value of the private cache control directive <END>
<BEG> corresponds to the no-store cache control directive <END>
<BEG> get the value of the cookie <END>
<BEG> get the version of the cookie <END>
<BEG> convert the cookie to a string suitable for use as the value of the corresponding http header <END>
<BEG> create a new builder instance initialized from an existing uri <END>
<BEG> create a new responsebuilder for an empty response <END>
<BEG> create a new responsebuilder with a not-modified status and a strong entity tag this is a shortcut <END>
<BEG> create a new responsebuilder for a not acceptable response <END>
<BEG> <p> converts a bigdecimal value into a string <END>
<BEG> convenience method for setting the nonamespaceschemalocation <END>
<BEG> return the current event handler or the default event handler if one hasn't been set <END>
<BEG> <p>return the content model and attribute values for this element <p> <END>
<BEG> returns a short description of this jaxbexception <END>
<BEG> returns a value that corresponds with the specified parameter name, accounting for its default value since an annotation's defaults are <END>
<BEG> returns the component type of the array as an example, <code>string[]<code> <END>
<BEG> returns a boolean indicating the presence of a no-arg constructor, if supported by the underlying index store <END>
<BEG> returns the enclosing method of this class if it is a local, or anonymous class, and it is declared within the body of a method or constructor it will return null if this class is a top level, or an inner class <END>
<BEG> returns whether the local portion of a componentized dotname is separated by an inner class style delimiter '$ this should not be used to test <END>
<BEG> returns the local name of the field <END>
<BEG> returns the <code>type<code> declared on this field this may be an array, a primitive, or a generic <END>
<BEG> returns whether or not the annotation instance with the given name occurs on this field <END>
<BEG> writes the specified index to the associated output stream this may be called multiple times in order <END>
<BEG> indexes a jar file and saves the result if the modify flag is set, index is saved to meta-infjandex idx <END>
<BEG> returns the name of the given parameter <END>
<BEG> returns the owner enclosing type of this parameterized type if the owner is parameterized, or contains type annotations the latter may be a <code>classtype<code> otherwise null is <END>
<BEG> returns the type which contains the respective annotation <END>
<BEG> the identifier of this unresolved type variable as it appears in java source code <END>
<BEG> requests to load the data with the specified key asynchronously, and returns a future of the resulting value <END>
<BEG> option that determines whether to cache exceptional values the default , or not <END>
<BEG> sets the option that determines whether exceptional values are cachedis enabled <END>
<BEG> this will combine this set of statistics with another set of statistics so that they become the combined count of each <END>
<BEG> this returns a try that has always failed with an consistent exception use this when <END>
<BEG> get the diffrows describing the difference between original and revised texts using the given patch useful for displaying side-by-side diff <END>
<BEG> return the printer initialized with the specified configuration <END>
<BEG> sets the list of imports of this compilation unit the list is initially <END>
<BEG> try to get all local class declarations ending by its name top level or inner class <END>
<BEG> utility method that creates a new stringliteralexpr escapes eol characters <END>
<BEG> attempts to resolve the declaration corresponding to the accessed name if successful, a <END>
<BEG> escapes the given string from special characters and uses it as the literal value <END>
<BEG> return if the import ends with <END>
<BEG> return the name expression of the package <END>
<BEG> sets the compare <END>
<BEG> this method returns true if the then branch which should be always present is a block statement <END>
<BEG> this method returns true if the if statement has an else branch and that branch is a block statement <END>
<BEG> parses a qualified name one that can have s in it and returns it as a name <END>
<BEG> retrieve the symbolresolver to be used while parsing, if any <END>
<BEG> returns all options configured <END>
<BEG> get the type of indent to produce <END>
<BEG> does this loosely contain the other range? <p> <END>
<BEG> does this strictly contain the other range? <p> it means that this has to be larger than other and it has to start before other and end after other <END>
<BEG> does this strictly contain position <END>
<BEG> is the type parameter been defined on a constructor? <END>
<BEG> the qualified signature of the method it is composed by the qualified name of the declaring type <END>
<BEG> qualified name of the declaration <END>
<BEG> returns true if the reference type can be unboxed to the primitive type for example : integer to int <END>
<BEG> a shortcut to string format <END>
<BEG> for logging things that are nice to see scrolling by <END>
<BEG> this method is used to clear internal caches for the sake of releasing memory <END>
<BEG> certain category include two or more unambiguous categories <END>
<BEG> return the string representation of the name <END>
<BEG> given a bound of the form t &lt;: α, we say t is a proper lower bound of α <END>
<BEG> returns the parent path from the filename as string <END>
<BEG> creates a string of the given characters <END>
<BEG> copies characters from this string into the destination character array <END>
<BEG> returns the index within this string of the last occurrence of the specified character, searching backward starting at the <END>
<BEG> concatenates the specified string to the end of this string <END>
<BEG> creates a hashset based on the elements of a byte array <END>
<BEG> creates a linkedhashmap of the given list of key-value pairs <END>
<BEG> creates a linkedhashset based on the elements of a float array <END>
<BEG> creates a queue based on the elements of a float array <END>
<BEG> creates a treeset based on the elements of a char array <END>
<BEG> creates a treeset based on the elements of a float array <END>
<BEG> creates a treeset based on the elements of a long array <END>
<BEG> creates a vector of the given elements <END>
<BEG> obtains the url <END>
<BEG> clears the public, protected, and private bits <END>
<BEG> returns all the basic blocks in the method body <END>
<BEG> sets the local variable table entry at index to a type <END>
<BEG> makes a shallow copy of the stack portion of this frame the local <END>
<BEG> returns whether or not the type is special a special type is one that is either used <END>
<BEG> returns a string representation of the annotation <END>
<BEG> accepts a visitor <END>
<BEG> sets the elements of the array <END>
<BEG> returns a constant pool table <END>
<BEG> appends instructions for loading all the parameters onto the operand stack <END>
<BEG> appends multinewarray the size of every dimension must have been <END>
<BEG> a utility class for producing a bytecode sequence <END>
<BEG> returns true if this is an abstract class or an interface <END>
<BEG> returns the index of the constant pool entry representing the super class <END>
<BEG> returns the names of the interfaces implemented by the class <END>
<BEG> sets the interfaces <END>
<BEG> sets the major and minor version to java 5 <END>
<BEG> moves to the first instruction <END>
<BEG> returns <code>code_length<code> of <code>code_attribute<code> <END>
<BEG> obtains the value that the next call to <code>next <code> will return <END>
<BEG> moves to the instruction for <code>super <code> <END>
<BEG> inserts the given bytecode sequence exclusively before the instruction at the given index <code>pos<code> <END>
<BEG> returns the name of the class using this constant pool table <END>
<BEG> returns the index of <code>constant_class_info<code> structure specifying the class using this constant pool table <END>
<BEG> returns the <code>tag<code> field of the constant pool table entry at the given index <END>
<BEG> reads the <code>descriptor_index<code> field of the <code>constant_nameandtype_info<code> structure at the given index <END>
<BEG> reads the <code>descriptor_index<code> field of the <code>constant_nameandtype_info<code> structure indirectly specified by the given index <END>
<BEG> reads the <code>reference_index<code> field of the <code>constant_methodhandle_info<code> structure at the given index <END>
<BEG> reads the <code>bootstrap_method_attr_index<code> field of the <code>constant_invokedynamic_info<code> structure at the given index <END>
<BEG> returns the value of <code>method_index<code> <END>
<BEG> returns <code>exception_table_length<code>, which is the number of entries in the <code>exception_table[]<code> <END>
<BEG> copies the given exception table at the specified position in the table <END>
<BEG> for each <code>local_variable_table[i] index<code>, <END>
<BEG> returns a constant pool table used by this method <END>
<BEG> removes an exception attribute <END>
<BEG> returns the line number of the source line corresponding to the specified bytecode contained in this method <END>
<BEG> returns <code>host_class_index<code> the constant pool entry <END>
<BEG> parses the given signature string as a class signature <END>
<BEG> returns false if getname returns a valid type name <END>
<BEG> gets a long message if it is available <END>
<BEG> returns the class name to wihch the given <code>jvmclassname<code> is mapped a subclass of this class should override this method <END>
<BEG> returns the class search path <END>
<BEG> modify a method body so that an expression reading the specified field is replaced with a call to the specified <i>static<i> method <END>
<BEG> returns a sub list of the list the sub list begins with the <END>
<BEG> if the type of the expression compiled last is void, add aconst_null and change exprtype, arraydim, classname <END>
<BEG> delegates to a prochandler object if the method call is $proceed it may process $cflow <END>
<BEG> expression : conditional expr <END>
<BEG> inserts bytecode at the beginning of the body <END>
<BEG> returns a class file for this class <END>
<BEG> determines whether the class directly or indirectly extends the given class if this class extends a class a and <END>
<BEG> obtains the class object representing the superclass of the class <END>
<BEG> if this class is a member class or interface of another class, then the class enclosing this class is returned <END>
<BEG> returns an array containing <code>ctfield<code> objects representing all the non-private fields of the class <END>
<BEG> returns the field with the specified name the returned field <END>
<BEG> returns an array containing <code>ctmethod<code> objects representing all the non-private methods of the class <END>
<BEG> discards unnecessary attributes, in particular, <code>codeattribute<code>s method bodies of the class, to minimize the memory footprint <END>
<BEG> invoked from classpool#compress <END>
<BEG> returns true if this object represents a static initializer <END>
<BEG> obtains the name of this method <END>
<BEG> creates a copy of a constructor <END>
<BEG> returns the list of exceptions that the expression may throw this list <END>
<BEG> edits a constructor call overridable <END>
<BEG> edits an expression for explicit type casting overridable <END>
<BEG> returns the type handled by the catch clause <END>
<BEG> returns the called method <END>
<BEG> returns true if the modifiers include the <code>private<code> modifier <END>
<BEG> returns true if the modifiers include the <code>abstract<code> modifier <END>
<BEG> changes so that the current thread will not use the context class loader when a class is loaded <END>
<BEG> returns an index for accessing arrays in this class <END>
<BEG> test whether this factory uses the proxy cache <END>
<BEG> test whether this factory installs a writereplace method in created classes <END>
<BEG> ignored in jsr-356 <END>
<BEG> ignored, handled by binarystreammessage <END>
<BEG> the default behavior of this method is to return getintheader string name on the wrapped request object <END>
<BEG> the default behavior of this method is to return getmethod on the wrapped request object <END>
<BEG> the default behavior of this method is to return getcontextpath on the wrapped request object <END>
<BEG> the default behavior of this method is to return isrequestedsessionidfromcookie on the wrapped request object <END>
<BEG> the default behavior of this method is to call setstatus int sc on the wrapped response object <END>
<BEG> writes a <code>float<code> value to the client, followed by a carriage return-line feed crlf <END>
<BEG> writes a <code>double<code> value to the client, followed by a carriage return-line feed crlf <END>
<BEG> the default behavior of this method is to return getcontentlength on the wrapped request object <END>
<BEG> the default behavior of this method is to return getremoteaddr on the wrapped request object <END>
<BEG> the default behavior of this method is to return getremotehost on the wrapped request object <END>
<BEG> the default behavior of this method is to return getlocaladdr on the wrapped request object <END>
<BEG> checks recursively if this servletrequestwrapper wraps a <END>
<BEG> the default behavior of this method is to call setcontenttype string type on the wrapped response object <END>
<BEG> the default behavior of this method is to return getbuffersize on the wrapped response object <END>
<BEG> return the protocols, in order of preference, favorite first, that this client would like to use for its sessions <END>
<BEG> developers may implement this method when the web socket session creates some kind of error that is not modeled in the web socket protocol this may for example <END>
<BEG> return the session on which the problem occurred <END>
<BEG> set whether the writer should print out the xml declaration <END>
<BEG> creates jaxb context <END>
<BEG> gets the wrapper element name <END>
<BEG> returns true if the bean is immutable <END>
<BEG> writes the encoded bytes to the given output stream <END>
<BEG> finishes up the current packing in progress if any and resets this object <END>
<BEG> gets the prefix this is slow <END>
<BEG> creates a new instance of the specified class <END>
<BEG> notifies the context about the inner peer of the current element <END>
<BEG> when this method is called, that means we need to check the spec and corrects the behavior <END>
<BEG> returns the top of the stack <END>
<BEG> returns properly configured e g security features parser factory <END>
<BEG> evaluate this xpath against a given context <END>
<BEG> retrieve the <code>contextsupport<code> <END>
<BEG> returns the value of the requested feature always returns null <END>
<BEG> associates an object with a key <END>
<BEG> does this step match any name? i e is it ''? <END>
<BEG> gets the step as a fully defined xpath <END>
<BEG> attempts to convert the given function argument value into a locale either via casting, extracting it from a list or looking up the named locale using reflection <END>
<BEG> tries to find a locale instance by name using <a href= http:www ietf orgrfcrfc3066 txt target= _top >rfc 3066<a> <END>
<BEG> returns the number value of <code>obj<code> <END>
<BEG> returns the uri of the current prefix or if no uri can be found <END>
<BEG> <p> returns the syntactically incorrect xpath expression <END>
<BEG> returns true if there are any preceding siblings remaining; false otherwise <END>
<BEG> retrieve the position of the error <END>
<BEG> add a linked exception to this resourceexception <END>
<BEG> set a hint and a related value the hintname must be non-null <END>
<BEG> invoked when a <code>work<code> instance has been rejected <END>
<BEG> issue a log message with parameters and a throwable with a level of error <END>
<BEG> issue a log message and throwable at the given log level and a specific logger class name <END>
<BEG> read resolver; replaces deserialized instance with a canonical instance <END>
<BEG> do the actual work of publication; the record will have been filtered already the default implementation <END>
<BEG> render a part of the log record to the given formatter <END>
<BEG> create a format step which emits the stack trace of an exception with the given justification rules <END>
<BEG> create a format step which emits the ndc value of the log record <END>
<BEG> get a copy of the format steps <END>
<BEG> create a wrapper that exposes the handler's close and flush methods via the io api <END>
<BEG> get the target encoding <END>
<BEG> set the queue length limit this is the number of messages that will be saved before old messages roll off <END>
<BEG> sets the suffix to be appended to the file name during the file rotation the suffix does not play a role in <END>
<BEG> returns the protocol being used <END>
<BEG> sets the facility used when calculating the priority of the message <END>
<BEG> sets the server address the messages should be sent to <END>
<BEG> get a logger with the given name from this logging context, if a logger node exists at that location <END>
<BEG> get the system log context <END>
<BEG> clear the current mdc map <END>
<BEG> trim the thread ndc stack down to no larger than the given size used to restore the stack to the depth returned <END>
<BEG> execute a task by passing it to the delegate executor <END>
<BEG> start an idle core thread normally core threads are only begun when a task was submitted to the executor <END>
<BEG> get the exception handler to use for uncaught exceptions <END>
<BEG> set the termination task, overwriting any previous setting <END>
<BEG> get an estimate of the peak size of the queue <END>
<BEG> get an array containing an approximate snapshot of the currently running threads in this executor <END>
<BEG> get the rejecting executor this executor will reject any task submitted to it <END>
<BEG> get the name of the jboss modules jar <END>
<BEG> initialise the delegate <END>
<BEG> get the transaction manager <END>
<BEG> remove a listener <END>
<BEG> the driver should return null if it realizes it is the wrong kind of driver to connect to the given url <END>
<BEG> this will return the actual declared type of this <code>attribute<code> <END>
<BEG> this returns the hash code for this <code>attribute<code> <END>
<BEG> this returns a <code>string<code> representation of the <code>cdata<code> node, suitable for debugging if the xml <END>
<BEG> returns the object associated with this document under the given id string, or null if there is no binding or if the binding explicitly stored a null value <END>
<BEG> this will return <code>true<code> if this document has a root element, <code>false<code> otherwise <END>
<BEG> replace the child at the given index whith the supplied collection <END>
<BEG> this adds text content to this element it does not replace the <END>
<BEG> set filter to match only jdom objects that are legal element content <END>
<BEG> set visiblity of <code>entityref<code> objects <END>
<BEG> this will build a jdom element from an existing dom element <END>
<BEG> this sets a custom jdomfactory for the builder use this to build <END>
<BEG> <p> this builds a document from the supplied uri <END>
<BEG> returns the driver class assigned in the constructor, or null if none <END>
<BEG> returns whether the contained sax parser instance is reused across multiple parses the default is true <END>
<BEG> specifies whether or not the parser should elminate whitespace in element content sometimes known as ignorable whitespace when building the document only whitespace which is contained within <END>
<BEG> this will return the root cause <code>throwable<code>, or null if one does not exist <END>
<BEG> this returns the namespace uri for this <code>namespace<code> <END>
<BEG> returns a new format object that performs whitespace beautification with 2-space indents, uses the utf-8 encoding, doesn't expand empty elements, includes the declaration and encoding, and uses the default entity escape strategy <END>
<BEG> this will set whether the xml declaration <code>&lt;&#063;xml version= 1&#046;0 &#063;gt;<code> will be omitted or not it is common to omit this in uses such <END>
<BEG> returns the jdom node being processed by saxoutputter <END>
<BEG> return the registered <code>declhandler<code> <END>
<BEG> this will define whether to report dtd events to sax declhandlers and lexicalhandlers if these handlers are registered and the document to output includes a doctype declaration <END>
<BEG> this will remove the pseudo attribute with the specified name <END>
<BEG> this returns a <code>string<code> representation of the <code>processinginstruction<code>, suitable for debugging if the xml <END>
<BEG> this returns the textual content with all surrounding whitespace removed and internal whitespace normalized to a single space if <END>
<BEG> returns the custom jdomfactory used to build the transformation result <END>
<BEG> returns the source node list used by this trax source <END>
<BEG> sets the sax inputsource to be used for the source <END>
<BEG> transforms the given input nodes to a list of output nodes <END>
<BEG> transforms the given document to an output document <END>
<BEG> this is a utility function for determining whether a specified character is a name character according to production 4 of the xml 1 0 specification <END>
<BEG> returns the number value of the first item selected by applying the wrapped xpath expression to the given context <END>
<BEG> defines an xpath variable and sets its value <END>
<BEG> <p> this sets the attributes of the element the supplied collection should <END>
<BEG> set the amendment idenitifier <END>
<BEG> get the referenced resource's instance id <END>
<BEG> get name of the variant of asset management system that manages this resource <END>
<BEG> get the referenced resource's document id <END>
<BEG> set the image data in base 64 encoding <END>
<BEG> add a new media management schema <END>
<BEG> add a custom schema to the root rdf the schema has to have been created <END>
<BEG> get the xml document from this object <END>
<BEG> generic add schema method <END>
<BEG> create and add a new basic schema to this metadata typically a xmp <END>
<BEG> load a schema from an input source <END>
<BEG> get all the values in a sequence property <END>
<BEG> remove an advisory xpath expression <END>
<BEG> get the complete list of advisories <END>
<BEG> set the date that any metadata was updated <END>
<BEG> get the date the resource was last modified <END>
<BEG> get the default value for the thumbnail <END>
<BEG> get a list of all languages that a thumbnail exists for <END>
<BEG> set the default value for the description <END>
<BEG> remove a language from the list of languages <END>
<BEG> get the complete list of relationships <END>
<BEG> get the default value for the rights of this document <END>
<BEG> remove a subject from the list of subjects <END>
<BEG> get the complete list of subjects <END>
<BEG> set the default value for the title <END>
<BEG> get the default value for the title <END>
<BEG> contact info extended address company name <END>
<BEG> set the common identifier to all versions of this document it should <END>
<BEG> remove an event from the list of events <END>
<BEG> get the pdf keywords <END>
<BEG> remove a supplemental category <END>
<BEG> remove an owner from the list <END>
<BEG> set the usage terms of this resource in a specific language <END>
<BEG> return invocation builder this reactive invoker was initialized with <END>
<BEG> get reader interceptors of this request <END>
<BEG> infinite loop in chained redirects detected <END>
<BEG> connection closed by the client while receiving response body <END>
<BEG> cannot try to establish connection if the connection is in other than created state current state: {0} <END>
<BEG> http packet header is too large <END>
<BEG> connecting to proxy failed with status {0} <END>
<BEG> unexpected data remain in the buffer after the http response has been parsed <END>
<BEG> clientlifecyclelistener {0} failed to initialize properly <END>
<BEG> incorrect type of request instance {0} parameter must be a default jersey clientrequestcontext implementation <END>
<BEG> custom trust store, if set, must not be null <END>
<BEG> uri of the newly created target must not be null <END>
<BEG> set the response media type if not correctly set by the user the media type is determined by the entity type <END>
<BEG> add a fatal error to the list of messages <END>
<BEG> check whether a fatal error is present in the list of all messages <END>
<BEG> invoke given task and gather messages <END>
<BEG> sets the future to having failed with the given exception this exception <END>
<BEG> binds the provided binding and return the same instance <END>
<BEG> start building a new injection resolver binding the injection resolver is naturally <END>
<BEG> gets service's analyzer <END>
<BEG> adds service's rank <END>
<BEG> sets the descriptor for this injectee <END>
<BEG> registerbind custom provider instances registered providers will be handled <END>
<BEG> following issues have been detected: {0} <END>
<BEG> malformed percent-encoded octet at index {0} <END>
<BEG> illegal character {0} at position {1} is not allowed as a start of a name in a path template {2} <END>
<BEG> error reading entity from input stream <END>
<BEG> feature {0} registered in {2} runtime is constrained to {1} runtime and is ignored <END>
<BEG> cannot instantiate {0} class instantiation of non-static member classes is not supported <END>
<BEG> too many {0} header values: {1} <END>
<BEG> last writer interceptor in the chain called the method proceed <END>
<BEG> no characters between the separators {0} and {1} <END>
<BEG> message body reader {0} is trying to close the entity input stream not closing <END>
<BEG> could not find a suitable constructor in {0} class <END>
<BEG> get specified method routing <END>
<BEG> locates and incrementally instantiates the available providers of a given service using the given class loader <END>
<BEG> locates and incrementally instantiates the available classes of a given service file using the context class loader <END>
<BEG> a method that is executed from a unit test by maven surefire plugin within the same maven module <END>
<BEG> create new type-class pair for a non-generic class <END>
<BEG> create a view of a difference of provided sets <END>
<BEG> returns a pretty string representing the collection <END>
<BEG> returns value of a specified property if the property is not set or the real value type is not compatible with <END>
<BEG> get the list of classes that represent the type arguments of a <END>
<BEG> find the declaring class that implements or extends an interface <END>
<BEG> get a canonical array of tokens from a string entry that may contain zero or more tokens separated by characters in delimiters string <END>
<BEG> read the bytes of an input stream and convert to a string <END>
<BEG> get message date <END>
<BEG> closes the underlying content stream <END>
<BEG> create new matching entity tag out of provided header reader <END>
<BEG> set the annotations attached to the entity <END>
<BEG> get quality source factor value in [ppt] <END>
<BEG> get immutable copy of a component bag <END>
<BEG> get a new reference for to currently running request scope context this call <END>
<BEG> run the data through a chain of stages identified by the root stage <END>
<BEG> returns character at the current position <END>
<BEG> get the number of template variables <END>
<BEG> equality is calculated from the string of the regular expression generated from the templates <END>
<BEG> get the read-date parameter <END>
<BEG> returns true if all chars in string s are tokens <END>
<BEG> create a list of media type from an array of media types <END>
<BEG> set a method to be accessible <END>
<BEG> get the parameterized type arguments for a declaring class that declares a generic interface type <END>
<BEG> a resource class, {0}, does not have any resource method, sub-resource method, or sub-resource locator <END>
<BEG> error processing resource method, {0}, for resourcemethoddispatchprovider, {1} <END>
<BEG> error marshalling jaxb object of type {0} <END>
<BEG> get the domain of the cookie <END>
<BEG> get the path of the cookie <END>
<BEG> generate a hashcode by hashing all of the cookies properties <END>
<BEG> get the value of an entitytag <END>
<BEG> generate a hashcode from the type, subtype and parameters <END>
<BEG> creates a string identifier of a sub-graph <END>
<BEG> a convenience method to get the domain class i e <i>customer<i> from the generic type i e <i>customer<i>, <END>
<BEG> get a set containing default filtering scope <END>
<BEG> helper method used to check whether given media type is supported by this provider for read operations when binding input data such as post body <END>
<BEG> look for annotations that can be discovered with introspection: <ul> <li> resource <li> <li> resources <li> <li> runas <li> <li> postconstruct <li> <li> predestroy <li> <li> declareroles <li> <li> multipart <li> <li> servletsecurity<li> <ul> <END>
<BEG> check if the class is one of the basic java types permitted as env-entries <END>
<BEG> add comma separated values, but only if not already present <END>
<BEG> get multi headers <END>
<BEG> sets the value of a date field <END>
<BEG> take the combined buffer containing all content written to the outputstream <END>
<BEG> <p>sets whether it is allowed to bind multiple sockets to the same socket address same host and same port <p> <END>
<BEG> <p>receives data into the given buffer from the returned address <p> <END>
<BEG> initializes this alpnprocessor <END>
<BEG> <p> called by the web container to indicate to a filter that it is being placed into service <END>
<BEG> writes an explanatory message and a stack trace for a given <code>throwable<code> exception to the servlet log file, <END>
<BEG> returns the time the <code>httpservletrequest<code> object was last modified, in milliseconds since midnight january 1, 1970 gmt if the time is unknown, this method returns a negative number the default <END>
<BEG> <p> the default behavior of this method is to return getservletmapping on the wrapped request object <END>
<BEG> notification that the session is about to be passivated <END>
<BEG> receives notification that an attribute has been removed from the servletrequest <END>
<BEG> converts the closereason to a debug-friendly string the exact format is not defined by the specification and may <END>
<BEG> return the encoder implementation classes configured these will be used by the container to encode outgoing <END>
<BEG> <p>returns the maximum input buffer size, after which the input is overflown to disk <p> <END>
<BEG> replace the current handler with another handlerwrapper linked to the current handler <END>
<BEG> should the adjusted idle time be maintained for asynchronous requests <END>
<BEG> excludes an inetaccess entry pattern with an optional connector name, address and uri mapping <END>
<BEG> checks if specified address and request are allowed by current inetaddress rules <END>
<BEG> <p> specify the connection server authority nameport used within application api layer when identifying the server host nameport of a connected endpoint <END>
<BEG> <p>callback method invoked when the detected bytes are not tls <p> <END>
<BEG> remove all sessions for any context that expired at or before the given time <END>
<BEG> configure jdbc connection information via a jdbc driver <END>
<BEG> set the reseed probability <END>
<BEG> retrieved log x-forwarded-for ip address flag <END>
<BEG> add excluded to the http methods filtering <END>
<BEG> add included path specs for filtering <END>
<BEG> set the excluded filter list of http methods replacing any previously set <END>
<BEG> check if specified request is allowed by current ipaccess rules <END>
<BEG> <p>larger headers will allow for more andor larger cookies plus larger form content encoded in a url however, larger headers consume more memory and can make a server more vulnerable to denial of service <END>
<BEG> the decoratedobjectfactory for use by ioc containers weld spring etc <END>
<BEG> create a filterchain that calls the passed filter with the passed chain <END>
<BEG> atomically sets the values to the given updated values only if <END>
<BEG> append a string to a buffer <END>
<BEG> create a new bytebuffer using the provided byte array <END>
<BEG> convert buffer to a hex string <END>
<BEG> the size of a lazy list <END>
<BEG> generates a unique id for the given resource <END>
<BEG> add value to multi valued entry <END>
<BEG> the alias as a path <END>
<BEG> validates a specific certificate inside of the keystore being passed in <END>
<BEG> obtain the x509 certificate chain from the provided sslsession using this <END>
<BEG> <p>set the maximum thread idle time in ms <p> <END>
<BEG> returns the instance of the singleton <END>
<BEG> get the maximum number of times the entries of the pool can be acquired <END>
<BEG> find all tld files in all subdirs of the given dir <END>
<BEG> assert a boolean expression, throwing <code>illegalargumentexception<code> if the test result is <code>false<code> <END>
<BEG> assert that the given string has valid text content; that is, it must not be <code>null<code> and must contain at least one non-whitespace character <END>
<BEG> assert that a collection has elements; that is, it must not be <code>null<code> and must have at least one element <END>
<BEG> determine whether the given array is empty: i e <code>null<code> or of zero length <END>
<BEG> check whether the given array contains the given element <END>
<BEG> convert the given array which may be a primitive array to an object array if necessary of primitive wrapper objects <END>
<BEG> return as hash code for the given object; typically the value of <END>
<BEG> return a content-based string representation if <code>obj<code> is not <code>null<code>; otherwise returns an empty string <END>
<BEG> test if the given string ends with the specified suffix, ignoring upperlower case <END>
<BEG> unqualify a string qualified by a separator character for example, <END>
<BEG> copy the given enumeration into a string array <END>
<BEG> returns the jwa algorithm name constant <END>
<BEG> get the arguments used in this function call <END>
<BEG> indirect the native pointer to <code>malloc<code> space, a la <code>pointer getdouble<code> but this method performs a <END>
<BEG> indirect the native pointer to <code>malloc<code> space, a la <code>pointer setshort<code> but this method performs a bounds <END>
<BEG> indirect the native pointer to <code>malloc<code> space, a la <code>pointer setfloat<code> but this method performs a bounds <END>
<BEG> indirect the native pointer as a pointer to <code>float<code> this is <END>
<BEG> read a native array of int16 of size <code>arraysize<code> from the <END>
<BEG> read a native array of int32 of size <code>arraysize<code> from the <END>
<BEG> look up all fields in this class and superclasses <END>
<BEG> return whether the given structure's native backing data is identical to this one <END>
<BEG> create a new structure instance of the given type <END>
<BEG> unions do not need a field order, so automatically provide a value to satisfy checking in the structure superclass <END>
<BEG> make all ghosted images go away <END>
<BEG> set or replace value of extended attribute but in case of symbolic link set the extended attribute on the link itself instead linked file <END>
<BEG> gets a pointer to the mach master port <END>
<BEG> gets the io registry root <END>
<BEG> gets the i dispatch <END>
<BEG> gets the arg err <END>
<BEG> gets the class buffer <END>
<BEG> gets the impl type flags <END>
<BEG> gets the ref type info <END>
<BEG> gets the lcid <END>
<BEG> unprotect a blob of data <END>
<BEG> get local groups of the current user <END>
<BEG> convert a guid into a string <END>
<BEG> hangup a connection <END>
<BEG> retrieves the full path of a known folder identified by the folder's knownfolderid this function replaces <END>
<BEG> closes the previously opened service manager <END>
<BEG> opens a service <END>
<BEG> gets the specified channel configuration property <END>
<BEG> get the date time as a <code>java util gregoriancalendar<code>, <END>
<BEG> get this object as a datetime in the same zone <END>
<BEG> get the date time as a <code>java util date<code> <END>
<BEG> is this time interval after the specified instant <END>
<BEG> compares this object with the specified object for equality based on start and end millis plus the chronology <END>
<BEG> gets an array of the field types that this partial supports <END>
<BEG> gets an array of the fields that this partial supports <END>
<BEG> checks whether the field specified is supported by this partial <END>
<BEG> gets the index of the specified field, or -1 if the field is unsupported <END>
<BEG> get this period as an immutable <code>period<code> object <END>
<BEG> converts this duration to a period instance using the specified period type and the iso chronology <END>
<BEG> gets the period type <END>
<BEG> sets the amount of this period <END>
<BEG> get the year field for this chronology <END>
<BEG> get the year of century field for this chronology <END>
<BEG> checks if this chronology instance equals another <END>
<BEG> gets an instance of the copticchronology <END>
<BEG> gets an instance of the copticchronology in the default time zone <END>
<BEG> get the value of the specified time instant <END>
<BEG> convert the specified text and locale into a value <END>
<BEG> gets an instance of the gregorianchronology in the given time zone <END>
<BEG> gets an instance of the islamicchronology in the default time zone <END>
<BEG> gets a copy of the set of converters <END>
<BEG> gets the chronology, which is taken from the readableinstant <END>
<BEG> rounds the specified instant to midnight <END>
<BEG> returns a copy of this date plus the specified number of weeks <END>
<BEG> returns a copy of this date minus the specified number of days <END>
<BEG> converts this object to an <code>interval<code> encompassing the whole of this day <END>
<BEG> returns a copy of this date with the weekyear field updated <END>
<BEG> returns a copy of this date with the month of year field updated <END>
<BEG> get the day of month property which provides access to advanced functionality <END>
<BEG> get this object as a datetime by returning <code>this<code> <END>
<BEG> returns a copy of this zoneddatetime changing the zone offset to the earlier of the two valid offsets at a local time-line overlap <END>
<BEG> returns a copy of this datetime with the specified date, retaining the time fields <END>
<BEG> returns a copy of this datetime plus the specified number of months <END>
<BEG> returns a copy of this datetime minus the specified number of weeks <END>
<BEG> returns a copy of this datetime with the week of weekyear field updated <END>
<BEG> gets a suitable hashcode <END>
<BEG> get the year of a week based year field type <END>
<BEG> sets the current time to return a fixed millisecond time <END>
<BEG> gets the interval handling null <END>
<BEG> gets the zone handling null <END>
<BEG> creates a date-time from a julian day <END>
<BEG> gets a time zone instance for the specified offset to utc in milliseconds <END>
<BEG> gets all the available ids supported <END>
<BEG> gets the zone provider factory <END>
<BEG> gets the id of this datetime zone <END>
<BEG> get this duration as an immutable <code>duration<code> object by returning <code>this<code> <END>
<BEG> get the minutes field type <END>
<BEG> gets the value of this property from the instant as a string <END>
<BEG> gets the textual value of this property from the instant as a string in the specified locale <END>
<BEG> gets the maximum value for the field ignoring the current time <END>
<BEG> gets the maximum value for this field given the current field values <END>
<BEG> get the human-readable, text value of this field from a partial instant <END>
<BEG> computes the difference between two instants, as measured in the units of this field any fractional units are dropped from the result calling <END>
<BEG> get the maximum value for this field evaluated at the specified time <END>
<BEG> round to the highest whole unit of this field the value of this field <END>
<BEG> get the maximum value for the field <END>
<BEG> returns a lenient version of the given field if it is already lenient, <END>
<BEG> add the specified amount of offset units to the specified time instant the amount added may be negative <END>
<BEG> creates a format that outputs a short datetime format <END>
<BEG> gets the internal parser object that performs the real parsing work <END>
<BEG> returns a new formatter that will use the utc zone in preference to the zone of the printed object, or default zone on a parse <END>
<BEG> parses a datetime from the given text, returning the number of milliseconds since the epoch, 1970-01-01t00:00:00z <END>
<BEG> returns a generic iso datetime parser where the date is mandatory and the time is optional <END>
<BEG> returns a formatter for a full date as four digit year, two digit month of year, and two digit day of month yyyy-mm-dd <END>
<BEG> returns a formatter that combines a full date and time without millis, separated by a 't' yyyy-mm-dd't'hh:mm:sszz <END>
<BEG> returns a formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second yyyy-mm-dd't'hh:mm:ss sss parsing will parse up <END>
<BEG> returns a word based formatter for the jdk default locale <END>
<BEG> prints a readableperiod to a new string <END>
<BEG> constructs a periodformatter using all the appended elements <END>
<BEG> clears out all the appended elements, allowing this builder to be reused <END>
<BEG> instruct the printer to emit an integer months field, if supported <END>
<BEG> returns the durationfieldtype whose value was invalid, or null if not applicable <END>
<BEG> creates a new interval with the specified duration before the end instant <END>
<BEG> sets the start of this time interval <END>
<BEG> sets the period of this time interval, preserving the end instant and using the isochronology in the default zone for calculations <END>
<BEG> adds the specified weeks to the number of weeks in the period <END>
<BEG> gets a copy of this partial with the value of the specified field increased <END>
<BEG> create a period with a specified number of days <END>
<BEG> returns a new period minus the specified number of days taken away <END>
<BEG> gets a type that defines all standard time fields <END>
<BEG> returns a new cacheddatetimezone unless given zone is already cached <END>
<BEG> check whether cors access is allowed for the given origin <END>
<BEG> override this method if you want to provide a jolokia private mbeanserver note, that <END>
<BEG> to be called during deconstruction <END>
<BEG> whether this key is a request configuration key <END>
<BEG> get the name of the server this agent is running in <END>
<BEG> get the optional options used for detectors this should be a json string specifying all options <END>
<BEG> check whether the given path is empty, if not, then throw an exception <END>
<BEG> the old value is returned directly, hence we do not want any path conversion on this value <END>
<BEG> return a limit whose max entries are smaller or equals the given upper limit for effieciency reasons, this object's <END>
<BEG> update the history store with the value of an an read, write or execute operation also, the timestamp <END>
<BEG> get tha value fault handler, which can be passwed around <END>
<BEG> as json representation <END>
<BEG> combine a list of strings to a single path with proper escaping <END>
<BEG> specifies a set of default values for the argument of the option that this spec represents <END>
<BEG> gives the short version of the given class name somewhat naive to inner classes <END>
<BEG> produce a jsonarray of jsonobjects from a comma delimited text string using a supplied jsonarray as the source of element names <END>
<BEG> produce a comma delimited text from a jsonarray of jsonobjects using a provided list of names the list of names is not included in the <END>
<BEG> return the json text this method is used to obtain the product of the <END>
<BEG> append a key the key will be associated with the next value in an <END>
<BEG> the name of the key in a json object that indicates a cdata section historically this has <END>
<BEG> creates a criterion using equality <END>
<BEG> return the actual value by indicating true if this return was false then we'd return the value in an array which <END>
<BEG> checks if object is a map i e no array <END>
<BEG> get the length of an array or object <END>
<BEG> get the result of an object path expression as a boolean <END>
<BEG> get the result of an object path expression as a char <END>
<BEG> peeks into the json that jsonpath will parse by printing it to the console you can <END>
<BEG> peeks into the json that jsonpath will parse by printing it to the console in a prettified manner you can <END>
<BEG> instantiate a new jsonpath instance <END>
<BEG> resets static jsonpath configuration to default values <END>
<BEG> validate that a regex is correct <END>
<BEG> return the declared name for this value <END>
<BEG> return a default, frozen configuration <END>
<BEG> get the dictionary of digesters <END>
<BEG> encode a list into json text and write it to out if this list is also a <END>
<BEG> explicitely serialize object as json string <END>
<BEG> override natif tostirng <END>
<BEG> get the current object value as boolean if the current object is not a boolean return null <END>
<BEG> set current value as json array you can also skip this call arrays can be create automatically <END>
<BEG> access to last + 1 the index position <END>
<BEG> associate an writer to a interface with low priority <END>
<BEG> associate an writer to a class <END>
<BEG> asserts that the jsonarray provided does not match the expected string if it is it throws an <END>
<BEG> asserts that the json string provided does not match the expected string if it is it throws an <END>
<BEG> expected field value <END>
<BEG> loads a file to a document <END>
<BEG> get an iterator that starts and the end of the list and works towards the start <END>
<BEG> join a collection of strings by a separator <END>
<BEG> parse html into a document, using the provided parser you can provide an alternate parser, such as a simple xml <END>
<BEG> read an input stream, and parse it to a document <END>
<BEG> set a new boolean attribute, remove attribute if value is false <END>
<BEG> create a valid, empty shell of a document, suitable for adding more elements to <END>
<BEG> get the url this document was parsed from if the starting url is a redirect, <END>
<BEG> create a new element, with this document's base uri does not make the new element a child of this document <END>
<BEG> add a node to the start of this element's children <END>
<BEG> find elements whose sibling index is greater than the supplied index <END>
<BEG> set the value of a form element input, textarea, etc <END>
<BEG> set this element's inner html clears the existing html first <END>
<BEG> insert the specified html into the dom after this node i e as a following sibling <END>
<BEG> insert the specified node into the dom after this node i e as a following sibling <END>
<BEG> replace this node in the dom with the supplied node <END>
<BEG> gets if this tag is a data only tag <END>
<BEG> retrieves but does not remove the first character from the queue <END>
<BEG> add a character to the start of the queue will be the next character retrieved <END>
<BEG> drops the next character off the queue <END>
<BEG> pulls a string off the queue, up to but exclusive of the match sequence, or to the queue running out <END>
<BEG> <p> this whitelist allows a fuller range of text nodes: <code>a, b, blockquote, br, cite, code, dd, dl, dt, em, i, li, ol, p, pre, q, small, span, strike, strong, sub, sup, u, ul<code>, and appropriate attributes <END>
<BEG> remove each matched element from the dom this is similar to setting the outer html of each element to nothing <END>
<BEG> get the immediate previous element sibling of each element in this list, filtered by the query <END>
<BEG> start a depth-first traverse of the root and all of its descendants <END>
<BEG> find elements matching selector <END>
<BEG> join an array of strings by a separator <END>
<BEG> check if this comment looks like an xml declaration <END>
<BEG> clear remove all of the attributes in this node <END>
<BEG> invoking this method removesunregistersdetaches all handlers currently attached to the root logger <END>
<BEG> fails a test with no message <END>
<BEG> sets up the fixture, for example, open a network connection <END>
<BEG> truncates a string to the maximum length <END>
<BEG> runs a single test and collects its results <END>
<BEG> creates the testresult to be used for the test run <END>
<BEG> returns the tests as an enumeration <END>
<BEG> asserts that an object is null if it is not, an assertionerror is <END>
<BEG> returns the expected value <END>
<BEG> returns the formatted string of the elapsed time duplicated from <END>
<BEG> create a <code>description<code> of a single test named <code>name<code> in the class <code>clazz<code> <END>
<BEG> run all the tests contained in <code>request<code> <END>
<BEG> run all the tests contained in junit 3 8 x <code>test<code> here for backward compatibility <END>
<BEG> internal use only <END>
<BEG> create a new maxcore from a serialized file stored at storedresults <END>
<BEG> returns the number of failures in this result <END>
<BEG> returns a new fresh folder with the given name under the temporary folder <END>
<BEG> testwatcher is a base class for rules that take note of the testing action, without modifying it for example, this class will keep a log of each <END>
<BEG> create a <code>request<code> that, when processed, will run all the tests in a set of classes with the default <code>computer<code> <END>
<BEG> returns one or more throwables that led to this initialization error <END>
<BEG> returns in place of common prefix and in place of common suffix between expected and actual <END>
<BEG> returns a matcher that verifies that the outer exception has a cause for which the supplied matcher evaluates to true <END>
<BEG> verify that your code throws an exception whose message is matched by a hamcrest matcher <END>
<BEG> parses the arguments <END>
<BEG> returns, efficiently, all the non-overridden methods in this class and its superclasses that are annotated} <END>
<BEG> creates the annotationvalidator specified by the value in <END>
<BEG> wraps an existing matcher and overrides the description when it fails <END>
<BEG> matches if value is null <END>
<BEG> this is useful for fluently combining matchers where either may pass, for example: <pre> assertthat string, both containsstring a and containsstring b ; <END>
<BEG> delete all files and folders under the temporary folder <END>
<BEG> factory for creating <em>disabled<em> results <END>
<BEG> determine if the supplied object can be assigned to the supplied type for the purpose of reflective method invocations <END>
<BEG> get the wrapper type for the supplied primitive type <END>
<BEG> clears the internal state of the formatter, so it can be reused <END>
<BEG> implementation of the matcher api using the regular expressions in the phonenumberdesc proto message to match numbers <END>
<BEG> returns the raw string matched as a phone number in the searched text <END>
<BEG> sets whether the appender honors reassignments of system out <END>
<BEG> return the label of the loglevel <END>
<BEG> main - starts a an instance of the logfactor5 console and configures the console settings <END>
<BEG> starts a new thread to parse the log file and create a logrecord <END>
<BEG> <p>log a complete message to the monitor <p> <END>
<BEG> get the name of the resource set setname for a description of <END>
<BEG> get the url of the resource uses the classloader from this resource <END>
<BEG> removes any inactive nodes from the category tree <END>
<BEG> ensures that the mru list will have a maxsize <END>
<BEG> work around for jtableviewport bug <END>
<BEG> loads a parses a log file running on a server <END>
<BEG> log a message object with the <code>trace<code> level including the <END>
<BEG> log a parameterized message at fatal level <END>
<BEG> set the cc recipient addresses <END>
<BEG> get transport protocol <END>
<BEG> connect to the specified <b>remotehost<b> and <b>port<b> <END>
<BEG> the <b>app<b> option takes a string value which should be the name of the application getting logged <END>
<BEG> formats a date into a datetime string <END>
<BEG> determine if left aligned <END>
<BEG> returns the set of the key values in the properties for the event <END>
<BEG> obtains an instance of relativetimepatternconverter <END>
<BEG> the xmllayout prints and does not ignore exceptions hence the <END>
<BEG> this method should be considered internal it is used to reset the logbuilder for a new log message <END>
<BEG> returns a loggercontext <END>
<BEG> override this to use a resourcebundle control in java 6 <END>
<BEG> returns the throwable that was given as the last argument, if any <END>
<BEG> this message has exactly one parameter the object , so always returns one <END>
<BEG> returns this message type <END>
<BEG> construct an informational log event <END>
<BEG> freezes this context stack so it becomes immutable: all mutator methods will throw an exception from now on <END>
<BEG> return the log level for which the listener should receive events <END>
<BEG> returns an enum value for the given string <END>
<BEG> returns the message supplied by the specified function <END>
<BEG> gets the named property as an integer <END>
<BEG> extracts properties that start with or are equals to the specific prefix and returns them in a new properties object with the prefix removed <END>
<BEG> checks if a string is blank a blank string is one that is either <END>
<BEG> returns the errorhandler, if any <END>
<BEG> returns the name of the appender <END>
<BEG> gets the immediate flush setting <END>
<BEG> returns the names of the appenders that this asyncappender delegates to as an array of strings <END>
<BEG> some output streams synchronize writes while others do not <END>
<BEG> some output streams synchronize writes while others do not synchronizing here insures that <END>
<BEG> writes the specified section of the specified byte array to the stream <END>
<BEG> creates a builder for a randomaccessfileappender <END>
<BEG> execute sequence of actions <END>
<BEG> gets the destination <END>
<BEG> executes the script <END>
<BEG> determine if a rollover should be triggered <END>
<BEG> creates a new builder <END>
<BEG> returns the array of route elements <END>
<BEG> this method is called by the eventhandler that processes the ringbufferlogevent in a separate thread <END>
<BEG> remove a configurationlistener <END>
<BEG> returns the root logger <END>
<BEG> remove a loggerconfig <END>
<BEG> returns the custom level name <END>
<BEG> gets the singleton instance of the typeconverterregistry <END>
<BEG> returns the matching resources <END>
<BEG> converts the given value into the configured type falling back to the provided default value <END>
<BEG> cleanup the filter <END>
<BEG> returns the stacktraceelement for the caller this will be the entry that occurs right <END>
<BEG> encodes the specified source logevent to some binary representation and writes the result to the specified destination <END>
<BEG> this method is not exposed through the public api and is provided primarily for unit testing <END>
<BEG> sets the configlocation to the specified value and reconfigures this context <END>
<BEG> causes all logger to be updated against the specified configuration <END>
<BEG> looks up the value for the key using the data in the logevent <END>
<BEG> unadvertise the previously advertised entity <END>
<BEG> clears the secret fields in this object <END>
<BEG> returns the process id <END>
<BEG> returns the list of unmatched command line arguments, if any <END>
<BEG> <p> convenience method that initializes the specified annotated object from the specified command line arguments <END>
<BEG> generates type 1 uuid the time contains the number of 100ns intervals that have occurred <END>
<BEG> always returns true since it is the default <END>
<BEG> looks a value from configuration properties <END>
<BEG> implemented as nop <END>
<BEG> the <b>queuebindingname<b> option takes a string value its value will be <END>
<BEG> returns the value of the <b>queuebindingname<b> option <END>
<BEG> these methods are used by the loggercontextfilter <END>
<BEG> the default context name in case the context name is not set for the current logging event <END>
<BEG> the default mdc value in case the mdc is not set for <END>
<BEG> remove the the context identified by the <code>key<code> parameter <END>
<BEG> get the context identified by the <code>key<code> parameter <END>
<BEG> return a copy of the current thread's context map returned value may be <END>
<BEG> gets the listener queue depth <END>
<BEG> gets the server's ssl configuration <END>
<BEG> stack trace lines are sent to the syslog server separately from the main message <END>
<BEG> return the number of elapsed milliseconds since epoch in utc <END>
<BEG> returns the name of the driver class <END>
<BEG> set the <b>conversionpattern <b> option this is the string which controls <END>
<BEG> once the children elements are also parsed, now is the time to activate the evaluator options <END>
<BEG> once the children elements are also parsed, now is the time to activate the appender options <END>
<BEG> this method determines if there is a sense in attempting to append <END>
<BEG> alias for getsmtphost <END>
<BEG> the <b>port<b> property takes a positive integer representing the port where the server is waiting for connections <END>
<BEG> do not perform any character escaping, except for '%', and ' ' <END>
<BEG> given the filenamepattern string, this method determines the compression mode depending on last letters of the filenamepatternstr patterns ending <END>
<BEG> look for an attached appender named as <code>name<code> <END>
<BEG> compute the number of occurrences a resource can be found by a class loader <END>
<BEG> returns the class loader of clazz in an access privileged section <END>
<BEG> return the class loader which loaded the class passed as argument return <END>
<BEG> print the contents of the context statuses, but only if they contain errors <END>
<BEG> this implementation does not allow duplicate installations of onconsolestatuslistener <END>
<BEG> set the mail smtp localhost property to the value passed as parameter to <END>
<BEG> sets the algorithm name for the key manager factory <END>
<BEG> sets the jsse provider name for the key manager factory <END>
<BEG> sets the jsse secure transport protocols to include <END>
<BEG> sets a flag indicating whether client authentication is required <END>
<BEG> gets a flag indicating whether client authentication is desired <END>
<BEG> the <b>title <b> option takes a string value this option sets the document <END>
<BEG> returned bean descriptions are hold in a cache if the cache does not contain <END>
<BEG> by default, smtappender transmits emails asynchronously for synchronous <END>
<BEG> the declared origin of status messages by default 'this' derived classes <END>
<BEG> return an array of type e[] the returned array is intended to be iterated <END>
<BEG> returns true if input str is null or empty <END>
<BEG> returns the decompressed length of compressed data in <code>src[srcoff:]<code> <END>
<BEG> convenience method which returns <code>src[srcoff:]<code> decompressed <END>
<BEG> checks if the optionnal content size is set flg bits content_size is enabled <END>
<BEG> get the absolute path to the private key file <END>
<BEG> get the proxy username <END>
<BEG> gets the artifact filter that controls traversal of the dependency graph <END>
<BEG> gets the cause of the build failure <END>
<BEG> returns artifacts exported by maven core and core extensions artifacts are identified by their <END>
<BEG> returns the project corresponding to a declared parent <END>
<BEG> all dependencies that this project has, including transitive ones contents are lazily populated, so depending on <END>
<BEG> get the artifact id of the extension <END>
<BEG> <p>getter for the field <code>properties<code> <p> <END>
<BEG> <p>setter for the field <code>logger<code> <p> <END>
<BEG> get specifies that this profile will be activated based on existence of a file <END>
<BEG> set specifies that this profile will be activated when matching operating system attributes are detected <END>
<BEG> get the name of the file that must exist to activate the profile <END>
<BEG> set the default goal or phase in maven 2 to execute when none is specified for the project note that in case of a multi-module <END>
<BEG> set the directory where all files generated by the build are placed <END>
<BEG> get the timezone the contributor is in typically, this is a <END>
<BEG> set for system scope only note that use of this property is <END>
<BEG> get relocation information of the artifact if it has been moved to a new group id andor artifact id <END>
<BEG> get where to deploy snapshots of artifacts to if not given, <END>
<BEG> set relocation information of the artifact if it has been moved to a new group id andor artifact id <END>
<BEG> set gives the status of this artifact in the remote repository <END>
<BEG> get the one-based column number the value will be <END>
<BEG> set the name of the issue management system, e g bugzilla <END>
<BEG> get the official url for the license text <END>
<BEG> set the primary method by which this project may be distributed <END>
<BEG> set the full legal name of the license <END>
<BEG> get the project's issue management system information <END>
<BEG> set the project's continuous integration information <END>
<BEG> set the project's issue management system information <END>
<BEG> set contains information about a project's mailing lists <END>
<BEG> set the current version of the artifact produced by this project <END>
<BEG> get <b>deprecated<b> now ignored by maven <END>
<BEG> set the modules sometimes called subprojects to build as a part of this project each module listed is a relative path <END>
<BEG> set the url to the organization's home page <END>
<BEG> set the relative path of the parent <code>pom xml<code> <END>
<BEG> get whether to load maven extensions such as packaging and type handlers from this plugin for performance reasons, this <END>
<BEG> get the group id of the plugin in the repository <END>
<BEG> get for a plugin project packaging is <code>maven-plugin<code> , the minimum version of maven required to use the resulting plugin <br> <END>
<BEG> set the identifier of this build profile this is used for <END>
<BEG> get the new version of the artifact <END>
<BEG> set the group id the artifact has moved to <END>
<BEG> get if true, then the default reports are not included in the site generation <END>
<BEG> set where to store all of the generated reports the default <END>
<BEG> get the unique id for this report set, to be used during pom inheritance and profile injection for merging of report sets <END>
<BEG> get what to do when verification of an artifact checksum fails valid values are <END>
<BEG> set whether to use this repository for downloading this type of artifact note: while the type <END>
<BEG> gets the active profiles from the model <END>
<BEG> error with problems describing the cause <END>
<BEG> sets the base directory of the current project <END>
<BEG> gets the artifacts that make up the plugin's class realm, excluding artifacts shadowed by the maven core realm <END>
<BEG> set the plugin invocation prefix i e eclipse for <END>
<BEG> set information for each sub-artifact available in this artifact snapshot <END>
<BEG> sets the dependency management to apply to transitive dependencies to clarify, this management does not apply to <END>
<BEG> sets the repository to deploy to <END>
<BEG> sets the metadata that got deployed <END>
<BEG> indicates whether this dependency is optional or not optional dependencies can be ignored in some contexts <END>
<BEG> sets the metadata to install <END>
<BEG> gets the authentication data for the specified key <END>
<BEG> sets the resolution contexts in which the artifact is available <END>
<BEG> gets the artifact to query for <END>
<BEG> sets the resolution contexts in which the metadata is available <END>
<BEG> gets the artifact involved in the event if any <END>
<BEG> gets the artifact for whose descriptor to determine the error policy <END>
<BEG> gets the relocations that were processed to read the artifact descriptor the returned list denotes the hops that <END>
<BEG> sets the dependency node to resolve <END>
<BEG> gets the repository from which the artifact was eventually resolved note that successive resolutions of the same <END>
<BEG> sets the collect request used to calculate the dependency graph whose artifacts should be resolved eventually, <END>
<BEG> gets the repository from which the metadata should be resolved <END>
<BEG> records the specified exception while resolving the metadata <END>
<BEG> gets the lowest version matching the requested range <END>
<BEG> gets the version constraint that was parsed from the artifact's version string <END>
<BEG> sets the artifact whose meta- version shall be resolved <END>
<BEG> gets the exceptions that occurred while resolving the version <END>
<BEG> gets the repository from which the version was eventually resolved <END>
<BEG> gets the number of bytes that have been transferred since the last event <END>
<BEG> sets the size of the resource in bytes <END>
<BEG> gets the trace information that describes the higher level requestoperation during which this resource is transferred <END>
<BEG> sets the instances for a service <END>
<BEG> gets the item of the check <END>
<BEG> gets the artifact being transferred <END>
<BEG> sets the exception that occurred during the transfer <END>
<BEG> gets the metadata being transferred <END>
<BEG> sets the file with the data to be uploaded to upload some data residing already in memory, use <END>
<BEG> adds the specified artifact type to the registry <END>
<BEG> gets the files of resolved artifacts seen during the graph traversal <END>
<BEG> removes the specified listener from the multicast chain trying to remove a non-existing listener has no effect <END>
<BEG> adds username data to the authentication <END>
<BEG> adds password data to the authentication <END>
<BEG> adds password data to the authentication the resulting authentication object uses an encrypted copy of the <END>
<BEG> get the server id of the repository being mirrored, e g , <END>
<BEG> set the layout of the mirror repository since maven 3 <END>
<BEG> set the optional name that describes the mirror <END>
<BEG> set the lists of the remote repositories for discovering plugins <END>
<BEG> set extended configuration specific to this profile goes here <END>
<BEG> set the list of non-proxied hosts delimited by | <END>
<BEG> get extra configuration for the transport layer <END>
<BEG> get the permissions for directories when they are created <END>
<BEG> set the permissions for files when they are created <END>
<BEG> set whether maven should attempt to interact with the user for input <END>
<BEG> set configuration of build profiles for adjusting the build according to environmental parameters <END>
<BEG> <p> specific implementation that quotes all the command line <END>
<BEG> returns the names of the directories which matched at least one of the include patterns and none of the exclude patterns the names are relative to the base directory <END>
<BEG> returns the names of the directories which matched at least one of the include patterns and at least one of the exclude patterns the names are relative to the base directory this involves performing a slow scan if one has <END>
<BEG> get extension from filename <END>
<BEG> returns the number of tags set in this directory <END>
<BEG> sets a <code>string[]<code> array for the specified tag <END>
<BEG> gets or creates a restclientbuilderresolver instance only used <END>
<BEG> returns a jsonvalue instance that represents the given <code>int<code> value <END>
<BEG> creates a new jsonarray that contains the json representations of the given <code>double<code> values <END>
<BEG> indicates the beginning of a boolean literal <code>true<code> or <code>false<code> in the json input this method will be called when reading the first character of the literal <END>
<BEG> indicates the end of an object member value in the json input this method will be called after <END>
<BEG> sets the value of the member with the specified name to the json representation of the specified string if this object does not contain a member with this name, a new member is <END>
<BEG> sets the value of the member with the specified name to the specified json value if this <END>
<BEG> copies all members of the specified object into this object when the specified object contains <END>
<BEG> detects whether this value represents a boolean value <END>
<BEG> returns this json value as a <code>float<code> value, assuming that this value represents a json number if this is not the case, an exception is thrown <END>
<BEG> writes the json representation of this value to the given writer in its minimal form, without any additional whitespace <END>
<BEG> returns the column number at which the error occurred, i e the number of the character in its <END>
<BEG> byte argument less than or equal to the given value <END>
<BEG> double argument less than or equal to the given value <END>
<BEG> long argument less than or equal to the given value <END>
<BEG> int argument less than the given value <END>
<BEG> long argument less than the given value <END>
<BEG> object array argument that is equal to the given array, i e it has to <END>
<BEG> char argument that matches both given argument matchers <END>
<BEG> double argument that matches any of the given argument matchers <END>
<BEG> char argument that matches any of the given argument matchers <END>
<BEG> short argument that does not match the given argument matcher <END>
<BEG> double argument that has an absolute difference to the given value that is less than the given delta details <END>
<BEG> by default this method decamlizes matchers name to promote meaningful names for matchers <END>
<BEG> returns <tt>true<tt> if this type of attribute is unknown the default <END>
<BEG> adds a class reference to the constant pool of the class being build <END>
<BEG> returns the offset corresponding to this label this offset is computed <END>
<BEG> returns the symbolic stack frame for each instruction of the last recently analyzed method <END>
<BEG> returns <tt>true<tt> if the given instruction belongs to this list <END>
<BEG> appends an internal name, a type descriptor or a type signature to <END>
<BEG> set the <code>classloader<code> in which the class will be generated <END>
<BEG> set the array of callback types to use <END>
<BEG> sort the arrays using the quicksort algorithm <END>
<BEG> any set or null <p> <END>
<BEG> object argument that is equal to the given value <END>
<BEG> use donothing for setting void methods to do nothing <b>beware that void methods on mocks do nothing by default!<b> <END>
<BEG> allows at-least-x verification e g: <END>
<BEG> an answer that directly forwards the calls to the delegate the delegate may or may not be of the same type as the mock <END>
<BEG> the implementation of the stack trace cleaner <END>
<BEG> converts enumeration into iterable <END>
<BEG> find out whether the object is a mock <END>
<BEG> returns the actual field instance <END>
<BEG> initialize field if not initialized and return the actual instance <END>
<BEG> instance fields declared in the class of the given instance <END>
<BEG> any <code>boolean<code>, <code>boolean<code> or <code>null<code> <END>
<BEG> <code>int<code> argument that is equal to the given value <END>
<BEG> allows creating custom <code>long<code> argument matchers <END>
<BEG> returns an answer after a delay with a defined length <END>
<BEG> any <code>boolean<code> or <strong>non-null<strong> <code>boolean<code> <p> since mockito 2 1 0, only allow valued <code>boolean<code>, thus <code>null<code> is not anymore a valid value <END>
<BEG> any <code>byte<code> or <strong>non-null<strong> <code>byte<code> <END>
<BEG> enables integrating hamcrest matchers that match primitive <code>byte<code> arguments <END>
<BEG> returns an assertionerror that describes the fact that the arguments of an invocation are different <END>
<BEG> stubbings in descending order, most recent first <END>
<BEG> decides if the stubbing should be reported as unused <END>
<BEG> adds a description to be printed if verification fails <END>
<BEG> call method on object locally or remotely over web socket to generate response to return when expectation is matched <END>
<BEG> bind new ports to listen on <END>
<BEG> stop mockserver gracefully only support for netty version, not supported for war version <END>
<BEG> verify a list of requests have been sent in the order specified for example: <pre> mockserverclient verify <END>
<BEG> the delay before responding with this request as a delay object, for example new delay timeunit seconds, 3 <END>
<BEG> static builder which will allow overriding proxied request with the specified request <END>
<BEG> the body match rules on such as using one of the body subclasses as follows: <p> exact string match: - exact this is an exact string body ; <p> or <p> - new stringbody this is an exact string body <p> regular expression match: - regex username[a-z]{4} ; <p> or <p> - new regexbody username[a-z]{4} ; <p> json match: - json {username: 'foo', password: 'bar'} ; <p> or <p> - json {username: 'foo', password: 'bar'} , matchtype strict ; <END>
<BEG> returns true if a header with the specified name has been added <END>
<BEG> the cookies to match on as a varags cookie objects where the values or keys of each cookie can be either a string or a regex for more details of the supported regex syntax see http:docs oracle comjavase6docsapijavautilregexpattern html <END>
<BEG> static builder to create an template for responding or forwarding requests <END>
<BEG> check for a condition <END>
<BEG> configures the executor which is used to <i>wait<i> for the delay duration <END>
<BEG> configures on which executor the timeout is measured <END>
<BEG> it is possible for a thread to be interrupted or reschedule between the read of the producer and consumer indices, therefore protection is required to ensure size is within valid range in the <END>
<BEG> visits a method of the class this method <i>must<i> return a new <END>
<BEG> adds an invokedynamic reference to the constant pool of the class being build does nothing if the constant pool already contains a similar item <END>
<BEG> visits a ldc instruction note that new constant types may be added in <END>
<BEG> checks that this method node is compatible with the given asm api version this methods checks that this node, and all its nodes <END>
<BEG> returns the index of the super type of a class that is referenced by this type reference this method must only be used for type references <END>
<BEG> returns the index of the formal parameter whose type is referenced by this type reference this method must only be used for type references <END>
<BEG> method parameter see <END>
<BEG> try catch block type annotation see <END>
<BEG> evaluates an expression against a context object and, if necessary, coerces the resultant value to the specified type <END>
<BEG> evaluates an expression and returns the resultant value as a string <END>
<BEG> evaluate a script from a file with injected variables and return the resultant value <END>
<BEG> a simple utility method to get a static method from a class with no checked exception with throw a <END>
<BEG> set the current number of lines in the current context generally only used by the compiler <END>
<BEG> note to implementers: if named instances of the coreenvironmentbean are created then you must apply the same technique as is used in the implementation of getobjectstoreenvironmentbean method below <END>
<BEG> sets the delay to allow a cancel to be processed before interrupting it <END>
<BEG> sets the instance of checkedactionfactory <END>
<BEG> sets the 'var' directory path <END>
<BEG> returns the node identifier <END>
<BEG> returns the maximum number of removed items that may be held in the cache before being purged <END>
<BEG> sets the number of hash buskets used to store the cache work queue <END>
<BEG> returns the maximum number of attempts which may be made to create a file path in the store <END>
<BEG> returns the interval between recovery phases within a recovery scan, in seconds <END>
<BEG> returns the network port number on which the transaction status manager should bind <END>
<BEG> sets the recovery modules <END>
<BEG> sets the desired size in bytes for each log file <END>
<BEG> sets the number of files that can be reused <END>
<BEG> gets the minimal number of files before we can consider compacting <END>
<BEG> returns the prefix to be used when naming each log file <END>
<BEG> returns the suffix to be used then naming each log file <END>
<BEG> sets the log directory path <END>
<BEG> sets if store delete operations should be synchronous or not <END>
<BEG> type used as path into object store for a transactionstatusmanageritem <END>
<BEG> test equality as being part of the same global transaction <END>
<BEG> sets the jndi properties used by transactional driver code <END>
<BEG> sets if subtransactions should be allowed <END>
<BEG> returns a list of names of classes that implement xaresourceorphanfilter <END>
<BEG> returns if connections associated to xaresources that fail during prepare should be cleaned up immediately <END>
<BEG> sets the jndi bind name for the implementation of transactionmanager <END>
<BEG> returns the jndi bind name for the implementation of transactionsynchronizationregistry <END>
<BEG> sets the names of the xaresourcemap classes used for xaexception handling <END>
<BEG> sets a class to use as the marker interface for lastresource <END>
<BEG> retrieve the list of jndi names that will be queried for committed 1pc resources that were enlisted in 2pc transactions <END>
<BEG> set the list of jndi names to apply a special lastresource algorithm that allows us to store data about the transaction in the resource manager to determine the outcome of the resource after crash if you change the list of jndinames you _can't_ change the jndi name of the connections until they have been recovered <END>
<BEG> allow the default policy of whether to use a synchronization to remove the branch should be overriden <END>
<BEG> bind the underlying jta implementations to the appropriate jndi contexts <END>
<BEG> handles open tag, if its name is <code>entry<code> and has attribute <code>key<code> <END>
<BEG> go through the input string and replace any occurance of ${p} with the system getproperty p value if there is no such property p defined, <END>
<BEG> create jms connection <END>
<BEG> simply close the proxied connection if there is no active transaction or register a <END>
<BEG> delegates xaresource#rollback call to the connected jms resource <END>
<BEG> close the session no matter what the status of the transaction is <END>
<BEG> retrieve a reference to the jta transaction manager <END>
<BEG> start cdata section <END>
<BEG> end cdata section <END>
<BEG> sets the state of a feature this method is called by the component <END>
<BEG> print end element <END>
<BEG> <font color= red >experimental: may change in next release<font><br> immediately evaluates an input source and add the new content e g <END>
<BEG> returns the character associated to the given entity name, or -1 if the name is not known <END>
<BEG> returns the name associated to the given character or null if the character is not known <END>
<BEG> sets the specified 64-bit floating-point number at the specified <END>
<BEG> returns the buffer where this stream is writing data <END>
<BEG> default normal cache size - system property: io netty allocator normalcachesize - default 64 <END>
<BEG> return the number of heap arenas <END>
<BEG> return the number of direct arenas <END>
<BEG> update the crc with a sequence of identical bytes <END>
<BEG> encodes the specified cookies into a single cookie header value <END>
<BEG> returns the set of allowed origins <END>
<BEG> determines if cookies are supported for cors requests <END>
<BEG> returns the allowed set of request headers <END>
<BEG> disables cors support <END>
<BEG> specifies the allowed set of http request methods that should be returned in the cors 'access-control-request-method' response header <END>
<BEG> specifies the if headers that should be returned in the cors 'access-control-allow-headers' response header <END>
<BEG> specifies that a cors request should be rejected if it's invalid before being further processing <END>
<BEG> returns the name of this method <END>
<BEG> fetch mime type part from message's content-type header as a char sequence <END>
<BEG> return the threshold in bytes after which read data in the buffer should be discarded <END>
<BEG> add a file as a fileupload <END>
<BEG> returns raw query string of the uri <END>
<BEG> decodes a bit of a url encoded by a browser <END>
<BEG> gets the maximum length for any frame's payload <END>
<BEG> sets if the encoder should queue frames if the maximum number of concurrent streams would otherwise be exceeded <END>
<BEG> results in a go_away being sent due to violating <a href= https:tools ietf orghtmlrfc7540#section-6 5 2 >settings_max_header_list_size<a> in an unrecoverable <END>
<BEG> check if an exception is isolated to a single stream or the entire connection <END>
<BEG> generic method to set any flag <END>
<BEG> indicates whether or not a particular flag is set <END>
<BEG> this gives direct access to the underlying storage array <END>
<BEG> compares the specified string to this string and compares the specified range of characters to determine if they are the same when ignorecase is true, the case of the characters is ignored during the comparison <END>
<BEG> transforms a type variable into a type variable token with its bounds detached <END>
<BEG> instructs this implementation to use the provided assigner and decides if the assigner should apply dynamic typing <END>
<BEG> defines an assigner to be used for assigning values to the parameters of the invoked method this assigner <END>
<BEG> factory method to create a predicated validating queue <END>
<BEG> create a callable that will compress the given archive entry <END>
<BEG> configure the validator of the model parameters <END>
<BEG> creates a curve fitter <END>
<BEG> compute the distance between two vectors according to the l<sub>2<sub> norm <END>
<BEG> add a vector to the instance <END>
<BEG> compute the cross-product of two vectors <END>
<BEG> get the first sub-hyperplane crossed by a semi-infinite line <END>
<BEG> compute a state derivative by linear combination <END>
<BEG> add an annotation to the specified method if the method is not already <END>
<BEG> sets the response type <END>
<BEG> loads webclienturl instance from xml <END>
<BEG> parse current element to extract server information <END>
<BEG> move a folder <END>
<BEG> ends an asynchronous request to synchronize the specified folder hierarchy of the mailbox this service is connected to <END>
<BEG> converts id from one format to another in a single call to ews <END>
<BEG> loads the property of the specified userconfiguration <END>
<BEG> tries to retrieve the value of the specified property <END>
<BEG> begins executing this async request <END>
<BEG> binds to an existing calendar folder and loads the specified set of property calling this method results in a call to ews <END>
<BEG> binds to an existing post item and loads the specified set of property <END>
<BEG> remove the event from happening when property subscription <END>
<BEG> gets the delegate user's permission on the principal's calendar <END>
<BEG> adds a well-known folder to the collection <END>
<BEG> gets the dayoftheweek at a specific index in the collection <END>
<BEG> setup the recurrence <END>
<BEG> gets the property set of the extended property <END>
<BEG> determines whether two specified instances of indexedpropertydefinition are equal <END>
<BEG> returns documents matching <code>query<code> sorted by <code>sort<code> <END>
<BEG> adds a synthetic method as part of the compilation process <END>
<BEG> makes a fallback method for an invalidated method selection <END>
<BEG> generate the next increment in the optimistic locking value according <END>
<BEG> the public factory method for obtaining the appropriate lob creator according to given <END>
<BEG> override on subclasses to enable or suppress joining of certain association types <END>
<BEG> bind the appropriate value into the given statement at the specified position <END>
<BEG> get sub-attribute definitions for a composite collection element <END>
<BEG> method for checking if given member indicates that it is part of a reference parentchild <END>
<BEG> method for accessing declared typing mode annotated if any <END>
<BEG> method for adding possible virtual properties to be serialized along with regular properties <END>
<BEG> method for finding indication of creator binding mode for <END>
<BEG> alternative deserialization method used when we expect to see object id; if so, we will need to ensure that the id is seen before anything else, to ensure that it is available for solving references, even if json itself is not ordered that way this may require <END>
<BEG> method called to deserialize pojo value from a json boolean value true, false <END>
<BEG> method called to see if type is one of core jdk types that we have cached for efficiency <END>
<BEG> if property != null { annotationintrospector intr = provider getannotationintrospector ; <END>
<BEG> strings never add type info; hence, even if type serializer is suggested, we'll ignore it <END>
<BEG> 03-oct-2012, tatu: this is actually unlikely to work ok but for now, <END>
<BEG> similar to challenges with typevariable, we may have multiple upper bounds <END>
<BEG> convenience method for creating a new factory instance with additional bean serializer modifier <END>
<BEG> 01-jan-2010, tatu: not 100% sure what we should say here: type is basically not known this seems closest <END>
<BEG> add an annotation declaration to the types of this compilation unit <END>
<BEG> set the type of indent to produce <END>
<BEG> by default enum constants get aligned like this: <pre> enum x { a, b, c, d } <pre> until the amount of constants passes this currentvalue 5 by default <END>
<BEG> where a node has an interfaceclassenum declaration -- or an object creation expression anonymous inner class -- as its ancestor, return the nearest one <END>
<BEG> where a node has an interfaceclassenum declaration -- or an object creation expression in an inner class references an outer class -- as its ancestor, return the declaration corresponding to the class name specified <END>
<BEG> solve any possible visible symbols including: fields, internal types, type variables, the type itself or its containers <END>
<BEG> called when this loaderis an active loaderand we see an end tag <END>
<BEG> preload a schema <END>
<BEG> set the configurationsource <END>
<BEG> sets the dependency graph transformer to use for building dependency graphs <END>
<BEG> gets an authentication context for the proxy of the specified repository <END>
<BEG> records the repository from which the specified version was resolved <END>
<BEG> creates a new traverser from the specified traversers <END>
<BEG> set the instance it is used by osgi environment while service loader <END>
<BEG> performs the closing handshake <END>
<BEG> <p> handle the web socket handshake for the web socket specification <a href= https:tools ietf orghtmldraft-ietf-hybi-thewebsocketprotocol-08 >hybi version 8 to 10<a> version 8, 9 and <END>
<BEG> sets the internal data structure that keeps the thread-local variables bound to this thread <END>
<BEG> log a message at level finest according to the specified format and argument <END>
<BEG> log an exception throwable at level fine with an accompanying message <END>
<BEG> log a message object at the info level <END>
<BEG> log a message at level trace according to the specified format and argument <END>
<BEG> log a message at level debug according to the specified format and arguments <END>
<BEG> log a message object at the error level <END>
<BEG> checks that the given argument is neither null nor empty <END>
<BEG> resolves a possibly null long to a primitive long, using a default value <END>
<BEG> align a value to the next multiple up of alignment if the value equals an alignment multiple then it <END>
<BEG> returns a pseudorandom, uniformly distributed value between the given least value inclusive and bound exclusive <END>
<BEG> sets the value to uninitialized for the specified thread local map <END>
<BEG> returns the number of times a client did not present a ticket and we issued a new one <END>
<BEG> trusted certificates for verifying the remote endpoint's certificate the file should <END>
<BEG> gets the timeout in ms for receiving the response for the close_notify that was triggered by closing the <END>
<BEG> returns the offset in the file where the transfer is happening currently <END>
<BEG> sets the ssl session ticket keys of this context depending on the underlying native library you may omit the <END>
<BEG> are there pending buffers in the queue <END>
<BEG> gets the name of this compression algorithm <END>
<BEG> returns a bouncycastle jca provider instance <END>
<BEG> gets the extracted encryption key <END>
<BEG> returns the compatible jws hmac algorithms for the specified secret length <END>
<BEG> checks if the specified jws algorithm is supported by the default system jca provider s <END>
<BEG> checks if the specified jwe encryption method is supported by the default system jca provider s <END>
<BEG> sets a specific jca provider for the content encryption <END>
<BEG> gets the encrypted key <END>
<BEG> returns the authentication tag of this jwe object <END>
<BEG> gets the public 'x' coordinate for the elliptic curve point <END>
<BEG> returns the key sizes <END>
<BEG> selects the keys from the specified jwk set according to the matcher's criteria <END>
<BEG> returns a copy of this json web key jwk set with all private keys and parameters removed <END>
<BEG> returns the identifier of this public key use <END>
<BEG> gets the second factor chinese remainder theorem crt exponent <END>
<BEG> gets the first chinese remainder theorem crt coefficient <END>
<BEG> returns the secret <END>
<BEG> returns the timestamp date <END>
<BEG> base64-encodes the specified string <END>
<BEG> base64url-encodes the specified big integer, without the sign bit <END>
<BEG> returns the specified secret key as a secret key with its algorithm set to aes <END>
<BEG> parses a pem-encoded x 509 certificate <END>
<BEG> returns the specified x 509 certificate as pem-encoded string <END>
<BEG> returns the jwt claims that must match exactly <END>
<BEG> sets the supported introspection endpoint authentication methods <END>
<BEG> returns the optional assertion identifier <END>
<BEG> returns the optional subject format <END>
<BEG> gets the subject dn of the received validated client x 509 <END>
<BEG> gets the context content <END>
<BEG> applies this x 509 certificate sha-256 confirmation to the specified <END>
<BEG> gets the authorisation code <END>
<BEG> gets the standard oauth 2 0 errors for an authorisation error <END>
<BEG> returns the parameters for this authorisation request as a json web token jwt claims set intended for creating a request object <END>
<BEG> returns the optional issuer <END>
<BEG> gets the access token <END>
<BEG> gets the human readable binding message for the display at the consumption and authentication devices corresponds to the <END>
<BEG> casts this response to a ciba error response <END>
<BEG> returns the openid connect tokens if present <END>
<BEG> gets the client metadata <END>
<BEG> sets a single redirection uri for this client corresponds to the <END>
<BEG> gets the client application logo corresponds to the <END>
<BEG> sets the client's terms of service corresponds to the <END>
<BEG> gets the json web signature jws algorithm required for request objects sent by this client corresponds to the <END>
<BEG> sets the json web encryption jwe algorithm required for request objects sent by this client corresponds to the <END>
<BEG> sets the identifier for the oauth 2 0 client software corresponds <END>
<BEG> sets the version identifier for the oauth 2 0 client software <END>
<BEG> gets the jwe algorithm for jwt-encoded authorisation responses <END>
<BEG> gets the ciba token delivery mode corresponds to the <END>
<BEG> applies the client metadata defaults where no values have been specified <END>
<BEG> returns the end-user verification uri on the authorization server <END>
<BEG> applies this jwk sha-256 thumbprint confirmation to the specified jwt claims set <END>
<BEG> returns the number of cached items <END>
<BEG> shuts down this checker and frees any associated resources <END>
<BEG> gets the associated error <END>
<BEG> gets the raw undecoded request fragment <END>
<BEG> sets the raw undecoded request fragment <END>
<BEG> gets the received validated client x 509 certificate for a received <END>
<BEG> returns a string list representation of the specified identifier collection <END>
<BEG> returns the request object as plain json object <END>
<BEG> resolves the appropriate jwt-secured authorisation response mode jarm for the specified response type <END>
<BEG> returns the optional refresh token <END>
<BEG> returns the realm <END>
<BEG> returns the optional audience for the requested security token <END>
<BEG> returns the client authorisation <END>
<BEG> casts this response to a token introspection error response <END>
<BEG> returns the existing refresh token for incremental authorisation of <END>
<BEG> returns the day of the month <END>
<BEG> gets the base part schema, host, port and path of the specified uri <END>
<BEG> sets the country <END>
<BEG> casts this code to an iso 3166-3 country code <END>
<BEG> maps the specified iso 3166-1 alpha-3 three letter country code to <END>
<BEG> returns the type of this attachment <END>
<BEG> casts this attachment to an embedded attachment <END>
<BEG> returns the content type <END>
<BEG> returns the vouch type <END>
<BEG> returns the document verification timestamp <END>
<BEG> returns the signature type <END>
<BEG> returns the signature issuer <END>
<BEG> returns a json object representation of this identity document description <END>
<BEG> returns the birthdate string <END>
<BEG> returns the trust framework <END>
<BEG> returns the assurance process <END>
<BEG> sets a claim <END>
<BEG> gets a string-based claim with an optional language tag <END>
<BEG> sets an url string based claim <END>
<BEG> returns the json object representation of this claims set request <END>
<BEG> gets the subject authentication time corresponds to the <END>
<BEG> gets the authentication methods references amrs corresponds to <END>
<BEG> sets the authentication methods references amrs corresponds to <END>
<BEG> sets the surname or last name corresponds to the <END>
<BEG> sets the user's nationalities corresponds to the <END>
<BEG> gets the birth middle name corresponds to the <END>
<BEG> removes the specified userinfo claims from the request, in all existing language tag variations <END>
<BEG> removes the specified verified userinfo claims from the request, in all existing language tag variations <END>
<BEG> returns the json object representation of this claims request <END>
<BEG> gets the entity jwk set <END>
<BEG> sets the openid relying party metadata if present for this entity <END>
<BEG> gets the openid provider metadata if present for this entity <END>
<BEG> gets the complete metadata policy json object <END>
<BEG> gets the federation api endpoint <END>
<BEG> returns a json object representation of this federation entity metadata <END>
<BEG> puts a policy entry for a metadata parameter <END>
<BEG> gets the policy operations for the specified metadata parameter name <END>
<BEG> returns the entity statement <END>
<BEG> returns the maximum number of entities between this and the last one in the chain <END>
<BEG> returns the configured trust chain constraints <END>
<BEG> resolves the openid claims request for the specified response type <END>
<BEG> sets the supported encryption methods for userinfo jwts corresponds <END>
<BEG> sets the supported verification methods for evidences of type document corresponds to the <END>
<BEG> sets the supported electronic record types corresponds to the <END>
<BEG> gets the default maximum authentication age corresponds to the <END>
<BEG> sets the back-channel logout uri corresponds to the <END>
<BEG> casts this response to a userinfo success response <END>
<BEG> returns the client id the expected jwt audience <END>
<BEG> returns the expected id token issuer <END>
<BEG> returns a url with the hostname and port of the origin server the path, query, and fragment of <END>
<BEG> returns the hostname of the origin server <END>
<BEG> returns total number of multiplexed connections in the pool <END>
<BEG> returns an auth credential for the basic scheme <END>
<BEG> returns the maximum number of bytes that this cache should use to store its data <END>
<BEG> changes the maximum number of bytes the cache can store and queues a job to trim the existing store, if necessary <END>
<BEG> returns the reason why this stream was closed, or null if it closed normally or has not yet been closed <END>
<BEG> prepares the http headers and sends them to the server <END>
<BEG> returns true if two possibly-null objects are equal <END>
<BEG> configure this client to retry or not when a connectivity problem is encountered by default, <END>
<BEG> returns the response as a string decoded with the charset of the content-type header if that header is either absent or lacks a charset, <END>
<BEG> returns true if this route tunnels https through an http proxy see <a <END>
<BEG> returns the protocols the client supports this method always returns a non-null list that <END>
<BEG> returns all of the cookies from a set of http response headers <END>
<BEG> the number of key-value pairs in this form-encoded body <END>
<BEG> closes this connection this cancels all open streams and unanswered pings it closes the <END>
<BEG> invoked just prior to initiating a tls connection <END>
<BEG> invoked immediately after receiving response headers <END>
<BEG> sends any initial frames and starts reading frames from the remote peer this should be called <END>
<BEG> web socket ping interval in milliseconds <END>
<BEG> returns either http or https <END>
<BEG> returns the decoded password, or an empty string if none is present <END>
<BEG> default connect timeout in milliseconds the default is 10 seconds <END>
<BEG> web socket and http2 ping interval in milliseconds by default pings are not sent <END>
<BEG> returns the 512-bit sha-512 hmac of this buffer <END>
<BEG> returns a human-readable string that describes the contents of this buffer typically this <END>
<BEG> returns the 256-bit sha-256 hash of this byte string <END>
<BEG> returns the 512-bit sha-512 hmac of this byte string <END>
<BEG> returns the number of bytes in this bytestring <END>
<BEG> returns true if a deadline is enabled <END>
<BEG> returns the md5 hash of this byte string <END>
<BEG> gets the session type <END>
<BEG> returns true for openid 2 associationsessiontype's, or false for openid 1 x types <END>
<BEG> get the diffie-hellman public key <END>
<BEG> sets the diffie-hellman base parameters that will be used for encoding the mac key exchange <END>
<BEG> configures the minimum level of encryption accepted for association sessions <END>
<BEG> gets the minimum level of encryption that will be accepted for association sessions <END>
<BEG> configures the authentication request mode: checkid_immediate true or checkid_setup false <END>
<BEG> gets the content-type of the response from which the xrds was extracted <END>
<BEG> gets a string representation of the yadisurl <END>
<BEG> gets the diffie-hellman modulus parameter of the message, or null for messages with no-encryption sessions <END>
<BEG> gets the diffie-hellman generator parameter of the message, or null for messages with no-encryption sessions <END>
<BEG> sets the encrypted mac key of the association <END>
<BEG> adds the list of messages fields that will be signed, in addition to the ones required by the protocol to be signed and any additional fields already configured to be signed the openid signature will <END>
<BEG> gets a the value of the parameter with the specified name <END>
<BEG> gets a messageextensionfactory for the specified type uri if an implementation is available, or null otherwise <END>
<BEG> returns true if the message has parameters for the specified extension type uri <END>
<BEG> checks if the extension contains a parameter <END>
<BEG> gets the type uri that identifies the simple registration 1 1 extension <END>
<BEG> gets the type uri that identifies the simple registration extension <END>
<BEG> gets the list of parameters that the openid provider will sign when generating authentication responses <END>
<BEG> configures the type of httpclient's constructed by the factory <END>
<BEG> returns whether this error contains any failures <END>
<BEG> returns the value's identity hash code <END>
<BEG> get the provider name <END>
<BEG> get the access token endpoint <END>
<BEG> adds a listener to this category that will be notified when this category's state changes <END>
<BEG> compares this command with another command by comparing each of its non-transient attributes <END>
<BEG> sets the name and description of the category for uncategorized commands <END>
<BEG> returns the commands that are defined <END>
<BEG> returns whether the list of defined category identifiers has changed <END>
<BEG> registers an instance of <code>icontextlistener<code> to listen for changes to properties of this instance <END>
<BEG> the current value associated with this state this can be any type of <END>
<BEG> sets the identifier for this object this method should only be called <END>
<BEG> the default element handler which can cope with all xml expression elements defined by the common expression language <END>
<BEG> returns the set of expression types which don't reimplement the <END>
<BEG> note: this method is for internal use only clients must not call <END>
<BEG> returns the text file buffer manager may return <code>null<code> if <END>
<BEG> returns the set of setup participants for the given file name or extension <END>
<BEG> returns the sharable document factory for the given location <END>
<BEG> returns the line delimiter to be used by the given location <END>
<BEG> creates an empty file information object the resulting information <END>
<BEG> returns a file system corresponding to the given scheme <END>
<BEG> returns the local file system <END>
<BEG> return the value that the native library thinks <END>
<BEG> creates and returns a new lock <END>
<BEG> returns the currently running job, or null if none <END>
<BEG> creates a new job that will execute the provided function when it runs <END>
<BEG> returns the scheduling rule for this job returns <code>null<code> if this job has no <END>
<BEG> returns whether this job has been directly initiated by a ui end user <END>
<BEG> returns all waiting, executing and sleeping jobs belonging to this job group if no jobs are found, an empty array is returned <END>
<BEG> replaces a node in the tree with the result of assembling the node with the given delta node which represents a forward delta on the existing node <END>
<BEG> returns the root node of the tree <END>
<BEG> returns a new tree which represents an empty, mutable delta on the receiver it is not possible to obtain a new delta tree if the receiver is <END>
<BEG> instructs this visitor to ignore changes due to local deletions in the file system <END>
<BEG> non-javadoc changes this folder to be a file in the resource tree and returns the newly created file all related properties are deleted it is assumed that on <END>
<BEG> returns all markers of the specified type on the given target, with option to search the target's children passing <code>null<code> for the type <END>
<BEG> returns true if the given marker is persistent, and false otherwise <END>
<BEG> returns true if the given marker type is persistent, and false otherwise <END>
<BEG> the array isn't large enough so double its size and rehash all its current values <END>
<BEG> returns true if this resource represents the project description file, and false otherwise <END>
<BEG> writes the project's current description file to disk <END>
<BEG> sets the property store associated with this info the value may be null <END>
<BEG> returns the type setting for this info valid values are <END>
<BEG> returns the set of flags for this info <END>
<BEG> returns true if the given file system locations overlap, and false otherwise <END>
<BEG> returns true if location1 is the same as, or a proper prefix of, location2 <END>
<BEG> adds a <code>string<code> to the pool returns a <code>string<code> <END>
<BEG> reads an element tree delta from the input stream, and reconstructs it as a delta on the given tree <END>
<BEG> write the format version number <END>
<BEG> requests that this builder forget any state it may be retaining regarding previously built states typically this means that the next time the <END>
<BEG> returns the set of mappings that cover the given resources <END>
<BEG> returns all markers of the specified type on existing resources in this traversal <END>
<BEG> creates a new refresh monitor that performs naive polling of the resource in the file system to detect changes the returned monitor will immediately begin <END>
<BEG> returns whether this resourceattributes object is marked hidden <END>
<BEG> sets the current value of the integer-valued property with the given name <END>
<BEG> returns the current value of the string-valued property with the given name <END>
<BEG> returns whether the current values in this preference object require saving <END>
<BEG> adds a listener that is notified when performance events occur if <END>
<BEG> returns whether this performance event represents a performance failure <END>
<BEG> returns a url that is the local equivalent of the supplied url this method is expected to be used with the <END>
<BEG> returns the location of the platform working directory <END>
<BEG> as the org eclipse core runtime compatibility plug-in has been removed in <END>
<BEG> returns the string name of the current locale for use in finding files whose path starts with <code>$nl$<code> <END>
<BEG> returns the string name of the current window system for use in finding files whose path starts with <code>$ws$<code> <code>null<code> is returned <END>
<BEG> checks if the specified bundle is a fragment bundle <END>
<BEG> execute the given workspace runnable with the scheduling rule to use when running the operation <END>
<BEG> fires a change event for this debug element with the specified detail code <END>
<BEG> sets whether this memory byte is writable <END>
<BEG> returns whether this byte of memory is big endian <END>
<BEG> refreshes the resources as specified by the given launch configuration via its <END>
<BEG> sets the type identifier for this source locator's type <END>
<BEG> performs a source lookup query for the given element returning the source elements associated with the element <END>
<BEG> throws an error exception with the given message and underlying exception <END>
<BEG> parses the given xml document, returning its root element <END>
<BEG> returns the associated file in the workspace <END>
<BEG> returns the root directory in the local file system associated with this source container <END>
<BEG> returns whether change notification is to be suppressed for the given breakpoint <END>
<BEG> associate the launch <END>
<BEG> sets this configuration's type <END>
<BEG> reads a <code>list<code> attribute from the specified xml node and loads it into the mapping of attributes <END>
<BEG> get the visible attributes of this prototype return <code>null<code> if the launch configuration is not a prototype <END>
<BEG> set visibility of the given attribute do not call this method on a <END>
<BEG> determines if the specified candidate is suitable for migration by loading its delegate <END>
<BEG> returns the listing of launch delegates that apply to the specified <code>ilaunchconfigurationtype<code> id <END>
<BEG> removes the given launch object from the collection of registered launches returns whether the launch was removed <END>
<BEG> traverses the delta looking for addedremovedchanged launch configuration files <END>
<BEG> saves the listings of preferred launch delegates from all of the launch configuration types <END>
<BEG> returns the name of the given launch mode with accelerators removed, or <code>null<code> if none <END>
<BEG> returns the singleton step filter manager <END>
<BEG> returns whether any launch config supports the given mode <END>
<BEG> starts a thread which reads from the stream <END>
<BEG> sets the given preference to its default value this is done by removing any set value <END>
<BEG> method declared in xmlmemento <END>
<BEG> returns the actions of this permission <END>
<BEG> returns the properties of the application descriptor as key-value pairs <END>
<BEG> return an array of fragments for the given bundle host <END>
<BEG> returns the object which defines the location and organization of the platform's meta area <END>
<BEG> checks if the given listener is present <END>
<BEG> returns the url of a resource inside a bundle corresponding to the given url <END>
<BEG> converts a url that uses a client-defined protocol into a url that uses a protocol which is native to the java class library file, jar, http, etc <END>
<BEG> returns the number of registered listeners <END>
<BEG> merges the given status into this multi-status <END>
<BEG> returns the qualifier component of this version identifier <END>
<BEG> this implementation of a <code>iprogressmonitorwithblocking<code> method forwards to the wrapped progress monitor <END>
<BEG> runs the given runnable in a protected mode and returns the result given by the runnable exceptions <END>
<BEG> sets the status code <END>
<BEG> sets the plug-in id <END>
<BEG> shuts down the listener by removing the registry change listener should only be <END>
<BEG> unresolves and removes all extensions and extension points provided by the plug-in <END>
<BEG> removes the key and its associated value from this map <END>
<BEG> sets aggregated timestamp to the value corresponding to an empty registry <END>
<BEG> determines if the aggregate timestamp was modified using add or remove methods <END>
<BEG> returns the default extension registry specified by the registry provider <END>
<BEG> returns the names of the extra marker attributes associated to this problem when persisted into a marker by the javabuilder extra attributes are only optional, and are allowing client customization of generated <END>
<BEG> answers a new array with appending the suffix character at the end of the array <END>
<BEG> answers a new array adding the second array at the end of first array <END>
<BEG> answers a new array with prepending the prefix character and appending the suffix character at the end of the array if array is null, it answers a new array containing the <END>
<BEG> answers true if c is a whitespace according to the jls &#92;u0009, &#92;u000a, &#92;u000c, &#92;u000d, &#92;u0020 , otherwise false <END>
<BEG> answers the first index in the array for which the tobefound array is a matching subarray following the case rule starting at the index start answers -1 if no match is found <END>
<BEG> returns whether the reconcile operation is resolving bindings <END>
<BEG> returns the delta describing the change to the working copy being reconciled <END>
<BEG> returns the problems to be reported to the problem requestor of the reconcile operation for the given marker type <END>
<BEG> performs code correction for the given iproblem, reporting results to the given correction requestor <END>
<BEG> return an array of strings which contains one entry per warning token <END>
<BEG> returns whether this type declaration is a package member that is, a top-level type <END>
<BEG> returns the default value of this annotation type member, or <code>null<code> if there is none <END>
<BEG> resolves and returns the binding for the annotation type member declared in this declaration <END>
<BEG> returns the label of this break statement, or <code>null<code> if there is none <END>
<BEG> sets the type in this cast expression to the given type <END>
<BEG> finds the corresponding ast node in the given compilation unit from which the binding with the given key originated returns <END>
<BEG> sets the else part of this conditional expression <END>
<BEG> returns the label of this continue statement, or <code>null<code> if there is none <END>
<BEG> sets the expression of this enhanced for statement <END>
<BEG> returns whether this expression node is the site of an unboxing conversion jls3 5 1 8 this information is available only <END>
<BEG> sets the name of the field accessed in this field access expression <END>
<BEG> returns the else part of this if statement, or <code>null<code> if this if statement has <b>no<b> else part <END>
<BEG> sets or clears the else part of this if statement <END>
<BEG> resolves and returns the binding for the package, type, field, or method named in this import declaration <END>
<BEG> sets the operator of this infix expression <END>
<BEG> returns the binding of the module associated with the package in which this type is declared <END>
<BEG> sets the body of this labeled statement <END>
<BEG> sets or clears the qualifier of this member reference <END>
<BEG> sets the given simple name as the qualifier for the receiver added in jls8 api <END>
<BEG> returns <code>true<code> if the resolved return type has been inferred from the assignment context jls3 15 12 2 8 , <code>false<code> otherwise <END>
<BEG> returns whether the given flags includes the protected modifier <END>
<BEG> returns whether the given flags includes the synchronized modifier <END>
<BEG> returns the live list of statements in this module adding and <END>
<BEG> answer true if the receiver is the transitive module modifier, false otherwise <END>
<BEG> sets the name part of this qualified name to the given simple name <END>
<BEG> returns whether this name is a qualified name <code>qualifiedname<code> <END>
<BEG> if the ast contains nodes whose range is equal to the selection, returns the innermost of those nodes <END>
<BEG> returns the innermost node that fully contains the selection a node also contains the zero-length selection on either end <END>
<BEG> sets the expression of this parenthesized expression <END>
<BEG> sets the operand of this prefix expression <END>
<BEG> returns the live ordered list of superinterfaces of this type declaration added in jls3 api for a class declaration, these are the interfaces <END>
<BEG> sets the value of this annotation <END>
<BEG> returns the ordered list of annotations on the varargs token added in jls8 api <END>
<BEG> returns this node's text <END>
<BEG> returns whether this type is a wildcard type <END>
<BEG> returns the name of the superclass declared in this type declaration, or <code>null<code> if there is none jls2 api only <END>
<BEG> sets the type of this type method reference expression <END>
<BEG> returns the live ordered list of types in this union type <END>
<BEG> returns whether the given integer includes the <code>final<code> modifier <END>
<BEG> returns whether the given integer includes the indication that the element is synthetic <END>
<BEG> returns whether the given integer has the <code>accbridge<code> bit set <END>
<BEG> validate the given type variable name <END>
<BEG> suggest name for a setter method the name is computed from field's name <END>
<BEG> returns the path to the original document to publicly mention in index or search results this path is a string that uniquely identifies the document <END>
<BEG> searches for matches of a given search pattern search patterns can be created using helper <END>
<BEG> searches for all declarations of the methods invoked in the given element <END>
<BEG> name of the type container using ' ' character <END>
<BEG> resolve completion node if not null and throw exception to let clients know that it has been found <END>
<BEG> returns all the already caught exceptions in catch blocks, found by the call to <END>
<BEG> answer wither the given type binding is a subtype of java lang autocloseable <END>
<BEG> mark that this resource is closed locally <END>
<BEG> mark that this resource is closed from a nested method inside a local class <END>
<BEG> lambda shape analysis: assuming this is reachable, analyze if this completes by continuing i e control flow cannot reach the textually next statement <END>
<BEG> implementation for walking along the type_path for array dimensions & nested types <END>
<BEG> this method is used to clean the receiver in case of a clinit header is generated, but the clinit has no code <END>
<BEG> javadoc positions are persisted in consumepackagecomment <END>
<BEG> answer the compilation unit or null if the receiver represents a binary or source type <END>
<BEG> answer the resolved compiler binding that was late found during askforname <END>
<BEG> returns true if any of the irritants in given other set is positionned in receiver <END>
<BEG> api answer the problem id associated with the receiver <END>
<BEG> x<t> t --> lx<tt;>; <END>
<BEG> answer true if the receiver is final and cannot be overridden <END>
<BEG> strips one level of parameterization, so if both class & method are parameterized, leave the class parameters in place <END>
<BEG> call this variant during resolve analyse, so we can handle the case when a tentative lambda resolve triggers resolving of outside code <END>
<BEG> record a statement declaration <END>
<BEG> answer the enclosing method node, or null if none <END>
<BEG> sets the last position of this member's name, relative to its openable's source buffer <END>
<BEG> check whether the build has been canceled <END>
<BEG> returns the problem factory to be used during evaluation <END>
<BEG> returns the part of the javadoc that describe a method of the type <END>
<BEG> sets the abort flag to true the parser has encountered an error <END>
<BEG> finishes the configuration of the constructors and methods <END>
<BEG> finishes the configuration of the interface dom object which was created by a previous enterinterface call <END>
<BEG> generates detailed source indexes for this node if possible <END>
<BEG> sets the state of this method declaration as having the return type altered from the original document <END>
<BEG> returns the next element <END>
<BEG> removes unused indexes from disk <END>
<BEG> non-javadoc returns the hash code of the matched type <END>
<BEG> the exact openable file name in particular, will be the originating class file for binary openable with attached <END>
<BEG> reset the state of this requestor <END>
<BEG> returns the type signature of the field <END>
<BEG> appends the given char given for convenience <END>
<BEG> sets the stringindex <END>
<BEG> api answer the field binding that corresponds to fieldname <END>
<BEG> returns the dot separated fully qualified name of the type of this global variable, or its simple representation if it is a primitive type e g int, boolean, etc <END>
<BEG> returns the name of the proposal <END>
<BEG> sets the relevance <END>
<BEG> returns the content of the body for a method or constructor using the method body templates <END>
<BEG> after executing the operation, returns <code>null<code> if the operation has been executed successfully or the range where parsing failed <END>
<BEG> sets the refactoring descriptor for this change <END>
<BEG> sets the package in which the top level class will be created can be <code>null<code> to indicate that the <END>
<BEG> returns <code>true<code> if delegates will be kept default is <code>false<code> <END>
<BEG> returns <code>true<code> if delegates will be marked as deprecated default is <code>false<code> <END>
<BEG> sets the destination type of the move operation <END>
<BEG> determines whether the the original members should be kept as delegates to the moved ones <END>
<BEG> sets the static members to move <END>
<BEG> returns the new method name if the name has not been changed by the refactoring, the original <END>
<BEG> returns the change method signature arguments <END>
<BEG> returns the precedence of the expression expression <END>
<BEG> evaluates the indentation used by a java element in tabulators <END>
<BEG> returns variable name suggestions for the given base name this is a layer over the jdt core <END>
<BEG> tests if a char is lower case fix for 26529 <END>
<BEG> removes the given number of indents from the line asserts that the given line <END>
<BEG> sets the expand with constructors mode <END>
<BEG> set default ignore filters to use <END>
<BEG> determines if the method represents a recursion call i e whether the <END>
<BEG> allows a visitor to traverse the call hierarchy the visiting is stopped when <END>
<BEG> removes the given method call from the cache <END>
<BEG> determines if given method exists in a given list <END>
<BEG> creates a new selection from the given start and end <END>
<BEG> returns the selection mode of the given ast node regarding this selection possible <END>
<BEG> get the infix in safe operators <END>
<BEG> get the safe in constants <END>
<BEG> compute set of compilationunitrewriteoperation to refactor supported system property to method calls <END>
<BEG> sets the compilation unit rewrite of the declaration to create a delegate for must always be called prior to preparedelegate bindings need not <END>
<BEG> sets the search requestor for this search engine <END>
<BEG> computes the target categories for the method to move <END>
<BEG> returns whether this type represents <code>java lang object<code> or <END>
<BEG> returns whether this type represents a top level type <END>
<BEG> returns whether this type represents a nested type <END>
<BEG> returns whether this type represents a member type <END>
<BEG> returns the ttype for java lang object <END>
<BEG> creates an status entry context for the given type root and ast node <END>
<BEG> returns true if the given <code>edit<code> is minimal <END>
<BEG> hook to initialize the context <END>
<BEG> returns the lower bound of a type signature returns the null type <END>
<BEG> finds the method that declares the given method a declaring method is the 'original' method declaration that does <END>
<BEG> makes the given resources committable committable means that all <END>
<BEG> returns the location of the given resource for local <END>
<BEG> check if the given type is in the hierarchy cache <END>
<BEG> returns if the status' severity is info <END>
<BEG> returns index of the position in the positions, <code>-1<code> if not found <END>
<BEG> non-javadoc default implementation returns <code>false<code> <END>
<BEG> returns all access rule participants that are not specific to an execution environment <END>
<BEG> logs the specified exception by creating a new <code>status<code> <END>
<BEG> returns a shared xml parser <END>
<BEG> returns a collection of bootpath entries for this vm install <END>
<BEG> returns a collection of endorsed directory paths for this vm install <END>
<BEG> fires a custom model specific event when this connector is ready to accept incoming connections from a remote vm <END>
<BEG> removes the vm from this container <END>
<BEG> non-javadoc subclasses should not override this method <END>
<BEG> returns a vm specific attribute associated with the given key or <code>null<code> if none <END>
<BEG> executes the given command line using the given working directory and environment <END>
<BEG> returns the javadoc location associated with this library location <END>
<BEG> returns the new value of the property <END>
<BEG> returns the old value of the property <END>
<BEG> returns the archive associated with this source location <END>
<BEG> returns the outcome of the operation or <code>null<code> if an exception has occurred while performing the operation or if the operation hasn't been performed yet <END>
<BEG> adds the given change to the list of children the change to be added <END>
<BEG> returns the children managed by this composite change <END>
<BEG> returns the event type <END>
<BEG> returns whether reference updating is requested or not <END>
<BEG> returns the move processor associated with this move refactoring <END>
<BEG> returns <code>true<code> if the specified element has been renamed; otherwise <code>false<code> <END>
<BEG> a helper method to check a set of changed files <END>
<BEG> returns the refactoring status returned from the call <code>ichange#isvalid <code> <END>
<BEG> returns the tick provider used for progress reporting for this refactoring <END>
<BEG> creates a new customizable refactoring descriptor initialized with its default values <END>
<BEG> sets the destination container to move the resources in <END>
<BEG> returns whether preview edits are remembered for further region tracking or not <END>
<BEG> sets the save state must be one of <code>keep_save_state<code>, <END>
<BEG> does the text file change need saving? <p> the implementation of this method returns <code>true<code> if the <code>force_save<code> flag is enabled, or the underlying file is not dirty and <code>keep_save_state<code> is enabled <END>
<BEG> returns a path representing the history part for the specified time stamp <END>
<BEG> returns the new resource name <END>
<BEG> adds the given resource to the list of resources to be created <END>
<BEG> returns the adaptor for this container <END>
<BEG> returns the executor used to perform resolve operations <END>
<BEG> returns the current timestamp for the revisions of this database <END>
<BEG> returns the capabilities declared by this revision <END>
<BEG> sets the symbolic name for the builder <END>
<BEG> returns a snapshot of the values in this map <END>
<BEG> returns true if a file is a directory, otherwise false is returned same as calling <END>
<BEG> returns the primed flag for this bundle file <END>
<BEG> coerce the generic type of a list from list<? extends t> to list<t> <END>
<BEG> accessor for the trace message <END>
<BEG> accessor for the option-path being traced the <i>&lt;option-path&gt;<i> part of the debug option string <END>
<BEG> return the master alias for the processor <END>
<BEG> returns the configuration associated with this hook registry <END>
<BEG> returns the source bundlefile for this classpath entry <END>
<BEG> closes all the classpath entry resources for this classpath manager <END>
<BEG> add a package permission to this woven bundle <END>
<BEG> return the state of the listener for this addition and removal life cycle initially this method will return <code>false<code> <END>
<BEG> returns the bundle that registered the service referenced by this <code>servicereference<code> object <END>
<BEG> remove all service listener for a bundle <END>
<BEG> returns whether the given version is included in this versionrange <END>
<BEG> returns the micro component of this version identifier <END>
<BEG> returns the right endpoint of this version range <END>
<BEG> returns the type of the left endpoint of this version range <END>
<BEG> returns whether this version range is empty a version range is empty if <END>
<BEG> returns the filter string for this version range using the specified attribute name <END>
<BEG> constructs a condition that tries to match the passed bundle's location to the location pattern <END>
<BEG> sets the document's line tracker <END>
<BEG> moves the gap to the end of the content there is no sensible prediction of where the <END>
<BEG> returns the manager for the given documents if <code>force<code> is <END>
<BEG> causes this model to stop forwarding updates the positions are not <END>
<BEG> returns whether this model is nested <END>
<BEG> returns the positions in this model that have a tab stop, in the order they were added <END>
<BEG> returns the linked position group that contains <code>position<code>, or <code>null<code> if <code>position<code> is not contained in any group within this model group containment is tested by calling <END>
<BEG> returns whether this position includes the range given by <code>offset<code> and <code>length<code> a range is included by <END>
<BEG> sets the sequence number of this position <END>
<BEG> changes the length of this position to the given length <END>
<BEG> returns the parent document range of this child document <END>
<BEG> ignores the given event and sends the semantically equal slave document event instead <END>
<BEG> notifies this projection mapping that there was a projection change <END>
<BEG> sets the completion offset <END>
<BEG> adds a variable resolver to the context type if there already is a resolver <END>
<BEG> validates the variables in this context type if a variable is not valid, <END>
<BEG> returns the type of this resolver <END>
<BEG> returns the type name of this variable type <END>
<BEG> returns the associated target edit or <code>null<code> if no target edit is associated yet <END>
<BEG> returns the size of the managed children <END>
<BEG> creates a deep copy of the edit tree rooted at this edit <END>
<BEG> this method is called on every edit of the copied tree to do some post-processing like connected an edit to a different edit in the tree <END>
<BEG> returns the edit processor's root edit <END>
<BEG> visits a <code>copytargetedit<code> instance <END>
<BEG> visits a <code>multitextedit<code> instance <END>
<BEG> returns the deletion state of the stored template this is only relevant <END>
<BEG> starts listening for property changes on the preference store if the configured preference <END>
<BEG> returns all enabled templates <END>
<BEG> returns the first enabled template that matches the name <END>
<BEG> returns the first enabled template that matches both name and context type id <END>
<BEG> returns the actions of the permission represented by this <code>permissioninfo<code> <END>
<BEG> determines the equality of two <code>permissioninfo<code> objects <END>
<BEG> this method calls <code>super hashcode url <code> <END>
<BEG> rg set the stroking colour space to devicergb and set the colour to use for stroking operations <END>
<BEG> this will set the image parameters, this is only valid for bi operators <END>
<BEG> restores the entire graphics stack <END>
<BEG> this will remove all of the objects in the collection <END>
<BEG> this will add all objects to this array <END>
<BEG> get the value of the array as an integer, return the default if it does not exist <END>
<BEG> set the value in the array as a string <END>
<BEG> this will get the boolean value <END>
<BEG> this is a convenience method that will get the dictionary object that is expected to be a name null is returned <END>
<BEG> this is a convenience method that will get the dictionary object that is expected to be a cosobject null is <END>
<BEG> this will set the document id <END>
<BEG> returns the given string encoded with pdfdocencoding <END>
<BEG> sets the region of the source image that should be decoded the region will be clipped to the <END>
<BEG> sets the number of columns to advance in the source for every pixel decoded <END>
<BEG> sets directory to be used for temporary files <END>
<BEG> creates a new buffer using this page handler <END>
<BEG> sets the all pages overlay pdf <END>
<BEG> sets the odd page overlay pdf <END>
<BEG> returns the destination pdf document this cloner instance is set up for <END>
<BEG> add a source to the list of documents to merge <END>
<BEG> this will set the start page <END>
<BEG> the source pdf document <END>
<BEG> this will get the encryption dictionary the document must be parsed before this is called <END>
<BEG> this will get the pd document that was parsed when you are done with <END>
<BEG> returns the last trailer if at least one exists <END>
<BEG> returns object numbers which are referenced as contained in object stream with specified object number <END>
<BEG> this will get the standard output stream <END>
<BEG> this will set name representing a unix file <END>
<BEG> set the embedded unicode file for this spec <END>
<BEG> set the subtype for this embedded file this should be a mime type value optional <END>
<BEG> get the mod date of the embedded file <END>
<BEG> get the mac creator <END>
<BEG> get the number of bits that the output value will take up <END>
<BEG> returns the c1 values of the function, 1 if empty <END>
<BEG> pops a number from the stack and returns it as a real value if the value is not of a <END>
<BEG> adds an int value <END>
<BEG> returns the instruction sequence that has been build from the syntactic elements <END>
<BEG> get the number of compressed object <END>
<BEG> sets the page label range beginning at the specified start page <END>
<BEG> this will set the lower left x coordinate <END>
<BEG> this will set the lower left y coordinate <END>
<BEG> this will get a stream with some filters applied but not others this is <END>
<BEG> set the metadata for this object this can be null <END>
<BEG> sets the owner of the attributes <END>
<BEG> sets the revision number r <END>
<BEG> returns the id tree <END>
<BEG> gets the alternate description alt <END>
<BEG> is the artifact attached to the right edge? <END>
<BEG> sets the colour for the start edge <END>
<BEG> gets the color to be used for drawing text and the default value for the colour of table borders and text decorations color <END>
<BEG> sets the color to be used for drawing text and the default value for the colour of table borders and text decorations color <END>
<BEG> sets the amount of extra space preceding the before edge of the blse in the block-progression direction spacebefore <END>
<BEG> gets the alignment, in the inline-progression direction, of text and other content within lines of the blse textalign the default value is <END>
<BEG> sets the same table border style for all four sides tborderstyle the <END>
<BEG> sets the style of the border drawn on each edge of a table cell tborderstyle the values should be of: <END>
<BEG> sets the colour to be used for drawing text decorations textdecorationcolor <END>
<BEG> gets the thickness of each line drawn as part of the text decoration textdecorationthickness <END>
<BEG> sets the orientation of glyphs when the inline-progression direction is top to bottom or bottom to top glyphorientationvertical the value <END>
<BEG> sets the number of columns in the content of the grouping element columncount <END>
<BEG> sets a string attribute value <END>
<BEG> gets a name value or array of name values <END>
<BEG> sets a name value <END>
<BEG> gets a colour <END>
<BEG> this will tell if the access permission corresponds to owner access permission no restriction <END>
<BEG> this will tell if the user can insertrotatedelete pages <END>
<BEG> this will get the dictionary associated with this crypt filter dictionary <END>
<BEG> get the name of the filter <END>
<BEG> this will return the r entry of the encryption dictionary <br><br> <END>
<BEG> sets the standard crypt filter <END>
<BEG> returns the decryption certificate <END>
<BEG> this will encrypt and write the next byte <END>
<BEG> set the invisible flag <END>
<BEG> set a unique name for an annotation <END>
<BEG> this will retrieve the rich text stream which is displayed in the popup window <END>
<BEG> this will set the border effect dictionary, describing the effect applied to the border described by the bs entry <END>
<BEG> set the paths making up the freehand scribble <END>
<BEG> this will set the length of the leader line offset <END>
<BEG> this will retrieve the horizontal offset of the caption <END>
<BEG> this will set the fdf document <END>
<BEG> this will set the target frame in the browser to open this document <END>
<BEG> this will set the list of embedded fdfs this should be a list of pdfilespecification objects <END>
<BEG> this will set the icon fit entry <END>
<BEG> this will set the rich text value <END>
<BEG> this will set the file specification for this named page reference <END>
<BEG> this will set the template reference <END>
<BEG> this will get an encoding by name may return null <END>
<BEG> returns the name for a given sequence of unicode characters <END>
<BEG> returns the fontbox font associated with the given fontinfo <END>
<BEG> sets the font service provider <END>
<BEG> returns the y-component of the vertical displacement vector w1 <END>
<BEG> returns the type 2 charstring for the given cid, or null if the substituted font does not contain type 2 charstrings <END>
<BEG> returns the descendant cidfont <END>
<BEG> this will always return font for fonts <END>
<BEG> a string representing the preferred font stretch <END>
<BEG> this will get the font flags <END>
<BEG> this will set the italic angle for the font <END>
<BEG> this will set the cap height for the font <END>
<BEG> this will set the average width for the font <END>
<BEG> this will set the max width for the font <END>
<BEG> this will set the missing width for the font <END>
<BEG> this will get the character set for the font <END>
<BEG> set a stream containing a cidset <END>
<BEG> returns the postscript name of the font <END>
<BEG> returns the font's glyph list <END>
<BEG> returns the type 1 font <END>
<BEG> this will get the fonts bounding box from its dictionary <END>
<BEG> returns the dictionary containing all streams to be used to render the glyphs <END>
<BEG> returns the gamma value <END>
<BEG> returns the pattern name from this color value <END>
<BEG> returns the color component values as a cos array <END>
<BEG> returns the x value of the tristimulus <END>
<BEG> returns the z value of the tristimulus <END>
<BEG> returns an rgb buffered image containing the opaque image stream without any masks applied <END>
<BEG> this will set the resources for this pattern <END>
<BEG> this will get the optional domain values for this shading <END>
<BEG> sets the coords entry for this shading <END>
<BEG> set the number of bits per flag <END>
<BEG> this will get the smothness tolerance <END>
<BEG> this will get the transfer function of the tr2 dictionary <END>
<BEG> this will set the transfer function of the tr2 dictionary <END>
<BEG> set the value of the non-stroke alpha constant property <END>
<BEG> get the value of the stroke alpha source property <END>
<BEG> set the value of the overprint property <END>
<BEG> set the value of the overprint mode property <END>
<BEG> this will get the graphics text state <END>
<BEG> this will set the graphics text state <END>
<BEG> returns the stroking color <END>
<BEG> this will get the current clipping path do not modify this area object! <END>
<BEG> returns the transfer function <END>
<BEG> set the value of the fontsize <END>
<BEG> this will set the destination to jump to <END>
<BEG> a flag specifying whether to repeat the sound indefinitely <END>
<BEG> this will set an action to be performed when the mouse button is pressed inside the annotation's active area <END>
<BEG> this will set a javascript action to be performed in order to recalculate the value of this field when that of another field changes the order in which <END>
<BEG> this will set interior color of the line endings defined in the le entry color is in devicergb color space <END>
<BEG> set the highlight mode see the highlight_mode_xxx constants <END>
<BEG> this will retrieve the reply type relationship with the annotation in the irt entry see the rt_ constants for the available values <END>
<BEG> this will set the border effect dictionary, specifying effects to be applied when drawing the line <END>
<BEG> returns the appearance characteristics dictionary <END>
<BEG> set the annotation action as of pdf 1 6 this is only used for widget annotations <END>
<BEG> this will retrieve the rollover caption <END>
<BEG> this will retrieve the rollover icon <END>
<BEG> returns true if this entry is an appearance stream <END>
<BEG> this will set the border effect, see the style_ constants for valid values <END>
<BEG> this will set the dash style used for drawing the border <END>
<BEG> the build date of the software module this string is normally produced by the compiler that <END>
<BEG> set true if the filter shall be required <END>
<BEG> set true if the addrevinfo shall be required <END>
<BEG> optional an array of text strings that specifying possible reasons for signing a document if specified, the reasons supplied in this entry replace those used <END>
<BEG> set true if oid shall be required as a constraint on signature <END>
<BEG> returns a list of array of bytes that contain object identifiers oids of the certificate policies that must be present in the signing certificate <END>
<BEG> indicates if a timestamp is required <END>
<BEG> set a subfilter that specify the signature that should be used <END>
<BEG> read out the byterange from the file <END>
<BEG> returns document page <END>
<BEG> sets document page <END>
<BEG> sets image form image form will be in this structure: <END>
<BEG> a flag indicating if this page destination should just fit bounding box of the pdf <END>
<BEG> get the right x coordinate a return value of -1 implies that the current x-coordinate <END>
<BEG> get the top y coordinate a return value of -1 implies that the current y-coordinate <END>
<BEG> set the action for this node <END>
<BEG> set the structure element for this node <END>
<BEG> get the default appearance <END>
<BEG> true if the viewing application should construct the appearances of all field widgets <END>
<BEG> set the push button bit <END>
<BEG> this will set the display and export values - the 'opt' key <END>
<BEG> this will get the export values from the options <END>
<BEG> get the field value <END>
<BEG> this will get the selected export values <END>
<BEG> sets the default value of this field to be the given signature <END>
<BEG> set the comb bit <END>
<BEG> returns the maximum number of characters of the text field <END>
<BEG> returns the default value of this field, or an empty string <END>
<BEG> this will return the type of the measure dictionary <END>
<BEG> this will return the changes along the x-axis <END>
<BEG> this will set the name of the viewport <END>
<BEG> the rectangle on the page that this bead is part of <END>
<BEG> set the rectangle on the page that this bead covers <END>
<BEG> set the toolbar preference <END>
<BEG> set the fit window preference <END>
<BEG> get the viewclip preference see boundary enumeration <END>
<BEG> set the printarea preference see boundary_xxx constants <END>
<BEG> add parameters of signature to be created externally see <END>
<BEG> retrieve all signature fields from the document <END>
<BEG> protects the document with a protection policy the document content will be really <END>
<BEG> sets the resource cache associated with this document <END>
<BEG> get the viewer preferences associated with this document or null if they do not exist <END>
<BEG> sets the names dictionary for the document <END>
<BEG> sets the page mode <END>
<BEG> sets the page label descriptor for the document <END>
<BEG> this will get the trapped value for the document <END>
<BEG> this will set the list of thread beads <END>
<BEG> q operator restores the current graphics state <END>
<BEG> fills the path using the even-odd winding rule <END>
<BEG> fills the clipping area with the given shading <END>
<BEG> begin a marked content sequence <END>
<BEG> set the character spacing the value shall be added to the horizontal or vertical component <END>
<BEG> insert a page before another page within a page tree <END>
<BEG> returns the names of the font resources, if any <END>
<BEG> returns the names of the shading resources, if any <END>
<BEG> adds the given xobject to the resources of the current page and returns the name for the new resources returns the existing resource name if the given item already exists <END>
<BEG> sets the font resource with the given name <END>
<BEG> sets the shading resource with the given name <END>
<BEG> sets the pattern resource with the given name <END>
<BEG> returns the underlying graphics2d may be null if drawpage has not yet been called <END>
<BEG> renders a given page to an awt graphics2d instance <END>
<BEG> this will tell if the text stripper should separate by beads <END>
<BEG> there will some additional text formatting be added if addmoreformatting is set to true default is false <END>
<BEG> the minimum whitespace, as a multiple of the max height of the current characters beyond which the current line start is considered to be a paragraph start <END>
<BEG> returns the string which will be used at the end of a paragraph <END>
<BEG> sets the string which will be used at the beginning of a page <END>
<BEG> this will get the rotation of the page that the text is located in this is the unadjusted <END>
<BEG> this will get the width of the page that the text is located in this is the unadjusted value <END>
<BEG> return the most specific value stored for this byte sequence if not found, returns <END>
<BEG> returns the characters corresponding to the ascii hex encoding of the given short <END>
<BEG> convenience method to be used when creating a matrix from unverified data if the parameter <END>
<BEG> this will take the current matrix and multiply it with a matrix that is passed in <END>
<BEG> transforms the given point by this matrix <END>
<BEG> convenience method to create a rotated instance <END>
<BEG> tells the paper orientation <END>
<BEG> ordered way of packing 2 integers in a long, i e we produce two positive integers if the packed long is positive <END>
<BEG> get parent context if any <END>
<BEG> creates a string key useful as keys in <code>map<code>'s <END>
<BEG> return a list of methods with the same name <END>
<BEG> set name of this property <END>
<BEG> top level invocation for a slow scan a slow scan builds up a full list of excludedincluded filesdirectories, <END>
<BEG> removes a directorywalklistener <END>
<BEG> <p> introspects the specified <code>throwable<code> to obtain the cause <END>
<BEG> equivalent to printrootcausestacktrace t, system err <END>
<BEG> finds all setters in the given class and super classes <END>
<BEG> parses the specified <code>charsequence<code> as a <code>boolean<code> <END>
<BEG> write the end of line character using specified line separator and start new line with indentation <END>
<BEG> simple utility method -- good for debugging <END>
<BEG> <p>creates an argument object <p> <END>
<BEG> for windows os, check if the file name contains any of the following characters: <code> : , , ? , , &lt; , &gt; , | <code> <END>
<BEG> add a property to this record <END>
<BEG> the list of properties stored by this record <END>
<BEG> gets an unsigned integer that specifies an application-defined internal resource tag this value must be 0xff for external files <END>
<BEG> sets the picture data bytes <END>
<BEG> the row number of the top-left corner of the shape <END>
<BEG> number of id clusters + 1 <END>
<BEG> gets the number of drawings saved <END>
<BEG> gets the compressed size of the metafile in bytes <END>
<BEG> returns the instance part of the option record <END>
<BEG> gets the fill color <END>
<BEG> sets the fill color <END>
<BEG> sets the 3-d color <END>
<BEG> returns shape type must be one of msospt values see [ms-odraw] for <END>
<BEG> should all threads prefer event based over usermodel based extractors? if set, will take preference over the thread level setting <END>
<BEG> returns the summary information metadata for the document <END>
<BEG> returns a set of all the names of our custom properties <END>
<BEG> sets the byte count <END>
<BEG> removes the slide count <END>
<BEG> sets the hidden count <END>
<BEG> removes the mmclip count <END>
<BEG> gets the version of the application which wrote the property set, stored with the two high order bytes having the major version number, and the two low order bytes the minor version number <p> <END>
<BEG> removes the document language <END>
<BEG> removes the document version string <END>
<BEG> returns the property's id <END>
<BEG> returns this section's properties <END>
<BEG> sets the comments <END>
<BEG> sets the last author <END>
<BEG> remove the total time spent in editing the document <END>
<BEG> sets the word count <END>
<BEG> returns the 0 based number of the last column seen for this row you should have already been <END>
<BEG> processes a documentinputstream into essentially record events <END>
<BEG> this is the equivalent of calling addlistener mylistener, sid for every record in the org apache poi hssf record package this is for lazy <END>
<BEG> called by hssfeventfactory, passes the record to each listener associated with a record sid <END>
<BEG> remove a value record from the records array <END>
<BEG> set whether gridlines printed or not <END>
<BEG> get the index to the extendedformatrecord associated with the column at specified 0-based index in this case, an <END>
<BEG> sets the left column to show in desktop window pane <END>
<BEG> returns true if the row has cells attached to it <END>
<BEG> get the build that wrote this file <END>
<BEG> set the offset in bytes of the beginning of file marker within the hssf stream part of the poifs file <END>
<BEG> get the type of border to use for the left border of the cell <END>
<BEG> set the type of border to use for the diagonal border of the cell <END>
<BEG> set the color to use for the right border <END>
<BEG> set the font weight to bold weight=700 or to normal weight=400 boldness <END>
<BEG> set cell ranges list to a single cell range and modify the enclosing cell range accordingly <END>
<BEG> creates a new data bar formatting <END>
<BEG> todo - parse conditional format formulas properly i e produce trefn and tarean instead of tref and tarea <END>
<BEG> set the pattern field for the areaformat record <END>
<BEG> get the maximum category field for the axisoptions record <END>
<BEG> get the minor unit value field for the axisoptions record <END>
<BEG> set the minor unit value field for the axisoptions record <END>
<BEG> sets the default minimum field value <END>
<BEG> use the default crossing point <END>
<BEG> get the bar space field for the bar record <END>
<BEG> get the format flags field for the bar record <END>
<BEG> set the point number field for the dataformat record <END>
<BEG> shows the series key <END>
<BEG> get the height basis field for the fontbasis record <END>
<BEG> set the options field for the frame record <END>
<BEG> vertical or horizontal legend 1 or 0 respectively always 0 if not automatic <END>
<BEG> 1 if chart contains data table <END>
<BEG> set the line pattern field for the lineformat record <END>
<BEG> get the colour palette index field for the lineformat record <END>
<BEG> get the reference type field for the linkeddata record <END>
<BEG> get the options field for the linkeddata record <END>
<BEG> set the options field for the linkeddata record <END>
<BEG> set the format index field for the numberformatindex record <END>
<BEG> show actual value of the data point <END>
<BEG> get the category data type field for the series record <END>
<BEG> set the category data type field for the series record <END>
<BEG> get the num values field for the series record <END>
<BEG> set the num values field for the series record <END>
<BEG> set the bubble series type field for the series record <END>
<BEG> get the id field for the seriestext record <END>
<BEG> set the empty field for the sheetproperties record <END>
<BEG> sets the plot visible only field value <END>
<BEG> set the options1 field for the text record <END>
<BEG> get the text rotation field for the text record <END>
<BEG> set the zero 1 field for the tick record <END>
<BEG> automatically rotate the text <END>
<BEG> category crossing point is automatically selected <END>
<BEG> true if object is locked when sheet has been protected <END>
<BEG> includes 4 byte header <END>
<BEG> associates an escher record to an obj record or a txo record <END>
<BEG> get whether the font is to be italics or not <END>
<BEG> get the character set <END>
<BEG> get the name of the font <END>
<BEG> set the calculated value of the formula <END>
<BEG> based on the link options, is this a url? <END>
<BEG> based on the link options, is this a file? <END>
<BEG> set whether or not to iterate for calculations <END>
<BEG> throws a runtime exception use labelsstrecords you have no reason to use labelrecord!! <END>
<BEG> returns the rk number for column coffset = column - field_2_first_col <END>
<BEG> gets the extern sheet number <END>
<BEG> set the value for the cell <END>
<BEG> set whether the this is protected sharedtracked workbook or not <END>
<BEG> reads a 16 bit, unsigned value <END>
<BEG> returns the remaining bytes for the current record <END>
<BEG> set the outline level of this row <END>
<BEG> get the logical col number for the last cell this row 0 based index , plus one <END>
<BEG> set the active cell's row <END>
<BEG> get a particular string by its index <END>
<BEG> fills a closed polygon, as defined by a pair of arrays, which hold the <i>x<i> and <i>y<i> coordinates <END>
<BEG> get the contents of the format string, by looking up the dataformat against the supplied workbook <END>
<BEG> is quote prefix or 123 prefix enabled for the cell? <END>
<BEG> get the reading order, for rtlltr ordering of the text <END>
<BEG> add a conditional formatting rule <END>
<BEG> contains methods for dealing with excel dates <END>
<BEG> return an external name named range, function, user-defined function ptg <END>
<BEG> sets the font to be bold or not <END>
<BEG> should be called to tell the cell value cache that the specified cell has just been deleted <END>
<BEG> returns a cellvalue wrapper around the supplied valueeval instance <END>
<BEG> set whether it is black and white <END>
<BEG> sets the number of copies <END>
<BEG> returns the page start <END>
<BEG> returns the black and white setting <END>
<BEG> returns the no orientation <END>
<BEG> returns the vertical resolution <END>
<BEG> removes any formatting that may have been applied to the string <END>
<BEG> returns the font in use at a particular index <END>
<BEG> the color applied to the lines of this shape <END>
<BEG> the color used to fill this shape <END>
<BEG> sets the left margin within the textbox <END>
<BEG> gets the horizontal alignment <END>
<BEG> create a new empty workbook <END>
<BEG> returns colon-delimited hex string 0:0:0 <END>
<BEG> sets the topbordercolor attribute of the hssfregionutil object <END>
<BEG> returns a new byte array with a truncated to the given size <END>
<BEG> this method generates the xored-hashed password for word documents &lt; 2007 <END>
<BEG> copies nodes from one poifs to the other, minus the excepts <END>
<BEG> create a new documententry in the root entry; the data will be provided later <END>
<BEG> give method more visibility <END>
<BEG> sets the storage clsid, which is the class id of a com object which reads and writes this stream <END>
<BEG> set the size of the document associated with this property <END>
<BEG> sets the value of the y property <END>
<BEG> sets the value of the scrgbclr property <END>
<BEG> sets the value of the srgbclr property <END>
<BEG> sets the value of the prstclr property <END>
<BEG> gets the value of the gdlst property <END>
<BEG> gets the value of the ahlst property <END>
<BEG> gets the value of the cxnlst property <END>
<BEG> embedded audio file relationship id <END>
<BEG> gets the value of the chext property <END>
<BEG> gets the value of the rot property <END>
<BEG> sets the value of the flipv property <END>
<BEG> gets the value of the h property <END>
<BEG> gets the value of the z property <END>
<BEG> sets the value of the minang property <END>
<BEG> gets the value of the sx property <END>
<BEG> sets the value of the sx property <END>
<BEG> sets the value of the dy property <END>
<BEG> concatenates the current <code>graphics2d<code> <code>transform<code> with a shearing transform <END>
<BEG> renders an image, applying a transform from image space into user space before drawing <END>
<BEG> creates a new <code>graphics<code> object that is a copy of this <code>graphics<code> object <END>
<BEG> returns a collection of atp function names not implemented by poi <END>
<BEG> evaluate for workday given a date, a number of days and a optional date or interval of holidays, determines which date it is past <END>
<BEG> note that this assumes the cell cached value is up to date and in sync with data edits <END>
<BEG> should be called whenever there are changes to input cells in the evaluated workbook <END>
<BEG> overloaded pmt call omitting fv and type, which both default to 0 <END>
<BEG> convenience base class for functions that must take exactly two arguments <END>
<BEG> convenience base class for functions that must take exactly four arguments <END>
<BEG> returns a value rounded to p digits after decimal <END>
<BEG> average of all values <END>
<BEG> sum of squares of all values <END>
<BEG> product of all values <END>
<BEG> min of all values if supplied array is zero length, <END>
<BEG> inverse hyperbolic cosine <END>
<BEG> returns a double array that contains values for the numeric cells from among the list of operands blanks and blank equivalent cells <END>
<BEG> resolves internal function names into function indexes <END>
<BEG> returns value of this charset <END>
<BEG> a range is returned only for the part of the table matching this enum instance and containing the given cell <END>
<BEG> note - if this area reference refers to a single cell, the return value of this method will be identical to that of <tt>getfirstcell <tt> <END>
<BEG> do all possible cell merges between cells of the list so that:<br> <ul> <li>if a cell range is completely inside of another cell range, it gets removed from the list<li> <li>if two cells have a shared border, merge them into one bigger cell range<li> <ul> <END>
<BEG> create an enclosing cellrange for the two cell ranges <END>
<BEG> take a cell, and align it <END>
<BEG> take a cell, and vertically align it <END>
<BEG> sets the bottom border color for a region of cells by manipulating the cell style of the individual cells on the bottom <END>
<BEG> helper method, just calls <tt>readfully in, b, 0, b length <tt> <END>
<BEG> copy the contents of the stream to a new file <END>
<BEG> calculate checksum on all the data read from input stream <END>
<BEG> the linebreakmeasurer is used for calculating text bounds <END>
<BEG> get a double value from a byte array, reads it in little endian format then converts the resulting revolting ieee 754 curse them floating point number to a happy java double <END>
<BEG> get the unsigned value of a byte <END>
<BEG> get an unsigned int value from a byte array <END>
<BEG> put a float value into a byte array <END>
<BEG> put an unsigned short value into a byte array <END>
<BEG> syntactic sugar to check whether a recordformatexception should be thrown if asserttrue is <code>false<code>, this will throw this <END>
<BEG> converts a value of type fixedpoint to a floating point <END>
<BEG> create a new poixmldocumentpart using the supplied descriptor this method is used when adding new parts <END>
<BEG> return the content type content types define a media type, a subtype, and an <END>
<BEG> return the relationship, the kind of connection between a source part and a target part in a package <END>
<BEG> returns the index of the filename within the package for the given part <END>
<BEG> return the parameter keys <END>
<BEG> copy a file <END>
<BEG> get last printed date <END>
<BEG> creates a new package <END>
<BEG> get the target part from the specified relationship <END>
<BEG> check if a part already exists in this package from its name <END>
<BEG> get the package access mode <END>
<BEG> retrieve all the relationships attached to this part <END>
<BEG> get the input stream of this part to read its content <END>
<BEG> percent-encode white spaces and characters above 0x80 <END>
<BEG> get the zip archive <END>
<BEG> returns the output stream for writing the data <p> <END>
<BEG> return the underlying ctmanuallayout bean <END>
<BEG> specifies the indentation size that will be applied to the first line of text in the paragraph <END>
<BEG> specifies the left margin of the paragraph this is specified in addition <END>
<BEG> the amount of vertical white space before the paragraph this may be <END>
<BEG> specifies the font to be used on bullet characters has to follow text font within a given paragraph <END>
<BEG> specifies whether this run of text will be formatted as bold text <END>
<BEG> set the baseline for both the superscript and subscript fonts <END>
<BEG> set whether the text in this run is formatted as superscript <END>
<BEG> the topart property identifies the part of a shape to which another shape is glued, such as its begin point or endpoint, one of its edges, or a connection point <END>
<BEG> gets the requested text from the file <END>
<BEG> creates a xmlslideshow from the given inputstream <p>note that in order to properly release resources the slideshow should be closed after use <p> <END>
<BEG> return the text run xmlbeans object <END>
<BEG> set name of this theme <END>
<BEG> get a color from the theme's color scheme by name <END>
<BEG> in excel 2013, the absolute path where the file was last saved may be stored in <END>
<BEG> exports the data in an xml stream <END>
<BEG> returns the underlying ctcomments list xmlbean <END>
<BEG> tracks all non-blank columns allows columns that have been explicitly untracked to be tracked <END>
<BEG> untrack all columns that were previously tracked for auto-sizing <END>
<BEG> marks multiple columns for inclusion in auto-size column tracking <END>
<BEG> return the underlying ctpicture bean that holds all properties for this picture <END>
<BEG> gets the first row on the sheet <END>
<BEG> get the actual column width in pixels <p> please note, that this method works correctly only for workbooks with the default font size calibri 11pt for xlsx <END>
<BEG> enable or disable autofilters locking <END>
<BEG> set whether temp files should be compressed <END>
<BEG> records the themes table that is associated with the current font, used when looking up theme based colours and properties <END>
<BEG> does the column at the given 0 based index exist in the supplied list of column definitions? <END>
<BEG> note: only checks by name, not definition <END>
<BEG> get the chart title formula expression if there is one <END>
<BEG> index into the <clrscheme> collection, referencing a particular <sysclr> or <srgbclr> value expressed in the theme part <END>
<BEG> gets the frame id <END>
<BEG> do we need to a relation too, to represent this hyperlink? <END>
<BEG> location within target if target is a workbook or this workbook this shall refer to a <END>
<BEG> always throws illegalstateexception you cannot change text of a line break <END>
<BEG> specifies the comment the user provided when the name was created <END>
<BEG> link this shape with the picture data <END>
<BEG> add a row label using data from the given column <END>
<BEG> get print page order <END>
<BEG> initialize default structure of a new shape group <END>
<BEG> specifies the typeface, or name of the font that is to be used for this text run <END>
<BEG> should we concatenate phonetic runs in extraction default is <code>true<code> <END>
<BEG> get the footer that applies to the given 1 based page <END>
<BEG> get this section footer for the given type <END>
<BEG> set chart margin <END>
<BEG> get the position of the table, within the list of all the body elements <END>
<BEG> create an empty table with a number of rows and cols specified <END>
<BEG> this method is used to create template for chart xml no need to read ms-word file and modify charts <END>
<BEG> get the end note with the specified id, if any <END>
<BEG> get all pictures in this package <END>
<BEG> clears all paragraphs and tables from this header footer <END>
<BEG> returns the id of the hyperlink, if one is set <END>
<BEG> checks whether number with numid exists <END>
<BEG> get styleid of the linked style <END>
<BEG> set cell color this sets some associated values; for finer control <END>
<BEG> get the cell properties for the cell <END>
<BEG> returns all the top level streams, which are the streams pointed to by the trailerstream <END>
<BEG> with v6 pointers, the on-disk size is 18 bytes <END>
<BEG> returns all hmeftnef attributes of the attachment, such as filename, icon and contents <END>
<BEG> returns the file extension <END>
<BEG> returns the raw uncompressed rtf data <END>
<BEG> whether the slide number is displayed in the footer <END>
<BEG> set the truefalse status of the subproperty with the given index <END>
<BEG> return the value we were given at creation <END>
<BEG> set the rgb value for accent and hyperlink colour <END>
<BEG> convert from split r, g, b values to an integer rgb value <END>
<BEG> returns the comment2000atom of this comment <END>
<BEG> set the text of this comment <END>
<BEG> sets the date the comment was made <END>
<BEG> have the placeholders on the title slide been omitted? <END>
<BEG> are comment shapes visible? <END>
<BEG> we are of type 4102 <END>
<BEG> gets whether it is not required to send the dimensions to the embedded object <END>
<BEG> returns the hyperlink's user-readable name <END>
<BEG> a 4-byte unsigned integer that specifies an id for an external object <END>
<BEG> returns the exobjlistatom of this list <END>
<BEG> sets whether the object is embedded or linked <END>
<BEG> set the font type <p> bit 1: raster font bit 2: device font bit 3: truetype font <p> <END>
<BEG> we are of type 1009 <END>
<BEG> sets the placeholder id <p> <END>
<BEG> return text's index within the slidelistwithtext container 0 for title, 1 n for the nth body <END>
<BEG> return the value we were given at creation, be it 6001 or 6002 <END>
<BEG> get access to the underlying escher records <END>
<BEG> remove a child record from this record container <END>
<BEG> get access to the slideatomssets of the children of this record <END>
<BEG> returns how many characters the character's textpropcollections cover <END>
<BEG> assign picture used to fill the underlying shape <END>
<BEG> add a shape to this group <END>
<BEG> moves and scales this <code>shapegroup<code> to the specified anchor <END>
<BEG> returns the instance name of the embedded object, e g document or workbook <END>
<BEG> create and assign the lower level escher record to this shape <END>
<BEG> assign the <code>slideshow<code> this shape belongs to <END>
<BEG> create a new hslf-specific escherclientdatarecord <END>
<BEG> fetch the ppdrawing from the underlying record <END>
<BEG> set the slideshow we're attached to <END>
<BEG> returns an array of the bytes of the file only correct after a <END>
<BEG> convert the supplied java date into a systemtime struct, and write it into the supplied byte array <END>
<BEG> returns all the headers, one entry per line <END>
<BEG> gets the conversation topic of the parsed outlook message <END>
<BEG> gets the message class of the parsed outlook message <END>
<BEG> sets the current palette <END>
<BEG> returns picture object tied to specified characterrun <END>
<BEG> get an author by its index returns null if it does not exist <END>
<BEG> gets the styledescription at index x <END>
<BEG> returns the length, in characters <END>
<BEG> get the bkf_flags field for the bkf record <END>
<BEG> sets the fresultdirty field value ==1 when user has edited or formatted <END>
<BEG> get the lnc field for the sep record <END>
<BEG> set the dxalnn field for the sep record <END>
<BEG> get the dmbinother field for the sep record <END>
<BEG> set the dxtcharspace field for the sep record <END>
<BEG> get the unused3 field for the sep record <END>
<BEG> get the yapagenup field for the sep record <END>
<BEG> set the yapagenup field for the sep record <END>
<BEG> get the unused5 field for the sep record <END>
<BEG> get the olstanm field for the sep record <END>
<BEG> sets the flastrow field value when == 1, apply properties from the <END>
<BEG> when true, border is drawn with shadow must be false when brc is a substructure of the tc <END>
<BEG> don't reverse the border <END>
<BEG> gets the text that this range contains <END>
<BEG> inserts text onto the end of this range <END>
<BEG> gets the paragraph at index the index is relative to this range <END>
<BEG> writes a specified part of this byte string to an output stream <END>
<BEG> compute the number of bytes that would be needed to encode an <END>
<BEG> compute the number of bytes that would be needed to encode an enum field, including tag the provided value is the numeric <END>
<BEG> compute the number of bytes that would be needed to encode a varint <END>
<BEG> if the extension is a message extension i e , getlitetype == message , <END>
<BEG> <pre> the field json name <END>
<BEG> helper method to convert a byte array to a string using utf-8 encoding <END>
<BEG> <pre> if true, the request is streamed <END>
<BEG> <pre> any metadata attached to the method <END>
<BEG> <pre> the source syntax of this method <END>
<BEG> get the message at the specified index if the message is currently stored <END>
<BEG> get the location in the source of a field's value <END>
<BEG> get a field by number returns an empty field if not present never <END>
<BEG> associates the artifact with a collection of paths that constitute its content <END>
<BEG> whether the artifact has been resolved, i e associated with paths <END>
<BEG> dependencies of the -deployment artifacts from the quarkus extensions, and all their transitive dependencies <END>
<BEG> remote repositories that should be used by the resolver <END>
<BEG> consume all of the values produced for the named item <END>
<BEG> get the configuration key <END>
<BEG> translates a file path from the windows style to a syntax accepted by docker, so that volumes be safely mounted in both docker for windows and the legacy docker toolbox <END>
<BEG> find entities matching a query, with optional indexed parameters <END>
<BEG> find entities matching a query and the given sort options, with optional indexed parameters <END>
<BEG> delete all entities of this type matching the given query, with optional indexed parameters <END>
<BEG> builds a page of the given size <END>
<BEG> sets the order to descending for all current sort columns <END>
<BEG> sets the order to all current sort columns <END>
<BEG> adds a sort column, in the given order <END>
<BEG> gets the current user from the routing context this method may block if proactive authentication is disabled, <END>
<BEG> converts a reactive streams subscriber into a flow subscriber <END>
<BEG> ignores onnext signal dropping it and only propagates termination events <END>
<BEG> let compatible operators <strong>upstream<strong> recover from errors by dropping the incriminating element from the sequence and continuing with subsequent elements <END>
<BEG> give this mono a chance to resolve within a specified time frame but complete if it <END>
<BEG> represents a fuseable subscription that emits a single constant value synchronously to a subscriber or consumer <END>
<BEG> call the specified consumer with the current element passing through any 'rail' <END>
<BEG> merges the values from each 'rail' in a round-robin or same-order fashion and exposes it as a regular publisher sequence, running with a default prefetch value for the rails <END>
<BEG> adds m to the wip counter <END>
<BEG> calculate the next power of 2, greater than or equal to x <p> from hacker's delight, chapter 3, harry s warren <END>
<BEG> allow multiple consumers downstream of the flux while also disabling auto memory release on each buffer published retaining in order to prevent premature recycling <END>
<BEG> disable auto memory release on each signal published in order to prevent premature recycling when buffers are accumulated downstream async <END>
<BEG> return true if dispose subscription has been terminated <END>
<BEG> apply an ssl configuration customization via the passed builder the builder <END>
<BEG> replaces an unresolved inetsocketaddress with a resolved instance in the case that the passed address is a numeric ip address both ipv4 and ipv6 are supported <END>
<BEG> the unsupportedoperationexception is thrown to reduce confusion reactornettylogginghandler is using <END>
<BEG> returns the configured timeout of each dns query performed by this resolver <END>
<BEG> return whether gzip compression is enabled <END>
<BEG> return the configured redirect request consumer or null <END>
<BEG> return a new cookies holder from client response headers <END>
<BEG> configure the maximum chunk size that can be decoded for the http request <END>
<BEG> mark the body sent <END>
<BEG> return the configured idle timeout for the connection when it is waiting for an http request or null <END>
<BEG> include multiple additional fields when using form authentication by including input field values with the specified name <END>
<BEG> set the filename of the multi-part to empty none this means that the filename part will be excluded in the multi-part request <END>
<BEG> add a cookie without value to be sent with the request <END>
<BEG> specify a byte-array to upload to the server using multi-part form data <END>
<BEG> if you need to specify some credentials when performing a request <END>
<BEG> specify the port <END>
<BEG> clone an already existing response <END>
<BEG> set the status line of the response <END>
<BEG> set the status code of the response <END>
<BEG> expect that the response status code matches an integer <END>
<BEG> expect that a response header matches the supplied name and value <END>
<BEG> specify the default charset for the bodycontent in the request specification <END>
<BEG> specify the default charset for query parameters <END>
<BEG> encodes the content body of the request specified with the given <code>contenttype<code> with the same encoder used by the supplied <code>encoder<code> this is useful only if rest assured picks the wrong <END>
<BEG> specifies if json parsing should use floats and doubles or bigdecimals to represent json numbers <END>
<BEG> specify the default subtype to use if not defined explicitly in when making the multi-part request <END>
<BEG> set the log config <END>
<BEG> uses the user default keystore stored in &lt;user home&gt; keystore <END>
<BEG> make an http request using the default uri, with the given method, content-type, and configuration <END>
<BEG> release any system resources held by this instance <END>
<BEG> convenience method to convert this object to a url instance <END>
<BEG> implementation of groovy's <code>as<code> operator, to allow type conversion <END>
<BEG> get all entities with the supplied name if there's only one entity matching the <code>entityname<code> then <END>
<BEG> checks if the <code>potentialuri<code> is a uri <END>
<BEG> verifies whether samesite attribute of cookie is equal to specified argument <END>
<BEG> evaluates to true if an xml string matches the supplied dtd <END>
<BEG> start building the request part of the test io restassured specification e g <END>
<BEG> add headers to httpurlconnection from clientinvocation should be executed before writing body <END>
<BEG> look up the configured port number, first checking an environment variable resteasy_port , then a system property org jboss resteasy port , and finally the default port 8081 <END>
<BEG> gets provider instances <END>
<BEG> set content-type to applicationx-www-form-urlencoded <END>
<BEG> will not initialize singleton if not set <END>
<BEG> returns an array of annotations the specified method of a resource class <END>
<BEG> returns the element list <END>
<BEG> sets destructuring length this is set by the parser and used <END>
<BEG> used by code generator <END>
<BEG> sets the comment style <END>
<BEG> returns a string of the comment value <END>
<BEG> returns continue target <END>
<BEG> sets target object, and sets its parent to this node <END>
<BEG> called by the parser to set node type to expr_result if this node is not within a function <END>
<BEG> returns object being iterated over <END>
<BEG> sets whether the loop is a for-each loop <END>
<BEG> returns position of in keyword <END>
<BEG> returns function name <END>
<BEG> sets function name, and sets its parent to this node <END>
<BEG> sets whether this is a 1 8 function closure <END>
<BEG> sets if condition <END>
<BEG> returns left paren offset <END>
<BEG> sets initializer object rhino supports an experimental syntax <END>
<BEG> marks this node as a setter property <END>
<BEG> sets the uri, path or descriptive text indicating the origin of this script's source code <END>
<BEG> returns the end offset of the encoded source <END>
<BEG> sets variable list <END>
<BEG> sets the node type and returns this node <END>
<BEG> sets object expression and its parent link <END>
<BEG> sets the statement and sets its parent link <END>
<BEG> sets fragment list, removing any existing fragments first <END>
<BEG> returns the xml string for this component <END>
<BEG> creates a new require function you are still responsible for invoking <END>
<BEG> mozilla sources use the c preprocessor <END>
<BEG> get the class of the top-most stack element representing a script <END>
<BEG> returns whether a property is a getter or a setter <END>
<BEG> sets the parent enclosing scope of the object <END>
<BEG> gets an indexed property from an object or any object in its prototype chain and coerces it to the requested java type <END>
<BEG> sets the scopeprovider to be used <END>
<BEG> returns the sourceinfo object for the given url <END>
<BEG> main entry point creates a debugger attached to a rhino <END>
<BEG> processes the next gui event <END>
<BEG> performs an action from the menu or toolbar <END>
<BEG> get the cached built-in object prototype from this scope with the <END>
<BEG> creates and returns the action to use when the user inserts a newline <END>
<BEG> starts a new jflex state and changes the current language index <END>
<BEG> removes the token last added from the linked list of tokens the <END>
<BEG> returns whether this document range is equal to another one <END>
<BEG> translates this document range by a given amount <END>
<BEG> returns the minimum severity a parser notice must be for it to be displayed in this error strip this will be one of the constants <END>
<BEG> returns whether this file location is a remote location <END>
<BEG> returns whether the token is a right curly brace this method exists <END>
<BEG> adds a mapping from a syntax style to a fold parser the parser <END>
<BEG> returns the color being used to mark occurrences <END>
<BEG> returns whether a border is painted around marked occurrences <END>
<BEG> sets the amount of time it took for this parser to parse the document <END>
<BEG> returns the regular expression used to search for tasks <END>
<BEG> sets whether this parser will use dtd validation if required <END>
<BEG> sets the token maker factory used by this document <END>
<BEG> overridden to add menu items related to cold folding <END>
<BEG> returns the default bracket-match background color <END>
<BEG> returns whether an eol marker should be drawn at the end of each line <END>
<BEG> returns the fold manager for this text area <END>
<BEG> returns whether tab lines are painted <END>
<BEG> returns the number of parsers operating on this text area <END>
<BEG> returns whether the specified token should be underlined <END>
<BEG> sets the mask for the key used to toggle whether we are scanning for hyperlinks with mouse hovering the default value is <END>
<BEG> toggles whether a border should be painted around marked occurrences <END>
<BEG> sets whether whitespace is visible this method fires a property change <END>
<BEG> returns the name to use to cachefetch the shared action map this <END>
<BEG> returns the y-coordinate of the specified line <p> <END>
<BEG> returns the hash code for this template <END>
<BEG> sets the id for this template <END>
<BEG> returns the text that will be placed after the caret <END>
<BEG> returns whether this is a local file that already exists <END>
<BEG> sets whether or not this text area should be treated as read-only <END>
<BEG> returns the next tab stop position after a given reference position <END>
<BEG> returns the singleton instance of this class, lazily creating it if necessary <p> <END>
<BEG> returns the clipboard history, in most-recently-used order <END>
<BEG> returns the font used for line numbers <END>
<BEG> sets whether the icon area inherits the gutter background as opposed to painting with its own, default panel color, which is the default <END>
<BEG> returns the text area using this strategy <END>
<BEG> returns the character in the document at the specified offset <END>
<BEG> returns the name of this action <END>
<BEG> sets the accelerator for this action <END>
<BEG> sets whether or not this action will be recorded and replayed in a macro <END>
<BEG> returns the margin line position which is the number of 'm' widths in the current font the margin line is over <END>
<BEG> sets the color used to paint the margin line <END>
<BEG> creates a ui for an rtextarea <END>
<BEG> returns the text area for which we are the ui <END>
<BEG> returns whether case should be honored while searching <END>
<BEG> returns whether the search should only be done in the selected text <END>
<BEG> sets whether only the selected text should be searched this method <END>
<BEG> returns whether this array contains a given integer this method <END>
<BEG> removes the <code>int<code> at the specified location from this array object <END>
<BEG> construct a disposable by wrapping a runnable that is executed exactly once when the disposable is disposed <END>
<BEG> returns a flowable that automatically connects to this connectableflowable when the first subscriber subscribes <END>
<BEG> sets the resource at the specified index and disposes the old resource <END>
<BEG> block until the latch is counted down then rethrow any exception received wrapped if checked or return the received value null if none <END>
<BEG> signals the given value and an oncomplete if the downstream is ready to receive the final value <END>
<BEG> sets the empty subscription instance on the subscriber and then calls onerror with the supplied error <END>
<BEG> append a non-null value to the list <END>
<BEG> interprets the contents as notificationlite objects and calls the appropriate subscriber method <END>
<BEG> atomically adds the positive value n to the requested value in the atomiclong and caps the result at long max_value and returns the previous value and <END>
<BEG> atomically updates the target upstream atomicreference from null to the non-null next disposable, otherwise disposes next and reports a protocolviolationexception if the atomicreference doesn't contain the shared disposed indicator <END>
<BEG> converts a throwable into a notification value <END>
<BEG> returns a shared list of received onnext values <END>
<BEG> asserts that this testobservertestsubscriber received exactly one onerror event for which the provided predicate returns true <END>
<BEG> assert that this testobservertestsubscriber did not receive an onnext value which is equal to the given value with respect to null-safe object equals <END>
<BEG> asserts that this testobservertestsubscriber received exactly one onnext value for which the provided predicate returns true <END>
<BEG> assert that this testobservertestsubscriber received the specified number onnext events <END>
<BEG> assert that the testobservertestsubscriber has not terminated i e , the terminal latch is still non-zero <END>
<BEG> assert that there is a single error and it has the given message <END>
<BEG> returns a list of 3 other lists: the first inner list contains the plain values received; the second list contains the potential errors and the final list contains the potential completions as notifications <END>
<BEG> assert that the upstream signalled the specified values in order and completed normally <END>
<BEG> set the tag displayed along with an assertion failure's other state information <END>
<BEG> await until the testobservertestsubscriber receives the given number of items or terminates <END>
<BEG> enables or disables the blockingx operators to fail with an illegalstateexception on a non-blocking scheduler such as computation or single <END>
<BEG> allows the scheduler instance to start threads and accept tasks on them <END>
<BEG> instructs the scheduler instance to stop threads and stop accepting tasks on any outstanding workers <END>
<BEG> returns the time value <END>
<BEG> returns the contained time value in the time unit specified <END>
<BEG> subscribes to a single but ignore its emission or notification <END>
<BEG> returns the terminal error if this completablesubject has been terminated with an error, null otherwise <END>
<BEG> returns the success value if this maybesubject was terminated with a success value <END>
<BEG> requests from the upstream subscription <END>
<BEG> trap null-check attempts on primitives <END>
<BEG> assert that the testobservertestsubscriber received only items that are in the specified collection as well, irrespective of the order they were received <END>
<BEG> filters the source values on each 'rail' and <END>
<BEG> initializes this processor by setting an upstream subscription that ignores request amounts, uses a fixed buffer and allows using the onxxx and offer methods afterwards <END>
<BEG> makes sure the item cached by the head node in a bounded replayprocessor is released as it is never part of a replay <END>
<BEG> generates a doublestream that traverses a scala collection <END>
<BEG> creates http breadcrumb <END>
<BEG> returns the breadcrumb's timestamp <END>
<BEG> returns the sentrylevel <END>
<BEG> an optional path of which sentry is hosted <END>
<BEG> returns true if its a snapshot or false otherwise <END>
<BEG> sets an optional value which refers to a thread in the threads interface <END>
<BEG> sets the scope's contexts <END>
<BEG> check if the current hub is enabledactive <END>
<BEG> adds a breadcrumb to the current scope <END>
<BEG> creates a transaction and returns the instance started transaction is set on the scope <END>
<BEG> returns the environment <END>
<BEG> adds an inapp include <END>
<BEG> returns the envelopecache interface <END>
<BEG> returns a proguard uuid <END>
<BEG> ends a session and update its values <END>
<BEG> gets the eventid of the event to which the user feedback is associated <END>
<BEG> gets the name of the user <END>
<BEG> sets the email of the user <END>
<BEG> gets comments of the user about what happened <END>
<BEG> object alignment padding in bytes <END>
<BEG> put a context value the <code>val<code> parameter as identified with the <code>key<code> parameter into the current thread's context map <END>
<BEG> always returns false <END>
<BEG> create a marker which is detached even at birth from the markerfactory <END>
<BEG> put a context value the <code>val<code> parameter as identified with the <code>key<code> parameter into the current thread's context map the <END>
<BEG> returns the mdcadapter instance currently in use <END>
<BEG> perform single parameter substitution before logging the message of level info according to the format outlined above <END>
<BEG> perform single parameter substitution before logging the message of level warn according to the format outlined above <END>
<BEG> perform double parameter substitution before logging the message of level error according to the format outlined above <END>
<BEG> create a new buffer given the initial size hint <END>
<BEG> returns a <code>string<code> representation of the buffer with the <code>utf-8<code>encoding <END>
<BEG> returns the <code>byte<code> at position <code>pos<code> in the buffer <END>
<BEG> returns the unsigned <code>int<code> at position <code>pos<code> in the buffer, as a <code>long<code> <END>
<BEG> sets the <code>long<code> at position <code>pos<code> in the buffer to the value <code>l<code> in the little endian byte order <p> <END>
<BEG> sets the <code>float<code> at position <code>pos<code> in the buffer to the value <code>f<code> <p> <END>
<BEG> returns the buffer as a netty <code>bytebuf<code> <p> <END>
<BEG> sets the priority of the cli <END>
<BEG> gets the raw values of the given argument raw values are simple string , not converted to the argument type <END>
<BEG> checks whether or not the given option accept more values <END>
<BEG> if the context is associated with a verticle deployment, this returns the configuration that was specified when the verticle was deployed <END>
<BEG> is the current context a worker context? <p> <END>
<BEG> get some data from the context <END>
<BEG> returns a <code>writestream<buffer><code> able to send to the <END>
<BEG> returns the protocol for the service being queried i e _tcp <END>
<BEG> returns the service's name i e _http <END>
<BEG> create a message sender against the specified address <END>
<BEG> same as but with an <code>handler<code> called when the operation completes <END>
<BEG> the date the file was last accessed <END>
<BEG> is the file some other type? i e not a directory, regular file or symbolic link <END>
<BEG> the size of the file, in bytes <END>
<BEG> change the permissions on the file represented by <code>path<code> to <code>perms<code>, asynchronously <p> <END>
<BEG> create a hard link on the file system from <code>link<code> to <code>existing<code>, asynchronously <END>
<BEG> unlinks the link on the file system represented by the path <code>link<code>, asynchronously <END>
<BEG> returns the path representing the file that the symbolic link specified by <code>link<code> points to, asynchronously <END>
<BEG> created a succeeded future with the specified result <END>
<BEG> map the result of a future to a specific <code>value<code> <p> <END>
<BEG> sets the path of this cookie <END>
<BEG> sets the security getstatus of this cookie <END>
<BEG> create an http request to send to the server with the specified options <END>
<BEG> create an http get request to send to the server at the default host and port <END>
<BEG> create an http get request to send to the server using an absolute uri <END>
<BEG> create an http post request to send to the server using an absolute uri <END>
<BEG> connect a websocket at the relative request uri using the default host and port <END>
<BEG> create a websocket stream to the specified port, host and relative request uri, with the specified headers and using the specified version of websockets <END>
<BEG> create a websocket stream at the relative request uri using the default host and port, the specified headers and the specified version of websockets <END>
<BEG> send a go away frame to the remote endpoint of the connection <END>
<BEG> call this with true if you are expecting a multi-part body to be submitted in the request <END>
<BEG> when a <code>websocket<code> is created it automatically registers an event handler with the event bus - the id of that handler is given by this method <END>
<BEG> return <code>true<code> if the pointer is local uri with only fragment <END>
<BEG> append an unescaped list of <code>tokens<code> to jsonpointer <br> note: if you provide escaped paths the behaviour is undefined <END>
<BEG> copy a jsonpointer <END>
<BEG> checks to see if there is a value with the specified name <END>
<BEG> when a <code>netsocket<code> is created it automatically registers an event handler with the event bus, the id of that handler is given by <code>writehandlerid<code> <END>
<BEG> delete the private key and certificate files <END>
<BEG> flip the parser to emit a stream of events for each new json object <END>
<BEG> clear all entries in the map <END>
<BEG> provide the number of entries in the map <END>
<BEG> increment the counter atomically and return the new count <END>
<BEG> add the value to the counter atomically and return the new count <END>
<BEG> set the counter to the specified value only if the current value is the expectec value this happens <END>
<BEG> start the pump the pump can be started and stopped multiple times <END>
<BEG> stop the pump the pump can be started and stopped multiple times <END>
<BEG> gets the current context, or creates one if there isn't one <END>
<BEG> create a httphttps client using the specified options <END>
<BEG> get the filesystem object there is a single instance of filesystem per vertx instance <END>
<BEG> returns a one-shot timer as a read stream the timer will be fired after <code>delay<code> milliseconds after <END>
<BEG> return the set of currently registered verticle factories <END>
<BEG> return an exception indicating that the current switch case was intended to be unreachable <END>
<BEG> get the <em>raw value<em> of a configuration property <END>
<BEG> connect a websocket at the relative request uri using the default host and port <p> <END>
<BEG> define max key length to use simple key without '?' more info https:yaml orgspec1 1#id934537 <END>
<BEG> when string contains non-printable characters snakeyaml convert it to binary data with the !!binary tag <END>
<BEG> yaml version the document conforms to <END>
<BEG> allowreject duplicate map keys in the yaml file <END>
<BEG> tag of this node <END>
<BEG> indicates if the tag was added by <END>
<BEG> get the next event and proceed further <END>
<BEG> peek the next index-th code point <END>
<BEG> peek the next length code points <END>
<BEG> return the next token, but do not delete it from the queue <END>
<BEG> get represented type class <END>
<BEG> adds new substitute for property <code>pname<code> parameterized by <code>classes<code> to this <code>typedescription<code> if <END>
<BEG> serialize a sequence of java objects into a yaml string <END>
<BEG> parse all yaml documents in the reader and produce corresponding java objects the documents are parsed only when the iterator is invoked <END>
<BEG> restrict the amount of aliases for collections sequences and mappings to avoid https:en wikipedia orgwikibillion_laughs_attack <END>
<BEG> serialize dump a yaml node into a yaml stream <END>
<BEG> convert the input bit-shuffled byte array into an original int array <END>
<BEG> convert the input bit-shuffled byte array into an original float array <END>
<BEG> sets the default instance to use <END>
<BEG> set command-line arguments, for example -dfoo=true or -xbar old values are dropped <END>
<BEG> install ans start sonarqube <END>
<BEG> removes the license that have been installed with <END>
<BEG> install a plugin before starting sonarqube server location of plugin may be: <END>
<BEG> adds the given paths as sources <END>
<BEG> checks that all assignments are aither a ctfieldwrite, a ctvariablewrite or a ctarraywrite <END>
<BEG> public modifier for testing purpose only, not in the public api <END>
<BEG> returns the type of the property for list&lt;string&gt; field the valuetype is string <END>
<BEG> returns zero, one or more values into `result` the value comes from `parameters` from the location defined by `parameterinfo` <END>
<BEG> finds all target program sub-trees that correspond to a template and calls consumer accept match <END>
<BEG> configures inlined statements for example if the `for` statement in this pattern model <pre><code> for object x : $iterable$ { system out println x ; <END>
<BEG> any named element by it's simple name <END>
<BEG> removes a processed annotation type <END>
<BEG> does nothing in this context <END>
<BEG> override this method to get access to details about this refactoring issue <END>
<BEG> getter for the method, without saved call state returns the ctexecutable and <END>
<BEG> creates a class from its qualified name <END>
<BEG> creates a local variable reference that points to an existing local variable strong referencing <END>
<BEG> remove a type from the list of types to be pretty-printed <END>
<BEG> removes compilation unit from the cache and returns it used by jdtsnippetcompiler to remove processed snippet from the cache <END>
<BEG> creates an empty constructor <END>
<BEG> creates a constructor <END>
<BEG> creates an enum from its qualified name <END>
<BEG> creates a reference to an existing package <END>
<BEG> returns a reference on the boolean primitive type <END>
<BEG> returns a reference on the long type <END>
<BEG> returns a reference on the long primitive type <END>
<BEG> create a reference to a simple type, setting the beginning of its fully qualified name as implicit <END>
<BEG> enabledisable logging for this query note: it is not possible to enable logging of all queries globally by launcher logger isdebugenabled <END>
<BEG> called before query is evaluated again <END>
<BEG> pops the element <END>
<BEG> scans an abstract invocation <END>
<BEG> scans a formal type declarer <END>
<BEG> the listener evens are called in this order: <ol> <li> enter input element <li> return input element <li> enterexit for each super interface of input element recursively <li> call 1-5 recursively where input element is super class of input element <li> exit input element <ol> note: this order is assured and some algorithms already depend on it! <END>
<BEG> returns all the program elements that match the filter starting from the given rootelement <END>
<BEG> within a given factory, returns all the program element references that match the filter <END>
<BEG> get the parent model <END>
<BEG> returns the removed element <END>
<BEG> inserts all statements of `statementstobeinserted` just before `target` <END>
<BEG> search the column number <END>
<BEG> evaluates and converts ctexpression to their equivalent runtime objects eg ctliteral 3 + ctliteral 4 -&gt; 7 <END>
<BEG> tells if the referenced field is static <END>
<BEG> return all executables of this class <END>
<BEG> get parameters in a method to spoon parameters <END>
<BEG> add another super type to this mapping function <END>
<BEG> invoke the advice method <END>
<BEG> the pointcut for spring aop to use actual behaviour of the pointcut will change <END>
<BEG> set the name of the aspect bean this is the bean that is returned when calling <END>
<BEG> set the given object as target <END>
<BEG> set the interfaces to be proxied <END>
<BEG> check equality of the proxies behind the given advisedsupport objects <END>
<BEG> check equality of the proxied interfaces behind the given advisedsupport objects <END>
<BEG> return the prefix for bean names that will cause them to be included for auto-proxying by this object <END>
<BEG> proxy uses the hash code of the targetsource <END>
<BEG> return whether the aop proxy will expose the aop proxy for each invocation <END>
<BEG> return whether the config is frozen, and no advice changes can be made <END>
<BEG> customize the aopproxyfactory, allowing different strategies to be dropped in without changing the core framework <END>
<BEG> return a proxy invoked when clients obtain beans from this factory bean <END>
<BEG> set the template used for method exit log messages <END>
<BEG> set the template used for method exception log messages <END>
<BEG> find the bean name for the current invocation assumes that an exposebeannameadvisor <END>
<BEG> set the regular expressions defining methods to match for exclusion <END>
<BEG> determine whether the given method is a hashcode method <END>
<BEG> can the given advisor apply at all on the given class? this is an important test as it can be used to optimize out a advisor for a class <END>
<BEG> match all classes that <i>either<i> or all of the given classfilters matches <END>
<BEG> apply an intersection with the given pointcut <END>
<BEG> set the method names defining methods to match <END>
<BEG> add another eligible method name, in addition to those already named <END>
<BEG> copy configuration from the other abstractbeanfactorybasedtargetsource object <END>
<BEG> set the maximum number of idle objects in the pool <END>
<BEG> return the maximum waiting time for fetching an object from the pool <END>
<BEG> set whether the call should bock when the pool is exhausted <END>
<BEG> return the name of the aspect bean in which the advice was declared <END>
<BEG> get the last component of the path also works if not nested <END>
<BEG> add the given beanmetadataattribute to this accessor's set of attributes <END>
<BEG> instantiate a class using its no-arg constructor and return the new instance as the the specified assignable type <END>
<BEG> return whether this represents an actual autowiring value <END>
<BEG> set the boolean value that marks a dependency as required <p>for example if using 'required=true' the default , <END>
<BEG> register custom qualifier annotation types to be considered when autowiring beans each element of the provided set may <END>
<BEG> checks whether the given annotation type is a recognized qualifier type <END>
<BEG> return the related causes, if any <END>
<BEG> return the description of the resource that the bean definition came from <END>
<BEG> obtain a bean type converter from the beanfactory that this bean runs in this is typically a fresh instance for each call, <END>
<BEG> destroy the singleton instance, if any <END>
<BEG> callback for destroying a singleton instance subclasses may <END>
<BEG> add an argument value for the given index in the constructor argument list <END>
<BEG> check whether an argument value has been registered for the given index <END>
<BEG> return the wrapped field, if any <END>
<BEG> increase this descriptor's nesting level <END>
<BEG> return whether a fallback match is allowed <END>
<BEG> return a variant of this descriptor that is intended for a fallback match <END>
<BEG> actually write to the underlying log <END>
<BEG> set the name of the field to be retrieved <END>
<BEG> only necessary to check that we're not parsing our own bean definition, to avoid failing on unresolvable placeholders in properties file locations <END>
<BEG> this implementation tries to resolve placeholders as keys first in the user preferences, then in the system preferences, then in the passed-in properties <END>
<BEG> specify the name of a target bean to apply the property path to <END>
<BEG> while this factorybean will often be used for singleton targets, the invoked getters for the property path might return a new object for each call, so we have to assume that we're not returning the <END>
<BEG> set the order value of this object for sorting purposes <END>
<BEG> set the service locator interface to use, which must have one or more methods with <END>
<BEG> set the exception class that the service locator should throw if service lookup failed the specified exception class must have a constructor <END>
<BEG> return whether this typed string value carries a target type <END>
<BEG> flag indicating that a document for which all the <END>
<BEG> set the binding, i e the groovy variables available in the scope <END>
<BEG> when a method argument is only a closure it is a set of bean definitions <END>
<BEG> return the nested components that this composite component holds <END>
<BEG> return the dependency check code <END>
<BEG> set whether this bean is a primary autowire candidate <END>
<BEG> return whether this bean is a primary autowire candidate <END>
<BEG> return all registered qualifiers <END>
<BEG> return the list of beanpostprocessors that will get applied to beans created with this factory <END>
<BEG> return whether the specified prototype bean is currently in creation within the current thread <END>
<BEG> initialize the given propertyeditorregistry with the custom editors that have been registered with this beanfactory <END>
<BEG> remove the merged bean definition for the specified bean, recreating it on next access <END>
<BEG> set the scope of this definition <END>
<BEG> this implementation compares the underlying beandefinition <END>
<BEG> resolve the target type in the given typedstringvalue <END>
<BEG> specify an id for serialization purposes, allowing this beanfactory to be deserialized from this id back into the beanfactory object, if needed <END>
<BEG> return the priority assigned for the given bean instance by <END>
<BEG> remove the bean with the given name from the singleton cache of this factory, to be able to clean up eager registration of a singleton if creation failed <END>
<BEG> determine whether a dependent bean has been registered for the given name <END>
<BEG> return the names of all beans which depend on the specified bean, if any <END>
<BEG> obtain an object to expose from the given factorybean, if available in cached form quick check for minimal synchronization <END>
<BEG> get a factorybean for the given bean if possible <END>
<BEG> returns the security context for this bean factory if a security manager <END>
<BEG> set the default element type name class name to be used for this list <END>
<BEG> return whether the overridden method is <em>overloaded<em> i e , whether argument <END>
<BEG> return whether the set of method overrides is empty <END>
<BEG> register bean definitions contained in a map <END>
<BEG> add a new singleton bean <END>
<BEG> extract a javabean property name from the supplied attribute name <END>
<BEG> parse constructor-arg sub-elements of the given bean element <END>
<BEG> parse property sub-elements of the given bean element <END>
<BEG> parse qualifier sub-elements of the given bean element <END>
<BEG> parse lookup-override sub-elements of the given bean element <END>
<BEG> set the default merge setting for the document that's currently parsed <END>
<BEG> return the default dependency-check setting for the document that's currently parsed <END>
<BEG> return the default init-method setting for the document that's currently parsed <END>
<BEG> return the default destroy-method setting for the document that's currently parsed <END>
<BEG> load bean definitions from the specified xml file <END>
<BEG> actually load the specified document using the configured documentloader <END>
<BEG> lazily create a default namespacehandlerresolver, if not set before <END>
<BEG> return the name of the offending property <END>
<BEG> copy all given propertyvalues into this object guarantees propertyvalue <END>
<BEG> mark this holder as containing converted values only i e no runtime resolution needed anymore <END>
<BEG> determine the canonical names for the given property paths <END>
<BEG> copy the custom editors registered in this instance to the given target registry <END>
<BEG> format the date as string, using the specified dateformat <END>
<BEG> convert the given text value to a map with a single element <END>
<BEG> return whether to always create a new map, even if the type of the passed-in map already matches <END>
<BEG> coerce a number value into the required target class, if necessary <END>
<BEG> create propertymatches for the given field property <END>
<BEG> return the sort definition for this holder <END>
<BEG> set the current page size <END>
<BEG> return the maximum number of page links to a few pages around the current one <END>
<BEG> return if the current page is the last one <END>
<BEG> check if the given type represents a simple value type: a primitive or primitive wrapper, an enum, a string or other charsequence, a number, a date, a temporal, a uri, a url, a locale, or a class <END>
<BEG> return the corresponding bean instance <END>
<BEG> return the type declared by the underlying field or methodconstructor parameter, indicating the injection type <END>
<BEG> fire a component-registered event <END>
<BEG> apply instantiationawarebeanpostprocessors to the specified bean definition <END>
<BEG> return the name of the default initializer method <END>
<BEG> set the name of the default destroy method <END>
<BEG> return the name of the default destroy method <END>
<BEG> return the newly registered bean definition <END>
<BEG> determine preferred constructors to use for default construction, if any <END>
<BEG> return the defaults definition object <END>
<BEG> return whether this is an optional value, that is, to be ignored when no corresponding property exists on the target class <END>
<BEG> return the primary constructor of the provided class for kotlin classes, this <END>
<BEG> check whether the given method or field is an externally managed configuration member <END>
<BEG> check whether the given method name indicates an externally managed initialization method <END>
<BEG> explicitly set the context class to be used <END>
<BEG> flag to indicate the startup information should be logged <END>
<BEG> sets if the application is headless and should not instantiate awt defaults to <END>
<BEG> fixes the main application class that is used to anchor the startup messages <END>
<BEG> bean name generator for automatically generated bean names in the application context <END>
<BEG> return the name of the configuration property being bound <END>
<BEG> return the reason why the value is invalid <END>
<BEG> add converters useful for most spring boot applications <END>
<BEG> return the cause type being handled by the analyzer by default the class generic <END>
<BEG> returns a description of the failure <END>
<BEG> specifies how long should a normal shutdown no-force wait for transactions to <END>
<BEG> return any spring specific initialization config that should be applied by default <END>
<BEG> creates a new instance of the class required by log4j2 <END>
<BEG> returns the underlying source used to find the home directory this is usually the <END>
<BEG> add a default header that will be set if not already present on the outgoing <END>
<BEG> returns a mutable set of the patterns that match jars to ignore for tld scanning <END>
<BEG> set the patterns that match jars to ignore for tld scanning see tomcat's <END>
<BEG> returns access to the underlying tomcat server <END>
<BEG> set whether filters should be initialized eagerly <END>
<BEG> set the charset used for reading mustache template files <END>
<BEG> return whether response compression is enabled <END>
<BEG> remove an existing mapping <END>
<BEG> returns the port that was in use <END>
<BEG> perform an action if the given exception was caused by a specific exception type <END>
<BEG> return the password used to access the key store <END>
<BEG> add servlet names for the filter <END>
<BEG> return if filter mappings should be matched after any declared filter mappings of the servletcontext <END>
<BEG> deduces the name for this registration will return user specified name or fallback <END>
<BEG> sets the directory location where files will be stored <END>
<BEG> return the directory used to store session data <END>
<BEG> return the accepted profiles <END>
<BEG> called after the context has been refreshed <END>
<BEG> register that the given exception has been logged by default, if the running in <END>
<BEG> returns the main application class that has been deduced or explicitly configured <END>
<BEG> set a specific main application class that will be used as a log source and to obtain version information by default the main application class will be deduced <END>
<BEG> returns a mutable set of the sources that will be added to an applicationcontext <END>
<BEG> prefix that should be applied when obtaining configuration properties from the system environment <END>
<BEG> set the prefix that should be applied when obtaining configuration properties from the system environment <END>
<BEG> initializes the database by applying schema and data scripts <END>
<BEG> sets the locations of schema ddl scripts to apply to the database by default, <END>
<BEG> sets the locations of data dml scripts to apply to the database by default, <END>
<BEG> handle any invalid excludes that have been specified <END>
<BEG> return the inverse of the specified condition outcome <END>
<BEG> set the resource loader <END>
<BEG> provide a unique name specific to this instance calling this method several times <END>
<BEG> determine if this template location exists using the specified <END>
<BEG> add item meta-data <END>
<BEG> determine if any agent reloader is active <END>
<BEG> return the size of the collection <END>
<BEG> return the payload as a hexadecimal string <END>
<BEG> write a simple index file containing the specified utf-8 lines <END>
<BEG> find the main class from a given directory <END>
<BEG> find a single main class in a given jar file a main class annotated with an <END>
<BEG> repackage to the given destination so that it can be launched using ' <END>
<BEG> verifies that the application context or ancestors does not contain any beans of the given type <END>
<BEG> obtain a map bean names and instances of the given type from the application context or ancestors , the map becoming the object under test if no bean of the <END>
<BEG> initialize the marshal tester for use <END>
<BEG> return the type under test <END>
<BEG> verify that the actual value at the given json path produces a non-null array result <END>
<BEG> return the actual object content <END>
<BEG> builder method to add more properties <END>
<BEG> add the properties from the underlying map to the environment the default property <END>
<BEG> retrieve a representation by doing a get on the url the response if any is <END>
<BEG> retrieve a representation by doing a get on the url the response is converted and <END>
<BEG> return the id of the given entity delegates to <END>
<BEG> create a new concurrentmapcache instance for the specified cache name <END>
<BEG> determine the caching attribute for this method invocation <END>
<BEG> set the cache operation attribute source which is used to find cache attributes this should usually be identical to the source reference <END>
<BEG> specify the cachemanagers to delegate to <END>
<BEG> this implementation resolves the type of annotation from generic metadata and validates that a the annotation is in fact present on the importing <END>
<BEG> return the configuration classes that imported this class, or an empty set if this configuration was not imported <END>
<BEG> loads the specified class and generates a cglib subclass of it equipped with container-aware callbacks capable of respecting scoping and other bean semantics <END>
<BEG> set a friendly name for this context <END>
<BEG> return this context's internal bean factory as autowirecapablebeanfactory, if already available <END>
<BEG> return the timestamp ms when this context was first loaded <END>
<BEG> return the list of beanfactorypostprocessors that will get applied to the internal beanfactory <END>
<BEG> return whether to use the message code as default message instead of throwing a nosuchmessageexception useful for development and debugging <END>
<BEG> overridden to turn it into a no-op: with abstractrefreshableapplicationcontext, <END>
<BEG> determine whether this application object needs to run in an applicationcontext <END>
<BEG> return a messagesourceaccessor for the application context used by this object, for easy message access <END>
<BEG> set a resourceloader to use for this context if set, the context will <END>
<BEG> returns the property sources that were actually applied during <END>
<BEG> set the number of seconds to cache loaded properties files <END>
<BEG> load the properties from the given resource <END>
<BEG> refresh the ejb home object and retry the given invocation <END>
<BEG> actually autowire the target bean after constructionpassivation <END>
<BEG> determine the beanfactoryreference for the given target bean <END>
<BEG> set the timezone to normalize the date values into, if any <END>
<BEG> specify whether or not parsing is to be lenient default is false <END>
<BEG> set the date formatter to register if not specified no formatter is registered <END>
<BEG> set the formatter that will be used for objects representing date values <END>
<BEG> return the datetimecontext associated with the current thread, if any <END>
<BEG> indicate whether default formatters should be registered or not <END>
<BEG> determine whether the specified class is eligible for shadowing by this class loader <END>
<BEG> add a class file transformer to be applied by this weaver <END>
<BEG> specify the default domain to be used for generating objectnames when no source-level metadata has been specified <END>
<BEG> set the array of method names to use for creating the management info <END>
<BEG> set whether to autodetect mbeans in the bean factory that this exporter <END>
<BEG> specify whether to allow eager initialization of candidate beans when autodetecting mbeans in the spring application context <END>
<BEG> set the list of names for beans that should be excluded from autodetection <END>
<BEG> return a description for this attribute <END>
<BEG> return a currency time limit for this attribute <END>
<BEG> set the default value of this attribute <END>
<BEG> the category of this metric ex throughput, performance, utilization <END>
<BEG> set a list of notification types <END>
<BEG> return a description for this notification <END>
<BEG> return whether the lookup occurs in a j2ee container <END>
<BEG> execute the given jndi context callback implementation <END>
<BEG> look up the object with the given name in the current jndi context <END>
<BEG> return the actual type that the lookup returned, if available <END>
<BEG> set whether to cache the rmi stub once it has been located <END>
<BEG> set whether to always create the registry in-process, not attempting to locate an existing registry at the specified port <END>
<BEG> return a short name for this exporter <END>
<BEG> set the remoteinvocationexecutor to use for this exporter <END>
<BEG> reset the original thread context classloader if necessary <END>
<BEG> set the 'async' annotation type <END>
<BEG> set the 'async' annotation type to be detected at either class or method <END>
<BEG> create a new async result which exposes the given exception as an <END>
<BEG> return the time unit for the delay and period values <END>
<BEG> return whether to schedule as fixed-rate execution <END>
<BEG> add a runnable task to be triggered with the given fixed delay <END>
<BEG> build a message for an invocation failure exception <END>
<BEG> return the name of the bound object <END>
<BEG> bind the given property values to this binder's target <END>
<BEG> execute the underlying operation typically in case of cache miss and return the result of the invocation if an exception occurs it will be wrapped in a <END>
<BEG> set a shared default time zone at the framework level, as an alternative to the jvm-wide default time zone <END>
<BEG> return the property sources that were actually applied during <END>
<BEG> set whether the lookup occurs in a java ee container, i e if the prefix <END>
<BEG> sort the given list with a default annotationawareordercomparator <END>
<BEG> create the most appropriate collection for the given collection type <END>
<BEG> return a constant value cast to a number <END>
<BEG> return the target type that was requested to convert to <END>
<BEG> returns true if an object of this type descriptor can be assigned to the location described by the given type descriptor <END>
<BEG> add a package name to exclude from decoration e g overriding <END>
<BEG> return the set of default profiles explicitly set via <END>
<BEG> specify the separating character between the placeholders replaced by this <END>
<BEG> replace the property source with the given name with the given property source object <END>
<BEG> determine the generic element type of the given collection class if it declares one through a generic superclass or generic interface <END>
<BEG> this implementation checks the timestamp of the underlying file, if available <END>
<BEG> this implementation returns a url for the underlying class path resource, if available <END>
<BEG> this implementation returns whether the underlying file exists <END>
<BEG> this implementation returns the underlying file's length <END>
<BEG> this implementation returns the name of the file <END>
<BEG> this implementation returns a description that includes the absolute path of the file <END>
<BEG> this implementation compares the underlying file references <END>
<BEG> this implementation returns the hash code of the underlying file reference <END>
<BEG> this implementation opens a inputstream for the underlying file <END>
<BEG> this implementation compares the underlying path references <END>
<BEG> resolve the given path, replacing placeholders with corresponding <END>
<BEG> return whether the given resource handle indicates a jar resource <END>
<BEG> set whether local properties override properties from files <END>
<BEG> load all properties from the specified class path resource in iso-8859-1 encoding , using the given class loader <END>
<BEG> load the fully qualified class names of factory implementations of the <END>
<BEG> this implementation returns the hash code of the underlying url reference <END>
<BEG> return the wrapped constructor, if any <END>
<BEG> increase this parameter's nesting level <END>
<BEG> determine the order value for the given object <END>
<BEG> find an order value indicated by the given object <END>
<BEG> determine whether the specified class is eligible for overriding by this class loader <END>
<BEG> add a further parameternamediscoverer to the list of discoverers that this prioritizedparameternamediscoverer checks <END>
<BEG> retrieve the flag for the given property key <END>
<BEG> return the valuestyler used by this tostringstyler <END>
<BEG> append a integer field value <END>
<BEG> executes the given task, within a concurrency throttle if configured through the superclass's settings <END>
<BEG> return the underlying method <END>
<BEG> specify whether to trim tokenized paths and patterns <END>
<BEG> given a pattern and a full path, determine the pattern-mapped part <p>for example: <ul> <END>
<BEG> the initial interval in milliseconds <END>
<BEG> base64-decode the given byte array from an utf-8 string using the rfc 4648 url and filename safe alphabet <END>
<BEG> determine the name of the class file, relative to the containing package: e g string class <END>
<BEG> determine if the given type is assignable from the given value, assuming setting by reflection considers primitive wrapper classes <END>
<BEG> convert a -based resource path to a -based fully qualified class name <END>
<BEG> invert the sort order: ascending -> descending or descending -> ascending <END>
<BEG> set the priority of the threads that this factory creates <END>
<BEG> calculate the md5 digest of the given bytes <END>
<BEG> write the buffers content to the given outputstream <END>
<BEG> initialize log4j from the given file location, with no config file refreshing <END>
<BEG> return the target object on which to call the target method <END>
<BEG> determine whether the given array is empty: <END>
<BEG> make the given field accessible, explicitly setting it accessible if <END>
<BEG> get all declared methods on the leaf class and all superclasses <END>
<BEG> determine whether the given url points to a resource in the file system, that is, has protocol file , vfsfile or vfs <END>
<BEG> update the message digest with the rest of the bytes in this stream <END>
<BEG> select the first directly declared annotation when possible if no direct <END>
<BEG> create a new synthesizingmethodparameter for the given method or constructor <END>
<BEG> configure a limit on the number of bytes that can be buffered whenever the input stream needs to be aggregated this can be a result of <END>
<BEG> set an alternative logger to use than the one based on the class name <END>
<BEG> return the currently configured logger <END>
<BEG> add common collection converters <END>
<BEG> this implementation creates a pathresource, applying the given path relative to the path of the underlying file of this resource descriptor <END>
<BEG> log a message with trace log level <END>
<BEG> log an error with trace log level <END>
<BEG> this will be called by the logging provider, potentially once per log target therefore locally caching the result here <END>
<BEG> adapt from the given reactive streams publisher <END>
<BEG> descriptor for a reactive type that can produce 0 1 values <END>
<BEG> assert that the given string contains valid text content; that is, it must not <END>
<BEG> return a decorator for the given comparator which accepts null values and sorts them higher than non-null values <END>
<BEG> +xml if iswildcardsubtype || other iswildcardsubtype { <END>
<BEG> invoke the given callback on all locally declared fields in the given class <END>
<BEG> start a named task <END>
<BEG> get the time taken by the last task in milliseconds <END>
<BEG> generate a string with a table describing all tasks performed <END>
<BEG> copy a range of content of the given inputstream to the given outputstream <END>
<BEG> return the number of megabytes in this instance <END>
<BEG> attempt to convert a typed value to a byte using the supplied type converter <END>
<BEG> produce a nice string for a given class object <END>
<BEG> returns a boolean based on whether a value is in the range expressed the first <END>
<BEG> return the set of methods for this type the default implementation returns the <END>
<BEG> find a setter method for the specified property <END>
<BEG> return the method suffixes for a given property name the default implementation <END>
<BEG> return the message inserts <END>
<BEG> create a new data-binding property accessor for read-only operations <END>
<BEG> request that an attempt is made to compile the specified expression <END>
<BEG> sets the patternvariable of this instanceof expression <END>
<BEG> returns the java element corresponding to the given resource, or <code>null<code> if unable to associate the given resource with a java element <END>
<BEG> this is a helper method, which returns the resolved classpath entry denoted by a given entry if it is a variable entry it is obtained by resolving the variable <END>
<BEG> resolve a variable path helper method <END>
<BEG> returns a dirtied, writable version of this chunk whose identity won't change until the write lock is released <END>
<BEG> returns the number of bytes that can fit in the payload of the given number of chunks <END>
<BEG> attaches the addresses collected by the receiver to the given exception <END>
<BEG> returns the declaring type as reported by the type's generic signature <END>
<BEG> returns the record size for a rawgrowablesize with the given number of inline records <END>
<BEG> rounds the one number up to the nearest multiple of another <END>
<BEG> sets the line separator used by this evaluation context <END>
<BEG> sets the query to be used for finding a user's authorities by their username for <END>
<BEG> populates the users that have been added <END>
<BEG> allows configuring exception handling this is automatically applied when using <END>
<BEG> configures authentication support using an saml 2 0 service provider <br> <END>
<BEG> controls debugging support for spring security <END>
<BEG> creates the spring security filter chain <END>
<BEG> <p> specifies the url to send users to if login is required if used with <END>
<BEG> sets the authentication filter <END>
<BEG> gets the url to submit an authentication request to i e where usernamepassword <END>
<BEG> updates the default values for authentication <END>
<BEG> <strong>note this is not comprehensive xss protection!<strong> <p> <END>
<BEG> the url to redirect to after logout has occurred the default is login?logout <END>
<BEG> configures the oauth 2 0 authorization code grant <END>
<BEG> method that is suitable for user with traditional aspectj-code aspects <END>
<BEG> this implementation supports any type of class, because it does not query the presented secure object <END>
<BEG> if the callback passed to the 'handle' method is an instance of passwordcallback, the jaaspasswordcallbackhandler will call, callback setpassword authentication getcredentials tostring <END>
<BEG> explicitly clears the context value from the current thread <END>
<BEG> loads authorities by executing the sql from <tt>groupauthoritiesbyusernamequery<tt> <END>
<BEG> get the bytes of the string in utf-8 encoded form <END>
<BEG> returns the client secret <END>
<BEG> the request cache to use to save the request before sending a redirect <END>
<BEG> returns the time at which the token was issued <END>
<BEG> if this property is set, the current request will be checked for this a parameter with this name and the value used as the target url if present <END>
<BEG> allows overriding of the behaviour when redirecting to a target url <END>
<BEG> requires the request to be passed in <END>
<BEG> defines whether an exception should be raised if the principal header is missing <END>
<BEG> template implementation which locates the spring security cookie, decodes it into a delimited array of tokens and submits it to subclasses for processing via the <tt>processautologincookie<tt> method <END>
<BEG> getter for the session id before it was changed <END>
<BEG> if set to <tt>true<tt>, performs a forward to the failure destination url instead of a redirect defaults to <tt>false<tt> <END>
<BEG> set the matcher to respond to exit user processing <END>
<BEG> returns the original user associated with a successful user switch <END>
<BEG> sets the parameter name which will be used to obtain the password from the login request <END>
<BEG> indicates the url that the user agent used for this request <END>
<BEG> <p> determines if a backslash or a url encoded backslash %5c should be allowed in the path or not the default is not to allow this behavior because it is a frequent <END>
<BEG> if the parameter is available from the wrapped request then the request has been forwardedincluded to a url with parameters, either supplementing or overriding the saved request values <END>
<BEG> sets the failure handler used when authentication fails the default is to prompt <END>
<BEG> sets the parameter name <END>
<BEG> sets the header name <END>
<BEG> sets the cookie domain <END>
<BEG> subclasses can override this methode if they want to use a different el root context <END>
<BEG> return the headers <END>
<BEG> return whether this request is still active that is, not completed yet <END>
<BEG> invalidate this request, clearing its state <END>
<BEG> the implementation of this servlet 3 1+ method calls <END>
<BEG> lazily initialize the target writer <END>
<BEG> get the resource locations that were declared via <END>
<BEG> convenience method for counting the rows in the given table, using the <END>
<BEG> convenience method for deleting all rows from the specified tables <END>
<BEG> convenience method for deleting all rows from the given table, using the <END>
<BEG> check whether the test is enabled in the current execution environment <END>
<BEG> generate the default classpath resource locations array based on the supplied class <END>
<BEG> determine whether the current test-managed transaction has been <END>
<BEG> determine whether or not to rollback transactions for the supplied <END>
<BEG> parse the request body and the given string as xml and assert that the two are similar - i e they contain the same elements and attributes <END>
<BEG> evaluate the json path expression against the request content and assert that a value does not exist at the given path <END>
<BEG> assert request query parameter values <END>
<BEG> access to request body matchers <END>
<BEG> apply the xpath and assert the number of nodes found with the given <END>
<BEG> apply the xpath and assert the number found with the given matcher <END>
<BEG> compare each individual entry in a list, without first sorting the lists <END>
<BEG> expect a last-modified header with the given value <END>
<BEG> consume the result of the jsonpath evaluation and provide a target class <END>
<BEG> assert the response status code is in the 5xx range <END>
<BEG> consume the response status value as an integer <END>
<BEG> specify the portion of the requesturi that represents the path to which the servlet is mapped this is typically a portion of the requesturi <END>
<BEG> set a session attribute <END>
<BEG> assert the servletresponse content type after parsing it as a mediatype <END>
<BEG> assert the servletresponse content type is compatible with the given <END>
<BEG> assert a cookie exists the existence check is irrespective of whether <END>
<BEG> assert a cookie's maxage <END>
<BEG> assert that the named response header does not exist <END>
<BEG> assert the primary value of the named response header parsed into a date using the preferred date format described in rfc 7231 <END>
<BEG> evaluate the json path expression against the response content and <END>
<BEG> evaluate the json path expression against the response content and assert that the result is equal to the supplied value <END>
<BEG> asserts the request was forwarded to the given url <END>
<BEG> asserts the request was forwarded to the given url template <END>
<BEG> asserts the request was redirected to the given url template <END>
<BEG> access to response body assertions <END>
<BEG> assert the model has no errors <END>
<BEG> set the message converters to use in argument resolvers and in return value handlers, which support reading andor writing to the body of the request and response if no message converters are added to the list, a default <END>
<BEG> provide a conversion service with custom formatters and converters <END>
<BEG> whether to use suffix pattern match when matching patterns to <END>
<BEG> hook for preparing a test instance prior to execution of any individual test methods &mdash; for example, to inject dependencies <END>
<BEG> expect that the cookie with the given name is present <END>
<BEG> expect a header with the given name to match the given long value <END>
<BEG> add a no-cache directive <END>
<BEG> add a part where the object may be: <ul> <li>string -- form field <END>
<BEG> return the request factory that this accessor uses for obtaining client request handles <END>
<BEG> get the request initializers that this accessor uses <END>
<BEG> get the request interceptors that this accessor uses <END>
<BEG> set the max number of bytes for input form data as form data is buffered <END>
<BEG> initialize a codec and add it to the list <END>
<BEG> return an empty content disposition <END>
<BEG> add a message body converter such a converter is used to convert objects <END>
<BEG> define if a wrapper will be used for indexed list, array properties or not by <END>
<BEG> specify features to enable <END>
<BEG> set the length of the body in bytes, as specified by the <END>
<BEG> parse the given list of potentially comma-separated strings into a <END>
<BEG> create an http put builder with the given url <END>
<BEG> set the timeout to use when waiting for a reply from the hessian service <END>
<BEG> create an objectinputstream for the given inputstream and codebase <END>
<BEG> set the codebase url to download classes from if not found locally <END>
<BEG> specify the binding type to use, overriding the value of <END>
<BEG> stops all published endpoints, taking the web services offline <END>
<BEG> return the soap action uri to specify on the stub <END>
<BEG> return the interface of the service that this factory should create a proxy for <END>
<BEG> return the bean classloader to use for this interceptor <END>
<BEG> initialize the jax-ws port for this interceptor <END>
<BEG> return the url of the wsdl document that describes the service <END>
<BEG> invoked by spring to inject the servletcontext <END>
<BEG> return the method parameter bound to the matrix variable <END>
<BEG> get a double parameter, with a fallback value never throws an exception <END>
<BEG> calculate the attribute name in the backend session <END>
<BEG> specify a prefix that can be used for parameters that mark potentially empty fields, having prefix + field as name such a marker parameter is <END>
<BEG> set whether to bind empty multipartfile parameters default is true <END>
<BEG> return the asynctaskexecutor to use for concurrent handling, <END>
<BEG> return the requestattributes currently bound to the thread <END>
<BEG> set the servletcontext that this webapplicationcontext runs in <END>
<BEG> load the bean definitions with the given groovybeandefinitionreader <END>
<BEG> return the servletcontext for this resource <END>
<BEG> this implementation supports file paths beneath the root of the web application <END>
<BEG> set whether the request payload body should be included in the log message <END>
<BEG> set the value that should be prepended to the log message written <i>after<i> a request is processed <END>
<BEG> create a log message for the given request, prefix and suffix <END>
<BEG> stores the servletcontext that the bean factory runs in <END>
<BEG> initialize the beanwrapper for this genericfilterbean, possibly with custom editors <END>
<BEG> returns false so that the filter may set up the request context in each asynchronously dispatched thread <END>
<BEG> return the list of supported media types <END>
<BEG> retrieve the spring beanfactory to delegate bean name resolution to <END>
<BEG> retrieve the web application context to delegate bean name resolution to <END>
<BEG> this method returns the type of the handler for this handler method <END>
<BEG> return the handlermethod from which this handlermethod instance was <END>
<BEG> by default the content of the default model is used both during rendering and redirect scenarios alternatively controller methods <END>
<BEG> set a view object to be used by the dispatcherservlet <END>
<BEG> return the model to use -- either the default or the redirect model <END>
<BEG> return the configured http status, if any <END>
<BEG> programmatically register an attribute for which data binding should not occur, <END>
<BEG> whether the request has been handled fully within the handler <END>
<BEG> set the default character encoding to use for parsing requests, to be applied to headers of individual parts and to form fields <END>
<BEG> lazily initialize the multipart request, if possible <END>
<BEG> set the bean name of the multipartresolver to fetch from spring's root application context default is filtermultipartresolver <END>
<BEG> refresh the given application context, if necessary <END>
<BEG> whether the request has any forwarded headers <END>
<BEG> determine the http status implied by the given exception <END>
<BEG> configure supported locales to check against the requested locales <END>
<BEG> return the maximum number of sessions that can be stored <END>
<BEG> remove the cookie that this generator describes from the response <END>
<BEG> whether path pattern matching should be case-sensitive <END>
<BEG> create a uri components builder from the given http url string <END>
<BEG> set or append individual uri components of this builder from the values <END>
<BEG> return the names of the variables in the template, in order <END>
<BEG> check if a specific input type= submit parameter was sent in the request, either via a button directly with name or via an image name + x or <END>
<BEG> slices the given buffer to the given index exclusive <END>
<BEG> slices the given buffer from the given index inclusive <END>
<BEG> reset and initialize typed writers and object writers <END>
<BEG> determine the media types for the given file name, if possible <END>
<BEG> create an http get builder with the given string base uri template <END>
<BEG> create an http delete builder with the given string base uri template <END>
<BEG> initialize the data binder instance for the given exchange <END>
<BEG> add a resource resolver to the chain <END>
<BEG> set default views associated with any view name and selected based on the best match for the requested content type <END>
<BEG> override to configure path matching options <END>
<BEG> configure view resolution for supporting template engines <END>
<BEG> set the order for this result handler relative to others <END>
<BEG> set whether to lazily initialize handlers only applicable to <END>
<BEG> return the contained produces expressions <END>
<BEG> return the contained producible media types excluding negated expressions <END>
<BEG> look up the best-matching handler method for the current request <END>
<BEG> configure the registry for adapting various reactive types <END>
<BEG> return the resolved error messages for the field or object, if any returns an empty array instead of null if none <END>
<BEG> return an error message string, concatenating all messages separated by the given delimiter <END>
<BEG> return the errors instance typically a bindingresult that this bind status is currently associated with <END>
<BEG> set a pre-configured configuration to use for the freemarker web config, e g a shared one for web and email usage if this is not set, <END>
<BEG> this implementation registers an additional classtemplateloader for the spring-provided macros, added to the end of the list <END>
<BEG> whether the query string of the current url is appended to the redirect url <END>
<BEG> return a context-aware url for the given relative url <END>
<BEG> retrieve the errors instance for the given bind object, using the defaulthtmlescape setting <END>
<BEG> create a bindstatus for the given bind object, using the defaulthtmlescape setting <END>
<BEG> specify the order value for this viewresolver bean <END>
<BEG> return the id of the underlying netty channel <END>
<BEG> the list of allowed origins that be specific origins, e g <END>
<BEG> enable forwarding to the default servlet identified by the given name <END>
<BEG> a pathmatcher implementation to use with this interceptor this is an optional, <END>
<BEG> specify an order position to be used default is 0 <END>
<BEG> specify the cache period for the resources served by the resource handler, in seconds the default is to not <END>
<BEG> map a view controller to the given url path or pattern in order to redirect to another url by default the redirect url is expected to be relative to <END>
<BEG> protected method for plugging in a custom subclass of <END>
<BEG> initialize the strategy objects that this servlet uses <END>
<BEG> return the default strategy object for the given strategy interface <END>
<BEG> no handler found -> set appropriate http response status <END>
<BEG> provide a request parameter identifying the request for this flashmap <END>
<BEG> set the context config location explicitly, instead of relying on the default location built from the namespace this location string can consist of <END>
<BEG> set whether this servlet should publish a servletrequesthandledevent at the end of each request default is true ; can be turned off for a slight performance <END>
<BEG> instantiate the webapplicationcontext for this servlet, either a default <END>
<BEG> build a log message for the given exception, occurred during processing the given request <END>
<BEG> prevents the response from being cached, through setting corresponding <END>
<BEG> return the default handler for this handler mapping, <END>
<BEG> return the handler methods for the given mapping name <END>
<BEG> set the name of the model attribute as which the exception should be exposed <END>
<BEG> return the depth to the superclass matching <END>
<BEG> determine the http status code to apply for the given error view <END>
<BEG> return a modelandview for the given request, view name and exception <END>
<BEG> return whether to reject cookies with invalid content e g invalid format <END>
<BEG> determine the default locale for the given request, called if no locale session attribute has been found <END>
<BEG> determine the default time zone for the given request, called if no timezone session attribute has been found <END>
<BEG> set the http status to use for the response <END>
<BEG> return whether this modelandview object is empty, i e whether it does not hold any view and does not contain a model <END>
<BEG> obtain a value from the request that may be used to instantiate the model attribute through type conversion from string to the target type <END>
<BEG> set a view name for the modelandview to return, to be resolved by the dispatcherservlet via a viewresolver will override any pre-existing <END>
<BEG> set a view object for the modelandview to return <END>
<BEG> destroy the wrapped servlet instance <END>
<BEG> return the underlying httpservletrequest only intended for cooperating classes in this package <END>
<BEG> determine the fallback locale for this context <END>
<BEG> return the themesource that has been bound to the request by the dispatcherservlet <END>
<BEG> retrieves the current theme from the given request, using the themeresolver and themesource bound to the request by the dispatcherservlet <END>
<BEG> prepare a builder from the host, port, scheme, and context path of the given httpservletrequest <END>
<BEG> cache content for the given number of seconds, by writing cache-related http headers to the response: <ul> <li>seconds == -1 default value : no generation cache-related headers<li> <li>seconds == 0: cache-control: no-store will prevent caching<li> <li>seconds > 0: cache-control: max-age=seconds will ask to cache content<li> <ul> <END>
<BEG> set the name of the bean that this tag should check <END>
<BEG> set whether to ignore a nested path, if any <END>
<BEG> read the unescaped body content from the page <END>
<BEG> the user customised the output of the error messages - flush the <END>
<BEG> set the html element used to enclose the <END>
<BEG> return the delimiter to be used between error messages <END>
<BEG> override resolve css class since error class is not supported <END>
<BEG> set the separator to use for splitting an arguments string <END>
<BEG> set the path that this tag should apply <END>
<BEG> set the raw value of the parameter <END>
<BEG> sets the filter that determines if view should be cached <END>
<BEG> return the cache key for the given view name and the given locale <END>
<BEG> set whether to expose a requestcontext for use by spring's macro library, under the name springmacrorequestcontext default is true <END>
<BEG> set the name of the requestcontext attribute for this view <END>
<BEG> set static attributes for this view from a <END>
<BEG> set whether or not trailing slashes should be stripped from the uri when generating the view name default is true <END>
<BEG> return the encoding for the freemarker template <END>
<BEG> retrieve the freemarker template specified by the given name, using the encoding specified by the encoding bean property <END>
<BEG> this method should not be used, since the considered locale for resolving templates is the locale for the current http request <END>
<BEG> specify whether to always include the view rather than forward to it <END>
<BEG> set whether to explicitly prevent dispatching back to the current handler path <END>
<BEG> exposes a jstl localizationcontext for spring's locale and messagesource <END>
<BEG> close the bundle view factories on context shutdown <END>
<BEG> specify whether views resolved by this resolver should add path variables to the model or not <END>
<BEG> set the list of view viewresolvers to delegate to <END>
<BEG> return the list of view viewresolvers to delegate to <END>
<BEG> set the location of the xml file that defines the view beans <END>
<BEG> close the view bean factory on context shutdown <END>
<BEG> called by <tt>xfunc<tt> to return a value <END>
<BEG> called by <tt>xfunc<tt> to throw an error <END>
<BEG> set a pragma value to take effect the pragma settings, <END>
<BEG> skeleton xmlevent api <END>
<BEG> note: only here because we implement iterator interface <END>
<BEG> method for constructing integer array value decoder that uses provided fixed array for storing results <END>
<BEG> return the lexical representation of the attribute or element content that could not be converted as requested <END>
<BEG> return the next element in an element stack or queue <END>
<BEG> return the namespace name of the element's type <END>
<BEG> return the member-of vector of the element's type <END>
<BEG> returns the namespace name of this element type <END>
<BEG> sets the content models to which this element type belongs <END>
<BEG> sets the parent element type of this element type <END>
<BEG> add to or replace a character entity in this schema <END>
<BEG> set the component binding provider task <END>
<BEG> whether to always build images before starting containers <END>
<BEG> waits for the response to pass the given predicate <END>
<BEG> set the rate limiter being used <END>
<BEG> convenience method to return the default waitstrategy <END>
<BEG> convenience method to return a waitstrategy for an https endpoint <END>
<BEG> is the image name valid? <END>
<BEG> obtain an instance of the dockermachineclient wrapper <END>
<BEG> returns the configured encoding detector instance <END>
<BEG> if there is a slowly building memory leak in one of the parsers, it is useful to set a limit on the number of files processed by a server before it is shutdown and restarted default value is -1 <END>
<BEG> get a le unsigned int value from a byte array <END>
<BEG> creates a tikainputstream from the file at the given path the file name <END>
<BEG> creates a tikainputstream from the given file <END>
<BEG> returns the current position within the stream <END>
<BEG> returns the detected language based on text handled thus far <END>
<BEG> return true if the target language matches the detected language we consider <END>
<BEG> builds the language profiles <END>
<BEG> clears the current map of language profiles <END>
<BEG> returns the value of the identified date based metadata property <END>
<BEG> decode an array of hex chars <END>
<BEG> checks whether this media type contains parameters <END>
<BEG> returns the set of all known canonical media types type aliases are <END>
<BEG> returns the set of known aliases of the given canonical media type <END>
<BEG> adds a file name pattern for the given media type assumes that the <END>
<BEG> gets lines consumer <END>
<BEG> set a consumer for the lines ignored by the parse functions <END>
<BEG> returns the stax input factory specified in this parsing context <END>
<BEG> this clears the last parser state metadata list, unknown count, hit embeddedresource count <END>
<BEG> sets the threshold for output characters before the zip bomb prevention is activated this avoids false positives in cases where an otherwise <END>
<BEG> returns the maximum package entry nesting level <END>
<BEG> gets the threshold to be used for selecting the standard references found within the text based on their score <END>
<BEG> writes the given string of character as-is <END>
<BEG> ends the xmp document by writing the following footer and clearing the namespace mappings: <pre> &lt;rdf:rdf&gt; <pre> <END>
<BEG> returns <code>true<code> if the xpath expression matches all text nodes whose parent is the element associated with this evaluation state <END>
<BEG> detects the media type of the file at the given path the type <END>
<BEG> returns the detector instance used by this facade <END>
<BEG> returns unknown_00c value <END>
<BEG> sets unknown length <END>
<BEG> returns directory length <END>
<BEG> sets data offset <END>
<BEG> returns language id <END>
<BEG> returns a window size <END>
<BEG> returns unknown 18 bytes <END>
<BEG> sets pmgi signature <END>
<BEG> sets pmgi free space <END>
<BEG> returns the path to xml descriptor for analysisengine <END>
<BEG> sets the umls password <END>
<BEG> enables content text analysis using ctakes <END>
<BEG> maps safe html element names to semantic xhtml equivalents if the <END>
<BEG> searches for the next mpeg frame header from the current stream position on this method advances the underlying input stream until it finds a <END>
<BEG> gets set of entity types recognised by this recogniser <END>
<BEG> set tesseract language dictionary to be used default is eng <END>
<BEG> the page separator to use in plain text output this corresponds to tesseract's page_separator config option <END>
<BEG> checks to see if a document's content should be extracted based <END>
<BEG> if false the default , extract content from the full pdf as well as the xfa form this will likely lead to some duplicative <END>
<BEG> the maximum amount of memory to use when loading a pdf into a pddocument additional buffering is done using a <END>
<BEG> returns the set of media types supported by this parser when used with the given parse context <END>
<BEG> get the names of charsets that can be recognized by this charsetdetector instance <END>
<BEG> get an indication of the confidence in the charset detected <END>
<BEG> whether or not to attempt to strip html-ish markup from the stream before sending it to the underlying detector <END>
<BEG> called by the web container to indicate to a filter that it is being placed into service the servlet container calls the init method exactly <END>
<BEG> called by the servlet container to indicate to a servlet that the servlet <END>
<BEG> returns the name of this servlet instance see <END>
<BEG> are trailer fields ready to be read there may still be no trailers to <END>
<BEG> notification that an attribute has been replaced in a session called <END>
<BEG> notification that an existing attribute has been removed from the servlet context called after the attribute is removed <END>
<BEG> notification that the servlet context is about to be shut down all <END>
<BEG> set the secure random number generator algorithm name <END>
<BEG> returns the http session identifiers associated with this sso <END>
<BEG> set the maximum size of a post which will be saved by the container during authentication <END>
<BEG> set the redirect port number <END>
<BEG> indicates whether the generation of an x-powered-by response header for servlet-generated responses is enabled or disabled for this connector <END>
<BEG> enable the use of ip-based virtual hosting <END>
<BEG> look for ssl session id if required only look for ssl session id if it <END>
<BEG> associated coyote request <END>
<BEG> set the response with which this request is associated <END>
<BEG> add a locale to the set of preferred locales for this request the <END>
<BEG> check the configuration for aborted uploads and if configured to do so, disable the swallowing of any remaining input and close the connection once the response has been written <END>
<BEG> flush the buffer and commit this response <END>
<BEG> return a string representation of this event <END>
<BEG> identifies the filters, if any, in this filterchain that do not support async <END>
<BEG> override the <code>getrequesturi <code> method of the wrapped request <END>
<BEG> get the delay between the invocation of the backgroundprocess method on this container and its children child containers will not be invoked <END>
<BEG> set if children of this container will be started automatically when they are added to this container <END>
<BEG> return the parent class loader if any for this web application <END>
<BEG> add a new child container to those associated with this container, if supported prior to adding this container to the set of children, <END>
<BEG> convenience method, intended for use by the digester to simplify the process of adding valves to containers see <END>
<BEG> makes cache size available to unit tests <END>
<BEG> xml parsing can pin a web application class loader in memory there are <END>
<BEG> return the follow standard delegation model flag used to configure our classloader <END>
<BEG> gets the path to use for session cookies overrides any setting that <END>
<BEG> set the clearreferenceshttpclientkeepalivethread feature for this context <END>
<BEG> return the filter definition for the specified filter name, if any; otherwise return <code>null<code> <END>
<BEG> remove the context initialization parameter with the specified name, if it exists; otherwise, no action is taken <END>
<BEG> gets the cumulative processing times of all servlets in this standardcontext <END>
<BEG> gets the minimum processing time of all servlets in this standardcontext <END>
<BEG> are we processing a version 2 2 deployment descriptor? <END>
<BEG> set the cluster-wide unique identifier for this engine <END>
<BEG> deploy xml context config files flag mutator <END>
<BEG> return the available datetime for this servlet, in milliseconds since the epoch if this datetime is long max_value, it is considered to mean <END>
<BEG> <p> header that holds the incoming host, usually named <code>x-forwarded-host<code> <END>
<BEG> should this filter set request attributes for ip address, hostname, protocol and port used for the request? this are typically used in <END>
<BEG> the default character encoding to set for requests that pass through this filter <END>
<BEG> set the clearreferencesstoptimerthreads feature for this context <END>
<BEG> return the reloadable flag for this loader <END>
<BEG> classpath, as set in org apache catalina jsp_classpath context <END>
<BEG> invoke the check method on the deployer <END>
<BEG> add a new child container to those associated with this container, if supported won't start the child yet has to be started with a call to <END>
<BEG> add a lifecycleevent listener to this component <END>
<BEG> remove a lifecycleevent listeners from this component <END>
<BEG> get the inet address on which the platform rmi server is exported <END>
<BEG> get the flag that indicates that local ports should be used for all connections if using ssh tunnels, or similar, this should be set to <END>
<BEG> create a new httpconnector <END>
<BEG> create a new role and return the corresponding mbean name <END>
<BEG> remove an existing role and destroy the corresponding mbean <END>
<BEG> return the principal associated with the specified user name otherwise return <code>null<code> <END>
<BEG> set to true to cause the datasource to be looked up in the webapp jndi context <END>
<BEG> return the password associated with the given principal's user name <END>
<BEG> set the url to use to connect to the database <END>
<BEG> set the maximum number of users for which authentication failure will be kept in the cache <END>
<BEG> return the availability of the realm for authentication <END>
<BEG> set the directory path for this store <END>
<BEG> return the name for this store, used for logging <END>
<BEG> release the connection, if it is associated with a connection pool <END>
<BEG> set the regular expression to use to filter session attributes based on attribute name the regular expression is anchored so it must match the <END>
<BEG> should a warn level log message be generated if a session attribute is not persisted replicated restored <END>
<BEG> set the maximum number of active sessions allowed, or -1 for no limit <END>
<BEG> remove the session from the manager's list of active sessions and write it out to the store if the session <END>
<BEG> return a file object representing the pathname to our persistence file, if any <END>
<BEG> set the manager within which this session is valid <END>
<BEG> gets the maximum number of sessions allowed by the session manager <END>
<BEG> print usage information for this application <END>
<BEG> tomcat requires that the base directory is set because the defaults for a number of other locations, such as the work directory, are derived from the base directory this should be the first method called <END>
<BEG> add a role to a user <END>
<BEG> provide default configuration for a context this is broadly the <END>
<BEG> make the principal name the same as the group name <END>
<BEG> determines if a method is a valid lifecycle callback method <END>
<BEG> sub-classes wishing to perform additional clean-up should override this method, ensuring that super destroyinternal is the last call in the <END>
<BEG> determine the name to use for the session cookie for the provided context <END>
<BEG> return the number of bytes for a session id <END>
<BEG> should we rotate the access log <END>
<BEG> should we defer inclusion of the date stamp in the file name until rotate time <END>
<BEG> open the new log file for the date specified by <code>datestamp<code> <END>
<BEG> sets the name of the field containing the remote host <END>
<BEG> sets the name of the field containing the virtual host information this is in fact the server name <END>
<BEG> determines whether ip host name resolution is done <END>
<BEG> sets the expected value of the cookie that can be used to override the re-balancing behavior of this valve when the current node is in the disabled activation state the ignore cookie's value <END>
<BEG> convert an array of strings in a comma delimited string <END>
<BEG> set the name of the http header used to override the value returned <END>
<BEG> <p> case insensitive value of the protocol header to indicate that the incoming http request uses ssl <END>
<BEG> generic property getter used by the digester other code should not need <END>
<BEG> return the underlying byte buffer <END>
<BEG> append a byte 1 byte to the message <END>
<BEG> read an integer from packet, and advance the read position past it integers are encoded as two unsigned bytes with the <END>
<BEG> compare this errorstate with the provided errorstate and return the most severe <END>
<BEG> set the maximum size of a post which will be buffered during form or client-cert authentication when a post is received where the security <END>
<BEG> get the flag that controls upload time-outs if true, the <END>
<BEG> set the content length on the request <END>
<BEG> end the current request it is acceptable to write extra bytes using <END>
<BEG> get the virtual host , derived from the host: header associated with this request <END>
<BEG> open the new log file for the date specified by <code>date<code> <END>
<BEG> composes the name of this context with a name relative to this context <END>
<BEG> get the apr error code of the exception <END>
<BEG> gets constant from constant pool and check whether it has the expected type <END>
<BEG> maximum amount of data in this buffer if -1 or not set, the buffer will <END>
<BEG> when the buffer is empty, read the data from the input channel <END>
<BEG> sets the buffer to the specified subarray of characters <END>
<BEG> compares the message bytes to the specified string object <END>
<BEG> compare given byte chunk with byte array <END>
<BEG> find an entry given its name in the cache and return the associated string <END>
<BEG> determine if a uri string has a <code>scheme<code> component <END>
<BEG> remove the specified url pattern from those that are part of this web resource collection <END>
<BEG> was the all authenticated users wildcard included in this authentication constraint? <END>
<BEG> return the set of roles that are permitted access to the resources protected by this security constraint if none have been defined, <END>
<BEG> remove the specified web resource collection from those protected by this security constraint <END>
<BEG> set verbose class loading <END>
<BEG> retrieve a jvm thread dump formatted using the given stringmanager <END>
<BEG> when the digester is being used as a saxcontenthandler, this method allows you to access the root object that has been created after parsing <END>
<BEG> <p>return the top object on the parameters stack without removing it if there are <END>
<BEG> load the resource from the specified location <END>
<BEG> get a resource, based on the conf path <END>
<BEG> returns the content type passed by the agent or <code>null<code> if not defined <END>
<BEG> returns the contents of the file as a string, using the default <END>
<BEG> returns the items file name <END>
<BEG> closes the file item <END>
<BEG> returns the invalid file name <END>
<BEG> specifies the character encoding to be used when reading the headers of individual parts when not specified, or <code>null<code>, the platform <END>
<BEG> parses an enumeration of header values of the form 1#token, forcing all parsed values to lower case <END>
<BEG> normalize a relative uri path that may have relative values , <END>
<BEG> start capturing thread's output <END>
<BEG> add a new attribute name to the set of names accepted by this filter <END>
<BEG> return the set of names that are accepted by this filter if this <END>
<BEG> add a new notification to the set of notifications for this mbean <END>
<BEG> add a new notification type to the set managed by an mbean <END>
<BEG> factory method to create if necessary and return our <code>mbeanserver<code> instance <END>
<BEG> controls when the endpoint binds the port <code>true<code>, the default <END>
<BEG> this endpoint does not support <code>-1<code> for unlimited connections, nor does it support setting this attribute while the endpoint is running <END>
<BEG> process the given socket typically keep alive or upgraded protocol <END>
<BEG> returns the server key alias that was provided in the constructor or the <END>
<BEG> closes this channel <END>
<BEG> return true if the buffer wrote data no-op for non-secure channel <END>
<BEG> use system inheritablechannel to obtain channel from stdinstdout <END>
<BEG> parse the specified expression according to the openssl syntax and returns a list of standard jsse cipher names <END>
<BEG> build a list value out of an existing iterable list, set, other <END>
<BEG> get the value associated with a variable name <END>
<BEG> sets the path of the uri <END>
<BEG> call method exception event handler <END>
<BEG> call invalid reference handlers for an invalid getter <END>
<BEG> get the specific invalid reference string <END>
<BEG> all invalid references during the processing of this page <END>
<BEG> set a velocity runtime property <END>
<BEG> instantiates and loads the directive with some basic checks <END>
<BEG> removes the value associated with the specified key from the context <END>
<BEG> returns the template name where this exception occurred <END>
<BEG> override to use the macro name, since it is within an <END>
<BEG> put a block reference instance into the context, <END>
<BEG> do nothing: we never render the velocimacroproxy object does that <END>
<BEG> returns the number of control arguments of this type that are stacked up this is the distance between this <END>
<BEG> sets the directive name of this vm <END>
<BEG> collect all the <special_token>s that are carried along with a token special <END>
<BEG> method to adjust line and column numbers for the start of a token <br> <END>
<BEG> call the wrapped pool if none are available, it will create a new <END>
<BEG> set the datasource used by this resource loader call this as an alternative to <END>
<BEG> return the class name of this resource loader <END>
<BEG> returns the current, custom timeout setting if negative, there is no custom timeout <END>
<BEG> 'touch' this template and thereby resetting the nextcheck field <END>
<BEG> determines if a template exists, and returns name of the loader that provides it this is a slightly less hokey way to <END>
<BEG> string property accessor method to hide the configuration implementation <END>
<BEG> gets a velocimacroproxy object by the name source template duple <END>
<BEG> formats a textual representation of this object as <code>source [line x, column y]<code> <END>
<BEG> creates a class map for specific class and registers it in the cache also adds the qualified name to the name-&gt;class map <END>
<BEG> simply creates a string that formats the template filename with line number and column we use this routine to provide a consistent format for displaying <END>
<BEG> get language version same as engine version <END>
<BEG> get velocity syntax for calling method 'm' on object 'obj' with provided arguments <END>
<BEG> get a velocity script engine <END>
<BEG> sets the list of outbound permitted options <END>
<BEG> get the deployment id of the verticle deployment <END>
<BEG> if your verticle does a simple, synchronous start-up then override this method and put your start-up code in here <END>
<BEG> sets whether or not the argument can receive several values only the last argument can receive several values <END>
<BEG> sets the short name of this option <END>
<BEG> adds a choice to the list of values accepted by this option if the value set by the user does not match once of these <END>
<BEG> sets the converter used to create the value <END>
<BEG> builds the specified text to the specified buffer <END>
<BEG> get the json configuration that will be passed to the verticle s when deployed <END>
<BEG> returns time between refreshes for secondary name servers <END>
<BEG> sets whether or not the event bus is clustered <END>
<BEG> gets the public facing port to be used when clustering <END>
<BEG> get the failure code for the message <END>
<BEG> if true then every write to the file's content and metadata will be written synchronously to the underlying hardware <END>
<BEG> if true then every write to the file's content will be written synchronously to the underlying hardware <END>
<BEG> set whether keep alive is enabled on the client <END>
<BEG> returns the maximum wait queue size <END>
<BEG> set the connection pool cleaner period in milli seconds, a non positive value disables expiration checks and connections will remain in the pool until they are closed <END>
<BEG> set the http2 connection settings immediatly sent by the server when a client connects <END>
<BEG> enable or disable support for the websocket per-frame deflate compression extension <END>
<BEG> set an handler to be called when the connection is unset from this handler <END>
<BEG> get the host name to be used by the client request <END>
<BEG> set the priority dependency value <END>
<BEG> add a websocket sub protocol to use <END>
<BEG> an exception describing failure this will be null if the operation succeeded <END>
<BEG> starts the vert x instance and sets the final action called when vert x is closed <END>
<BEG> deploys the given verticle <END>
<BEG> run a task <END>
<BEG> add a instant value to the json array <END>
<BEG> put a long into the json object with the specified key <END>
<BEG> put a double into the json object with the specified key <END>
<BEG> remove an entry from this object <END>
<BEG> utility method to execute a specific command <END>
<BEG> set whether metrics will be enabled on the vert x instance <END>
<BEG> set proxy options for connections via connect proxy e g squid or a socks proxy <END>
<BEG> set whether the server supports server name indiciation <END>
<BEG> return the tcp send buffer size, in bytes <END>
<BEG> whether session cache is enabled in open ssl session server context <END>
<BEG> set the path <END>
<BEG> set proxy host <END>
<BEG> set proxy password <END>
<BEG> get the crl values <END>
<BEG> set whether or not the vert x instance will be clustered <END>
<BEG> set whether ha will be enabled on the vert x instance <END>
<BEG> registers a handler called on disconnection <END>
<BEG> closes the sender <END>
<BEG> creates a bridge with the given options <END>
<BEG> asynchronous delete method based on the column values of the primary key <END>
<BEG> asynchronous get method based on the column values of the primary key <END>
<BEG> sets a invoked when the circuit breaker state switches to open <END>
<BEG> add an interceptor that will be called whenever a message is received by vert x <END>
<BEG> create an http request to send to the server with the specified options, specifying a response handler to receive <END>
<BEG> create an http get request to send to the server using an absolute uri, specifying a response handler to receive the response <END>
<BEG> create an http post request to send to the server using an absolute uri, specifying a response handler to receive the response <END>
<BEG> create an http head request to send to the server at the specified host and default port, specifying a response handler to receive the response <END>
<BEG> sends an http options request to the server at the specified host and default port, specifying a response handler to receive the response <END>
<BEG> create an http put request to send to the server with the specified options, specifying a response handler to receive the response <END>
<BEG> create an http delete request to send to the server using an absolute uri, specifying a response handler to receive the response <END>
<BEG> connect a websocket with the specified options, and with the specified headers <END>
<BEG> connect a websocket to the specified port, host and relative request uri, with the specified headers and using the specified version of websockets <END>
<BEG> set a custom frame handler the handler will get notified when the http stream receives an custom http2 <END>
<BEG> set an handler for stream priority changes <p> this is not implemented for http1 x <END>
<BEG> set a close handler for the response, this is called when the underlying connection is closed and the response was still using the connection <END>
<BEG> start to pipe the elements to the destination <code>writestream<code> <END>
<BEG> removes a provider from the chain <END>
<BEG> retrieve the password from the user, or as clear text or as hashed version, depending on the definition <END>
<BEG> the hashstrategy which is used by the current instance <END>
<BEG> the refresh token if present parsed as a jsonobject <END>
<BEG> get raw `id_token` string from the principal <END>
<BEG> returns the access token object <END>
<BEG> query an oauth 2 0 authorization server to determine the active state of an oauth 2 0 token and to determine <END>
<BEG> the http response body as a buffer <END>
<BEG> create a oauth2auth provider for app net <END>
<BEG> create a oauth2auth provider for shopify <END>
<BEG> get or create a secure non blocking random number generator using the current vert x context if there is no <END>
<BEG> create a consul client with default options <END>
<BEG> create new acl token <END>
<BEG> adds a new service, with an optional health check, to the local agent <END>
<BEG> places a given service into maintenance mode <END>
<BEG> set status of the check to critical used with a check that is of the ttl type the ttl clock will be reset <END>
<BEG> returns the active sessions <END>
<BEG> create a mongo client which shares its data source with any other mongo clients created with the same data source name <END>
<BEG> replace matching documents in the specified collection, specifying options <p> this operation might change <i>_id<i> field of <i>replace<i> parameter <END>
<BEG> execute a bulk operation can insert, update, replace, andor delete multiple documents with one request <END>
<BEG> find a single matching document in the specified collection <p> this operation might change <i>_id<i> field of <i>query<i> parameter <END>
<BEG> create a new collection <END>
<BEG> end the completion with a list of candidates, these candidates will be displayed by the shell on the console <END>
<BEG> create a new commmand builder, the command is responsible for managing the options and arguments via the <END>
<BEG> set the command completion handler, the completion handler when the user asks for contextual command line completion, usually hitting the <i>tab<i> key <END>
<BEG> write some text to the standard output <END>
<BEG> get some data from the session <END>
<BEG> create a new shell server with specific options <END>
<BEG> set a session on the job <END>
<BEG> echo some text in the terminal, escaped if necessary <p> <END>
<BEG> set a handler that will be called when the terminal is closed <END>
<BEG> executes the given sql <code>select<code> statement which returns the results of the query <END>
<BEG> configures a writing handler that gets notified when a stomp frame is written on the wire <END>
<BEG> sets an exception handler notified for tcp-level errors <END>
<BEG> sends the given frame to the server <END>
<BEG> subscribes to the given destination this destination is used as subscription id <END>
<BEG> configures the action to execute when a <code>unsubscribe<code> frame is received <END>
<BEG> called when the connection is closed this method executes a default behavior and must calls the configured <END>
<BEG> configures the action to execute when a <code>abort<code> frame is received <END>
<BEG> configures the action to execute when a <code>begin<code> frame is received <END>
<BEG> configures the stomp server to act as a bridge with the vert x event bus <END>
<BEG> register the collector as a consumer of the event bus with the specified address <END>
<BEG> cause the current thread to wait until this completion completes with a configurable timeout <p> <END>
<BEG> set a callback for completion, the specified <code>handler<code> is invoked when the test exec has completed <END>
<BEG> creates and returns a new async handler, the returned handler controls the completion of the test <p> <END>
<BEG> set a callback executed after each test and before the suite <code>after<code> callback <END>
<BEG> specify to route an incoming request for all operations that contains the specified tag to a web api service mounted at the specified address on event bus <END>
<BEG> set parameter name <END>
<BEG> returns null if value is not a long, otherwise it returns value <END>
<BEG> returns true if value of requestparameter is a double instance <END>
<BEG> get path parameter by name <END>
<BEG> get header parameter by name <END>
<BEG> add a query parameter with included parameter types <END>
<BEG> add a header parameter with included parameter types <END>
<BEG> add a xml schema for body with content-type applicationxml <END>
<BEG> add an expected filename inside <b>multipart request<b> <END>
<BEG> function that checks if array of values of a specific parameter it returns a requestparameter object that will <END>
<BEG> returns true if this type validator has default value <END>
<BEG> create an array type validator <END>
<BEG> configure the request to use a new method <code>value<code> <END>
<BEG> return the current query parameters <END>
<BEG> creates a predicate validating the response <code>content-type<code> is <code>applicationjson<code> <END>
<BEG> whether the result is a success or failure <END>
<BEG> create a web client using the provided <code>vertx<code> instance and default options <END>
<BEG> create an http patch request to send to the server using an absolute uri, specifying a response handler to receive the response <END>
<BEG> authorizes the given user against all added authorities <END>
<BEG> the default realm to use <END>
<BEG> set whether form attributes will be added to the request parameters <END>
<BEG> add a set of allowed methods <END>
<BEG> add a set of exposed headers <END>
<BEG> should the handler give warning messages if this handler is used in other than https protocols? <END>
<BEG> create a digest auth handler, specifying the expire timeout for nonces <END>
<BEG> the default value of the session attribute which will contain the return url <END>
<BEG> create a multitenant handler using a custom tenant extraction function <END>
<BEG> create a oauth2 auth handler with host pinning <END>
<BEG> set the session timeout <END>
<BEG> set a sockjs socket handler this handler will be called with a sockjs socket whenever a sockjs connection <END>
<BEG> return the uri corresponding to the last request for this socket or the websocket handshake <END>
<BEG> set the directory template to be used when directory listing <END>
<BEG> an integer that represents the absolute order position of this header <END>
<BEG> gets the parsed component part of the mime this is the string between the beginning and the first <code>''<code> <END>
<BEG> add a content type produced by this route used for content based routing <END>
<BEG> add a route that matches a http options request and the specified path regex <END>
<BEG> add a route that matches a http put request and the specified path regex <END>
<BEG> add a route that matches a http delete request and the specified path <END>
<BEG> mount a sub router on this router <END>
<BEG> specify an handler to handle an error for a particular status code you can use to manage general errors too using status code 500 <END>
<BEG> fail the context with the specified throwable and the specified the status code <END>
<BEG> clear the current user object in the context this usually is used for implementing a log out feature, since the <END>
<BEG> initialize this store <END>
<BEG> create a new session using the default min length <END>
<BEG> set the max cache size for the engine <END>
<BEG> get the set of partitions currently assigned to this consumer <END>
<BEG> get the set of partitions that were previously paused by a call to pause set <END>
<BEG> get metadata about the partitions for a given topic <END>
<BEG> return an mqtt client instance using the default options <END>
<BEG> sends the publish message to the remote mqtt server <END>
<BEG> subscribes to the topics with related qos levels <END>
<BEG> set the puback handler on the mqtt endpoint this handler is called when a puback <END>
<BEG> sends the puback message to the remote mqtt client <END>
<BEG> start the server listening for incoming connections on the port specified but on 0 0 0 0 as host it ignores any options specified through the constructor <END>
<BEG> send a reset_connection command to reset the session state <END>
<BEG> publish a message publishing to a non-existent exchange will result in a channel-level protocol exception, <END>
<BEG> wait until all messages published since the last call have been either ack'd or nack'd by the broker; or until timeout elapses if the timeout expires a timeoutexception is thrown <END>
<BEG> request a specific prefetchcount quality of service settings for this channel <END>
<BEG> create a new redis client using the default client options <END>
<BEG> redis command <a href= https:redis iocommandsconfig >config<a> <END>
<BEG> redis command <a href= https:redis iocommandsflushall >flushall<a> <END>
<BEG> redis command <a href= https:redis iocommandsgeoradius >georadius<a> <END>
<BEG> redis command <a href= https:redis iocommandsgeoradius_ro >georadiusro<a> <END>
<BEG> redis command <a href= https:redis iocommandshexists >hexists<a> <END>
<BEG> redis command <a href= https:redis iocommandslpop >lpop<a> <END>
<BEG> redis command <a href= https:redis iocommandslpushx >lpushx<a> <END>
<BEG> redis command <a href= https:redis iocommandslrange >lrange<a> <END>
<BEG> redis command <a href= https:redis iocommandslrem >lrem<a> <END>
<BEG> redis command <a href= https:redis iocommandspfdebug >pfdebug<a> <END>
<BEG> redis command <a href= https:redis iocommandspfselftest >pfselftest<a> <END>
<BEG> redis command <a href= https:redis iocommandspubsub >pubsub<a> <END>
<BEG> redis command <a href= https:redis iocommandssetrange >setrange<a> <END>
<BEG> redis command <a href= https:redis iocommandssrandmember >srandmember<a> <END>
<BEG> redis command <a href= https:redis iocommandswatch >watch<a> <END>
<BEG> redis command <a href= https:redis iocommandszcount >zcount<a> <END>
<BEG> redis command <a href= https:redis iocommandszrevrangebylex >zrevrangebylex<a> <END>
<BEG> get this response as a long <END>
<BEG> get this size of this multi response <END>
<BEG> get this response as a string encoded with the given charset <END>
<BEG> remove and get the first element in any of the lists, or block until one is available <END>
<BEG> get the list of client connections <END>
<BEG> extract keys given a full redis command <END>
<BEG> delete a key <END>
<BEG> get the value of a hash field <END>
<BEG> get the values of all the given hash fields <END>
<BEG> increment the integer value of a key by one <END>
<BEG> get the unix time stamp of the last successful save to disk <END>
<BEG> get the length of a list <END>
<BEG> listen for messages published to channels matching the given pattern <END>
<BEG> returns the number of subscriptions to patterns that are performed using the psubscribe command <END>
<BEG> subtract multiple sets <END>
<BEG> return the current server time <END>
<BEG> return a range of members in a sorted set, by score <END>
<BEG> remove one or more members from a sorted set <END>
<BEG> return a range of members in a sorted set, by index, with scores ordered from high to low <END>
<BEG> return a range of members in a sorted set, by score, with scores ordered from high to low <END>
<BEG> incrementally iterate hash fields and associated values <END>
<BEG> alters the last access time of a key s returns the number of existing keys specified <END>
<BEG> force sentinel to rewrite its configuration on disk, including the current sentinel state <END>
<BEG> convenient method to create a record for a mongo data source <END>
<BEG> convenient method to create a record for a redis data source <END>
<BEG> get a column name at <code>pos<code> <END>
<BEG> get a long value at <code>pos<code> <END>
<BEG> get a double value at <code>pos<code> <END>
<BEG> get a buffer value at <code>pos<code> <END>
<BEG> get the names of columns in the sqlresult <END>
<BEG> add a float value at the end of the tuple <END>
<BEG> add an array of <code>integer<code> value at the end of the tuple <END>
<BEG> assert that an actual value is approximately equal to an expected value - determined by whether the difference between the two values is less than a provided epsilon value <END>
<BEG> removes the transfer listener from the collection of listeners so it no longer receives transfer events <END>
<BEG> sets the timestamp which indicated the time when this event has occurred <END>
<BEG> get the repository file mode to which an artifact will belong to after deployment not all protocols permit the changing of the artifact mode <END>
<BEG> provides a buffer size for efficiently transferring the given amount of bytes such that it is not fragmented into too many chunks for larger files larger buffers are provided such that downstream <END>
<BEG> truncate arbitrary reason into something that will fit into the closeframe limits <END>
<BEG> allow for overridden customization of endpoint such as special transport level properties: e g tcp keepalive <END>
<BEG> add websocket extension configuration s to upgrade request <END>
<BEG> set a specific header with multi-value field <p> overrides any previous value for this named header <END>
<BEG> return the underlying httpservletrequest that existed at upgrade time <END>
<BEG> compare two sub-regions of the given arrays <END>
<BEG> find the first occurrence of a byte in a byte array <END>
<BEG> deeply convert an object to a string, expanding arrays as they are encountered <END>
<BEG> create a copy of this permission with the additional given actions <END>
<BEG> get the smallest known data cache line size if no cache line sizes are known, 0 is returned note that smaller <END>
<BEG> get the cache line size in bytes if the size is unknown, 0 is returned <END>
<BEG> get the immutable set of string keys that are referenced by expressions in this compiled expression if there <END>
<BEG> determine if this flag set contains any of the given flags <END>
<BEG> drain all the remaining bytes in this iterator <END>
<BEG> get a sub-iterator that is delimited by the given code points the returned iterator offset starts at 0 and cannot <END>
<BEG> get a code point iterator for a utf-8 encoded byte array <END>
<BEG> get a sub-iterator that removes the following code points: <code>10<code> n and <code>13<code> r <END>
<BEG> try to acquire the lock, returning immediately whether or not the lock was acquired <END>
<BEG> round the given value up to the next positive power of two <END>
<BEG> get the netmask bits this will be in the range 0-32 for ipv4 addresses, and 0-128 for ipv6 addresses <END>
<BEG> checks whether given string is a valid ipv6 address <END>
<BEG> get the user name information from a uri, if any <END>
<BEG> get a string summary representation of this map <END>
<BEG> write this remote exception cause to the given stream, without using serialization <END>
<BEG> method that allows enablingdisabling attribute value normalization <END>
<BEG> if necessary, we could find this index when resolving the element, could avoid linear search but who knows how often <END>
<BEG> doh this is not clean but need to make sure the null <END>
<BEG> method called by reader when current input has changed to come from this input source should resetinitialize input location <END>
<BEG> method called to allow reusing of collector, usually right before starting collecting attributes for a new start tag <END>
<BEG> should we first check if we maybe already have a validator for the schema? <END>
<BEG> since the linked list is pruned to always start with the first in doc order undefined id, we can just return head: <END>
<BEG> get the result of an xml path expression as a float for syntax details please refer to <END>
<BEG> get the result of an xml path expression as a long for syntax details please refer to <END>
<BEG> sets the day component <END>
<BEG> gets the year component <END>
<BEG> intended to be applied to an uppercase-starting identifier that may collide with a java lang classname if it does collide, this <END>
<BEG> returns true if the specified character is a valid name character as defined by production [4] in the xml 1 0 <END>
<BEG> returns the union of this nameset with the 'with' nameset <END>
<BEG> returns the name of this <code>mimeheader<code> object <END>
<BEG> returns all of the values for the specified header as an array of <code>string<code> objects <END>
<BEG> sets the value of the mime header content-location to the given <code>string<code> <END>
<BEG> can one use the _firstchild pointer to retrieve the first dom child <END>
<BEG> ; digestinputstream input = digestinputstream conn getinputstream ; <END>
<BEG> writes an entire file in one step an inputstream is passed and <END>
<BEG> controls the amount of output defaults to true <END>
<BEG> sets the the name of the javac executable <END>
<BEG> one or more schemacompiler extensions can be passed in via the &lt;extension> subelement <END>
<BEG> converts bytes to a hex string <END>
<BEG> converts a hex string to a byte array <END>
<BEG> removes an entire namespace uri from this qnamesetbuilder <END>
<BEG> removes all contents of a given qnameset from this qnamesetbuilder <END>
<BEG> returns the reason for the failure, given by one of the numeric constants in this class <END>
<BEG> given soap 1 1-formatted index string, returns an array <END>
<BEG> returns the array of ranks for inner nested arrays <END>
<BEG> returns the dimensions as a string, e g , [,][2,3,4] <END>
<BEG> returns an int code that can be used for switch statements <END>
<BEG> sets the message digest used to summarize the document <END>
<BEG> when used with <code>setsaveprettyprint<code> this sets the offset amount to use <END>
<BEG> causes the saver to reduce the number of namespace prefix declarations <END>
<BEG> used to get a generic option <END>
<BEG> returns the list of known catalog files <END>
<BEG> lookup the default document in the catalog <END>
<BEG> returns the uri of the catalog result <END>
<BEG> return the inputstream associated with the resource <END>
<BEG> return the mime content type associated with the resource <END>
<BEG> sax dtdhandler api <END>
<BEG> ignore whitespace by removing all empty text nodes and trimming the non-empty ones <END>
<BEG> check test source with the control source for identically <END>
<BEG> compares the detail values for object equality, lets the difference evaluator and comparison controller evaluate the result, notifies all listeners and returns the outcome <END>
<BEG> propagates the result of a comparision to all registered listeners <END>
<BEG> accepts two elements if at least one of the given elementselectors does <END>
<BEG> creates a dom node from a trax source <END>
<BEG> sets the schema to use in instance validation directly rather <END>
<BEG> the uri or for example the system id in case of a dtd that identifies the schema to validate or use during validation <END>
<BEG> the problem's message <END>
<BEG> minimal inline test <END>
<BEG> returns the default constructor, or null if none is found <END>
<BEG> checks current runtime against provided major java version <END>
<BEG> checks if sql is available <END>
<BEG> get the representing character of a primitive type <END>
<BEG> create a hierarchicalstreamwriter that writes json <END>
<BEG> called when a node ends hook for derived implementations <END>
<BEG> create and initialize the sax builder <END>
<BEG> noop implementation that does not unescape name used for xstream 1 1 compatibility <END>
<BEG> tells this mapper to use an attribute for this field <END>
<BEG> serialize an object including the xstream to a pretty-printed xml string <END>
<BEG> gets property ordering component <END>
<BEG> <p>makes parsing dates defaulting to zero hour, minute and second <END>
<BEG> component matcher for lookup of de serializers and adapters <END>
<BEG> gets a date format for formatting dates <END>
<BEG> gets ordered list of property names <END>
<BEG> gets number formatter for formatting numbers during deserialization process <END>
<BEG> gets date formatter for formatting dates during serialization process <END>
<BEG> gets date formatter for formatting dates during deserialization process <END>
<BEG> sets runtime type <END>
<BEG> class element with annotation under construction for declaring class of this property <END>
<BEG> element with setter and its annotations <END>
<BEG> gets a name of json document property to read this property from <END>
<BEG> field of a javabean property <END>
<BEG> check if type needs resolution if type is a class or a parametrized type with all type arguments as classes <END>
<BEG> gets or load class model for a class an its superclasses <END>
<BEG> returns customization of object <END>
<BEG> property used to specify behaviour on deserialization when json document contains properties which doesn't exist in the target class default value is 'false' <END>
<BEG> return the fied count for the requested field <END>
<BEG> display the help on system out <END>
<BEG> store the help in the passed string builder <END>
<BEG> what is the max state number ever created? this may be beyond getnumberofstates <END>
<BEG> return a list of integer alt numbers for which no lookahead could be computed or for which no single dfa accept state predicts those alts must call verify first before this makes sense <END>
<BEG> add a transition from this state to target with label return <END>
<BEG> turn off all states associated with alts other than the good one as long as they are one of the nondeterministic ones <END>
<BEG> return minimum element &gt;= 0 <END>
<BEG> a hash table that maps a key to a list of elements not just a single <END>
<BEG> if elements size !=super size { <END>
<BEG> in general, you'll want all errors to go to a single spot <END>
<BEG> switch grammartokentype { case antlrparser lexer_grammar : out writebyte 'l' ; break; <END>
<BEG> from an empty alternative build statecluster o-e-&gt;o <END>
<BEG> used by build tools to force the output files to always be relative to the base output directory, even though the tool had to set the output directory to an absolute path as it cannot rely on the workign directory like command line invocation can <END>
<BEG> indicates whether antlr has supplied, or will supply, a list of all the things that the input grammar depends upon and all the things that will be generated when that grammar is successfully analyzed <END>
<BEG> returns the number of errors that the analysisprocessing threw up <END>
<BEG> indicates whether antlr should generate a description of all the nfas in <a href= http:www graphviz org >dot format<a> <END>
<BEG> indicate whether antlr should supply a list of all the things that the input grammar depends upon and all the things that will be generated when that gramamr is successfully analyzed <END>
<BEG> return whether or not a backtracking attempt failed <END>
<BEG> given a rule number and a start token index number, return memo_rule_unknown if the rule has not parsed input starting from start index if this rule has parsed input starting from the <END>
<BEG> this only tracks elements added via pushadd <END>
<BEG> return the token type or char of the unexpected input element <END>
<BEG> do the recursive work for visit <END>
<BEG> read a keytab file <END>
<BEG> returns the start of validity <END>
<BEG> sets the expiration time <END>
<BEG> get the string representing the state <END>
<BEG> set an aprep object into the container it will be completed by the <END>
<BEG> set a krbpriv object into the container it will be completed by the <END>
<BEG> set a methoddata object into the container <END>
<BEG> clears sets false the option at a given index <END>
<BEG> set an paenctsenc object into the container it will be completed by the <END>
<BEG> get all the encryption types <END>
<BEG> returns the last request type when specified by its ordinal <END>
<BEG> set the current ad data <END>
<BEG> set the addr-type field <END>
<BEG> gets the protocol error code associated with this kerberosexception <END>
<BEG> set a flag in a list of flags <END>
<BEG> ticket flag - ok as delegate <END>
<BEG> adds a ticket to the ticket list <END>
<BEG> compute the tgs-req length <pre> tgs-req : 0x6a l1 tgs-req message | +--> 0x30 l2 kdc-req sequence <pre> <END>
<BEG> appends a byte to this buffer <END>
<BEG> test if the current character is a bit, ie 0 or 1 <END>
<BEG> gets the size number of exceptions nested within this exception <END>
<BEG> <p> get the value for a key from the map the key will be promoted to the <END>
<BEG> do an initial poll from the source and apply the result to the configuration <END>
<BEG> get the deployment environment if property archaius deployment stack <END>
<BEG> load resource configname properties first then load configname-deploymentenvironment properties <END>
<BEG> add the callback to be triggered when the value of the property is changed <END>
<BEG> create a new property whose value is a boolean and subject to change on-the-fly <END>
<BEG> create a new property whose value is a double and subject to change on-the-fly <END>
<BEG> calls <code>config addrproperty <code> if the underlying configuration <END>
<BEG> indicate whether this result has any content if the result is incremental, <END>
<BEG> the folder where the application's properties files are located <END>
<BEG> get the description of the archetype <END>
<BEG> get the version of the archetype <code>release<code> is a <END>
<BEG> sets the list of exclude patterns to use all '' and '' characters are replaced by <code> <END>
<BEG> set files that will go into <code>srctestjava<code> <END>
<BEG> set the encoding to be used when readingwriting this file <END>
<BEG> get the source file <END>
<BEG> set is this archetype representing a full maven project or only parts? <END>
<BEG> set filesets can be packaged, which means the selected files will be generatedcopied in a directory structure that is prepended by the package property they can be non-packaged, which means that the <END>
<BEG> get the module's artifactid <END>
<BEG> set default value of the property <END>
<BEG> returns if the given test should run as client <END>
<BEG> check if this container defaults to the local protocol <END>
<BEG> marks diff on inner image and returns it <END>
<BEG> returns <tt>true<tt> if there are differences between images <END>
<BEG> the name of the pointcut that could not be found <END>
<BEG> creates a method binding for a resolvedmember taking into account type variable aliases - this variant can take an aliastargettype and should be used when the alias target type cannot be retrieved from the resolvedmember <END>
<BEG> returned files includes <ul> <li>files explicitly listed on command-line<li> <li>files listed by reference in argument list files<li> <li>files contained in sourcerootdir if that exists<li> <ul> <END>
<BEG> this does not include -bootclasspath but includes -extdirs and -classpath <END>
<BEG> used to indicate whether to proceed after parsing config <END>
<BEG> return the bit flags indicating what has changed since the last time this config was used <END>
<BEG> enable check for runtime version, used only by antcommand-line main <END>
<BEG> record an aspect that came in on the aspect path when a class file changes on the aspect path we can then recognize it as <END>
<BEG> return a list of annotation[] - each list entry contains the annotations for one parameter <END>
<BEG> return the type of the field <END>
<BEG> dump class to a file named file_name <END>
<BEG> return localvariabletable of code attribute if any the call is forwarded to the code attribute <END>
<BEG> called by instructionlist setpositions when setting the position for every instruction in the presence of variable length <END>
<BEG> set start of handler <END>
<BEG> set maximum number of local variables <END>
<BEG> lookup class somewhere found on your classpath, or whereever the repository instance looks for it <END>
<BEG> remove class from repository <END>
<BEG> todo: discriminate columns <END>
<BEG> run visitor over the set of messages in holder, optionally accumulating those accepted by the visitor <END>
<BEG> this renders imessage as string, ignoring empty elements and eliding any thrown <END>
<BEG> factory for handler adapted to printstream xxx weak - only handles println string <END>
<BEG> creates a new aspectj abstract syntax tree ast following the specified set of api rules <END>
<BEG> creates an unparented after throwing advice declaration node owned by this ast by default, the declaration is for an after throwing <END>
<BEG> creates an unparented cflowpointcut node owned by this ast <END>
<BEG> creates an unparented default type pattern node owned by this ast <END>
<BEG> sets whether this aspect is a privileged one <END>
<BEG> the java element an <code>org aspectj org eclipse jdt core icompilationunit<code> or an <code>org aspectj org eclipse jdt core iclassfile<code> <END>
<BEG> sets the dirty bit to false internal operations do not use the dirty <END>
<BEG> return the state of the dirty bit all operations that change the state <END>
<BEG> deletes all properties stored in this object and the record associated with this object itself <END>
<BEG> computes the size of this list this is an o n operation <END>
<BEG> returns the number of elements in this list this is an o n operation <END>
<BEG> returns true if the given key has a value associated with it in the map <END>
<BEG> returns the value associated with the given key <END>
<BEG> convenience method to run ajc and collect string lists of messages this can be reflectively invoked with the list collecting <END>
<BEG> set holder to be passed all messages when holder is set, messages will not be printed by default <END>
<BEG> convenience api to make fail messages without messageutils's fail prefix <END>
<BEG> returns if the <code>-nocomments<code> flag is turned on <END>
<BEG> sets the workingdir <END>
<BEG> sets the the argument files by the comma-delimited string passed in <END>
<BEG> override javac createexclude to set <code>haveexcludes<code> <END>
<BEG> -xlintfile {lint properties} - enable or disable specific forms of -xlint messages based on a lint properties file default <END>
<BEG> source compliance level if not set explicitly, eclipse default holds <END>
<BEG> halt processing this tells main in the same vm to quit it fails when running in forked mode <END>
<BEG> called when compile or incremental compile is completing, this completes the output jar or directory by copying resources if requested note: this is a callback run synchronously by the compiler that means exceptions thrown here are caught by <END>
<BEG> recursively delete some contents of dir, but not the dir itself if deleteemptydirs is true, this deletes any subdirectory <END>
<BEG> recursively list files in srcdir <END>
<BEG> reads this input stream and returns contents as a byte[] <END>
<BEG> splits <code>input<code> at commas, trimming any white space <END>
<BEG> render i right-justified with a given width less than about 40 <END>
<BEG> return a resolvedmember representing the synthetic setter for the field the old style <1 6 9 is a heavyweight static <END>
<BEG> this static method goes on the aspect that declares the inter-type field <END>
<BEG> return an object that can access a particular value of this annotation <END>
<BEG> compute the flag for the xxxjoinpoint extra argument <END>
<BEG> creates an iterator i based on an object o returns o, once <END>
<BEG> this static void method goes on the aspect that declares the inter-type field and is called from the appropriate place target's initializer, or clinit, or topmost implementer's inits , to initialize the field; <END>
<BEG> called when it is determined that the pointcut refers to a constant value of true or false - enabling exact matching and no unnecessary calls to the method representing the if body <END>
<BEG> only used by weaver tools api <END>
<BEG> do i really match this shadow? <END>
<BEG> used in conjunction with checks on 'isstar ' to tell you if this pattern represents '' or '[]' which are different ! <END>
<BEG> convert a java lang reflect member into a resolved member in the world <END>
<BEG> return a list of the types in the hierarchy of this type, starting with this type the order in the list is the superclasses <END>
<BEG> returns the kind of shadow this is, representing what happens under this shadow <END>
<BEG> invalidate a cache entry <END>
<BEG> set the lint properties for this parser from the given resource on the classpath <END>
<BEG> parse the given aspectj type pattern, and return a matcher that can be used to match types using it <END>
<BEG> same signature as org aspectj util partialorder partialcomparable compareto <END>
<BEG> convenenience method for creating and issuing messages via the message handler - if you supply two locations you will get two messages <END>
<BEG> create the old style &lt;1 6 9 format setter name which includes the aspect requesting access and the type containing the <END>
<BEG> coerce the generic type of a list from list<bundlecapability> to list<capability> <END>
<BEG> return the mapping instance for the given class <END>
<BEG> prepend a list of bytebuffers to this stream <END>
<BEG> write a mutation to the wal and execute it <END>
<BEG> time for failed locks under normal circumstances the lock column will be <END>
<BEG> release using the provided mutation use this when you want to commit actual data <END>
<BEG> gets the default value of the given field, if any <END>
<BEG> adds a new codec implementation if name already had <END>
<BEG> return the value of a metadata property <END>
<BEG> return the schema used in this file <END>
<BEG> set whether this writer should flush the block to the stream every time a sync marker is written by default, the writer will flush the buffer <END>
<BEG> sets the value of a field <END>
<BEG> configures this factory to use the specified buffer size when creating encoder instances that buffer their output the default buffer size is 2048 <END>
<BEG> returns this factory's configured default buffer size used when creating <END>
<BEG> reconfigures this jsondecoder to use the string provided for input <END>
<BEG> pushes the production for the given symbol <tt>sym<tt> <END>
<BEG> pushes <tt>sym<tt> on to the stack <END>
<BEG> pushes the given symbol on to the skip and skips it <END>
<BEG> consume any more data that has been written by the writer but not needed by the reader so that the the underlying decoder is in proper shape for the next record this situation happens when, for example, <END>
<BEG> read a protocol from one or more json strings <END>
<BEG> use a strategy that validates that a schema can be read by existing schema s according to the avro default schema resolution <END>
<BEG> gets the error that was thrown during rpc execution does not block <END>
<BEG> adds a new plugin to manipulate per-call metadata plugins <END>
<BEG> get the handshake request of this rpc <END>
<BEG> the response object generated at the server, if it exists if an exception was generated, <END>
<BEG> return the time stamp associated with a particular spanevent in this trace node return -1 if the tracenode's span did not contain that event <END>
<BEG> true if a handshake has been completed for this connection used to <END>
<BEG> add a duration with the given time unit for example: <END>
<BEG> returns the response payload as bytes <END>
<BEG> returns the optional credentials provider to use to sign this request, overriding the default credentials provider at the client level <END>
<BEG> sets the amount of time in milliseconds to allow the client to complete the execution of an api call this timeout covers the entire client execution except for marshalling this <END>
<BEG> returns a copy of date that overrides the signing date in the request <END>
<BEG> converts the specified aws policy object to a json string, suitable for passing to an aws service <END>
<BEG> sets the collection of statements contained by this policy and returns this policy object so that additional method calls can be chained together <END>
<BEG> returns an aws access control policy object generated from json string allows configuring options for the json policy <END>
<BEG> returns the provider for this principal, which indicates in what group of users this principal resides <END>
<BEG> returns the principals associated with this policy statement, indicating which aws accounts are affected by this policy statement <END>
<BEG> get the time at which this credentials provider will block to refresh the credentials this is usually the expiration time <END>
<BEG> hook to allow subclasses to determine which properties are supported and which aren't <END>
<BEG> <p> the amazon resource name arn of the role to assume <END>
<BEG> sets the forced refresh interval in nanoseconds <END>
<BEG> reread data from disk <END>
<BEG> sets a custom executor service factory to use for the async clients the factory will be <END>
<BEG> sets a custom requestmetriccollector to use for the client <END>
<BEG> gets the service endpointconfiguration in use by the builder <END>
<BEG> sets the protocol i e http or https to use when connecting to amazon web services, and <END>
<BEG> sets the http user agent suffix to send with all requests <END>
<BEG> returns the optional local address the client will bind to <END>
<BEG> sets the optional proxy password to use when connecting through a proxy <END>
<BEG> returns the optional windows domain name for configuring an ntlm proxy if you aren't using a <END>
<BEG> sets the amount of time to wait in milliseconds when initially establishing a connection before giving up and timing out, and returns the updated clientconfiguration object so that additional method calls may be chained together <END>
<BEG> sets the name of the signature algorithm to use for signing requests made by this client if <END>
<BEG> returns whether to attempt to authenticate preemptively against proxy servers using basic authentication <END>
<BEG> sets the expiration time in milliseconds for a connection in the connection pool when <END>
<BEG> sets the maximum amount of time that an idle connection may sit in the connection pool and still be eligible for reuse when retrieving a connection from the pool to make a request, <END>
<BEG> sets the amount of time in milliseconds that a connection can be idle in the connection pool before it must be validated to ensure it's still open this stale connection check adds a small bit of overhead to validate the connection setting <END>
<BEG> the read method is called for the very first time <END>
<BEG> returns the number of bytes to be expected in the response, or -1 if the number is unknown e g when the client hasn't received the response <END>
<BEG> returns the executor service used for performing the callbacks <END>
<BEG> checks if the request was successful or not based on the status code <END>
<BEG> there is in general no need to set the signer in the execution context, since the signer for each request may differ depending on the uri of the request the exception is s3 where the <END>
<BEG> returns the original http request associated with this response <END>
<BEG> adds an http header to the set associated with this response <END>
<BEG> hook for subclasses to override in order to collect additional metadata from service responses <END>
<BEG> returns the signer configuration for the specified service, not specific to any region <END>
<BEG> connects to the amazon ec2 instance metadata service to retrieve the default credential information if any <END>
<BEG> returns the value of the given key; or null of no such entry exists <END>
<BEG> returns true if the per-host metrics flag has been set; false otherwise <END>
<BEG> returns an unmodifiable set of the current predefined metrics <END>
<BEG> returns a provider id that can be used to compute the number of active byte throughput provider of a specific metric type being active in a given time interval <END>
<BEG> collects metrics for non-request specific latencies <END>
<BEG> returns credential scope for the endpoint <END>
<BEG> returns the ssl common name for the endpoint <END>
<BEG> returns the dns suffix of the partition <END>
<BEG> sets the regex for the regions in the partition <END>
<BEG> returns true if the region is explicitly configured in the partition <END>
<BEG> returns true if the service is explicitly enabled for http in this region or a service is partition wide enabled returns false otherwise <END>
<BEG> merge the given overrides with 'this' registry overrides are higher precedence than 'this' registry both 'this' <END>
<BEG> the name of this region, used in the regions xml file to identify it <END>
<BEG> initializes the region metadata by loading from the default hierarchy of region metadata locations <END>
<BEG> returns true if the specified exception is a request entity too large error <END>
<BEG> sets the global time difference in seconds between the running jvm and aws if this value is set then all the subsequent instantiation of an <END>
<BEG> returns the jsontoken which is to be parsed next returns null by <END>
<BEG> add 1 to an existing count for a given event if the count for that event <END>
<BEG> add a property if you add the same property more than once, it stores <END>
<BEG> returns a base 16 encoded byte array of the given bytes <END>
<BEG> returns a base 32 encoded string of the given bytes <END>
<BEG> decodes the given base 32 encoded bytes <END>
<BEG> decodes the given base 64 encoded string, skipping carriage returns, line feeds and spaces as needed <END>
<BEG> returns a copy of the bytes from the given <code>bytebuffer<code>, ranging from the the buffer's current position to the buffer's limit; or null if the input is null <END>
<BEG> retrieves the resource as an input stream via the context class loader of the current thread, and if not found, via the class loaders of the optionally specified classes in the order of their specification, and if not found, from the class loader of <END>
<BEG> parses the given date string returned by the aws service into a date object <END>
<BEG> returns the number of days since epoch with respect to the given number of milliseconds since epoch <END>
<BEG> get the private ip address of the instance in cases where multiple <END>
<BEG> get the public key only available if supplied at instance launch time <END>
<BEG> returns an immutablemapparameter instance containing four entries <END>
<BEG> returns the original string specified when this input stream was constructed <END>
<BEG> a null-safe trim method if the input string is null, returns null; <END>
<BEG> captures the given start time in nanosecond, ignoring the wall clock time <END>
<BEG> closes the last opened element at the current position in the in-progress xml document <END>
<BEG> adds the specified date as text to the current position of the in-progress xml document <END>
<BEG> evaluates the specified xpath expression and returns the result as a float <END>
<BEG> returns the length of the specified node list <END>
<BEG> pathany matcher that checks if any element of the final result matches the expected result <END>
<BEG> returns the executor service used by this client to execute async requests <END>
<BEG> <p> deletes the specified message from the specified queue to select the message to delete, use the <END>
<BEG> <p> deletes up to ten messages from the specified queue this is a batch version of <END>
<BEG> <p> returns a list of your queues that have the <code>redrivepolicy<code> queue attribute configured with a dead-letter queue <END>
<BEG> <p> delivers up to ten messages to the specified queue this is a batch version of <code> <a>sendmessage<a> <code> <END>
<BEG> sends a message to sqs and returns the sqs reply <END>
<BEG> retrieves messages from an sqs queue <END>
<BEG> <p> the unique identification of the permission you're setting for example, <code>alicesendmessage<code> maximum <END>
<BEG> <p> a message explaining why the action failed on this entry <END>
<BEG> <p> represents a message whose visibility timeout has been changed successfully <END>
<BEG> <p> the new value for the message's visibility timeout in seconds values values: <code>0<code> to <END>
<BEG> <p> the url of the created amazon sqs queue <END>
<BEG> <p> a list of <code> <a>deletemessagebatchresultentry<a> <code> items <END>
<BEG> <p> an identifier for a message in this batch used to communicate the result <END>
<BEG> <p> the message to send the maximum string size is 256 kb <END>
<BEG> get the specified mime header <END>
<BEG> write the content to the stream <END>
<BEG> removes all <code>attachmentpart<code> objects that have been added to this <code>soapmessage<code> object <END>
<BEG> for a given sendtype value, return a string representation <END>
<BEG> get the filename of the content if it is cached to disk <END>
<BEG> set the active message context <END>
<BEG> set the fault details to a string element <END>
<BEG> get the soap headers associated with this fault <END>
<BEG> this is an expensive operation <END>
<BEG> get the allowed method names <END>
<BEG> if the user calls this with an engineconfiguration object, all adminclients on this thread will use that engineconfiguration rather than the default one this is primarily to enable the <END>
<BEG> make a quit command <END>
<BEG> removes if set the named property <END>
<BEG> add a fault for this operation <END>
<BEG> gets an array of preconfigured call objects for invoking operations on the specified port there is one call object per operation that <END>
<BEG> defines the current type mappig registry <END>
<BEG> sets this service's axisengine this engine will be shared by all <END>
<BEG> is this the first time the type mappings are being registered? <END>
<BEG> sets the value for a named property jax-rpc 1 0 specification <END>
<BEG> set the header <END>
<BEG> get the header element <END>
<BEG> set the classpath to be used for this compilation <END>
<BEG> set the encoding of the input source file or <code>null<code> to use the platform's default encoding <END>
<BEG> return the ending line number of the program text originating this error <END>
<BEG> return the message produced by the language processor <END>
<BEG> returns a copy of the environment's default socket factory <END>
<BEG> get the script implementation <END>
<BEG> forcefully shutdown the pool <END>
<BEG> returns a global request handler <END>
<BEG> remove a named transport <END>
<BEG> register a particular namepsace which maps to a given wsddservice <END>
<BEG> get the documentation <END>
<BEG> get our response flow <END>
<BEG> sets value of nillable property default: <code>false<code> <END>
<BEG> obtain the field name <END>
<BEG> return the operation's name <END>
<BEG> indicates whether this parameter is nillable or not <END>
<BEG> get event recorder <END>
<BEG> convenenience method that returns true if the value is nil due to the xsi:nil attribute <END>
<BEG> for deserializers of non-primitives, the value may not be known until later due to multi-referencing in such <END>
<BEG> obtains a deserializer by invoking getdeserializer method in the javatype class or its helper class <END>
<BEG> returns the deserclassconstructor <END>
<BEG> getter for property context <END>
<BEG> indicate whether the serialization should be pretty printed <END>
<BEG> gets the list of encoding styles supported by this typemapping object <END>
<BEG> return a list of qnames which this handler understands by returning <END>
<BEG> add this passed in session to this service's list of sessions <END>
<BEG> placeholder for suspend this service method <END>
<BEG> discover whether the logging flag is set <END>
<BEG> retrieve the deserializationcontext associated with this messageelement <END>
<BEG> get the is-root flag <END>
<BEG> set the local part of this element's name <END>
<BEG> set the namespace uri of the element <END>
<BEG> map from a prefix to a namespace <END>
<BEG> returns value of the node as an object of registered type <END>
<BEG> bind a a new soap envelope sets the dirty bit <END>
<BEG> get the attribute with namespacelocal name match <END>
<BEG> returns the <code>index<code>th item in the map if <code>index<code> <END>
<BEG> inserts the node <code>newchild<code> before the existing child node <code>refchild<code> if <code>refchild<code> is <code>null<code>, <END>
<BEG> print the contents of this node <END>
<BEG> remove all headers <END>
<BEG> set the soap constants for this envelope <END>
<BEG> sets this <code>soapfaultexception<code> object with the given fault actor <END>
<BEG> subclasses can override <END>
<BEG> returns the name of the class prividing attachment implementation <END>
<BEG> replace the engine's type mapping registry with a local one this will <END>
<BEG> get the <code>soapconstants<code> used by this message context <END>
<BEG> get the xml schema version information <END>
<BEG> get the response message <END>
<BEG> gets the soapmessage from this message context <END>
<BEG> set the hashtable that contains the default values for our properties <END>
<BEG> return the class name of the service <END>
<BEG> set the session's time-to-live <END>
<BEG> touch the session mark it recently used <END>
<BEG> invalidate the session <END>
<BEG> obtain the qname for the role attribute actorrole <END>
<BEG> obtain the next roleactor uri <END>
<BEG> obtain the ref attribute name <END>
<BEG> obtain the qname of the soap array type <END>
<BEG> create a new <code>soapconnection<code> <END>
<BEG> sends the given message to the specified endpoint and blocks until it has returned the response <END>
<BEG> register classes, log exceptions <END>
<BEG> return the sessions' time-to-live <END>
<BEG> no-op for now <END>
<BEG> called when a session is destroyed by the servlet engine we use <END>
<BEG> get max session count <END>
<BEG> demand create an axis server; return an existing one if one exists <END>
<BEG> send a message wo waiting for a response <END>
<BEG> returns an object property from a map and removes it <END>
<BEG> allocate an embedded axis server to process requests and initialize it <END>
<BEG> returns the sum of the hashcodes of the underlying tokens, an operation which is not sensitive to ordering <END>
<BEG> returns the hashcode of the underlying calendar <END>
<BEG> get the scheme for this uri <END>
<BEG> get the fragment for this uri <END>
<BEG> set the port for this uri -1 is used to indicate that the port is <END>
<BEG> append to the end of the path of this uri if the current path does <END>
<BEG> query if property is readable <END>
<BEG> query if property is an array excluded byte[] <END>
<BEG> get the property value <END>
<BEG> obtain the classloader if any associated with the given classname <END>
<BEG> adds an object to the map new identity obj is used as key <END>
<BEG> any builtin type that has a constructor that takes a string is a basic type <END>
<BEG> turn a java keyword string into a non-java keyword string right now <END>
<BEG> tests the object 'value': if its null, return default <END>
<BEG> tests the string 'value': return 'true' if its null, 'false', '0', or 'no' - else 'false' <END>
<BEG> set the parent hashtable for this object <END>
<BEG> do a whole lot of nothing <END>
<BEG> set the input body type for the given operation <END>
<BEG> returns the base type of a given type with its symbol table <END>
<BEG> get the messageentry with the given qname if it doesn't exist, return null <END>
<BEG> get the list of all the xml schema types in the symbol table in other words, all entries <END>
<BEG> check if this is a known namespace soap-enc or schema xsd or schema xsi or xml <END>
<BEG> set the boolean indicating whether underlying type of array is nillable <END>
<BEG> register referrant typeentry so that the code can update the typeentry when the undefined element or type is defined <END>
<BEG> get the build file genaeration state <END>
<BEG> by default, code is generated only for referenced elements <END>
<BEG> call this method if you have a uri for the wsdl document <END>
<BEG> turn onoff server-side binding generation <END>
<BEG> returns the deploy mode flag <END>
<BEG> you should not need to override this method <END>
<BEG> return class if interface is needed instead, this method must be <END>
<BEG> generate deploy wsdd only generate it if the emitter <END>
<BEG> returns the appropriate implements text <END>
<BEG> write the getports method <END>
<BEG> return the given package name in directory format dots replaced by slashes if pkg is null, <END>
<BEG> common code for generating a qname in emitted code note that there's <END>
<BEG> sets the token url that's used to request access tokens for example, the default token url is <END>
<BEG> gets the base url that's used when sending requests to the box api the default value is <END>
<BEG> sets the read timeout for this connection <END>
<BEG> refresh's this connection's access token using its refresh token <END>
<BEG> notifies an error event to all the listeners <END>
<BEG> revokes the tokens associated with this api connection this results in the connection no <END>
<BEG> gets the url from the request <END>
<BEG> gets information about this collaboration <END>
<BEG> deletes this collaboration whitelist entry for user <END>
<BEG> gets the raw json object containing information about the source of this event <END>
<BEG> uploads a new version of this file, replacing the current version note that only users with premium accounts <END>
<BEG> retrieves a thumbnail, or smaller image representation, of this file sizes of 32x32, 64x64, 128x128, <END>
<BEG> adds a collaborator to this file <END>
<BEG> adds a collaborator to this folder an email will be sent to the collaborator if they don't already have a box <END>
<BEG> abort an upload session, discarding any chunks that were uploaded to it <END>
<BEG> used if no or wrong file id was set with constructor <END>
<BEG> gets the name of this version of the file <END>
<BEG> used to apply or update the watermark for the folder <END>
<BEG> returns the global maximum number of request attempts <END>
<BEG> deletes this group <END>
<BEG> remove operation is not supported <END>
<BEG> sets the redirecturl for this response <END>
<BEG> returns a hash code value for this boxresource <END>
<BEG> assigns this retention policy to folder <END>
<BEG> clears the parameters before performing a new search <END>
<BEG> set the existing fields that are used for the search criteria <END>
<BEG> gets an iterable of all the assignments of this task <END>
<BEG> permanently deletes a trashed folder <END>
<BEG> sets the access level of this upload email <END>
<BEG> gets the current user <END>
<BEG> renames this weblink <END>
<BEG> gets whether or not the new user will be required to use two-factor authentication <END>
<BEG> gets the name that will be given to the uploaded file <END>
<BEG> returns the 36 character uuid to identify the metadata object <END>
<BEG> returns the scope <END>
<BEG> replaces an existing metadata value <END>
<BEG> get a value from a string or enum metadata field <END>
<BEG> gets the unique template key to identify the metadata template <END>
<BEG> get representation's content which includes a url template <END>
<BEG> set the upper bound bytes in the file size range <END>
<BEG> a super import import operation has been performed <END>
<BEG> this method is a temporary workaround used with definingclass <END>
<BEG> indicate that the specified class name has been defined and may be loaded normally <END>
<BEG> note: bshmethod needs to re-evaluate the method return type here <END>
<BEG> this is kind of crazy, but used by the setnamespace command <END>
<BEG> use direct class forname to test for the existence of a class <END>
<BEG> explicitly set a class source this is used for generated classes, but <END>
<BEG> print an error message in a standard format on the output stream associated with this interpreter on the gui console this will appear <END>
<BEG> print a debug message on debug stream associated with this interpreter only if debugging is turned on <END>
<BEG> get the class manager associated with this interpreter the bshclassmanager of this interpreter's global namespace <END>
<BEG> remove the variable from the namespace <END>
<BEG> substitute the specified text for the parameter <END>
<BEG> retrieve a stage from the stagemanager <END>
<BEG> the type of the cell values for cell belonging to this column <END>
<BEG> get metadata about keyspace by its name <END>
<BEG> load individual view definition to the schema to make view lookup faster <END>
<BEG> read schema from system keyspace and calculate md5 digest of every row, resulting digest will be converted into uuid which would act as content-based version of the schema <END>
<BEG> creates a min function for the specified type <END>
<BEG> the paging state for this query, or null if not relevant <END>
<BEG> checks if any of the underlying restriction is a slice restrictions <END>
<BEG> checks if underlying restrictions would require filtering <END>
<BEG> checks if restrictions on the clustering key have in restrictions <END>
<BEG> returns the index operator corresponding to the specified boundary <END>
<BEG> checks if this selection contains a complex column <END>
<BEG> checks whether the conditions represented by this object applies provided the current state of the partition on which those conditions are <END>
<BEG> returns an <code>invalidrequestexception<code> with the specified message <END>
<BEG> a comparator for rows <END>
<BEG> switches the memtable iff the live memtable is the one provided <END>
<BEG> package protected for access from the compactionmanager <END>
<BEG> returns a columnfamilystore by cfid if it exists, null otherwise differently from others, this method does not throw exception if the table does not exist <END>
<BEG> whether or not the given metadata is compatible representable with cql language <END>
<BEG> the number of simple columns in this object <END>
<BEG> iterator over the complex columns of this object <END>
<BEG> is overlapped sstables ignored control whether or not we are taking into account overlapping sstables when looking for fully expired sstables <END>
<BEG> pause compaction while we cancel all ongoing compactions separate call from enabledisable to not have to save the enabled-state externally <END>
<BEG> the directories we can write to <END>
<BEG> creates a counter context with a single remote shard <END>
<BEG> returns the clock and the count associated with the local counter id, or 0, 0 if no such shard is present <END>
<BEG> construct a transaction for use in an offline operation <END>
<BEG> retry all deletions that failed the first time around presumably bc the sstable was still mmap'd <END>
<BEG> adds this liveness information to the provided digest <END>
<BEG> whether this liveness information supersedes another one that is whether is has a greater timestamp than the other or not <END>
<BEG> returns a copy of this liveness info updated with the provided timestamp <END>
<BEG> the length of the row header partition key, partition deletion and static row <END>
<BEG> the column this is data for <END>
<BEG> merge this stats with another one <END>
<BEG> the deletion time for the range tombstone this boundary starts in clustering order <END>
<BEG> queries both memtable and sstables to fetch the result of this query <END>
<BEG> return whether the slice formed by the two provided bound is empty or not <END>
<BEG> run on the close of any logical partitions iterator this function was applied to we stipulate logical, because if applied to a transformed iterator the lifetime of the iterator object may be longer than the lifetime of the logical iterator it was applied to; if the iterator is refilled with morecontents, for instance, the iterator may outlive this function <END>
<BEG> return the views that are potentially updated by the provided updates <END>
<BEG> when views contains a primary key column that is not part of the base table primary key, we use that column liveness info as the view pk, to ensure that whenever that column is not live in the base, the row is not live in the view <END>
<BEG> compute a bounds of keys corresponding to a given bounds of token <END>
<BEG> set the size of the input split <END>
<BEG> get the hosts to ignore as a collection of strings <END>
<BEG> invoke taskattemptcontext progress works with both <END>
<BEG> write a hint for a single node <END>
<BEG> returns the amount of memory in bytes used off heap by the bloom filter <END>
<BEG> direct io sstablescanner over a defined range of tokens <END>
<BEG> return the data center for which an endpoint resides in <END>
<BEG> this is called when the snitch properties for many endpoints are updated, it will update the topology mappings of any endpoints whose snitch has changed, see cassandra-10238 <END>
<BEG> used by tests <END>
<BEG> the total number of events that have occurred since this object was created note that the previous count <END>
<BEG> this method returns the verb handler associated with the registered verb if no handler has been registered then null is returned <END>
<BEG> get the materialized view with the specified name <END>
<BEG> creates a materializedviews instance with the materializedview with the provided name removed <END>
<BEG> just create a socket <END>
<BEG> add transfer task to send given sstable files <END>
<BEG> process received file <END>
<BEG> sequentially read bytes from the file and write them to the output stream <END>
<BEG> checks whether the socket is connected <END>
<BEG> returns immediately if there has been trace activity since the last call, otherwise waits until there is trace activity, or until the timeout expires <END>
<BEG> takes a collection of mutations and possibly augments it by adding extra mutations generated by configured triggers if no additional mutations are created <END>
<BEG> fill the target array with the contents of the provided subtree, in ascending order, starting at targetoffset <END>
<BEG> try acquiring a write lock if the given interval is passed since the last call to this method <END>
<BEG> must be called exactly once, when the logical operation for which this ref was created has terminated <END>
<BEG> return how many threads are waiting <END>
<BEG> loops waiting on the supplied condition and waitqueue and will not return until the condition is true <END>
<BEG> please use getbroadcastaddress instead you need this only when you have to listenconnect <END>
<BEG> updates checksum with the provided bytebuffer at the given offset + length <END>
<BEG> get the differences between the two sets of merkletrees <END>
<BEG> memory a byte array consumes <END>
<BEG> returns true if v is a power of two or zero <END>
<BEG> acquires a single unit at the given rate if the rate changes between calls, a new rate limiter is created <END>
<BEG> returns a cql query representing this function <END>
<BEG> creates a new session on this cluster and initializes it asynchronously <END>
<BEG> the name of this cluster object <END>
<BEG> unregisters the provided latency tracking from being updated with host read latencies <END>
<BEG> returns the number of nanoseconds in this duration <END>
<BEG> the name of keyspace that either already exists or is home to the table that already exists <END>
<BEG> the consistency level of the operation triggering this unavailable exception <END>
<BEG> the index of the execution that completed this query <END>
<BEG> return the query trace if tracing was enabled on this query <END>
<BEG> returns the return type of this function <END>
<BEG> returns the address that the driver will use to connect to the node <END>
<BEG> return the current schema version for the host <END>
<BEG> returns the user types defined in this keyspace <END>
<BEG> checks whether an identifier is a known reserved cql keyword or not <END>
<BEG> returns the known hosts of this cluster <END>
<BEG> checks whether hosts that are currently up agree on the schema definition <END>
<BEG> returns the total number of currently trashed connections to cassandra hosts <END>
<BEG> quote the given string; single quotes are escaped <END>
<BEG> unquote the given string if it is quoted; single quotes are unescaped <END>
<BEG> creates a new latency aware policy builder given the child policy that the resulting policy should wrap <END>
<BEG> the default address translator <END>
<BEG> the retry policy in use <END>
<BEG> returns the maximum time to wait for schema agreement before returning from a ddl query <END>
<BEG> adds a new options for this batch statement <END>
<BEG> descending ordering for the provided column <END>
<BEG> option to set the timestamp for a modification query insert, update or delete <END>
<BEG> incrementation of a counter column <END>
<BEG> discard a list of values to a list column <END>
<BEG> remove a value from a set column <END>
<BEG> creates a function call <END>
<BEG> creates an alias for a given column <END>
<BEG> sets the default idempotence for queries <END>
<BEG> the default window size in milliseconds used to debounce node list refresh requests <END>
<BEG> sets the maximum number of node list refresh requests that the control connection can accumulate before executing them <END>
<BEG> sets the default window size in milliseconds used to debounce node refresh requests <END>
<BEG> add a column definition to this create statement, when the type contains a udt <END>
<BEG> add a clustering column definition to this create table statement, when its type contains a udt <END>
<BEG> add the 'if not exists' condition to this create index statement <END>
<BEG> generate the script for custom type creation <END>
<BEG> start building a new create index statement <END>
<BEG> build the datatype representation of a frozen udt, to include in a schema builder statement <END>
<BEG> build the datatype representation of a complex udt type, to include in a schema builder statement <END>
<BEG> define the caching options for cassandra 2 1 x <END>
<BEG> define the desired false-positive probability for sstable bloom filters <END>
<BEG> define the time to wait before garbage collecting tombstones deletion markers <END>
<BEG> define a free-form option as a keyvalue pair <END>
<BEG> returns a named value as the java type matching its cql type <END>
<BEG> returns whether reuse-address is enabled <END>
<BEG> sets the retry policy to use for this query <END>
<BEG> return the start of the range <END>
<BEG> return a newly-created codec for the given cql custom type <END>
<BEG> the name of the keyspace this udt is part of <END>
<BEG> the minor version number <END>
<BEG> the build label if there is one <END>
<BEG> loads the enum class, instantiates the enum constants for the class, and returns the enum constant value <END>
<BEG> get the raw type signature string of the array class, e g [[i for int[][] <END>
<BEG> get the names of any classes referenced in the type signature <END>
<BEG> disables the scanning of nested jarfiles jarfiles within jarfiles <END>
<BEG> causes classgraph to return classes that are not in the whitelisted packages, but that are directly referred to by classes within whitelisted packages as a superclass, implemented interface or annotation <END>
<BEG> ignore parent module layers i e only scan module layers that are not the parent of another module layer <END>
<BEG> blacklist one or more jars, preventing them from being scanned <END>
<BEG> checks if the class is an annotation <END>
<BEG> checks whether this class is an implemented interface meaning a standard, non-annotation interface, or an annotation that has also been implemented as an interface by some class <END>
<BEG> get the inner classes contained within this class, if this is an outer class <END>
<BEG> returns information on visible constructors declared by this class, but not by its interfaces or <END>
<BEG> returns information on the named field declared by the class, but not by its superclasses see also: <END>
<BEG> compare based on class name <END>
<BEG> use class name for equals <END>
<BEG> get the type signatures of any superinterfaces <END>
<BEG> returns the modifier bits for the field <END>
<BEG> get a list of annotations on this field, along with any annotation parameter values, wrapped in <END>
<BEG> check if this method has the named annotation <END>
<BEG> returns true if this method parameter is final <END>
<BEG> get the module layer of jpms type modulelayer <END>
<BEG> get the list of all resources found in whitelisted packages that have the given path, relative to the package root of the classpath element may match several resources, up to one per classpath element <END>
<BEG> get the list of all resources found in whitelisted packages that have the requested filename extension <END>
<BEG> get all interface or annotation classes found during the scan annotations are technically interfaces, and <END>
<BEG> get the type signature associated with the wildcard or null, if the wildcard is any <END>
<BEG> interrupt all threads that share this interruptionchecker <END>
<BEG> recursively serialize the named field of an object, skipping transient and final fields <END>
<BEG> sort prefixes to ensure correct whitelistblacklist evaluation see issue #167 <END>
<BEG> convert a path to a package name <END>
<BEG> check if the blacklist is empty <END>
<BEG> check if a string is specifically whitelisted and not blacklisted <END>
<BEG> create a new instance of a 'primitive' property <END>
<BEG> <p>returns an iterator over the option members of commandline <p> <END>
<BEG> <p>the next option created can have unlimited argument values <p> <END>
<BEG> <p>add an option that contains a short-name and a long-name<p> <p>it may be specified as requiring an argument <p> <END>
<BEG> <p>create an object from the classname and empty constructor <p> <END>
<BEG> factory method to create a typed bag <END>
<BEG> factory method to create an unmodifiable map <END>
<BEG> returns true if this collection is full and no new elements can be added <END>
<BEG> returns the least recently inserted element in this buffer <END>
<BEG> gets the next value from the buffer, waiting until an object is added for up to the specified timeout value if the buffer is empty <END>
<BEG> gets the comparator being used for this buffer, null is natural order <END>
<BEG> create a new closure that calls two closures, passing the result of the first into the second <END>
<BEG> create a new closure that uses the input object as a key to find the closure to call <END>
<BEG> executes the given closure on each element in the collection <END>
<BEG> selects all elements from input collection which match the given predicate and adds them to outputcollection <END>
<BEG> appends the specified element to the end of this list <END>
<BEG> removes the first element of this list, if any <END>
<BEG> returns the hash code of the underlying map <END>
<BEG> returns true if this list is operating in fast mode <END>
<BEG> test if this list has no elements <END>
<BEG> remove the element at the specified position in the list, and shift any subsequent elements down one position <END>
<BEG> return an array containing all of the elements in this list in the correct order the runtime type of the returned array is that of <END>
<BEG> gets the predicates, do not modify the array <END>
<BEG> gets the transformer <END>
<BEG> returns the the previous element <END>
<BEG> gets an empty map iterator <END>
<BEG> returns a typed list backed by the given list <END>
<BEG> puts all the values from the specified map into this map <END>
<BEG> removes a mapping from the map <END>
<BEG> gets the first key in the map, which is the most recently inserted <END>
<BEG> gets the last key in the map, which is the first inserted <END>
<BEG> creates an entry to store the data <END>
<BEG> gets the <code>after<code> field from a <code>linkentry<code> <END>
<BEG> specify the mapmutator to be used by mutation operations <END>
<BEG> copies all of the mappings from the specified map to this map optional operation the effect of this call is equivalent to that <END>
<BEG> transforms a map <END>
<BEG> gets a map from a map in a null-safe manner <END>
<BEG> looks up the given key in the given map, converting the result into a short, using the default value if the the conversion fails <END>
<BEG> looks up the given key in the given map, converting the result into a double, using the default value if the the conversion fails <END>
<BEG> null-safe check if the specified map is not empty <END>
<BEG> returns a predicated validating map backed by the given map <END>
<BEG> creates a multi-value map backed by the given map which returns collections of the specified type <END>
<BEG> creates a multi-value map backed by the given map which returns collections created by the specified collection factory <END>
<BEG> returns <code>true<code> if this map contains the given key <END>
<BEG> factory method to create a typed set <END>
<BEG> test if queue is empty <END>
<BEG> return element on top of heap but don't remove it <END>
<BEG> gets a transformer that returns the input object <END>
<BEG> returns 0 after eof has reached for the current entry data, otherwise always return 1 <END>
<BEG> closes the underlying outputstream <END>
<BEG> change the list delimiter for this configuration <END>
<BEG> determine if this configuration is using delimiters when parsing property values to convert them to lists of values defaults to false <END>
<BEG> returns true if missing values throw exceptions <END>
<BEG> creates the interpolator object that is responsible for variable interpolation this method is invoked on first access of the <END>
<BEG> adds a special <END>
<BEG> save the configuration to the specified url <END>
<BEG> enters the &quot;no reloading mode&quot; as long as this mode is active <END>
<BEG> allows to set the file configuration delegate <END>
<BEG> check if the configuration is empty <END>
<BEG> sets the configurationfile <END>
<BEG> appends the name of a property to this key if necessary, a <END>
<BEG> tries to convert the specified url to a file object if this fails, <END>
<BEG> fires a sax element start event <END>
<BEG> get a list of short objects associated with the given configuration key <END>
<BEG> get an array of short primitives associated with the given configuration key if the key doesn't map to an existing object <END>
<BEG> get a list of long objects associated with the given configuration key <END>
<BEG> get a list of bigintegers associated with the given configuration key <END>
<BEG> get an array of urls associated with the given configuration key <END>
<BEG> get a color associated with the given configuration key <END>
<BEG> returns the configuration provider for the given tag <END>
<BEG> returns the configuration provided by this builder loads and parses the <END>
<BEG> returns the value of the affected property if available <END>
<BEG> returns a collection with all configuration event listeners that are currently registered at this object <END>
<BEG> determines whether detail events should be generated if enabled, some <END>
<BEG> returns a collection with all configuration error listeners that are currently registered at this object <END>
<BEG> set the filesystem to use <END>
<BEG> sets the root node of this hierarchical configuration this method <END>
<BEG> returns the maximum defined index for the given key this is useful if <END>
<BEG> helper method for fetching a list of all nodes that are addressed by the specified key <END>
<BEG> sets the configuration object to be parsed <END>
<BEG> determine if the given line is a section <END>
<BEG> deregisters the global lookup object for the specified prefix this means <END>
<BEG> requests the parent interpolator this object is used if the interpolation is nested <END>
<BEG> return the base context with the prefix applied <END>
<BEG> return the minimal time in milliseconds between two reloadings <END>
<BEG> sets the associated expression engine <END>
<BEG> removes trailing property delimiters from the specified key <END>
<BEG> returns a reference to this node's parent <END>
<BEG> returns the number of children with the given name <END>
<BEG> returns the child node with the given index <END>
<BEG> removes all child nodes of this node <END>
<BEG> returns a list with all attributes of this node with the given name <END>
<BEG> returns the index end marker <END>
<BEG> returns a flag if the new node to be added is an attribute <END>
<BEG> sets the name of the new node a node with this name will be added to the <END>
<BEG> adds the name of a path node with this method an additional node to be <END>
<BEG> adds all child nodes of the given source node to this view node <END>
<BEG> returns the name of the root element if this configuration was loaded <END>
<BEG> returns the value of the schemavalidation flag <END>
<BEG> returns the xml document this configuration was loaded from the return <END>
<BEG> writes the configuration as child to the given dom node <END>
<BEG> returns a map with bean declarations for the complex properties of the bean to be created these declarations are obtained from the child nodes <END>
<BEG> returns a string representation of this object this is the <END>
<BEG> returns the hash code for this object <END>
<BEG> returns a set with the entries contained in this configuration-based map <END>
<BEG> returns the value of the specified key the key is converted to a string <END>
<BEG> removes the property with the given key properties with names that start <END>
<BEG> creates a new <code>node<code> object with the specified name this <END>
<BEG> returns the configuration object to be processed <END>
<BEG> adds a property to this configuration <strong>this operation is not <END>
<BEG> returns the record separator delimiting output records <END>
<BEG> returns whether a nullstring has been defined <END>
<BEG> returns whether a quotechar has been defined <END>
<BEG> returns a string representation of the contents of this record the result is constructed by comment, mapping, <END>
<BEG> eases ide debugging <END>
<BEG> manually evicts idle connections <END>
<BEG> returns the value of the flag that controls whether or not connections being returned to the pool will be checked <END>
<BEG> returns the state caching flag <END>
<BEG> true means that validation will fail immediately for connections that have previously thrown sqlexceptions with sql_state indicating fatal disconnection errors <END>
<BEG> <p> returns the maximum number of connections that can remain idle in the pool excess idle connections are destroyed <END>
<BEG> returns the maximum number of milliseconds that the pool will wait for a connection to be returned before throwing an exception a value less than or equal to zero means the pool is set to wait indefinitely <END>
<BEG> returns the minimum number of idle connections in the pool the pool attempts to ensure that minidle connections <END>
<BEG> <p> flag to remove abandoned connections if they exceed the removeabandonedtimeout during pool maintenance <END>
<BEG> sets the value of the flag that controls whether or not connections being returned to the pool will be checked <END>
<BEG> sets the evictionpolicy implementation to use with this connection pool <END>
<BEG> sets the maximum total number of idle and borrows connections that can be active at the same time use a negative <END>
<BEG> sets the <code>testwhileidle<code> property this property determines whether or not the idle object evictor <END>
<BEG> if false, getdelegate and getinnermostdelegate will return null <END>
<BEG> get the innermost connection, if allowed <END>
<BEG> sets the connection properties passed to the jdbc driver <END>
<BEG> sets the value of url string used to locate the database for this datasource <END>
<BEG> gets the number of active connections in the pool for a given user <END>
<BEG> gets the underlying database meta data <END>
<BEG> note: this method was protected prior to jdbc 4 <END>
<BEG> gets an array of column indexes indicating the columns that should be returned from the inserted row or rows <END>
<BEG> gets the correct i18n message for the given key with placeholders replaced by the supplied arguments <END>
<BEG> returns the charset to be used for parsing uris <END>
<BEG> closes the proxied input stream and, if so configured, the associated output stream an exception thrown from one stream will not prevent <END>
<BEG> invokes the delegate's <code>write char[], int, int <code> method <END>
<BEG> closes both streams <END>
<BEG> <p>find the index of the given value in the array <p> <END>
<BEG> <p>forwards to <code>reflectiontostringbuilder<code> <p> <END>
<BEG> returns a suitable hashcode for this mutable <END>
<BEG> <p>get the time on the stopwatch <p> <END>
<BEG> <p>split the time <p> <END>
<BEG> <p>validate an argument, throwing <code>illegalargumentexception<code> if the argument array has <code>null<code> elements or is <code>null<code> <p> <END>
<BEG> <p>validate an argument, throwing <code>illegalargumentexception<code> if the argument map is empty <code>null<code> or no elements <p> <END>
<BEG> log an error to the log4j category with <code>trace<code> priority <END>
<BEG> log an error to the log4j category with <code>debug<code> priority <END>
<BEG> log a message to the log4j category with <code>error<code> priority <END>
<BEG> log an error to the log4j category with <code>error<code> priority <END>
<BEG> log a message to the log4j category with <code>fatal<code> priority <END>
<BEG> log a message to the log4j logger with <code>fatal<code> priority <END>
<BEG> log message to <code>logkit<code> logger with <code>debug<code> priority <END>
<BEG> get a composable function by fixing the second argument of the instance <END>
<BEG> return a function multiplying the instance and another function <END>
<BEG> returns a copy of the polynomial function <END>
<BEG> returns true iff the given complex root is actually a real zero in the given interval, within the solver tolerance level <END>
<BEG> verifies that <code>lower < initial < upper<code> throws illegalargumentexception if not <END>
<BEG> modify the scale parameter <END>
<BEG> for this distribution, x, this method returns p x &lt; x <END>
<BEG> the probability distribution function p x <= x for a zipf distribution <END>
<BEG> get the chi-square value <END>
<BEG> set the desired relative error in the sum of squares <END>
<BEG> add a parameter to the problem <END>
<BEG> set the ignore flag to the specified value setting the ignore flag to true allow to reject wrong measurements, which sometimes can be detected only rather late <END>
<BEG> <p> access the numerator as a <tt>long<tt> <END>
<BEG> <p> gets the fraction as an <tt>int<tt> this returns the whole number part <END>
<BEG> determine whether or not the given number of generations have passed <END>
<BEG> check if a matrix is subtraction compatible with the instance <END>
<BEG> returns the inverse matrix if this matrix is invertible <END>
<BEG> returns the result of multiplying this by the vector <code>v<code> <END>
<BEG> returns the lu decomposition as a bigmatrix <END>
<BEG> <p> implementation note: this performs an exact comparison, and as a result <END>
<BEG> gets the arguments used to build the message of this throwable <END>
<BEG> constructs a new <code>nosuchelementexception<code> with specified formatted detail message <END>
<BEG> reinitialize the beginning of the step <END>
<BEG> really copy the finalized instance <END>
<BEG> generate a random int value uniformly distributed between <code>lower<code> and <code>upper<code>, inclusive <END>
<BEG> generate a random int value uniformly distributed between <code>lower<code> and <code>upper<code>, inclusive this algorithm uses <END>
<BEG> computes the correlation matrix for the columns of the input rectangular array the colums of the array represent values <END>
<BEG> sets the value of the quantile field determines what percentile is computed when evaluate is called with no quantile argument <END>
<BEG> set the singleton unknowndistributionchisquaretest instance <END>
<BEG> returns the <i>observed significance level<i>, or <i> p-value<i>, associated with a paired, two-sample, two-tailed t-test based on the data in the input arrays <END>
<BEG> returns the <i>observed significance level<i>, or <i>p-value<i>, associated with a two-sample, two-tailed t-test comparing the means of the input arrays, under the assumption that the two samples are drawn from subpopulations with equal variances <END>
<BEG> inversely transform the given real data set <END>
<BEG> returns true iff both arguments are equal or within the range of allowed error inclusive <END>
<BEG> for a byte value x, this method returns byte +1 if x >= 0 and byte -1 if x < 0 <END>
<BEG> for a double precision value x, this method returns +1 0 if x >= 0 and <END>
<BEG> for an int value x, this method returns +1 if x >= 0 and -1 if x < 0 <END>
<BEG> normalize an angle in a 2&pi wide interval around a center value <END>
<BEG> calculates the l<sub>2<sub> euclidean distance between two points <END>
<BEG> returns the number of elements currently in the array please note <END>
<BEG> sets the <code>expansionmode<code> the specified value must be one of <END>
<BEG> returns true if both arguments are nan or neither is nan and they are <END>
<BEG> returns the inputstream from which the standard outputof the remote process can be read the input stream will only be set after a <END>
<BEG> sends the data initiation datagram this data in the packet is ignored <END>
<BEG> returns the port number of the open socket on the local host used for the connection if you call this method when the client socket <END>
<BEG> sends an ftp command with no arguments to the server, waits for a reply and returns the numerical response code after invocation, for <END>
<BEG> returns the integer value of the reply code of the last ftp reply <END>
<BEG> a convenience method to send the ftp list command to the server, receive the reply, and return the reply code remember, it is up <END>
<BEG> a convenience method to send the ftp nlst command to the server, receive the reply, and return the reply code remember, it is up <END>
<BEG> a convenience method to send the ftp site command to the server, receive the reply, and return the reply code <END>
<BEG> a convenience method to send the ftp help command to the server, receive the reply, and return the reply code <END>
<BEG> set the current data connection mode to <code>active_local_data_connection_mode<code> no communication <END>
<BEG> returns an outputstream through which data can be written to store a file on the server using a unique name derived from the given name <END>
<BEG> using a programmer specified <code> ftpfileentryparser <code>, initialize an object containing a raw file information for the current working directory this information is obtained through <END>
<BEG> set the internal buffer size <END>
<BEG> looks up the supplied language code in the internally maintained table of language codes returns a dateformatsymbols object configured with <END>
<BEG> returns the name of the user owning the file sometimes this will be <END>
<BEG> if the ftpfile is a symbolic link, this method returns the name of the file being pointed to by the symbolic link otherwise it returns null <END>
<BEG> returns a string representation of the ftpfile information this <END>
<BEG> internal method for reading the input into the <code>lines<code> vector <END>
<BEG> determine if a reply code is a negative permanent response all <END>
<BEG> this method is called by the concrete parsers to delegate timestamp parsing to the timestamp parser <END>
<BEG> reads and returns the next byte in the stream if the end of the <END>
<BEG> add a distribution group to the query the distribution part of a <END>
<BEG> a convenience method to send the nntp quit command to the server, receive the reply, and return the reply code <END>
<BEG> same as <code> retrievearticleheader null <code> <END>
<BEG> there are a few nntpclient methods that do not complete the entire sequence of nntp commands to complete a transaction these <END>
<BEG> returns the address used in the <code> from: <code> header field <END>
<BEG> returns high-order 32-bits representing the seconds of this ntp timestamp <END>
<BEG> computes a hashcode for this timestamp the result is the exclusive <END>
<BEG> return the properly formatted string representation of the relay path <END>
<BEG> fetches a reply from the smtp server and returns the integer reply code after calling this method, the actual reply text can be accessed <END>
<BEG> aborts the current mail transaction, resetting all server stored sender, recipient, and mail data, cleaing all buffers and tables <END>
<BEG> returns the current value of the default port stored in <END>
<BEG> returns false mark is not supported <END>
<BEG> releases the resources used to perform buffered sends and receives <END>
<BEG> sends a tftp packet to its destination <END>
<BEG> sets the block number of the data packet <END>
<BEG> issue the ftp mdtm command not supported by all servers to retrieve the last modification time of a file the modification string should be in the <END>
<BEG> returns true if the socket is set to use client mode in its first handshake <END>
<BEG> set the underlying socket send buffer size <END>
<BEG> set the listener to be used when performing storeretrieve operations <END>
<BEG> sends a command and arguments to the server and return whether successful <END>
<BEG> send an lsub command to the server <END>
<BEG> get the imap protocol string command corresponding to a command code <END>
<BEG> get the next article <END>
<BEG> generate a trustmanager that performs no checks <END>
<BEG> reinitialize an instance to be returned by the pool <END>
<BEG> return the number of instances currently borrowed from this pool <END>
<BEG> clears the pool, removing all pooled instances <END>
<BEG> returns the maximum number of idle instances in the pool <END>
<BEG> <p>sets the timeout before an abandoned object can be removed<p> <p>setting this property has no effect if <END>
<BEG> gets whether the pool has lifo last in, first out behavior with respect to idle objects - always returning the most recently used object from the pool, or as a fifo first in, first out queue, where the pool always returns the oldest object in the idle object pool <END>
<BEG> the total number of objects returned to this pool over the lifetime of the pool this excludes attempts to return the same object multiple <END>
<BEG> sets the eviction policy for this pool <END>
<BEG> sets the cap on the number of objects that can be allocated by the pool checked out to clients, or idle awaiting checkout at a given time use <END>
<BEG> sets whether objects borrowed from the pool will be validated before <END>
<BEG> sets the number of milliseconds to sleep between runs of the idle object evictor thread <END>
<BEG> gets a reference to the factory used to create, destroy and validate the objects used by this pool <END>
<BEG> atomically removes all of the elements from this deque <END>
<BEG> gets the object that the wrapped softreference refers to <END>
<BEG> returns the propertiesstringlookup singleton instance <END>
<BEG> returns a function that operates prior to template evaluation and returns nulls for unknown keys <END>
<BEG> accessor for checking whether call to flush will first finish the current block or not <END>
<BEG> finds the longest common substring in the documents added to the solver so far <END>
<BEG> set the file format if set to null, try to guess from any available <END>
<BEG> set to false to throw an exception if the item being parsed for example a file is missing set to true to just return an empty document in that <END>
<BEG> returns options with origin comments toggled if this is enabled, the <END>
<BEG> looks up the path doesn't do any resolution, will throw if any is <END>
<BEG> converts the table to a list <END>
<BEG> creates a dynamic proxy that multiplexes method invocations to all plugins of the same type <END>
<BEG> wrap the given line with the given tag <END>
<BEG> return the current retry policy <END>
<BEG> change the set of exhibitors to poll <END>
<BEG> returns the path being ensured <END>
<BEG> given a full path, return the node name and its path i e onetwothree will return { onetwo , three } <END>
<BEG> leave the barrier and block until all members have left <END>
<BEG> start the cache the cache is not started automatically you must call this method <END>
<BEG> note on concurrency: a given lockdata instance can be only acted on by a single thread so locking isn't necessary <END>
<BEG> returns the lock used for writing <END>
<BEG> calculate the upper bound within which 99% of observations fall <END>
<BEG> set up batch handlers to consume events from the ring buffer these handlers will only process events <END>
<BEG> create a dependency barrier for the processors in this group <END>
<BEG> adds a sequence to the sequence group after threads have started to publish to the disruptor it will set the sequences to cursor value of the ringbuffer <END>
<BEG> a factory method to create the index for attributes <END>
<BEG> a factory method to create the index for elements <END>
<BEG> creates a mock object that implements the given interface, order checking is disabled by default, and the mock object will return <code>0<code>, <code>null<code> or <code>false<code> for unexpected invocations <END>
<BEG> expects a char that matches both given expectations <END>
<BEG> expects a float that matches both given expectations <END>
<BEG> expects a float that does not match the given expectation <END>
<BEG> expects a short that is equal to the given value <END>
<BEG> expects a double that has an absolute difference to the given value that is less than the given delta for details, see the easymock <END>
<BEG> switches the given mock objects more exactly: the controls of the mock objects to replay mode for details, see the easymock documentation <END>
<BEG> switches the mock object from record state to replay state for more <END>
<BEG> records that the mock object will expect the last method call once, and will react by returning the provided return value <END>
<BEG> records that the mock object will expect the last method call a fixed number of times, and will react by returning silently <END>
<BEG> records that the mock object will expect the last method call a fixed number of times, and will react by throwing the provided throwable <END>
<BEG> records that the mock object will by default allow the last method specified by a method call, and will react by throwing the provided throwable <END>
<BEG> records that the mock object will by default allow the last method specified by a method call, and will react by returning the provided return value <END>
<BEG> walk to the bounds of a type parameter of either a class or a method signaled by isclasstypeparameter <END>
<BEG> convert in to big endian <END>
<BEG> $h = f g$ <p> can overlap $h$ with $f$ or $g$ <END>
<BEG> the number of unassigned shards that are currently being delayed for example, due to node leaving the cluster and waiting for a timeout for the node to come back in order to allocate the shards back to it <END>
<BEG> system's hostname <code>null<code> in case of unknownhostexception <END>
<BEG> returns the allocation commands to execute <END>
<BEG> returns the persistent settings for the cluster <END>
<BEG> a comma separated list of routing values to control the shards the search will be executed on <END>
<BEG> the routing values to control the shards that the search will be executed on <END>
<BEG> sets repository name <END>
<BEG> if set to true the operation should wait for the snapshot completion before returning <END>
<BEG> sets repository-specific snapshot settings in json or yaml format <p> see repository documentation for more information <END>
<BEG> sets the name of the snapshot <END>
<BEG> returns true if indices with failed to snapshot shards should be partially restored <END>
<BEG> if set to true the restore procedure will restore aliases <END>
<BEG> returns the index name <END>
<BEG> returns time when snapshot started <END>
<BEG> returns incremental file count of the snapshot <END>
<BEG> include all data <END>
<BEG> parses an alias and returns its parsed representation <END>
<BEG> adds an alias action to the request <END>
<BEG> instead of setting the analyzer, sets the tokenizer as name that will be used as part of a custom analyzer <END>
<BEG> the refresh request works against all shards <END>
<BEG> sets the number of shard copies that should be active for indices closing to return <END>
<BEG> at what point in time the provided name was resolved into the index name <END>
<BEG> the instant at which the name provided by the user was resolved <END>
<BEG> returns the name of the data stream this new index will be part of <END>
<BEG> allows to set the settings using a json builder <END>
<BEG> adds mapping that will be added when the index gets created <END>
<BEG> should the merge only expunge deletes from the index, without full merge <END>
<BEG> sets the indices this put mapping operation will execute on <END>
<BEG> returns a concrete index for this mapping or <code>null<code> if no concrete index is defined <END>
<BEG> sets the indices for the shard stores request <END>
<BEG> the type of the resize operation <END>
<BEG> sets specific search group stats to retrieve the stats for mainly affects search <END>
<BEG> the settings to crete the index template with either json or yaml format <END>
<BEG> a boolean denoting whether the query is valid <END>
<BEG> creates an new exponential backoff policy with a default configuration of 50 ms initial wait period and 8 retries taking roughly 5 1 seconds in total <END>
<BEG> the numeric order of the item matching the same request order in the bulk request <END>
<BEG> the type of the action <END>
<BEG> adds the data from the bytes to be processed by the bulk processor <END>
<BEG> flush pending delete or index requests <END>
<BEG> the list of requests in this bulk request <END>
<BEG> the change that occurred to the document <END>
<BEG> the id of the document changed <END>
<BEG> indicate that _source should be returned, with an include andor exclude set which can include simple wildcard elements <END>
<BEG> the source of the document as a string <END>
<BEG> sets the ingest pipeline to be executed before indexing the document <END>
<BEG> returns whether or not the pipeline for this request has been resolved by the coordinating node <END>
<BEG> only perform this indexing request if the document was last modification was assigned the given <END>
<BEG> get the list of pipelines that were a part of this response <END>
<BEG> the list of responses, the order is the same as the one provided in the request <END>
<BEG> sets the number of shard results that should be reduced at once on the coordinating node this value should be used as a protection <END>
<BEG> adds a sort against the given field name and the sort ordering <END>
<BEG> the failures that occurred during the search <END>
<BEG> the search shard target the failure occurred on <END>
<BEG> wraps a listener with a listener that can timeout after the timeout period the <END>
<BEG> sets the number of shard copies that must be active before proceeding with the replication <END>
<BEG> sets the minimum version of the cluster state that is required on the next node before we redirect to another primary <END>
<BEG> returns the parent task id that tasks should be filtered by <END>
<BEG> the list of node failures exception <END>
<BEG> if a failure is already present, should this failure override it or not for read operations <END>
<BEG> return only term vectors for special selected fields returns for term <END>
<BEG> sets whether to return the payloads for each term or skip <END>
<BEG> the id of the indexed document <END>
<BEG> if set, only perform this update request if the document was last modification was assigned this primary term <END>
<BEG> sets the doc to use for updates when a script is not specified, the doc provided is a field and value pairs <END>
<BEG> sets the doc to use for updates when a script is not specified the doc is provided in a bytes form <END>
<BEG> creates a clean indices cache request <END>
<BEG> adds a list of transport addresses that will be used to connect to <END>
<BEG> removes a transport address from the list of transport addresses that are used to connect to <END>
<BEG> sets the acknowledgement timeout <END>
<BEG> returns the indices the operation needs to be executed on <END>
<BEG> sets the indices the operation needs to be executed on <END>
<BEG> called once all the nodes have acknowledged the cluster state update request must be <END>
<BEG> send a shard failed request to the master node to update the cluster state when a shard on the local node failed <END>
<BEG> returns <code>true<code> if the routing tables for all indices have changed between the previous cluster state and the current cluster state <END>
<BEG> returns <code>true<code> iff the local node is the mater node of the cluster <END>
<BEG> for interoperability with transport clients older than 6 3, we need to strip customs <END>
<BEG> sets the last observed state to the currently applied cluster state and returns it <END>
<BEG> ensures that the joining node has a version that's compatible with all current nodes <END>
<BEG> get the default mapping <END>
<BEG> returns the number of shards that should be used for routing this basically defines the hash space we use in <END>
<BEG> parses the number from the rolled over index name it also supports the date-math format ie index name is wrapped in &lt; and &gt; <END>
<BEG> utility method that allows to resolve an index expression to its corresponding single concrete index <END>
<BEG> checks if at least one of the specified aliases exists in the specified concrete indices wildcards are supported in the <END>
<BEG> gets the total number of open shards from all indices includes <END>
<BEG> remove the given component template from the cluster state the component template name <END>
<BEG> determine if a given node id exists <END>
<BEG> gets the allocation id for the existing shard copy that the allocator is assigning the shard to <END>
<BEG> utility method for rejecting the current allocation command based on provided reason <END>
<BEG> gets the raw uninterpreted high watermark value as found in the settings <END>
<BEG> creates a move decision for the shard being able to remain on its current node, so the shard won't be forced to move to another node <END>
<BEG> returns the decision for being allowed to rebalance the shard invoking this method will return <END>
<BEG> returns the nano time captured at the beginning of the allocation used to make sure all time based decisions are aligned <END>
<BEG> get current routing nodes <END>
<BEG> get metadata of routing nodes <END>
<BEG> gets the move decision for the shard if the shard was not in the started state, <END>
<BEG> determine the shards with a specific state <END>
<BEG> the currently applied cluster state <END>
<BEG> returns an unmodifiable list of snapshot deletion entries <END>
<BEG> add an <b>exact<b> number of bytes, not checking for tripping the circuit breaker this bypasses the overheadconstant multiplication <END>
<BEG> invalidate the entry for the specified key and value if the value provided is not equal to the value in <END>
<BEG> the cache statistics tracking hits, misses and evictions these are taken on a best-effort basis meaning that <END>
<BEG> determine the name of the package of the given class: e g java lang for the <code>java lang string<code> class <END>
<BEG> returns a cursor over the entries key-value pairs in this map the iterator is <END>
<BEG> makes a closed ring out of the current coordinates by adding the starting point as the end point <END>
<BEG> add a shallow copy of the polygon to the multipolygon this will apply the orientation of the <END>
<BEG> get the list of polygons <END>
<BEG> if the bounding box crosses the date-line left greater-than right then the longitude of the point need only to be higher than the left or lower than the right otherwise, it must be both <END>
<BEG> writes an instance of a geodistance object to an output stream <END>
<BEG> compute the distance between two points using the selected algorithm plane, arc <END>
<BEG> returns an instance of t, constructed using this constructor, with the supplied arguments <END>
<BEG> returns a string that is equivalent to the specified string with its <END>
<BEG> returns an array of all files in the given directory <END>
<BEG> sets the output stream to use for writing until this writer is closed <END>
<BEG> returns the shard id this segment belongs to <END>
<BEG> wraps a directory reader to make all documents live except those were rolled back or hard-deleted due to non-aborting exceptions during indexing <END>
<BEG> returns an empty leaf reader with the given max docs the reader will be fully deleted <END>
<BEG> number of terms that must match the generated query expressed in the <END>
<BEG> returns true if value is neither nan nor infinite <END>
<BEG> column number of the location of the error <END>
<BEG> wrap a recycled reference <END>
<BEG> adds a settings consumer with a predicate that is only evaluated at update time <END>
<BEG> returns <code>true<code> iff the setting is a private setting ie it should be treated as valid even though it has no internal <END>
<BEG> returns <code>true<code> if this setting is dynamically updateable by operators, otherwise <code>false<code> <END>
<BEG> checks whether this is a secure setting <END>
<BEG> returns true if and only if this setting is present in the given settings instance note that fallback settings are excluded <END>
<BEG> returns a new settings object that contains all setting of the current one filtered by the given settings key predicate <END>
<BEG> returns the setting value as float associated with the setting key if it does not exists, <END>
<BEG> returns the settings as delimited string <END>
<BEG> round down to the beginning of the week based on week year of the specified time <END>
<BEG> parses a given distance and converts it to the specified unit <END>
<BEG> zig-zag encode: this helps transforming small signed numbers into small positive numbers <END>
<BEG> read a float in little-endian format <END>
<BEG> deeply inspects a map, iterable, or object array looking for references back to itself <END>
<BEG> decrements the count-down and returns <code>true<code> iff this call reached zero otherwise <code>false<code> <END>
<BEG> fast forwards the count-down to zero and returns <code>true<code> iff the count down reached zero with this fast forward call otherwise <code>false<code> <END>
<BEG> returns <code>true<code> if this lock has at least one locked key <END>
<BEG> returns the exponentially weighted moving average of the task execution time <END>
<BEG> saves the current thread context and wraps command in a runnable that restores that context before running command if <END>
<BEG> returns the random number generator used for the cuckoo hashing process <END>
<BEG> returns <code>true<code> iff the cache needs to be refreshed <END>
<BEG> add a new validation error to the accumulating validation errors <END>
<BEG> allows to wait for all non master nodes to reply to the publish event up to a timeout <END>
<BEG> returns a list of the next possible masters <END>
<BEG> add an incoming, not yet committed cluster state <END>
<BEG> returns true if zen discovery is started and there is a currently a background thread active for re joining the cluster used for testing <END>
<BEG> deletes an indexes data directory recursively <END>
<BEG> returns all currently lock shards <END>
<BEG> returns all index paths <END>
<BEG> returns the locks shards id <END>
<BEG> remove all persisted cluster states from the given data paths, for use in tests should only be called when there is no open <END>
<BEG> returns the injected name of the analyzer <END>
<BEG> create a pre-configured tokenizer that may not vary at all <END>
<BEG> returns all registered available codec names <END>
<BEG> acquires the index commit that should be included in a snapshot <END>
<BEG> estimation of the term vectors memory usage by a segment <END>
<BEG> estimation of the norms memory usage by a segment <END>
<BEG> closes this builder and release all resources <END>
<BEG> the total time merges have been executed in milliseconds <END>
<BEG> returns <code>true<code> if the query string should analyze wildcards the default is <code>false<code> <END>
<BEG> returns the settings for this index these settings contain the node and index level settings where <END>
<BEG> returns the translog sync interval this is the interval in which the transaction log is asynchronously fsynced unless <END>
<BEG> returns the maximum number of translog files that that no longer required for persistence should be kept for peer recovery when soft-deletes is disabled <END>
<BEG> returns the generation threshold size as sequence numbers can cause multiple generations to <END>
<BEG> returns the maximum number of allowed docvalue_fields to retrieve in a search request <END>
<BEG> returns the time that an index shard becomes search idle unless it's accessed in between <END>
<BEG> returns the mapped field type for the given field name <END>
<BEG> return a new context that will be within multi-fields <END>
<BEG> parses from value rounds according to included flag <END>
<BEG> returns <code>true<code> iff auto throttle is enabled <END>
<BEG> sets the optional routing to the indexed shape that will be used in the query <END>
<BEG> get the positive query for this boosting query <END>
<BEG> sets the cutoff document frequency for high low frequent terms a value <END>
<BEG> returns the score mode, meaning how results of individual score functions will be aggregated <END>
<BEG> returns the maximum boost that will be applied by function score <END>
<BEG> returns geo coordinate validation method to use <END>
<BEG> returns the name of the field to base the bounding box computation on <END>
<BEG> which type of geo distance calculation method to use <END>
<BEG> returns validation method for geo coordinates <END>
<BEG> get the optional number of term expansions when using fuzzy or prefix type query <END>
<BEG> returns the setting for handling zero terms queries <END>
<BEG> sets the frequency at which words will be ignored which do not occur in at least this <END>
<BEG> whether to fail or return no result when this query is run against a field which is not supported such as binarynumeric fields <END>
<BEG> returns the nested query to execute <END>
<BEG> creates a match query with type boolean for the provided field name and text <END>
<BEG> creates a text query with type phrase for the provided field name and text <END>
<BEG> creates a combined fields query for the provided field names and text <END>
<BEG> a query that matches documents within an range of terms <END>
<BEG> a function_score query with no functions <END>
<BEG> a query that allows to define a custom scoring function through script <END>
<BEG> a filter to filter indexed shapes that are not intersection with the query shape <END>
<BEG> set the edit distance for fuzzy queries default is auto <END>
<BEG> returns true if the field identified by the provided name is mapped, false otherwise <END>
<BEG> given a type eg long, string, , returns an anonymous field type that can be used for search operations <END>
<BEG> add a field to run the query against <END>
<BEG> add a field to run the query against with a specific boost <END>
<BEG> specify an analyzer to use for the query <END>
<BEG> returns whether query parsing should be lenient <END>
<BEG> the total number of refresh executed <END>
<BEG> the total number of external refresh executed <END>
<BEG> the total time spent executing refreshes in milliseconds <END>
<BEG> the total time spent executing external refreshes in milliseconds <END>
<BEG> initial delay after a rejection before retrying a bulk request with the default maxretries the total backoff for retrying rejections <END>
<BEG> sets this task to be a worker task that performs search requests <END>
<BEG> the scroll size to control number of documents processed per batch <END>
<BEG> update the local knowledge of the persisted global checkpoint for the specified allocation id <END>
<BEG> the retaining sequence number of this retention lease the retaining sequence number is the minimum sequence number that this <END>
<BEG> returns snapshot name <END>
<BEG> returns list of files in the shard <END>
<BEG> returns incremental of files that were snapshotted <END>
<BEG> returns information about a physical file with the given name <END>
<BEG> deletes all corruption markers from this store <END>
<BEG> force bakes the given translog generation as recovery information in the lucene index this is <END>
<BEG> reads a single operation from the given location <END>
<BEG> returns the minimum file generation referenced by the translog <END>
<BEG> the total time warmer have been executed in milliseconds <END>
<BEG> fail the recovery with the given id if found and remove it from the recovery collection <END>
<BEG> get the names of the thread pools that should be used for operations on this data stream <END>
<BEG> returns the pipeline by the specified id <END>
<BEG> prepares settings for the transport client by gathering all elasticsearch system properties and setting defaults <END>
<BEG> unassign any persistent tasks executing on nodes that are no longer in the cluster if the task's assigment has a non-null executor node and that <END>
<BEG> provides the list of this plugin's custom thread pools, empty if none <END>
<BEG> reads the plugin descriptor file <END>
<BEG> other plugins this plugin extends through spi <END>
<BEG> whether this plugin is subject to the elastic license <END>
<BEG> returns true if metadata and snapshot files should be compressed <END>
<BEG> parameters used for controlling the response and thus might not be consumed during <END>
<BEG> the uri of the rest request, with the query string <END>
<BEG> the non decoded, raw path provided <END>
<BEG> determine if cors setting is a regex <END>
<BEG> returns the identifier for which script <END>
<BEG> returns the language of the script <END>
<BEG> directly write all the aggregations without their bounding object used by sub-aggregations non top level aggs <END>
<BEG> creates the aggregator <END>
<BEG> get the separator used to join pairs of bucket keys <END>
<BEG> wrap the provided aggregator so that it behaves almost as if it had been collected directly <END>
<BEG> sets after key <END>
<BEG> this method should be overridden by subclasses that want to defer calculation of a child aggregation until a first pass is complete and a set of buckets has been pruned <END>
<BEG> get the current interval in milliseconds that is set on this builder <END>
<BEG> return the minimum count of documents that buckets need to have in order to be included in the response <END>
<BEG> get the max num docs to be returned from each shard <END>
<BEG> set the minimum document count terms should have in order to appear in the response <END>
<BEG> returns the number of term buckets per shard that are currently configured <END>
<BEG> expert: get the collection mode <END>
<BEG> make a mutable copy of the aggregation results <END>
<BEG> sets how the percentiles algorithm should be configured <END>
<BEG> the correction term <END>
<BEG> resets the internal state to use the new value and compensation delta <END>
<BEG> compute the required precision so that <code>count<code> distinct entries would be counted with linear counting <END>
<BEG> set the compression factor of the t-digest sketches used <END>
<BEG> gets the script fields <END>
<BEG> applies when sorting, and controls if scores will be tracked as well <END>
<BEG> parse a token of type xcontentparser token value_number or xcontentparser token string to a double <END>
<BEG> gets the lag to use when calculating the serial difference <END>
<BEG> do not override this! <p> this method only exists for legacy support no new aggregations need this, nor should they override it <END>
<BEG> returns a human readable description of this values source, for use in error messages and similar <END>
<BEG> sets the search query for this request <END>
<BEG> gets the post filter for this request <END>
<BEG> adds a field to load from the doc values and return as part of the search request <END>
<BEG> the point-in-time searcher the original query was executed against <END>
<BEG> the name of the field highlighted <END>
<BEG> returns a releasable to indicate that the caller has stopped using this reader <END>
<BEG> for the provided path, return its value in the source <END>
<BEG> switch to a new profile <END>
<BEG> get the current profiler <END>
<BEG> returns true if the result doesn't contain any useful information <END>
<BEG> returns the maximum size of this results top docs <END>
<BEG> the rescorer to actually apply <END>
<BEG> returns the fully qualified index name, including the index prefix that indicates which cluster results come from <END>
<BEG> returns the nested path if sorting occurs on a field that is inside a nested object by default when sorting on a <END>
<BEG> get the type used in this sort <END>
<BEG> the global suggest mode controls what suggested terms are included or controls for what suggest text tokens, terms should be suggested for <END>
<BEG> sets the maximum edit distance candidate suggestions can have in order to be considered as a suggestion can only be a value between 1 <END>
<BEG> the minimum length a suggest text term must have in order to be <END>
<BEG> get the maxerrors setting <END>
<BEG> sets the text to provide suggestions for the suggest text is a required option that needs <END>
<BEG> a factor that is used to multiply with the size in order to inspect more candidate suggestions can improve accuracy at the cost of performance <END>
<BEG> returns the indices that are currently being snapshotted with partial == false and that are contained in the indices-to-check set <END>
<BEG> returns the number of currently banned tasks <END>
<BEG> writes the data in a thin manner, without the actual bytes, assumes the actual bytes will be appended right after this content <END>
<BEG> returns the number of nodes this manager is connected to <END>
<BEG> validates the first 6 bytes of the message header and returns the length of the message if 6 bytes <END>
<BEG> unwraps a proxy request and returns the original request <END>
<BEG> returns <code>true<code> iff the given request is a proxy request <END>
<BEG> start accepting incoming requests <END>
<BEG> establishes and returns a new connection to the given node the connection is not maintained by this service, it's the callers <END>
<BEG> returns either a real transport connection or a local node connection if we are using the local node optimization <END>
<BEG> registers new listener <END>
<BEG> unregisters a listener <END>
<BEG> prints additional help information, specific to the command <END>
<BEG> read from the reader until we find a newline if that newline <END>
<BEG> constant time equality check of strings to avoid potential timing attacks <END>
<BEG> returns the extended tcp_keepcount socket option, if available on this jdk <END>
<BEG> returns an unmodifiable map containing three mappings <END>
<BEG> returns the default filesystem <END>
<BEG> parses the java version as it can be retrieved as the value of java version or <END>
<BEG> interleaves the first 32 bits of each long value adapted from: http:graphics stanford edu~seanderbithacks html#interleavebmn <END>
<BEG> encode a string geohash to the geohash based long format lonlat interleaved, 4 least significant bits = level <END>
<BEG> encode to a geohash string from full resolution longitude, latitude <END>
<BEG> approximate height of geohash tile for a specific precision in degrees <END>
<BEG> returns the node that returned this response <END>
<BEG> sends a request to the elasticsearch cluster that the client points to and waits for the corresponding response <END>
<BEG> get the portion of an http request to elasticsearch that can be manipulated without changing elasticsearch's behavior <END>
<BEG> the length of the shortest term <END>
<BEG> gets if this request should allow partial results <END>
<BEG> optional sets the number of shard results that should be reduced at once on the coordinating node <END>
<BEG> gets if this request should use the request cache or not, if set <END>
<BEG> asynchronously submit a new async search request <END>
<BEG> asynchronously get an async search request <END>
<BEG> instructs a follower index to pause the following of a leader index <END>
<BEG> asynchronously delete a component template using the component templates api <END>
<BEG> puts a component template using the component templates api <END>
<BEG> gets component templates using the components templates api <END>
<BEG> represents the shard-level summary of the response execution <END>
<BEG> number of documents matching request <END>
<BEG> returns the time that a request took in milliseconds <END>
<BEG> executes an exploration request using the graph api <END>
<BEG> asynchronously start the index lifecycle management feature <END>
<BEG> asynchronously explain the lifecycle state for an index see <pre> https:www elastic coguideenelasticsearchclientjava-restcurrent <END>
<BEG> delete a snapshot lifecycle definition see <pre> https:www elastic coguideenelasticsearchclientjava-restcurrent <END>
<BEG> asynchronously get the status of snapshot lifecycle management <END>
<BEG> analyzes text using a named normalizer on an index <END>
<BEG> returns the wait for active shard count or null if the default should be used <END>
<BEG> the cause for this component template creation <END>
<BEG> return the index name for which we simulate the index template matching <END>
<BEG> optionally, define a new template request which will included in the index simulation as if it was an index template stored in the system the new template will be validated just as a regular, standalone, live, new index template request <END>
<BEG> returns the indices to unfreeze <END>
<BEG> asynchronously gets one or more data streams using the get data stream api <END>
<BEG> checks if the index indices exists or not <END>
<BEG> rolls over an index using the rollover index api <END>
<BEG> asynchronously updates specific index level settings using the update indices settings api <END>
<BEG> calls the analyze api see <a href= https:www elastic coguideenelasticsearchreferencecurrentindices-analyze html >analyze api on elastic co<a> <END>
<BEG> gets one or more machine learning job configuration info, asynchronously <END>
<BEG> opens a machine learning job <END>
<BEG> gets one or more machine learning datafeed configuration info, asynchronously <END>
<BEG> sends data to an anomaly detection job for analysis <END>
<BEG> deletes the given machine learning calendar <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentml-delete-calendar html > <END>
<BEG> updates a machine learning filter <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentml-update-filter html > <END>
<BEG> deletes the given machine learning filter <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentml-delete-filter html > <END>
<BEG> updates a data frame analytics config <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentupdate-dfanalytics html > <END>
<BEG> stops data frame analytics <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentstop-dfanalytics html > <END>
<BEG> deletes the given data frame analytics config asynchronously and notifies listener upon completion <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentdelete-dfanalytics html > <END>
<BEG> evaluates the given data frame <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentevaluate-dfanalytics html > <END>
<BEG> evaluates the given data frame asynchronously and notifies listener upon completion <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentevaluate-dfanalytics html > <END>
<BEG> this creates a new delayeddatacheckconfig that disables the data check <END>
<BEG> used to forcefully delete an opened job <END>
<BEG> was the job successfully flushed or not <END>
<BEG> forecast creating acknowledgement <END>
<BEG> sets the value of anomaly_score <END>
<BEG> the retrieved categories <END>
<BEG> sets the number of filters to skip <END>
<BEG> whether to ignore if a wildcard expression matches no trained models <END>
<BEG> the host and port where transport http connections are accepted <END>
<BEG> the jobid to open <END>
<BEG> the jobid which to reset <END>
<BEG> all the datafeedids to be stopped <END>
<BEG> has the datafeed stopped or not <END>
<BEG> the collection of items to add to the filter <END>
<BEG> provides methods for accessing the elastic licensed ccr apis that are shipped with the elastic stack distribution of elasticsearch all of <END>
<BEG> provides methods for accessing the elastic licensed licensing apis that are shipped with the default distribution of elasticsearch all of <END>
<BEG> executes a reindex request <END>
<BEG> retrieves a document by id using the get api <END>
<BEG> asynchronously index a document using the index api <END>
<BEG> asynchronously deletes a document by id using the delete api <END>
<BEG> calls the multi term vectors api see <a href= https:www elastic coguideenelasticsearchreferencecurrentdocs-multi-termvectors html >multi term vectors api <END>
<BEG> indicates if the given privilege was successfully found and deleted from the list of application privileges <END>
<BEG> creates get api key request for given realm name <END>
<BEG> creates get api key request for given realm and user name <END>
<BEG> returns a list of nodes in which the cache was cleared <END>
<BEG> the privileges acting over indices there is a canonical predefined set of <END>
<BEG> removes user from the native realm synchronously <END>
<BEG> disable a native realm or built-in user synchronously <END>
<BEG> authenticate the current user and return all the information about the authenticated user <END>
<BEG> clears the api key cache for a set of ids asynchronously <END>
<BEG> asynchronously retrieve the x 509 certificates that are used to encrypt communications in an elasticsearch cluster <END>
<BEG> asynchronously creates an oauth2 token <END>
<BEG> create an api key <br> <END>
<BEG> creates a snapshot repository <END>
<BEG> asynchronously deletes a snapshot repository <END>
<BEG> asynchronously get snapshots <END>
<BEG> restores a snapshot <END>
<BEG> finds the structure of a file asynchronously and notifies the listener on completion <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentfind-structure html > <END>
<BEG> get one or more transform configurations <p> for additional info see <a href= https:www elastic coguideenelasticsearchreferencecurrentget-transform html > <END>
<BEG> sets the initial active state of the watch <END>
<BEG> asynchronously deactivate an existing watch see <a href= https:www elastic coguideenelasticsearchreferencecurrentwatcher-api-deactivate-watch html > <END>
<BEG> deletes a watch from the cluster see <a href= https:www elastic coguideenelasticsearchreferencecurrentwatcher-api-delete-watch html > <END>
<BEG> asynchronously acknowledges a watch <END>
<BEG> asynchronously fetch information about x-pack from the cluster <END>
<BEG> set the human readable flag once set, some types of values are written in a <END>
<BEG> writes the binary content of the given byte array as utf-8 bytes <END>
<BEG> get the operator symbol <END>
<BEG> get the value of the number <END>
<BEG> get the list of errors describing the issues while validating the expression <END>
<BEG> sets the input streams for expect operations required <END>
<BEG> sets the character encoding used to covert bytes when working with byte streams optional, <END>
<BEG> sets the size of the input buffer in bytes optional, default is 1024 <END>
<BEG> creates an instance of a successful result type <END>
<BEG> returns the time to wait before the next execution attempt <END>
<BEG> attempts to complete the parent execution, calls failure handlers, and completes the future if needed <END>
<BEG> attempts to cancel this execution this attempt will fail if the execution has already completed, has already been <END>
<BEG> returns the ratio of positive bits to the number of occupied bits <END>
<BEG> returns the delay factor for backoff retries <END>
<BEG> returns the duration in seconds <END>
<BEG> return the byte or character offset into the input source this location is pointing to if the input source is a file or a byte stream then <END>
<BEG> returns the entire document type declaration as a string, including the internal dtd subset <END>
<BEG> get the name of this event <END>
<BEG> the entity's public identifier, or null if none was given <END>
<BEG> the name of the associated notation <END>
<BEG> returns cloned version of internal qualifiedname[] <END>
<BEG> clear the attribute list for reuse <END>
<BEG> swaps two sequences of elements using a provided swapper <END>
<BEG> ensures that a range given by an offset and a length fits a big array of given length <END>
<BEG> adds elements to this type-specific big list one-by-one <END>
<BEG> compares this big list to another object if the argument is a <END>
<BEG> grows the given array to the maximum between the given length and the current length multiplied by two, provided that the given length is larger than the current length <END>
<BEG> ensures that a range given by its first inclusive and last exclusive elements fits an array <END>
<BEG> sorts an array according to the order induced by the specified comparator using quicksort <END>
<BEG> sorts an array according to the natural ascending order using quicksort <END>
<BEG> turns a standard array into a big array <END>
<BEG> ensures that a range given by its first inclusive and last exclusive elements fits a big array <END>
<BEG> returns an unmodifiable list iterator backed by the specified list iterator <END>
<BEG> returns a type-specific immutable big list containing only the specified element the returned big list is serializable and cloneable <END>
<BEG> the default return value for <code>get <code>, <code>put <code> and <code>remove <code> <END>
<BEG> returns the hashing strategy <END>
<BEG> adds an increment to value currently associated with a key <END>
<BEG> computes the length of the array at the given index <END>
<BEG> ensures that the given index is a firstindexvalid reference <END>
<BEG> searches an array for the specified value using the binary search algorithm and a specified comparator the range must be sorted following <END>
<BEG> sorts the specified array using indirect radix sort <END>
<BEG> sorts the specified array of arrays lexicographically using radix sort <END>
<BEG> sorts the specified big array using radix sort <END>
<BEG> creates a type-specific list iterator over an interval <END>
<BEG> returns a synchronized type-specific priority queue backed by the specified type-specific priority queue, using an assigned object to synchronize <END>
<BEG> avalanches the bits of an integer by applying the finalisation step of murmurhash3 <END>
<BEG> returns a synchronized type-specific indirect priority queue backed by the specified type-specific indirect priority queue <END>
<BEG> stores an array fragment to a given data output <END>
<BEG> loads elements from a file given by a filename, storing them in a new big array <END>
<BEG> stores a big array to a given data output <END>
<BEG> loads bytes from a given input stream, storing them in a given array fragment <END>
<BEG> return an empty big list immutable it is serializable and cloneable <END>
<BEG> return an empty set immutable it is serializable and cloneable <END>
<BEG> get the code bytes for an unicode string <END>
<BEG> starts the sampling <END>
<BEG> adds a new mbeansampler to be sampled <END>
<BEG> return the names of the variables specified in the key if any <END>
<BEG> bind actions to perform after the injector is created <END>
<BEG> create an injector that is a child of the bootstrap bindings only <END>
<BEG> create the main injector <END>
<BEG> load services and make them available via a set<s> binding using multi-binding note that this methods loads services lazily but also <END>
<BEG> return the lifecycle listener if any <END>
<BEG> filter out elements for which the provided visitor returns true <END>
<BEG> filter out all bindings using requeststaticinjection <END>
<BEG> compatibility-mode - scope is assumed to be eager singleton <END>
<BEG> thrown when using an unsupported datatype with resources <END>
<BEG> thrown when attempting to open an invalid type of transaction <END>
<BEG> thrown when attempting to mutate a read only transaction <END>
<BEG> thrown when attempting to mutate the schema while the transaction is in batch mode <END>
<BEG> create an aggregate that will find the median of a variable's values <END>
<BEG> create an aggregate that will find the unbiased sample standard deviation of a variable's values <END>
<BEG> if a fragment has fixed cost, the traversal is done using index this makes the fragment a good starting point <END>
<BEG> create a reasoner query from a conjunctive pattern with types inferred <END>
<BEG> create a reasoner query by combining an existing query and a substitution <END>
<BEG> reiteration might be required if rule graph contains loops with negative flux or there exists a rule which head satisfies body <END>
<BEG> retrieve the data in the current scope <END>
<BEG> cleans cache contents <END>
<BEG> this method is overridden so that we can check that the regex of the new super type if it has a regex can be applied to all the existing instances <END>
<BEG> create a matcher to test the type of an instance <END>
<BEG> builds a set of static bindings <END>
<BEG> sets the specified keyvalue pair in the global scope the key may not be null or empty <END>
<BEG> this method is called at the start of each iteration of each computational chunk <END>
<BEG> filter the objects in the traversal by the number of them to pass through the stream, where only the first <END>
<BEG> determines if a value is less than or equal to another <END>
<BEG> get the head of the path <END>
<BEG> pop the object s associated with the label of the path <END>
<BEG> compare the current step with another step <END>
<BEG> the set of strategies that must be executed before this strategy is executed <END>
<BEG> the set of strategies that must be executed after this strategy is executed <END>
<BEG> get the object associated with the specified step-label in the traverser's path history <END>
<BEG> directly set the duration for the metric <END>
<BEG> get the outgoingtail vertex of this edge <END>
<BEG> create a new builder using the specified version of graphson <END>
<BEG> writes a list of vertices without edges <END>
<BEG> writes an arbitrary object to the stream note that gremlin server uses this method when serializing output, <END>
<BEG> retrieve the properties associated with a particular element <END>
<BEG> gets the estimated size of the class cache for compiled scripts <END>
<BEG> gets the average time spent compiling new scripts <END>
<BEG> event type getter <END>
<BEG> call to enable global use of global use of expandometaclass within the registry this has the advantage that <END>
<BEG> evaluates the value of a cell <END>
<BEG> creates the template engine <END>
<BEG> updates the designated column with an <code>object<code> value <END>
<BEG> supports integer based subscript operators for accessing at numbered columns starting at zero negative indices are supported, they will count from the last column backwards <END>
<BEG> supports integer based subscript operators for updating the values of numbered columns starting at zero negative indices are supported, they will count from the last column backwards <END>
<BEG> adds a new row to the result set <END>
<BEG> moves the cursor to the previous row in this <code>getresultset <code> object <END>
<BEG> sets the number of rows that this cell should span the default value is 1 <END>
<BEG> component which provides a styled editor for the console <END>
<BEG> create a new lexernode for adding to root <END>
<BEG> selects the minimum value found in a collection of items <END>
<BEG> provide a collection of all the nodes in the tree using a breadth-first traversal <END>
<BEG> returns the current name of the 'bean' node <END>
<BEG> set the name of the file to be run the folder of the file is automatically added to the classpath <END>
<BEG> print any results in the statement <END>
<BEG> sets the bytecode compatibility mode <END>
<BEG> set the stub directory into which the java source stub files should be generated the directory need not exist <END>
<BEG> gets the stub directory into which the java source stub files should be generated <END>
<BEG> set the keepstubs flag defaults to false set to true for debugging <END>
<BEG> if set to false, 'public static void main' method will not be displayed <END>
<BEG> creates and returns an array of package template classpath entries <p> <END>
<BEG> creates and returns an array of doc template classpath entries <p> <END>
<BEG> copies all node meta data from one node to the other <END>
<BEG> sets this instance as proxy for the given classnode <END>
<BEG> sets the superclass of this classnode <END>
<BEG> it is of a double category, if the provided type is a bigdecimal, a float, double or a wrapper of those c type =double <END>
<BEG> should be called when decending into a loop that defines also a scope calls pushvariablescope and prepares labels <END>
<BEG> gets the currently configured warning level see warningmessage <END>
<BEG> allow setting the bytecode compatibility the parameter can take <END>
<BEG> adds a fatal exception to the message set and throws the unit as a phasefailedexception <END>
<BEG> add a number of days to this date and returns the new date <END>
<BEG> <p>return a string representation of the 'day' portion of this date <END>
<BEG> <p>return a string representation of the date and time time portion of this date instance, according to the locale-specific format used by <END>
<BEG> support the subscript operator for container <END>
<BEG> provide the standard groovy <code>size <code> method for <code>jcombobox<code> <END>
<BEG> removes all items from the model <END>
<BEG> support the subscript operator for jmenu <END>
<BEG> get the packages attribute <END>
<BEG> disables global ast transformations in order to avoid class loading side effects, it is not recommended <END>
<BEG> <p>create a string representation of this date according to the given format pattern and timezone <END>
<BEG> identity check since == is overridden in groovy with the meaning of equality <END>
<BEG> extend object with category methods <END>
<BEG> remove all duplicates from a given list using the default comparator <END>
<BEG> iterates through an iterable type, passing each item and the item's index a counter starting at zero to the given closure <END>
<BEG> iterates through an collection, passing each item and the item's index a counter starting at zero to the given closure <END>
<BEG> iterates through a set, passing each item and the item's index a counter starting at zero to the given closure <END>
<BEG> iterates through an iterable, passing each item to the given closure <END>
<BEG> iterates through a sortedset, passing each item to the given closure <END>
<BEG> iterate over each element of the list in the reverse order <END>
<BEG> iterates over every element of a collection, and checks whether all elements are <code>true<code> according to the groovy truth <END>
<BEG> iterates over the contents of an object or collection, and checks whether a predicate is valid for at least one element <END>
<BEG> iterates over the collection of items which this object represents and returns each item that matches using the identity closure as a filter - effectively returning all elements which satisfy groovy truth <END>
<BEG> treats the object as iterable, iterating through the values it represents and returns the first non-null result obtained from calling the closure, otherwise returns the defaultresult <END>
<BEG> finds the elements of the array matching the identity closure i e &#160;matching groovy truth <END>
<BEG> sorts all array members into sub groups determined by the supplied mapping closures as per the list variant of this method <END>
<BEG> sums the result of applying a closure to each item of an iterable to some initial value <END>
<BEG> adds max method to iterable objects <END>
<BEG> selects the item in the iterable which when passed as a parameter to the supplied closure returns the maximum value a null return value represents the least possible return value, so any item for which <END>
<BEG> a convenience method for creating an immutable collection <END>
<BEG> drops the given number of elements from the tail of this array if they are available <END>
<BEG> coerce a boolean instance to a boolean value <END>
<BEG> coerce an enumeration instance to a boolean value <END>
<BEG> coerces a byte array to a boolean value <END>
<BEG> coerces a short array to a boolean value <END>
<BEG> coerces a char array to a boolean value <END>
<BEG> coerces the closure to an implementation of the given class the class <END>
<BEG> reverse the items in an array if mutate is true, the original array is modified in place and returned <END>
<BEG> create a collection as a union of a collection and an iterable if the left collection <END>
<BEG> create a set as a union of a set and an object <END>
<BEG> create a list composed of the intersection of a list and an iterable any <END>
<BEG> compare the contents of two lists order matters <END>
<BEG> create a new collection composed of the elements of the first iterable minus every occurrence of elements of the given iterable <END>
<BEG> flatten an array this array and any nested arrays or <END>
<BEG> support the subscript operator with a range for a long array <END>
<BEG> support the subscript operator with a range for a double array <END>
<BEG> support the subscript operator with an intrange for a byte array <END>
<BEG> support the subscript operator with a collection for a long array <END>
<BEG> implements the getat collection method for primitive type arrays each <END>
<BEG> create a string representation of this object <END>
<BEG> add one character to another the ordinal values of the characters <END>
<BEG> subtract a character from a number the ordinal value of the character <END>
<BEG> multiply a number by a character the ordinal value of the character <END>
<BEG> power of an integer to an integer certain exponent if the <END>
<BEG> divide a character by a number the ordinal value of the character <END>
<BEG> bitwise and together two bitsets <END>
<BEG> iterates from this number up to the given number, inclusive, incrementing by one each time example: <END>
<BEG> transform a number into an integer <END>
<BEG> logical implication of two boolean operators <END>
<BEG> set the metaclass for an object <END>
<BEG> dynamically wraps an instance into something which implements the supplied trait classes it is guaranteed that the returned object <END>
<BEG> modifies this collection by removing a single instance of the specified element from this collection, if it is present essentially an alias for <END>
<BEG> parse a string matching the pattern eee mmm dd hh:mm:ss zzz yyyy containing us-locale-constants only e g sat for saturdays <END>
<BEG> returns the line number in the template source where the error occurred <END>
<BEG> is this context cancelled <END>
<BEG> how much time is remaining in the specified time unit internal units are maintained as <END>
<BEG> override the http2 authority the channel claims to be connecting to <em>this is not <END>
<BEG> returns the default instance used by grpc when the registry is not specified <END>
<BEG> event handler to be called by the subclass when a number of bytes are being queued for sending to the remote endpoint <END>
<BEG> adds a server <END>
<BEG> returns a subchannel <END>
<BEG> completes this operation exceptionally registered callbacks are invoked and provided the <END>
<BEG> returns a copy of the tracer list <END>
<BEG> reports that a keep alive message was sent <END>
<BEG> creates a channel with the target's address and port number <END>
<BEG> sets max number of retry attempts the total number of retry attempts for each rpc will not <END>
<BEG> returns the classloader-wide default channel <END>
<BEG> re-resolve the name <END>
<BEG> returns all services registered with the server, or an empty list if not supported by the implementation <END>
<BEG> static factory for creating a new serverbuilder <END>
<BEG> is this status ok, i e , not an error <END>
<BEG> returns the received trailers <END>
<BEG> stream is closed this will be called exactly once <END>
<BEG> calling this method indicates that the channel will no longer be used this method is roughly <END>
<BEG> creates a server builder that will bind to the given port <END>
<BEG> create a server tls handler for http2 capable of using alpnnpn <END>
<BEG> writes a character sequence such as a string to an appendable object from the given supplier <END>
<BEG> returns a supplier that may be used to retrieve the data buffered by this stream <END>
<BEG> moves the file from one path to another this method can rename a file or <END>
<BEG> returns a supplier that may be used to retrieve the data buffered by this stream this method returns the same object as <END>
<BEG> creates a new asynchronously-settable future <END>
<BEG> configures the retryer to retry if an exception i e any <code>exception<code> or subclass <END>
<BEG> returns a stop strategy which never stops retrying it might be best to <END>
<BEG> todo: improve this and other implementations and move out of this framework for wider use todo: could we incorporate the overriding logic from abstractlisttester, by examining whether the features include known_order? <END>
<BEG> asserts that the collection under test contains exactly the elements it was initialized with <END>
<BEG> executes the test <END>
<BEG> find all the tester annotations declared on a tester class or method <END>
<BEG> configures this builder produce a testsuite with the given name <END>
<BEG> sorts the enums according to their natural ordering <END>
<BEG> resets the contents of navigableset to have elements a, c, for the navigation tests <END>
<BEG> asserts that an escaper escapes the given character into the expected string <END>
<BEG> adds a group of objects that are supposed to be equivalent to each other and not equivalent to objects in any other equivalence group added to this tester <END>
<BEG> waits until the given weak reference is cleared, invoking the garbage collector as necessary to try to ensure that this will happen <END>
<BEG> serializes and deserializes the specified object <END>
<BEG> pops the current state & sets the new dependency <END>
<BEG> for the given list of columns, create sequences for auto-increment columns if needed , and then get the list of all sequences of the columns <END>
<BEG> internal sets, on a per-thread basis, the default-connection for user-defined functions <END>
<BEG> clear set of ignored words <END>
<BEG> get a sql exception meaning this feature is not supported <END>
<BEG> the maximum number of rows, including uncommitted rows of any session <END>
<BEG> set the maximum transaction id, after which ids are re-used if the old <END>
<BEG> flush all changes <END>
<BEG> mark the space as free <END>
<BEG> force all stored changes to be written to the storage the default <END>
<BEG> how many versions to retain for in-memory stores if not set, 5 old <END>
<BEG> get the auto-commit delay <END>
<BEG> get the cache <END>
<BEG> whether the store is read-only <END>
<BEG> put a short <END>
<BEG> put a long <END>
<BEG> put the contents of a byte buffer <END>
<BEG> set the position <END>
<BEG> update an integer at the given index <END>
<BEG> clear the buffer after use <END>
<BEG> get the table with the given name, if any <END>
<BEG> rename a file if this is allowed this method is similar to java 7 <END>
<BEG> rename a file if this is allowed, and try to atomically replace an existing file this method is similar to java 7 <END>
<BEG> convert a value to this column's type <END>
<BEG> set the table and column id <END>
<BEG> prepare all expressions of this column <END>
<BEG> remove the check constraint if there is one <END>
<BEG> get the lookup batch for the given table filter <END>
<BEG> reset state of this batch <END>
<BEG> was query recursion detected during compiling <END>
<BEG> convert the multi-dimensional value into a one-dimensional scalar value this is done by interleaving the bits of the values each values <END>
<BEG> parses an iso date string into a java time localdate <END>
<BEG> parses an iso date string into a java time offsetdatetime <END>
<BEG> converts a value to a offsetdatetime <END>
<BEG> get the host name of a local address, if available <END>
<BEG> get the union <END>
<BEG> returns combined value of remaining fields of this interval for <END>
<BEG> returns months value, if any <END>
<BEG> returns hours value, if any <END>
<BEG> returns seconds value measured in nanoseconds, if any <END>
<BEG> the the list of select expressions <END>
<BEG> set the order by list <END>
<BEG> is there currently a group-by active <END>
<BEG> sets the collector of updated keys <END>
<BEG> add double quotes around an identifier if required and appends it to the specified string builder <END>
<BEG> parses a list of column names or numbers in parentheses <END>
<BEG> sets the network connection information <END>
<BEG> update an aggregate value <END>
<BEG> evaluates and returns all rows of the subquery <END>
<BEG> calculates default min value <END>
<BEG> gets nested identity object that can be used by authenticator to hold information <END>
<BEG> gets realm's name <END>
<BEG> gets validator class name <END>
<BEG> removes dependencies of column expressions, used for tables with circular dependencies <END>
<BEG> returns common join columns table filter <END>
<BEG> parses a dimension system from the given string <END>
<BEG> returns the time zone provider with the specified offset <END>
<BEG> returns the type and dimension system of geometries <END>
<BEG> get or create big decimal value for the given big integer <END>
<BEG> nans are normalized in get method, so it's safe to use doubletorawlongbits instead of doubletolongbits here <END>
<BEG> create a result set value <END>
<BEG> helper method that injects an authentication token to send with a connection <END>
<BEG> this method parses the user-agent string and returns whether or not it refers to a browser if its not a browser, then kerberos authentication <END>
<BEG> get the rules <END>
<BEG> sets all deprecated properties that are not currently set but have a corresponding new property that is set useful for iterating the <END>
<BEG> add a configuration resource <END>
<BEG> get the value of the <code>name<code> property as a trimmed <code>string<code>, <code>null<code> if no such property exists <END>
<BEG> set the value of the <code>name<code> property to a <code>double<code> <END>
<BEG> set the value of the <code>name<code> property to the name of a <code>theclass<code> implementing the given interface <code>xface<code> <END>
<BEG> get value to which property was supposed to be changed <END>
<BEG> returns suffix of cipher suite configuration <END>
<BEG> a helper function to create an options object <END>
<BEG> split the versionname in to a base name converts aaabbb3 to <END>
<BEG> generates a user-specified number of random bytes <END>
<BEG> get a canonical name for this file system <END>
<BEG> set an xattr of a file or directory <END>
<BEG> get all of the xattr names for a file or directory <END>
<BEG> get the list of network topology paths for each of the hosts <END>
<BEG> set the length of block <END>
<BEG> return the string representation of the object in the output format <END>
<BEG> is this a file? <END>
<BEG> get the owner of the file <END>
<BEG> get the default filesystem uri from a configuration <END>
<BEG> set the default filesystem uri in a configuration <END>
<BEG> get a new delegation token for this file system <END>
<BEG> concat existing files together <END>
<BEG> cancel the deletion of the path when the filesystem is closed <END>
<BEG> filter filesdirectories in the given path using the user-supplied path filter <END>
<BEG> filter filesdirectories in the given list of paths using default path filter <END>
<BEG> the src file is under fs, and the dst is on the local disk copy it from fs <END>
<BEG> get the map of statistics object indexed by uri scheme <END>
<BEG> get the current working directory for the given file system <END>
<BEG> forces any buffered output bytes to be checksumed and written out to the underlying output stream <END>
<BEG> main has some simple utility methods <END>
<BEG> register the permission related commands with the factory <END>
<BEG> get a path from the local fs this method should be used if the size of <END>
<BEG> we search through all the configured dirs for the file's existence and return true when we find <END>
<BEG> is an absolute path ie a slash relative path part and a scheme is null and authority is null <END>
<BEG> sets the command factory for later use <END>
<BEG> hook for commands to implement an operation to be applied on each path for the command after being processed successfully <END>
<BEG> display an warning string prefaced with the command name <END>
<BEG> returns an instance of the class implementing the given command the <END>
<BEG> parse parameters starting from the given position consider using the variant that directly takes a list <END>
<BEG> sets the input stream to be used <END>
<BEG> sets the maximum depth for applying expressions <END>
<BEG> delete old checkpoint s <END>
<BEG> get the value of the home dir conf value for specfied mount table <END>
<BEG> set a value in the webapp context these values are available to the jsp <END>
<BEG> get the pathname to the webapps files <END>
<BEG> get the original array <END>
<BEG> compare bytes from {#getbytes } to those provided <END>
<BEG> this method keeps track of raw processed compressed bytes <END>
<BEG> set the configuration to be used by this object <END>
<BEG> print the extension map out as a string <END>
<BEG> find the relevant compression codec for the given file based on its filename suffix <END>
<BEG> when called, indicates that compression should end with the current contents of the input buffer <END>
<BEG> copies from one stream to another <strong>closes the input and output streams <END>
<BEG> construct a hash value for a string <END>
<BEG> writes bytes from a inputstream directly into the buffer <END>
<BEG> parse an unsigned short from a byte array <END>
<BEG> reads a zero-compressed encoded integer from a byte array and returns it <END>
<BEG> make a call, passing <code>rpcrequest<code>, to the ipc server defined by <code>remoteid<code>, returning the rpc response <END>
<BEG> construct & cache an ipc client with the default socketfactory and default valueclass if no cached client exists <END>
<BEG> peek, like poll, provides no strict consistency <END>
<BEG> shutdown the instrumentation for the process <END>
<BEG> get the proxy <END>
<BEG> returns the rpc remote user when invoked inside an rpc note this <END>
<BEG> sets the socket buffer size used for responding to rpcs <END>
<BEG> stops the service no new calls will be handled after this is called <END>
<BEG> returns the value of the named attribute, or null if there is no attribute of that name <END>
<BEG> starts or restarts monitoring, the emitting of metrics records <END>
<BEG> creates a new abstractmetricsrecord instance with the given <code>recordname<code> <END>
<BEG> do-nothing version of remove <END>
<BEG> returns a tag object which is can be a string, integer, short or byte <END>
<BEG> the average rate of an operation in the previous interval <END>
<BEG> get a metrics tag <END>
<BEG> create a mutable integer counter <END>
<BEG> initialize the registry with all the methods in a protocol so they all show up in the first snapshot <END>
<BEG> whether to accept the record <END>
<BEG> lookup gangliaconf from cache if not found, return default values <END>
<BEG> generate a string listing the switch mapping implementation, the mapping for every known node and the number of nodes and unique switches known about -each entry to a separate line <END>
<BEG> get an instance of networktopology based on the value of the configuration parameter net topology impl <END>
<BEG> get the path of a node <END>
<BEG> close the channel since socket getouputstream close <END>
<BEG> use the specified bytes array as underlying sequence <END>
<BEG> get the data from the buffer <END>
<BEG> two vector typeids are equal if their constituent elements have the same type <END>
<BEG> return configuration key for superuser ip addresses <END>
<BEG> returns the key bytes for the alias <END>
<BEG> return all the secret key entries in the in-memory map <END>
<BEG> convenience method for reading a token storage file directly from a datainputstream <END>
<BEG> returns an instance of saslpropertiesresolver <END>
<BEG> perform the given action as the daemon's login user if the login <END>
<BEG> perform the given action as the daemon's login user if an <END>
<BEG> returns the keymanagers for owned certificates <END>
<BEG> get the bytes for the token identifier <END>
<BEG> is this user logged in from a keytab file? <END>
<BEG> add a tokenidentifier to this ugi the tokenidentifier has typically been <END>
<BEG> obtain the collection of tokens associated with this user <END>
<BEG> get a cloned list of services <END>
<BEG> return the state text as the tostring value <END>
<BEG> return true if the status is currently open <END>
<BEG> read one line from the inputstream into the given text <END>
<BEG> set if native hadoop libraries, if present, can be used for this job <END>
<BEG> adds a named node with a specified progress weightage to the tree <END>
<BEG> skip to the new value <END>
<BEG> get the exit code <END>
<BEG> find the nth occurrence of the given byte b in a utf-8 encoded string <END>
<BEG> returns the buildversion which includes version, revision, user and date <END>
<BEG> clear the storage space quota size of files for a directory note that <END>
<BEG> allow snapshot on a directory <END>
<BEG> add a new cachedirectiveinfo <END>
<BEG> modify a cachedirective <END>
<BEG> modify an existing cache pool <END>
<BEG> remove a cache pool <END>
<BEG> get a reference to the wrapped output stream we always want to return the <END>
<BEG> close it down! <END>
<BEG> returns the size of a file as it was when this stream was opened <END>
<BEG> convert a list<locatedblock> to blocklocation[] <END>
<BEG> get a uri for each configured nameservice if a nameservice is <END>
<BEG> sets the node specific setting into generic configuration key looks up <END>
<BEG> get spnego keytab key from configuration <END>
<BEG> load https-related configuration <END>
<BEG> enter, leave or get safe mode <END>
<BEG> requests the namenode to dump data strcutures into specified file <END>
<BEG> get number of bytes in the block <END>
<BEG> the used space by the data node <END>
<BEG> used space by the block pool as percentage of present capacity <END>
<BEG> sets number of active connections <END>
<BEG> get software version <END>
<BEG> read from in <END>
<BEG> return some inputoutput streams that may henceforth have their communication encrypted, depending on the negotiated quality of protection <END>
<BEG> identify boolean value indicating whether a channel is trusted or not <END>
<BEG> check if there are more entries that are left to be listed <END>
<BEG> check if the local name is empty <END>
<BEG> returns the locations associated with this block the returned array is not <END>
<BEG> separated out for easy overriding in tests <END>
<BEG> get an access token for a block <END>
<BEG> blockinfo represents a block that is not being constructed <END>
<BEG> add <i>localmachine<i> and related nodes to <i>excludednodes<i> for next replica choosing in sub class, we can add more nodes within <END>
<BEG> increment the number of blocks scheduled for each given storage <END>
<BEG> generate storage list debug line <END>
<BEG> get common storage fields <END>
<BEG> read the header at the beginning of the given block meta file <END>
<BEG> get the directory where a finalized block with this id should be stored <END>
<BEG> returns the trustedchannelresolver configured for use with datatransferprotocol, or null if not configured <END>
<BEG> returns the storage location that has failed <END>
<BEG> sync the checksum stream if it supports it <END>
<BEG> get the full path of this replica's data file <END>
<BEG> number of bytes reserved for this replica on disk <END>
<BEG> interrupt the writing thread and wait until it dies <END>
<BEG> set the block pool id of checkpointsignature <END>
<BEG> for the purposes of unit tests, we don't need to actually write durably to disk so, we can skip the fsync calls <END>
<BEG> shutdown the filestore <END>
<BEG> remove the last inode in the path from the namespace <END>
<BEG> add close lease record to edit log <END>
<BEG> internal method to transition the state of a given namenode to a new state <END>
<BEG> close the proxy, <END>
<BEG> assume logical uri is used for old proxy provider implementations <END>
<BEG> check whether it's a reference <END>
<BEG> check and add namespacestoragespacestoragetype consumed to itself and the ancestors <END>
<BEG> is this file under construction? <END>
<BEG> extend a given inodesinpath with a child inode the child inode will be <END>
<BEG> returns true if there are no journals, all redundant journals are disabled, or any required journals are disabled <END>
<BEG> compare diffs with snapshot id <END>
<BEG> returns phase description <END>
<BEG> ends execution of the specified phase <END>
<BEG> sets the optional size in bytes associated with the specified phase for <END>
<BEG> returns percent complete for the specified phase and step, calculated as counter value divided by total <END>
<BEG> returns the optional file name, possibly null <END>
<BEG> dumps dfs data structures into specified file <END>
<BEG> requests that the current operation be canceled if it is still running <END>
<BEG> undo the previous create e operation note that the behavior is <END>
<BEG> apply the reverse of this diff to current state in order to obtain the previous state <END>
<BEG> reset all counters to zero <END>
<BEG> return the current capacity for testing <END>
<BEG> delete the reference decrease the reference count for the instance, if <END>
<BEG> get entries in the reference map <END>
<BEG> get the number of unique elements <END>
<BEG> create a symlink pointing to the destination path <END>
<BEG> create a local map output file name <END>
<BEG> create an event handler that handles the job finish event <END>
<BEG> absorbs one taskattemptstatus <END>
<BEG> the content of this page is the countersblock now <END>
<BEG> creates a class loader that includes the designated files and archives <END>
<BEG> get the tasktracker expiry interval for the cluster <END>
<BEG> get the maximum capacity for running reduce tasks in the cluster <END>
<BEG> get the current state of the <code>jobtracker<code>, <END>
<BEG> logs the current counter values <END>
<BEG> accumulates a new reading by keeping a running account of the value distance from the beginning of the bucket to the end of this reading <END>
<BEG> the number of bytes in the file to process <END>
<BEG> connect to the default cluster <END>
<BEG> close the <code>jobclient<code> <END>
<BEG> returns task output filter <END>
<BEG> get the user jar for the map-reduce job <END>
<BEG> get the current working directory for the default file system <END>
<BEG> set the number of map tasks for this job <END>
<BEG> get the user-specified session identifier the default is the empty string <END>
<BEG> get the maximum percentage of reduce tasks that can fail without the job being aborted <END>
<BEG> return the name of the queue to which this job is submitted <END>
<BEG> this is no-op method for backward compatibility it's a behavior change <END>
<BEG> get the user-specified job name <END>
<BEG> add an inputsplit to this collection <END>
<BEG> getlocations from ith inputsplit <END>
<BEG> return the key for the current join or the value at the top of the recordreader heap <END>
<BEG> create a value to be used internally for joins <END>
<BEG> close all child rrs <END>
<BEG> return true if the rr- including the k,v pair stored in this object- is exhausted <END>
<BEG> request new value from proxied rr <END>
<BEG> create and run an aggregate based mapreduce job <END>
<BEG> returns the first mapper instance in the chain <END>
<BEG> closes all the opened named outputs <END>
<BEG> default implementation that does nothing <END>
<BEG> update the status message for the task <END>
<BEG> check whether the job is using a java recordreader <END>
<BEG> return the set of leaf level queues configured in the system to which jobs are submitted <END>
<BEG> write this spill record to the location provided <END>
<BEG> set encrypted spill key <END>
<BEG> gets a handle to the statistics instance based on the scheme associated with path <END>
<BEG> get the user log directory for the job jobid <END>
<BEG> the id of the task <END>
<BEG> set the next record range which is going to be processed by task <END>
<BEG> get map phase finish time for the task if map finsh time was <END>
<BEG> get start time of the task <END>
<BEG> get current phase of this task phase map in case of map tasks, <END>
<BEG> returns the number of bytes of output from this map <END>
<BEG> get the list of maps from which output-fetches failed <END>
<BEG> this method creates and initializes an iv initialization vector <END>
<BEG> set the configuration with the given set of files intended to be <END>
<BEG> get the archive entries in classpath as an array of path <END>
<BEG> gets info about which nodes the input split is stored on and how it is stored at each location <END>
<BEG> get the path of the submitted job configuration <END>
<BEG> check if the job completed successfully <END>
<BEG> fail indicated task attempt <END>
<BEG> gets the counters for this job may return null if the job has been <END>
<BEG> set the number of reduce tasks for the job <END>
<BEG> the interval at which waitforcompletion should check <END>
<BEG> get the job id <END>
<BEG> get the total number of reduces <END>
<BEG> get whether the job's map and reduce stages were combined <END>
<BEG> get the id of the workflow <END>
<BEG> get the finish time of the sort phase <END>
<BEG> set the job history file url for a completed job <END>
<BEG> get the job jar path <END>
<BEG> get the job distributed cache files path <END>
<BEG> specify the minimum size in bytes of each split per node <END>
<BEG> get the lower bound on split size imposed by the format <END>
<BEG> return true if tuple has an element at the position provided <END>
<BEG> get the default path and filename for the output format <END>
<BEG> get the base output name for the output file <END>
<BEG> required for backcompatibility with num key fields for partition in <END>
<BEG> remove jobtoken referrals which don't make sense in the context of the task execution <END>
<BEG> get the unique id for the job <END>
<BEG> get cache archives set in the configuration <END>
<BEG> called when the node is done with its penalty or done copying <END>
<BEG> get the unique name for this task attempt <END>
<BEG> get the type of the task <END>
<BEG> the amount completed, between zero and one <END>
<BEG> a table of counters <END>
<BEG> destroy the process <END>
<BEG> is the process with pid pid still alive? this method assumes that isalive is called on a pid that was alive not too long ago, and hence assumes no chance of pid-wrapping-around <END>
<BEG> get the reader andor reader group list string <END>
<BEG> set the domain list to the given list of domains <END>
<BEG> get user of the container being initialized or stopped <END>
<BEG> create a new instance of ahsclient <END>
<BEG> sets the nmtoken for node address only in the singleton obtained from <END>
<BEG> create a timeline client the current ugi when the user initialize the <END>
<BEG> get the token service name to be used for rmdelegationtoken depending <END>
<BEG> recover labels and node to labels mappings from store <END>
<BEG> return a hadoop path from a given url <END>
<BEG> join on comma <END>
<BEG> split on _ and trim results <END>
<BEG> the date that yarn was compiled <END>
<BEG> the user that compiled yarn <END>
<BEG> get the subversion url for the root yarn directory <END>
<BEG> indicate whether or not the histogram is capable of supporting auto-resize functionality <END>
<BEG> reset the contents and stats of this histogram <END>
<BEG> shift recorded values to the right the equivalent of a &gt;&gt; shift operation on all recorded values the <END>
<BEG> get the dynamic range of the histogram: the configured ratio between the highest trackable value and the lowest trackable non zero value at any given time <END>
<BEG> get an interval histogram, which will include a stable, consistent view of all value counts accumulated since the last interval histogram was taken <END>
<BEG> get the latest start time found in the file so far or 0 0 , <END>
<BEG> read the next interval histogram from the log, if interval falls within an absolute time range <p> returns a histogram object if an interval line was found with an associated absolute start timestamp value that falls between absolutestarttimesec and absoluteendtimesec, or null if no such interval line is found <END>
<BEG> output a legend line to the log <END>
<BEG> get the end time stamp [optionally] stored with this array <END>
<BEG> the index iterated to <END>
<BEG> record a value <p> to compensate for the loss of sampled values when a recorded value is larger than the expected interval between value samples, histogram will auto-generate an additional series of decreasingly-smaller down to the expectedintervalbetweenvaluesamples value records <END>
<BEG> read mappings as a application resourcename i e classpath lookup <END>
<BEG> marshalling support for dealing with jpa inheritancetype enums plugged into jaxb for binding <END>
<BEG> gets the value of the temporal property <END>
<BEG> sets the value of the convert property <END>
<BEG> sets the value of the cascaderemove property <END>
<BEG> sets the value of the cascadedetach property <END>
<BEG> gets the value of the uniqueconstraint property <END>
<BEG> gets the value of the updatable property <END>
<BEG> sets the value of the columndefinition property <END>
<BEG> gets the value of the converter property <END>
<BEG> sets the value of the converter property <END>
<BEG> sets the value of the mapkeytemporal property <END>
<BEG> gets the value of the mapkeyattributeoverride property <END>
<BEG> sets the value of the collectiontable property <END>
<BEG> gets the value of the idclass property <END>
<BEG> sets the value of the idclass property <END>
<BEG> sets the value of the entitylisteners property <END>
<BEG> sets the value of the strategy property <END>
<BEG> gets the value of the columnlist property <END>
<BEG> sets the value of the procedurename property <END>
<BEG> sets the value of the methodname property <END>
<BEG> sets the value of the allocationsize property <END>
<BEG> sets the value of the pkcolumnname property <END>
<BEG> get an identifier for the specified details by default this method will return an identifier <END>
<BEG> binary bitwise operators, not aggregate functions! <END>
<BEG> these are aggregate functions taking one argument, for sql server <END>
<BEG> ansi sql form, supported by postgres, hsql <END>
<BEG> h2-style uses java's simpledateformat directly so no need to translate format <END>
<BEG> usually, the offset comes before the limit, but occasionally the offset is specified after the limit does this dialect require us <END>
<BEG> the offsetlimit clauses typically must come <END>
<BEG> operates like sql coalesce expression, returning the first non-empty value <END>
<BEG> the intent of this class is to use a lighter implementation when jpa callbacks are disabled via <END>
<BEG> find an entity mapping descriptor based on its hibernate entity-name <END>
<BEG> register a function descriptor by name <END>
<BEG> get a builder for creating and registering a pattern-based aggregate function descriptor <END>
<BEG> register a named descriptor by name and invariant return type shortcut for building <END>
<BEG> get a builder for creating and registering a name-based function descriptor using the passed name as both the registration key and underlying sql function name <END>
<BEG> get a builder for creating and registering a name-based function descriptor <END>
<BEG> does this xref contain any parameters? <END>
<BEG> gets the value of the disableforeignkey property <END>
<BEG> sets the value of the disableforeignkey property <END>
<BEG> checks that the trimmed string is not empty <END>
<BEG> called to advance the next interpolation term of the message descriptor this message can be called multiple times <END>
<BEG> get a list of all methods which the given class declares, implements, overrides or inherits methods are added by adding first all methods of <END>
<BEG> whether the given provider is hibernate validator or not <END>
<BEG> to support abstractcollection addall <END>
<BEG> empty the set <END>
<BEG> compute <code> key hashcode ^ val hashcode <code> <END>
<BEG> tests if the key in the table <END>
<BEG> get the codahale metricregistry, could be null <END>
<BEG> get the current sequence <END>
<BEG> determine whether internal pool queries, principally aliveness checks, will be isolated in their own transaction <END>
<BEG> returns the popcount or cardinality of the two sets after an intersection <END>
<BEG> adds two bytes to the stack <END>
<BEG> if <code>key<code> exists, <code>putvalue<code> is inserted into the map, otherwise any existing value is incremented by <code>additionvalue<code> <END>
<BEG> adds two chars to the stack <END>
<BEG> adds four chars to the stack <END>
<BEG> compute and return the maximum number of elements inclusive that can be stored in a hash container for a given load factor <END>
<BEG> sets the entity resolver for uri-only inputs <END>
<BEG> queries whether this is an <code>xmlns<code> attribute <END>
<BEG> allocates a new local name object in c++, the refcount must be set up in such a way that <END>
<BEG> returns the needtodroplf <END>
<BEG> returns the actualhtmlencoding <END>
<BEG> starts and returns a new span as the child of the parameter 'parent' this <END>
<BEG> provides a string representation of this instance suitable for human consumption <END>
<BEG> used to report that the limit has been reached <END>
<BEG> returns the maximum number of cache entries the cache will retain <END>
<BEG> returns whether the cache will behave as a shared cache or not <END>
<BEG> sets the current maximum idle lifetime in seconds for a background revalidation worker thread if a worker thread is idle <END>
<BEG> clears all state if new requests come in instances will be recreated and metrics started from scratch <END>
<BEG> scope of collapsing <END>
<BEG> return the number of currently-executing hystrix threads <END>
<BEG> cumulative count of number of threads rejected since the start of the application <END>
<BEG> rolling max number of active threads during rolling statistical window <END>
<BEG> sets the value of the hystrixrequestvariable for the current request context <END>
<BEG> for unit test purposes <END>
<BEG> reset all of the hystrixplugins to null you may invoke this directly, or it also gets invoked via <code>hystrix reset <code> <END>
<BEG> updates the maximum to be at least the given value <END>
<BEG> lazy iterator over the symbol names of an iterator of symbol tokens <END>
<BEG> creates a builder preconfigured for basic pretty-printing <END>
<BEG> gets the strategy for reducing or eliminating local symbol tables <END>
<BEG> gets the imports that will be used to construct the initial local symbol table <END>
<BEG> returns the default ivy settings of this classloader if it doesn't exist yet, a new one is <END>
<BEG> this is usually not necessary to define a reference in ant, but it's the only way to know the id of the settings, which we use to set ant properties <END>
<BEG> sets the configurations to deliver <END>
<BEG> returns the attributes of this event, as a map string->string <END>
<BEG> total size of all copied or symlinked artifacts, in bytes <END>
<BEG> creates a new ivycontext as a copy of the current one and pushes it as the current context in the current thread <END>
<BEG> reads the first object from the list saved under given key in the first context from the context stack in which this key is defined if value under key in any of the contexts form <END>
<BEG> puts a new object at the start of the list saved under given key in the context if value <END>
<BEG> add a configuration for this artifact <END>
<BEG> returns the encoded string representing this moduleid <END>
<BEG> returns a map of all attributes of this module id <END>
<BEG> get the report on the download requests the list of download report can be restricted to a <END>
<BEG> returns the number of module revision in the repository <END>
<BEG> returns the configurations of the dependency required in a given root module configuration <END>
<BEG> materialize an artifact already located <END>
<BEG> returns the root directory to where the artifacts are retrieved <END>
<BEG> returns a collection of <tt>file<tt> objects who were actually copied during the retrieve process <END>
<BEG> list module ids of the module accessible through the current resolvers matching the given mid criteria according to the given matcher <END>
<BEG> returns the file names of the files that should be ignored when creating a file listing <END>
<BEG> check if a adding this element as a dependency of caller will introduce a circular dependency if it is, all the elements of the loop are flaged as 'loopintermediateelement', <END>
<BEG> parses delimited string and returns an array containing the tokens this parser obeys quotes, <END>
<BEG> get a new session using the default attributes if the given string is a full uri, use the data from the uri instead <END>
<BEG> get a list of direct descendents of the given resource note that attempts to get a list of <END>
<BEG> default implementation is a no-op <END>
<BEG> sets the password to use for decrypting key file if it is encrypted if no password is set and the keyfile is encrypted, the user will be prompted for the password if the keyfile is passwordless, this parameter will be ignored if given <END>
<BEG> sets the port to use for the ssh communication port 22 is default the port can also be set by using a full url for the pattern, like sftp:myserver com:8022pathtorepos[artifact] [ext] <END>
<BEG> filters names before returning them in the findxxxnames or findtokenvalues method <END>
<BEG> has this entry been successfully built? <END>
<BEG> set base resource override url pattern <END>
<BEG> set whether to enable restricted mode default is true <END>
<BEG> sets the path separator used on the target system not sure if this is used or if '' is used <END>
<BEG> recursively delete file <END>
<BEG> method that allows checking whether this node is json array node and contains a value for specified index if this is the case including case of specified indexing having null as value , returns true; otherwise returns false <END>
<BEG> method for checking how many contained types this type has contained types are usually generic types, so that <END>
<BEG> method for accessing name of type variable in indicated position if no name is bound, will use placeholders derived <END>
<BEG> method called to find out set of explicit names for accessors bound together due to implicit name <END>
<BEG> alternative version of the prefix-for-object method, which is given actual type to use instead of using exact type of the value ; typically a super type of actual value type <END>
<BEG> method used to check if this property has specific inclusion override associated with it or not <END>
<BEG> internal methods, error reporting <END>
<BEG> no way or need to indent anything, so let's block any attempts <END>
<BEG> unlike with json, this method can use slightly optimized version since cbor has a variant that allows embedding length in array start marker but it mostly or only? makes sense for small <END>
<BEG> method called to override a class annotation, usually due to a mix-in annotation masking or overriding an annotation 'real' class <END>
<BEG> accessors for aggregate information <END>
<BEG> convenience method for creating a new factory instance with additional bean serializer modifier; equivalent to calling <pre> withconfig getconfig withserializermodifier modifier ; <END>
<BEG> implementation of core jsonnode api <END>
<BEG> call cassandra's thrift get_slice method <END>
<BEG> returns the number of points comprising this geoshape a point and circle have only one point center of circle , <END>
<BEG> constructs a point from its latitude and longitude information <END>
<BEG> whether the given coordinates mark a point on earth <END>
<BEG> returns a randomly chosen host name this is used to pick one host when multiple are configured <END>
<BEG> adds a new key as a deletion to this mutation <END>
<BEG> ############### simple staticbuffer construction ################ <END>
<BEG> removes any query partition restriction for this query <END>
<BEG> calling this method will cause this query to only included loaded i e unmodified relations in the <END>
<BEG> cannot currently throw exception when removed since internal logic relies on access to the edge beyond its removal todo: reconcile with access validation logic <END>
<BEG> should be called when the object at top changes values still log n worst <END>
<BEG> converts ieee 754 representation of a double to sortable order or back to the original <END>
<BEG> imports another xmlbuilder document into this document at the current position the entire document provided is imported <END>
<BEG> add a cdata node with string content to the element represented by this builder node, and return the node representing the element to which the data was added <strong>not<strong> the new cdata node <END>
<BEG> add a value to the abstractlatlonboxsimpleextension property collection <END>
<BEG> add a value to the abstractviewsimpleextension property collection <END>
<BEG> sets the value of the abstractviewobjectextension property objects of the following type s are allowed in the list list<abstractobject> <END>
<BEG> add a value to the abstractviewobjectextension property collection <END>
<BEG> sets the value of the basiclinksimpleextension property objects of the following type s are allowed in the list list<object> <END>
<BEG> add a value to the cameraobjectextension property collection <END>
<BEG> add a value to the documentsimpleextension property collection <END>
<BEG> add a value to the documentobjectextension property collection <END>
<BEG> add a value to the groundoverlaysimpleextension property collection <END>
<BEG> add a value to the groundoverlayobjectextension property collection <END>
<BEG> add a value to the coordinates property collection <END>
<BEG> add a value to the iconstyleobjectextension property collection <END>
<BEG> add a value to the lookatsimpleextension property collection <END>
<BEG> add a value to the pointsimpleextension property collection <END>
<BEG> add a value to the schemaextension property collection <END>
<BEG> add a value to the stylemapsimpleextension property collection <END>
<BEG> add a value to the stylemapobjectextension property collection <END>
<BEG> add a value to the timestampsimpleextension property collection <END>
<BEG> add a value to the createordeleteorchange property collection <END>
<BEG> add a value to the viewvolumesimpleextension property collection <END>
<BEG> sets the value of the dependentlocalityname property objects of the following type s are allowed in the list list<dependentlocalityname> <END>
<BEG> sets the value of the largemailusername property objects of the following type s are allowed in the list list<largemailusername> <END>
<BEG> add a value to the postalroutename property collection <END>
<BEG> sets the value of the premisename property objects of the following type s are allowed in the list list<premisename> <END>
<BEG> add a value to the premisename property collection <END>
<BEG> add a value to the premisenumbersuffix property collection <END>
<BEG> virtually add words directly to the bitmap <END>
<BEG> set the bits in the range of indexes to false <END>
<BEG> checks whether two bitsets intersect <END>
<BEG> usage: for int i=bs nextunsetbit 0 ; i&gt;=0; i=bs nextunsetbit i+1 <END>
<BEG> compute cardinality of bitwise or <END>
<BEG> resize the bitset <END>
<BEG> set the bits in the range of indexes true <END>
<BEG> query the size <END>
<BEG> set to false <END>
<BEG> signals that the element on top of the heap has been updated <END>
<BEG> computes the bitwise or between the current bitmap and the bitmap a stores the result in the container <END>
<BEG> set the bit at position i to false <END>
<BEG> change the reported size in bits of the uncompressed bitmap represented by this compressed bitmap it may change the underlying <END>
<BEG> compute a boolean threshold function: bits are true where at least t bitmaps have a true bit <END>
<BEG> returns the cardinality of the result of a bitwise xor of the values of the current bitmap with some other bitmap avoids <END>
<BEG> return a bitmap with the bit set to true at the given positions the <END>
<BEG> compute the and aggregate using a temporary uncompressed bitmap <END>
<BEG> write out the remain words, transforming them to zeroes <END>
<BEG> write out the remaining words <END>
<BEG> append to the list the literal words as ewahpointer <END>
<BEG> turn an iterator into a bitmap <END>
<BEG> <p> returns the type's name <END>
<BEG> <p> returns the variable upper bound defined with an <tt>extends<tt> clause , if any <END>
<BEG> returns the signature indicated by <code>signature_index<code> <END>
<BEG> invoked when the visited instruction is jsr <END>
<BEG> returns the methodinfo representing this methodconstructor in the class file <END>
<BEG> returns true if the modifiers include the <tt>private<tt> modifier <END>
<BEG> returns true if the modifiers include the <tt>protected<tt> modifier <END>
<BEG> register a beannameresolver <END>
<BEG> add an user defined elresolver to the list of elresolvers <END>
<BEG> evaluates an el expression <END>
<BEG> if the base object is a resourcebundle, returns the most general type that this resolver accepts for the <code>property<code> argument <END>
<BEG> creates a json object builder <END>
<BEG> compute and return the message digest of the input byte array <END>
<BEG> write out given string as an nstring, depending on the type of the characters inside the string the string should <END>
<BEG> adds a response handler <END>
<BEG> stop the idlemanager the idlemanager can not be restarted <END>
<BEG> ensure the folder is closed <END>
<BEG> get the quotas for the quotaroot associated with this folder note that many folders may have the same quotaroot <END>
<BEG> add the rights specified in the acl to the entry for the identifier specified in the acl if an entry for the identifier <END>
<BEG> get all the rights that may be allowed to the given identifier <END>
<BEG> get the content language <END>
<BEG> get the in-reply-to header <END>
<BEG> get the user name to be used with the proxyauth command <END>
<BEG> create an imapfolder object call the newimapfolder method <END>
<BEG> return the sequence number for the given message number <END>
<BEG> return all fetch response items of the given class for the given message number <END>
<BEG> returns <code>true<code> if this is an imap4rev1 server <END>
<BEG> get the user name used with the proxyauth command <END>
<BEG> partial fetch of given body section <END>
<BEG> get the sequence numbers for uids specified in the array <END>
<BEG> return the text sent by the server along with the referral <END>
<BEG> remove all rights in the given rights object from this rights object <END>
<BEG> will not change while the folder is open because the pop3 protocol doesn't support notification of new messages arriving in open folders <END>
<BEG> close the folder when we're finalized <END>
<BEG> only the name inbox is supported <END>
<BEG> return the return code from the smtp server that indicates the reason for the failure see <END>
<BEG> set the extension string to use with the mail command <END>
<BEG> this method has been added to improve performance <END>
<BEG> gets the push level the default is <tt>level off<tt> meaning that <END>
<BEG> gets the comparator used to order all <tt>logrecord<tt> objects prior to formatting if <tt>null<tt> then the order is unspecified <END>
<BEG> sets a literal string for the email subject all control characters are <END>
<BEG> the port we were trying to connect to <END>
<BEG> create a maillogger that uses a logger with the specified name and prefix the new maillogger uses the same debug flag and <END>
<BEG> log a message at the finest level <END>
<BEG> set trace mode <END>
<BEG> get the mode field from the prefix this is the permission <END>
<BEG> set up the buffer name and permission mode <END>
<BEG> return the changed message <END>
<BEG> return the array of messages added or removed <END>
<BEG> get the items set in this profile <END>
<BEG> check whether the specified user flag is present in this flags object <END>
<BEG> notify all folderlisteners registered on this folder and this folder's store about the renaming of this folder <END>
<BEG> return a parameterlist object that holds all the available parameters returns null if no parameters are available <END>
<BEG> return the mime type string, without the parameters <END>
<BEG> get all the headers for this header name, returned as a single string, with headers separated by the delimiter if the <END>
<BEG> return all non-matching header lines <END>
<BEG> return a <code>flags<code> object containing the flags for this message <p> <END>
<BEG> convert this parameterlist into a mime string if this is <END>
<BEG> returns the content transfer encoding specified when this object was created <END>
<BEG> checks whether this message is expunged all other methods except <END>
<BEG> returns the name of the class that implements the protocol <END>
<BEG> return the address to match with <END>
<BEG> connect to the specified address this method provides a simple <END>
<BEG> get a store object that implements this user's desired store protocol the <code>mail store protocol<code> property specifies the <END>
<BEG> return any saved passwordauthentication for this store or transport urlname normally used only by store or transport implementations <END>
<BEG> return a set of folders representing the <i>personal<i> namespaces for the current user a personal namespace is a set of names that <END>
<BEG> notify all folderlisteners about the renaming of a folder <END>
<BEG> add a listener for transport events <p> <END>
<BEG> <p>read-only property that returns true if jaxb marshaller should enable xop creation <p> <END>
<BEG> loads a grammar object for the unmarshal-time validation <END>
<BEG> creates an assignment statement and adds it to this block <END>
<BEG> create a switchcase statement and add it to this block <END>
<BEG> create a return statement and add it to this block <END>
<BEG> creates a new generated class <END>
<BEG> a convenience method for <code>build destdir,system out <code> <END>
<BEG> create a block to be executed by else branch <END>
<BEG> returns the set of methods defined in this class <END>
<BEG> creates, if necessary, and returns the class javadoc for this jdefinedclass <END>
<BEG> returns a reference to super , an implicit reference to the super class <END>
<BEG> changes the name of the method <END>
<BEG> iterates all resource files in this package <END>
<BEG> checks if this package is the root, unnamed package <END>
<BEG> returns the erasure of this type <END>
<BEG> adds a bound to this variable <END>
<BEG> create a new catalog object <END>
<BEG> construct a file: url for a path name <END>
<BEG> return the catalog being used <END>
<BEG> provide accessto the underlying catalog <END>
<BEG> called by the generated handler code when an enter element event is consumed <END>
<BEG> true if this element has its own class <END>
<BEG> overrides the name of the property <END>
<BEG> we'll never use a wrapper element in xjc always return null <END>
<BEG> adds a new input schema <END>
<BEG> returns the super class of this class, if it has the super class and it is also a jaxb-bound class <END>
<BEG> checks if the given namespace uri is supported as the extension bindings <END>
<BEG> sets the location information to a specified element <END>
<BEG> just produces debug representation <END>
<BEG> sink node of a grpah <END>
<BEG> gets all the parsed documents <END>
<BEG> components that always map to a type <END>
<BEG> back pointer to the bgmbuilder which is building a bgm from schema components including this customization <END>
<BEG> checks if the given component is being mapped to a type <END>
<BEG> sets the stack size of the xjc invocation <END>
<BEG> controls whether files should be generated in read-only mode or not <END>
<BEG> used by applications to request locale for diagnostics <END>
<BEG> used by applications to set handling of dtd parsing events <END>
<BEG> chooses a client locale to use, using the first language specified in the list that is supported by this catalog if none of the specified <END>
<BEG> returns the number of keys in this hashtable <END>
<BEG> used to view this as an enumeration; returns true if there are more keys to be enumerated <END>
<BEG> local attribute use <END>
<BEG> registers a patcher that will run after all the parsing has finished <END>
<BEG> gets a reference to the existing schema or creates a new one if none exists yet <END>
<BEG> gets the parsed result don't call this method until <END>
<BEG> evaluates the scd against the whole schema set and returns the matched node <END>
<BEG> adds a method with the same signiture as the given method, including exception types <p> the new method will have the same modifier as the original method, except that the abstract and native flags will be stripped <END>
<BEG> definines the class using the given classloader and protectiondomain <END>
<BEG> push an operand of the given type onto the stack <p> if the entry is wide then a corresponding top type will be created <END>
<BEG> push an operand of the given type onto the stack <END>
<BEG> pops an operand from the stack <END>
<BEG> the number of spaces this takes up in the const pool <END>
<BEG> returns the handle used to create a rendering context in prism <END>
<BEG> the functions below are used when the platform support modality natively <END>
<BEG> waits until requests are completed and idle for a certain amount of time this type of waiting happens automatically on <END>
<BEG> allow to overwrite or specify new ansi color names in a javascript map like format <END>
<BEG> indicate whether this element has any attributes <END>
<BEG> indicate whether this element has any additional namespace declarations <END>
<BEG> sort the attributes of this element using a mechanism that is safe for jdom other child content will be unaffected see the notes <END>
<BEG> this method is called in response to an error that has occurred; this indicates that a rule was broken, typically in validation, but that parsing could reasonably continue the implementation of this method here <END>
<BEG> specifies whether or not the parser should eliminate whitespace in element content sometimes known as ignorable whitespace when building the document only whitespace which is contained within element content <END>
<BEG> this converts the jdom <code>cdata<code> parameter to a dom cdatasection node, returning the dom version the dom node will be linked to an <END>
<BEG> return an iterable containing all the namespaces introduced to the current-level's scope <END>
<BEG> return an iterable containing all the namespaces introduced to the <END>
<BEG> this is a utility function for determining whether a specified character is a letter according to production 84 of the xml 1 0 specification <END>
<BEG> get the variable value associated with the given name see <END>
<BEG> get the adapted client request adapter <END>
<BEG> get the uri to the resource <END>
<BEG> get the adapted output stream <END>
<BEG> get the next client handler to invoke in the chain of filters <END>
<BEG> the jersey servlet application, named {0}, is not annotated with {1} and has no servlet mapping <END>
<BEG> the servlet path {0} does not start with the filter context path {1} <END>
<BEG> get the servlet context for the servlet or filter, depending on how this class is registered <END>
<BEG> returns the index of the first matching character in a character sequence, starting from a <END>
<BEG> cannot disable external parameter entity processing feature on sax parser factory [{0}] <END>
<BEG> error un-marshalling jaxb object of type: {0} <END>
<BEG> unable to configure secure xml processing feature on the xml transformer factory <END>
<BEG> get the status code associated with the response <END>
<BEG> get the response entity the response will be serialized using a <END>
<BEG> get the type of the parameter annotation <END>
<BEG> ascertain if the method is capable of consuming an entity of a certain media type <END>
<BEG> returns length if this arc matches the input, 0 otherwise <END>
<BEG> get uri template initialized in ctor <END>
<BEG> normalize the uri provided and return the normalized copy <END>
<BEG> gets the value of the commenttext property <END>
<BEG> sets the value of the commenttext property <END>
<BEG> map the cause of a mapable container exception to a response <END>
<BEG> gets the value of the doc property <END>
<BEG> gets the value of the title property <END>
<BEG> sets the value of the resourcetype property <END>
<BEG> gets the value of the rel property <END>
<BEG> gets the value of the style property <END>
<BEG> gets the value of the fixed property <END>
<BEG> gets the value of the methodorresource property <END>
<BEG> get state information <END>
<BEG> get all reader interceptors applicable to this request <END>
<BEG> get the value of http vary response header to be set in the response, <END>
<BEG> sets the flag indicating whether the response was created based on the exception <END>
<BEG> closes the response flushes and closes the entity stream, frees up container resources associated with <END>
<BEG> reduces the number of slashes before the path to only one slash <END>
<BEG> both application and applicationclass can't be null <END>
<BEG> an exception was not mapped due to exception mapper failure the http 500 response will be returned <END>
<BEG> error un-registering jersey monitoring mbeans on application destroy <END>
<BEG> the request entity cannot be empty <END>
<BEG> the entity stream cannot be set in the request as it is already in the response processing phase <END>
<BEG> a resource, {0}, has ambiguous path definition with resource {1} both resources match to the same path pattern {2} <END>
<BEG> error while committing the output stream <END>
<BEG> could not load wadlgeneratorconfiguration, check the configuration of {0} <END>
<BEG> error generating wadl for method {0} of resource {1} <END>
<BEG> the wadl application already contains a grammars element, we're adding elements of the provided grammars file <END>
<BEG> the sub resource method {0} in {1} contains empty path annotation <END>
<BEG> error generating wadl for parameter {0} of resource {1} and resource method {2} <END>
<BEG> this is simplified wadl with user and core resources only to get full wadl with extended resources use the query parameter {0} link: {1} <END>
<BEG> update the execution statistics that are exposed by this mbean <END>
<BEG> get the routing context for the processed container request <END>
<BEG> create a scanning listener to check for java classes in java <END>
<BEG> create a new resource method invocable model backed by an inflector instance <END>
<BEG> create a new resource method invocable model backed by an inflector class <END>
<BEG> get a new sub-list of methods containing all the methods from this method list that declare the specified return type <END>
<BEG> get a new unbound resource model builder <END>
<BEG> returns the list of child resources available on this resource <END>
<BEG> register annotated jax-rs resource, jax-rs or jersey contract provider, jax-rs feature <END>
<BEG> handles list selection events for this application <END>
<BEG> follows hyperlinks clicked on by a user this is achieved differently depending on whether <END>
<BEG> loads aws credentials from the file <tt>samples properties<tt> <END>
<BEG> adds a set of granteepermission pairs to the acl, where each item in the set is a <END>
<BEG> set the group grantee's uri <END>
<BEG> list all your standard cloudfront distributions <END>
<BEG> list the streaming distributions whose origin is the given s3 bucket name <END>
<BEG> list all buckets in a given project <END>
<BEG> initialise httpclient and httpconnectionmanager objects with the configuration settings appropriate for communicating with s3 by default, this method simply delegates the <END>
<BEG> compare two products by their names using string comparision <END>
<BEG> set the object's acl <END>
<BEG> closes the object's data input stream if it exists <END>
<BEG> set this object's last modified date based on information returned from the service <END>
<BEG> set this object's content length the content length is set internally by jets3t for <END>
<BEG> set the key of this object <END>
<BEG> generates a policy document condition statement to represent an equality test <END>
<BEG> abort the given multipart upload process also deletes any parts that may <END>
<BEG> returns true if the given cipher is available and can be used by this encryption utility to determine whether the cipher can actually be used a test string is <END>
<BEG> set the exception's http request path; for internal use only <END>
<BEG> throws an exception if a bucket is null or contains a nullempty name <END>
<BEG> deletes a bucket only the owner of a bucket may delete it <END>
<BEG> returns the current date and time, adjusted according to the time offset between your computer and a service endpoint, as set by <END>
<BEG> adds a set of message-specific properties to the message <END>
<BEG> encodes a gatekeeper message as a properties object, with all signature requests identified with a unique zero-based index number <END>
<BEG> approve the request by setting the signed url for this request - performed by a gatekeeper service when a request has been allowed <END>
<BEG> decline the request by setting the decline reason for this request - performed by a gatekeeper service when a request has been disallowed <END>
<BEG> generate the url for an oauth authorization end-point that a person can visit in a web browser to authorize access to a storage resource, where access is limited to the given scope the url will contain the client id stored in this class, along with <END>
<BEG> initialises this service's http proxy by auto-detecting the proxy settings using the given endpoint <END>
<BEG> default http parameters got from the defaulthttpclient implementation <END>
<BEG> parse the data in a set of signaturerequest objects and build the corresponding s3objects represented by that data <END>
<BEG> simple test against an code to determine if it falls into the <code>redirection<code> message category as defined in the <a href= http:tools ietf orghtmlrfc1945 >rfc 1945 - http1 0<a>, and <a <END>
<BEG> <p>utility method to be called to register read interest <p> <END>
<BEG> <p>callback method invoked when the endpoint failed to be ready to be read <p> <END>
<BEG> load realm users from properties file the property file maps usernames to password specs followed by an optional comma separated list of role names <END>
<BEG> add a handler <END>
<BEG> test if the method type supports <code>x-www-form-urlencoded<code> content <END>
<BEG> https request can be overridden by setting sessioncookieconfig setsecure true , <END>
<BEG> add error page mapping for a status code <END>
<BEG> get ssl session cache size <END>
<BEG> set ssl session cache size <END>
<BEG> returns the type of elements in the array <END>
<BEG> gets the system page size <END>
<BEG> gets the regex string used to match platform-specific libraries <END>
<BEG> simple accessor method to set the default scanner <END>
<BEG> user code for initialization inside the parser typically this <END>
<BEG> return value on the top of the stack without popping it <END>
<BEG> returns an array that contains the character class codes of all characters in the specified set of input characters <END>
<BEG> returns an array of all charclassintervals in this char class collection <END>
<BEG> access to production table <END>
<BEG> starts the generation process with the files in <code>argv<code> or pops up a window to choose a file, when <code>argv<code> doesn't have any file entries <END>
<BEG> set output directory <END>
<BEG> report time statistic data <END>
<BEG> throws a generatorexception if there are any errors recorded <END>
<BEG> adds the string to the kill-ring also sets lastyank to false <END>
<BEG> reads a single character from this reader and returns it as an integer with the two higher-order bytes set to 0 returns -1 if the end of the <END>
<BEG> subclass to change behavior if needed <END>
<BEG> restore the original terminal configuration, which can be used when shutting down the console reader the consolereader cannot be <END>
<BEG> flattens out the elements of the given expression into a single list it's evaluated as follows <END>
<BEG> retrieves the literal value <END>
<BEG> evaluates a filter expression as follows <END>
<BEG> evaluates the length of the given argument <END>
<BEG> checks whether lhs is equal to rhs <END>
<BEG> checks whether lhs is greater than rhs <END>
<BEG> answers the number of threads in the current group <END>
<BEG> answers the number of threads in the current subgroup <END>
<BEG> return the benchmark result, as if all iterations from all sub-benchmark results were merged in a single result <END>
<BEG> returns the interval c1, c2 of which there's an 1-alpha probability of the mean being within the interval <END>
<BEG> gets the value of a non-accessible static field defined in a given class <END>
<BEG> creates a new instance of a given non-accessible class, invoking the constructor which has the specified parameter types <END>
<BEG> creates a new instance of a given class, invoking the constructor which has parameters matching the number, order, and types of the given non-null arguments <END>
<BEG> this method must only be called by the jvm, to provide the instrumentation object <END>
<BEG> returns an array of <code>string<code> based on a native array of <code>char<code> or <code>wchar_t<code> based on the <code>wide<code> parameter the array length is determined by a <END>
<BEG> returns whether the structure is read from native memory prior to a native function call <END>
<BEG> gets the constant for a value <END>
<BEG> returns the maximum value in this constantset <END>
<BEG> gets the native size of type of reference <END>
<BEG> copies the byte value from native memory <END>
<BEG> copies the double value from native memory <END>
<BEG> copies the value to native memory <END>
<BEG> adds a mapping from a java object to a unique native address <END>
<BEG> gets the native address of this memory object optional operation <END>
<BEG> creates an array of <tt>signed16<tt> instances <END>
<BEG> creates an array of <tt>signed32<tt> instances <END>
<BEG> creates an array of <tt>unsignedlong<tt> instances <END>
<BEG> set a property value <END>
<BEG> a posixhandler with reasonable default behavior <END>
<BEG> create dqword 16 bytes pointer operand <END>
<BEG> cpu identification i486 <END>
<BEG> make stack frame for procedure parameters <END>
<BEG> move data from one register to another <END>
<BEG> one's complement negation <END>
<BEG> undefined instruction - raise invalid opcode exception <END>
<BEG> compare st 0 with 16 bit or 32 bit integer fpu <END>
<BEG> push log2 e onto the fpu register stack fpu <END>
<BEG> packed shift right logical mmx <END>
<BEG> packed sp-fp maximum 3dnow! <END>
<BEG> packed sp-fp multiply 3dnow! <END>
<BEG> packed sp-fp subtract 3dnow! <END>
<BEG> compare scalar sp-fp values sse <END>
<BEG> load streaming simd extension controlstatus sse <END>
<BEG> move high packed sp-fp sse <END>
<BEG> move unaligned packed sp-fp values sse <END>
<BEG> packed sp-fp multiply sse <END>
<BEG> packed sum of absolute differences sse <END>
<BEG> convert packed dp-fp values to packed sp-fp values sse2 <END>
<BEG> convert packed sp-fp values to packed dword integers sse2 <END>
<BEG> convert scalar sp-fp value to scalar dp-fp value sse2 <END>
<BEG> convert with truncation packed sp-fp values to packed dword integers sse2 <END>
<BEG> memory fence sse2 <END>
<BEG> move aligned packed double-precision fp values sse2 <END>
<BEG> move quadword from xmm to mmx technology register sse2 <END>
<BEG> packed average sse2 <END>
<BEG> packed compare for greater than words sse2 <END>
<BEG> packed compare for greater than dwords sse2 <END>
<BEG> packed shift right logical sse2 <END>
<BEG> packed sp-fp horizontal add sse3 <END>
<BEG> packed multiply high with round and scale ssse3 <END>
<BEG> extract byte sse4 1 <END>
<BEG> packed move with sign extend sse4 1 <END>
<BEG> packed move with zero extend sse4 1 <END>
<BEG> the category as text value <END>
<BEG> whether to show the horizontal legend <END>
<BEG> a sql rendition of this comparator <END>
<BEG> whether this comparator supports subselects on the right-hand side <END>
<BEG> sets the value of the indentation property <END>
<BEG> whether any schema name should be rendered at all <END>
<BEG> sets the value of the renderformatting property <END>
<BEG> whether stored function calls should be wrapped in scalar subqueries <END>
<BEG> whether string literals should be escaped with backslash <END>
<BEG> whether store and delete methods should be executed with optimistic locking also on unversioned tables, i e on tables that do not have a version andor timestamp column <END>
<BEG> whether warnings should be fetched after each query execution <END>
<BEG> the default jdbc querytimeout property that should be applied to all jooq queries, for which no specific querytimeout was specified <END>
<BEG> the default jdbc maxrows property that should be applied to all jooq queries, for which no specific maxrows value was specified <END>
<BEG> sets the value of the maxrows property <END>
<BEG> the default jdbc fetchsize property that should be applied to all jooq queries, for which no specific fetchsize value was specified <END>
<BEG> sets the value of the parsewithmetalookups property <END>
<BEG> get the statement type from the settings <END>
<BEG> when to quote csv content <END>
<BEG> this method is used in generated code! <END>
<BEG> convenience method to construct an array of <code>defaultdiagnosticslistenerprovider<code> from an array of <code>diagnosticslistener<code> instances <END>
<BEG> create a new dsl <code>create view if not exists<code> statement <END>
<BEG> create a new dsl <code>create sequence if not exists<code> statement <END>
<BEG> create a new dsl <code>drop view<code> statement <END>
<BEG> create an <code>any<code> quantified select to be used in quantified comparison predicate expressions <END>
<BEG> grant a privilege on table to user or role <END>
<BEG> a table function generating a series of values from <code>from<code> to <code>to<code> inclusive , increasing values by <code>step<code> <END>
<BEG> create a qualified field, given its qualified field name <END>
<BEG> the <code>ifnull <code> function, a synonym of <code>nvl <code> <END>
<BEG> get the lpad field, length, character function <END>
<BEG> get the position in, search function <END>
<BEG> get the concat value[, value, ] function <END>
<BEG> get the date difference in number of days <END>
<BEG> truncate a date or a timestamp to the beginning of the day <END>
<BEG> convert a temporal value to a <code>date<code> <END>
<BEG> parse a value to a <code>timestamp<code> <END>
<BEG> create a grouping sets field1a, field1b , field2a , , fieldna, <END>
<BEG> the bitwise not operator <END>
<BEG> get rounded value of a numeric field: round field <END>
<BEG> get the ln field function, taking the natural logarithm of this field <END>
<BEG> get the atan2 field, y function <END>
<BEG> get the count field function <END>
<BEG> get the <code>array_agg <code> aggregate function <END>
<BEG> the <code>cume_dist expr within group order by [order clause] <code> ordered-set aggregate function <END>
<BEG> create a named parameter with a defined type of another field and no initial value <END>
<BEG> a <code>2<code> literal <END>
<BEG> get the <code>current_user <code> function <END>
<BEG> get the <code>current_schema <code> function <END>
<BEG> the sql string that caused the exception <END>
<BEG> whether this execution context is from a single batch statement <END>
<BEG> the corresponding value from <code>mockstatement<code> <END>
<BEG> wrap a class name, loading it via a given class loader <END>
<BEG> <p>returns either the passed in charsequence, or if the charsequence is <END>
<BEG> <p>abbreviates a string using ellipses this will turn <END>
<BEG> <p> compares two strings for equality, where either one or both objects may <END>
<BEG> the maximum column width, defaulting to no limit <END>
<BEG> whether the horizontal header border line between header and data cells should be displayed <END>
<BEG> whether horizontal and vertical lines should be intersected with a <code>'+'<code> symbol <END>
<BEG> get the minute-part of this interval <END>
<BEG> get the mariadb-specific <code>decode <code> function <p> <END>
<BEG> get the mariadb-specific <code>uncompress <code> function <END>
<BEG> get the mysql-specific <code>encode <code> function <END>
<BEG> get the mysql-specific <code>compress <code> function <END>
<BEG> get the mysql-specific <code>uncompress <code> function <END>
<BEG> the postgresql <code>array_remove anyarray, anyelement <code> function <END>
<BEG> get the postgresql-specific <code>[table] oid<code> column from any table <END>
<BEG> convert a jooq <code>day to second<code> interval to a postgres representation <END>
<BEG> gets the value of the datatype property <END>
<BEG> gets the value of the numericprecision property <END>
<BEG> sets the value of the ordinalposition property <END>
<BEG> gets the value of the indexcatalog property <END>
<BEG> sets the value of the indexcatalog property <END>
<BEG> gets the value of the isdescending property <END>
<BEG> sets the value of the constraintcatalog property <END>
<BEG> sets the value of the specificcatalog property <END>
<BEG> gets the value of the uniqueconstraintname property <END>
<BEG> gets the value of the routineschema property <END>
<BEG> sets the value of the routinepackage property <END>
<BEG> sets the value of the constrainttype property <END>
<BEG> the new header value, defaulting to <code>true<code> <END>
<BEG> the schema qualifier whose elements can be found from the search path <END>
<BEG> whether to render the optional <code>outer<code> keyword in <code>outer join<code>, if it is optional in the output dialect <END>
<BEG> whether queries combined with set operators e g union and union all should always be surrounded by a parenthesis pair <END>
<BEG> sets the value of the interpreterdelayforeignkeydeclarations property <END>
<BEG> sets the value of the parsemetadefaultexpressions property <END>
<BEG> whether <code>drop schema<code> statements should have a <code>cascade<code> clause where supported <END>
<BEG> gets the value of the enforced property <END>
<BEG> sets the value of the includes property <END>
<BEG> this flag indicates whether routines contained in packages should be included in output produced by this database <END>
<BEG> sets the value of the includepackageconstants property <END>
<BEG> sets the value of the includeudts property <END>
<BEG> this flag indicates whether sequences should be included in output produced by this database <END>
<BEG> this flag indicates whether foreign keys should be included in output produced by this database <END>
<BEG> all unique key names that should be used instead of primary keys on <END>
<BEG> sets the value of the unsignedtypes property <END>
<BEG> the schema that is used locally as a source for meta information <END>
<BEG> a flag to indicate that the outputschema should be the default schema, which generates schema-less, unqualified tables, procedures, etc <END>
<BEG> primary key foreign key relations should be generated and used <END>
<BEG> sets the value of the deprecated property <END>
<BEG> sets the value of the keys property <END>
<BEG> generate immutable interfaces <END>
<BEG> generate serializable interfaces <END>
<BEG> sets the value of the jpaannotations property <END>
<BEG> turn off generation of all global object references <END>
<BEG> turn off generation of all sql comments as javadoc on all catalogs <END>
<BEG> sets the value of the commentsoncatalogs property <END>
<BEG> turn off generation of all sql comments as javadoc on all columns <END>
<BEG> sets the value of the commentsonattributes property <END>
<BEG> turn off generation of all sql comments as javadoc on all sequences <END>
<BEG> generate varargs setters for array types for convenience <END>
<BEG> a regular expression matching all the types in generated code that should be fully qualified <END>
<BEG> the jdbc driver class <END>
<BEG> sets the value of the username property <END>
<BEG> sets the value of the password property <END>
<BEG> sets the value of the enumclass property <END>
<BEG> sets the value of the routineclass property <END>
<BEG> sets the value of the tableclass property <END>
<BEG> this rule influences the naming of the generated pojos object <END>
<BEG> set the <code>_2<code> parameter in value to the routine <END>
<BEG> sets the value of the includesystemindexes property <END>
<BEG> the synthetic objects configuration <END>
<BEG> sets the value of the integerdisplaywidths property <END>
<BEG> the defining comment on the embeddable type <END>
<BEG> sequence flags should be generated and used <END>
<BEG> sets the value of the nullableannotation property <END>
<BEG> sets the value of the pojosaskotlindataclasses property <END>
<BEG> workaround for kotlin generating <code>setx <code> setters instead of <code>setisx <code> in byte code for mutable properties called <code>isx<code> <END>
<BEG> sets the value of the commentsonembeddables property <END>
<BEG> this enum matcher applies to all unqualified or qualified enum names matched by this expression if left empty, this matcher applies to all enums <END>
<BEG> a regular expression matching all tables on which to apply this synthetic primary key <END>
<BEG> the defining comment on the view <END>
<BEG> the java cryptography architecture provider context to be used for operations that do not directly involve the key supplied by the caller <END>
<BEG> <p> skip all claims validation <END>
<BEG> indicates whether or not the issuer iss claim is required and optionally what the expected values can be <END>
<BEG> set the terminal mode <END>
<BEG> returns the name of this identity <END>
<BEG> instantiates the <code>session<code> object with <code>username<code> and <code>host<code> <END>
<BEG> instantiates the <code>session<code> object with given <code>username<code>, <code>host<code> and <code>port<code> <END>
<BEG> after the body evaluation: do not reevaluate and continue with the page <END>
<BEG> get the taginfo for this class <END>
<BEG> release any data kept by this instance for validation purposes <END>
<BEG> associate a value with a string key <END>
<BEG> add a speed test listener to list <END>
<BEG> get socket timeout in milliseconds 0 if no timeout not defined <END>
<BEG> get the computation method <END>
<BEG> get download setup time value <END>
<BEG> retrieve upload storage type ram or rom <END>
<BEG> generate random byte array <END>
<BEG> generate a random file name for file ftp upload <END>
<BEG> returns the unoriented smallest angle between two vectors <END>
<BEG> returns whether an angle must turn clockwise or counterclockwise to overlap another angle <END>
<BEG> determines whether a point lies in the interior, on the boundary, or in the exterior of a ring the ring may be oriented in either direction <END>
<BEG> tests whether an intersection is proper <END>
<BEG> gets the length of the minimum diameter of the input geometry <END>
<BEG> adds a collection of geometries to be processed may be called multiple times <END>
<BEG> adds an edge between the coordinates orig and dest to this graph <END>
<BEG> returns the coordinates in this collection <END>
<BEG> compare two <code>double<code>s, allowing for nan values <END>
<BEG> returns the <code>envelope<code>s minimum y-value min y &gt; max y <END>
<BEG> enlarges this <code>envelope<code> so that it contains the <code>other<code> envelope <END>
<BEG> translates this envelope by given amounts in the x and y direction <END>
<BEG> check if the point <code>p<code> intersects lies inside the region of this <code>envelope<code> <END>
<BEG> gets a hash code for the geometry <END>
<BEG> tests if each of the actual dimension symbols in a matrix string satisfies the corresponding required dimension symbol in a pattern string <END>
<BEG> returns <code>true<code> if this <code>intersectionmatrix<code> is <code>tff<code> or <code>tff<code> or <code>tff<code> or <code>tff<code> <END>
<BEG> transposes this intersectionmatrix <END>
<BEG> computes the perpendicular distance between the infinite line defined by this line segment and a point <END>
<BEG> gets the type of this precision model <END>
<BEG> returns the external representation of <code>internal<code> <END>
<BEG> tests whether any representative of the target geometry intersects the test geometry <END>
<BEG> tests whether this preparedpolygon <tt>covers<tt> a given geometry <END>
<BEG> computes the centroid centre of mass of a triangle this is also the <END>
<BEG> computes the signed 2d area of this triangle the area value is positive if <END>
<BEG> creates a transformation for a scaling relative to the origin <END>
<BEG> gets an array containing the entries of the transformation matrix <END>
<BEG> updates the value of this transformation to that of a rotation around a given point composed with the current value, with the sin and cos of the rotation angle specified directly <END>
<BEG> equals is defined to be: <p> e1 equals e2 <b>iff<b> the coordinates of e1 are the same or the reverse of the coordinates in e2 <END>
<BEG> returns the list of directededges that make up this edgering <END>
<BEG> events are ordered first by their x-value, and then by their eventtype <END>
<BEG> returns the edgeend which has edge e as its base edge md 18 feb 2002 - this should return a pair of edges <END>
<BEG> returns the edge which starts at p0 and whose first segment is parallel to p1 <END>
<BEG> returns the quadrant of a directed line segment specified as x and y displacements, which cannot both be 0 <END>
<BEG> returns true if the given quadrant is 0 or 1 <END>
<BEG> returns the right node of the tree <END>
<BEG> tests whether more than one point with this value have been inserted up to the tolerance <END>
<BEG> performs a range search of the points in the index and visits all nodes found <END>
<BEG> finds the two nearest items in the tree, <END>
<BEG> gets the geometry parsed by this handler <END>
<BEG> sets a tag string which is prefixed to every emitted text line <END>
<BEG> converts a hexadecimal string to a byte array <END>
<BEG> snaps the value of this location to <END>
<BEG> gets the segment fraction for this location <END>
<BEG> md - this algorithm has been extracted into a class because it is intended to validate that the subline truly is a subline, and also to use the internal vertex information to unambiguously locate the subline <END>
<BEG> tests whether this value is greater than another <tt>doubledouble<tt> value <END>
<BEG> tests whether this value is greater than or equals to another <tt>doubledouble<tt> value <END>
<BEG> gets a list of all intersections found <END>
<BEG> sets whether intersection points are recorded <END>
<BEG> sets whether only end segments should be tested for interior intersection <END>
<BEG> an interior intersection is an intersection which is in the interior of some segment <END>
<BEG> sets the maximum number of noding iterations performed before the noding is aborted <END>
<BEG> tests whether a non-proper intersection was found <END>
<BEG> sets the segmentintersector to use with this noder <END>
<BEG> sets the number of line segments used to approximate an angle fillet <END>
<BEG> creates the subgraph consisting of all edges reachable from this node <END>
<BEG> compute the distance between the nearest points of two geometries <END>
<BEG> for all nodes in this edgering, link the directededges at the node to form minimaledgerings <END>
<BEG> gets the shell for this ring the shell is the ring itself if it is not a hole, otherwise its parent shell <END>
<BEG> gets the list of polygons formed by the polygonization <END>
<BEG> gets the list of lines forming invalid rings found during polygonization <END>
<BEG> computes the validity of the geometry, and returns <tt>true<tt> if it is valid <END>
<BEG> gets the user-defined data for this component <END>
<BEG> returns the nodes in this nodemap, sorted in ascending order by angle with the positive x-axis <END>
<BEG> always reports that the geometry has changed <END>
<BEG> sets whether the reduction will result in collapsed components being removed completely, or simply being collapsed to an invalid geometry of the same type <END>
<BEG> sets whether the precision reduction will be done in pointwise fashion only <END>
<BEG> sets the fraction of the grid cell side which will be treated as a gutter, in which no points will be created <END>
<BEG> controls whether simplified polygons will be fixed to have valid topology <END>
<BEG> gets the <tt>constraintvertexfactory<tt> used to create new constraint vertices at split points <END>
<BEG> gets the convex hull of all the sites in the triangulation, including constraint vertices <END>
<BEG> gets the next cw edge around from the origin of this edge <END>
<BEG> gets the length of the geometry of this quadedge <END>
<BEG> tests whether a quadedge is an edge incident on a frame triangle vertex <END>
<BEG> gets the vertices for this triangle <END>
<BEG> computes the value of the ratio of the circumradius to shortest edge if smaller than some <END>
<BEG> gets the external data associated with this segment <END>
<BEG> determines whether two segments are topologically equal <END>
<BEG> computes the intersection point between this segment and another one <END>
<BEG> returns the result of the filtering <END>
<BEG> public static void println string str { if ! debugon return; debug instanceprint str ; <END>
<BEG> sets the location of the shape by specifying the centre of the shape's bounding box <END>
<BEG> test if the priority queue is logically empty <END>
<BEG> returns an throwable's stack trace <END>
<BEG> returns the index of the minimum coordinate of a part of <END>
<BEG> tests if this matrix matches <ul> <li><tt>[ttt]<tt> for two points or two surfaces <li><tt>[1tt]<tt> for two curves <ul> <END>
<BEG> visits an item <END>
<BEG> computes the maximum distance between any two items in the pair of nodes <END>
<BEG> computes a vector having identical direction but normalized to have length 1 <END>
<BEG> gets the width of the hot pixel in the original coordinate system <END>
<BEG> creates an elevation model from two geometries which may be null <END>
<BEG> gets the index of an input which is an area, if one exists <END>
<BEG> reduces the precision of a geometry by rounding and snapping it to the <END>
<BEG> only shells can have outer holes <END>
<BEG> tests whether a geometry is simple <END>
<BEG> returns a int array containing a copy of the values in this list <END>
<BEG> tells this generator to produce values with a length within a specified minimum andor maximum, inclusive, chosen with uniform distribution <END>
<BEG> create a bytebuffer that uses a provided off-heap memory region instead of allocating a new one <END>
<BEG> converts an int value between endian systems <END>
<BEG> place a copy of the value counts accumulated since the last interval histogram <END>
<BEG> notify listeners about a pause <END>
<BEG> creates a hard link from source to target <END>
<BEG> factory method to create a class to wrap a new abort operation to the graph <END>
<BEG> factory method to create a class to wrap a new accumulatornumaccumulated operation to the graph <END>
<BEG> factory method to create a class to wrap a new allcandidatesampler operation to the graph <END>
<BEG> a batch_size num_true matrix, representing the number of times each candidate is expected to occur in a batch of sampled candidates if unique=true, then this is a probability <END>
<BEG> factory method to create a class to wrap a new any operation to the graph <END>
<BEG> = same as ref returned as a convenience for operations that want <END>
<BEG> factory method to create a class to wrap a new atan2 operation to the graph <END>
<BEG> factory method to create a class to wrap a new audiosummary operation to the graph <END>
<BEG> 4-d gradients w r t the input of `avg_pool` <END>
<BEG> the number of incomplete elements i e those with some of their value <END>
<BEG> factory method to create a class to wrap a new batchmatrixsetdiag operation to the graph <END>
<BEG> factory method to create a class to wrap a new batchmatrixsolvels operation to the graph <END>
<BEG> 4-d with shape `[batch, height, width, depth]`, where: <p> height = height_pad - crop_top - crop_bottom width = width_pad - crop_left - crop_right <p> the attr `block_size` must be greater than one it indicates the block size <END>
<BEG> a list of rank 2 tensors indicating the contribution of the left nodes when branching from parent nodes given by the tensor element in the output node_ids_list to the left direction by the given threshold for each feature this value will be used to make the left node value by adding to the parent node value second dimension size is 1 for 1-dimensional logits, but would be larger for multi-class problems see above for details like shapes and sizes <END>
<BEG> output rank 2 tensor containing logits for each example <END>
<BEG> same shape with 'input', each value of input replaced with bucket index <END>
<BEG> factory method to create a class to wrap a new cholesky operation to the graph <END>
<BEG> factory method to create a class to wrap a new collectivebcastsend operation to the graph <END>
<BEG> factory method to create a class to wrap a new conv3dbackpropinput operation to the graph <END>
<BEG> factory method to create a class to wrap a new cos operation to the graph <END>
<BEG> factory method to create a class to wrap a new cropandresizegradboxes operation to the graph <END>
<BEG> a 2-d tensor of shape `[num_boxes, 4]` <END>
<BEG> a 4-d tensor of shape `[batch, image_height, image_width, depth]` <END>
<BEG> factory method to create a class to wrap a new ctcloss operation to the graph <END>
<BEG> factory method to create a class to wrap a new cudnnrnn operation to the graph <END>
<BEG> factory method to create a class to wrap a new cudnnrnnv2 operation to the graph <END>
<BEG> factory method to create a class to wrap a new dataformatdimmap operation to the graph <END>
<BEG> factory method to create a class to wrap a new decodecompressed operation to the graph <END>
<BEG> each string is a binary example protocol buffer corresponding to the respective element of `json_examples` <END>
<BEG> tensor of int32 with shape `[batch_shape, len field_names ]` <END>
<BEG> 2-d with shape `[length, channels]` <END>
<BEG> 4-d with shape according to `data_format` for example, if <END>
<BEG> factory method to create a class to wrap a new destroyresourceop operation to the graph <END>
<BEG> factory method to create a class to wrap a new divnonan operation to the graph <END>
<BEG> 4-d with the same shape as `images` the batch of input images with <END>
<BEG> the gradients: `gradients outputs + 1 ` if outputs < 0, `gradients` otherwise <END>
<BEG> factory method to create a class to wrap a new encodebase64 operation to the graph <END>
<BEG> factory method to create a class to wrap a new encodejpeg operation to the graph <END>
<BEG> contains the same data as `input`, but its shape has an additional dimension of size 1 added <END>
<BEG> factory method to create a class to wrap a new experimentaliteratorgetdevice operation to the graph <END>
<BEG> factory method to create a class to wrap a new experimentalunbatchdataset operation to the graph <END>
<BEG> 1-d the image shape with format [height, width, channels] <END>
<BEG> backpropagated gradients w r t min parameter, shape `[d]`: <END>
<BEG> backpropagated gradients w r t max parameter, shape `[d]`: <END>
<BEG> factory method to create a class to wrap a new flushsummarywriter operation to the graph <END>
<BEG> unused placeholder to match the variance input in fusedbatchnorm <END>
<BEG> the tensor for the given handle <END>
<BEG> factory method to create a class to wrap a new histogramfixedwidth operation to the graph, using default output types <END>
<BEG> factory method to create a class to wrap a new importevent operation to the graph <END>
<BEG> factory method to create a class to wrap a new irfft operation to the graph <END>
<BEG> factory method to create a class to wrap a new isboostedtreesensembleinitialized operation to the graph <END>
<BEG> factory method to create a class to wrap a new iteratorfromstringhandle operation to the graph <END>
<BEG> factory method to create a class to wrap a new iteratorgetnext operation to the graph <END>
<BEG> factory method to create a class to wrap a new iteratorv2 operation to the graph <END>
<BEG> `gradients features > 0 + alpha gradients featurs <= 0 ` <END>
<BEG> factory method to create a class to wrap a new lessequal operation to the graph <END>
<BEG> factory method to create a class to wrap a new logmatrixdeterminant operation to the graph <END>
<BEG> a `tensor` with the same shape as `values` it contains the first scalar index <END>
<BEG> factory method to create a class to wrap a new mapclear operation to the graph <END>
<BEG> shape is `[ ]` <END>
<BEG> rank `k+1`, with `output shape = input shape` <END>
<BEG> factory method to create a class to wrap a new maximum operation to the graph <END>
<BEG> gradients w r t the input of `max_pool` <END>
<BEG> factory method to create a class to wrap a new maxpoolv2 operation to the graph <END>
<BEG> factory method to create a class to wrap a new merge operation to the graph <END>
<BEG> factory method to create a class to wrap a new mergesummary operation to the graph <END>
<BEG> factory method to create a class to wrap a new modeldataset operation to the graph <END>
<BEG> factory method to create a class to wrap a new multideviceiteratorgetnextfromshard operation to the graph <END>
<BEG> factory method to create a class to wrap a new nonmaxsuppression operation to the graph <END>
<BEG> a 0-d integer tensor representing the number of valid elements in `selected_indices`, with the valid elements appearing first <END>
<BEG> factory method to create a class to wrap a new nonmaxsuppressionwithoverlaps operation to the graph <END>
<BEG> factory method to create a class to wrap a new paddingfifoqueue operation to the graph <END>
<BEG> factory method to create a class to wrap a new parseexample operation to the graph <END>
<BEG> factory method to create a class to wrap a new priorityqueue operation to the graph <END>
<BEG> factory method to create a class to wrap a new quantizeanddequantizev2 operation to the graph <END>
<BEG> factory method to create a class to wrap a new quantizedconcat operation to the graph <END>
<BEG> the float value that the lowest quantized value represents <END>
<BEG> this value is copied from input_max <END>
<BEG> the quantized data produced from the float input <END>
<BEG> factory method to create a class to wrap a new randomcrop operation to the graph <END>
<BEG> factory method to create a class to wrap a new readerserializestate operation to the graph <END>
<BEG> factory method to create a class to wrap a new readfile operation to the graph <END>
<BEG> factory method to create a class to wrap a new reciprocal operation to the graph <END>
<BEG> factory method to create a class to wrap a new refmerge operation to the graph <END>
<BEG> factory method to create a class to wrap a new resizearea operation to the graph <END>
<BEG> a complex64 tensor of the same rank as `input` the inner-most 3 <END>
<BEG> factory method to create a class to wrap a new rint operation to the graph <END>
<BEG> 1-d, containing `[offset_height, offset_width, 0]` provide as input to <END>
<BEG> scalar serialized `summary` protocol buffer <END>
<BEG> eigenvalues shape is `[n]` <END>
<BEG> factory method to create a class to wrap a new sigmoid operation to the graph <END>
<BEG> factory method to create a class to wrap a new sigmoidgrad operation to the graph <END>
<BEG> frequencies of words sorted in the non-ascending order <END>
<BEG> factory method to create a class to wrap a new sparseaccumulatorapplygradient operation to the graph <END>
<BEG> shape of the average of the accumulated sparse gradients <END>
<BEG> factory method to create a class to wrap a new sparsedensecwisediv operation to the graph <END>
<BEG> factory method to create a class to wrap a new sparsereducemax operation to the graph <END>
<BEG> tensors whose shape matches that of `value` except along `axis`, where their sizes are `size_splits[i]` <END>
<BEG> 1-d the `shape` of the minibatch `sparsetensor` <END>
<BEG> factory method to create a class to wrap a new temporaryvariable operation to the graph <END>
<BEG> a vector of the row sizes of the original t elements in the value output in the example above, this would be the values: <END>
<BEG> factory method to create a class to wrap a new tensorarraypack operation to the graph <END>
<BEG> factory method to create a class to wrap a new tensorarrayunpack operation to the graph <END>
<BEG> factory method to create a class to wrap a new tensorforesttreepredict operation to the graph <END>
<BEG> the indices of `values` within the last dimension of `input` <END>
<BEG> factory method to create a class to wrap a new tryrpc operation to the graph <END>
<BEG> the 1-d tensor of strings encoded from the provided unicode codepoints <END>
<BEG> factory method to create a class to wrap a new unwrapdatasetvariant operation to the graph <END>
<BEG> returns the full name of the operation <END>
<BEG> stops an in-process tensorflow server <END>
<BEG> write the tensor data into the given buffer <END>
<BEG> constuct a fatal log event <END>
<BEG> generates a warning message on the stated annotation value, which must have an array initializer <END>
<BEG> set the node object that wraps the internal compilation unit node <END>
<BEG> buildtree implementation that uses reflection to find all child nodes by way of inspecting the fields <END>
<BEG> adds the stated node as a direct child of this node <END>
<BEG> returns an iterator of instances that, at least according to the spi discovery file, are implementations of the stated class <END>
<BEG> returns an iterator of class objects that, at least according to the spi discovery file, are implementations of the stated class <END>
<BEG> get the current lombok version <END>
<BEG> print a block <END>
<BEG> this handler is a handler for the given annotation; you don't normally need to override this class <END>
<BEG> creates a new handlerlibrary errors will be reported to the eclipse error log <END>
<BEG> returns the name of this location; generally the path to the eclipse executable <END>
<BEG> stem a prefix off an arabic word <END>
<BEG> add a pattern to the tree mainly, to be used by <END>
<BEG> creates a stopword set from the given stopword list <END>
<BEG> looks up hunspellaffix suffixes that have an append that matches the string created from the given char array, offset and length <END>
<BEG> returns the flags associated with the word <END>
<BEG> creates a token stream that tokenizes all the text in the given reader; this implementation forwards to <code>tokenstream string, reader, string <code> and is less efficient than <code>tokenstream string, reader, string <code> <END>
<BEG> split the input using configured pattern <END>
<BEG> reverses the given input buffer in-place <END>
<BEG> sets the string to use when joining adjacent tokens to form a shingle <END>
<BEG> converts a sequence of java characters to a sequence of unicode code points <END>
<BEG> returns the analyzer's stopword set or an empty set if the analyzer has no stopwords <END>
<BEG> returns a builder for custom analyzers that loads all resources from the given file system base directory place, e g , stop word files there <END>
<BEG> returns the list of char filters that are used in this analyzer <END>
<BEG> <code>teesinktokenfilter<code> passes all tokens to the added sinks when itself is consumed to be sure that all <END>
<BEG> returns a tokenstream suitable for <code>fieldname<code>, tokenizing the contents of <code>reader<code> <END>
<BEG> wraps alters the given tokenstreamcomponents, taken from the wrapped analyzer, to form new components it is through this method that new <END>
<BEG> expert: set a new reader on the tokenizer typically, an <END>
<BEG> reads index file header <END>
<BEG> writes the index file trailer <END>
<BEG> writes a codec header, which records both a string to identify the file and a version number this header can <END>
<BEG> returns the payload length of the payload stored just before <END>
<BEG> sets the value of <code>bit<code> to true, and returns true if bit was already set <END>
<BEG> invert all bits <END>
<BEG> how many sub-readers we are merging <END>
<BEG> default merge impl: append documents, mapping around deletes <END>
<BEG> called after a term and all its positions have been added <END>
<BEG> decompress the byte array previously returned by compress referenced by the provided bytesref <END>
<BEG> decompress the byte array referenced by the provided bytesref previously returned by compressstring back into a string <END>
<BEG> set to <code>true<code> if this field's indexed form should be also stored into term vectors <END>
<BEG> sets the indexing options for the field: <END>
<BEG> numerictype: if non-null then the field's value will be indexed <END>
<BEG> precision step for numeric field <END>
<BEG> return the priority that merge threads run at by <END>
<BEG> returns a indexreader reading the index in the given directory <END>
<BEG> if the indexcommit differs from what the provided reader is searching, open and return a new reader; else, return null <END>
<BEG> returns a sortedsetdocvalues view of this instance <END>
<BEG> returns true if norms are explicitly omitted for this field <END>
<BEG> returns true if this field actually has any norms <END>
<BEG> returns true if any fields have docvalues <END>
<BEG> get end offset of the last processed term <END>
<BEG> get boost value this is the cumulative product of <END>
<BEG> returns total number of docs in this index, including docs not yet flushed still in the ram buffer , not counting deletions <END>
<BEG> returns total number of docs in this index, including docs not yet flushed still in the ram buffer , and including deletions <b>note:<b> buffered deletions <END>
<BEG> <p>commits all pending changes added & deleted documents, segment merges, added indexes, etc to the index, and syncs all referenced <END>
<BEG> expert: return the number of documents currently buffered in ram <END>
<BEG> sets the max number of simultaneous threads that may be indexing documents at once in indexwriter values &lt; 1 are invalid and if passed <END>
<BEG> by default, indexwriter does not pool the segmentreaders it must open for deletions and merging, unless a near-real-time reader has been <END>
<BEG> returns the largest segment measured by total byte size of the segment's files, in mb that may be merged with other segments during forcemerge <END>
<BEG> returns a numericdocvalues for a reader's norms potentially merging on-the-fly <END>
<BEG> returns a sortedsetdocvalues for a reader's docvalues potentially doing extremely slow things <END>
<BEG> returns true if there are any field updates for the segment in this commit <END>
<BEG> returns the number of deleted docs in the segment <END>
<BEG> add these files to the set of files written for this segment <END>
<BEG> process a string field <END>
<BEG> process a int numeric field <END>
<BEG> compares two terms, returning a negative integer if this term belongs before the argument, zero if this term is equal to the argument, and a positive integer if this term belongs after the argument <END>
<BEG> attempts to seek to the exact term, returning true if the term is found if this returns false, the <END>
<BEG> returns the current maxmergeatonceexplicit setting <END>
<BEG> returns if the given segment should be upgraded the default implementation <END>
<BEG> specifies a minimum number of the optional booleanclauses which must be satisfied <END>
<BEG> gets the minimum number of the optional booleanclauses which must be satisfied <END>
<BEG> returns the field name for this filter <END>
<BEG> returns the non-fuzzy prefix length this is the number of characters at the start <END>
<BEG> expert: returns a default similarity instance <END>
<BEG> sugar for <code> getindexreader document docid <code> <END>
<BEG> expert: low-level implementation method returns an explanation that describes how <code>doc<code> scored against <code>weight<code> <END>
<BEG> returns the inner query <END>
<BEG> called after close , so subclass can free any resources <END>
<BEG> adds a listener, to be notified when a reference is refreshedswapped <END>
<BEG> returns an explanation for the score <END>
<BEG> sets the document frequency <END>
<BEG> computes the raw normalization value this basic implementation returns <END>
<BEG> explains the score returns the name of the model only, since <END>
<BEG> returns an explanation for the normalized term frequency <END>
<BEG> factory method to return a custom stats object <END>
<BEG> encodes the length to a byte via smallfloat <END>
<BEG> return the spanquery whose matches are filtered <END>
<BEG> return the secondary directory <END>
<BEG> set the file length by default, this method does <END>
<BEG> attempts to obtain an exclusive lock within amount of <END>
<BEG> get the prefix in use for all locks created in this lockfactory <END>
<BEG> creates an indexinput for the file with the given name <END>
<BEG> expert: allocate a new buffer <END>
<BEG> restores this state by copying the values of all attribute implementations that this state contains into the attributes implementations of the targetstream <END>
<BEG> returns a string consisting of the class's simple name, the hex representation of the identity hash code, and the current reflection of all attributes <END>
<BEG> reduces this automaton an automaton is reduced by combining overlapping <END>
<BEG> returns a sorted array of transitions for each state and sets state numbers <END>
<BEG> returns <a href= http:www research att comswtoolsgraphviz <END>
<BEG> returns true if the given string is accepted by this automaton <END>
<BEG> returns acceptance status <END>
<BEG> reads bytes bytes out of the pool starting at the given offset with the given length into the given byte array at offset <tt>off<tt> <END>
<BEG> calculates the hash code as required by termshash during indexing <END>
<BEG> copies the given array into this charsref <END>
<BEG> loads a specific directory implementation <END>
<BEG> quick and dirty convenience method <END>
<BEG> this = this and not other <END>
<BEG> absolute writebytes without changing the current position note: this cannot grow the bytes, so you <END>
<BEG> copy one file's contents to another file the target will be overwritten <END>
<BEG> returns prefix coded bits after reducing the precision by <code>shift<code> bits <END>
<BEG> returns the popcount or cardinality of a and not b or intersection a, not b <END>
<BEG> return an iterator over the values of this buffer <END>
<BEG> the value at the current decoding index <END>
<BEG> read this many bytes from in <END>
<BEG> creates a boolean query from the query text <END>
<BEG> returns true if position increments are enabled <END>
<BEG> returns the size in bytes of the short[] object <END>
<BEG> returns the number of key-value mappings in this map this result is a snapshot, <END>
<BEG> if the underlying token stream was consumed and cached <END>
<BEG> resets the attributes <END>
<BEG> if true, any final offset gaps will result in adding a position hole <END>
<BEG> writes a codec header for an index file, which records both a string to identify the format of the file, a version number, and data to identify the file instance id and auxiliary suffix such as generation <END>
<BEG> reset to the same state it was in after creation <END>
<BEG> pack a float point into a bytesref <END>
<BEG> create a query for matching an exact float value <END>
<BEG> create a query for matching a bounding box <END>
<BEG> create a query to find all cartesian shapes that intersect a provided polygon or array of polygons <END>
<BEG> uses orient method to compute whether two line segments cross; boundaries included - returning true for lines that terminate on each other <END>
<BEG> returns true if the point is contained within this polygon <END>
<BEG> determines whether two line segments intersect <END>
<BEG> get the per-merge io throttle rate for forced merges <END>
<BEG> returns a description of the file that was corrupted <END>
<BEG> construct this from the provided subs, specifying the maximum sub count <END>
<BEG> returns a single-valued view of the sortedsetdocvalues, if it was previously <END>
<BEG> returns a single-valued view of the sortednumericdocvalues, if it was previously <END>
<BEG> return point data dimension count <END>
<BEG> returns indexoptions for the field, or indexoptions none if the field is not indexed <END>
<BEG> returns a description of the file that was too old <END>
<BEG> returns true if this index has deletions including buffered deletions note that this will return true <END>
<BEG> returns true if there may be changes that have not been committed there are cases where this may return true <END>
<BEG> tests should override this to enable test points default is <code>false<code> <END>
<BEG> return the compatibility version to use for this index <END>
<BEG> builds a string representation of the given segmentcommitinfo instances <END>
<BEG> re-use and reset this instance on the provided slices <END>
<BEG> returns the number of pending deletes that are not written to disk <END>
<BEG> return the cumulated number of docs that have points across all leaves <END>
<BEG> return the minimum packed values across all leaves of the given <END>
<BEG> returns a snapshot of the live docs <END>
<BEG> return the sort order of this segment, or null if the index has no sort <END>
<BEG> create a conjunction over the provided docidsetiterators note that the <END>
<BEG> an explanation of the value for the named document <END>
<BEG> creates a doublevaluessource that wraps a float-valued field <END>
<BEG> create a doublevaluessource that returns the score of a particular query <END>
<BEG> indicates whether or not this explanation models a match <END>
<BEG> gets the boost of the current term <END>
<BEG> expert: callback when a query is added to this cache <END>
<BEG> returns the field this query applies to <END>
<BEG> returns the list of terms in this phrase <END>
<BEG> the number of documents this term occurs in <END>
<BEG> returns a new topdocs, containing topn results across <END>
<BEG> returns a new deterministic automaton that accepts all binary terms <END>
<BEG> appends the specified character to the specified state, returning a new state <END>
<BEG> how many transitions this automaton has <END>
<BEG> initialize the provided transition to iterate through all transitions <END>
<BEG> returns true if the given automaton accepts all strings for the specified minmax range of the alphabet the automaton must be minimized <END>
<BEG> return an approximation of the cardinality of this set some <END>
<BEG> assert that the current doc is -1 <END>
<BEG> does in-place or of the bits provided by the iterator the state of the <END>
<BEG> replace the content of this buffer with utf-8 encoded bytes that would represent the provided text <END>
<BEG> creates a new specific fsdirectory instance <END>
<BEG> enable or disable graph tokenstream processing enabled by default <END>
<BEG> returns the size in bytes of the string[] object <END>
<BEG> return the memory footprint of this class in bytes <END>
<BEG> returns the haversine distance in meters between two points <END>
<BEG> convert to radians <END>
<BEG> specifies how groups are sorted <END>
<BEG> specifies the offset for documents inside a group <END>
<BEG> specifies the number of documents to return inside a group from the specified groupdocsoffset <END>
<BEG> controls whether or not multi-term queries are expanded <END>
<BEG> a threshold of number of characters to analyze when a tokenstream based on <END>
<BEG> end offset of this passage <END>
<BEG> return the list of weightedphraseinfo <END>
<BEG> check that the given index is good to use for block joins <END>
<BEG> sets the default function variables used by lengthnorm when no field specific variables have been set <END>
<BEG> implemented as: <code> 1sqrt steepness abs x-min + abs x-max - max-min + 1 <code> <END>
<BEG> the field for which these stats were computed <END>
<BEG> get the minimal similarity for fuzzy queries <END>
<BEG> builds a new prefixquery instance <END>
<BEG> builds some kind of object from a query tree each node in the query tree <END>
<BEG> returns the a list with all querytext elements <END>
<BEG> this method is called every time a child is processed <END>
<BEG> sets the text parser that will be used to parse the query string, it cannot be <code>null<code> <END>
<BEG> returns the query builder used to build a object from the query node tree <END>
<BEG> returns the text parser used to build a query node tree from a query string the default text parser instance returned by this method is a <END>
<BEG> sets the field associated with this node <END>
<BEG> sets the boolean operator of the queryparser in default mode <END>
<BEG> by default, it uses <END>
<BEG> append the weight part of a query <END>
<BEG> changes the values of the field <END>
<BEG> set to false to not use optimized search predicates that avoid checking the geometry sometimes only useful for <END>
<BEG> returns the number of sub-cells beneath the given unitnrshape <END>
<BEG> get max levels for this spatial tree <END>
<BEG> gets the error distance that specifies how precise the query shape is this <END>
<BEG> check if the arguments make sense -- throw an exception if not <END>
<BEG> a measure of acceptable error of the shape as a fraction this effectively <END>
<BEG> create a query for matching a box <END>
<BEG> determine the relationship between this area and the provided shape's edgepoints <END>
<BEG> add a point to the path <END>
<BEG> compute the shape's <em>delta<em> distance given a point this is defined as the distance that someone traveling <END>
<BEG> compute an arc distance between two points <END>
<BEG> create a geoconvexpolygon using the specified points the polygon must have <END>
<BEG> create a geopolygon using the specified points and holes, using order to determine siding of the polygon much like esri, this method uses clockwise to indicate the space <END>
<BEG> compute normal distance from plane to a vector <END>
<BEG> does this planet model describe a sphere? <END>
<BEG> check if point is outside surface <END>
<BEG> do a dot product <END>
<BEG> rotate vector counter-clockwise in x-z by an angle, expressed as sin and cos <END>
<BEG> compute the normal perpendicular distance to a vector described by a vector taken from the origin <END>
<BEG> compute whether two vectors are parallel <END>
<BEG> return true if maxz is as large as the planet model allows <END>
<BEG> create a xyzsolid of the right kind given x,y,z bounds <END>
<BEG> set the minimal accuracy required default: 0 5f from a stringdistance <END>
<BEG> get the current comparator in use <END>
<BEG> whether or not to ignore case <END>
<BEG> returns true if a document with <code>docid<code> is accepted, false if the docid maps to a deleted document or has been filtered out <END>
<BEG> returns the bucket count discretization thresholds <END>
<BEG> reads a binary mapping file <END>
<BEG> accuracy v s randomly classifying all samples <END>
<BEG> standard deviation of normalized producer accuracy not a standard score <END>
<BEG> finds all distinct values of a given attribute <END>
<BEG> computes the sum of the values <END>
<BEG> reads a node[] from a datainput <END>
<BEG> decision tree to string <END>
<BEG> set the training method <END>
<BEG> get the weights between layer layeridx and layeridx + 1 <END>
<BEG> update the weight matrices with given matrices <END>
<BEG> set the weight matrices <END>
<BEG> train the neural network incrementally with given training instance <END>
<BEG> feeds forward from input to hidden unit <END>
<BEG> computes the total weight of the points in the given vector iterable <END>
<BEG> private void inferdocuments double convergence, int maxiter, boolean recalculate { for int docid = 0; docid < corpusweights numrows ; docid++ { <END>
<BEG> returns an iterable of centroids from an iterable of vectorwritables by creating a new centroid containing a randomaccesssparsevector as a delegate for each vectorwritable <END>
<BEG> returns a default command line option for specifying a lucene analyzer class <END>
<BEG> returns a default command line option for specifying the clustering threshold value used by dirichlet and fuzzykmeans <END>
<BEG> returns a default command line option for specification of outlier threshold value used for <END>
<BEG> returns all the parameters in mapped form <END>
<BEG> returns an iterable over the attributes in the tree, sorted by frequency high to low <END>
<BEG> setting controlling whether to compute v matrix of low-rank ssvd <END>
<BEG> sometimes, if requested a blocks become larger than a split, we may need to use that to ensure at least k+p rows of a get into a split this is <END>
<BEG> hash a string and an integer into the range [0 numfeatures-1] <END>
<BEG> adds a value to a vector unsupported <END>
<BEG> collects the results of a function applied to each row of a matrix <END>
<BEG> provides a view of the diagonal of a matrix <END>
<BEG> returns sqrt a^2 + b^2 without underoverflow <END>
<BEG> ensures that the specified array cannot hold more than <tt>maxcapacity<tt> elements an application can use this <END>
<BEG> assign the other vector values to the column of the receiver <END>
<BEG> constructs a function that returns <tt>a b<tt> <tt>a<tt> is a variable, <tt>b<tt> is fixed <END>
<BEG> constructs a function that returns <tt>a &gt; b<tt> <tt>a<tt> is a <END>
<BEG> constructs a function that returns the number rounded to the given precision; <tt>math rint aprecision precision<tt> examples: <END>
<BEG> x + 0 c = x <END>
<BEG> x 0 = y only if y = 0 <END>
<BEG> returns the cumulative distribution function assuming a continous uniform distribution <END>
<BEG> sets the internal state <END>
<BEG> returns the incomplete gamma function; formerly named <tt>igamma<tt> <END>
<BEG> returns the complemented incomplete gamma function; formerly named <tt>igamc<tt> <END>
<BEG> returns the sum of the terms <tt>0<tt> through <tt>k<tt> of the negative binomial distribution <END>
<BEG> appends the specified list to the end of this list <END>
<BEG> inserts the specified element before the specified position into the receiver shifts the element currently at that <END>
<BEG> returns true if the receiver contains the specified element <END>
<BEG> returns a new list of the part of the receiver between <code>from<code>, inclusive, and <code>to<code>, inclusive <END>
<BEG> checks if the given range is within the contained array's bounds <END>
<BEG> inserts all elements of the specified collection before the specified position into the receiver shifts the <END>
<BEG> returns the elements currently stored, including invalid elements between size and capacity, if any <END>
<BEG> returns a list filled with all values contained in the receiver the returned list has a size that equals <END>
<BEG> check the map for a key if present, add an increment to the value if absent, <END>
<BEG> uniform [0,1 matrix generator function <END>
<BEG> this is sort of constant, but really it might resize the array <END>
<BEG> note: this implementation reuses the vector element instance for each call of next if you need to preserve the <END>
<BEG> chooses a new prime table capacity neither favoring shrinking nor growing, that approximately satisfies the invariant <tt>c minloadfactor <= size <= c maxloadfactor<tt> and has at least one free slot for the given size <END>
<BEG> return the eigenvector matrix <END>
<BEG> return the real parts of the eigenvalues <END>
<BEG> sorts some external data with quicksort <END>
<BEG> the best operation is the least expensive valid one <END>
<BEG> returns info about the arff content that was parsed <END>
<BEG> get matching headers <END>
<BEG> using the imap namespace command rfc 2342 , return a set of folders representing the user's namespaces <END>
<BEG> get the quotas for the named quota root <END>
<BEG> returns <code>true<code> if this is a imap4rev1 server <END>
<BEG> it is assumed that this method will never be called see equals <END>
<BEG> create an approximation for the given query the returned approximation <END>
<BEG> get the general family of the os to be used to activate the profile, such as <code>windows<code> or <code>unix<code> <END>
<BEG> set the name of the operating system to be used to activate the profile this must be an exact match <END>
<BEG> set the list of filter properties files that are used when filtering is enabled <END>
<BEG> set this element describes all of the classpath resources such as properties files associated with a project's unit tests <END>
<BEG> set url for the continuous integration system used by the project if it has a web interface <END>
<BEG> get the email address of the contributor <END>
<BEG> set the type of dependency this defaults to <END>
<BEG> get relocation information of the artifact if it has been moved to a new group id andor artifact id <END>
<BEG> get where to deploy snapshots of artifacts to if <END>
<BEG> set url for the issue management system used by the project <END>
<BEG> get a universally unique identifier for a project <END>
<BEG> get declares to which version of project descriptor this pom conforms <END>
<BEG> get this element describes various attributes of the organization to which the project belongs these attributes are <END>
<BEG> get the type of artifact this project produces, for example <code>jar<code> <code>war<code> <code>ear<code> <code>pom<code> <END>
<BEG> get the url to the project's homepage <END>
<BEG> set a universally unique identifier for a project <END>
<BEG> set this element describes all of the licenses for this project <END>
<BEG> get distribution information for a project that enables deployment of the site and artifacts to remote web servers and repositories respectively <END>
<BEG> set <b>deprecated<b> unused by maven <END>
<BEG> get the configuration of the reporting plugin <END>
<BEG> set multiple specifications of a set of reports, each having possibly different configuration this is the reporting parallel to <END>
<BEG> get whether to use this repository for downloading this type of artifact <END>
<BEG> get describe the resource target path for example, <END>
<BEG> get whether resources are filtered to replace tokens with parameterised values or not <END>
<BEG> get the url of the location where website is deployed, in the form <code>protocol:hostnamepath<code> <END>
<BEG> set specifies that this profile will be activated when this system property is specified <END>
<BEG> get the name of the file that should be missing to activate a profile <END>
<BEG> get the general family of the os to be used to activate a profile e g 'windows' <END>
<BEG> set the lists of the remote repositories for discovering plugins <END>
<BEG> set the lists of the remote repositories <END>
<BEG> get the url of the repository <END>
<BEG> set the type of layout this repository uses for locating and storing artifacts - can be legacy or default <END>
<BEG> set the groupid that is directory represents, if any <END>
<BEG> get display name for the plugin <END>
<BEG> get the optional name that describes the mirror <END>
<BEG> set the server id of the repository being mirrored, eg central this must not match the mirror id <END>
<BEG> get the proxy protocol <END>
<BEG> set the proxy user <END>
<BEG> get extra configuration for the transport layer <END>
<BEG> get the password used in conjunction with the username to authenticate <END>
<BEG> set the permissions for directories when they are created <END>
<BEG> the default clock to use <END>
<BEG> returns the rate in the given units of time <END>
<BEG> starts the reporter <END>
<BEG> concatenates a class name and elements to form a dotted name, eliding any null values or empty strings <END>
<BEG> returns the value at the 95th percentile in the distribution <END>
<BEG> produces an additional time series for each requested percentile this percentile <END>
<BEG> if the registry is closed, it will no longer accept new meters and any publishing activity will cease <END>
<BEG> truncate the string to the max length <END>
<BEG> publish at a minimum a histogram containing your defined service level objective slo boundaries <END>
<BEG> this will search for the next time within the next durationinmillis millisecond be aware that the duration is specified in millis, <END>
<BEG> registers a patch to watch <END>
<BEG> the interval to wait between checks <END>
<BEG> the string value of the given member <END>
<BEG> start building a new annotation existing value and retention policy <END>
<BEG> sets the value member to the given string[] values <END>
<BEG> sets the value member to the given boolean value <END>
<BEG> sets the value member to the given annotation class values <END>
<BEG> register the class for reflective instantiation at runtime, only if it is present <END>
<BEG> register class for runtime reflection without allowing reflective instantiation also register all fields, methods <END>
<BEG> searches resource loaders for one that supports the given path if found, return the resource url <END>
<BEG> sort the given array <END>
<BEG> <p>converts a uri to a class file reference to the class name<p> <END>
<BEG> perform a check on an argument <END>
<BEG> concatenate two byte arrays <END>
<BEG> produce a string representation of the given array <END>
<BEG> check whether the linked is contained within this linked deque <END>
<BEG> returns the last element of a collection <END>
<BEG> default value empty list <END>
<BEG> the cookies for this response <END>
<BEG> sets a proxy address <END>
<BEG> creates a nioeventloopgroup <END>
<BEG> the netty http response status <END>
<BEG> subclasses can override to customize publishers returned from message handlers <END>
<BEG> sets the allowed headers <END>
<BEG> sets the cors configuration <END>
<BEG> sets the file to be downloaded as an attachment <END>
<BEG> sets the accesslogger configuration <END>
<BEG> cookieselement for response <END>
<BEG> obtains the web socket url <END>
<BEG> obtains a stream of beans of the given type and qualifier <END>
<BEG> find an optional bean of the given type and qualifier <END>
<BEG> caches the result of provider in a thread safe manner <END>
<BEG> adds a message to the default locale <END>
<BEG> obtain the annotation mappers for the given annotation name <END>
<BEG> contributes defaults to the given target <END>
<BEG> sets which headers should be searched for a version <END>
<BEG> sets whether the ip address by used to register with the discovery server defaults to false <END>
<BEG> decodes the given json node <END>
<BEG> whether _embedded errors should always be serialized as list if set to false, _embedded errors <END>
<BEG> whether strings should be trimmed when deserializing if the resulting string is an empty string, <END>
<BEG> sets whether _embedded errors should always be serialized as list defaults to false <END>
<BEG> whether strings should be trimmed when deserializing defaults to false <END>
<BEG> should a retry attempt occur <END>
<BEG> executed after each test completes <END>
<BEG> value extractor for optional <END>
<BEG> <p> remove the element at the specified index from a <code>json<code> array and return that element <END>
<BEG> <p> remove the element at the specified index from a <code>json<code> array <END>
<BEG> <p> json-pad this object as an argument to a callback function <END>
<BEG> an answer that directly forwards the calls to the delegate <END>
<BEG> instance fields declared in the of the given instance <END>
<BEG> gets all unused stubbings for given set of mock objects, in order <END>
<BEG> the maximum time a connection can be used before it may be given away again <END>
<BEG> get a resource from the classpath <END>
<BEG> gets a url as a reader <END>
<BEG> sets the default fetch size <END>
<BEG> parses all the unprocessed statement nodes in the cache it is recommended <END>
<BEG> sets the configuration <END>
<BEG> configure the max number of items to be read <END>
<BEG> check mandatory properties <END>
<BEG> set whether enable lazy initialization for mapper bean <END>
<BEG> sets the objectfactory <END>
<BEG> mybatis plugin list <END>
<BEG> packages to search for type aliases <END>
<BEG> enables tcpfastopen on the server channel if the underlying os doesnt support tcp_fastopen setting this has no <END>
<BEG> returns the verification result <END>
<BEG> return defined xml version or null <END>
<BEG> return defined encoding or null <END>
<BEG> set the maximum number of message to write per eventloop run once this limit is <END>
<BEG> override this method for custom handling of unknown classes also see the writable interface <END>
<BEG> gets the last descendent in any evaluation tree this will the <END>
<BEG> adds a child to the list of children of this evaluation the <END>
<BEG> returns a unique descriptor string that includes the object's class and a unique integer identifier if fullyqualified is true then the class name will be fully qualified to include <END>
<BEG> sets the securitymanager that ognl uses to determine permissions for invoking methods <END>
<BEG> tries to create an instance of the given rawclass as a subclass of the given superclass <END>
<BEG> internal tag accessor <END>
<BEG> returns the lower 8 bytes of the trace-id as a long value, assuming little-endian order this <END>
<BEG> registers all standard cumulative views <END>
<BEG> registers all standard interval views <END>
<BEG> answer the given value, guaranteeing it to be neither <code>null<code> nor an empty string <END>
<BEG> allow clients to provide their own implementation of a filetreeiterator <END>
<BEG> get the list of files that where modified during checkout <END>
<BEG> include a reference to a commit <END>
<BEG> include a commit <END>
<BEG> the remote name used to keep track of the upstream repository for the clone operation if no remote name is set, the default value of <END>
<BEG> set the initial branch <END>
<BEG> get return code <END>
<BEG> whether fetch --force option is enabled <END>
<BEG> returs a command object used to apply a stashed commit <END>
<BEG> show only commits that affect any of the specified paths the path must <END>
<BEG> set a filter for the <code>logcommand<code> <END>
<BEG> reference to a commit to be merged with the current head <END>
<BEG> the remote uri or name used for the push operation if no remote is <END>
<BEG> the remote executable providing receive-pack service for pack transports <END>
<BEG> the name of the remote to remove <END>
<BEG> whether to restore the index state <END>
<BEG> set the reference to update with the stashed commit id if null, no reference is updated <p> <END>
<BEG> whether to ignore submodules <END>
<BEG> add repository-relative submodule path to initialize <END>
<BEG> add repository-relative submodule path to limit status reporting to <END>
<BEG> whether to fetch the submodules before we update them by default, this <END>
<BEG> set status callback for submodule clone operation <END>
<BEG> whether this is a forced update <END>
<BEG> if set to true the tag command may replace an existing tag object this <END>
<BEG> get all attributes <END>
<BEG> execute the generator in a blocking fashion until all data is ready <END>
<BEG> get first line of the source data that has been blamed for the current region <END>
<BEG> get the author that provided the specified line of the result <END>
<BEG> if rename detection is enabled <END>
<BEG> set the algorithm that constructs difference output <END>
<BEG> get if rename detection is enabled <END>
<BEG> should be called after having called one of the format methods <END>
<BEG> decode a region of the text into a string <END>
<BEG> determine heuristically whether the bytes contained in a stream represents binary as opposed to text content <END>
<BEG> create a new builder to update this cache <END>
<BEG> locate the position a path's entry is at in the index for details refer <END>
<BEG> locate the position a path's entry is at in the index <END>
<BEG> determine the next index position past all entries with the same name <END>
<BEG> get the dircacheentry for the current file <END>
<BEG> get the tree's objectid <END>
<BEG> get the tree's name within its parent <END>
<BEG> get the matching candidates or at least a subset of them <END>
<BEG> get the relative paths of the conflicting files <END>
<BEG> set the repository this event occurred on <END>
<BEG> get the name of the remote definition of the sub repo <END>
<BEG> return the recommendation for shallowness <END>
<BEG> check whether a 'native' i e script hook is installed in the <END>
<BEG> get how the replica participates in this ketch system <END>
<BEG> get name of the committed reftree graph <END>
<BEG> set the push certificate signing the references <END>
<BEG> get uri to contact the remote peer repository <END>
<BEG> returns the minimum wait delay before retrying a failure <END>
<BEG> returns the maximum wait delay before retrying a failure <END>
<BEG> get current state of the replica <END>
<BEG> quickly check if the cache contains block 0 of the given stream <END>
<BEG> add a pack to be compacted <END>
<BEG> get io statistics accumulated by this reader <END>
<BEG> wait until the lock file information differs from the old file <END>
<BEG> configure this index pack instance to keep an empty pack <END>
<BEG> get the ref name to be used for when locking a ref's log for rewriting <END>
<BEG> read unsigned int <END>
<BEG> estimate the size of an index for a given source <END>
<BEG> get delta base object to pack if object is going to be packed in delta representation and delta is specified as object to pack <END>
<BEG> whether this writer is producing a thin pack <END>
<BEG> add a pack index whose contents should be excluded from the result <END>
<BEG> whether the current reference was deleted <END>
<BEG> set the maximum update index for log entries that appear in the compacted reftable <END>
<BEG> add all of the tables, in the specified order <END>
<BEG> get the block size in bytes chosen for this file by the writer <END>
<BEG> set unprocessed commands as failed due to transaction aborted <END>
<BEG> get optional message explaining command failure <END>
<BEG> determine if the reference is likely to be a reftree <END>
<BEG> set the local index file that is caching checked out file status <END>
<BEG> read standard git environment variables and configure from those <END>
<BEG> add ceiling directories to the search list <END>
<BEG> create a repository matching the configuration in this builder <END>
<BEG> set an optional delay before the first output <END>
<BEG> add a parent onto the end of the parent list <END>
<BEG> get path of attributesfile <END>
<BEG> retrieves the config value of user signingkey <END>
<BEG> retrieves the config value of commit gpgsign <END>
<BEG> get list of files that are in conflict, corresponds to the keys of <END>
<BEG> convert an objectid into a hex string representation <END>
<BEG> compute digest to help compute an objectid <END>
<BEG> compute the name of an object, without inserting it <END>
<BEG> does the requested object exist in this database? <END>
<BEG> an index that can be used to speed up objectwalks <END>
<BEG> get the first line of the commit message of the commit the action will be performed on <END>
<BEG> compare two references by name <END>
<BEG> read a single reference <END>
<BEG> set the new value the ref will update to <END>
<BEG> get the expected value of the ref after the lock is taken, but before update occurs <END>
<BEG> the old value of the ref, prior to the update being attempted <END>
<BEG> get the status of this update <END>
<BEG> open an existing repository, reusing a cached instance if possible <END>
<BEG> get creator of this tag <END>
<BEG> set the creator of this tag <END>
<BEG> get the repository this merger operates on <END>
<BEG> merge together two or more tree-ish objects <END>
<BEG> returns whether this merge failed i e not stopped because of a <END>
<BEG> get the objectid of the nth ancestor <END>
<BEG> whether this patch modifies metadata about a file <END>
<BEG> get the number of refs for this commit <END>
<BEG> create a filter with two filters, one of which must match <END>
<BEG> create a filter around many filters, one of which must match <END>
<BEG> get the pattern this filter uses <END>
<BEG> parse the tagger identity from the raw buffer <END>
<BEG> checks whether to preserve old packs in a preserved directory <END>
<BEG> true if writer can use offsets to point to a delta base <END>
<BEG> get the number of objects to try when looking for a delta base <END>
<BEG> set the number of objects considered when searching for a delta base <END>
<BEG> get the pack index file format version this instance creates <END>
<BEG> get the count of most recent commits for which to build bitmaps <END>
<BEG> get unmodifiable collection of the root commits of the history <END>
<BEG> get total number of objects output <END>
<BEG> get number of deltas whose existing representation was reused in the output <END>
<BEG> get depth in commits the pack includes if shallow <END>
<BEG> get index object id <END>
<BEG> get submodule repository at path <END>
<BEG> checks whether the working tree contains a gitmodules file that's a <END>
<BEG> get path of current submodule entry <END>
<BEG> the module name for the current submodule entry used for the section name of gitconfig <END>
<BEG> get ref that head points to in the current submodule's repository <END>
<BEG> whether this option is supported <END>
<BEG> add user agent capability <END>
<BEG> assume a commit is available on the recipient's side <END>
<BEG> set the factory to construct and configure per-request uploadpack <END>
<BEG> stops this daemon and waits until it's acceptor thread has finished <END>
<BEG> get the user agent advertised by the peer server, if available <END>
<BEG> get offset in pack when object has been already written <END>
<BEG> write a utf-8 encoded string as a single length-delimited packet <END>
<BEG> flush the underlying outputstream <END>
<BEG> get the whole string for the nonce to be included into the capability advertisement <END>
<BEG> get number of ref delta objects in the pack <END>
<BEG> get number of delta blob objects in the pack <END>
<BEG> set the hook which is invoked after commands are executed <END>
<BEG> create a new refspec with a different source name setting <END>
<BEG> get all configured uris under this remote <END>
<BEG> add a new fetch refspec to this remote <END>
<BEG> get new object id <END>
<BEG> whether user specified a local tracking branch for remote update <END>
<BEG> set whether or not to export all repositories <END>
<BEG> set the seed used by the nonce verifier <END>
<BEG> set the nonce slop limit <END>
<BEG> get configured object checker for received objects <END>
<BEG> whether destination refs should be removed if they no longer exist at the source repository <END>
<BEG> get user name requested for transfer <END>
<BEG> change the user agent string advertised by jgit <END>
<BEG> compare the path of this current entry to another iterator's entry <END>
<BEG> seek the iterator on a file, if present <END>
<BEG> <p>getter for the field <code>directory<code> <p> <END>
<BEG> get how text line endings should be normalized <END>
<BEG> delete file or empty folder <END>
<BEG> creates the directory named by this abstract pathname <END>
<BEG> on mac: get nfc normalized form of given name, otherwise the given name <END>
<BEG> get the length of a file or link, if the osjre supports symbolic links it's the length of the link, else the length of the target <END>
<BEG> delete a file throws an exception if delete fails <END>
<BEG> resolve this file to its actual path name that the jre can use <END>
<BEG> searches the given path to see if it contains one of the given files <END>
<BEG> enumerates children of a directory <END>
<BEG> check if an entry appears in this collection <END>
<BEG> print a short as string <END>
<BEG> convert sequence of 3 bytes network byte order into unsigned value <END>
<BEG> get exit code of the process <END>
<BEG> determine if an 8-bit us-ascii encoded character is represents whitespace <END>
<BEG> get a reference object by name <END>
<BEG> parse a string as a standard git boolean value see <END>
<BEG> set the new instance to use when accessing properties <END>
<BEG> copy all bytes remaining on the input stream into this buffer <END>
<BEG> obtain the length in bytes of the buffer <END>
<BEG> convert this buffer's contents into a contiguous byte array <END>
<BEG> convert this buffer's contents into a contiguous byte array if this size <END>
<BEG> defines the minimum number of children that are required to match for the parent to be considered a match and the maximum number of children that are required to match for the parent to be considered a match <END>
<BEG> returns the query to execute <END>
<BEG> constructs a new has_child query, with the child type and the query to run on the child documents the <END>
<BEG> constructs a new parent id query that returns all child documents of the specified type that point to the specified id <END>
<BEG> returns the dictionary used to search for passwords <END>
<BEG> returns true if the verify method will search the password for dictionary words spelled backwards as well as forwards <END>
<BEG> returns the match behavior for this rule <END>
<BEG> sets whether to add the rule result detail for each character rule that fails to validate to the rule result <END>
<BEG> returns the characters that are considered valid for this rule <END>
<BEG> sets the split character <END>
<BEG> returns the lokid node in relation to this node <END>
<BEG> sets the eqkid node in relation to this node <END>
<BEG> returns whether the supplied word has been inserted into this ternary tree <END>
<BEG> returns the minimum password length <END>
<BEG> returns whether the result of the rule verification is a valid password <END>
<BEG> returns whether a count exists for the supplied category <END>
<BEG> determines whether a password matches a source password <END>
<BEG> returns whether to match the username backwards <END>
<BEG> returns true, if the resulting document shall be compressed <END>
<BEG> set the embedded unicode file for this spec if you call this, then do not forget to also <END>
<BEG> set whether to decrypt meta data <END>
<BEG> returns whether a protection policy has been set <END>
<BEG> this will get the coordinates of the the vertices <END>
<BEG> this will get the key of this xobjectform in the structural parent tree required if the form <END>
<BEG> this will set the difference between the annotations outer rectangle defined by rect and the border <END>
<BEG> this will set the border effect dictionary, specifying effects to be applied when drawing the line this is supported by pdf 1 6 and higher <END>
<BEG> sets the paths that make this annotation <END>
<BEG> writes an integer number to the content stream <END>
<BEG> a rectangle, expressed in default user space units, defining the visible region of default user space when the page is displayed or printed, its contents are to be clipped cropped <END>
<BEG> this method multiplies this matrix with the specified other matrix, storing the product in a new instance it is allowed to have other == this <END>
<BEG> bm: if the trm is rotated, the calculation is a little more complicated the rotation matrix multiplied with the scaling matrix is: x 0 0 cos sin 0 xcos xsin 0 0 y 0 -sin cos 0 = -ysin ycos 0 0 0 1 0 0 1 0 0 1 so, if you want to deduce x from the matrix you take m 0,0 = xcos and m 0,1 = xsin and use the theorem of pythagoras sqrt m 0,0 ^2+m 0,1 ^2 = sqrt x2cos2+x2sin2 = sqrt x2 cos2+sin2 = <- here is the trick cos2+sin2 is one sqrt x2 = abs x <END>
<BEG> copies all of the mappings from the specified map to this map optional operation this method automatically flushes the cache <END>
<BEG> sets the base directory to be scanned this is the directory which is <END>
<BEG> scans the base directory for files which match at least one include pattern and don't match any exclude patterns if there are selectors <END>
<BEG> returns the names of the directories which matched none of the include patterns the names are relative to the base directory this involves <END>
<BEG> returns a collection view of the values contained in this <END>
<BEG> finds a rule instance for the given rule class name, name and target language <END>
<BEG> initialize the mapper with the given rulesets <END>
<BEG> extension point for subclasses to indicate tokens are to be filtered <END>
<BEG> get an iterator over all preceding siblings <END>
<BEG> used to create a customized instance of unsupportedoperationexception <END>
<BEG> get the languages of a given source file <END>
<BEG> get the default languageversion for the first language of a given source file <END>
<BEG> gets an options bundle from a collection of options <END>
<BEG> index a single node for visitation by rules <END>
<BEG> checks whether this rule reference explicitly overrides any of the possible attributes of the referenced rule <END>
<BEG> split union expressions into their components <END>
<BEG> get the suppress marker this is the source level marker used to indicate <END>
<BEG> get the comma separated list of input paths to process for source files <END>
<BEG> set whether the report should show suppressed violations <END>
<BEG> specify a default value <END>
<BEG> specify default values <END>
<BEG> returns the name of the property to be built <END>
<BEG> parses a string into a character <END>
<BEG> returns a builder for a long integer property the property descriptor <END>
<BEG> returns a builder for a regex property the value type of such <END>
<BEG> gets the value of the type attribute represented by this constant <END>
<BEG> gets the factory associated to the type id, that can build the property from strings extracted from the xml <END>
<BEG> returns a value parser parsing lists of values of type u <END>
<BEG> the uri of the json schema corresponding to the version <END>
<BEG> adds a new metric to the report and notify the listeners <END>
<BEG> record a new violation of the contextual rule, at the given node <END>
<BEG> remove an attribute value on the rulecontext <END>
<BEG> get the priority which corresponds to the given number as returned by <END>
<BEG> does any rule for the given language use multi-file analysis? <END>
<BEG> parses several resources into a list of rulesets <END>
<BEG> is this an external ruleset reference? <END>
<BEG> is this a reference to all rules in a ruleset, or a single rule? <END>
<BEG> get the ruleset file name <END>
<BEG> attempt to determine the actual class given the short name <END>
<BEG> gets the data source as a pseudo file name faux-file adding a suffix <END>
<BEG> helper method to get a filename without its extension <END>
<BEG> get a file filter for directories <END>
<BEG> null level means off <END>
<BEG> returns the renderer descriptor registered by the given id <END>
<BEG> registers the given renderer if registration succeeds the id <END>
<BEG> returns whether the type is known to the receiver <END>
<BEG> returns the type for the typename specified <END>
<BEG> gets the qualified name of the anonymous class declared by this node, or null if this node doesn't declare any <END>
<BEG> returns true if this a switch which uses fallthrough branches <END>
<BEG> returns the catch clauses of this try statement <END>
<BEG> returns true if this node is a wildcard argument bounded or not <END>
<BEG> returns true if this type parameter is bounded, <END>
<BEG> returns the declared variable <END>
<BEG> returns the id of the declared variable <END>
<BEG> returns true if this is a binding variable in a <END>
<BEG> returns true if this is a lower type bound, e g <END>
<BEG> returns the type node representing the bound, e g <END>
<BEG> returns the yielded expression <END>
<BEG> gets the next word characters until next whitespace, punctuation, or anything that is not a letter or digit at the given position <END>
<BEG> returns true if the metric can be computed on this type declaration by default, annotation and interface <END>
<BEG> compute the sum, average, or highest value of the standard operation metric on all operations of the class node <END>
<BEG> include static fields? <END>
<BEG> forbid all mentioned roles <END>
<BEG> returns true if this qualified name identifies a lambda expression <END>
<BEG> that's a new method we are going to check each method call inside the <END>
<BEG> not throwing cnfes to represent failure makes a huge performance difference typeres as a whole is 2x faster <END>
<BEG> get the name of the jvm encoding used <END>
<BEG> decode an array of bytes into a string <END>
<BEG> receives a two byte integer from the backend <END>
<BEG> reads in a given number of bytes from the backend <END>
<BEG> flush any pending output to the backend <END>
<BEG> get a machine-readable version number <END>
<BEG> ensures that the buffer contains at least n bytes this method invalidates the buffer and index <END>
<BEG> closes this datasource, and all the pooled connections, whether in use or not <END>
<BEG> truncate to trunc translation <END>
<BEG> time stamp diff <END>
<BEG> repositions this stream to the position at the time the <code>mark<code> method was last called on this input stream nb: if mark is not called we move to the beginning <END>
<BEG> <p>this method is inefficient, as the only way to find out the size of the object is to seek to the end, record the current position, then return to the original position <p> <END>
<BEG> clean up native win32 resources after completion or failure of sspi authentication this <END>
<BEG> encodes a byte array into base64 notation does not gzip-compress data <END>
<BEG> parses a short value from the byte array <END>
<BEG> parses a double value from the byte array <END>
<BEG> returns an entry from the cache <END>
<BEG> this method sets the value of this object it must be overridden <END>
<BEG> returns the calendar object for this timestamp <END>
<BEG> removes curly braces { and } from the beginning and end of a string <END>
<BEG> update the parameter status map in response to a new parameterstatus wire protocol message <END>
<BEG> add query to being cached and computing adaptive fetch size <END>
<BEG> remove query information from caching <END>
<BEG> loads a class from the current classloader <END>
<BEG> get all constructors in the supplied class es <END>
<BEG> get all constructors and methods in the supplied class es <END>
<BEG> suppress multiple fields <END>
<BEG> suppress all fields for these classes <END>
<BEG> suppress all methods for these classes <END>
<BEG> add a fully qualified class name for a class that should have its static initializers suppressed <END>
<BEG> add classes that should be automatically replayed or verified <END>
<BEG> set a substitute return value for a method whenever this method will be <END>
<BEG> throw exception if method was not found <END>
<BEG> get the first parent constructor defined in a super class of <code>klass<code> <END>
<BEG> gets the all metods except <END>
<BEG> <pre> the unique identifier of the auth provider it will be referred to by <END>
<BEG> <pre> value of the changed object in the old service configuration, in json format this field will not be populated if changetype == added <END>
<BEG> <pre> collection of advice provided for this change, useful for determining the possible impact of this change <END>
<BEG> <pre> optional a concise name for the monitored resource type that might be <END>
<BEG> <pre> list of per consumer project-specific properties <END>
<BEG> <pre> the product title for this service <END>
<BEG> <pre> additional api documentation <END>
<BEG> <pre> api backend configuration <END>
<BEG> <pre> quota configuration <END>
<BEG> <pre> configuration for the service control plane <END>
<BEG> <pre> all files used during config generation <END>
<BEG> <pre> the operation response this may not include all response elements, <END>
<BEG> <pre> whether or not authorization for `resource` and `permission` was granted <END>
<BEG> <pre> the user agent of the caller <END>
<BEG> <pre> the request method examples: ` get `, ` head `, ` put `, ` post ` <END>
<BEG> <pre> a name for the type of resource being accessed, e g sql table , <END>
<BEG> <pre> a list of messages that carry the error details there is a common set of <END>
<BEG> <pre> the amount of red in the color as a value in the interval [0, 1] <END>
<BEG> <pre> optional the name of the organization at the address <END>
<BEG> find all extensions for immutable apis by fully-qualified name of extended class note that <END>
<BEG> determines if the tree is balanced according to bap95, which means the tree is flat-enough with respect to the bounds note that this definition of balanced is one where sub-trees of balanced <END>
<BEG> gets the information for all fields within this message, sorted in ascending order by their field number <END>
<BEG> <pre> a urlresource name whose content describes the type of the serialized protocol buffer message <END>
<BEG> prettyprint the object to the writer <END>
<BEG> gets the 'ignore_unlabeled' parameter <END>
<BEG> gets the class loader of this library <END>
<BEG> sets the input filter for all resources to be scanned <END>
<BEG> if true, scan urls in parallel <END>
<BEG> when member modifier is public <END>
<BEG> sets the static default url types can be used to statically plug in urltypes <END>
<BEG> return all indices <END>
<BEG> returns the metadata adapter <END>
<BEG> isempty compatible with java 5 <END>
<BEG> get all methods annotated with a given annotation, including annotation member values matching <p>depends on fieldannotationsscanner configured, otherwise an empty set is returned <END>
<BEG> is the given annotation an inherited annotation, based on the metadata stored by typeannotationsscanner <END>
<BEG> minimizes memory usage while computing the or aggregate on a moderate number of bitmaps <END>
<BEG> returns true if this bitmap is empty <END>
<BEG> create a new roaring bitmap containing at most maxcardinality integers <END>
<BEG> get the name of this container <END>
<BEG> computes the bitwise or of this container with another union this <END>
<BEG> computes the bitwise or of this container with another symmetric difference this <END>
<BEG> get label for category <END>
<BEG> get scheme uri for category <END>
<BEG> set scheme uri for category <END>
<BEG> returns the content mode atom 0 3 only <END>
<BEG> set the published <p> <END>
<BEG> sets the entry summary <END>
<BEG> sets the entry title <END>
<BEG> set the updated <p> <END>
<BEG> sets the feed other links non-alternate ones <END>
<BEG> returns the feed contributors <END>
<BEG> sets the feed moduless <END>
<BEG> sets the generator version <END>
<BEG> returns the hreflang <p> <END>
<BEG> sets the dublincore module creators <END>
<BEG> returns the dublincore module type <END>
<BEG> sets the dublincore module language convenience method that can be used when there is only <END>
<BEG> sets the dublincore module rights <END>
<BEG> gets the dublincore module rights convenience method that can be used to obtain the first <END>
<BEG> sets the dublincore module rights convenience method that can be used when there is only one <END>
<BEG> returns the syndication module update frequency <END>
<BEG> sets the syndication module update frequency <END>
<BEG> returns the channel web master <END>
<BEG> returns the channel skip hours <END>
<BEG> returns the channel skip days <END>
<BEG> sets the channel categories <END>
<BEG> sets the channel generator <END>
<BEG> returns the cloud domain <END>
<BEG> returns the cloud path <END>
<BEG> sets the description value <END>
<BEG> returns the enclosure type <END>
<BEG> returns the guid value <END>
<BEG> returns the image url <END>
<BEG> sets the image width <END>
<BEG> returns the image height <END>
<BEG> returns the item source <END>
<BEG> sets the item guid <END>
<BEG> sets the item modules <END>
<BEG> sets the item expiration date <END>
<BEG> returns the text input name <END>
<BEG> sets the entry published date <END>
<BEG> returns the updateddate <p> <END>
<BEG> set the updateddate <p> <END>
<BEG> returns the charset encoding of a the feed this is not set by rome parsers <END>
<BEG> returns the feed description <END>
<BEG> sets the feed description <END>
<BEG> sets the feed copyright <END>
<BEG> sets the feed categories <END>
<BEG> sets the feedtype of a the feed <b>do not use<b>, for bean cloning purposes only <END>
<BEG> sets the charset encoding of a the feed <END>
<BEG> parses a date out of a string with a date in w3c date-time format or in a rfc822 format <END>
<BEG> returns a set with all the uris jdom namespace elements this module generator uses <END>
<BEG> utility method to generate a list of simple elements <END>
<BEG> to be overriden by rss 0 91 netscape parser <END>
<BEG> enables xml healing in the wiredfeedinput instance <END>
<BEG> indicates if the wiredfeedinput instance will xml heal if necessary the character stream <END>
<BEG> creates a jdom document for the given syndfeedimpl <END>
<BEG> returns the list of supported output feed types <END>
<BEG> returns the first object that is not null <END>
<BEG> returns a completable instance that reacts to the termination of the given future in a blocking fashion <END>
<BEG> returns a completable which delays the emission of the completion event by the given time while running on the specified scheduler <END>
<BEG> returns a completable that runs this completable and switches to the other completable in case this completable doesn't complete within the given time <END>
<BEG> returns a completable that runs this completable and emits a timeoutexception in case this completable doesn't complete within the given time while waiting on the specified scheduler <END>
<BEG> signals the completion of the main sequence and switches to post-completion replay mode <END>
<BEG> signals oncompleted to the downstream subscriber <END>
<BEG> links up with the downstream subscriber cancellation, backpressure and subscribes to the source observable <END>
<BEG> returns a type-corrected singleton instance of the never observable <END>
<BEG> creates a scheduledexecutorservice either the default or given by a hook <END>
<BEG> deregisters the executor service <END>
<BEG> atomically swaps in the terminal throwable and returns the previous contents of the field <END>
<BEG> returns a func0 that supplies the connectableobservable returned by calling replay on the source <END>
<BEG> returns the address of the specific field on the class and wraps a nosuchfieldexception into an internal error <END>
<BEG> indicates whether this notification has an exception associated with it <END>
<BEG> returns an observable that emits a single item and then completes <END>
<BEG> returns an observable that emits the results of a specified combiner function applied to combinations of <i>n<i> items emitted, in sequence, by the <i>n<i> observables emitted by a specified observable <END>
<BEG> caches and shares everything from this observable and uses the initialcapacity to reduce the number of times the internal buffer needs resizing <END>
<BEG> returns an observable that delays the subscription to the source observable by a given amount of time <END>
<BEG> concatenates two source observables eagerly into a single stream of values <END>
<BEG> returns an observable that emits only the very first item emitted by the source observable, or a default item if the source observable completes without emitting anything <END>
<BEG> instructs an observable that is emitting items faster than its observer can consume them to hold onto the latest value and emit that on request <END>
<BEG> forces an observable's emissions and notifications to be serialized and for it to obey <a href= http:reactivex iodocumentationcontract html >the observable contract<a> in other ways <END>
<BEG> returns an observable that only emits those items emitted by the source observable that are not followed by another emitted item within a specified time window <END>
<BEG> returns an observable that mirrors the source observable, but that switches to a fallback observable if an item emitted by the source observable doesn't arrive within a window of time after the emission of the previous item, where that period of time is measured by an observable that is a function of the previous item <END>
<BEG> returns an observable that mirrors the source observable but applies a timeout policy for each emitted item using a specified scheduler if the next item isn't emitted within the specified timeout duration <END>
<BEG> returns an observable that emits windows of items it collects from the source observable the resulting <END>
<BEG> creates an assertablesubscriber with the initial request amount and subscribes it to this observable <END>
<BEG> factory method to construct a testsubscriber with an initial request of long max_value and no delegation <END>
<BEG> reset all hook callbacks to those of the current rxjavaplugins handlers <END>
<BEG> hook to call if the observable subscribe crashes for some reason <END>
<BEG> sets the hook function for returning a scheduledexecutorservice used by the genericscheduledexecutorservice for background tasks <END>
<BEG> flattens three singles into a single observable, without any transformation <END>
<BEG> returns a single that emits the results of a specified combiner function applied to two items emitted by two other singles <END>
<BEG> returns a single that emits the item emitted by the source single until a second single emits an item upon <END>
<BEG> returns a single that mirrors the source single but applies a timeout policy for its emitted item if it <END>
<BEG> get the name of the top-level element for validation <END>
<BEG> <p>determine whether setxincludeaware has been called <p> <END>
<BEG> <p>get state of xinclude processing <p> <END>
<BEG> get the errorlistener that will be used when parsing <END>
<BEG> test whether the given character is a low surrogate <END>
<BEG> determine whether a character is valid in xml 1 0 <END>
<BEG> determine whether a character is valid in xml 1 1 <END>
<BEG> get the initial mode for the transformation <END>
<BEG> test whether an explicit result tree has been written using xsl:result-document <END>
<BEG> allocate a sequenceoutputter for a new output destination reuse the existing one <END>
<BEG> get the executable object <END>
<BEG> set the initial context node used for evaluating global variables <END>
<BEG> get the current bindery <END>
<BEG> set the rulemanager, used to manage template rules for each mode <END>
<BEG> pause or resume tracing while tracing is paused, trace events are not sent to any <END>
<BEG> get the path map used for document projection, if any <END>
<BEG> set line numbering on or off <END>
<BEG> get timing option <END>
<BEG> get the current location identifier <END>
<BEG> notify the end of the document <END>
<BEG> get the line number <END>
<BEG> determine whether the emitter wants a writer for character output or an outputstream for binary output the standard emitters all use a writer, so <END>
<BEG> get the output stream <END>
<BEG> set the underlying emitter this call is mandatory before using the emitter <END>
<BEG> ask whether xsi:schemalocation and xsi:nonamespaceschemalocation attributes should be recognized while validating an instance document <END>
<BEG> set the receivingcontenthandler to its initial state, except for the local name cache, which is retained <END>
<BEG> decide whether reuse of the sequencewriter is advisable <END>
<BEG> the startcontent event is notified after all namespaces and attributes of an element have been notified, and before any child nodes are notified <END>
<BEG> create a new xhtml metatagadjuster, responsible for insertion, removal, or replacement of meta elements this method exists so that it can be overridden in a subclass <END>
<BEG> determine if the current element has any attributes <END>
<BEG> output the xml declaration this implementation does nothing <END>
<BEG> set the systemid of the document <END>
<BEG> set the output destination of the transformation <END>
<BEG> start of event sequence <END>
<BEG> test that all characters in a name for example are supported in the target encoding <END>
<BEG> write a charsequence without any escaping of special characters : various implementations <END>
<BEG> get another sequenceiterator that iterates over the same items as the original, but which is repositioned at the start of the sequence <END>
<BEG> set the namecode of this element <END>
<BEG> perform namespace fixup this is done after all the attributes and explicit namespaces have been added <END>
<BEG> supply an xmlstreamreader: the events reported by this xmlstreamreader will be translated into eventiterator events <END>
<BEG> simplify an expression <END>
<BEG> determine whether casting from a source type to a target type is possible <END>
<BEG> get the static type of the expression <END>
<BEG> set the name of the default collation <END>
<BEG> create a clone copy of this expression <END>
<BEG> get the immediate sub-expressions of this expression default implementation <END>
<BEG> evaluate an updating expression, adding the results to a pending update list <END>
<BEG> get the container in which this expression is located this will usually be a top-level construct <END>
<BEG> set up a parent-child relationship between this expression and a given child expression <END>
<BEG> compute the static properties this should only be done once for each <END>
<BEG> determine the intrinsic dependencies of an expression, that is, those which are not derived from the dependencies of its subexpressions for example, position has an intrinsic dependency <END>
<BEG> mark tail-recursive calls on stylesheet functions for most expressions, this does nothing <END>
<BEG> method used in subclasses to signal a runtime type error <END>
<BEG> get the uri of the document or module containing a particular location <END>
<BEG> get the static context for the expressions being visited note: this may not reflect all changes <END>
<BEG> set the static context for the expressions being visited note: this may not reflect all changes <END>
<BEG> optimize an expression, via the expressionvisitor <END>
<BEG> get the number of slots required <END>
<BEG> process this expression as an instruction, writing results to the current outputter <END>
<BEG> determine whether this instruction creates new nodes <END>
<BEG> process the value as an instruction, without returning any tail calls <END>
<BEG> get the slot number allocated to this local variable <END>
<BEG> returns the next element in the iteration <END>
<BEG> attempt to optimize a copy operation return null if no optimization is possible <END>
<BEG> make a closure, given the expected reference count <END>
<BEG> try converting a filter expression to a call on the key function return the supplied <END>
<BEG> static method to get a converter from an xpath sequence of nodes to the representation of a nodelist in an external object model this is really a special for dom, which uses nodelist rather than general purpose java collection classes <END>
<BEG> determine the static cardinality of the expression this implementation <END>
<BEG> determine the data type of the items returned by this exprssion <END>
<BEG> get the last position that is, the number of items in the sequence this method is <END>
<BEG> test if this expression is the same as another expression <END>
<BEG> make a treat expression <END>
<BEG> determine the static cardinality default implementation returns the cardinality of the operand <END>
<BEG> set this function as confirmed the function being called is known to exist or not <END>
<BEG> mark an expression as filtered: that is, it appears as the base expression in a filter expression <END>
<BEG> determine whether the body of a function is to be repeated, due to tail-recursive function calls <END>
<BEG> the date:date-time function returns the current date and time as a datetime string <END>
<BEG> return the iso week number of the current date <END>
<BEG> return the day-of-the-week in a month of the current date as a number for example 3 for the 3rd tuesday in may <END>
<BEG> return the day of the week given in a date as a number <END>
<BEG> get the saved static base uri <END>
<BEG> copy the document identified by this expression to a given receiver this method is used only when it is <END>
<BEG> get the target method or field, or constructor being called <END>
<BEG> get the function declaration corresponding to a given function name and arity <END>
<BEG> get the list of contained functionlibraries this method allows the caller to modify <END>
<BEG> get an iterator over the nodes that have an id equal to one of the values is a set of whitespace separated strings <END>
<BEG> determine whether a node is nilled returns true if the value <END>
<BEG> make a system function call one in the standard function namespace <END>
<BEG> get the details of the function signature <END>
<BEG> get the systemid of the document <END>
<BEG> get the expression used to process matching substrings <END>
<BEG> indicate that the attribute value contains no special characters that might need escaping <END>
<BEG> assign a new value to a global variable supports saxon:assign <END>
<BEG> get the children of this instruction <END>
<BEG> determine whether the inherit namespaces flag is set <END>
<BEG> set the index of named character maps <END>
<BEG> get the index of named character maps <END>
<BEG> get the keymanager which handles key definitions <END>
<BEG> find a named collation <END>
<BEG> indicate that this variable represents a required parameter <END>
<BEG> indicate that this variable represents a parameter that is implicitly required because there is no usable default value <END>
<BEG> get the cardinality of the result of this instruction an xsl:variable instruction returns nothing, so the <END>
<BEG> get the host language for this declaration <END>
<BEG> set the type of construct <END>
<BEG> get the construct type <END>
<BEG> set whether the the instruction should resolve the href relative uri against the static base uri rather than the dynamic base output uri <END>
<BEG> set whether this template has one or more required parameters <END>
<BEG> set the required type to be returned by this template <END>
<BEG> gather the direct contributing callees of this function a callee is a function that this one <END>
<BEG> set the slot number to be used by this parameter <END>
<BEG> indicate that this is really an xsl:nunber instruction <END>
<BEG> evaluate the variable method exists only to satisfy the interface <END>
<BEG> add the platform-specific function libraries to a function library list the libraries <END>
<BEG> get another iterator over the same items <END>
<BEG> determine whether a unicode codepoint is alphanumeric, that is, whether it is in one of the categories nd, nl, no, lu, ll, lt, lm or lo <END>
<BEG> decide whether an element is in the set of white-space preserving element types <END>
<BEG> get the initial start position <END>
<BEG> get the position of the current item <END>
<BEG> get the position of the last item in the sequence <END>
<BEG> returns the length of this character sequence the length is the number <END>
<BEG> remove a character at a particular offset <END>
<BEG> insert a given character at the start of the buffer <END>
<BEG> test whether a character can appear at the start of an ncname <END>
<BEG> validate a qname, and return the prefix and local name the local name is checked <END>
<BEG> validate whether a given string constitutes a valid ncname, as defined in xml namespaces <END>
<BEG> get the singular static namepool until saxon 8 9, all configurations shared the same <END>
<BEG> get the prefix index from a namecode <END>
<BEG> get the prefix code for a given prefix <END>
<BEG> retrieve client data on behalf of a user of the namepool <END>
<BEG> get the unique document number <END>
<BEG> get the namespace uri of the qname <END>
<BEG> get the kind of node this will be a value such as type element or type attribute <END>
<BEG> get the system id for the node <END>
<BEG> get the base uri for the node, that is, the uri used for resolving a relative uri contained in the node this will be the same as the system id unless xml:base has been used <END>
<BEG> determine the relative position of this node and another node, in document order <END>
<BEG> get name code the name code is a coded form of the node name: two nodes <END>
<BEG> get the root node, if it is a document node <END>
<BEG> get the typed value the result of this method will always be consistent with the method <END>
<BEG> determine whether this node has the is-idref property <END>
<BEG> test whether this node test is satisfied by a given node this alternative <END>
<BEG> indicate whether dtd-derived content types should be matched the default is false <END>
<BEG> get the primitive item type corresponding to this item type for item , <END>
<BEG> determine whether this pattern is the same as another pattern <END>
<BEG> add a filter to the pattern while under construction <END>
<BEG> determine the fingerprint of nodes to which this pattern applies <END>
<BEG> determine the name fingerprint of nodes to which this pattern applies used for <END>
<BEG> produce an xml representation of the compiled and optimized stylesheet <END>
<BEG> get the prefix bound to a particular namespace uri, if there is one, or null if not jaxp method <END>
<BEG> helper method to get the current namepool <END>
<BEG> set the error listener the error listener receives reports of all run-time <END>
<BEG> set the line number where the variable declaration appears in the source <END>
<BEG> get the compiled variable if the definition has been compiled <END>
<BEG> set the namespace copy mode <END>
<BEG> set the construction mode for this module <END>
<BEG> get the function library object that holds details of global functions <END>
<BEG> undeclare the most recently-declared active namespace this method is called <END>
<BEG> ask whether the query is allowed to be updating <END>
<BEG> indicate that the query should be optimized with a view to generating java code <END>
<BEG> get the required type of the context item if no type has been explicitly declared for the context <END>
<BEG> get the stack frame map used for the outermost level of this query <END>
<BEG> get the function declaration corresponding to a given function name and arity, supplied in the form {uri}localarity <END>
<BEG> test whether one string starts with another, according to the rules of the xpath starts-with function <END>
<BEG> get the document sorter, which sorts the nodes if the condition is true <END>
<BEG> compute the static cardinality of this expression <END>
<BEG> get the value of the grouping key for the current group <END>
<BEG> test if this set has overlapping membership with another set <END>
<BEG> get the end points of the ranges <END>
<BEG> get the expression used as the sort key <END>
<BEG> get the static base uri of the expression this is needed to handle the case where a collation uri <END>
<BEG> get the base expression, the expression that computes the sequence to be sorted <END>
<BEG> get the recovery policy <END>
<BEG> get the value of a particular property of the instruction this is part of the <END>
<BEG> determine whether saxon:explain has been set to yes <END>
<BEG> mark tail-recursive calls on templates and functions <END>
<BEG> get the import precedence of this stylesheet element <END>
<BEG> determine whether forwards-compatible mode is enabled for this element <END>
<BEG> check whether a namespace uri defines an namespace excluded from the result <END>
<BEG> set the object name, for example the name of a function, variable, or template declared on this element <END>
<BEG> get a namespace resolver to resolve the namespaces declared in this static context <END>
<BEG> get details of stack frame <END>
<BEG> isimport returns true if this is an xsl:import statement rather than an xsl:include <END>
<BEG> get the procedure object that looks after any local variables declared in the content constructor <END>
<BEG> get the static type of the parameter this is the declared type, because we cannot know <END>
<BEG> get the owning preparedstylesheet object <END>
<BEG> set the import precedence of this stylesheet <END>
<BEG> get the import precedence of this stylesheet <END>
<BEG> check that the variable is not already declared, and allocate a slot number <END>
<BEG> get the executable representing a complete stylesheet or query <END>
<BEG> declare a variable a variable must be declared before an expression referring <END>
<BEG> get a stack frame map containing definitions of all the declared variables this will return a newly <END>
<BEG> get the configuration in use <END>
<BEG> create a dynamic context suitable for evaluating this expression <END>
<BEG> ask whether the binding is local or global a global binding is one that has a fixed <END>
<BEG> get the value of the variable this method is used by the xpath execution engine <END>
<BEG> set the length of this character sequence, without changing the array and start offset to which it is bound <END>
<BEG> write the value to a writer <END>
<BEG> write the value to a writer with escaping of special characters <END>
<BEG> append a charsequence to this largestringbuffer <END>
<BEG> get the namecode of an attribute by position <END>
<BEG> get the parent node <END>
<BEG> get the local name of this node <END>
<BEG> get the node type <END>
<BEG> return the string-value of the node, that is, the concatenation of the character content of all descendent elements and text nodes <END>
<BEG> get the system id representing the location of the instruction that caused this new context to be created <END>
<BEG> set the line number of the location of the instruction that caused this new context to be created <END>
<BEG> end a child element in the output <END>
<BEG> called when an item ceases to be the current item <END>
<BEG> adds trace-listener-a with trace-listener-b and returns the resulting multicast listener <END>
<BEG> instantiate a class using the class name provided, with the option of tracing note that the method does not check that the object is of the right class <END>
<BEG> test backwards compatibility mode <END>
<BEG> determine whether untypedatomic values are converted to the type of the other operand <END>
<BEG> get the use expression for the key definition <END>
<BEG> set up a new table of handlers <END>
<BEG> set dynamic context information in the exception object <END>
<BEG> get next sibling - always null <END>
<BEG> set the system id and line number <END>
<BEG> set the node factory to use if none is specified, the builder uses its own <END>
<BEG> return the current item <END>
<BEG> return the current position <END>
<BEG> determine whether this is a built-in type or a user-defined type <END>
<BEG> determine whether this is a list type <END>
<BEG> get the built-in ancestor of this type in the type hierarchy <END>
<BEG> returns the value of the 'block' attribute for this type, as a bit-signnificant <END>
<BEG> test whether the content model of this complextype allows empty content <END>
<BEG> returns the built-in base type this type is derived from <END>
<BEG> test whether two externalobjecttype objects represent the same type <END>
<BEG> get the saxon configuration to which this type hierarchy belongs <END>
<BEG> set a reference to the constraint in xml schema that is not satisfied <END>
<BEG> get the constraint name and clause in the format defined in xml schema part c outcome tabulations <END>
<BEG> get the typed value of this item <END>
<BEG> get a subsequence of the value <END>
<BEG> convert the value to a string <END>
<BEG> get an object value that implements the xpath equality and ordering comparison semantics for this value <END>
<BEG> get the cardinality <END>
<BEG> get the version number of the schema-aware version of the product <END>
<BEG> sets the timeout, in seconds, for all commands <END>
<BEG> gets the appcachestatus for the given int value <END>
<BEG> clicks at the current mouse location useful when combined with <END>
<BEG> see documentation of compositelocallogs about the difference between the first locallogs instance and the second one <END>
<BEG> heuristic for comparing two platforms if platforms which is not the same thing as operating <END>
<BEG> returns the minor version of this platform <END>
<BEG> gets the socks proxy <END>
<BEG> returns a handle to the stream representing the response body the request must be paused in <END>
<BEG> javascript script line number 0-based <END>
<BEG> priority of the resource request at the time request is sent <END>
<BEG> whether is loaded via link preload <END>
<BEG> started running serviceworker <END>
<BEG> response url this url can be different from cachedresource url in case of redirect <END>
<BEG> http response status code <END>
<BEG> specifies that the request was served from the serviceworker <END>
<BEG> protocol name e g tls 1 2 or quic <END>
<BEG> certificate valid from date <END>
<BEG> whether the request complied with certificate transparency policy <END>
<BEG> the field which caused the error <END>
<BEG> disables network tracking, prevents network events from being sent to the client <END>
<BEG> returns the der-encoded certificate experimental <END>
<BEG> returns post data sent with the request returns an error when no data was sent with the request <END>
<BEG> sets the requests to intercept that match the provided patterns and optionally resource types experimental <END>
<BEG> fired if request ended up loading from cache <END>
<BEG> fired upon websocket creation <END>
<BEG> returns all browser contexts created with target createbrowsercontext method experimental <END>
<BEG> deletes a browsercontext all the belonging pages will be closed without calling their <END>
<BEG> issued when a possible inspection target is created <END>
<BEG> retrieves a user-defined attribute of this message attributes are stored as simple key-value <END>
<BEG> get a query parameter the implementation will take care of decoding from the percent encoding <END>
<BEG> returns usual google chrome installation location on windows <END>
<BEG> a file detector that never finds anything <END>
<BEG> extra servlets to initializeuse on the hub or node default empty <END>
<BEG> the proxy class name to use <END>
<BEG> returns whether the element should be cached <END>
<BEG> instantiate an instance of the given class, and set a lazy proxy for each of the webelement and list&lt;webelement&gt; fields that have been declared, assuming that the field name is also the html element's id or name this means that for the class: <END>
<BEG> an expectation for the url of the current page to be a specific url <END>
<BEG> an expectation for checking that an element is present on the dom of a page this does not <END>
<BEG> an expectation for checking that an element, known to be present on the dom of a page, is visible visibility means that the element is not only displayed but also has a height and <END>
<BEG> an expectation for checking an element is visible and enabled such that you can click it <END>
<BEG> wrapper for a condition, which allows for elements to update by redrawing <END>
<BEG> sets how long to wait for the evaluated condition to be true the default timeout is <END>
<BEG> checks whether the supplied datatype is a numeric datatype, i e if it is <END>
<BEG> checks whether the supplied datatype is equal to xsd:integer or one of the built-in datatypes that is derived from xsd:integer <END>
<BEG> checks whether the supplied datatype is equal to xsd:datetime, xsd:date, xsd:time, xsd:gyearmonth, xsd:gmonthday, xsd:gyear, xsd:gmonth or xsd:gday these are the primitive datatypes that represent dates andor <END>
<BEG> verifies if the supplied lexical value is valid for the given datatype <END>
<BEG> normalizes the supplied value according to the normalization rules for the supplied datatype <END>
<BEG> normalizes a float to its canonical representation <END>
<BEG> compares two floats to eachother <END>
<BEG> compares two canonical doubles to eachother <END>
<BEG> compares two floating point numbers to eachother <END>
<BEG> parses the supplied xsd:byte string and returns its value <END>
<BEG> parses the supplied xsd:int strings and returns its value <END>
<BEG> parses the supplied xsd:long string and returns its value <END>
<BEG> gets the objects of the statements with the specified subject, predicate and optionally contexts from the supplied graph calling this method is <END>
<BEG> gets the label of the supplied literal the fallback value is returned in <END>
<BEG> gets the int value of the supplied literal the fallback value is returned <END>
<BEG> get the current set of non-fatal errors <END>
<BEG> creates a string to that shows the specified line and column number <END>
<BEG> gets the default rdfparserregistry <END>
<BEG> resets all settings back to their default values <END>
<BEG> creates an n-triples string for the supplied literal <END>
<BEG> produces a string-representation of this object <END>
<BEG> --------------------------------------- methods from interface contenthandler --------------------------------------- <END>
<BEG> look for a sequence of bytes in a byte array <END>
<BEG> deletes all files and directories in the specified directory nothing <END>
<BEG> checks if specified mime type matches one of the fileformat's mime types <END>
<BEG> checks if the fileformat has a default charset <END>
<BEG> returns the hash code of the supplied object, or <tt>0<tt> if a null reference is supplied <END>
<BEG> titles shorter than min_title_length and long titles that don't contain a single space character are considered to be garbage <END>
<BEG> escapes any special characters in the supplied text so that it can be included as character data in an xml document the characters that are <END>
<BEG> returns the underlying content <END>
<BEG> set the nodes text body <br> <END>
<BEG> get the nodes text body <END>
<BEG> get the text values of all elements found at the given query name if no elements are found, or no text exists, <END>
<BEG> set the debugging flag <END>
<BEG> get the user id being used for archive entry headers <END>
<BEG> determine if the two entries are equal equality is determined by the header names being equal <END>
<BEG> ends the tar archive and closes the underlying outputstream this means that finish is called followed by <END>
<BEG> classes are not supported by enterprisearchive <END>
<BEG> register a collector <END>
<BEG> increment the counter with no labels by 1 <END>
<BEG> decrement the gauge with no labels by the given amount <END>
<BEG> return a builder to allow configuration of a new summary <END>
<BEG> observe the given amount on the summary with no labels <END>
<BEG> defines whether this type class is the root of the yaml document <END>
<BEG> copy bytes from source to destination <END>
<BEG> compress the input float array data <END>
<BEG> compress the input short array data <END>
<BEG> tells the system that spark was run from an external web application server <END>
<BEG> redirects any http request of type get on 'frompath' to 'topath' <END>
<BEG> redirects any http request of type delete on 'frompath' to 'topath' <END>
<BEG> returns the status code <END>
<BEG> map the route for http connect requests <END>
<BEG> gets the httpmethod corresponding to the provided string if no corresponding method can be found <END>
<BEG> retrieves the port that spark is listening on <END>
<BEG> configures the embedded web server's thread pool <END>
<BEG> maps the given path to the given websocket handler instance <END>
<BEG> binds an object to this session, using the name specified <END>
<BEG> determine whether the given url points to a resource in a jar file, that is, has protocol jar , zip , wsjar or code-source <END>
<BEG> allocates a longarray of `size` <END>
<BEG> frees a longarray <END>
<BEG> force all memory and spill files to be deleted; called by shuffle error-handling code <END>
<BEG> reset this map to initialized state <END>
<BEG> set a custom spark installation location for the application <END>
<BEG> returns the id used by the client to authenticate itself when authentication is enabled <END>
<BEG> the iv for the output channel i e input channel of the remote side <END>
<BEG> add handlers to channel <END>
<BEG> encode a password as a base64-encoded char[] array <END>
<BEG> invoked when the channel associated with the given client is active <END>
<BEG> reads from the given buffer into the internal byte array <END>
<BEG> convert a passed byte string e g 50b, 100k, or 250m to bytes for <END>
<BEG> connect timeout in milliseconds default 120 secs <END>
<BEG> obtains a filesegmentmanagedbuffer from a shuffle block id we expect the blockid has the <END>
<BEG> initiates the fetch of all blocks provided in the constructor, with possible retries in the event of transient ioexceptions <END>
<BEG> creates a memory block pointing to the memory used by the long array <END>
<BEG> returns whether this contains `substring` or not <END>
<BEG> register a gauge that reports the value of the object see <END>
<BEG> set whether to use prepared statements capable of returning updatable resultsets <END>
<BEG> return a new callablestatementcreator instance given this parameter mapper <END>
<BEG> return the query timeout for statements that this jdbctemplate executes <END>
<BEG> return whether results processing should be skipped <END>
<BEG> specify whether a return value is required <END>
<BEG> initialize this class with meta-data from the database <END>
<BEG> return the parameter sql type <END>
<BEG> specify whether the database supports the use of schema name in procedure calls <END>
<BEG> does the database support the use of schema name in procedure calls? <END>
<BEG> set the name of the table for this context <END>
<BEG> get the name of the table for this context <END>
<BEG> specify whether we should override default for accessing synonyms <END>
<BEG> get the parameter sql type <END>
<BEG> return the sql type for the given parameter, if registered <END>
<BEG> expose the classic spring jdbctemplate operations to allow invocation of less commonly used methods <END>
<BEG> return the sql statement to execute <END>
<BEG> is this call a function call? <END>
<BEG> does the call require a return value? <END>
<BEG> add a declared parameter to the list of parameters for the call <END>
<BEG> check whether this operation has been compiled already; lazily compile it if not already compiled <END>
<BEG> return the jdbctemplate for this dao, pre-initialized with the datasource or set explicitly <END>
<BEG> set the jdbc password to use for connecting through the driver <END>
<BEG> set whether this holder represents an active, jdbc-managed transaction <END>
<BEG> create a new jdbc 3 0 savepoint for the current connection, <END>
<BEG> return the jdbc datasource that this instance manages transactions for <END>
<BEG> obtain a connection from the given datasource translates sqlexceptions into <END>
<BEG> build the embedded database <END>
<BEG> return the retained previous isolation level, if any <END>
<BEG> return the read-only status of this transaction <END>
<BEG> set the default transaction isolation level by the name of the corresponding <END>
<BEG> specify whether to apply a lenient fallback to the default datasource if no specific datasource could be found for the current lookup key <END>
<BEG> return the resolved default target datasource, if any <END>
<BEG> specify the jdbc driver implementation class to use <END>
<BEG> return whether the returned connection will be a close-suppressing proxy or the physical connection <END>
<BEG> specifying a custom username and password doesn't make sense with a single connection returns the single connection if given <END>
<BEG> return the number of affected rows for all already executed statements <END>
<BEG> add one or more declared parameters used for configuring this operation <END>
<BEG> return whether this call is for a function <END>
<BEG> convenient method to execute with a single string parameter <END>
<BEG> convenient method to find a single object without context <END>
<BEG> convenient method to execute an update given one string arg <END>
<BEG> declare a parameter <END>
<BEG> specify whether to delete the entire range below the current maximum key value <END>
<BEG> return whether the given jdbc driver supports jdbc 2 0 batch updates <END>
<BEG> concrete subclasses can override this for custom initialization behavior <END>
<BEG> return a unique result object from the given collection <END>
<BEG> specify whether to always translate the exception true , or whether throw the raw exception when declared, i e when the originating method signature's exception <END>
<BEG> set a connectionspec for this proxy and the current thread <END>
<BEG> wrap the given connection with a proxy that delegates every method call to it but suppresses close calls this is useful for allowing application code to <END>
<BEG> return the connectionfactory used by this dao <END>
<BEG> this implementation closes the spring applicationcontext <END>
<BEG> return the jca messageendpointfactory to activate <END>
<BEG> return the wrapped runnable implementation <END>
<BEG> parse the given properties into a nameattribute map <END>
<BEG> set the jta transactionmanager to use as direct reference <END>
<BEG> set the jndi name of the jta transactionmanager <END>
<BEG> this implementation triggers flush callbacks, assuming that they will flush all affected orm sessions <END>
<BEG> expose whether there currently is an actual transaction active <END>
<BEG> this implementation of rollback handles participating in existing <END>
<BEG> suspend the resources of the current transaction <END>
<BEG> cleanup resources after transaction completion <END>
<BEG> set the isolation level must be one of the isolation constants <END>
<BEG> determine the rollback-only flag via checking the transaction object, provided <END>
<BEG> return whether the resource transaction is marked as rollback-only <END>
<BEG> return whether this object has an associated timeout <END>
<BEG> reset this resource holder - transactional state as well as reference count <END>
<BEG> release the lock associated with this promise <END>
<BEG> read a byte from the buffer <END>
<BEG> writes java byte-array as an ssh byte-array <END>
<BEG> returns the character set used to communicate with the remote machine for certain strings like paths <END>
<BEG> compile full template with unknown formal arguments <END>
<BEG> find an attribute in this template only <END>
<BEG> return root dir if this is group dir; return dir containing group file if this is group file this is derived from original incoming <END>
<BEG> for debug purposes <END>
<BEG> adds support for custom mapping of classes to primitive types <END>
<BEG> returns a list of repeatable annotations by type from a method <END>
<BEG> returns the url property from a contact instance <END>
<BEG> returns the format property from a fileschema instance <END>
<BEG> returns the exclusiveminimum property from a schema instance <END>
<BEG> returns the maxlength property from a schema instance <END>
<BEG> returns the pattern property from a schema instance <END>
<BEG> returns the additionalproperties property from a schema instance can be either a boolean or a schema <END>
<BEG> returns the xml property from a schema instance <END>
<BEG> returns the type property from a uuidschema instance <END>
<BEG> returns the namespace property from a xml instance <END>
<BEG> returns the prefix property from a xml instance <END>
<BEG> returns the externaldocs property from a operation instance <END>
<BEG> returns the in property from a parameter instance <END>
<BEG> returns the $ref property from an apiresponse instance <END>
<BEG> returns the authorizationurl property from a oauthflow instance <END>
<BEG> returns the clientcredentials property from a oauthflows instance <END>
<BEG> returns the url property from a server instance <END>
<BEG> outputs a histogram as bytes using a particularly cheesy encoding <END>
<BEG> return the left child of the provided node <END>
<BEG> creates an arraydigest with default page size <END>
<BEG> asserts that a condition is true if it isn't, <END>
<BEG> fails a test with the given message and wrapping the original exception <END>
<BEG> asserts that two bytes are equal if they are not, <END>
<BEG> asserts that two shorts are equal if they are not, <END>
<BEG> asserts that an object is null if it is not, <END>
<BEG> asserts that two collections contain the same elements in the same order if they do not, <END>
<BEG> the priority of a worker is the priority of the first method it's going to run <END>
<BEG> given a testng method, returns the corresponding annotation based on the method type <END>
<BEG> log a message object with the trace level including the stack trace of the throwable t passed as parameter <END>
<BEG> log a message object with the debug level <END>
<BEG> log the passed string to the html reports if the current verbosity is equal or greater than the one passed in parameter <END>
<BEG> fixme: should be removed? <END>
<BEG> sets the output directory where the reports will be created <END>
<BEG> returns true if this is the jdk 1 4 jar version of testng, false otherwise <END>
<BEG> the directory to invoke the vm in <END>
<BEG> create a list of workers to run the methods passed in parameter <END>
<BEG> returns the verbose <END>
<BEG> set the verbose <END>
<BEG> returns the test <END>
<BEG> sets the xml classes <END>
<BEG> clone the <tt>source<tt> <code>xmltest<code> by including: - test attributes - groups definitions - parameters the &lt;classes&gt; sub element is ignored for the moment <END>
<BEG> add started-at, finished-at and duration-ms attributes to the <suite> tag <END>
<BEG> returns the junit compatibility flag <END>
<BEG> schedules the method call for interruption with the configured delay <END>
<BEG> returns the number of entries in the map <END>
<BEG> the auto-compaction factor controls whether and when a table performs a <END>
<BEG> returns true if the iterator can be advanced past its current location <END>
<BEG> returns the index of the next value in the data structure or a negative value if the iterator is exhausted <END>
<BEG> returns a view on the values of the map <END>
<BEG> tests the set to determine if all of the elements in <tt>collection<tt> are present <END>
<BEG> removes and returns the value at the top of the stack <END>
<BEG> clears the stack <END>
<BEG> transforms a header index <END>
<BEG> returns a detailed message describing the error, and the internal state of the parserwriter <END>
<BEG> allows subclasses to alter the exception message that should be displayed to end users <END>
<BEG> normalizes the strings in a given array by trimming all elements and converting them to lower case <END>
<BEG> defines the number of valid records to be parsed before the process is stopped a negative value indicates there's no limit defaults to -1 <END>
<BEG> returns an instance of charappender with the configured limit of maximum characters per column and the default value used to represent a null value when the string parsed from the input is empty <END>
<BEG> indicates whether the parser should detect the line separator automatically <END>
<BEG> selects a sequence of fields for readingwriting by their names <END>
<BEG> selects a sequence of fields for readingwriting by their positions <END>
<BEG> indicates whether this settings object can automatically derive configuration options this is used, for example, to define the headers when the user <END>
<BEG> clones this configuration object to reuse user-provided settings <END>
<BEG> defines the column index being processed when the error occurred <END>
<BEG> returns the indexes of any that are part of a sequence of headers but not part of the selection <END>
<BEG> applies any validations associated with a field at a given index in a record <END>
<BEG> returns the position of a given column represented by an enumeration value <END>
<BEG> returns the next available bucket blocks until a bucket is made available or the reading process stops <END>
<BEG> returns the current lookahead value <END>
<BEG> returns the detail rows which are associated with the master row <END>
<BEG> returns the minimum row length based on the number of headers and index sizes <END>
<BEG> defines the parser configuration to be used by the routines of this utility class <END>
<BEG> allows writers of any given format to adjust its settings to take into account column headers and lengths prior to writing data in any routine <END>
<BEG> returns the total number of rows the input contains <END>
<BEG> returns the last chunk of content parsed before the error took place <END>
<BEG> converts a string to bigdecimal <END>
<BEG> converts a string to byte <END>
<BEG> removes leading and trailing white spaces from the input and returns the result <END>
<BEG> returns the field delimiter character defaults to ',' <END>
<BEG> configures the parser to process values with unescaped quotes, and stop accumulating characters and consider the value parsed when a delimiter is found <END>
<BEG> returns a flag indicating whether the parser should analyze the input to discover the column delimiter character <END>
<BEG> configures the handling of values with unescaped quotes <END>
<BEG> flag indicating whether the parser should keep enclosing quote characters in the values parsed from the input <END>
<BEG> returns whether or not leading whitespaces from quoted values should be skipped defaults to false <END>
<BEG> initializes the csv writer with csv-specific configuration <END>
<BEG> returns the character used for escaping special characters in tsv inputs: t, n, r and <END>
<BEG> returns the default tsvformat configured to handle tsv inputs <END>
<BEG> creates an array from char values <END>
<BEG> creates a bitset from boolean values <END>
<BEG> creates a linkedhashset from char values <END>
<BEG> creates a linkedhashset from int values <END>
<BEG> creates a treeset from boolean values <END>
<BEG> creates a treeset from int values <END>
<BEG> creates a vector from int values <END>
<BEG> returns the timestamp which indicated the time when this event has occured <END>
<BEG> access the servlet http session if present <p> note: never present on a client upgraderequest <END>
<BEG> get the accepted websocket protocol <END>
<BEG> get the list of extensions that should be used for the websocket <END>
<BEG> gets a string representation of the constructor <END>
<BEG> gets a string representation of the class <END>
<BEG> set a producer for this bean this operation is not threadsafe, and should not be called outside bootstrap <END>
<BEG> fire an event and notify observers that belong to this module <END>
<BEG> xml descriptor validation is enabled by default <END>
<BEG> ends the request and clears the cache this can be called before the request is over, <END>
<BEG> flushes the bean cache the cache remains available for the rest of the request <END>
<BEG> destroys dependent instance <END>
<BEG> constructs a new fastevent instance <END>
<BEG> resolves observer methods using the given resolvable <END>
<BEG> delivers the given synchronous event object to synchronous and transactional observer methods event metadata is made available for injection into <END>
<BEG> called after the computation finishes <END>
<BEG> fires an event object with given event object for given bindings <END>
<BEG> get the web bean resolver for internal use <END>
<BEG> gets a string representation of the annotation model <END>
<BEG> gets a binding type model <END>
<BEG> creates a new empty builder for building immutable sets <END>
<BEG> returns the supplied collection as a multi-row string with every tostring of every element of the collection in its own row <END>
<BEG> validates given external observer method <END>
<BEG> copy of java beans introspector#decapitalize name to reduce java desktop <END>
<BEG> startmain passes in the command line args here <END>
<BEG> packages of the specified classes will be scanned and found classes will be added to the set of bean classes for the synthetic bean archive <END>
<BEG> set the configuration property <END>
<BEG> initialize with an explicit instance <END>
<BEG> deserialize a record <END>
<BEG> shutdown the purge task <END>
<BEG> returns the snapshot directory <END>
<BEG> convenience methods to get the children <END>
<BEG> method to allow setting preallocate size of log file to pad the file <END>
<BEG> rollover the current log file to a new one <END>
<BEG> grows the file to the specified number of bytes this only happenes if <END>
<BEG> process a sync request <END>
<BEG> read attributes from a quorumpeerconfig <END>
<BEG> convenience method for creating datanode fully <END>
<BEG> the last processed zxid in the datatree <END>
<BEG> convert from long to the acl entry <END>
<BEG> set watches on the datatree <END>
<BEG> the session id for this zookeeper client instance the value returned is <END>
<BEG> add the specified scheme:auth information to this connection <END>
<BEG> close this client object once the client is closed, its session becomes <END>
<BEG> returns the local address to which the socket is bound <END>
<BEG> returns this process executor's operating system program and arguments <END>
<BEG> sets this process executor's <code>redirecterrorstream<code> property <END>
<BEG> unregister existing process event handler <END>
<BEG> changes how most common messages about starting and waiting for processes are actually logged <END>
